{"version":3,"file":"xabber.main.js","mappings":"UAAIA,ECCAC,EADAC,ECAAC,EACAC,E,8DCDJ,kq2C,6DCAA,muZ,6DCAA,oR,6DCAA,25D,6DCAA,wsE,6DCAA,igC,6DCAA,kqE,4DCAA,moB,6DCAA,y6I,6DCAA,2jF,6DCAA,iT,6DCAA,kuB,4DCAA,iY,6DCAA,ulB,6DCAA,gyK,6DCAA,o3F,6DCAA,k6B,2DCAA,o2B,6DCAA,s9uC,6DCAA,yP,6DCAA,m7B,6DCAA,6iB,6DCAA,45E,6DCAA,0sC,6DCAA,m7lB,6DCAA,8qJ,6DCAA,62D,6DCAA,i2C,6DCAA,gwI,6DCAA,y5C,6DCAA,q9E,6DCAA,0pE,4DCAA,w9B,6DCAA,ue,6DCAA,4a,6DCAA,g6E,6DCAA,we,6DCAA,quC,6DCAA,8a,6DCAA,8S,6DCAA,2K,6DCAA,47pD,6DCAA,qp6C,6DCAA,s1I,6DCAA,uS,6DCAA,q/M,6DCAA,u6C,4DCAA,6hD,6DCAA,8H,6DCAA,mtQ,6DCAA,06D,4DCAA,yF,6DCAA,oxD,6DCAA,8K,6DCAA,6S,6DCAA,kT,6DCAA,0wC,6DCAA,24B,6DCAA,ijM,4DCAA,y5C,6DCAA,8T,6DCAA,iE,6DCAA,sgB,6DCAA,6V,6DCAA,ivC,6DCAA,mkB,6DCAA,oR,6DCAA,mwB,6DCAA,of,6DCAA,oZ,6DCAA,ssF,6DCAA,muC,6DCAA,2xB,6DCAA,+Z,6DCAA,kpB,6DCAA,20B,6DCAA,6jC,6DCAA,2jD,6DCAA,w8B,6DCAA,u/C,6DCAA,0qE,6DCAA,6e,6DCAA,0J,6DCAA,66H,6DCAA,4hB,6DCAA,uhC,6DCAA,oY,4DCAA,yjB,6DCAA,y3B,6DCAA,+nC,6DCAA,87C,6DCAA,slE,6DCAA,woB,6DCAA,iE,6DCAA,qzG,6DCAA,ghE,6DCAA,8hB,6DCAA,8H,6DCAA,myB,6DCAA,6yB,6DCAA,q1E,6DCAA,yS,6DCAA,8U,6DCAA,iR,6DCAA,0/I,6DCAA,2R,6DCAA,4F,6DCAA,oS,6DCAA,y3H,4DCAA,w3V,6DCAA,kX,6DCAA,6zB,6DCAA,yrB,6DCAA,g3C,6DCAA,0Q,6DCAA,0C,6DCAA,qjK,6DCAA,o0L,6DCAA,q4F,6DCAA,qoG,6DCAA,+tK,6DCAA,oxD,6DCAA,0xE,6DCAA,wmB,6DCAA,ga,6DCAA,6pB,6DCAA,y2B,6DCAA,0kB,6DCAA,8iB,6DCAA,q1I,6DCAA,8kO,4DCAA,62G,6DCAA,wH,6DCAA,ulD,6DCAA,06C,6DCAA,u9B,6DCAA,4uD,6DCAA,mvE,6DCAA,iY,6DCAA,8jB,6DCAA,i0B,6DCAA,yL,6DCAA,qV,6DCAA,6R,6DCAA,q6E,6DCAA,0T,6DCAA,2d,6DCAA,46B,6DCAA,4X,6DCAA,+e,6DCAA,gsD,6DCAA,oQ,4DCAA,4Z,6DCAA,ygD,6DCAA,4mB,6DCAA,u6D,6DCAA,slB,6DCAA,sgD,6DCAA,2F,6DCAA,+hE,6DCAA,kX,4DCAA,kH,6DCAA,ouG,6DCAA,+mC,6DCAA,g7B,6DCAA,u0B,6DCAA,ggC,6DCAA,+3B,6DCAA,iuC,6DCAA,o3B,6DCAA,ogC,6DCAA,88B,6DCAA,g3B,6DCAA,soC,6DCAA,ytC,6DCAA,0pC,6DCAA,k8B,6DCAA,qpC,6DCAA,qnD,6DCAA,qiC,6DCAA,m9B,4DCAA,s6B,6DCAA,koC,6DCAA,s7B,6DCAA,ioC,6DCAA,o3B,6DCAA,qrB,6DCAA,uoB,6DCAA,2hB,6DCAA,2iB,6DCAA,2nB,6DCAA,yjB,6DCAA,6sB,6DCAA,qsB,6DCAA,uuB,6DCAA,utB,6DCAA,8vB,6DCAA,ovB,6DCAA,ixB,6DCAA,2vB,6DCAA,gwC,6DCAA,i8B,6DCAA,w0B,4DCAA,izB,6DCAA,o3B,6DCAA,klB,6DCAA,0uB,6DCAA,yxB,6DCAA,k+B,6DCAA,6lC,6DCAA,01B,6DCAA,6tC,6DCAA,wyB,6DCAA,2uB,6DCAA,isB,6DCAA,mqB,6DCAA,q/B,4DCAA,ktB,6DCAA,6pB,6DCAA,8/B,6DCAA,84B,6DCAA,mjB,6DCAA,ovB,6DCAA,woB,6DCAA,iqB,6DCAA,kpB,6DCAA,k0B,4DCAA,ynB,6DCAA,4sB,4DCAA,wwC,6DCAA,22B,6DCAA,gwB,6DCAA,ixB,6DCAA,knB,6DCAA,wiC,6DCAA,igC,6DCAA,kiD,6DCAA,+xB,6DCAA,64E,6DCAA,0hC,6DCAA,+3B,6DCAA,s8B,4DCAA,w0F,6DCAA,0gB,6DCAA,+8B,6DCAA,myB,6DCAA,kqB,4DCAA,krD,6DCAA,s2B,6DCAA,8uB,6DCAA,+oC,6DCAA,0zB,6DCAA,y5B,6DCAA,wtB,6DCAA,w2B,6DCAA,yzB,6DCAA,i2B,6DCAA,m3B,6DCAA,u7B,4DCAA,wgC,4DCAA,24B,6DCAA,+9C,4DCAA,y+B,6DCAA,mgC,6DCAA,k4B,4DCAA,i4C,4DCAA,8rB,6DCAA,svB,6DCAA,ogB,6DCAA,yoB,6DCAA,61C,6DCAA,6hB,6DCAA,qvB,6DCAA,07B,6DCAA,gvB,6DCAA,i8B,4DCAA,k6B,6DCAA,2f,6DCAA,+4B,6DCAA,ikC,6DCAA,qpB,6DCAA,wuB,6DCAA,gmB,6DCAA,6xL,6DCAA,68B,6DCAA,o8C,6DCAA,o4B,6DCAA,wtC,6DCAA,ktC,6DCAA,y9B,6DCAA,2oB,6DCAA,uwB,4DCAA,2kC,6DCAA,m6B,2DCAA,0uB,4DCAA,inC,4DCAA,q7B,6DCAA,2tB,6DCAA,k5B,6DCAA,0nB,6DCAA,6qB,6DCAA,4uB,4DCAA,4hB,6DCAA,u6B,6DCAA,g3D,4DCAA,6mD,6DCAA,y4C,6DCAA,6lC,6DCAA,8wB,6DCAA,86Q,6DCAA,07V,6DCAA,uN,6DCAA,2hf,YCAAC,EAAOC,QAAU,CAAC,oBAAoB,CAAC,MAAQ,CAAC,CAAC,UAAY,CAAC,6GAA6G,mBAAmB,CAAC,6HAA6H,CAAC,UAAY,CAAC,0GAA0G,mBAAmB,CAAC,wHAAwH,CAAC,UAAY,CAAC,wHAAwH,mBAAmB,CAAC,sIAAsI,CAAC,UAAY,CAAC,gIAAgI,mBAAmB,CAAC,oJAAoJ,CAAC,UAAY,CAAC,4HAA4H,mBAAmB,CAAC,0IAA0I,CAAC,UAAY,CAAC,8GAA8G,mBAAmB,CAAC,sIAAsI,CAAC,UAAY,CAAC,mHAAmH,mBAAmB,CAAC,iIAAiI,CAAC,UAAY,CAAC,6GAA6G,mBAAmB,CAAC,2HAA2H,CAAC,UAAY,CAAC,6HAA6H,mBAAmB,CAAC,2IAA2I,CAAC,UAAY,CAAC,uGAAuG,mBAAmB,CAAC,qHAAqH,CAAC,UAAY,CAAC,2GAA2G,mBAAmB,CAAC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C,YAAa,CAAC,OAAQ,YAAa,SAAU,SAAU,OAAQ,SAE/DC,YAAa,CACTC,IAAK,kwUACLC,IAAK,s6JACLC,KAAM,wyOAGVC,WAAY,CACRC,MAAO,CACH,YACA,aACA,cACA,YACA,gBACA,aACA,2BACA,qBACA,cAEJC,MAAO,CACH,cACA,YACA,YACA,YACA,aACA,YACA,yBACA,+BACA,eACA,iBACA,iBACA,yBACA,iBACA,aACA,eAEJC,MAAO,CACH,aACA,YACA,YACA,kBACA,aACA,iBACA,cACA,aACA,eAEJC,SAAU,CACN,WACA,WACA,WACA,YACA,6BACA,aACA,WACA,WACA,gBACA,sCACA,kBACA,0CACA,8CACA,sBAEJC,IAAK,CACD,mBAEJC,MAAO,CACH,iDACA,4BAEJC,QAAS,CACL,kBACA,mBACA,+BACA,oBACA,+BAEJC,aAAc,CACV,gCACA,oDAIRC,UAAW,CACP,GAAM,UACN,QAAS,UACT,QAAS,eACT,QAAS,aACT,QAAS,YACT,QAAS,WACT,QAAS,SACT,QAAS,UACT,QAAS,UACT,QAAS,QACT,QAAS,UACT,QAAS,WACT,MAAS,wBACT,QAAS,UACT,QAAS,QACT,QAAS,QACT,QAAS,QACT,SAAU,WACV,QAAS,WACT,QAAS,UACT,GAAM,QACN,QAAS,SACT,QAAS,WACT,QAAS,SACT,QAAS,UACT,QAAS,mBACT,QAAS,WACT,QAAS,WACT,QAAS,MACT,QAAS,UACT,SAAU,mBACV,QAAS,MACT,QAAS,QACT,QAAS,WACT,QAAS,SACT,QAAS,gBACT,QAAS,WACT,QAAS,aACT,QAAS,SACT,QAAS,QACT,QAAS,gBACT,QAAS,iBACT,QAAS,SACT,QAAS,aACT,QAAS,kBACT,QAAS,UACT,QAAS,mBACT,QAAS,SACT,QAAS,wBACT,QAAS,YACT,SAAU,SACV,QAAS,SACT,QAAS,UACT,SAAU,QACV,QAAS,QACT,QAAS,aACT,QAAS,cACT,QAAS,QACT,aAAc,yBACd,QAAS,kBACT,QAAS,UACT,QAAS,YACT,QAAS,QACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,SAAU,UACV,QAA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E,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,KAAOkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,KAAOkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,KAAOkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,KAAOkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAC5+I,iBAAoB,CAAC,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,KAAOkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,KAAOkR,EAAE,GAAGC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,KAAOkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,KAAOkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,KAAOkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,MAAOkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,MAAOkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,KAAOkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,IACtkF,mBAAsB,CAAC,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,MAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,KAAOkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IACzzF,gBAAmB,CAAC,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,KAAOkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IACp7E,kBAAqB,CAAC,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,KAAOkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,KAAOkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,KAAOkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,KAAOkR,EAAE,GAAGC,EAAE,IAAI,CAACnR,KAAK,KAAOkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,KAAOkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,KAAOkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,KAAOkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,KAAOkR,EAAE,GAAGC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,KAAOkR,EAAE,GAAGC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,IAAI,CAACnR,KAAK,KAAOkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,KAAOkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,KAAOkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,KAAOkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,KAAOkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,KAAOkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,KAAOkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQk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R,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,KAAOkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,KAAOkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,KAAOkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,KAAOkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACn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E,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,KAAOkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,KAAOkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,MAAOkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,KAAOkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,KAAOkR,EAAE,GAAGC,EAAE,IAAI,CAACnR,KAAK,KAAOkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,KAAOkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,KAAOkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,KAAOkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,KAAOkR,EAAE,GAAGC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,KAAOkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,IAAI,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAA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AE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,GAAGC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EAAE,EAAEC,EAAE,GAAG,CAACnR,KAAK,OAAQkR,EA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QAAQ,GAAG,SAAS,EAAE,GAAK,GAAG,GAAK,GAAG,IAAM,EAAE,IAAM,EAAE,QAAQ,GAAG,GAAK,GAAG,GAAK,GAAG,GAAK,EAAE,GAAK,GAAG,aAAa,EAAE,QAAQ,GAAG,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,SAAS,EAAE,GAAK,GAAG,GAAK,GAAG,GAAK,EAAE,GAAK,GAAG,GAAK,EAAE,QAAQ,GAAG,QAAQ,GAAG,GAAK,QAAuF,KAAnD,OAAsByyB,GAA6B,6B,iBCArvB,IAAI5yB,EAAM,CACT,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,IAED,cAAe,CACd,MACA,IAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,IACA,KAED,UAAW,CACV,MACA,MAED,cAAe,CACd,MACA,MAED,aAAc,CACb,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,KAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,MACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,KAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,KACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,oBAAqB,CACpB,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,KACA,MAED,4BAA6B,CAC5B,OAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,OAGF,SAASo1J,EAAoBl1J,GAC5B,IAAIG,EAAoBC,EAAEN,EAAKE,GAC9B,OAAOumB,QAAQ7lB,UAAUurB,MAAK,KAC7B,IAAI5rB,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,CAAC,IAIT,IAAImjC,EAAM1jC,EAAIE,GAAMC,EAAKujC,EAAI,GAC7B,OAAOjd,QAAQ3T,IAAI4wB,EAAI7vB,MAAM,GAAG7T,IAAIK,EAAoBE,IAAI4rB,MAAK,IACzD9rB,EAAoBw2B,EAAE12B,EAAI,KAEnC,CACAi1J,EAAoB10J,KAAO,IAAOC,OAAOD,KAAKV,GAC9Co1J,EAAoBj1J,GAAK,KACzBL,EAAOC,QAAUq1J,C,kBCzUjB,WAEE,KAFF,aAAqB,OAAOn9H,KAAKC,MACjC,8MACE,+B,02rBCDEm9H,EAA2B,CAAC,EAGhC,SAASh1J,EAAoBi1J,GAE5B,IAAI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","sources":["webpack://xabber.web/webpack/runtime/chunk loaded","webpack://xabber.web/webpack/runtime/create fake namespace object","webpack://xabber.web/webpack/runtime/load script","webpack://xabber.web/./templates/accounts/account_settings_modal.html","webpack://xabber.web/./templates/accounts/add_account.html","webpack://xabber.web/./templates/accounts/audio_file_waveform.html","webpack://xabber.web/./templates/accounts/avatars_gallery.html","webpack://xabber.web/./templates/accounts/change_account_password.html","webpack://xabber.web/./templates/accounts/change_password.html","webpack://xabber.web/./templates/accounts/change_status.html","webpack://xabber.web/./templates/accounts/current_token_item_modal.html","webpack://xabber.web/./templates/accounts/delete_files_media_gallery.html","webpack://xabber.web/./templates/accounts/emoji_panel.html","webpack://xabber.web/./templates/accounts/emoji_picker.html","webpack://xabber.web/./templates/accounts/emoji_picker_tabs.html","webpack://xabber.web/./templates/accounts/existing_groupchat_item.html","webpack://xabber.web/./templates/accounts/global_settings_item_modal.html","webpack://xabber.web/./templates/accounts/media_gallery_account.html","webpack://xabber.web/./templates/accounts/media_gallery_account_file.html","webpack://xabber.web/./templates/accounts/resource.html","webpack://xabber.web/./templates/accounts/resource_right.html","webpack://xabber.web/./templates/accounts/single_account_settings_modal.html","webpack://xabber.web/./templates/accounts/status_message_input_widget.html","webpack://xabber.web/./templates/accounts/token_item_modal.html","webpack://xabber.web/./templates/accounts/toolbar_item.html","webpack://xabber.web/./templates/accounts/unregister_account.html","webpack://xabber.web/./templates/accounts/webcam_panel.html","webpack://xabber.web/./templates/accounts/xmpp_login.html","webpack://xabber.web/./templates/base/about.html","webpack://xabber.web/./templates/base/backgrounds_gallery.html","webpack://xabber.web/./templates/base/color_picker.html","webpack://xabber.web/./templates/base/color_scheme.html","webpack://xabber.web/./templates/base/dialog.html","webpack://xabber.web/./templates/base/fingerprint_devices_item.html","webpack://xabber.web/./templates/base/fingerprint_item.html","webpack://xabber.web/./templates/base/fingerprints.html","webpack://xabber.web/./templates/base/fingerprints_devices.html","webpack://xabber.web/./templates/base/input_widget.html","webpack://xabber.web/./templates/base/jingle_message_calling.html","webpack://xabber.web/./templates/base/omemo_enable.html","webpack://xabber.web/./templates/base/plyr_player_popup.html","webpack://xabber.web/./templates/base/setting_emoji_font_radio_input.html","webpack://xabber.web/./templates/base/setting_language_radio_input.html","webpack://xabber.web/./templates/base/setting_radio_input.html","webpack://xabber.web/./templates/base/settings.html","webpack://xabber.web/./templates/base/settings_modal.html","webpack://xabber.web/./templates/base/toolbar.html","webpack://xabber.web/./templates/chats/add_chat_account_item.html","webpack://xabber.web/./templates/chats/chat_bottom.html","webpack://xabber.web/./templates/chats/chat_content.html","webpack://xabber.web/./templates/chats/chat_content_contact.html","webpack://xabber.web/./templates/chats/chat_content_placeholder.html","webpack://xabber.web/./templates/chats/chat_head.html","webpack://xabber.web/./templates/chats/chat_item.html","webpack://xabber.web/./templates/chats/chat_placeholder.html","webpack://xabber.web/./templates/chats/chats_panel.html","webpack://xabber.web/./templates/chats/checkbox.html","webpack://xabber.web/./templates/chats/content_encryption_warning.html","webpack://xabber.web/./templates/chats/encryption_warning.html","webpack://xabber.web/./templates/chats/ephemeral_timer_selector.html","webpack://xabber.web/./templates/chats/forward_panel.html","webpack://xabber.web/./templates/chats/group_chats/add_group_chat.html","webpack://xabber.web/./templates/chats/group_chats/invitation_panel_view.html","webpack://xabber.web/./templates/chats/group_chats/mention_item.html","webpack://xabber.web/./templates/chats/group_chats/pinned_message_panel.html","webpack://xabber.web/./templates/chats/location_popup.html","webpack://xabber.web/./templates/chats/message_item.html","webpack://xabber.web/./templates/chats/messages/attached_file.html","webpack://xabber.web/./templates/chats/messages/audio_file.html","webpack://xabber.web/./templates/chats/messages/audio_file_waveform.html","webpack://xabber.web/./templates/chats/messages/auth_request.html","webpack://xabber.web/./templates/chats/messages/file.html","webpack://xabber.web/./templates/chats/messages/file_loading.html","webpack://xabber.web/./templates/chats/messages/file_upload.html","webpack://xabber.web/./templates/chats/messages/forwarded.html","webpack://xabber.web/./templates/chats/messages/group_request.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-2.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-3.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-4.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-5.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-6.html","webpack://xabber.web/./templates/chats/messages/images_details.html","webpack://xabber.web/./templates/chats/messages/link_reference.html","webpack://xabber.web/./templates/chats/messages/link_reference_chat.html","webpack://xabber.web/./templates/chats/messages/loading_circle.html","webpack://xabber.web/./templates/chats/messages/location.html","webpack://xabber.web/./templates/chats/messages/main.html","webpack://xabber.web/./templates/chats/messages/saved_main.html","webpack://xabber.web/./templates/chats/messages/searched.html","webpack://xabber.web/./templates/chats/messages/system.html","webpack://xabber.web/./templates/chats/messages/template-for-2.html","webpack://xabber.web/./templates/chats/messages/template-for-3.html","webpack://xabber.web/./templates/chats/messages/template-for-4.html","webpack://xabber.web/./templates/chats/messages/template-for-5.html","webpack://xabber.web/./templates/chats/messages/template-for-6.html","webpack://xabber.web/./templates/chats/messages/video.html","webpack://xabber.web/./templates/chats/messages/voice_message.html","webpack://xabber.web/./templates/chats/saved_chat_head.html","webpack://xabber.web/./templates/chats/send_media.html","webpack://xabber.web/./templates/chats/subscription_buttons.html","webpack://xabber.web/./templates/chats/unread_marker.html","webpack://xabber.web/./templates/contacts/account_roster_left.html","webpack://xabber.web/./templates/contacts/account_roster_right.html","webpack://xabber.web/./templates/contacts/add_contact.html","webpack://xabber.web/./templates/contacts/add_contact_account_item.html","webpack://xabber.web/./templates/contacts/audio_file_waveform.html","webpack://xabber.web/./templates/contacts/contact_blocked_item.html","webpack://xabber.web/./templates/contacts/contact_details_right.html","webpack://xabber.web/./templates/contacts/contact_left_item.html","webpack://xabber.web/./templates/contacts/contact_placeholder.html","webpack://xabber.web/./templates/contacts/contact_right_item.html","webpack://xabber.web/./templates/contacts/edit_contact.html","webpack://xabber.web/./templates/contacts/edit_group.html","webpack://xabber.web/./templates/contacts/group_chats/add_blocked_participant_form.html","webpack://xabber.web/./templates/contacts/group_chats/badge_edit_view.html","webpack://xabber.web/./templates/contacts/group_chats/default_restrictions.html","webpack://xabber.web/./templates/contacts/group_chats/default_restrictions_right.html","webpack://xabber.web/./templates/contacts/group_chats/description_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/file_item.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_details.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_details_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties_edit.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_member_item.html","webpack://xabber.web/./templates/contacts/group_chats/group_member_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_name_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/group_status.html","webpack://xabber.web/./templates/contacts/group_chats/group_status_right.html","webpack://xabber.web/./templates/contacts/group_chats/invitation.html","webpack://xabber.web/./templates/contacts/group_chats/invited_member_item.html","webpack://xabber.web/./templates/contacts/group_chats/participant_badge_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_item.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_right.html","webpack://xabber.web/./templates/contacts/group_chats/participant_rights.html","webpack://xabber.web/./templates/contacts/group_chats/participants.html","webpack://xabber.web/./templates/contacts/group_chats/participants_right_panel.html","webpack://xabber.web/./templates/contacts/group_chats/pinned_message.html","webpack://xabber.web/./templates/contacts/group_chats/private_participant_details.html","webpack://xabber.web/./templates/contacts/group_chats/private_participant_details_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/restriction_item.html","webpack://xabber.web/./templates/contacts/group_chats/right_expire_variants.html","webpack://xabber.web/./templates/contacts/group_chats/set_status.html","webpack://xabber.web/./templates/contacts/group_chats/status_item.html","webpack://xabber.web/./templates/contacts/group_left.html","webpack://xabber.web/./templates/contacts/group_right.html","webpack://xabber.web/./templates/contacts/group_settings.html","webpack://xabber.web/./templates/contacts/groups.html","webpack://xabber.web/./templates/contacts/groups_checkbox_list.html","webpack://xabber.web/./templates/contacts/groups_checkbox_list_contact.html","webpack://xabber.web/./templates/contacts/groups_list.html","webpack://xabber.web/./templates/contacts/groups_new_group.html","webpack://xabber.web/./templates/contacts/media_item.html","webpack://xabber.web/./templates/contacts/media_items_empty.html","webpack://xabber.web/./templates/contacts/preloader.html","webpack://xabber.web/./templates/contacts/roster_left.html","webpack://xabber.web/./templates/contacts/roster_right.html","webpack://xabber.web/./templates/contacts/roster_settings.html","webpack://xabber.web/./templates/mentions/mention_item.html","webpack://xabber.web/./templates/mentions/mentions_panel.html","webpack://xabber.web/./templates/mentions/mentions_placeholder.html","webpack://xabber.web/./templates/searching/existing_groupchat_details_view.html","webpack://xabber.web/./templates/searching/existing_groupchat_item.html","webpack://xabber.web/./templates/searching/searching_account_item.html","webpack://xabber.web/./templates/searching/searching_wide.html","webpack://xabber.web/./templates/svg/account-cancel.html","webpack://xabber.web/./templates/svg/account-outline.html","webpack://xabber.web/./templates/svg/account.html","webpack://xabber.web/./templates/svg/address-outline.html","webpack://xabber.web/./templates/svg/address.html","webpack://xabber.web/./templates/svg/alarm-bell.html","webpack://xabber.web/./templates/svg/alert-circle.html","webpack://xabber.web/./templates/svg/bell-off.html","webpack://xabber.web/./templates/svg/bell-sleep.html","webpack://xabber.web/./templates/svg/bell.html","webpack://xabber.web/./templates/svg/birthday-outline.html","webpack://xabber.web/./templates/svg/birthday.html","webpack://xabber.web/./templates/svg/blocked-add.html","webpack://xabber.web/./templates/svg/blocked.html","webpack://xabber.web/./templates/svg/bot-variant.html","webpack://xabber.web/./templates/svg/bot.html","webpack://xabber.web/./templates/svg/bug.html","webpack://xabber.web/./templates/svg/call-outline.html","webpack://xabber.web/./templates/svg/call.html","webpack://xabber.web/./templates/svg/camera-retake.html","webpack://xabber.web/./templates/svg/camera.html","webpack://xabber.web/./templates/svg/cancel.html","webpack://xabber.web/./templates/svg/channel.html","webpack://xabber.web/./templates/svg/chat.html","webpack://xabber.web/./templates/svg/check-circle.html","webpack://xabber.web/./templates/svg/check.html","webpack://xabber.web/./templates/svg/chevron-down.html","webpack://xabber.web/./templates/svg/chevron-left-variant.html","webpack://xabber.web/./templates/svg/chevron-right-variant.html","webpack://xabber.web/./templates/svg/circle-slice-1.html","webpack://xabber.web/./templates/svg/circle-slice-2.html","webpack://xabber.web/./templates/svg/circle-slice-3.html","webpack://xabber.web/./templates/svg/circle-slice-4.html","webpack://xabber.web/./templates/svg/circle-slice-5.html","webpack://xabber.web/./templates/svg/circle-slice-6.html","webpack://xabber.web/./templates/svg/circle-slice-7.html","webpack://xabber.web/./templates/svg/circle-slice-8.html","webpack://xabber.web/./templates/svg/circles-outline.html","webpack://xabber.web/./templates/svg/circles.html","webpack://xabber.web/./templates/svg/client-outline.html","webpack://xabber.web/./templates/svg/client.html","webpack://xabber.web/./templates/svg/clock-outline.html","webpack://xabber.web/./templates/svg/close.html","webpack://xabber.web/./templates/svg/cloud.html","webpack://xabber.web/./templates/svg/contact-add.html","webpack://xabber.web/./templates/svg/crosshairs-gps.html","webpack://xabber.web/./templates/svg/crosshairs-question.html","webpack://xabber.web/./templates/svg/crosshairs.html","webpack://xabber.web/./templates/svg/database-lock.html","webpack://xabber.web/./templates/svg/database.html","webpack://xabber.web/./templates/svg/description-outline.html","webpack://xabber.web/./templates/svg/description.html","webpack://xabber.web/./templates/svg/device-cellphone.html","webpack://xabber.web/./templates/svg/device-console.html","webpack://xabber.web/./templates/svg/device-desktop.html","webpack://xabber.web/./templates/svg/device-tablet.html","webpack://xabber.web/./templates/svg/device-web.html","webpack://xabber.web/./templates/svg/devices.html","webpack://xabber.web/./templates/svg/download.html","webpack://xabber.web/./templates/svg/edit-outline.html","webpack://xabber.web/./templates/svg/edit.html","webpack://xabber.web/./templates/svg/email-outline.html","webpack://xabber.web/./templates/svg/email.html","webpack://xabber.web/./templates/svg/expires.html","webpack://xabber.web/./templates/svg/file-audio.html","webpack://xabber.web/./templates/svg/file-document.html","webpack://xabber.web/./templates/svg/file-pdf.html","webpack://xabber.web/./templates/svg/file-presentation.html","webpack://xabber.web/./templates/svg/file-video.html","webpack://xabber.web/./templates/svg/file-zip.html","webpack://xabber.web/./templates/svg/file.html","webpack://xabber.web/./templates/svg/fullname-outline.html","webpack://xabber.web/./templates/svg/fullname.html","webpack://xabber.web/./templates/svg/group-incognito.html","webpack://xabber.web/./templates/svg/group-invite.html","webpack://xabber.web/./templates/svg/group-private.html","webpack://xabber.web/./templates/svg/group-public.html","webpack://xabber.web/./templates/svg/history.html","webpack://xabber.web/./templates/svg/ic-at.html","webpack://xabber.web/./templates/svg/ic-jabber.html","webpack://xabber.web/./templates/svg/ic-searching.html","webpack://xabber.web/./templates/svg/id-outline.html","webpack://xabber.web/./templates/svg/id.html","webpack://xabber.web/./templates/svg/image.html","webpack://xabber.web/./templates/svg/index.html","webpack://xabber.web/./templates/svg/information-outline.html","webpack://xabber.web/./templates/svg/information.html","webpack://xabber.web/./templates/svg/invite-outline.html","webpack://xabber.web/./templates/svg/invite.html","webpack://xabber.web/./templates/svg/job-outline.html","webpack://xabber.web/./templates/svg/job.html","webpack://xabber.web/./templates/svg/key-variant.html","webpack://xabber.web/./templates/svg/key.html","webpack://xabber.web/./templates/svg/link.html","webpack://xabber.web/./templates/svg/lock-alert.html","webpack://xabber.web/./templates/svg/lock-check.html","webpack://xabber.web/./templates/svg/lock-cross.html","webpack://xabber.web/./templates/svg/lock-open.html","webpack://xabber.web/./templates/svg/lock-question.html","webpack://xabber.web/./templates/svg/lock.html","webpack://xabber.web/./templates/svg/map-marker-outline.html","webpack://xabber.web/./templates/svg/map-marker.html","webpack://xabber.web/./templates/svg/membership-outline.html","webpack://xabber.web/./templates/svg/message-bookmark-outline.html","webpack://xabber.web/./templates/svg/message-group.html","webpack://xabber.web/./templates/svg/minus.html","webpack://xabber.web/./templates/svg/mobile.html","webpack://xabber.web/./templates/svg/palette.html","webpack://xabber.web/./templates/svg/pause.html","webpack://xabber.web/./templates/svg/picture-in-picture-bottom-right.html","webpack://xabber.web/./templates/svg/picture-in-picture-minimize.html","webpack://xabber.web/./templates/svg/picture-in-picture-top-right.html","webpack://xabber.web/./templates/svg/pinned-circle-small.html","webpack://xabber.web/./templates/svg/pinned.html","webpack://xabber.web/./templates/svg/play.html","webpack://xabber.web/./templates/svg/player-float.html","webpack://xabber.web/./templates/svg/player-full.html","webpack://xabber.web/./templates/svg/player-mini-variant.html","webpack://xabber.web/./templates/svg/player-mini.html","webpack://xabber.web/./templates/svg/plus.html","webpack://xabber.web/./templates/svg/plyr.html","webpack://xabber.web/./templates/svg/qrcode.html","webpack://xabber.web/./templates/svg/restrictions-outline.html","webpack://xabber.web/./templates/svg/rss-variant.html","webpack://xabber.web/./templates/svg/rss.html","webpack://xabber.web/./templates/svg/saved-messages.html","webpack://xabber.web/./templates/svg/search.html","webpack://xabber.web/./templates/svg/security.html","webpack://xabber.web/./templates/svg/server.html","webpack://xabber.web/./templates/svg/star-face.html","webpack://xabber.web/./templates/svg/status-outline.html","webpack://xabber.web/./templates/svg/status.html","webpack://xabber.web/./templates/svg/subscription-from.html","webpack://xabber.web/./templates/svg/subscription-to.html","webpack://xabber.web/./templates/svg/task.html","webpack://xabber.web/./templates/svg/translate.html","webpack://xabber.web/./templates/svg/trash.html","webpack://xabber.web/./templates/svg/video.html","webpack://xabber.web/./templates/svg/volume-high.html","webpack://xabber.web/./templates/svg/volume-off-variant.html","webpack://xabber.web/./templates/svg/volume-off.html","webpack://xabber.web/./templates/svg/web-cancel.html","webpack://xabber.web/./templates/svg/web.html","webpack://xabber.web/./templates/svg/xabber-offline.html","webpack://xabber.web/./templates/svg/xabber-online.html","webpack://xabber.web/./templates/svg/xmpp.html","webpack://xabber.web/./templates/vcard/vcard.html","webpack://xabber.web/./templates/vcard/vcard_edit_modal.html","webpack://xabber.web/./templates/vcard/vcard_modal.html","webpack://xabber.web/./templates/vcard/vcard_right.html","webpack://xabber.web/./xmls/background-images.xml","webpack://xabber.web/./xmls/background-patterns.xml","webpack://xabber.web/./sounds/attention/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./sounds/dialtones/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./sounds/notifications/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./sounds/ringtones/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./sounds/system/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./src/constants.js","webpack://xabber.web/./src/dependencies.js","webpack://xabber.web/./src/templates.js","webpack://xabber.web/./src/sounds.js","webpack://xabber.web/./src/utils/emoji.js","webpack://xabber.web/./src/utils/images.js","webpack://xabber.web/./src/utils/modals.js","webpack://xabber.web/./src/utils/textarea.js","webpack://xabber.web/./src/utils/utils.js","webpack://xabber.web/./src/environment.js","webpack://xabber.web/./src/core.js","webpack://xabber.web/./src/views.js","webpack://xabber.web/./src/api-service.js","webpack://xabber.web/./src/strophe.js","webpack://xabber.web/./src/vcard.js","webpack://xabber.web/./src/accounts.js","webpack://xabber.web/./src/discovery.js","webpack://xabber.web/./src/contacts.js","webpack://xabber.web/./src/chats.js","webpack://xabber.web/./src/searching.js","webpack://xabber.web/./src/mentions.js","webpack://xabber.web/./src/ui.js","webpack://xabber.web/./src/omemo.js","webpack://xabber.web/./src/xabber.js","webpack://xabber.web/./templates/ sync ^\\.\\/.*\\.json$","webpack://xabber.web/ ^\\.\\/.*\\.html$","webpack://xabber.web/./translations/translation_progress.js","webpack://xabber.web/./translations/ lazy ^\\.\\/.*\\.js$ namespace object","webpack://xabber.web/./version.js","webpack://xabber.web/webpack/bootstrap","webpack://xabber.web/webpack/runtime/amd options","webpack://xabber.web/webpack/runtime/compat get default export","webpack://xabber.web/webpack/runtime/define property getters","webpack://xabber.web/webpack/runtime/ensure chunk","webpack://xabber.web/webpack/runtime/get javascript chunk filename","webpack://xabber.web/webpack/runtime/get mini-css chunk filename","webpack://xabber.web/webpack/runtime/global","webpack://xabber.web/webpack/runtime/harmony module decorator","webpack://xabber.web/webpack/runtime/hasOwnProperty shorthand","webpack://xabber.web/webpack/runtime/make namespace object","webpack://xabber.web/webpack/runtime/node module decorator","webpack://xabber.web/webpack/runtime/publicPath","webpack://xabber.web/webpack/runtime/jsonp chunk loading","webpack://xabber.web/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"xabber.web:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t};\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","export default \"<div class=\\\"background-overlay\\\"></div>\\n<div class=\\\"settings-panel\\\">\\n    <div class=\\\"settings-transition-wrap\\\">\\n        <div class=\\\"left-column settings-column noselect\\\">\\n            <div class=\\\"settings-account-head\\\">\\n                <i class=\\\"btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <div class=\\\"name one-line\\\"></div>\\n                <svg class=\\\"btn-color-picker dropdown-button mdi mdi-24px mdi-svg-template\\\" data-activates=\\\"color-picker-dropdown\\\" data-svgname=\\\"palette\\\"></svg>\\n                <ul id=\\\"color-picker-dropdown\\\" class=\\\"dropdown-content color-picker-dropdown bootstrap-dropdown noselect\\\">\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"red\\\">\\n                        <span class=\\\"one-line text-color-red-700\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"pink\\\">\\n                        <span class=\\\"one-line text-color-pink-700\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"purple\\\">\\n                        <span class=\\\"one-line text-color-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"deep-purple\\\">\\n                        <span class=\\\"one-line text-color-deep-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"indigo\\\">\\n                        <span class=\\\"one-line text-color-indigo-700\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"blue\\\">\\n                        <span class=\\\"one-line text-color-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"light-blue\\\">\\n                        <span class=\\\"one-line text-color-light-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"cyan\\\">\\n                        <span class=\\\"one-line text-color-cyan-700\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"teal\\\">\\n                        <span class=\\\"one-line text-color-teal-700\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"green\\\">\\n                        <span class=\\\"one-line text-color-green-700\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"light-green\\\">\\n                        <span class=\\\"one-line text-color-light-green-700\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"lime\\\">\\n                        <span class=\\\"one-line text-color-lime-700\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"amber\\\">\\n                        <span class=\\\"one-line text-color-amber-700\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"orange\\\">\\n                        <span class=\\\"one-line text-color-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"deep-orange\\\">\\n                        <span class=\\\"one-line text-color-deep-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"brown\\\">\\n                        <span class=\\\"one-line text-color-brown-700\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"blue-grey\\\">\\n                        <span class=\\\"one-line text-color-blue-grey-700\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                </ul>\\n                <svg class=\\\"btn-qr-code mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n                <div class=\\\"field clickable-field enabled-state switch normal\\\">\\n                    <label class=\\\"field-value\\\">\\n                        <input type=\\\"checkbox\\\">\\n                        <span class=\\\"lever\\\"></span>\\n                    </label>\\n                </div>\\n            </div>\\n            <div class=\\\"main-info-wrap account-main-info-wrap\\\">\\n                <div class=\\\"picture-wrap\\\">\\n                    <div class=\\\"avatar-wrap\\\">\\n                        <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                            <img/>\\n                            <input type=\\\"file\\\"/>\\n                            <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown dropdown-content noselect\\\">\\n                                <div class=\\\"btn-emoji-panel property-variant\\\">\\n                                    {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                                </div>\\n                                <div class=\\\"btn-selfie property-variant\\\">\\n                                    {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                                </div>\\n                                <div class=\\\"btn-choose-image property-variant\\\">\\n                                    {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                                </div>\\n                            </ul>\\n                            <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                                <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                            </svg>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"name one-line\\\"></div>\\n                <div class=\\\"jid one-line\\\"></div>\\n            </div>\\n            <div class=\\\"settings-tabs-wrap\\\">\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"profile\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__profile_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"media-gallery\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cloud\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"encryption\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption\\\"))]}</div>\\n                    <div class=\\\"settings-block-label hidden label-encryption-enabled one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_enabled_label\\\"))]}</div>\\n                    <div class=\\\"settings-block-label label-encryption-disabled one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_disabled_label\\\"))]}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"devices-wrap hidden\\\">\\n                <div class=\\\"device-encryption-warning hidden\\\" data-not-trusted-count=\\\"0\\\">\\n                    <svg class=\\\"device-encryption-icon mdi mdi-40px mdi-svg-template\\\" data-svgname=\\\"alert-circle\\\"></svg>\\n                    <div class=\\\"device-encryption-warning-name one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_warning_header\\\"))]}</div>\\n                    <div class=\\\"device-encryption-warning-label\\\"></div>\\n                </div>\\n                <div class=\\\"tokens-wrap\\\">\\n                    <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings_account__label_this_device\\\"))]}</div>\\n                    <div class=\\\"current-token-wrap\\\">\\n                        <div class=\\\"sessions-wrap current-session selectable-text\\\"></div>\\n                        <div class=\\\"btn-revoke-all-tokens settings-button-devices\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"restrictions-outline\\\"></svg>\\n                            <div class=\\\"settings-button-devices-label\\\">{[print(xabber.getString(\\\"account_terminate_all_sessions\\\"))]}</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-panel-label active-sessions-label\\\">{[print(xabber.getString(\\\"settings_account__label_active_sessions\\\"))]}</div>\\n                    <div class=\\\"all-sessions-wrap\\\">\\n                        <div class=\\\"sessions-wrap all-sessions selectable-text\\\"></div>\\n                    </div>\\n                    <div class=\\\"orphaned-fingerprints hidden\\\">\\n                        <div class=\\\"orphaned-fingerprints-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__legacy_encryption_label\\\"))]}</div>\\n                        <div class=\\\"orphaned-fingerprints-wrap selectable-text\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"settings-tabs-wrap\\\">\\n                <div class=\\\"settings-tab settings-deletion-button delete-account\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                    </div>\\n                    <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings_account__button_quit_account\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"right-column settings-column noselect\\\">\\n            <div class=\\\"settings-panel-head\\\">\\n                <i class=\\\"btn-back-settings mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <i class=\\\"btn-back-subsettings-account mdi mdi-24px mdi-arrow-left hidden\\\"></i>\\n                <span class=\\\"settings-panel-head-title\\\">{[print(xabber.getString(\\\"account_editor\\\"))]}</span>\\n                <i class=\\\"btn-sorting dropdown-button mdi mdi-24px mdi-sort hidden\\\" data-activates=\\\"storage-file-sorting\\\"></i>\\n                <ul id=\\\"storage-file-sorting\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n                    <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-id\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_new\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-size\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_size\\\"))]}</span>\\n                    </div>\\n                </ul>\\n                <div class=\\\"btn-more media-gallery-button dropdown-button hidden\\\" data-activates=\\\"storage-actions\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n                </div>\\n                <ul id=\\\"storage-actions\\\" class=\\\"dropdown-content noselect\\\">\\n                    <div class=\\\"property-variant btn-select-files hidden\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_select_files\\\"))]}</span>\\n                    </div>\\n                </ul>\\n            </div>\\n\\n            <div class=\\\"panel-content-wrap\\\">\\n                <div class=\\\"panel-content details-panel\\\">\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}' class=\\\"settings-block-wrap profile\\\">\\n                        <div class=\\\"settings-tabs-wrap\\\">\\n                            <div class=\\\"settings-tab settings-non-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"status\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"status\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__status_subheader\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"vcard-tab\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__edit_profile\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__edit_profile_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"password\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__password_subheader\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__password_subheader_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"blocklist\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"block_list\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"circles-groups\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles-outline\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"capabitilies\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__capabilities_subheader\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__capabilities_subheader_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab unregister-account settings-deletion-button settings-non-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"delete-account\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name settings-block-name-single one-line\\\">{[print(xabber.getString(\\\"settings_account__delete_account_subheader\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__status_subheader\\\"))]}' class=\\\"settings-block-wrap status\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"status-wrap setting\\\"></div>\\n                            <div class=\\\"status\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__edit_profile\\\"))]}' class=\\\"settings-block-wrap vcard-tab\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"vcard\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"block-list-view-wrap\\\">\\n                        <div data-header='{[print(xabber.getString(\\\"block_list\\\"))]}' data-parent-block=\\\"profile\\\" class=\\\"settings-block-wrap blocklist\\\">\\n                            <div class=\\\"settings-subblock-wrap\\\">\\n                                <div class=\\\"blocklist-info\\\">\\n                                    <div class=\\\"blocklist-wrap\\\">\\n                                        <div class=\\\"buttons-wrap\\\">\\n                                            <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tabs-wrap\\\">\\n                                <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-contacts\\\">\\n                                    <div class=\\\"setting-icon-background\\\">\\n                                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-cancel\\\"></svg>\\n                                    </div>\\n                                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_contacts\\\"))]}</div>\\n                                    <div class=\\\"settings-block-label one-line\\\"></div>\\n                                </div>\\n                                <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-domains\\\">\\n                                    <div class=\\\"setting-icon-background\\\">\\n                                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"web-cancel\\\"></svg>\\n                                    </div>\\n                                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_domains\\\"))]}</div>\\n                                    <div class=\\\"settings-block-label one-line\\\"></div>\\n                                </div>\\n                                <div class=\\\"settings-tab hidden\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-invitations\\\">\\n                                    <div class=\\\"setting-icon-background\\\">\\n                                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"invite\\\"></svg>\\n                                    </div>\\n                                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_invitations\\\"))]}</div>\\n                                    <div class=\\\"settings-block-label one-line\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_contacts\\\"))]}' data-block-name=\\\"blocklist-contacts\\\" class=\\\"settings-block-wrap blocklist-contacts\\\">\\n                            <div class=\\\"settings-subblock-wrap\\\">\\n                                <div class=\\\"blocklist-info\\\">\\n                                    <div class=\\\"blocklist-wrap\\\">\\n                                        <div class=\\\"buttons-wrap\\\">\\n                                            <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                            <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                            <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                        </div>\\n                                        <div class=\\\"blocked-items\\\">\\n                                            <div class=\\\"blocked-contacts-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_contacts_empty\\\"))]}</div>\\n                                            <div class=\\\"blocked-items-container blocked-contacts-wrap\\\" data-tab-name=\\\"contacts-item\\\">\\n                                                <div class=\\\"blocked-contacts blocked-list\\\"></div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_domains\\\"))]}' data-block-name=\\\"blocklist-domains\\\" class=\\\"settings-block-wrap blocklist-domains\\\">\\n                            <div class=\\\"settings-subblock-wrap\\\">\\n                                <div class=\\\"blocklist-info\\\">\\n                                    <div class=\\\"blocklist-wrap\\\">\\n                                        <div class=\\\"buttons-wrap\\\">\\n                                            <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                            <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                            <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                        </div>\\n                                        <div class=\\\"blocked-items\\\">\\n                                            <div class=\\\"blocked-domains-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_domains_empty\\\"))]}</div></div>\\n                                        <div class=\\\"blocked-items-container blocked-domains-wrap\\\" data-tab-name=\\\"domains-item\\\">\\n                                            <div class=\\\"blocked-domains blocked-list\\\"></div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_invitations\\\"))]}' data-block-name=\\\"blocklist-invitations\\\" class=\\\"settings-block-wrap blocklist-invitations\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"blocklist-info\\\">\\n                                <div class=\\\"blocklist-wrap\\\">\\n                                    <div class=\\\"buttons-wrap\\\">\\n                                        <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                        <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                        <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                    </div>\\n                                    <div class=\\\"blocked-items\\\">\\n                                        <div class=\\\"blocked-invitations-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_invitations_empty\\\"))]}</div>\\n                                        <div class=\\\"blocked-items-container blocked-invitations-wrap\\\" data-tab-name=\\\"invitations-item\\\">\\n                                            <div class=\\\"blocked-invitations blocked-list\\\"></div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}' class=\\\"settings-block-wrap circles-groups\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"groups-info\\\">\\n                                <div class=\\\"groups-wrap\\\">\\n                                    <div class=\\\"groups\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__capabilities_subheader\\\"))]}' class=\\\"settings-block-wrap capabitilies\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"server-info\\\">\\n                                <div class=\\\"capabilities-wrap\\\">\\n                                    <div class=\\\"capabilities\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"color\\\"))]}' class=\\\"settings-block-wrap color-scheme\\\">\\n                        <div class=\\\"color-scheme-wrap\\\">\\n                            <div class=\\\"account-color\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"red\\\" type=\\\"radio\\\" id=\\\"color-red\\\" />\\n                                            <label class=\\\"text-color-red-700\\\" for=\\\"color-red\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"pink\\\" type=\\\"radio\\\" id=\\\"color-pink\\\" />\\n                                            <label class=\\\"text-color-pink-700\\\" for=\\\"color-pink\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"purple\\\" type=\\\"radio\\\" id=\\\"color-purple\\\" />\\n                                            <label class=\\\"text-color-purple-700\\\" for=\\\"color-purple\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-purple\\\" type=\\\"radio\\\" id=\\\"color-deep-purple\\\" />\\n                                            <label class=\\\"text-color-deep-purple-700\\\" for=\\\"color-deep-purple\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"indigo\\\" type=\\\"radio\\\" id=\\\"color-indigo\\\" />\\n                                            <label class=\\\"text-color-indigo-700\\\" for=\\\"color-indigo\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue\\\" type=\\\"radio\\\" id=\\\"color-blue\\\" />\\n                                            <label class=\\\"text-color-blue-700\\\" for=\\\"color-blue\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-blue\\\" type=\\\"radio\\\" id=\\\"color-light-blue\\\" />\\n                                            <label class=\\\"text-color-light-blue-700\\\" for=\\\"color-light-blue\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"cyan\\\" type=\\\"radio\\\" id=\\\"color-cyan\\\" />\\n                                            <label class=\\\"text-color-cyan-700\\\" for=\\\"color-cyan\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"teal\\\" type=\\\"radio\\\" id=\\\"color-teal\\\" />\\n                                            <label class=\\\"text-color-teal-700\\\" for=\\\"color-teal\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"green\\\" type=\\\"radio\\\" id=\\\"color-green\\\" />\\n                                            <label class=\\\"text-color-green-700\\\" for=\\\"color-green\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-green\\\" type=\\\"radio\\\" id=\\\"color-light-green\\\" />\\n                                            <label class=\\\"text-color-light-green-700\\\" for=\\\"color-light-green\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"lime\\\" type=\\\"radio\\\" id=\\\"color-lime\\\" />\\n                                            <label class=\\\"text-color-lime-700\\\" for=\\\"color-lime\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"amber\\\" type=\\\"radio\\\" id=\\\"color-amber\\\" />\\n                                            <label class=\\\"text-color-amber-700\\\" for=\\\"color-amber\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"orange\\\" type=\\\"radio\\\" id=\\\"color-orange\\\" />\\n                                            <label class=\\\"text-color-orange-700\\\" for=\\\"color-orange\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-orange\\\" type=\\\"radio\\\" id=\\\"color-deep-orange\\\" />\\n                                            <label class=\\\"text-color-deep-orange-700\\\" for=\\\"color-deep-orange\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"brown\\\" type=\\\"radio\\\" id=\\\"color-brown\\\" />\\n                                            <label class=\\\"text-color-brown-700\\\" for=\\\"color-brown\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue-grey\\\" type=\\\"radio\\\" id=\\\"color-blue-grey\\\" />\\n                                            <label class=\\\"text-color-blue-grey-700\\\" for=\\\"color-blue-grey\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__encryption\\\"))]}' class=\\\"settings-block-wrap encryption\\\">\\n                        <div class=\\\"btn-more device-more-button dropdown-button\\\" data-activates=\\\"device-omemo-actions\\\">\\n                            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n                        </div>\\n                        <ul id=\\\"device-omemo-actions\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n                            <div class=\\\"property-variant btn-manage-devices\\\">\\n                                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_manage_devices\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"property-variant btn-purge-keys\\\">\\n                                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_purge_keys\\\"))]}</span>\\n                            </div>\\n                        </ul>\\n                        <div class=\\\"omemo-settings-wrap\\\">\\n                            <div class=\\\"settings\\\">\\n                                <div class=\\\"setting-wrap omemo-enable\\\">\\n                                    <span>{[print(xabber.getString(\\\"omemo__settings__toggle_enable_encryption\\\"))]}</span>\\n                                    <div class=\\\"field setting-use-omemo switch normal\\\">\\n                                        <label class=\\\"field-value\\\">\\n                                            <input type=\\\"checkbox\\\">\\n                                            <span class=\\\"lever\\\"></span>\\n                                        </label>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"setting-wrap send-chat-states\\\">\\n                                    <span>{[print(xabber.getString(\\\"omemo__settings__toggle_send_typing_notifications\\\"))]}</span>\\n                                    <div class=\\\"field setting-send-chat-states switch normal\\\">\\n                                        <label class=\\\"field-value\\\">\\n                                            <input type=\\\"checkbox\\\">\\n                                            <span class=\\\"lever\\\"></span>\\n                                        </label>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}' class=\\\"settings-block-wrap media-gallery\\\">\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__device_information\\\"))]}' class=\\\"settings-block-wrap device-information hidden\\\">\\n                        <div class=\\\"device-information-trust-text-wrap\\\">\\n                            <div class=\\\"device-information-trust-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-wrap\\\">\\n                            <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings_account__device_information\\\"))]}</div>\\n                            <div class=\\\"device-information-items-wrap device-information-basic\\\">\\n                                <div class=\\\"device-information-item device-information-status\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"status\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__status__label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-last-seen\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"history\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__status__label_last_seen\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-client\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"id\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__client__label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-ip\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__ip__label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-expires\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"expires\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__expire__label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-panel-label device-information-security-label\\\">{[print(xabber.getString(\\\"settings__menu_item__security\\\"))]}</div>\\n                            <div class=\\\"device-information-items-wrap device-information-encryption\\\">\\n                                <div class=\\\"device-information-item device-information-device-id\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"settings_account__device_information_device_id\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-fingerprint hidden\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"lock\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__fingerprint_label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text device-information-fingerprint-text\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab device-information-trust settings-deletion-button\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-alert\\\" data-svgname=\\\"lock-alert\\\"></svg>\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-check\\\" data-svgname=\\\"lock-check\\\"></svg>\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-cross\\\" data-svgname=\\\"lock-cross\\\"></svg>\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-question\\\" data-svgname=\\\"lock-question\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings_account__identity_verification\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab btn-revoke-token settings-deletion-button\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"device__info__terminate_session__button\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_add\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content login-panel-form\\\">\\n\\n        <div class=\\\"login-form-jid\\\">\\n            <div class=\\\"login-form-step-wrap\\\">\\n                <div class=\\\"input-field-wrap\\\">\\n                    <div class=\\\"input-field input-field-jid\\\">\\n                        <input id=\\\"jid\\\" placeholder='{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}' type=\\\"text\\\" name=\\\"jid\\\">\\n                        <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                            <div class=\\\"select-auth-xmpp-server\\\">\\n                                <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                                <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                                    <input id=\\\"sign_in_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"sign_in_domain\\\">\\n                                </div>\\n                                <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"caret\\\">\\n                                    <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                                    <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                                </div>\\n                            </div>\\n                            <div id=\\\"select-auth-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                                <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"input-field\\\">\\n                        <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"login-form-step-error login-jid-error hidden\\\"></div>\\n                <div class=\\\"login-form-step-error login-password-error hidden\\\"></div>\\n                <div class=\\\"login-form-step-description\\\"></div>\\n                <div class=\\\"login-step-wrap hidden\\\">\\n                    <div class=\\\"login-step connecting-step\\\">\\n                        <div class=\\\"login-step-text\\\">\\n                            {[print(xabber.getString(\\\"dialog_jingle_message__status_communicating\\\"))]}\\n                        </div>\\n                        <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                    </div>\\n                    <div class=\\\"login-step credentials-step\\\">\\n                        <div class=\\\"login-step-text\\\">\\n                            {[print(xabber.getString(\\\"dialog_jingle_message__status_checking_credentials\\\"))]}\\n                        </div>\\n                        <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"login-form-server-features hidden\\\">\\n            <div class=\\\"register-form-step-wrap\\\">\\n                <div class=\\\"register-form-step-header\\\"></div>\\n            </div>\\n            <div class=\\\"login-server-features-wrap\\\">\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.MAM)]}\\\" >\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_message_archive\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_archive_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.SYNCHRONIZATION)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_synchronization\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_quick_synchronization_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.REWRITE)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_message_editing\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_editing_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.AUTH_DEVICES)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_device_management\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_tokens_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.PUBSUB)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_publish_subscribe\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_pubsub_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.HTTP_UPLOAD)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_file_upload\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_file_upload_error'))]}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"server-features-error\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button disabled class=\\\"btn-flat btn-main btn-log-in\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main one-line hidden btn-finish-log-in\\\"></button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"library\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_library\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"library\\\" class=\\\"screen-wrap library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"hidden screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__text\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__button_upload\\\"))]}</button>\\n                <input type=\\\"file\\\">\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <div class=\\\"modal-preloader-wrap\\\"></div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span class=\\\"original-state\\\">{[print(xabber.getString(\\\"button_change_pass\\\"))]}</span>\\n        <span class=\\\"success-state hidden\\\">{[print(xabber.getString(\\\"password_changed_success\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content original-state\\\">\\n        <div class=\\\"change-password-fields\\\">\\n            <div class=\\\"block-subheader\\\">\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"hint_old_pass\\\"))]}</span>\\n            </div>\\n            <div class=\\\"change-password-field\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                <input class=\\\"input-glow account-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_old_pass\\\"))]}' id=\\\"old_password\\\" type=\\\"password\\\" name=\\\"old_password\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n            <div class=\\\"block-subheader\\\">\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"hint_new_pass\\\"))]}</span>\\n            </div>\\n            <div class=\\\"change-password-field\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key-variant\\\"></svg>\\n                <input class=\\\"input-glow account-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_new_pass\\\"))]}' id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n            <div class=\\\"change-password-field\\\">\\n                <input class=\\\"input-glow account-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_confirm_pass\\\"))]}' id=\\\"password_confirm\\\" type=\\\"password\\\" name=\\\"password_confirm\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-change btn-flat btn-main original-state\\\" disabled>{[print(xabber.getString(\\\"button_change_pass\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel btn-finish-change success-state hidden\\\">{[print(xabber.getString(\\\"ok\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel original-state\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"settings_account__dialog_change_password__header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row login-form-field\\\">\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"jid\\\" type=\\\"text\\\" class=\\\"input-glow\\\" name=\\\"jid\\\" disabled readonly>\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"password\\\" type=\\\"password\\\" class=\\\"input-glow\\\" placeholder=\\\"{[print(xabber.getString('account_password'))]}\\\" name=\\\"password\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-change\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"status_editor\\\"))]}</span>\\n    </div>\\n    <ul class=\\\"status-values noselect\\\">\\n        <li data-value=\\\"chat\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"chat\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"chat\\\"></span>\\n        </li>\\n        <li data-value=\\\"online\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"online\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"online\\\"></span>\\n        </li>\\n        <li data-value=\\\"away\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"away\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"away\\\"></span>\\n        </li>\\n        <li data-value=\\\"xa\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"xa\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"xa\\\"></span>\\n        </li>\\n        <li data-value=\\\"dnd\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"dnd\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"dnd\\\"></span>\\n        </li>\\n        <li data-value=\\\"offline\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"unavailable\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"offline\\\"></span>\\n        </li>\\n    </ul>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"input-field status-message-wrap\\\">\\n                <span class=\\\"static-label\\\">{[print(xabber.getString(\\\"dialog_status_editor__label_custom_status\\\"))]}</span>\\n                <input type=\\\"text\\\" class=\\\"status-message input-glow\\\">\\n                <i class=\\\"clear-input mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n            <div class=\\\"input-field checkbox-field no-padding\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"filled-in apply-to-all\\\" id=\\\"{{view.cid}}_apply_to_all\\\"/>\\n                <label for=\\\"{{view.cid}}_apply_to_all\\\">{[print(xabber.getString(\\\"dialog_status_editor__label_apply_to_all\\\"))]}</label>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"token-wrap settings-tab\\\" data-subblock-parent-name=\\\"devices\\\" data-block-name=\\\"device-information\\\" data-token-uid=\\\"{{token_uid}}\\\">\\n    <div class=\\\"token-icon-wrap\\\">\\n        <svg class=\\\"mdi token-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"device-web\\\"></svg>\\n    </div>\\n    <div class=\\\"token-client-wrap\\\">\\n        <div class=\\\"device one-line\\\">{{device}}</div>\\n        <div class=\\\"ip-address\\\">{{ip}}</div>\\n    </div>\\n    {[if (is_omemo) {]}\\n    <div class=\\\"device-encryption one-line active is-own\\\">\\n        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"security\\\"></svg>\\n    </div>\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"media_gallery_delete_files_header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"deletion-variants no-select\\\">\\n            <div class=\\\"delete-files-text-info\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_info_text\\\"))]}</div>\\n            <div class=\\\"property-variant btn-delete-files-percent\\\" data-value=\\\"15\\\">\\n                <svg class=\\\"percent-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circle-slice-1\\\"></svg>\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_button_15_percent\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files-percent\\\" data-value=\\\"25\\\">\\n                <svg class=\\\"percent-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circle-slice-2\\\"></svg>\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_button_25_percent\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files-percent\\\" data-value=\\\"50\\\">\\n                <svg class=\\\"percent-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circle-slice-4\\\"></svg>\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_button_50_percent\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files-percent\\\" data-value=\\\"100\\\">\\n                <svg class=\\\"percent-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circle-slice-8\\\"></svg>\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_button_100_percent\\\"))]}</span>\\n            </div>\\n        </div>\\n        <div class=\\\"media-gallery-delete-items-wrap hidden\\\">\\n            <div class=\\\"delete-files-preview-wrap media-gallery-items-wrap\\\">\\n                <div class=\\\"delete-files-text no-select\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_preview_text\\\"))]}</div>\\n                <div data-value=\\\"avatar\\\" class=\\\"setting-name header-setting no-select delete-files-avatars\\\">\\n                    {[print(xabber.getString(\\\"avatars\\\"))]}\\n                </div>\\n                <div class=\\\"gallery-files gallery-preview-image hidden grid delete-files-avatars delete-files-preview-container zoom-gallery\\\">\\n                </div>\\n                <div data-value=\\\"image\\\" class=\\\"setting-name header-setting no-select delete-files-images\\\">\\n                    {[print(xabber.getString(\\\"images\\\"))]}\\n                </div>\\n                <div class=\\\"gallery-files gallery-preview-image hidden grid delete-files-images delete-files-preview-container zoom-gallery\\\">\\n                </div>\\n                <div data-value=\\\"video\\\" class=\\\"setting-name header-setting no-select delete-files-videos\\\">\\n                    {[print(xabber.getString(\\\"videos\\\"))]}\\n                </div>\\n                <div class=\\\"gallery-files gallery-preview-video hidden grid delete-files-videos delete-files-preview-container zoom-gallery\\\">\\n                </div>\\n                <div data-value=\\\"voice\\\" class=\\\"setting-name header-setting no-select delete-files-voices\\\">\\n                    {[print(xabber.getString(\\\"vcard_type_voice\\\"))]}\\n                </div>\\n                <div class=\\\"gallery-files gallery-preview-file hidden voice delete-files-voices delete-files-preview-container zoom-gallery\\\">\\n                </div>\\n                <div data-value=\\\"file\\\" class=\\\"setting-name header-setting no-select delete-files-files\\\">\\n                    {[print(xabber.getString(\\\"files\\\"))]}\\n                </div>\\n                <div class=\\\"gallery-files gallery-preview-voice hidden file delete-files-files delete-files-preview-container zoom-gallery\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"no-files hidden\\\">{[print(xabber.getString(\\\"no_files\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <div class=\\\"input-field checkbox-field delete-avatars-checkbox\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"delete_avatars\\\"/>\\n            <label for=\\\"delete_avatars\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_confirm_delete_avatars\\\"))]}</label>\\n        </div>\\n        <button class=\\\"btn-confirm btn-flat btn-main\\\">{[print(xabber.getString(\\\"delete\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_emoji_profile_image_header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"dialog-text\\\">{[print(xabber.getString(\\\"account_emoji_profile_image_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"emoji-profile-image\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar ground-color-green-100\\\" data-value=\\\"green\\\">\\n                <div class=\\\"chosen-emoji\\\" data-value=\\\"🐈\\\">🐈</div>\\n            </div>\\n            <div class=\\\"circle-icon\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n            </div>\\n        </div>\\n\\n    </div>\\n    <div class=\\\"emoji-profile-colors\\\">\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-green-500 outline-color-green-500 chosen-background-color\\\" data-value=\\\"green\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-deep-orange-500 outline-color-deep-orange-500\\\" data-value=\\\"deep-orange\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-red-500 outline-color-red-500\\\" data-value=\\\"red\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-light-blue-500 outline-color-light-blue-500\\\" data-value=\\\"light-blue\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-blue-500 outline-color-blue-500\\\" data-value=\\\"blue\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-purple-500 outline-color-purple-500\\\" data-value=\\\"purple\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-lime-500 outline-color-lime-500\\\" data-value=\\\"lime\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-pink-500 outline-color-pink-500\\\" data-value=\\\"pink\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-orange-500 outline-color-orange-500\\\" data-value=\\\"orange\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-save\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        <div class=\\\"modal-preloader-wrap\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_emoji_profile_image_header\\\"))]}</span>\\n        <i class=\\\"close-modal mdi mdi-close mdi-24px\\\"></i>\\n    </div>\\n    <div class=\\\"emoji-picker-wrap no-select\\\">\\n\\n    </div>\\n</div>\\n\";","export default \"\\n{[ for (var i = 0; i < emojis.length; i++) { var tab = emojis[i] ]}\\n    <div class=\\\"emojis-tab{[if (i === 0){]} chosen-emoji-tab{[} else {]} hidden{[}]}\\\" data-value=\\\"{{tab.type}}\\\">\\n        {[ for (var y = 0; y < tab.emojis.length; y++) { var emoji = tab.emojis[y] ]}\\n            <div class=\\\"emoji-picker-emoji\\\" data-value=\\\"{{emoji[0]}}\\\">\\n                <div>{{emoji[0]}}</div>\\n            </div>\\n        {[ } ]}\\n    </div>\\n{[ } ]}\\n<div class=\\\"emoji-picker-tabs\\\">\\n    {[ for (var i = 0; i < emojis.length; i++) { var tab = emojis[i] ]}\\n    <div class=\\\"emojis-bottom-tab-selector{[if (i === 0){]} chosen-emoji-selector{[}]}\\\" data-value=\\\"{{tab.type}}\\\">\\n        {{tab.emojis[0][0]}}\\n    </div>\\n    {[ } ]}\\n</div>\\n\";","export default \"<div class=\\\"existing-chat-wrap\\\" data-name=\\\"{{name}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"existing-chat-item\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n    <button class=\\\"btn-join-existing-chat btn-flat btn-dark btn-main\\\">join</button>\\n</div>\";","export default \"<div class=\\\"account-info-wrap\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <!--<div class=\\\"status\\\"></div>-->\\n    <div class=\\\"text-info-wrap\\\">\\n        <div class=\\\"nickname-wrap\\\">\\n            <div class=\\\"nickname one-line\\\"></div>\\n        </div>\\n        <div class=\\\"jid-wrap\\\">\\n            <div class=\\\"jid one-line\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"field clickable-field enabled-state switch normal\\\">\\n    <label class=\\\"field-value\\\">\\n        <input type=\\\"checkbox\\\">\\n        <span class=\\\"lever\\\"></span>\\n    </label>\\n</div>\\n\";","export default \"<div class=\\\"gallery-wrap\\\">\\n    <!--<svg class=\\\"details-icon btn-go-back mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>-->\\n    <div class=\\\"gallery-storage-wrap\\\">\\n        <div class=\\\"storage-usage\\\"></div>\\n        <div class=\\\"storage-progress-bar\\\">\\n            <div class=\\\"storage-progress-images\\\"></div>\\n            <div class=\\\"storage-progress-videos\\\"></div>\\n            <div class=\\\"storage-progress-voices\\\"></div>\\n            <div class=\\\"storage-progress-files\\\"></div>\\n        </div>\\n        <div class=\\\"storage-labels\\\">\\n            <div class=\\\"storage-label storage-label-images\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"images\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-videos\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-voices\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-files\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"files\\\"))]}</div></div>\\n        </div>\\n    </div>\\n    <div class=\\\"storage-usages\\\">\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-images hidden\\\" data-media-type=\\\"image\\\" data-header-text='{[print(xabber.getString(\\\"images\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"image\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"images\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_images_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-videos hidden\\\" data-media-type=\\\"video\\\" data-header-text='{[print(xabber.getString(\\\"videos\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"file-video\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_videos_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-voices hidden\\\" data-media-type=\\\"voice\\\" data-header-text='{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"file-audio\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_voice_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-files hidden\\\" data-media-type=\\\"file\\\" data-header-text='{[print(xabber.getString(\\\"files\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"file\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"files\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_files_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-avatars\\\" data-media-type=\\\"avatars\\\" data-header-text='{[print(xabber.getString(\\\"avatars\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"camera\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_avatars_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab show-deletion settings-deletion-button\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"media-gallery-items-wrap hidden\\\">\\n    <div class=\\\"gallery-sticky-buttons\\\">\\n        <i class=\\\"btn-back-gallery sticky-item mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <i class=\\\"btn-close-selection sticky-item mdi mdi-24px mdi-close\\\"></i>\\n        <div class=\\\"sticky-item gallery-selection-head\\\"></div>\\n        <i class=\\\"btn-delete-selection sticky-item mdi mdi-24px mdi-delete\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-files zoom-gallery\\\">\\n    </div>\\n</div>\\n\\n\";","export default \"<div class=\\\"gallery-file{[if (file.is_avatar === 'True'){]} gallery-avatar{[}]}\\\" title=\\\"{{file.name}}\\\" data-id=\\\"{{file.id}}\\\" data-file=\\\"{{file.file}}\\\" data-name=\\\"{{file.name}}\\\" data-size=\\\"{{file.size}}\\\" data-width=\\\"{{file.width}}\\\" data-height=\\\"{{file.height}}\\\" data-media-type=\\\"{{file.media_type}}\\\" >\\n    {[if (file.media_type && (file.media_type.includes('image') || file.media_type.includes('video'))){]}\\n        <img class=\\\"{[if (file.media_type.includes('video')){]}uploaded-video{[} else {]}uploaded-img popup-img{[}]}\\\" data-mfp-src=\\\"{{file.file}}\\\" src=\\\"{{file.thumbnail}}\\\" {[if (file.media_type && file.media_type.includes('image')){]}onerror=\\\"this.src = '{{file.file}}'; this.onerror = null;\\\" {[}]}>\\n    {[} else {]}\\n        {[if (svg_icon == 'file-audio' && file.context === 'voice'){]}\\n            <div class=\\\"gallery-file-placeholder-background gallery-audio-file-not-uploaded\\\">\\n                <i class=\\\"details-icon mdi mdi-play no-uploaded\\\"></i>\\n            </div>\\n            <div class=\\\"gallery-file-audio-container\\\">\\n            </div>\\n        {[} else {]}\\n            <div class=\\\"gallery-file-placeholder-background\\\">\\n                <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n                <div class=\\\"gallery-file-title-grid\\\">{{filesize}}</div>\\n            </div>\\n        {[}]}\\n        <div class=\\\"gallery-file-title one-line\\\">\\n            {{file.name}},  <span class=\\\"gallery-file-size\\\">{{filesize}}</span> <span class=\\\"gallery-file-date\\\">{{created_at}}</span>\\n        </div>\\n        {[if (duration && file.context === 'voice'){]}\\n            <div class=\\\"gallery-voice-file-duration\\\">\\n                0:00 / <span class=\\\"gallery-voice-file-total-duration\\\">{{duration}}</span>\\n            </div>\\n        {[}]}\\n    {[}]}\\n    <div class=\\\"input-field checkbox-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\"/>\\n        <label></label>\\n    </div>\\n    {[if (download_only){]}\\n        <div class=\\\"btn-download btn-more\\\">\\n            <a class=\\\"one-line\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{file.file}}\\\" download>\\n                <i class=\\\"mdi mdi-24px mdi-download\\\"></i>\\n            </a>\\n        </div>\\n    {[} else {]}\\n    <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{file.id}}-more\\\">\\n        <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n    </div>\\n    <ul id=\\\"{{file.id}}-more\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n        <a class=\\\"one-line\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{file.file}}\\\" download>\\n            <div class=\\\"property-variant btn-download\\\">\\n                {[print(xabber.getString(\\\"action_download\\\"))]}\\n            </div>\\n        </a>\\n        <div class=\\\"property-variant btn-delete\\\">\\n            <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete\\\"))]}</span>\\n        </div>\\n    </ul>\\n    {[}]}\\n</div>\";","export default \"<svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"ic-jabber\\\"></svg>\\n<table>\\n    <tbody>\\n    <tr class=\\\"info status-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n        <td>\\n            <div class=\\\"value status-message\\\"></div>\\n            <div class=\\\"status\\\"></div>\\n        </td>\\n    </tr>\\n    <tr class=\\\"info client-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_client\\\"))]}:</td>\\n        <td class=\\\"value client\\\"></td>\\n    </tr>\\n    <tr class=\\\"info resource-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n        <td class=\\\"value resource\\\"></td>\\n    </tr>\\n    <tr class=\\\"info priority-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n        <td class=\\\"value priority\\\"></td>\\n    </tr>\\n    </tbody>\\n</table>\";","export default \"<table>\\n    <tbody>\\n    <tr class=\\\"info status-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n        <td>\\n            <div class=\\\"value status-message one-line\\\"></div>\\n            <div class=\\\"status\\\"></div>\\n        </td>\\n    </tr>\\n    <tr class=\\\"info client-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_client\\\"))]}:</td>\\n        <td class=\\\"value client one-line\\\"></td>\\n    </tr>\\n    <tr class=\\\"info resource-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n        <td class=\\\"value resource one-line\\\"></td>\\n    </tr>\\n    <tr class=\\\"info priority-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n        <td class=\\\"value priority\\\"></td>\\n    </tr>\\n    </tbody>\\n</table>\";","export default \"\\n<div class=\\\"left-column settings-column noselect\\\">\\n    <div class=\\\"settings-account-head\\\">\\n        <svg class=\\\"btn-add-account mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"contact-add\\\"></svg>\\n        <div class=\\\"name one-line\\\"></div>\\n        <svg class=\\\"btn-color-picker dropdown-button mdi mdi-24px mdi-svg-template\\\" data-activates=\\\"color-picker-dropdown\\\" data-svgname=\\\"palette\\\"></svg>\\n        <ul id=\\\"color-picker-dropdown\\\" class=\\\"dropdown-content color-picker-dropdown bootstrap-dropdown noselect\\\">\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"red\\\">\\n                <span class=\\\"one-line text-color-red-700\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"pink\\\">\\n                <span class=\\\"one-line text-color-pink-700\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"purple\\\">\\n                <span class=\\\"one-line text-color-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"deep-purple\\\">\\n                <span class=\\\"one-line text-color-deep-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"indigo\\\">\\n                <span class=\\\"one-line text-color-indigo-700\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"blue\\\">\\n                <span class=\\\"one-line text-color-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"light-blue\\\">\\n                <span class=\\\"one-line text-color-light-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"cyan\\\">\\n                <span class=\\\"one-line text-color-cyan-700\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"teal\\\">\\n                <span class=\\\"one-line text-color-teal-700\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"green\\\">\\n                <span class=\\\"one-line text-color-green-700\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"light-green\\\">\\n                <span class=\\\"one-line text-color-light-green-700\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"lime\\\">\\n                <span class=\\\"one-line text-color-lime-700\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"amber\\\">\\n                <span class=\\\"one-line text-color-amber-700\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"orange\\\">\\n                <span class=\\\"one-line text-color-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"deep-orange\\\">\\n                <span class=\\\"one-line text-color-deep-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"brown\\\">\\n                <span class=\\\"one-line text-color-brown-700\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"blue-grey\\\">\\n                <span class=\\\"one-line text-color-blue-grey-700\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n        </ul>\\n        <svg class=\\\"btn-qr-code mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n        <div class=\\\"field clickable-field enabled-state switch normal\\\">\\n            <label class=\\\"field-value\\\">\\n                <input type=\\\"checkbox\\\">\\n                <span class=\\\"lever\\\"></span>\\n            </label>\\n        </div>\\n    </div>\\n    <div class=\\\"main-info-wrap account-main-info-wrap\\\">\\n        <div class=\\\"picture-wrap\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                    <img/>\\n                    <input type=\\\"file\\\"/>\\n                    <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown bootstrap-dropdown dropdown-content noselect\\\">\\n                        <div class=\\\"btn-emoji-panel property-variant\\\">\\n                            {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                        </div>\\n                        <div class=\\\"btn-selfie property-variant\\\">\\n                            {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                        </div>\\n                        <div class=\\\"btn-choose-image property-variant\\\">\\n                            {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                        </div>\\n                    </ul>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"name one-line\\\"></div>\\n        <div class=\\\"jid one-line\\\"></div>\\n    </div>\\n    <div class=\\\"settings-tabs-wrap\\\">\\n        <div class=\\\"settings-tab\\\" data-block-name=\\\"profile\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__profile_label\\\"))]}</div>\\n        </div>\\n        <div class=\\\"settings-tab\\\" data-block-name=\\\"media-gallery\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cloud\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n        </div>\\n        <div class=\\\"settings-tab\\\" data-block-name=\\\"encryption\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption\\\"))]}</div>\\n            <div class=\\\"settings-block-label hidden label-encryption-enabled one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_enabled_label\\\"))]}</div>\\n            <div class=\\\"settings-block-label label-encryption-disabled one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_disabled_label\\\"))]}</div>\\n        </div>\\n        <div class=\\\"settings-tab\\\" data-block-name=\\\"devices\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"devices\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__devices_subheader\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"right-column settings-column noselect\\\">\\n    <div class=\\\"settings-panel-head\\\">\\n        <i class=\\\"btn-back-settings mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <i class=\\\"btn-back-subsettings-account mdi mdi-24px mdi-arrow-left hidden\\\"></i>\\n        <span class=\\\"settings-panel-head-title\\\">{[print(xabber.getString(\\\"account_editor\\\"))]}</span>\\n        <i class=\\\"btn-sorting dropdown-button mdi mdi-24px mdi-sort hidden\\\" data-activates=\\\"storage-file-sorting\\\"></i>\\n        <ul id=\\\"storage-file-sorting\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n            <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-id\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_new\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-size\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_size\\\"))]}</span>\\n            </div>\\n        </ul>\\n        <div class=\\\"btn-more media-gallery-button dropdown-button hidden\\\" data-activates=\\\"storage-actions\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"storage-actions\\\" class=\\\"dropdown-content noselect\\\">\\n            <div class=\\\"property-variant btn-select-files hidden\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_select_files\\\"))]}</span>\\n            </div>\\n        </ul>\\n    </div>\\n\\n    <div class=\\\"panel-content-wrap\\\">\\n        <div class=\\\"panel-content details-panel\\\">\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__devices_subheader\\\"))]}' class=\\\"settings-block-wrap devices\\\">\\n                <div class=\\\"devices-wrap hidden\\\">\\n                    <div class=\\\"device-encryption-warning hidden\\\" data-not-trusted-count=\\\"0\\\">\\n                        <svg class=\\\"device-encryption-icon mdi mdi-40px mdi-svg-template\\\" data-svgname=\\\"alert-circle\\\"></svg>\\n                        <div class=\\\"device-encryption-warning-name one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_warning_header\\\"))]}</div>\\n                        <div class=\\\"device-encryption-warning-label\\\"></div>\\n                    </div>\\n                    <div class=\\\"tokens-wrap\\\">\\n                        <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings_account__label_this_device\\\"))]}</div>\\n                        <div class=\\\"current-token-wrap\\\">\\n                            <div class=\\\"sessions-wrap current-session selectable-text\\\"></div>\\n                            <div class=\\\"btn-revoke-all-tokens settings-button-devices\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"restrictions-outline\\\"></svg>\\n                                <div class=\\\"settings-button-devices-label\\\">{[print(xabber.getString(\\\"account_terminate_all_sessions\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-panel-label active-sessions-label\\\">{[print(xabber.getString(\\\"settings_account__label_active_sessions\\\"))]}</div>\\n                        <div class=\\\"all-sessions-wrap\\\">\\n                            <div class=\\\"sessions-wrap all-sessions selectable-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"orphaned-fingerprints hidden\\\">\\n                            <div class=\\\"orphaned-fingerprints-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__legacy_encryption_label\\\"))]}</div>\\n                            <div class=\\\"orphaned-fingerprints-wrap selectable-text\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}' class=\\\"settings-block-wrap profile\\\">\\n                <div class=\\\"settings-tabs-wrap\\\">\\n                    <div class=\\\"settings-tab settings-non-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"status\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"status\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__status_subheader\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\"></div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"vcard-tab\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__edit_profile\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__edit_profile_label\\\"))]}</div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"password\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__password_subheader\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__password_subheader_label\\\"))]}</div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"blocklist\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"block_list\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\"></div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"circles-groups\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles-outline\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\"></div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"capabitilies\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__capabilities_subheader\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__capabilities_subheader_label\\\"))]}</div>\\n                    </div>\\n                    <div class=\\\"settings-tab unregister-account settings-deletion-button settings-non-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"delete-account\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name settings-block-name-single one-line\\\">{[print(xabber.getString(\\\"settings_account__delete_account_subheader\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__status_subheader\\\"))]}' class=\\\"settings-block-wrap status\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"status-wrap setting\\\"></div>\\n                    <div class=\\\"status\\\"></div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__edit_profile\\\"))]}' class=\\\"settings-block-wrap vcard-tab\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"vcard\\\">\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"block-list-view-wrap\\\">\\n                <div data-header='{[print(xabber.getString(\\\"block_list\\\"))]}' data-parent-block=\\\"profile\\\" class=\\\"settings-block-wrap blocklist\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"blocklist-info\\\">\\n                            <div class=\\\"blocklist-wrap\\\">\\n                                <div class=\\\"buttons-wrap\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-tabs-wrap\\\">\\n                        <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-contacts\\\">\\n                            <div class=\\\"setting-icon-background\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-cancel\\\"></svg>\\n                            </div>\\n                            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_contacts\\\"))]}</div>\\n                            <div class=\\\"settings-block-label one-line\\\"></div>\\n                        </div>\\n                        <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-domains\\\">\\n                            <div class=\\\"setting-icon-background\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"web-cancel\\\"></svg>\\n                            </div>\\n                            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_domains\\\"))]}</div>\\n                            <div class=\\\"settings-block-label one-line\\\"></div>\\n                        </div>\\n                        <div class=\\\"settings-tab hidden\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-invitations\\\">\\n                            <div class=\\\"setting-icon-background\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"invite\\\"></svg>\\n                            </div>\\n                            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_invitations\\\"))]}</div>\\n                            <div class=\\\"settings-block-label one-line\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_contacts\\\"))]}' data-block-name=\\\"blocklist-contacts\\\" class=\\\"settings-block-wrap blocklist-contacts\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"blocklist-info\\\">\\n                            <div class=\\\"blocklist-wrap\\\">\\n                                <div class=\\\"buttons-wrap\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                    <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                    <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                </div>\\n                                <div class=\\\"blocked-items\\\">\\n                                    <div class=\\\"blocked-contacts-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_contacts_empty\\\"))]}</div>\\n                                    <div class=\\\"blocked-items-container blocked-contacts-wrap\\\" data-tab-name=\\\"contacts-item\\\">\\n                                        <div class=\\\"blocked-contacts blocked-list\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_domains\\\"))]}' data-block-name=\\\"blocklist-domains\\\" class=\\\"settings-block-wrap blocklist-domains\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"blocklist-info\\\">\\n                            <div class=\\\"blocklist-wrap\\\">\\n                                <div class=\\\"buttons-wrap\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                    <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                    <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                </div>\\n                                <div class=\\\"blocked-items\\\">\\n                                    <div class=\\\"blocked-domains-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_domains_empty\\\"))]}</div></div>\\n                                <div class=\\\"blocked-items-container blocked-domains-wrap\\\" data-tab-name=\\\"domains-item\\\">\\n                                    <div class=\\\"blocked-domains blocked-list\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_invitations\\\"))]}' data-block-name=\\\"blocklist-invitations\\\" class=\\\"settings-block-wrap blocklist-invitations\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"blocklist-info\\\">\\n                        <div class=\\\"blocklist-wrap\\\">\\n                            <div class=\\\"buttons-wrap\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                            </div>\\n                            <div class=\\\"blocked-items\\\">\\n                                <div class=\\\"blocked-invitations-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_invitations_empty\\\"))]}</div>\\n                                <div class=\\\"blocked-items-container blocked-invitations-wrap\\\" data-tab-name=\\\"invitations-item\\\">\\n                                    <div class=\\\"blocked-invitations blocked-list\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}' class=\\\"settings-block-wrap circles-groups\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"groups-info\\\">\\n                        <div class=\\\"groups-wrap\\\">\\n                            <div class=\\\"groups\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__capabilities_subheader\\\"))]}' class=\\\"settings-block-wrap capabitilies\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"server-info\\\">\\n                        <div class=\\\"capabilities-wrap\\\">\\n                            <div class=\\\"capabilities\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"color\\\"))]}' class=\\\"settings-block-wrap color-scheme\\\">\\n                <div class=\\\"color-scheme-wrap\\\">\\n                    <div class=\\\"account-color\\\">\\n                        <div class=\\\"field radio-field clickable-field\\\">\\n                            <form action=\\\"#\\\">\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"red\\\" type=\\\"radio\\\" id=\\\"color-red\\\" />\\n                                    <label class=\\\"text-color-red-700\\\" for=\\\"color-red\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"pink\\\" type=\\\"radio\\\" id=\\\"color-pink\\\" />\\n                                    <label class=\\\"text-color-pink-700\\\" for=\\\"color-pink\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"purple\\\" type=\\\"radio\\\" id=\\\"color-purple\\\" />\\n                                    <label class=\\\"text-color-purple-700\\\" for=\\\"color-purple\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-purple\\\" type=\\\"radio\\\" id=\\\"color-deep-purple\\\" />\\n                                    <label class=\\\"text-color-deep-purple-700\\\" for=\\\"color-deep-purple\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"indigo\\\" type=\\\"radio\\\" id=\\\"color-indigo\\\" />\\n                                    <label class=\\\"text-color-indigo-700\\\" for=\\\"color-indigo\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue\\\" type=\\\"radio\\\" id=\\\"color-blue\\\" />\\n                                    <label class=\\\"text-color-blue-700\\\" for=\\\"color-blue\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-blue\\\" type=\\\"radio\\\" id=\\\"color-light-blue\\\" />\\n                                    <label class=\\\"text-color-light-blue-700\\\" for=\\\"color-light-blue\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"cyan\\\" type=\\\"radio\\\" id=\\\"color-cyan\\\" />\\n                                    <label class=\\\"text-color-cyan-700\\\" for=\\\"color-cyan\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"teal\\\" type=\\\"radio\\\" id=\\\"color-teal\\\" />\\n                                    <label class=\\\"text-color-teal-700\\\" for=\\\"color-teal\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"green\\\" type=\\\"radio\\\" id=\\\"color-green\\\" />\\n                                    <label class=\\\"text-color-green-700\\\" for=\\\"color-green\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-green\\\" type=\\\"radio\\\" id=\\\"color-light-green\\\" />\\n                                    <label class=\\\"text-color-light-green-700\\\" for=\\\"color-light-green\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"lime\\\" type=\\\"radio\\\" id=\\\"color-lime\\\" />\\n                                    <label class=\\\"text-color-lime-700\\\" for=\\\"color-lime\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"amber\\\" type=\\\"radio\\\" id=\\\"color-amber\\\" />\\n                                    <label class=\\\"text-color-amber-700\\\" for=\\\"color-amber\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"orange\\\" type=\\\"radio\\\" id=\\\"color-orange\\\" />\\n                                    <label class=\\\"text-color-orange-700\\\" for=\\\"color-orange\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-orange\\\" type=\\\"radio\\\" id=\\\"color-deep-orange\\\" />\\n                                    <label class=\\\"text-color-deep-orange-700\\\" for=\\\"color-deep-orange\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"brown\\\" type=\\\"radio\\\" id=\\\"color-brown\\\" />\\n                                    <label class=\\\"text-color-brown-700\\\" for=\\\"color-brown\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue-grey\\\" type=\\\"radio\\\" id=\\\"color-blue-grey\\\" />\\n                                    <label class=\\\"text-color-blue-grey-700\\\" for=\\\"color-blue-grey\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__encryption\\\"))]}' class=\\\"settings-block-wrap encryption\\\">\\n                <div class=\\\"btn-more device-more-button dropdown-button\\\" data-activates=\\\"device-omemo-actions\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n                </div>\\n                <ul id=\\\"device-omemo-actions\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n                    <div class=\\\"property-variant btn-manage-devices\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_manage_devices\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant btn-purge-keys\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_purge_keys\\\"))]}</span>\\n                    </div>\\n                </ul>\\n                <div class=\\\"omemo-settings-wrap\\\">\\n                    <div class=\\\"settings\\\">\\n                        <div class=\\\"setting-wrap omemo-enable\\\">\\n                            <span>{[print(xabber.getString(\\\"omemo__settings__toggle_enable_encryption\\\"))]}</span>\\n                            <div class=\\\"field setting-use-omemo switch normal\\\">\\n                                <label class=\\\"field-value\\\">\\n                                    <input type=\\\"checkbox\\\">\\n                                    <span class=\\\"lever\\\"></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-wrap send-chat-states\\\">\\n                            <span>{[print(xabber.getString(\\\"omemo__settings__toggle_send_typing_notifications\\\"))]}</span>\\n                            <div class=\\\"field setting-send-chat-states switch normal\\\">\\n                                <label class=\\\"field-value\\\">\\n                                    <input type=\\\"checkbox\\\">\\n                                    <span class=\\\"lever\\\"></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}' class=\\\"settings-block-wrap media-gallery\\\">\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__device_information\\\"))]}' class=\\\"settings-block-wrap device-information hidden\\\">\\n                <div class=\\\"device-information-trust-text-wrap\\\">\\n                    <div class=\\\"device-information-trust-text\\\"></div>\\n                </div>\\n                <div class=\\\"device-information-wrap\\\">\\n                    <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings_account__device_information\\\"))]}</div>\\n                    <div class=\\\"device-information-items-wrap device-information-basic\\\">\\n                        <div class=\\\"device-information-item device-information-status\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"status\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__status__label\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-last-seen\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"history\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__status__label_last_seen\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-client\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"id\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__client__label\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-ip\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__ip__label\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-expires\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"expires\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__expire__label\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-panel-label device-information-security-label\\\">{[print(xabber.getString(\\\"settings__menu_item__security\\\"))]}</div>\\n                    <div class=\\\"device-information-items-wrap device-information-encryption\\\">\\n                        <div class=\\\"device-information-item device-information-device-id\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"settings_account__device_information_device_id\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-fingerprint hidden\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"lock\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__fingerprint_label\\\"))]}</div>\\n                            <div class=\\\"device-information-text device-information-fingerprint-text\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-tab device-information-trust settings-deletion-button\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-alert\\\" data-svgname=\\\"lock-alert\\\"></svg>\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-check\\\" data-svgname=\\\"lock-check\\\"></svg>\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-cross\\\" data-svgname=\\\"lock-cross\\\"></svg>\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-question\\\" data-svgname=\\\"lock-question\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings_account__identity_verification\\\"))]}</div>\\n                    </div>\\n                    <div class=\\\"settings-tab btn-revoke-token settings-deletion-button\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"device__info__terminate_session__button\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input input-glow field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"token-wrap settings-tab\\\" data-subblock-parent-name=\\\"devices\\\" data-block-name=\\\"device-information\\\" data-token-uid=\\\"{{token_uid}}\\\">\\n    <div class=\\\"token-icon-wrap\\\">\\n        {[if (device && (device.indexOf('Android') > -1 || device.indexOf('iOS') > -1)){]}\\n            <svg class=\\\"mdi token-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"device-cellphone\\\"></svg>\\n        {[} else {]}\\n            <svg class=\\\"mdi token-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"device-web\\\"></svg>\\n        {[}]}\\n    </div>\\n    <div class=\\\"token-client-wrap\\\">\\n        <div class=\\\"device one-line\\\">{{device}}</div>\\n        <div class=\\\"ip-address\\\">{{ip}} • {[ if (resource_obj) {]}{[print(xabber.getString(\\\"account_state_connected\\\"))]}{[} else {]}{{last_auth}}{[}]}</div>\\n    </div>\\n    <div class=\\\"device-encryption one-line\\\">\\n        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"security\\\"></svg>\\n    </div>\\n</div>\";","export default \"<div class=\\\"border ground-color-500\\\"></div>\\n<div class=\\\"account-item-avatar-wrap\\\">\\n    <div class=\\\"circle-avatar-wrap\\\">\\n        <div class=\\\"dropdown-button circle-avatar border-color noselect\\\"></div>\\n    </div>\\n</div>\\n<div class=\\\"status\\\"></div>\\n<i class=\\\"auth-failed mdi mdi-16px mdi-close\\\"></i>\\n<div class=\\\"account-actions-panel\\\">\\n    <div class=\\\"filter-chats\\\">\\n        <i class=\\\"mdi mdi-filter mdi-20px\\\"></i>\\n        <div class=\\\"text\\\">{[print(xabber.getString(\\\"account__toolbar_item__button_filter_chats\\\"))]}</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header no-select\\\">\\n        <span>{[print(xabber.getString(\\\"settings_account__delete_account_modal_title\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content login-panel-form\\\">\\n        <div class=\\\"modal-description-text no-select\\\">{[print(xabber.getString(\\\"settings_account__delete_account_modal_text\\\"))]}</div>\\n\\n        <div class=\\\"login-form-jid\\\">\\n            <div class=\\\"login-form-step-wrap\\\">\\n                <div class=\\\"input-field-wrap\\\">\\n                    <div class=\\\"input-field checkbox-field\\\">\\n                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"confirm_unregister_1\\\"/>\\n                        <label for=\\\"confirm_unregister_1\\\">{[print(xabber.getString(\\\"settings_account__checkbox_confirm_unregister_text_1\\\"))]}</label>\\n                    </div>\\n                    <div class=\\\"input-field checkbox-field\\\">\\n                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"confirm_unregister_2\\\"/>\\n                        <label for=\\\"confirm_unregister_2\\\">{[print(xabber.getString(\\\"settings_account__checkbox_confirm_unregister_text_2\\\"))]}</label>\\n                    </div>\\n                    <div class=\\\"input-field password-field\\\">\\n                        <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"settings_account__delete_account_modal_password_placeholder_text\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                        <div class=\\\"login-form-step-error login-password-error\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"login-confirm-form-step-wrap hidden\\\">\\n                <div class=\\\"input-field-wrap\\\">\\n                    <div class=\\\"input-field input-field-jid input-field-jid-borders\\\">\\n                        <input id=\\\"jid\\\" type=\\\"text\\\" name=\\\"jid\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"login-form-step-error login-jid-error hidden\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button disabled class=\\\"btn-flat btn-main btn-log-in\\\">{[print(xabber.getString(\\\"account_delete\\\"))]}</button>\\n        <button disabled class=\\\"btn-flat btn-main btn-submit-unregister hidden\\\">{[print(xabber.getString(\\\"account_delete\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"take_photo\\\"))]}</span>\\n    </div>\\n    <div class=\\\"webcam-profile-image-wrap\\\">\\n        <div class=\\\"camera\\\">\\n            <video class=\\\"webcam-video\\\">Video stream not available.</video>\\n        </div>\\n        <canvas id=\\\"canvas\\\" style=\\\"display: none;\\\">\\n        </canvas>\\n        <div class=\\\"output hidden\\\">\\n            <div class=\\\"webcam-photo-wrap\\\">\\n                <img class=\\\"webcam-photo\\\" alt=\\\"The screen capture will appear in this box.\\\">\\n            </div>\\n            <div class=\\\"circle-icon\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"camera-retake\\\"></svg>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-take-photo\\\">{[print(xabber.getString(\\\"capture\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-save hidden\\\">{[print(xabber.getString(\\\"account_webcam_profile_image_btn_save\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        <div class=\\\"modal-preloader-wrap\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"login-panel-intro\\\">\\n    <div class=\\\"login-panel-head noselect\\\">\\n        <img src=\\\"{{CLIENT_LOGO}}\\\" class=\\\"client-logo\\\">\\n        <span class=\\\"client-name\\\">{{SHORT_CLIENT_NAME}}</span>\\n        <span class=\\\"client-description\\\">{{SHORT_CLIENT_DESCRIPTION}}</span>\\n    </div>\\n    <div class=\\\"login-buttons\\\">\\n        <div class=\\\"btn-flat btn-main btn-register-form one-line\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_up\\\"))]}</div>\\n        <div class=\\\"btn-flat btn-main btn-login-form one-line\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_in\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"login-panel-form xmpp-login-form noselect hidden\\\">\\n    <svg class=\\\"details-icon btn-go-back-menu mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</div>\\n    <div class=\\\"login-form-jid\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"dialog_jingle_message__message_connect\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field input-field-jid\\\">\\n                    <input id=\\\"jid\\\" placeholder='{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}' type=\\\"text\\\" name=\\\"jid\\\">\\n                    <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                        <div class=\\\"select-auth-xmpp-server\\\">\\n                            <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                            <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                                <input id=\\\"sign_in_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' value=\\\"111111\\\" name=\\\"sign_in_domain\\\">\\n                            </div>\\n                            <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-auth-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                            <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-error login-jid-error hidden\\\"></div>\\n            <div class=\\\"register-form-step-error login-password-error hidden\\\"></div>\\n            <div class=\\\"register-form-step-description\\\"></div>\\n            <div class=\\\"login-step-wrap hidden\\\">\\n                <div class=\\\"login-step connecting-step\\\">\\n                    <div class=\\\"login-step-text\\\">\\n                        {[print(xabber.getString(\\\"dialog_jingle_message__status_communicating\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                </div>\\n                <div class=\\\"login-step credentials-step\\\">\\n                    <div class=\\\"login-step-text\\\">\\n                        {[print(xabber.getString(\\\"dialog_jingle_message__status_checking_credentials\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"login-form-server-features hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\"></div>\\n        </div>\\n        <div class=\\\"login-server-features-wrap\\\">\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.MAM)]}\\\" >\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_message_archive\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_archive_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.SYNCHRONIZATION)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_synchronization\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_quick_synchronization_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.REWRITE)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_message_editing\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_editing_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.AUTH_DEVICES)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_device_management\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_tokens_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.PUBSUB)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_publish_subscribe\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_pubsub_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.HTTP_UPLOAD)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_file_upload\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_file_upload_error'))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"server-features-error\\\"></div>\\n    </div>\\n    <div class=\\\"input-field buttons-wrap\\\">\\n        <button class=\\\"btn btn-flat btn-main-filled btn-log-in\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main-filled one-line hidden btn-sign-up-instead\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_up\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main-filled one-line hidden btn-finish-log-in\\\"></button>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\\n<div class=\\\"login-panel-form register-form noselect hidden\\\">\\n    <svg class=\\\"details-icon btn-go-back mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_register_xabber_account\\\"))]}</div>\\n    <div class=\\\"login-form-skip hidden\\\">{[print(xabber.getString(\\\"skip\\\"))]}</div>\\n    <div class=\\\"register-form-nickname\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_nickname\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_nickname\\\" placeholder='{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}' type=\\\"text\\\" name=\\\"register_nickname\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_nickname\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-jid hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_jid\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_jid\\\" placeholder='{[print(xabber.getString(\\\"hint_username\\\"))]}' type=\\\"text\\\" name=\\\"register_jid\\\">\\n                </div>\\n                <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                    <div class=\\\"select-xmpp-server\\\">\\n                        <div data-activates=\\\"select-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                        <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                            <input id=\\\"new_account_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"register_domain\\\">\\n                        </div>\\n                        <div data-activates=\\\"select-xmpp-server\\\" class=\\\"caret\\\">\\n                            <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                            <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div id=\\\"select-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                        <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_jid\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-password hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_password\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"register_password\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_password\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-picture hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_avatar\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"avatar-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                    <div class=\\\"circle-avatar\\\">\\n                        <input id=\\\"register_picture\\\"  title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                        <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown dropdown-content noselect\\\">\\n                            <div class=\\\"btn-emoji-panel property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-selfie property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-choose-image property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                            </div>\\n                        </ul>\\n                    </div>\\n                    <div class=\\\"circle-icon\\\">\\n                        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                        </svg>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    {[if (xabber.url_params && xabber.url_params.rkey){]}\\n        <div class=\\\"login-form-url\\\">\\n            <i class=\\\"mdi login-form-url-icon mdi-link-variant\\\"></i>\\n            <div class=\\\"login-form-url-text\\\">\\n                {[print(xabber.getString(\\\"xmpp_login__registration_via_link\\\"))]}\\n            </div>\\n        </div>\\n    {[}]}\\n    <div class=\\\"input-field buttons-wrap\\\">\\n        <button class=\\\"btn btn-flat btn-main-filled btn-next\\\">{[print(xabber.getString(\\\"xaccount_next\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main btn-skip\\\">{[print(xabber.getString(\\\"xmpp_login__registration_skip\\\"))]}</button>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\";","export default \"<div class=\\\"left-column noselect\\\">\\n    <div class=\\\"main-info-wrap xabber-info-wrap\\\">\\n        <div class=\\\"picture-wrap\\\">\\n            <img class=\\\"logo\\\" src=\\\"{{CLIENT_LOGO}}\\\"/>\\n        </div>\\n        <div class=\\\"name\\\">{{CLIENT_NAME}}</div>\\n        <div class=\\\"version\\\"></div>\\n    </div>\\n</div>\\n</div>\\n\\n<div class=\\\"right-column noselect\\\">\\n    <div class=\\\"settings-panel-head\\\">\\n        <span>{[print(xabber.getString(\\\"category_about\\\"))]}</span>\\n    </div>\\n\\n    <div class=\\\"panel-content-wrap\\\">\\n        <div class=\\\"panel-content\\\">\\n            <div class=\\\"settings-block-wrap about\\\">\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__preamble_1\\\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__preamble_2\\\", [`<a href=\\\"${CLIENT_URL}\\\" target=\\\"_blank\\\">${CLIENT_URL}</a>`]))]}</div>\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_1__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_1__text\\\"))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_2__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_2__text\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_1\\\", [constants.CLIENT_NAME, `<a href=\\\"${DEVELOPER_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"client_developer_company_name\\\")}</a>`, constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_2\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_3\\\"))]}</div>\\n                <div class=\\\"block-content flex-content\\\">\\n                    <img class=\\\"logo\\\" src=\\\"images/redsolution-logo.png\\\"/>\\n                    <a href=\\\"https://twitter.com/Xabber_XMPP\\\" target=\\\"_blank\\\"><div class=\\\"btn-social twitter-color\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-twitter\\\"></i>\\n                    </div></a>\\n                    <a href=\\\"${CLIENT_GITHUB_URL}\\\" target=\\\"_blank\\\"><img class=\\\"btn-social github-logo\\\" src=\\\"images/ic_github.png\\\"/></a>\\n                </div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__text_1\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__text_2\\\", [`<a href=\\\"${PROJECT_CROWDIN_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_4__text_2__link__text\\\", [constants.SHORT_CLIENT_NAME])}</a>`]))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_1\\\", [constants.CLIENT_NAME, `<a href=\\\"${CLIENT_GITHUB_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_5__text_1__link__text\\\")}</a>`]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_2\\\"))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_3\\\", [constants.SHORT_CLIENT_NAME, xabber.getString(\\\"client_developer_company_name\\\"), `<a href=\\\"${DEVELOPER_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"client_developer_company_full_name\\\")}</a>`]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_4\\\", [constants.CLIENT_NAME, `<a href=\\\"${CLIENT_LICENSE_GITHUB_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_5__text_4__link__text\\\")}</a>`]))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"library\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_library\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"library\\\" class=\\\"screen-wrap library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"hidden screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__text\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__button_upload\\\"))]}</button>\\n                <input type=\\\"file\\\">\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</div>\\n<div class=\\\"material-color-picker-wrap\\\">\\n    <div class=\\\"material-color-picker\\\">\\n        {[materialColors.forEach(function (color) {]}\\n        <div data-color-name=\\\"{{color.color}}\\\" class=\\\"color-palette-wrapper\\\">\\n            {[var default_color = color.variations.find(v => v.weight == 500);]}\\n            <div data-weight=\\\"500\\\" data-hex=\\\"{{default_color.hex}}\\\" style=\\\"background-color: {{default_color.hex}}\\\" class=\\\"color-palette-item\\\">\\n            </div>\\n            {[color.variations.forEach(function (variation) {]}\\n            <div data-weight=\\\"{{variation.weight}}\\\" data-hex=\\\"{{variation.hex}}\\\" style=\\\"background-color: {{variation.hex}}\\\" class=\\\"color-palette-item\\\">\\n            </div>\\n            {[})]}\\n        </div>\\n        {[})]}\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"hidden selected-color-wrap\\\">\\n        <div class=\\\"selected-color-item\\\"></div>\\n        <div class=\\\"selected-color-info\\\">\\n            <div class=\\\"selected-color-name\\\"></div>\\n            <div class=\\\"selected-color-hex\\\"></div>\\n            <input class=\\\"selected-color-hex-input hidden\\\"/>\\n        </div>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-set\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<ul class=\\\"color-values noselect\\\">\\n    <li class=\\\"color-value\\\" data-value=\\\"red\\\">\\n        <div class=\\\"color-name text-color-red-700\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-red-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"pink\\\">\\n        <div class=\\\"color-name text-color-pink-700\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-pink-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"purple\\\">\\n        <div class=\\\"color-name text-color-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-purple-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"deep-purple\\\">\\n        <div class=\\\"color-name text-color-deep-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-deep-purple-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"indigo\\\">\\n        <div class=\\\"color-name text-color-indigo-700\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-indigo-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"blue\\\">\\n        <div class=\\\"color-name text-color-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-blue-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"light-blue\\\">\\n        <div class=\\\"color-name text-color-light-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-light-blue-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"cyan\\\">\\n        <div class=\\\"color-name text-color-cyan-700\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-cyan-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"teal\\\">\\n        <div class=\\\"color-name text-color-teal-700\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-teal-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"green\\\">\\n        <div class=\\\"color-name text-color-green-700\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-green-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"light-green\\\">\\n        <div class=\\\"color-name text-color-light-green-700\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-light-green-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"lime\\\">\\n        <div class=\\\"color-name text-color-lime-700\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-lime-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"amber\\\">\\n        <div class=\\\"color-name text-color-amber-700\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-amber-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"orange\\\">\\n        <div class=\\\"color-name text-color-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-orange-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"deep-orange\\\">\\n        <div class=\\\"color-name text-color-deep-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-deep-orange-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"brown\\\">\\n        <div class=\\\"color-name text-color-brown-700\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-brown-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"blue-grey\\\">\\n        <div class=\\\"color-name text-color-blue-grey-700\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-blue-grey-700\\\"></div>\\n    </li>\\n</ul>\";","export default \"<div class=\\\"modal dialog-modal {{modal_class}}\\\">\\n    <div class=\\\"modal-header\\\">\\n        <div class=\\\"panel-header black-text\\\">{{header}}</div>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"dialog-text\\\">{{text}}</div>\\n        <div class=\\\"dialog-options-wrap\\\">\\n        {[ for (var idx in dialog_options) { var option = dialog_options[idx]; ]}\\n            <div class=\\\"dialog-option\\\" data-name=\\\"{{option.name}}\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"dialog_option_{{option.name}}\\\" {[ if (option.checked) { ]}checked=\\\"checked\\\"{[ } ]}/>\\n                <label for=\\\"dialog_option_{{option.name}}\\\">{{option.text}}</label>\\n            </div>\\n        {[ } ]}\\n        </div>\\n        <div class=\\\"container-for-img hidden\\\"><img class=\\\"img-from-clipboard\\\"></div>\\n    </div>\\n    <div class=\\\"modal-footer {{flag}}\\\">\\n        {[ for (var idx in optional_buttons) { var button = optional_buttons[idx]; ]}\\n        <button class=\\\"optional-button btn-flat btn-main\\\" data-option=\\\"{{button.value}}\\\">{{button.name}}</button>\\n        {[ } ]}\\n        {[ if (ok_button) { ]}\\n        <button class=\\\"ok-button btn-flat btn-main\\\" data-option=true>{{ok_button.text}}</button>\\n        {[ } ]}\\n        {[ if (cancel_button) { ]}\\n        <button class=\\\"cancel-button btn-flat btn-main btn-dark btn-cancel\\\" data-option=false>{{cancel_button.text}}</button>\\n        {[ } ]}\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"fingerprint-content\\\">\\n    {[if (svg_icon){]}\\n        <div class=\\\"fingerprint-device-icon\\\">\\n            <svg class=\\\"mdi mdi-72px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n        </div>\\n    {[}]}\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap device-fingerprints-part\\\">\\n        <div class=\\\"fingerprint-label\\\">\\n            <div class=\\\"value\\\">{{label}}</div>\\n        </div>\\n    </div>\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap device-fingerprints-part\\\">\\n        <div class=\\\"device-id\\\">\\n            <div class=\\\"value\\\">{{id}}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"fingerprint-wrap\\\">\\n        <div title=\\\"Device fingerprint\\\" class=\\\"fingerprint device-fingerprints-part\\\">\\n            <div class=\\\"label\\\">\\n                {[if (!edit_setting) {]}\\n                    {[print(xabber.getString(\\\"omemo__dialog_fingerprints__other_fingerprint_label\\\"))]}\\n                {[} else {]}\\n                <span class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_this_device\\\"))]}</span> {[print(xabber.getString(\\\"omemo__dialog_fingerprints__fingerprint_label\\\"))]}\\n                {[}]}</div>\\n            <div class=\\\"value\\\">{{fingerprint}}</div>\\n        </div>\\n        {[if (error) {]}\\n        <div class=\\\"fingerprint-error\\\">{{error}}</div>\\n        {[}]}\\n        {[if (old_fingerprint){]}<div title=\\\"Old device fingerprint\\\" class=\\\"old-fingerprint\\\">{{old_fingerprint}}</div>{[}]}\\n    </div>\\n</div>\\n<div data-trust=\\\"{{trust}}\\\" class=\\\"buttons\\\">\\n    {[if (trust !== null && !error) {]}\\n    <div class=\\\"dropdown-button\\\" data-activates=\\\"select-status-{{id}}\\\">\\n        <div class=\\\"trust-item-wrap btn-main btn-flat\\\">\\n            <div data-value=\\\"{{trust}}\\\">{[print(xabber.getString(`omemo__dialog_fingerprints__button_verify_device`))]}</div>\\n        </div>\\n    </div>\\n    <div id=\\\"select-status-{{id}}\\\" class=\\\"dropdown-content bootstrap-dropdown noselect fingerprint-dropdown\\\">\\n        <div data-value=\\\"ignore\\\" class=\\\"property-variant btn-ignore\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_ignore\\\"))]}</div>\\n        <div data-value=\\\"trust\\\" class=\\\"property-variant btn-trust\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_trust\\\"))]}</div>\\n    </div>\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"row\\\">\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap\\\">\\n        {[if (edit_setting) {]}\\n        <input class=\\\"hidden set-label one-line\\\" {[if (label) {]}value=\\\"{{label}}\\\"{[}]}>{[}]}\\n        {[if (label) {]}<div class=\\\"one-line label\\\">{{label}}</div>{[}]}\\n        <div class=\\\"device-id one-line\\\">{{id}}</div>\\n        {[if (!label) {]}<div class=\\\"device-id-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label_device_id\\\"))]}</div>{[}]}\\n        {[if (edit_setting) {]}<div class=\\\"set-label-label hidden\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label_set_label\\\"))]}</div>{[}]}\\n    </div>\\n    <div class=\\\"fingerprint-wrap\\\">\\n        <div title=\\\"Device fingerprint\\\" class=\\\"fingerprint\\\">{{fingerprint}}</div>\\n        {[if (error) {]}\\n        <div class=\\\"fingerprint-error\\\">{{error}}</div>\\n        {[}]}\\n        {[if (old_fingerprint){]}<div title=\\\"Old device fingerprint\\\" class=\\\"old-fingerprint\\\">{{old_fingerprint}}</div>{[}]}\\n    </div>\\n    <div data-trust=\\\"{{trust}}\\\" class=\\\"buttons\\\">\\n        {[if (trust !== null && !error) {]}\\n        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-status-{{id}}\\\">\\n            <div class=\\\"trust-item-wrap btn-main btn-flat\\\">\\n                <div data-value=\\\"{{trust}}\\\">{[print(xabber.getString(`omemo__dialog_fingerprints__button_${trust}`))]}</div>\\n            </div>\\n        </div>\\n        <div id=\\\"select-status-{{id}}\\\" class=\\\"dropdown-content noselect fingerprint-dropdown\\\">\\n            <div data-value=\\\"ignore\\\" class=\\\"btn-main text-color-grey-500 btn-ignore btn-flat\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_ignore\\\"))]}</div>\\n            <div data-value=\\\"trust\\\" class=\\\"btn-main btn-flat btn-trust text-color-green-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_trust\\\"))]}</div>\\n            {[if (delete_button){]}\\n            <div class=\\\"btn-main btn-flat btn-delete text-color-red-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_delete\\\"))]}</div>\\n            {[}]}\\n        </div>\\n        {[}]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header fingerprints-header\\\">\\n    <div class=\\\"header\\\"></div>\\n    <div class=\\\"additional-info\\\"></div>\\n</div>\\n<div class=\\\"fingerprints-content\\\">\\n</div>\\n<div class=\\\"fingerprints-bottom\\\">\\n    <div class=\\\"this-device-wrap\\\">\\n        <div class=\\\"this-device-header-wrap\\\">\\n            <div class=\\\"divider\\\"></div>\\n            <div class=\\\"this-device-header\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_this_device\\\"))]}</div>\\n        </div>\\n        <div class=\\\"this-device-content\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"fingerprints-description-wrap\\\">\\n        <div class=\\\"fingerprints-description\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_description\\\"))]}</div>\\n        <div class=\\\"link-about-encryption\\\"><a href=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__link_learn_more'))]}\\\" target=\\\"_blank\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_learn_more\\\"))]}</a></div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header fingerprints-header\\\">\\n    {[print(xabber.getString(\\\"omemo__dialog_fingerprints__device_verification_label\\\"))]}\\n</div>\\n<div class=\\\"fingerprints-content\\\">\\n    <div class=\\\"other-device-content\\\">\\n\\n    </div>\\n    <div class=\\\"this-device-content\\\">\\n\\n    </div>\\n</div>\\n<div class=\\\"fingerprints-bottom\\\">\\n    <div class=\\\"fingerprints-help-text\\\">\\n        {[print(xabber.getString(\\\"omemo__dialog_fingerprints__bottom_help_text\\\"))]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}} field-text one-line\\\"></div>\\n    <div class=\\\"btn-rename\\\">\\n        <span>{[print(xabber.getString(\\\"input_widget__button_rename\\\"))]}</span>\\n    </div>\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input field-input hidden\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"collapsed-movable\\\"></div>\\n<i class=\\\"mdi mdi-phone btn-collapse\\\"></i>\\n<div class=\\\"call-header\\\">\\n    {[print(xabber.getString(\\\"dialog_jingle_message__header\\\", [SHORT_CLIENT_NAME]))]}\\n    <div class=\\\"calling-status\\\"></div>\\n</div>\\n<div class=\\\"blur-background\\\"></div>\\n<div class=\\\"contact-info\\\">\\n    <div class=\\\"name one-line\\\"></div>\\n    <div class=\\\"calling-status\\\"></div>\\n</div>\\n<div class=\\\"video-wrap\\\">\\n    <video autoplay loop class=\\\"blank-video hidden\\\">\\n        <source src=\\\"{{BLANK_VIDEO.MP4}}\\\">\\n        <source src=\\\"{{BLANK_VIDEO.OGG}}\\\" type=\\\"video/ogg\\\">\\n        <source src=\\\"{{BLANK_VIDEO.WEBM}}\\\" type=\\\"video/webm\\\">\\n    </video>\\n    <audio autoplay class=\\\"webrtc-remote-audio hidden\\\"></audio>\\n    <video autoplay muted class=\\\"webrtc-local-video collapsed hidden\\\"></video>\\n    <div class=\\\"default-screen\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n        <div class=\\\"name one-line\\\"></div>\\n    </div>\\n</>\\n<div class=\\\"buttons-panel\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"btn-wrap\\\" title=\\\"Collapse window\\\"><svg class=\\\"btn-collapse mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M19.5,3.09L15,7.59V4H13V11H20V9H16.41L20.91,4.5L19.5,3.09M4,13V15H7.59L3.09,19.5L4.5,20.91L9,16.41V20H11V13H4Z\\\"></path>\\n        </svg></div>\\n        <div class=\\\"btn-wrap\\\" title=\\\"Fullscreen mode\\\"><svg class=\\\"btn-full-screen mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M11,21H3V13H5V17.59L17.59,5H13V3H21V11H19V6.41L6.41,19H11V21Z\\\" />\\n        </svg></div>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_mute_microphone__tooltip\\\"))]}' class=\\\"btn-microphone mdi mdi-24px mdi-microphone\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_switch_video__tooltip\\\"))]}' class=\\\"btn-video mdi mdi-24px mdi-video\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_mute__tooltip\\\"))]}' class=\\\"btn-volume mdi mdi-24px mdi-volume-high\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_share_screen__tooltip\\\"))]}' class=\\\"btn-share-screen mdi mdi-24px mdi-monitor\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_accept_call__tooltip\\\"))]}' class=\\\"btn-accept mdi mdi-24px mdi-phone\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_decline_call__tooltip\\\"))]}' class=\\\"btn-cancel mdi mdi-24px mdi-phone-hangup\\\"></i>\\n    </div>\\n</div>\";","export default \"<div class=\\\"msg-text ground-color-300\\\">\\n    <span title=\\\"{[print(xabber.getString('omemo__alert_enable__tooltip'))]}\\\" class=\\\"btn-enable\\\">{[print(xabber.getString(\\\"omemo__alert_enable__link_text\\\"))]}</span> {[print(xabber.getString(\\\"omemo__alert_enable__text\\\", [jid]))]}</div>\\n<i class=\\\"mdi mdi-22px mdi-close btn-escape\\\"></i>\\n<button class=\\\"btn-enable btn-flat hover-ground-color-500 btn-dark btn-main\\\">{[print(xabber.getString(\\\"omemo__alert_enable__link_text\\\"))]}</button>\";","export default \"<div class=\\\"plyr-player-popup-container\\\">\\n    <div class=\\\"plyr-player-popup-draggable\\\">\\n        <video class=\\\"plyr-player-popup\\\"></video>\\n        <div class=\\\"plyr-player-min-controls-tab\\\">\\n            <div class=\\\"plyr-player-min-controls-buttons\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-minimize-full mdi-svg-template\\\" data-svgname=\\\"player-full\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-play mdi-plyr-play mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-play mdi-plyr-pause mdi-svg-template\\\" data-svgname=\\\"pause\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-mute mdi-mute-plyr mdi-svg-template\\\" data-svgname=\\\"volume-off\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-mute mdi-unmute-plyr mdi-svg-template\\\" data-svgname=\\\"volume-high\\\"></svg>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"plyr-player-control-tab\\\">\\n    <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n    <svg class=\\\"mdi mdi-24px mdi-plyr-toolbar-item mdi-plyr-hide mdi-svg-template\\\" data-svgname=\\\"player-mini\\\"></svg>\\n</div>\";","export default \"<div class=\\\"emoji-font-field\\\">\\n    <input class=\\\"with-gap\\\" name=\\\"{{input_name}}\\\" value=\\\"{{value}}\\\" type=\\\"radio\\\" id=\\\"{{input_id}}\\\" />\\n    <label class=\\\"one-line\\\" for=\\\"{{input_id}}\\\">{{label}}</label>\\n    {[ if (hint) {]}<div class=\\\"emoji-hint\\\">{{hint}}</div>{[}]}\\n    {[ if (value === 'system') {]}<div class=\\\"emoji-hint\\\">{[print(xabber.getString(\\\"settings__menu_item__emoji_font_system_label\\\"))]}</div>{[}]}\\n</div>\";","export default \"<div class=\\\"language-item\\\">\\n    <input class=\\\"with-gap\\\" name=\\\"{{input_name}}\\\" value=\\\"{{value}}\\\" type=\\\"radio\\\" id=\\\"{{input_id}}\\\" />\\n    <label for=\\\"{{input_id}}\\\">{{label}}</label>\\n    {[ if (progress && progress.text) {]}<div class=\\\"translation-progress\\\">{{progress.text}}</div>{[}]}\\n</div>\";","export default \"<p>\\n    <input class=\\\"with-gap\\\" name=\\\"{{input_name}}\\\" value=\\\"{{value}}\\\" type=\\\"radio\\\" id=\\\"{{input_id}}\\\" />\\n    <label for=\\\"{{input_id}}\\\">{{label}}</label>\\n</p>\";","export default \"    <div class=\\\"left-column noselect\\\">\\n        <div class=\\\"main-info-wrap xabber-info-wrap\\\">\\n            <div class=\\\"picture-wrap\\\">\\n                <img class=\\\"logo\\\" src=\\\"{{CLIENT_LOGO}}\\\"/>\\n            </div>\\n            <div class=\\\"name\\\">{{CLIENT_NAME}}</div>\\n            <div class=\\\"version\\\"></div>\\n        </div>\\n        <div class=\\\"settings-tabs-wrap\\\">\\n            {[if (ENABLE_XABBER_ACCOUNT) {]}\\n            <div class=\\\"settings-tab xabber-account-tab offline\\\" data-block-name=\\\"xabber-account\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template xabber-offline-icon\\\" data-svgname=\\\"xabber-offline\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template xabber-online-icon\\\" data-svgname=\\\"xabber-online\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__xabber_account\\\"))]}</div>\\n            </div>\\n            {[}]}\\n            <div class=\\\"settings-tab active\\\" data-block-name=\\\"xmpp-accounts\\\">\\n                <i class=\\\"mdi mdi-24px mdi-lightbulb\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"palette\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"category_interface\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"notifications\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"privacy\\\">\\n                <i class=\\\"mdi mdi-24px mdi-incognito\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"interface_language\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"translate\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}</div>\\n            </div>\\n            {[if (PERSONAL_AREA_URL && Object.keys(PERSONAL_AREA_URL).length) {]}\\n            <a href=\\\"{{PERSONAL_AREA_URL.url}}\\\" target=\\\"_blank\\\"><div class=\\\"link-button settings-tab\\\" data-block-name=\\\"{{PERSONAL_AREA_URL.label}}\\\">\\n                <i class=\\\"mdi mdi-24px mdi-{{PERSONAL_AREA_URL.icon_name}}\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{{PERSONAL_AREA_URL.label}}</div>\\n            </div>\\n            </a>\\n            {[}]}\\n        </div>\\n        <div class=\\\"settings-tabs-bottom-wrap settings-tabs-wrap\\\">\\n            <div class=\\\"settings-tab delete-all-accounts\\\">\\n                <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"button_quit\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"right-column noselect\\\">\\n        <div class=\\\"settings-panel-head\\\">\\n            <span>{[print(xabber.getString(\\\"preference_editor\\\"))]}</span>\\n            <button class=\\\"btn-add-account btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"dialog_add__label_add_account\\\"))]}</button>\\n        </div>\\n\\n        <div class=\\\"panel-content-wrap\\\">\\n            <div class=\\\"panel-content\\\">\\n                {[if (ENABLE_XABBER_ACCOUNT) {]}\\n                <div data-block-name=\\\"\\\" class=\\\"settings-block-wrap xabber-account\\\">\\n                    <div class=\\\"block-header\\\">\\n                        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__xabber_account\\\"))]}</span>\\n                    </div>\\n                </div>\\n                {[}]}\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}' class=\\\"settings-block-wrap xmpp-accounts\\\">\\n                    <div class=\\\"setting xmpp-account-list\\\">\\n                        <div class=\\\"accounts-head-wrap\\\">\\n                            <div class=\\\"accounts-head xmppid-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_xmpp_id\\\"))]}</div>\\n                            <div class=\\\"accounts-head sync-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_sync\\\"))]}</div>\\n                            <div class=\\\"accounts-head enabled-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_enabled\\\"))]}</div>\\n                        </div>\\n                        <span class=\\\"no-accounts-tip\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__text_no_accounts\\\"))]}</span>\\n                        <div class=\\\"move-account-to-bottom droppable\\\"></div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"category_interface\\\"))]}' class=\\\"settings-block-wrap background hidden\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__appearance\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__palette\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"toolbar-main-color-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_main_color\\\"))]}</div>\\n                            <div class=\\\"setting toolbar-main-color-setting field-wrap\\\">\\n                                <div class=\\\"current-main-color-wrap\\\">\\n                                    <div class=\\\"current-main-color ground-color-500\\\"></div>\\n                                    <div class=\\\"color-name\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"toolbar-color-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</div>\\n                            <div class=\\\"setting toolbar-color-setting field-wrap\\\">\\n                                <div class=\\\"selected-color-wrap\\\">\\n                                    <div class=\\\"selected-color-item\\\"></div>\\n                                    <div class=\\\"selected-color-info\\\">\\n                                        <div class=\\\"selected-color-name\\\"></div>\\n                                        <div class=\\\"selected-color-hex\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"account_settings_background\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"background-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_background\\\"))]}</div>\\n                            <div class=\\\"setting background radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-default-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_default\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"repeating-pattern\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-repeating-pattern-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-repeating-pattern-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_pattern\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"image\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-image-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-image-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_image\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                                <div class=\\\"current-background-wrap\\\">\\n                                    <div class=\\\"dark-placeholder\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__button_update\\\"))]}</div>\\n                                    <div class=\\\"current-background\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"blur-setting-wrap\\\">\\n                                <div class=\\\"setting blur-setting field-wrap\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blur_switch\\\"/>\\n                                        <label for=\\\"blur_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_blur\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"blur\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"vignetting-setting-wrap\\\">\\n                                <div class=\\\"setting vignetting-setting field-wrap\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"vignetting_switch\\\"/>\\n                                        <label for=\\\"vignetting_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_vignette\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"vignetting\\\" min=\\\"0\\\" max=\\\"200\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"chat_viewer\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_behavior\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting hotkeys radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"enter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-enter\\\" />\\n                                        <label for=\\\"{{view.cid}}-enter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_enter\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"ctrlenter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-ctrlenter\\\" />\\n                                        <label for=\\\"{{view.cid}}-ctrlenter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_ctrlenter\\\"))]}</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap contact-list\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_contact_list\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"circle-avatar noselect\\\"></div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</div>\\n                        <div class=\\\"setting avatar-shape radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"circle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-circle\\\" />\\n                                        <label for=\\\"{{view.cid}}-circle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_circle\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"squircle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-squircle\\\" />\\n                                        <label for=\\\"{{view.cid}}-squircle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_squircle\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"octagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-octagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-octagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_octagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"hexagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hexagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-hexagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_hexagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"pentagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-pentagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-pentagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_pentagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"rounded\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-rounded\\\" />\\n                                        <label for=\\\"{{view.cid}}-rounded\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_rounded\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"star\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-star\\\" />\\n                                        <label for=\\\"{{view.cid}}-star\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_star\\\"))]}</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}'  class=\\\"settings-block-wrap notifications hidden\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__web_notifications\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting idling field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"idling\\\"/>\\n                                <label for=\\\"idling\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_idling\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"notifications\\\"/>\\n                                <label for=\\\"notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_desktop_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__volume\\\"))]}</div>\\n                        <div class=\\\"setting volume-setting\\\">\\n                            <i class=\\\"mdi mdi-24px mdi-volume-low\\\"></i>\\n                            <form action=\\\"#\\\">\\n                                <div class=\\\"disabled hidden\\\"></div>\\n                                <p class=\\\"range-field\\\">\\n                                    <input type=\\\"range\\\" id=\\\"notifications_volume\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                </p>\\n                            </form>\\n                            <i class=\\\"mdi mdi-24px mdi-volume-high\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting private-notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"private-notifications\\\"/>\\n                                <label for=\\\"private-notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-shifted-block\\\">\\n                            <div class=\\\"setting message-preview private-preview field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_private\\\"/>\\n                                    <label for=\\\"preview_private\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-no\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-no\\\">No sound</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting group-notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"group-notifications\\\"/>\\n                                <label for=\\\"group-notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-shifted-block\\\">\\n                            <div class=\\\"setting message-preview group-preview field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_group\\\"/>\\n                                    <label for=\\\"preview_group\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-no\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-no\\\">No sound</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__calls\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"call\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-call\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-call\\\">Call</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__dialtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"call\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-connecting\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-connecting\\\">Call</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"attention\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-attention\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-attention\\\">Attention</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__attention_calls\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting call-attention field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"call_attention\\\"/>\\n                                <label for=\\\"call_attention\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_call_attention\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"attention\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-attention\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-attention\\\">Attention</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}'  class=\\\"settings-block-wrap privacy hidden\\\">\\n                    <div class=\\\"setting load-media field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"load-media\\\"/>\\n                            <label for=\\\"load-media\\\">{[print(xabber.getString(\\\"settings__section_privacy__load_media\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"setting typing-notifications field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"typing-notifications\\\"/>\\n                            <label for=\\\"typing-notifications\\\">{[print(xabber.getString(\\\"settings__section_privacy__typing_notifications\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"setting mapping-service field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"mapping-service\\\"/>\\n                            <label for=\\\"mapping-service\\\">{[print(xabber.getString(\\\"settings__section_privacy__mapping_service\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}'  class=\\\"settings-block-wrap interface_language hidden\\\">\\n                    <div class=\\\"setting interface-language-setting\\\">\\n                        <div class=\\\"languages-list field radio-field clickable-field\\\">\\n                            <form action=\\\"#\\\">\\n                                <div class=\\\"language-item\\\">\\n                                    <input class=\\\"with-gap\\\" name=\\\"language\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default\\\" />\\n                                    <label for=\\\"{{view.cid}}-default\\\">{[print(xabber.getString(\\\"settings__languages_list___item_default\\\", [languages[xabber.get(\\\"default_language\\\") || 'en']]))]}</label>\\n                                </div>\\n                                {[if (window.navigator.language.indexOf(xabber.get(\\\"default_language\\\")) < 0) {]}\\n                                {[}]}\\n                                {[for (let lang in constants.languages) { if (!lang || lang == xabber.get(\\\"default_language\\\")) continue;]}\\n                                <div class=\\\"language-item\\\">\\n                                    <input class=\\\"with-gap\\\" name=\\\"language\\\" value=\\\"{{lang}}\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-{{lang}}\\\" />\\n                                    <label for=\\\"{{view.cid}}-{{lang}}\\\">{[print(constants.languages[lang]);]}</label>\\n                                    {[let locale = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));]}\\n                                    {[if (locale) { let progress = client_translation_progress[locale];]}<div class=\\\"translation-progress\\\">{[print((progress == 100) ? xabber.getString(\\\"settings__section_interface_language__translation_progress_fully\\\") : xabber.getString(\\\"settings__section_interface_language__translation_progress\\\", [`${progress}%`]))]}</div>{[}]}\\n                                </div>\\n                                {[}]}\\n                            </form>\\n                        </div>\\n                        <div class=\\\"description\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"background-overlay\\\"></div>\\n<div class=\\\"settings-panel\\\">\\n    <div class=\\\"settings-transition-wrap\\\">\\n        <div class=\\\"left-column main-left-column settings-column noselect\\\">\\n            <svg class=\\\"btn-add-account mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"contact-add\\\"></svg>\\n            <div class=\\\"single-account-info-wrap account-settings-panel\\\">\\n                <div class=\\\"single-account-info\\\"></div>\\n            </div>\\n            <div class=\\\"accounts-info-wrap\\\">\\n                <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}</div>\\n                <div class=\\\"settings-divider\\\"></div>\\n                <span class=\\\"no-accounts-tip\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__text_no_accounts\\\"))]}</span>\\n            </div>\\n            <div class=\\\"settings-tabs-wrap global-settings-tabs\\\">\\n                <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"preferences\\\"))]}</div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"background\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"palette\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"category_interface\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__background_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"notifications\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"client\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__notifications_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab disabled\\\" data-block-name=\\\"data_storage\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"database\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__data_storage\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__data_storage_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"privacy\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"group-private\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__privacy_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab disabled\\\" data-block-name=\\\"connection\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__connection\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__connection_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab disabled\\\" data-block-name=\\\"debug\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bug\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__debug\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__debug_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"interface_language\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"translate\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\"></div>\\n                </div>\\n                <div class=\\\"settings-tab settings-deletion-button delete-all-accounts\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                    </div>\\n                    <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings__button_quit\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"right-column main-right-column settings-column hidden noselect\\\">\\n            <div class=\\\"settings-panel-head\\\">\\n                <i class=\\\"btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <i class=\\\"btn-back-subsettings mdi mdi-24px mdi-arrow-left hidden\\\"></i>\\n                <span class=\\\"settings-panel-head-title\\\">{[print(xabber.getString(\\\"preference_editor\\\"))]}</span>\\n                <div class=\\\"description\\\"></div>\\n            </div>\\n\\n            <div class=\\\"panel-content-wrap\\\">\\n                <div class=\\\"panel-content\\\">\\n\\n                    <div data-header='{[print(xabber.getString(\\\"category_interface\\\"))]}' class=\\\"settings-block-wrap background\\\">\\n                        <div class=\\\"settings-tabs-wrap global-settings-tabs\\\">\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"background\\\" data-block-name=\\\"appearance\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"palette\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__appearance\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__appearance_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"background\\\" data-block-name=\\\"chats\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chat\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"chat_viewer\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__chats_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"background\\\" data-block-name=\\\"avatars\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"star-face\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"background\\\" data-block-name=\\\"emoji_font\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"star-face\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__emoji_font_header\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__appearance\\\"))]}' class=\\\"settings-block-wrap appearance\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_main_color\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"toolbar-main-color-setting-wrap\\\">\\n                                <div class=\\\"setting toolbar-main-color-setting field-wrap\\\">\\n                                    <div class=\\\"client-main-color-picker\\\">\\n                                        <div class=\\\"colors-line\\\">\\n                                            <div class=\\\"client-main-color-item ground-color-red-500 outline-color-red-500\\\" data-value=\\\"red\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-pink-500 outline-color-pink-500\\\" data-value=\\\"pink\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-purple-500 outline-color-purple-500\\\" data-value=\\\"purple\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-deep-purple-500 outline-color-deep-purple-500\\\" data-value=\\\"deep-purple\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-indigo-500 outline-color-indigo-500\\\" data-value=\\\"indigo\\\">\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"colors-line\\\">\\n                                            <div class=\\\"client-main-color-item ground-color-deep-orange-500 outline-color-deep-orange-500\\\" data-value=\\\"deep-orange\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-orange-500 outline-color-orange-500\\\" data-value=\\\"orange\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-cyan-500 outline-color-cyan-500\\\" data-value=\\\"cyan\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-light-blue-500 outline-color-light-blue-500\\\" data-value=\\\"light-blue\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-blue-500 outline-color-blue-500\\\" data-value=\\\"blue\\\">\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"colors-line\\\">\\n                                            <div class=\\\"client-main-color-item ground-color-amber-500 outline-color-amber-500\\\" data-value=\\\"amber\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-lime-500 outline-color-lime-500\\\" data-value=\\\"lime\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-teal-500 outline-color-teal-500\\\" data-value=\\\"teal\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-brown-500 outline-color-brown-500\\\" data-value=\\\"brown\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-blue-grey-500 outline-color-blue-grey-500\\\" data-value=\\\"blue-grey\\\">\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"colors-line\\\">\\n                                            <div class=\\\"client-main-color-item ground-color-light-green-500 outline-color-light-green-500\\\" data-value=\\\"light-green\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-green-500 outline-color-green-500\\\" data-value=\\\"green\\\">\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"toolbar-color-setting-wrap\\\">\\n                                <div class=\\\"setting settings-color-padding toolbar-color-setting field-wrap\\\">\\n                                    <div class=\\\"selected-color-wrap\\\">\\n                                        <div class=\\\"selected-color-item\\\"></div>\\n                                        <div class=\\\"selected-color-info\\\">\\n                                            <div class=\\\"selected-color-name\\\"></div>\\n                                            <div class=\\\"selected-color-hex\\\"></div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_background\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"background-setting-wrap\\\">\\n                                <div class=\\\"setting background radio-button field-wrap\\\">\\n                                    <div class=\\\"field radio-field clickable-field\\\">\\n                                        <form action=\\\"#\\\">\\n                                            <p>\\n                                                <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default-background\\\" />\\n                                                <label for=\\\"{{view.cid}}-default-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_default\\\"))]}</label>\\n                                            </p>\\n                                            <p>\\n                                                <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"repeating-pattern\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-repeating-pattern-background\\\" />\\n                                                <label for=\\\"{{view.cid}}-repeating-pattern-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_pattern\\\"))]}</label>\\n                                            </p>\\n                                            <p>\\n                                                <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"image\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-image-background\\\" />\\n                                                <label for=\\\"{{view.cid}}-image-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_image\\\"))]}</label>\\n                                            </p>\\n                                        </form>\\n                                    </div>\\n                                    <div class=\\\"current-background-wrap\\\">\\n                                        <div class=\\\"dark-placeholder\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__button_update\\\"))]}</div>\\n                                        <div class=\\\"current-background\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_background_effects\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"background-setting-wrap\\\">\\n                                <div class=\\\"blur-setting-wrap\\\">\\n                                    <div class=\\\"setting blur-setting checkbox-setting field-wrap\\\">\\n                                        <div class=\\\"input-field checkbox-field\\\">\\n                                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blur_switch\\\"/>\\n                                            <label for=\\\"blur_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_blur\\\"))]}</label>\\n                                        </div>\\n                                        <form class=\\\"range-form\\\" action=\\\"#\\\">\\n                                            <div class=\\\"disabled hidden\\\"></div>\\n                                            <p class=\\\"range-field range-field-design\\\">\\n                                                <input type=\\\"range\\\" id=\\\"blur\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                                <span class=\\\"thumb\\\"><span class=\\\"value\\\"></span></span>\\n                                            </p>\\n                                        </form>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"vignetting-setting-wrap\\\">\\n                                    <div class=\\\"setting vignetting-setting checkbox-setting field-wrap\\\">\\n                                        <div class=\\\"input-field checkbox-field\\\">\\n                                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"vignetting_switch\\\"/>\\n                                            <label for=\\\"vignetting_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_vignette\\\"))]}</label>\\n                                        </div>\\n                                        <form class=\\\"range-form\\\" action=\\\"#\\\">\\n                                            <div class=\\\"disabled hidden\\\"></div>\\n                                            <p class=\\\"range-field range-field-design\\\">\\n                                                <input type=\\\"range\\\" id=\\\"vignetting\\\" min=\\\"0\\\" max=\\\"200\\\" />\\n                                                <span class=\\\"thumb\\\"><span class=\\\"value\\\"></span></span>\\n                                            </p>\\n                                        </form>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"chat_viewer\\\"))]}' class=\\\"settings-block-wrap chats\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_behavior\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"setting hotkeys radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"enter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-enter\\\" />\\n                                            <label for=\\\"{{view.cid}}-enter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_enter\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"ctrlenter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-ctrlenter\\\" />\\n                                            <label for=\\\"{{view.cid}}-ctrlenter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_ctrlenter\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__idle_timeout\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"setting idling checkbox-setting field-wrap\\\">\\n                                <div class=\\\"input-field  checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"idling\\\"/>\\n                                    <label for=\\\"idling\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_idling\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting idling-time field-wrap\\\">\\n                                <div class=\\\"idling-time-input\\\">\\n                                    <p class=\\\"range-field range-field-design\\\">\\n                                        <input class=\\\"materialize-timer\\\" placeholder='{[print(constants.IDLING_DEFAULT_TIMEOUT)]}' id=\\\"idle_timeout\\\" min=\\\"{[print(constants.IDLING_MINIMAL_TIMEOUT)]}\\\" max=\\\"{[print(constants.IDLING_MAXIMUM_TIMEOUT)]}\\\" value=\\\"{[print(xabber._settings.get('idling_time'))]}\\\" type=\\\"range\\\" name=\\\"idle_timeout\\\">\\n                                        <span class=\\\"thumb\\\"><span class=\\\"value\\\"></span></span>\\n                                    </p>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-clue\\\">{[print(xabber.getString(\\\"settings__menu_item__idle_timeout_clue\\\"))]}</div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"avatars\\\"))]}' class=\\\"settings-block-wrap avatars\\\">\\n                        <div class=\\\"settings-subblock-wrap contact-list\\\">\\n                            <div class=\\\"circle-avatar noselect\\\"></div>\\n                            <div class=\\\"setting avatar-shape radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"circle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-circle\\\" />\\n                                            <label for=\\\"{{view.cid}}-circle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_circle\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"squircle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-squircle\\\" />\\n                                            <label for=\\\"{{view.cid}}-squircle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_squircle\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"octagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-octagon\\\" />\\n                                            <label for=\\\"{{view.cid}}-octagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_octagon\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"hexagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hexagon\\\" />\\n                                            <label for=\\\"{{view.cid}}-hexagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_hexagon\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"pentagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-pentagon\\\" />\\n                                            <label for=\\\"{{view.cid}}-pentagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_pentagon\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"rounded\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-rounded\\\" />\\n                                            <label for=\\\"{{view.cid}}-rounded\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_rounded\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"star\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-star\\\" />\\n                                            <label for=\\\"{{view.cid}}-star\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_star\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__emoji_font_header\\\"))]}' class=\\\"settings-block-wrap emoji_font hidden\\\">\\n                        <div class=\\\"settings-subblock-wrap contact-list\\\">\\n                            <div class=\\\"setting emoji-font radio-button\\\">\\n                                <div class=\\\"emoji-fonts-list field radio-field clickable-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"emoji-font-information-wrap\\\">\\n                            <div class=\\\"emojis-preview no-select\\\">\\n                                <div class=\\\"emoji-preview\\\">😀</div>\\n                                <div class=\\\"emoji-preview\\\">😁</div>\\n                                <div class=\\\"emoji-preview\\\">😂</div>\\n                                <div class=\\\"emoji-preview\\\">😋</div>\\n                                <div class=\\\"emoji-preview\\\">😎</div>\\n                                <div class=\\\"emoji-preview\\\">😃</div>\\n                                <div class=\\\"emoji-preview\\\">😄</div>\\n\\n                                <div class=\\\"emoji-preview\\\">🐱</div>\\n                                <div class=\\\"emoji-preview\\\">🐭</div>\\n                                <div class=\\\"emoji-preview\\\">🐛</div>\\n                                <div class=\\\"emoji-preview\\\">🕸</div>\\n                                <div class=\\\"emoji-preview\\\">🕷</div>\\n                                <div class=\\\"emoji-preview\\\">🐢</div>\\n                                <div class=\\\"emoji-preview\\\">🐑</div>\\n\\n                                <div class=\\\"emoji-preview\\\">🍏</div>\\n                                <div class=\\\"emoji-preview\\\">🍜</div>\\n                                <div class=\\\"emoji-preview\\\">🍈</div>\\n                                <div class=\\\"emoji-preview\\\">🍕</div>\\n                                <div class=\\\"emoji-preview\\\">🥢</div>\\n                                <div class=\\\"emoji-preview\\\">🍰</div>\\n                                <div class=\\\"emoji-preview\\\">☕️</div>\\n\\n                                <div class=\\\"emoji-preview\\\">🏋️‍♂️</div>\\n                                <div class=\\\"emoji-preview\\\">🏏</div>\\n                                <div class=\\\"emoji-preview\\\">🏉</div>\\n                                <div class=\\\"emoji-preview\\\">🥇</div>\\n                                <div class=\\\"emoji-preview\\\">🎬</div>\\n                                <div class=\\\"emoji-preview\\\">⚽️</div>\\n                                <div class=\\\"emoji-preview\\\">🎸</div>\\n\\n                                <div class=\\\"emoji-preview\\\">🚗</div>\\n                                <div class=\\\"emoji-preview\\\">🏎</div>\\n                                <div class=\\\"emoji-preview\\\">🎡</div>\\n                                <div class=\\\"emoji-preview\\\">⛴</div>\\n                                <div class=\\\"emoji-preview\\\">🏛</div>\\n                                <div class=\\\"emoji-preview\\\">🏝</div>\\n                                <div class=\\\"emoji-preview\\\">🗿</div>\\n\\n                                <div class=\\\"emoji-preview\\\">🖱</div>\\n                                <div class=\\\"emoji-preview\\\">📡</div>\\n                                <div class=\\\"emoji-preview\\\">🎁</div>\\n                                <div class=\\\"emoji-preview\\\">📬</div>\\n                                <div class=\\\"emoji-preview\\\">⏰</div>\\n                                <div class=\\\"emoji-preview\\\">📹</div>\\n                                <div class=\\\"emoji-preview\\\">📱</div>\\n                            </div>\\n                            <div class=\\\"preloader-wrap hidden\\\">\\n                                <div class=\\\"preloader-wrapper preloader-20px active \\\">\\n                                    <div class=\\\"spinner-layer\\\">\\n                                        <div class=\\\"circle-clipper left\\\">\\n                                            <div class=\\\"circle\\\"></div>\\n                                        </div>\\n                                        <div class=\\\"gap-patch\\\">\\n                                            <div class=\\\"circle\\\"></div>\\n                                        </div>\\n                                        <div class=\\\"circle-clipper right\\\">\\n                                            <div class=\\\"circle\\\"></div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"emoji-font-attribution-text hidden\\\"></div>\\n                            <div class=\\\"emoji-font-external-url-text hidden\\\">{[print(xabber.getString(\\\"settings__menu_item__emoji_font_external_url_text\\\"))]}</div>\\n                            <div class=\\\"emoji-font-download-text hidden\\\">{[print(xabber.getString(\\\"settings__menu_item__emoji_font_downloading_text\\\"))]}</div>\\n                            <div class=\\\"emoji-font-button-background emoji-font-external-url-button hidden\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"download\\\"></svg>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}' class=\\\"settings-block-wrap notifications\\\">\\n                        <div class=\\\"settings-tabs-wrap global-settings-tabs\\\">\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"web-notifications\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"client\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__web_notifications\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__web_notifications_label\\\"))]}</div>\\n                                <div class=\\\"field notifications-lever clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"chats-notifications\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chat\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats\\\"))]}</div>\\n                                <div class=\\\"settings-block-label capitalized one-line\\\"></div>\\n                                <div class=\\\"field private-notifications clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab settings-tab-big-icon\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"groupchats-notifications\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"group-public\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats\\\"))]}</div>\\n                                <div class=\\\"settings-block-label capitalized one-line\\\"></div>\\n                                <div class=\\\"field group-notifications clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"calls-notifications\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__calls\\\"))]}</div>\\n                                <div class=\\\"settings-block-label capitalized one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__calls_label\\\"))]}</div>\\n                                <div class=\\\"field jingle-calls clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"attention-calls\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"alarm-bell\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__attention_calls\\\"))]}</div>\\n                                <div class=\\\"settings-block-label capitalized one-line\\\"></div>\\n                                <div class=\\\"field call-attention clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__web_notifications\\\"))]}' class=\\\"settings-block-wrap web-notifications\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting notifications checkbox-setting field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"notifications\\\"/>\\n                                    <label for=\\\"notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_desktop_notifications\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name volume-setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__volume\\\"))]}</div>\\n                            <!--<div class=\\\"setting volume-enable checkbox-setting field-wrap\\\">-->\\n                                <!--<div class=\\\"input-field checkbox-field\\\">-->\\n                                    <!--<input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"notifications_volume_enable\\\"/>-->\\n                                    <!--<label for=\\\"notifications_volume_enable\\\">{[print(xabber.getString(\\\"settings__section_notifications__volume_enable\\\"))]}</label>-->\\n                                <!--</div>-->\\n                            <!--</div>-->\\n                            <div class=\\\"setting volume-setting\\\">\\n                                <form class=\\\"range-form\\\" action=\\\"#\\\">\\n                                    <div class=\\\"disabled hidden\\\"></div>\\n                                    <p class=\\\"range-field range-field-design\\\">\\n                                        <input type=\\\"range\\\" id=\\\"notifications_volume\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                        <span style=\\\"display: none\\\" class=\\\"thumb\\\"><span class=\\\"value\\\"></span></span>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__private_chats\\\"))]}' class=\\\"settings-block-wrap chats-notifications\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting message-preview checkbox-setting private-preview field-wrap\\\">\\n                                <div class=\\\"input-field notifications-dependant checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_private\\\"/>\\n                                    <label for=\\\"preview_private\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                    <div class=\\\"desktop-notifications-clue-wrap\\\">\\n                                        {[print(xabber.getString(\\\"settings__section_notifications__desktop_notifications_clue\\\"))]}\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field notification-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__group_chats\\\"))]}' class=\\\"settings-block-wrap groupchats-notifications\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting message-preview checkbox-setting group-preview field-wrap\\\">\\n                                <div class=\\\"input-field notifications-dependant checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_group\\\"/>\\n                                    <label for=\\\"preview_group\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                    <div class=\\\"desktop-notifications-clue-wrap\\\">\\n                                        {[print(xabber.getString(\\\"settings__section_notifications__desktop_notifications_clue\\\"))]}\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field notification-field group-notification-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__calls\\\"))]}' class=\\\"settings-block-wrap calls-notifications\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field ringtone-field\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__section_notifications__dialtone\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field dialtone-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__attention_calls\\\"))]}' class=\\\"settings-block-wrap attention-calls\\\">\\n                        <div class=\\\"settings-subblock-wrap \\\">\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field attention-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}'  class=\\\"settings-block-wrap privacy hidden\\\">\\n                        <div class=\\\"setting load-media checkbox-setting field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"load-media\\\"/>\\n                                <label for=\\\"load-media\\\">{[print(xabber.getString(\\\"settings__section_privacy__load_media\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting typing-notifications checkbox-setting field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"typing-notifications\\\"/>\\n                                <label for=\\\"typing-notifications\\\">{[print(xabber.getString(\\\"settings__section_privacy__typing_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting mapping-service checkbox-setting field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"mapping-service\\\"/>\\n                                <label for=\\\"mapping-service\\\">{[print(xabber.getString(\\\"settings__section_privacy__mapping_service\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}'  class=\\\"settings-block-wrap interface_language hidden\\\">\\n                        <div class=\\\"setting radio-button interface-language-setting\\\">\\n                            <div class=\\\"languages-list field radio-field clickable-field\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"toolbar-top\\\">\\n    <div class=\\\"toolbar-item toolbar-logo\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__all_chats\\\"))]}'>\\n        <img class=\\\"logo\\\" src=\\\"{{TOOLBAR_LOGO}}\\\">\\n    </div>\\n</div>\\n\\n<div class=\\\"toolbar-middle\\\">\\n    <div class=\\\"toolbar-item all-chats active\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__all_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-message-text\\\"></i>\\n        <span class=\\\"all-msg-indicator\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item jingle-calls\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__jingle_calls\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-phone\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item mentions\\\" title='{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <svg class=\\\"toolbar-icon mdi mdi-24px mdi-svg-template\\\" viewBox=\\\"0 0 24 24\\\" data-svgname=\\\"bell\\\"></svg>\\n        <span class=\\\"mentions-indicator\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item contacts\\\" title='{[print(xabber.getString(\\\"category_title_contacts\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-account-multiple\\\"></i>\\n    </div>\\n\\n    <div class=\\\"toolbar-item geolocation-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__geolocation_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-compass\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item archive-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__archive_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-archive\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item saved-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__saved_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-bookmark\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"add-something-wrap\\\">\\n        <div class=\\\"toolbar-item dropdown-button add-something\\\" data-activates=\\\"{{view.cid}}-add\\\" title='{[print(xabber.getString(\\\"toolbar__button_add_tooltip\\\"))]}'>\\n            <i class=\\\"toolbar-icon mdi mdi-24px mdi-plus\\\"></i>\\n        </div>\\n\\n        <div id=\\\"{{view.cid}}-add\\\" class=\\\"add-variants dropdown-content noselect\\\">\\n            <div class=\\\"add-variant contact\\\">\\n                <i class=\\\"mdi mdi-20px mdi-account-plus\\\"></i>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"add_contact\\\"))]}</span>\\n            </div>\\n            <div class=\\\"add-variant public-groupchat\\\">\\n                <i class=\\\"mdi mdi-20px mdi-account-multiple-plus\\\"></i>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"create_group\\\"))]}</span>\\n            </div>\\n            <div class=\\\"add-variant incognito-groupchat\\\">\\n                <svg class=\\\"mdi mdi-20px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M13 11A3 3 0 1 0 10 8A3 3 0 0 0 13 11M13 7A1 1 0 1 1 12 8A1 1 0 0 1 13 7M17.11 10.86A5 5 0 0 0 17.11 5.14A2.91 2.91 0 0 1 18 5A3 3 0 0 1 18 11A2.91 2.91 0 0 1 17.11 10.86M13 13C7 13 7 17 7 17V19H19V17S19 13 13 13M9 17C9 16.71 9.32 15 13 15C16.5 15 16.94 16.56 17 17M24 17V19H21V17A5.6 5.6 0 0 0 19.2 13.06C24 13.55 24 17 24 17M8 12H5V15H3V12H0V10H3V7H5V10H8Z\\\" />\\n                </svg>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"create_incognito_group\\\"))]}</span>\\n            </div>\\n            <div class=\\\"add-variant account\\\">\\n                <i class=\\\"mdi mdi-20px mdi-account-circle\\\"></i>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"dialog_add__label_add_account\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"toolbar-bottom\\\">\\n    <div class=\\\"accounts-wrap\\\">\\n        <div class=\\\"accounts\\\">\\n            <div class=\\\"toolbar-item settings-modal hidden\\\" title='{[print(xabber.getString(\\\"settings\\\"))]}'>\\n                <div class=\\\"border\\\"></div>\\n                <i class=\\\"toolbar-icon mdi mdi-24px mdi-settings\\\"></i>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-item-wrap property-variant\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"name-wrap\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\";","export default \"    <div class=\\\"message-input-panel noselect\\\">\\n        <div class=\\\"my-avatar circle-avatar circle-image-fix\\\"></div>\\n        <div class=\\\"message-form\\\">\\n            <div class=\\\"fwd-messages-preview noselect hidden\\\">\\n                <div class=\\\"msg-border ground-color-700\\\">\\n                </div>\\n                <div class=\\\"msg-content\\\">\\n                    <p class=\\\"msg-author text-color-700 one-line\\\"></p>\\n                    <p class=\\\"msg-text one-line\\\"></p>\\n                </div>\\n                <div class=\\\"close-forward\\\">\\n                    <i class=\\\"mdi mdi-20px mdi-close hover-text-color-500\\\"></i>\\n                </div>\\n            </div>\\n            <div class=\\\"message-reference-preview hidden\\\">\\n                <div class=\\\"message-reference-preview-container\\\">\\n                </div>\\n                <div class=\\\"close-attachments\\\">\\n                    <i class=\\\"mdi mdi-20px mdi-close hover-text-color-500\\\"></i>\\n                </div>\\n            </div>\\n            <div class=\\\"input-field input-message\\\">\\n                <div class=\\\"mentions-list\\\"></div>\\n                <div class=\\\"rich-textarea-wrap notranslate\\\">\\n                </div>\\n                <div class=\\\"scrollbar-cover\\\"></div>\\n                <div class=\\\"insert-emoticon\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n                </div>\\n                <div class=\\\"preview-preloader-container hidden\\\" title='{[print(xabber.getString(\\\"chat_bottom__preview_preloader_cancel\\\"))]}'>\\n                    <svg class=\\\"preview-cancel-preloader mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"link\\\"></svg>\\n                </div>\\n                <div class=\\\"emoticons-panel-wrap\\\">\\n                    <div class=\\\"emoticons-panel\\\"></div>\\n                    <div class=\\\"emoji-menu\\\"></div>\\n                </div>\\n            </div>\\n            <div class=\\\"input-voice-message\\\">\\n                <div class=\\\"voice-visualizer\\\"></div>\\n                <div class=\\\"timer\\\">0:00</div>\\n                <div class=\\\"voice-msg-status\\\">{[print(xabber.getString(\\\"chat_bottom__placeholder__cancel_write_voice\\\"))]}</div>\\n            </div>\\n            <div class=\\\"input-toolbar\\\">\\n                <div class=\\\"attach attach-file\\\">\\n                    <input type=\\\"file\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_file\\\"))]}' multiple>\\n                    <i class=\\\"mdi mdi-24px mdi-paperclip\\\"></i>\\n                </div>\\n                <div class=\\\"attach attach-media\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_media\\\"))]}'>\\n                    <i class=\\\"mdi mdi-24px mdi-file-image\\\"></i>\\n                </div>\\n                <div class=\\\"attach attach-location\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_location\\\"))]}'>\\n                    <input type=\\\"text\\\" hidden title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_location\\\"))]}'>\\n                    <i class=\\\"mdi mdi-24px mdi-map-marker\\\"></i>\\n                </div>\\n                <div title=\\\"Format text\\\" class=\\\"format-text\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-format-text\\\"></i>\\n                </div>\\n                <div class=\\\"last-emoticons\\\">\\n                </div>\\n                <div class=\\\"account-info-wrap\\\">\\n                    <div class=\\\"account-jid text-color-700\\\"></div>\\n                    <div class=\\\"account-nickname text-color-700\\\"></div>\\n                    <div class=\\\"account-badge\\\"></div>\\n                    <div class=\\\"account-role ground-color-700\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"send-area\\\">\\n            <i class=\\\"send-message mdi mdi-32px mdi-send text-color-700 hover-text-color-500 hidden\\\"></i>\\n            <i class=\\\"mdi mdi-32px mdi-microphone attach-voice-message text-color-700 hover-text-color-500\\\"></i>\\n            <div class=\\\"ephemeral-timer-time text-color-700\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"blocked-msg hidden\\\">{[print(xabber.getString(\\\"chat_bottom__placeholder__blocked\\\"))]}</div>\\n    <div class=\\\"message-actions-panel noselect hidden\\\">\\n        <div class=\\\"button-wrap reply-message-wrap\\\">\\n            <i class=\\\"action-button reply-message mdi ground-color-700 mdi-reply mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"chat_reply\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"chat_reply\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap forward-message-wrap\\\">\\n            <i class=\\\"action-button forward-message mdi ground-color-700 mdi-forward mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"chat_froward\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"chat_froward\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap copy-message-wrap\\\">\\n            <i class=\\\"action-button copy-message mdi ground-color-700 mdi-content-copy mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_copy\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_copy\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap delete-message-wrap\\\">\\n            <i class=\\\"action-button delete-message mdi ground-color-700 mdi-delete mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"delete\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"delete\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap edit-message-wrap\\\">\\n            <i class=\\\"action-button edit-message mdi ground-color-700 mdi-pencil mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_edit\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_edit\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap pin-message-wrap\\\">\\n            <svg class=\\\"action-button pin-message ground-color-700\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path fill=\\\"#FFF\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\"></path>\\n            </svg>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_pin\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_pin\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap cancel-message-wrap\\\">\\n            <i class=\\\"action-button close-message-panel mdi mdi-close mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div>\\n        </div>\\n    </div>\\n\";","export default \"  <div class=\\\"search-form-header\\\">\\n    <div class=\\\"messages-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"chat__search_messages_panel__placeholder\\\"))]}' autofocus>\\n    </div>\\n    <div class=\\\"text-color-700 btn-cancel-searching\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div>\\n</div>\\n<div class=\\\"pinned-message\\\"></div>\\n<div class=\\\"elements-in-top\\\">\\n    <div class=\\\"subscription-buttons-wrap hidden\\\"></div>\\n    <div class=\\\"chat-day-indicator fixed-day-indicator-wrap hidden\\\"><div class=\\\"fixed-day-indicator\\\"></div></div>\\n</div>\\n<div class=\\\"load-history-feedback hidden\\\"></div>\\n<div class=\\\"participant-messages-header hidden\\\"><div class=\\\"messages-by-header\\\">{[print(xabber.getString(\\\"chat__placeholder_participant_messages__messages_by\\\"))]} <div class=\\\"participant-nickname text-color-700\\\"></div></div><div class=\\\"btn-cancel-selection\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div><div class=\\\"text-color-700 btn-retract-messages\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_all\\\"))]}</div></div>\\n<div class=\\\"chat-content\\\">\\n</div>\\n<div class=\\\"chat-notification hidden one-line\\\"></div>\\n<i class=\\\"mdi mdi-36px back-to-unread hidden mdi-chevron-down\\\"><div class=\\\"back-to-unread-counter\\\"></div></i>\\n<i class=\\\"mdi mdi-36px back-to-bottom mdi-chevron-down\\\"></i>\\n\";","export default \"<div class=\\\"search-wrap\\\">\\n    <div class=\\\"search-content\\\">\\n        <div class=\\\"search-form-header block-header\\\">\\n            <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n            <div class=\\\"messages-search-form search-form \\\">\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"chat__search_messages_panel__placeholder\\\"))]}' autofocus>\\n            </div>\\n            <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n        </div>\\n        <div class=\\\"search-messages-content-wrap\\\">\\n            <div class=\\\"search-results\\\">\\n                {[print(xabber.getString(\\\"nothing_was_searched\\\"))]}\\n            </div>\\n            <div class=\\\"preloader-wrap\\\">\\n                <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"messages-count\\\">\\n            </div>\\n            <div class=\\\"chat-content\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"chat-body-content-placeholder-text no-select\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n\";","export default \"<div class=\\\"chat-head-details\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"contact-status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"chat-head-info-buttons-container\\\">\\n    <div class=\\\"contact-info\\\">\\n        <div class=\\\"contact-name-wrap\\\">\\n            <i class=\\\"mdi encrypted-icon mdi-14px mdi-lock\\\"></i>\\n            <p class=\\\"contact-name one-line\\\"></p>\\n        </div>\\n        <p class=\\\"contact-status-message one-line\\\"></p>\\n    </div>\\n    <div class=\\\"chat-tools-wrap\\\">\\n        <div class=\\\"chat-tool chat-tool-player\\\">\\n            <div class=\\\"chat-tool-player-containter\\\">\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-previous-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-previous mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-play-pause-plyr\\\">\\n                    <i class=\\\"mdi mdi-play mdi-24px\\\"></i>\\n                    <i class=\\\"mdi mdi-pause mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-next-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-next mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-popup-plyr\\\">\\n                    <img class=\\\"player-poster hidden\\\">\\n                    <svg class=\\\"mdi mdi-32px mdi-player-type-icon mdi-svg-template\\\" data-svgname=\\\"video\\\"></svg>\\n                    <div class=\\\"voice-message-player-avatar circle-avatar hidden\\\"></div>\\n                </div>\\n                <div class=\\\"chat-tool chat-player-duration chat-tool-plyr-controls\\\">\\n                    <div class=\\\"chat-head-player-title one-line\\\"><div class=\\\"chat-head-player-title-text\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</div></div>\\n                    <div class=\\\"chat-head-player-title-bottom-container\\\">\\n                        <span class=\\\"chat-head-player-type one-line\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</span><span class=\\\"chat-head-player-type-dot\\\"> •</span>\\n                        <span class=\\\"chat-head-player-current-time\\\">0:00</span> /\\n                        <span class=\\\"chat-head-player-total-time\\\">0:00</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-stop-plyr\\\">\\n                    <i class=\\\"mdi mdi-close mdi-16px\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"chat-tool btn-show-fingerprints\\\">\\n            <i class=\\\"mdi mdi-lock mdi-24px\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-jingle-message\\\">\\n            <i class=\\\"mdi mdi-phone mdi-24px\\\"></i>\\n        </div>\\n        <!--<div class=\\\"chat-tool btn-set-status\\\">\\n            <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <g stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\">\\n                    <rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"/>\\n                    <path d=\\\"M20,4 C21.1045695,4 22,4.8954305 22,6 L22,16 C22,17.1045695 21.1045695,18 20,18 L16,18 L12,22 L8,18 L4,18 C2.8954305,18 2,17.1045695 2,16 L2,6 C2,4.8954305 2.8954305,4 4,4 L20,4 Z M16,12 L6,12 L6,14 L16,14 L16,12 Z M18,8 L6,8 L6,10 L18,10 L18,8 Z\\\" id=\\\"tooltip-variant\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\"></path>\\n                </g>\\n            </svg>\\n        </div>-->\\n        <div class=\\\"chat-tool btn-search-messages\\\">\\n            <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-more\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"{{view.cid}}-more\\\" class=\\\"chat-head-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-chat-pin\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-archive-chat\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-notifications active-hover\\\" data-activates=\\\"{{view.cid}}-mute-more\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"ephemeral-timer-dropdown active-hover\\\" data-activates=\\\"select-ephemeral-timer-{{view.cid}}\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"ephemeral_timer_menu\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-call-attention\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"call_attention\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-invite-users\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_invite\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-start-encryption\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_start_encrypted_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-open-encrypted-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_open_encrypted_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-open-regular-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_open_regular_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-delete-chat\\\">\\n                <span class=\\\"one-line text-color-500\\\">{[print(xabber.getString(\\\"delete_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-clear-history\\\">\\n                <span class=\\\"one-line text-color-500\\\">{[print(xabber.getString(\\\"clear_history\\\"))]}</span>\\n            </li>\\n        </ul>\\n        <ul id=\\\"{{view.cid}}-mute-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n            </li>\\n        </ul>\\n        <ul id=\\\"select-ephemeral-timer-{{view.cid}}\\\" class=\\\"ephemeral-timer-dropdown-content dropdown-content noselect\\\">\\n            <li class=\\\"btn-set-ephemeral-timer\\\" data-value=\\\"\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"ephemeral_timer_none\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-set-ephemeral-timer\\\" data-value=\\\"5\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"ephemeral_timer_5\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-set-ephemeral-timer\\\" data-value=\\\"10\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"ephemeral_timer_10\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-set-ephemeral-timer\\\" data-value=\\\"15\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"ephemeral_timer_15\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-set-ephemeral-timer\\\" data-value=\\\"30\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"ephemeral_timer_30\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-set-ephemeral-timer\\\" data-value=\\\"60\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"ephemeral_timer_60\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-set-ephemeral-timer\\\" data-value=\\\"300\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"ephemeral_timer_300\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-set-ephemeral-timer\\\" data-value=\\\"600\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"ephemeral_timer_600\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-set-ephemeral-timer\\\" data-value=\\\"900\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"ephemeral_timer_900\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"recent-chat-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <i class=\\\"mdi encrypted-icon mdi-14px mdi-lock\\\"></i>\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <i class=\\\"mdi muted-icon mdi-14px mdi-bell-off\\\"></i>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n</div>\\n<div class=\\\"chat-states\\\">\\n    <div class=\\\"chat-item-notifications-wrap\\\">\\n        <span class=\\\"msg-chat-error hidden\\\">!</span>\\n        <span class=\\\"msg-incoming-subscription hidden\\\">\\n            <svg class=\\\"mdi mdi-12px mdi-svg-template\\\" data-svgname=\\\"plus\\\"></svg>\\n        </span>\\n        <span class=\\\"msg-counter hidden\\\"></span>\\n        <i class=\\\"msg-delivering-state mdi mdi-16px hidden\\\"></i>\\n        <i class=\\\"pinned-icon\\\">\\n            <svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n                <g id=\\\"icon/material/pinned-circle-small\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n                    <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n                    <path d=\\\"M12,3 C16.9705627,3 21,7.02943725 21,12 C21,16.9705627 16.9705627,21 12,21 C7.02943725,21 3,16.9705627 3,12 C3,7.02943725 7.02943725,3 12,3 Z M12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 Z M14,6.5 L17.5,9.5 L16.5,10.5 L16,10 L14.25,13.25 L15.25,14.75 L14,16 L11.5,13.5 L8.75,16.25 L7.75,16.25 L7.75,15.25 L10.5,12.5 L8,10 L9.25,8.75 L10.75,9.75 L13.5,8 L13,7.5 L14,6.5 Z\\\" id=\\\"xabber:pinned-small\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n                </g>\\n            </svg>\\n        </i>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"chat_list__placeholder\\\"))]}</div>\\n\";","export default \"<div class=\\\"recent-chats-panel noselect\\\">\\n    <div class=\\\"chats-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"chat-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"pinned-chat-list item-list\\\">\\n        </div>\\n        <div class=\\\"chat-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"load-chats-feedback hidden\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n    </div>\\n    <div class=\\\"read-all-button hidden\\\">{[print(xabber.getString(\\\"mark_all_as_read_button\\\"))]}</div>\\n</div>\\n\";","export default \"<div class=\\\"field clickable-field {{className}} switch normal\\\">\\n    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{id}}\\\">\\n    <label for=\\\"{{id}}\\\"></label>\\n</div>\";","export default \"<div>\\n    <i class=\\\"mdi mdi-36px mdi-alert-circle\\\"></i>\\n</div>\\n<div class=\\\"warning-message\\\">{{message}}</div>\\n<button class=\\\"btn-manage-devices btn-flat btn-main btn-dark hover-ground-color-amber-300\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\";","export default \"<div class=\\\"warning-wrap\\\">\\n    <p class=\\\"warning-message\\\">{{message}}</p>\\n    <button class=\\\"btn-manage-devices btn-flat btn-main btn-dark ground-color-{{color}}-100 hover-ground-color-{{color}}-300\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"ephemeral_timer_modal__header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div data-value=\\\"\\\" class=\\\"btn-set-ephemeral-timer\\\">{[print(xabber.getString(\\\"ephemeral_timer_none\\\"))]}</div>\\n        <div data-value=\\\"5\\\" class=\\\"btn-set-ephemeral-timer\\\">{[print(xabber.getString(\\\"ephemeral_timer_5\\\"))]}</div>\\n        <div data-value=\\\"10\\\" class=\\\"btn-set-ephemeral-timer\\\">{[print(xabber.getString(\\\"ephemeral_timer_10\\\"))]}</div>\\n        <div data-value=\\\"15\\\" class=\\\"btn-set-ephemeral-timer\\\">{[print(xabber.getString(\\\"ephemeral_timer_15\\\"))]}</div>\\n        <div data-value=\\\"30\\\" class=\\\"btn-set-ephemeral-timer\\\">{[print(xabber.getString(\\\"ephemeral_timer_30\\\"))]}</div>\\n        <div data-value=\\\"60\\\" class=\\\"btn-set-ephemeral-timer\\\">{[print(xabber.getString(\\\"ephemeral_timer_60\\\"))]}</div>\\n        <div data-value=\\\"300\\\" class=\\\"btn-set-ephemeral-timer\\\">{[print(xabber.getString(\\\"ephemeral_timer_300\\\"))]}</div>\\n        <div data-value=\\\"600\\\" class=\\\"btn-set-ephemeral-timer\\\">{[print(xabber.getString(\\\"ephemeral_timer_600\\\"))]}</div>\\n        <div data-value=\\\"900\\\" class=\\\"btn-set-ephemeral-timer\\\">{[print(xabber.getString(\\\"ephemeral_timer_900\\\"))]}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-header noselect\\\">\\n    <div class=\\\"panel-header\\\">\\n        <span class=\\\"header\\\">{[print(xabber.getString(\\\"dialog_forward_message__header\\\"))]}</span>\\n    </div>\\n</div>\\n<div class=\\\"modal-content noselect\\\">\\n    <div class=\\\"chats-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"chat-list-wrap\\\">\\n        <div class=\\\"pinned-chat-list forward-chats-list\\\">\\n        </div>\\n        <div class=\\\"chat-list forward-chats-list\\\">\\n        </div>\\n        <div class=\\\"contact-list forward-chats-list\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"error hidden\\\">{[print(xabber.getString(\\\"placeholder_no_matches\\\"))]}</div>\\n</div>\\n\";","export default \"<div class=\\\"modal-header\\\">\\n    <span>{[print(xabber.getString(\\\"create_groupchat\\\"))]}</span>\\n    <div class=\\\"account-dropdown-wrap\\\" data-activates=\\\"select-account-for-creating-groupchat\\\">\\n        <div class=\\\"dropdown-button\\\">\\n            <div class=\\\"account-item-wrap\\\">\\n                <div class=\\\"circle-avatar noselect\\\">\\n                    <img>\\n                </div>\\n            </div>\\n        </div>\\n        <div id=\\\"select-account-for-creating-groupchat\\\" class=\\\"dropdown-content noselect\\\">\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"row name-field\\\">\\n        <div class=\\\"input-field input-group-chat-name\\\">\\n            <label for=\\\"new_chat_name\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</label>\\n            <input id=\\\"new_chat_name\\\" type=\\\"text\\\" name=\\\"chat_name\\\" placeholder='{[print(xabber.getString(\\\"group_is_empty\\\"))]}' required>\\n        </div>\\n    </div>\\n    <div class=\\\"row jid-field\\\">\\n        <label for=\\\"new_chat_jid\\\">{[print(xabber.getString(\\\"groupchat_xmpp_jid\\\"))]}</label>\\n        <div class=\\\"input-field input-group-chat-jid\\\">\\n            <input id=\\\"new_chat_jid\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat_xmpp_jid\\\"))]}' name=\\\"chat_jid\\\">\\n            <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                <div class=\\\"select-xmpp-server\\\">\\n                    <div data-activates=\\\"select-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                    <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                        <input id=\\\"new_chat_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"chat_domain\\\">\\n                    </div>\\n                    <div data-activates=\\\"select-xmpp-server\\\" class=\\\"caret\\\">\\n                        <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                        <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                    </div>\\n                </div>\\n                <div id=\\\"select-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                    <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        <span class=\\\"errors\\\"></span>\\n    </div>\\n    <div class=\\\"row incognito-field hidden\\\">\\n        <i class=\\\"field-icon mdi mdi-24px mdi-incognito\\\"></i>\\n        <div class=\\\"property-field incognito-dropdown-wrap\\\">\\n           <div class=\\\"public-item-wrap property-wrap\\\"><div data-value=\\\"public\\\" class=\\\"property-value\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_public\\\"))]}</div></div>\\n           <div class=\\\"incognito-item-wrap property-wrap\\\"><div data-value=\\\"incognito\\\" class=\\\"property-value\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_incognito\\\"))]}</div></div>\\n        </div>\\n    </div>\\n    <div class=\\\"row group-radio-fields\\\">\\n        <div class=\\\"property-radio-field membership-dropdown-wrap\\\">\\n            <div class=\\\"membership-item-wrap property-wrap\\\">\\n                <div class=\\\"property-radio-label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n            </div>\\n            <div class=\\\"property-radio-wrap\\\">\\n                <div class=\\\"property-radio\\\">\\n                    <input checked id=\\\"membership_open\\\" data-value=\\\"open\\\" name=\\\"group_membership\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"membership-label\\\" for=\\\"membership_open\\\">{[print(xabber.getString(\\\"groupchat_membership_type_open\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"membership_member_only\\\" data-value=\\\"member-only\\\" name=\\\"group_membership\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"membership-label\\\" for=\\\"membership_member_only\\\">{[print(xabber.getString(\\\"groupchat_membership_type_members_only\\\"))]}</label>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"property-radio-field global-dropdown-wrap\\\">\\n            <div class=\\\"global-item-wrap property-wrap\\\">\\n                <div class=\\\"property-radio-label\\\">{[print(xabber.getString(\\\"groupchat_index\\\"))]}</div>\\n            </div>\\n            <div class=\\\"property-radio-wrap\\\">\\n                <div class=\\\"property-radio\\\">\\n                    <input checked id=\\\"index_none\\\" data-value=\\\"none\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_none\\\">{[print(xabber.getString(\\\"groupchat_index_type_none\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"index_local\\\" data-value=\\\"local\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_local\\\">{[print(xabber.getString(\\\"groupchat_index_type_local\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"index_global\\\" data-value=\\\"global\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_global\\\">{[print(xabber.getString(\\\"groupchat_index_type_global\\\"))]}</label>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row description-field\\\">\\n        <div class=\\\"input-field input-message\\\">\\n            <label class=\\\"description-label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</label>\\n            <div class=\\\"rich-textarea-wrap notranslate\\\">\\n                <div class=\\\"rich-textarea\\\" tabindex=\\\"2\\\" contenteditable=\\\"\\\"></div>\\n                <div class=\\\"placeholder\\\">{[print(xabber.getString(\\\"groupchat_example_description\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"create\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header noselect\\\">\\n    <div class=\\\"panel-header\\\">\\n        <span class=\\\"header\\\">{[print(xabber.getString(\\\"groupchat_invite_users\\\"))]}</span>\\n    </div>\\n</div>\\n<div class=\\\"modal-content noselect\\\">\\n    <div class=\\\"chats-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"contacts-list-wrap\\\">\\n    </div>\\n    <div class=\\\"error hidden\\\">{[print(xabber.getString(\\\"placeholder_no_matches\\\"))]}</div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"invitation-reason-wrap hidden\\\">\\n        <textarea class=\\\"text-field textarea-glow input-glow account-glow\\\" type=\\\"text\\\" cols=\\\"10\\\" rows=\\\"5\\\" placeholder='{[print(xabber.getString(\\\"invitation_text_placeholder\\\"))]}' id=\\\"invitation_text\\\" name=\\\"invitation_text\\\"></textarea>\\n    </div>\\n    <button class=\\\"btn-flat btn-main btn-invitation-reason\\\">{[print(xabber.getString(\\\"Invitation_reason_button_text\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-add\\\"><span class=\\\"counter hidden\\\"></span>{[print(xabber.getString(\\\"groupchat_invite\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-dark btn-main btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <span class=\\\"errors\\\"></span>\\n</div>\";","export default \"<div class=\\\"list-item mention-item\\\" data-jid=\\\"{{jid}}\\\" data-id=\\\"{{id}}\\\" data-nickname=\\\"{{nickname}}\\\">\\n    <div class=\\\"circle-avatar\\\"></div>\\n    <div class=\\\"participant-info\\\">\\n        <span class=\\\"one-line nickname\\\">{{nickname}}</span>\\n        <span class=\\\"one-line jid\\\">{{jid}}</span>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content full-pinned-message\\\"></div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-content\\\">\\n        <div id=\\\"map\\\" class=\\\"text-color-700\\\" style=\\\"width:800px; height:490px;\\\" data-type='map'></div>\\n        <div class=\\\"form-group\\\">\\n                <textarea id=\\\"output\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n                <textarea id=\\\"lat\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n                <textarea id=\\\"lon\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"recent-chat-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n</div>\\n\";","export default \"{[ if (blob) {]}\\n<div class=\\\"attached-image-preview message-reference-preview-attached message-reference-preview-item-file{[ if (file.is_errored) {]} attached-errored{[}]}\\\" title='{[ if (file.is_errored) {]}{[print(xabber.getString(\\\"chat_bottom__attached_file_error_hint\\\"))]}{[}]}' data-id=\\\"{{uid}}\\\">\\n    <div class=\\\"attached-file-size one-line\\\">{{filesize}}</div>\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n    {[ if (blob) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{blob}}\\\" src=\\\"{{blob}}\\\">\\n    {[}]}\\n</div>\\n{[} else {]}\\n<div class=\\\"attached-file-preview message-reference-preview-attached message-reference-preview-item-file{[ if (file.is_errored) {]} attached-errored{[}]}\\\" title='{[ if (file.is_errored) {]}{[print(xabber.getString(\\\"chat_bottom__attached_file_error_hint\\\"))]}{[}]}' data-id=\\\"{{uid}}\\\">\\n    <div class=\\\"attached-file-text\\\">\\n        <div class=\\\"attached-file-name one-line\\\">{{file.name}}</div>\\n        <div class=\\\"attached-file-size one-line\\\">{{filetype}}, {{filesize}}</div>\\n    </div>\\n    <i class=\\\"mdi attached-file-icon {{typeicon}}\\\"></i>\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n</div>\\n{[}]}\";","export default \"<div class=\\\"one-file-wrap link-file\\\">\\n    <i class=\\\"mdi mdi-play no-uploaded\\\"></i>\\n    <i class=\\\"mdi mdi-pause\\\"></i>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>{[ if (duration) { ]}, {{duration}}{[ } ]},  <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{sources[0]}}\\\" class=\\\"file-link-download\\\">{[print(xabber.getString(\\\"action_download\\\"))]}</a>\\n        <a class=\\\"voice-message-play\\\">Play</a>\\n    </div>\\n</div>\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div class=\\\"chat-message system auth-request\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"><img></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}<span class=\\\"accept-request\\\">Accept</span><span class=\\\"decline-request\\\">Decline</span><span class=\\\"block-request\\\">Block</span></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"one-file-wrap link-file\\\">\\n    <i class=\\\"mdi {{mdi_icon}}\\\"></i>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>{[ if (is_audio && duration) { ]}, {{duration}}{[ } ]},  <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{sources[0]}}\\\" class=\\\"file-link-download\\\">{[print(xabber.getString(\\\"action_download\\\"))]}</a>\\n    </div>\\n</div>\";","export default \"<div class=\\\"one-file-wrap link-file unuploaded-file\\\" data-upload-file-id=\\\"{{upload_id}}\\\">\\n    <div class=\\\"file-loading-container\\\"></div>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>, <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <div class=\\\"circle-percent-text\\\">0%</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"chat-message main {{classlist}} file-upload noselect\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content chat-main-upload-media\\\">\\n        </div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n        {[ if (is_sender) { ]}\\n        <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n        <div id=\\\"retry-send-msg-{{msgid}}\\\" class=\\\"dropdown-content retry-send-message noselect\\\">\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 repeat-upload\\\">{[print(xabber.getString(\\\"resend\\\"))]}</div>\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 edit-upload{[ if (encrypted) { ]} hidden{[ } ]}\\\">{[print(xabber.getString(\\\"edit\\\"))]}</div>\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 btn-delete-message\\\">{[print(xabber.getString(\\\"delete\\\"))]}</div>\\n        </div>\\n        {[ } ]}\\n        {[ if (ephemeral_timer_text) { ]}\\n            <div class=\\\"ephemeral-timer-msg-time text-color-700{[ if (is_sender) { ]} ephemeral-timer-own-msg-time{[ } ]}\\\">{{ephemeral_timer_text}}</div>\\n        {[ } ]}\\n        <div class=\\\"msg-copy-link\\\" title='{[print(xabber.getString(\\\"action_copy_link\\\"))]}'><i class=\\\"mdi mdi-link-variant\\\" data-image=\\\"{{is_image}}\\\"></i></div>\\n        <div class=\\\"msg-copy-location\\\"  title='{[print(xabber.getString(\\\"action_copy_location\\\"))]}'><div class=\\\"msg-copy-location-content\\\" data-location=\\\"false\\\"></div></div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"fwd-message\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-from-id=\\\"{{from_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"fwd-left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"fwd-msg-author-wrap\\\">\\n            <div class=\\\"fwd-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if ((role)&&(role != 'Member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n            <div class=\\\"msg-time selectable-text one-line\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content\\\"></div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message system auth-request\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}<div><span class=\\\"accept-request-group\\\">Accept</span><span class=\\\"decline-request-group\\\">Decline</span><span class=\\\"block-request-group\\\">Block</span></div></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-2\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-2\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-3 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"template-for-3 minor-images\\\"><div class=\\\"img-content-template template-for-3 minor\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-3 minor\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-4 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-4 minor-images\\\">\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-5\\\"><div class=\\\"img-content-wrap template-for-5 main\\\"><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\\n<div class=\\\"img-content-wrap template-for-5 minor-images\\\"><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-6\\\"><div class=\\\"img-content-wrap template-for-6 main-row\\\"><div class=\\\"img-content-template template-for-6 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-6 minor-1\\\"><div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\\n<div class=\\\"template-for-6 minor-2\\\"><div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6 last-image\\\"><img title=\\\"{{images[5].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[5].sources[0]}}\\\">\\n{[ if (images.length > 6) { ]}<span class=\\\"image-counter\\\"></span>{[ for (var i=6; i < images.length; i++) {]} <div class=\\\"img-content-template hidden\\\"><img title=\\\"{{images[i].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[i].sources[0]}}\\\"></div> {[}} ]}</div></div></div>\\n\";","export default \"<div class=\\\"images-details\\\">\\n    <div class=\\\"images-details-header\\\">\\n        {[print(xabber.getString(\\\"privacy_risk_images_header\\\"))]}\\n    </div>\\n    {[img_information.images.forEach((image) => {]}\\n        <div class=\\\"image-details\\\">\\n            {{image.name}} <span>{{image.pretty_size}}, {{image.height}}x{{image.width}}</span>\\n        </div>\\n    {[})]}\\n</div>\\n<div class=\\\"image-servers-details\\\">\\n    {[if (img_information.servers.length === 1) {]}\\n        <div class=\\\"images-details-header\\\">\\n            {[print(xabber.getString(\\\"privacy_risk_server_header\\\", [img_information.servers[0]]))]}\\n        </div>\\n    {[} else {]}\\n        <div class=\\\"images-details-header\\\">\\n            {[print(xabber.getString(\\\"privacy_risk_servers_header\\\"))]}\\n        </div>\\n        {[img_information.servers.forEach((server) => {]}\\n            <div class=\\\"server-details\\\">\\n                {{server}}\\n            </div>\\n        {[})]}\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"link-message-reference message-reference-preview-attached message-reference-preview-item {[ if (item.image && item.video_url) {]}link-message-reference-video{[}]}\\\" data-original-url=\\\"{{item.original_text}}\\\">\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n    {[ if (item.image && item.video_url) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{item.image}}\\\" src=\\\"{{item.image}}\\\">\\n    <div class=\\\"attached-site-name one-line\\\">{{item.site}}</div>\\n    {[} else if (item.image) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{item.image}}\\\" src=\\\"{{item.image}}\\\">\\n    <div class=\\\"attached-text-block\\\">\\n        <div class=\\\"link-site one-line\\\">{{domain}}</div>\\n        {[if (item.description) {]}\\n            <div class=\\\"link-title{[if (item.description.length <= 25) {]} link-title-short{[}]}\\\">{{item.description}}</div>\\n        {[} else {]}\\n            <div class=\\\"link-title{[if (item.title.length <= 25) {]} link-title-short{[}]}\\\">{{item.title}}</div>\\n        {[}]}\\n    </div>\\n    {[} else {]}\\n    <div class=\\\"attached-text-block\\\">\\n        <div class=\\\"link-site one-line\\\">{{domain}}</div>\\n        {[if (item.description) {]}\\n            <div class=\\\"link-title{[if (item.description.length <= 29) {]} link-title-short{[}]}\\\">{{item.description}}</div>\\n        {[} else {]}\\n            <div class=\\\"link-title{[if (item.title.length <= 29) {]} link-title-short{[}]}\\\">{{item.title}}</div>\\n        {[}]}\\n    </div>\\n    {[}]}\\n</div>\";","export default \"{[ if (is_video) {]}\\n        <div class=\\\"link-message-reference message-reference-preview-item message-reference-preview-item-big-image\\\">\\n            <div class=\\\"embed-video\\\">\\n                <div class=\\\"plyr-video-container\\\" data-provider=\\\"{{provider}}\\\" data-src=\\\"{{video_url}}\\\">\\n                    <div class=\\\"plyr-video-play\\\">\\n                        <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n                    </div>\\n                    <div class=\\\"plyr-video-playing\\\">\\n                        <svg class=\\\"mdi mdi-48px mdi-svg-template\\\" data-svgname=\\\"player-float\\\"></svg>\\n                        <div class=\\\"plyr-video-playing-hint\\\">{[print(xabber.getString(\\\"chat_message_video_playing_hint\\\"))]}</div>\\n                    </div>\\n                    {[ if (image) {]}\\n                    <img class=\\\"plyr-video-poster\\\" src=\\\"{{image}}\\\" onerror=\\\"this.style.display='none'\\\">\\n                    {[}]}\\n                </div>\\n            </div>\\n            <a href=\\\"{{original_text}}\\\" target=”_blank” class=\\\"msg-hyperlink\\\">\\n                <div class=\\\"attached-text-block\\\">\\n                    <div class=\\\"link-title one-line\\\">{{domain}}</div>\\n                    <div class=\\\"link-site-title\\\">{{title}}</div>\\n                    <div class=\\\"link-description\\\">{{description}}</div>\\n                </div>\\n            </a>\\n        </div>\\n{[} else {]}\\n    <a href=\\\"{{original_text}}\\\" target=”_blank” class=\\\"msg-hyperlink\\\">\\n        <div class=\\\"link-message-reference message-reference-preview-item{[if (image_width && image_width >= 590 || image_height && image_height < 80 || (1.5 * image_height) < image_width) {]} message-reference-preview-item-big-image{[}]}\\\">\\n            {[ if (image) {]}\\n            <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{image}}\\\" data-width=\\\"{{image_width}}\\\" data-height=\\\"{{image_height}}\\\" src=\\\"{{image}}\\\">\\n            {[}]}\\n            <div class=\\\"attached-text-block\\\">\\n                <div class=\\\"link-title one-line\\\">{{domain}}</div>\\n                <div class=\\\"link-site-title\\\">{{title}}</div>\\n                <div class=\\\"link-description\\\">{{description}}</div>\\n            </div>\\n        </div>\\n    </a>\\n{[}]}\";","export default \"<div class=\\\"circle-wrap\\\">\\n    <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"preloader-circular\\\" viewBox=\\\"27 27 54 54\\\">\\n        <circle class=\\\"preloader-path-new\\\" cx=\\\"54\\\" cy=\\\"54\\\" r=\\\"24\\\" fill=\\\"none\\\" stroke-miterlimit=\\\"10\\\"></circle>\\n    </svg>\\n    <div class=\\\"inside-circle\\\">\\n        <i class=\\\"mdi mdi-center-loading-indicator mdi-close mdi-20px\\\"></i>\\n        <i class=\\\"mdi mdi-alert-circle mdi-32px hidden\\\"></i>\\n    </div>\\n    <div class=\\\"circle-percent-text\\\">0%</div>\\n</div>\";","export default \"<div id=\\\"{{id}}\\\" class=\\\"text-color-700\\\" style=\\\"width:350px; height:300px;pointer-events: none;\\\" data-type='map'><img id=\\\"img_{{ id }}\\\" ></div>\";","export default \"<div class=\\\"chat-message main {{classlist}}\\\"\\n     {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]}\\n     {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]}\\n     data-time=\\\"{{timestamp}}\\\"\\n     data-uniqueid=\\\"{{unique_id}}\\\"\\n     {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]}\\n     data-from=\\\"{{from_jid}}\\\"\\n     {[if (device_id) {]} data-device-id=\\\"{{device_id}}\\\" {[}]}\\n>\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content\\\"></div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}{[ if (device_id) {]}&#013;{[print(xabber.getString('omemo__dialog_fingerprints__label_device_id'))]}: {{device_id}}{[}]}\\\">{{short_time}}</div>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n        {[ if (is_sender) { ]}\\n\\n            <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n            <div id=\\\"retry-send-msg-{{msgid}}\\\" class=\\\"dropdown-content retry-send-message noselect\\\">\\n                <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 btn-retry-send-message\\\">{[print(xabber.getString(\\\"chat_screen__message__button_retry_send\\\"))]}</div>\\n            </div>\\n        {[ } ]}\\n        <div class=\\\"not-decrypted-icon mdi-14px\\\" title=\\\"{[print(xabber.getString('omemo__not_verified_message_title'))]}\\\" {[ if (not_verified_device) { ]}data-device-id=\\\"{{not_verified_device}}\\\" {[ } ]} data-activates=\\\"not-verified-tooltip-{{msgid}}\\\">\\n            <svg class=\\\"mdi mdi-14px mdi-svg-template not-verified-icon-svg\\\" data-svgname=\\\"alert-circle\\\"></svg>\\n            <svg class=\\\"mdi mdi-14px mdi-svg-template not-decrypted-icon-svg\\\" data-svgname=\\\"information\\\"></svg>\\n        </div>\\n        <div id=\\\"not-verified-tooltip-{{msgid}}\\\" class=\\\"dropdown-content not-decrypted-tooltip noselect\\\">\\n            <div class=\\\"not-existing-device-tooltip-text\\\">{[print(xabber.getString(\\\"omemo__not_existing_device_message_tooltip\\\"))]}</div>\\n            <div class=\\\"not-decrypted-tooltip-text\\\">{[print(xabber.getString(\\\"omemo__not_decrypted_message_tooltip\\\"))]}</div>\\n            <div class=\\\"not-verified-tooltip-text\\\">{[print(xabber.getString(\\\"omemo__not_verified_message_tooltip\\\"))]}</div>\\n            <button class=\\\"btn-manage-devices btn-flat btn-main text-color-700\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\\n            <div class=\\\"not-verified-previously-tooltip-text\\\">{[print(xabber.getString(\\\"omemo__not_verified_previously_message_tooltip\\\"))]}</div>\\n        </div>\\n        {[ if (ephemeral_timer_text) { ]}\\n        <div class=\\\"ephemeral-timer-msg-time text-color-700{[ if (is_sender) { ]} ephemeral-timer-own-msg-time{[ } ]}\\\">{{ephemeral_timer_text}}</div>\\n        {[ } ]}\\n        <div class=\\\"msg-copy-link\\\" title='{[print(xabber.getString(\\\"action_copy_link\\\"))]}'><i class=\\\"mdi mdi-link-variant\\\" data-image=\\\"{{is_image}}\\\"></i></div>\\n        <div class=\\\"msg-copy-location\\\"  title='{[print(xabber.getString(\\\"action_copy_location\\\"))]}'><div class=\\\"msg-copy-location-content\\\" data-location=\\\"false\\\"></div></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message saved-main main {{classlist}}\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"fwd-msgs-block\\\"></div>\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message main {{classlist}}\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{msg_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message system\\\"  data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-2\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-2\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-3 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"template-for-3 minor-images\\\"><div class=\\\"img-content-template template-for-3 minor\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-3 minor\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-4 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-4 minor-images\\\">\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-5\\\"><div class=\\\"img-content-wrap template-for-5 main\\\"><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\\n<div class=\\\"img-content-wrap template-for-5 minor-images\\\"><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[4].upload_id}}\\\"><img src=\\\"{{images[4].sources[0]}}\\\" title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-6\\\"><div class=\\\"img-content-wrap template-for-6 main-row\\\"><div class=\\\"img-content-template template-for-6 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-6 minor-1\\\"><div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\\n<div class=\\\"template-for-6 minor-2\\\"><div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[4].upload_id}}\\\"><img src=\\\"{{images[4].sources[0]}}\\\" title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6 last-image\\\" data-upload-file-id=\\\"{{images[5].upload_id}}\\\"><img src=\\\"{{images[5].sources[0]}}\\\" title=\\\"{{images[5].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[5].sources[0]}}\\\">\\n{[ if (images.length > 6) { ]}<span class=\\\"image-counter\\\"></span>{[ for (var i=6; i < images.length; i++) {]} <div class=\\\"img-content-template hidden\\\" data-upload-file-id=\\\"{{images[i].upload_id}}\\\"><img src=\\\"{{images[i].sources[0]}}\\\" title=\\\"{{images[i].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[i].sources[0]}}\\\"></div> {[}} ]}</div></div></div>\\n\";","export default \"<div class=\\\"plyr-video-container\\\"  data-provider=\\\"html5\\\" data-msg-video-id=\\\"{{video_id}}\\\" data-src=\\\"{{video_src}}\\\">\\n    <div class=\\\"plyr-video-play\\\">\\n        <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n    </div>\\n    <div class=\\\"plyr-video-playing\\\">\\n        <svg class=\\\"mdi mdi-48px mdi-svg-template\\\" data-svgname=\\\"player-float\\\"></svg>\\n        <div class=\\\"plyr-video-playing-hint\\\">{[print(xabber.getString(\\\"chat_message_video_playing_hint\\\"))]}</div>\\n    </div>\\n    {[ if (thumbnail) {]}\\n        <img class=\\\"plyr-video-poster\\\" src=\\\"{{thumbnail}}\\\" onerror=\\\"this.style.display='none'\\\">\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"chat-message\\\"> {[alert({file_url})]} </div>\";","export default \"<div class=\\\"circle-avatar ground-color-700\\\"></div>\\n<div class=\\\"chat-head-info-buttons-container\\\">\\n    <div class=\\\"contact-info\\\">\\n        <p class=\\\"contact-name one-line\\\">{[print(xabber.getString(\\\"saved_messages__header\\\"))]}</p>\\n        <p class=\\\"one-liner\\\"></p>\\n    </div>\\n    <div class=\\\"chat-tools-wrap\\\">\\n        <div class=\\\"chat-tool chat-tool-player\\\">\\n            <div class=\\\"chat-tool-player-containter\\\">\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-previous-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-previous mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-play-pause-plyr\\\">\\n                    <i class=\\\"mdi mdi-play mdi-24px\\\"></i>\\n                    <i class=\\\"mdi mdi-pause mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-next-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-next mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-popup-plyr\\\">\\n                    <img class=\\\"player-poster hidden\\\">\\n                    <svg class=\\\"mdi mdi-32px mdi-player-type-icon mdi-svg-template\\\" data-svgname=\\\"video\\\"></svg>\\n                    <div class=\\\"voice-message-player-avatar circle-avatar hidden\\\"></div>\\n                </div>\\n                <div class=\\\"chat-tool chat-player-duration chat-tool-plyr-controls\\\">\\n                    <div class=\\\"chat-head-player-title one-line\\\"><div class=\\\"chat-head-player-title-text\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</div></div>\\n                    <div class=\\\"chat-head-player-title-bottom-container\\\">\\n                        <span class=\\\"chat-head-player-type one-line\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</span><span class=\\\"chat-head-player-type-dot\\\"> •</span>\\n                        <span class=\\\"chat-head-player-current-time\\\">0:00</span> /\\n                        <span class=\\\"chat-head-player-total-time\\\">0:00</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-stop-plyr\\\">\\n                    <i class=\\\"mdi mdi-close mdi-16px\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"chat-tool btn-jingle-message\\\">\\n            <i class=\\\"mdi mdi-phone mdi-24px\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-chat-pin\\\">\\n            <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path id=\\\"tooltip-variant\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\"></path>\\n                </svg>\\n            </svg>\\n        </div>\\n        <div class=\\\"chat-tool btn-search-messages\\\">\\n            <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-more\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"{{view.cid}}-more\\\" class=\\\"chat-head-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-delete-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_all\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"image\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"images\\\"))]}</div>\\n        <div data-screen-name=\\\"video\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"image\\\" class=\\\"screen-wrap hidden library-wrap\\\"></div>\\n    <div data-screen=\\\"video\\\" class=\\\"screen-wrap hidden library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"chat_bottom__drag_and_drop__text_drop_files_here\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"send_media__btn_upload\\\"))]}</button>\\n                <input type=\\\"file\\\" multiple>\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"add\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <div class=\\\"modal-preloader-wrap\\\"></div>\\n</div>\";","export default \"<div class=\\\"subscription-buttons\\\">\\n    <div class=\\\"subscription-info\\\"></div>\\n    <div class=\\\"button text-color-500 btn-add\\\">{[print(xabber.getString(\\\"contact_add\\\"))]}</div>\\n    <div class=\\\"button btn-block\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n    <div class=\\\"button text-color-500 btn-allow\\\">{[print(xabber.getString(\\\"chat_allow\\\"))]}</div>\\n    <div class=\\\"button text-color-500 btn-subscribe\\\">{[print(xabber.getString(\\\"chat_subscribe\\\"))]}</div>\\n    <i class=\\\"mdi-close btn-decline mdi mdi-24px\\\"></i>\\n</div>\";","export default \"<div class=\\\"unread-marker\\\">\\n    <div class=\\\"unread-marker-content no-select\\\">\\n        {{text}}\\n    </div>\\n</div>\";","export default \"<div class=\\\"roster-account-info-wrap\\\">\\n    <div class=\\\"roster-account-info ground-color-100\\\">\\n        <div class=\\\"account-indicator ground-color-700\\\"></div>\\n        <div class=\\\"circle-avatar noselect\\\"></div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <p class=\\\"name text-color-900 one-line\\\"></p>\\n            <p class=\\\"jid one-line\\\"></p>\\n        </div>\\n        <div class=\\\"button-divider\\\"></div>\\n    </div>\\n    <div class=\\\"status-button\\\">\\n        <div class=\\\"status\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer1 ground-color-50\\\">\\n        <div class=\\\"account-indicator ground-color-300\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer2 ground-color-50\\\">\\n        <div class=\\\"account-indicator ground-color-300\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"roster-account-info-wrap\\\">\\n    <div class=\\\"roster-account-info\\\">\\n        <div class=\\\"circle-avatar-wrap ground-color-500\\\">\\n            <div class=\\\"circle-avatar border-color ground-color-700 noselect\\\"></div>\\n        </div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <p class=\\\"name text-color-700 one-line\\\"></p>\\n            <p class=\\\"status-message text-color-700 one-line\\\"></p>\\n            <div class=\\\"roster-info\\\">\\n                <i class=\\\"mdi mdi-account-multiple-outline\\\"></i>\\n                <span class=\\\"counter\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"status-button\\\">\\n        <div class=\\\"status\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer1\\\"></div>\\n    <div class=\\\"roster-account-shrank-footer2\\\"></div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_add_contact__header\\\"))]}</span>\\n        <div class=\\\"account-dropdown-wrap\\\" data-activates=\\\"select-account-for-add-contact\\\">\\n            <div class=\\\"dropdown-button\\\">\\n                <div class=\\\"account-item-wrap\\\">\\n                    <div class=\\\"circle-avatar noselect\\\">\\n                        <img>\\n                    </div>\\n                </div>\\n            </div>\\n            <div id=\\\"select-account-for-add-contact\\\" class=\\\"dropdown-content noselect\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"add-contact-jid-step\\\">\\n            <div class=\\\"row name-field\\\">\\n                <div class=\\\"input-field\\\">\\n                    <!--<label for=\\\"new_contact_username\\\">{[print(xabber.getString(\\\"dialog_add_contact__label_jid\\\"))]}</label>-->\\n                    <input id=\\\"new_contact_username\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"dialog_add_contact__label_jid\\\"))]}' name=\\\"username\\\">\\n                    <span class=\\\"errors fixed\\\"></span>\\n                </div>\\n            </div>\\n        </div>\\n        <!--<div class=\\\"add-contact-contact-step\\\">-->\\n            <!--<div class=\\\"row name-field\\\">-->\\n                <!--<div class=\\\"input-field\\\">-->\\n                    <!--<label for=\\\"new_contact_name\\\">{[print(xabber.getString(\\\"contact_user\\\"))]}</label>-->\\n                    <!--<input id=\\\"new_contact_name\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"contact_user\\\"))]}' name=\\\"contact_name\\\" required>-->\\n                <!--</div>-->\\n            <!--</div>-->\\n            <!--<div class=\\\"row groups-field\\\">-->\\n                <!--<div class=\\\"field-header\\\">{[print(xabber.getString(\\\"contact_circle\\\"))]}</div>-->\\n                <!--<div class=\\\"groups checkbox-list\\\">-->\\n                <!--</div>-->\\n            <!--</div>-->\\n        <!--</div>-->\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-add\\\">{[print(xabber.getString(\\\"dialog_add_contact__button_add\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"dialog_add_contact__button_cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-item-wrap property-variant\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"name-wrap\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <div class=\\\"audio-control-time\\\">\\n        <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n        <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    </div>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div data-jid=\\\"{{jid}}\\\" class=\\\"blocked-contact\\\">\\n    <div class=\\\"input-field checkbox-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blocked-jid-switch-{{jid}}\\\"/>\\n        <label for=\\\"blocked-jid-switch-{{jid}}\\\">{{jid}}</label>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-background-clickable\\\"></div>\\n<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"header-buttons\\\">\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_viewer\\\"))]}</span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <div class=\\\"btn-qr-code\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n        </div>\\n        <div class=\\\"btn-edit\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n    </div>\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\"></div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap contact-details-name-wrap one-line\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"buttons-wrap sticky-details-wrap\\\">\\n        <div class=\\\"button-wrap btn-voice-call-wrap\\\">\\n            <div class=\\\"contact-btn btn-voice-call  fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_call\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-search-messages\\\">\\n            <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-mute-wrap\\\">\\n            <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n            <ul id=\\\"{{view.cid}}-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                <li class=\\\"btn-unmute-dropdown\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"unmute_chat\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                </li>\\n            </ul>\\n        </div>\\n        <div class=\\\"button-wrap btn-block-wrap\\\">\\n            <div class=\\\"contact-btn btn-block fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n            <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content private-chat\\\">\\n        <div class=\\\"block-wrap vcard\\\">\\n        </div>\\n        <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap edit-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap search-messages-block-wrap\\\"></div>\\n    </div>\\n    <ul class=\\\"tabs bottom-block-tabs\\\">\\n        <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n        <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n        <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n        <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n    </ul>\\n    <div class=\\\"panel-content private-chat\\\">\\n        <div class=\\\"bottom-block\\\">\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"circle-avatar noselect\\\"></div>\\n<div class=\\\"text-info-wrap\\\">\\n    <div class=\\\"name-wrap\\\">\\n        <p class=\\\"name one-line\\\"></p>\\n    </div>\\n    <p class=\\\"jid one-line\\\"></p>\\n</div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"contact_list__placeholder\\\"))]}</div>\\n\";","export default \"<div class=\\\"circle-avatar noselect\\\"></div>\\n<div class=\\\"text-info-wrap\\\">\\n    <p class=\\\"name one-line\\\"></p>\\n    <p class=\\\"jid one-line hidden\\\"></p>\\n    <p class=\\\"status-message one-line\\\"></p>\\n</div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n\";","export default \"\\n<div class=\\\"edit-wrap\\\">\\n    <div class=\\\"edit-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</span>\\n    </div>\\n    <div class=\\\"edit-contact\\\">\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"name-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"subscription-statuses\\\">\\n        <div class=\\\"status-out subscription-status-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-status-out\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"subscription-to\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value dotted-underline one-line\\\"></div>\\n            </div>\\n        </div>\\n        <div id=\\\"{{view.cid}}-status-out\\\" class=\\\"status-out-dropdown dropdown-content noselect\\\">\\n            <div class=\\\"btn-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_request_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_request_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-subscription-out property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_subscribe\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"status-in subscription-status-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-status-in\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"subscription-from\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value dotted-underline one-line\\\"></div>\\n            </div>\\n        </div>\\n        <div id=\\\"{{view.cid}}-status-in\\\" class=\\\"status-in-dropdown dropdown-content noselect\\\">\\n            <div class=\\\"btn-allow property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_allow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-allow-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_allow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-disallow-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"decline\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-disallow-preapproved property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_disallow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-subscription-in property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_subscription\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"status-description subscription-status-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information-outline\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-buttons\\\">\\n        <div class=\\\"edit-button btn-delete\\\">\\n            <div class=\\\"details-icon-wrap\\\"><i class=\\\"details-icon mdi mdi-24px mdi-delete text-color-500\\\"></i></div>\\n            <div class=\\\"edit-button-text \\\">\\n                <span class=\\\"text-color-500 dotted-underline text-decoration-color-300 one-line\\\">{[print(xabber.getString(\\\"contact_delete_full\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"\\n<div class=\\\"edit-wrap\\\">\\n    <div class=\\\"edit-save-preloader preloader-wrap\\\">\\n        <div class=\\\"preloader-wrapper preloader-17px visible\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-header main-edit-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <div class=\\\"btn-edit\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-group vcard\\\">\\n        <div class=\\\"info-wrap description-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\">\\n                <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg>\\n            </div>\\n            <div class=\\\"info-hover\\\">\\n                <div class=\\\"info description\\\">\\n                    <div class=\\\"edit-group-name value\\\"></div>\\n                    <div class=\\\"edit-group-description value\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"description-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header description-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_properties\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"main-info\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-group-image\\\">\\n                    <input class=\\\"hidden\\\" title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                    <div class=\\\"preloader-wrap\\\">\\n                        <div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div id=\\\"{{view.cid}}-group-image\\\" class=\\\"profile-image-dropdown bootstrap-dropdown dropdown-content noselect\\\">\\n                    <div class=\\\"btn-emoji-panel property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                    </div>\\n                    <div class=\\\"btn-selfie property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                    </div>\\n                    <div class=\\\"btn-choose-image property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-group\\\">\\n            <div class=\\\"edit-group-name-wrap\\\"></div>\\n            <div class=\\\"edit-group-description-wrap\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-properties\\\">\\n        <div class=\\\"group-property membership-property\\\">\\n            <div class=\\\"details-icon-wrap\\\" ><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"membership-outline\\\"></svg></div>\\n            <div class=\\\"group-property-text dotted-underline\\\">\\n                {[print(xabber.getString(\\\"groupchat_membership\\\"))]}\\n                <span></span>\\n            </div>\\n        </div>\\n        <div class=\\\"group-property index-property\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg></div>\\n            <div class=\\\"group-property-text dotted-underline\\\">\\n                {[print(xabber.getString(\\\"groupchat_index\\\"))]}\\n                <span></span>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-button btn-default-restrictions\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"restrictions-outline\\\"></svg></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"one-line dotted-underline\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span>\\n                <span class=\\\"edit-button-value\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"membership-property-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"property-wrap membership-field\\\">\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"open\\\" name=\\\"membership-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"open\\\">{[print(xabber.getString(\\\"groupchat_membership_type_open\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"member-only\\\" name=\\\"membership-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"member-only\\\">{[print(xabber.getString(\\\"groupchat_membership_type_members_only\\\"))]}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"property-description\\\">{[print(xabber.getString(\\\"groupchat_membership_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"index-property-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_index\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"property-wrap index-field\\\">\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"none\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"none\\\">{[print(xabber.getString(\\\"groupchat_index_type_none\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"local\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"local\\\">{[print(xabber.getString(\\\"groupchat_index_type_local\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"global\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"global\\\">{[print(xabber.getString(\\\"groupchat_index_type_global\\\"))]}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"property-description\\\">{[print(xabber.getString(\\\"groupchat_index_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"bottom-block edit-bottom-block\\\">\\n        <div class=\\\"edit-pictured-buttons\\\">\\n            <div data-value=\\\"invitations\\\" class=\\\"list-variant invitations-variant\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"invite-outline\\\"></svg></div>\\n                <div class=\\\"variant-text dotted-underline\\\">{[print(xabber.getString(\\\"groupchat_invitations\\\"))]}<span class=\\\"counted\\\"></span></div>\\n            </div>\\n            <div data-value=\\\"blocked\\\" class=\\\"list-variant blocked-variant\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n                <div class=\\\"variant-text dotted-underline\\\">{[print(xabber.getString(\\\"group_settings__block_list__header\\\"))]}<span class=\\\"counted\\\"></span></div>\\n            </div>\\n        </div>\\n        <i class=\\\"details-icon participants-edit-back btn-back-panel mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name-panel\\\"></span>\\n        <span class=\\\"block-name-panel second-text fade-out\\\">{[print(xabber.getString(\\\"groupchat_selected\\\"))]} <span></span></span>\\n        <div class=\\\"btn-add-block\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n        </div>\\n        <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite\\\"></i>\\n        <button class=\\\"btn-remove-selected btn-flat btn-main fade-out\\\">{[print(xabber.getString(\\\"groupchat_revoke\\\"))]}</button>\\n        <div class=\\\"block-wrap participants-edit-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"edit-buttons\\\">\\n        <div class=\\\"edit-button btn-clear-history-chat\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"history\\\"></svg></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"one-line dotted-underline\\\">{[print(xabber.getString(\\\"clear_history\\\"))]}</span>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-button btn-delete-group\\\">\\n            <div class=\\\"details-icon-wrap\\\"><i class=\\\"details-icon mdi mdi-24px mdi-delete text-color-500\\\"></i></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"text-color-500 one-line text-decoration-color-300 dotted-underline\\\">{[print(xabber.getString(\\\"group_settings__button_delete_group\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"block-form\\\">\\n    <div class=\\\"input-field\\\">\\n        <input id=\\\"blocking_id\\\" class=\\\"rich-textarea field-input\\\" placeholder=\\\"{[print(xabber.getString('vcard_jabber_id'))]}\\\" type=\\\"text\\\" name=\\\"title\\\">\\n    </div>\\n    <button class=\\\"btn-block-id btn btn-main-filled ground-color-700\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-content\\\">\\n    <div class=\\\"textarea-header\\\">{[print(xabber.getString(\\\"groupchat_member_badge\\\"))]}</div>\\n    <div class=\\\"rich-textarea badge-text\\\" tabindex=\\\"1\\\" contenteditable></div>\\n    <div class=\\\"error\\\"></div>\\n</div>\\n<div class=\\\"panel-footer noselect\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"insert-emoticon\\\">\\n            <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n        </div>\\n        <div class=\\\"emoticons-panel-wrap\\\">\\n            <div class=\\\"emoticons-panel\\\"></div>\\n            <div class=\\\"emoji-menu\\\"></div>\\n        </div>\\n        <button class=\\\"btn-save btn-flat btn-main\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-cancel btn-flat btn-main btn-dark\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\"><div class=\\\"panel-header black-text\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</div></div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"default-restrictions-list-wrap\\\"></div>\\n    <p class=\\\"default-restrictions-info\\\">{[print(xabber.getString(\\\"dialog_default_restrictions__placeholder\\\"))]}</p>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <button class=\\\"btn-default-restrictions-save btn-flat btn-main non-active\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-default-restrictions-cancel btn-flat btn-main btn-dark\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"restrictions-wrap\\\">\\n    <div class=\\\"restrictions-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span>\\n        <span class=\\\"block-name second-text fade-out\\\"></span>\\n        <button class=\\\"btn-default-restrictions-save text-color-500 btn-flat btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <div class=\\\"edit-save-preloader preloader-wrap\\\">\\n            <div class=\\\"preloader-wrapper preloader-17px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"restrictions-content edit-default-restrictions\\\">\\n        <div class=\\\"default-restrictions-list-wrap\\\"></div>\\n        <p class=\\\"default-restrictions-info\\\">{[print(xabber.getString(\\\"dialog_default_restrictions_right__placeholder\\\"))]}</p>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <textarea class=\\\"{{field_name}}-input rich-textarea field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\"></textarea>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"media-item\\\">\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\">\\n                <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                </svg>\\n                <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n            <div class=\\\"status-message one-line\\\"></div>\\n        </div>\\n        <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <li class=\\\"btn-qr-code\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_settings__button_show_qr_code\\\"))]}</span></li>\\n            <li class=\\\"btn-edit-settings\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_settings\\\"))]}</span></li>\\n            <li class=\\\"btn-default-restrictions\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span></li>\\n            <li class=\\\"btn-delete-group\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"group_settings__button_delete_group\\\"))]}</span></li>\\n        </ul>\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-chat-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_chat\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-invite-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell btn-mute\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-leave-wrap\\\">\\n                <div class=\\\"btn-leave\\\"><svg viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                </svg>\\n                </div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"head-block\\\">\\n            <div class=\\\"left-column\\\">\\n                <div class=\\\"block-wrap group-chat-properties-wrap\\\"></div>\\n            </div>\\n            <div class=\\\"right-column\\\">\\n                <div class=\\\"block-wrap status-block-wrap\\\"></div>\\n                <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"bottom-block\\\">\\n            <ul class=\\\"tabs\\\">\\n                <li data-value=\\\"participants\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__members_list__header\\\"))]}</a></li>\\n                <li data-value=\\\"invitations\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"groupchat_invitations\\\"))]}</a></li>\\n                <li data-value=\\\"blocked\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__block_list__header\\\"))]}</a></li>\\n            </ul>\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"panel-background-clickable\\\"></div>\\n<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"header-buttons\\\">\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_group\\\"))]}</span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <div class=\\\"btn-qr-code\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n        </div>\\n        <div class=\\\"btn-edit\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information-outline\\\"></svg>\\n        </div>\\n        <div class=\\\"group-edit-preloader\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\">\\n                <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"buttons-wrap sticky-details-wrap\\\">\\n        <div class=\\\"button-wrap btn-invite-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite text-color-500\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-search-messages\\\">\\n            <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-mute-wrap\\\">\\n            <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n            <ul id=\\\"{{view.cid}}-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                </li>\\n            </ul>\\n        </div>\\n        <div class=\\\"button-wrap btn-leave-wrap\\\">\\n            <div class=\\\"contact-btn btn-leave fill-color-500\\\">\\n                <svg viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                </svg>\\n            </div>\\n            <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"block-wrap group-chat-properties-wrap vcard\\\"></div>\\n        <div class=\\\"block-wrap status-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap edit-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap restrictions-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap search-messages-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap participant-view-wrap\\\"></div>\\n    </div>\\n    <ul class=\\\"tabs not-edit bottom-block-tabs\\\">\\n        <li data-value=\\\"participants\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__members_list__header\\\"))]}</a></li>\\n        <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n        <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n        <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n        <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n    </ul>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"bottom-block\\\">\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <span class=\\\"btn-edit-settings\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-properties vcard\\\">\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <div title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon-wrap\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg>\\n        </div>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap name-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap searchable-info-wrap\\\">\\n        <svg class=\\\"details-icon toolbar-icon mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\"></path>\\n        </svg>\\n        <div class=\\\"info searchable\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_indexed\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap model-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-lock\\\"></i>\\n        <div class=\\\"info model\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\"><div class=\\\"panel-header black-text\\\">{[if (privacy) { print(xabber.getString(\\\"incognito_group_settings__header\\\"))} else { print(xabber.getString(\\\"public_group_settings__header\\\"))}]}</div></div>\\n<div class=\\\"modal-content group-chat-properties-wrap selectable-text\\\">\\n    <div class=\\\"property-wrap jid-info-wrap\\\">\\n        <div class=\\\"property-header\\\">{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}</div>\\n        <div class=\\\"jabber-id\\\">\\n            <div class=\\\"value one-line\\\">{{jid}}</div>\\n        </div>\\n        <p id=\\\"anonymous-public\\\" class=\\\"property-description hidden\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_privacy__text_public\\\"))]}</p>\\n        <p id=\\\"anonymous-incognito\\\" class=\\\"property-description hidden\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_privacy__text_incognito\\\"))]}</p>\\n    </div>\\n    {[fields.forEach(function (field) { if (field.type === 'hidden' || field.type === 'jid-multi') return;]}\\n    <div class=\\\"property-wrap {{field.var}}-field\\\">\\n        {[if (!(field.type == 'fixed' && field.values[0] === \\\"\\\")) {]}\\n        <div class=\\\"property-header\\\">{{field.label}}</div>\\n        {[}]}\\n        {[if (field.type === 'text-single') {]}\\n        <div class=\\\"input-field input-group-chat-name\\\">\\n            <input value=\\\"{{field.values[0]}}\\\" id=\\\"new_{{field.var}}_value\\\" type=\\\"text\\\" name=\\\"{{field.var}}\\\" placeholder='{[print(xabber.getString(\\\"group_settings_edit__setting_name__hint\\\"))]}' class=\\\"text-field\\\">\\n        </div>\\n        {[} else if (field.type === 'text-multi') {]}\\n        <textarea placeholder='{[print(xabber.getString(\\\"groupchat_example_description\\\"))]}' id=\\\"{{field.var}}\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"text-field materialize-textarea rich-textarea\\\">{{field.values[0]}}</textarea>\\n        {[} else if (field.type === 'list-single') { field.options.forEach(function (option) {]}\\n        <div class=\\\"property-radio\\\">\\n            <input {[if (option.value === field.values[0]){]}checked{[}]} id=\\\"{{option.value}}\\\" name=\\\"{{field.var}}\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n            <label class=\\\"{{option.value}}-label\\\" for=\\\"{{option.value}}\\\">{{option.label}}</label>\\n        </div>\\n        {[});} else  if (field.type === 'fixed' && field.values[0] !== \\\"\\\") {]}\\n        <div class=\\\"fixed-field{[if (field.var === 'description'){]} description{[}]}\\\">\\n            <div class=\\\"value\\\">{{field.values[0]}}</div>\\n        </div>\\n        {[}]}\\n        {[if (field.var === 'index'){]}\\n        <p class=\\\"property-description\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_index__text\\\"))]}</p>\\n        {[} else if (field.var === 'membership') {]}\\n        <p class=\\\"property-description\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_membership__text\\\"))]}</p>\\n        {[}]}\\n    </div>\\n    {[})]}\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (!all_fixed){]}\\n        <button class=\\\"btn-save btn-flat btn-main non-active\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        {[}]}\\n        <button class=\\\"btn-cancel btn-flat btn-dark btn-main\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <span class=\\\"btn-edit-settings\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-properties vcard-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info jabber-id\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info description short\\\">\\n                <div class=\\\"value\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"full-vcard-wrap\\\">\\n    <div class=\\\"full-vcard-content\\\">\\n        <div class=\\\"vcard-header block-header\\\">\\n            <div class=\\\"vcard-header-title\\\">\\n                <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_vcard_header_title\\\"))]}</span>\\n            </div>\\n            <div class=\\\"main-info\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar\\\"></div>\\n                </div>\\n                <div class=\\\"text-info\\\">\\n                    <div class=\\\"name-wrap\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"vcard-list\\\">\\n            <div class=\\\"info-wrap jid-info-wrap\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info jabber-id\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap name-info-wrap\\\">\\n                <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap description-info-wrap\\\">\\n                <div class=\\\"details-icon-wrap\\\">\\n                    <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info description\\\">\\n                        <div class=\\\"value\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap searchable-info-wrap\\\">\\n                <svg class=\\\"details-icon toolbar-icon mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\"></path>\\n                </svg>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info searchable\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_indexed\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap model-info-wrap\\\">\\n                <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-lock\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info model\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<tr class=\\\"participant-wrap\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <td class=\\\"list-item group-chat-participant\\\">\\n        <div class=\\\"member-item\\\">\\n            <div class=\\\"circle-avatar\\\"></div>\\n            <div class=\\\"participant-info\\\">\\n            <div class=\\\"top-line\\\"><div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>{[if (badge) {]}<div class=\\\"badge one-line\\\">{{badge}}</div>{[}]}</div>\\n            {[if (jid) {]}<p class=\\\"jid one-line\\\">{{jid}}</p>{[}]}\\n            </div>\\n        </div>\\n    </td>\\n    <td class=\\\"last-seen\\\">{[if (!present) {]}<span class=\\\"online-status text-color-green-700\\\">{[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}</span>{[} else {]}<span title=\\\"{{present}}\\\">{{pretty_present}}</span>{[}]}</td>\\n    <td class=\\\"role\\\">{[if (role !== 'member') {]}{{role}}{[}]}</td>\\n    <td>\\n        {[if (is_me) {]}\\n        <span style=\\\"font-size:12px\\\" class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</span>\\n        {[} else {]}\\n        <div class=\\\"buttons-wrap\\\">\\n            <div title='{[print(xabber.getString(\\\"groupchat_kick\\\"))]}' class=\\\"btn-kick\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-remove\\\"></i>\\n            </div>\\n            <div title='{[print(xabber.getString(\\\"groupchat_kick_and_block\\\"))]}' class=\\\"btn-block\\\">\\n                <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path fill=\\\"#9e9e9e\\\" d=\\\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,4A8,8 0 0,0 4,12C4,13.85 4.63,15.55 5.68,16.91L16.91,5.68C15.55,4.63 13.85,4 12,4M12,20A8,8 0 0,0 20,12C20,10.15 19.37,8.45 18.32,7.09L7.09,18.32C8.45,19.37 10.15,20 12,20Z\\\" />\\n                </svg>\\n            </div>\\n        </div>\\n        {[}]}\\n    </td>\\n</tr>\";","export default \"<tr class=\\\"participant-wrap\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <td class=\\\"list-item group-chat-participant\\\">\\n        <div class=\\\"member-item\\\">\\n            <div class=\\\"circle-avatar\\\"></div>\\n            <div class=\\\"participant-info\\\">\\n            <div class=\\\"top-line\\\">\\n                <div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>\\n                {[if (badge) {]}<div class=\\\"badge one-line\\\">{{badge}}</div>{[}]}\\n            </div>\\n                <div class=\\\"bottom-line\\\">\\n                    {[ if (is_me) {]}\\n                    <div class=\\\"online-status text-color-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n                    {[}else if (!present) {]}<span class=\\\"online-status text-color-green-700\\\">{[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}</span>{[} else {]}<span title=\\\"{{present}}\\\">{{pretty_present}}</span>{[}]}\\n                </div>\\n            </div>\\n            {[if (role === 'owner' || role === 'admin') {]}\\n            <div class=\\\"participant-buttons-wrap\\\">\\n                <div class=\\\"participant-role\\\">\\n                    {[if (role === 'owner') {]}\\n                        <i class=\\\"mdi participant-role-image mdi-24px mdi-star\\\"></i>\\n                    {[}else if (role === 'admin') {]}\\n                        <i class=\\\"mdi participant-role-image mdi-24px mdi-star-outline\\\"></i>\\n                    {[}]}\\n                </div>\\n            </div>\\n            {[} else if (!is_me) {]}\\n                <div class=\\\"buttons-wrap\\\">\\n                    <div title='{[print(xabber.getString(\\\"groupchat_edit_member\\\"))]}' class=\\\"btn-edit-member\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n                    </div>\\n                    <!--<div title='{[print(xabber.getString(\\\"mute_chat\\\"))]}' class=\\\"btn-mute\\\">-->\\n                        <!--<i class=\\\"mdi mdi-24px mdi-microphone-off\\\"></i>-->\\n                    <!--</div>-->\\n                    <div title='{[print(xabber.getString(\\\"groupchat_kick\\\"))]}' class=\\\"btn-kick\\\">\\n                        <i class=\\\"mdi mdi-24px mdi-account-remove\\\"></i>\\n                    </div>\\n                </div>\\n            {[}]}\\n        </div>\\n    </td>\\n</tr>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input rich-textarea field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"insert-emoticon\\\">\\n                <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n            </div>\\n            <div class=\\\"emoticons-panel-wrap\\\">\\n                <div class=\\\"emoticons-panel\\\"></div>\\n                <div class=\\\"emoji-menu\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_status\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-status\\\">\\n    <div class=\\\"status-wrap\\\">\\n        <div class=\\\"status status-bulb\\\"></div>\\n        <div class=\\\"status-message\\\"></div>\\n    </div>\\n    <div class=\\\"btn-edit-status\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"group-chat-status-wrap\\\" title=\\\"{[print(xabber.getString('group_settings__properties__tooltip_click_to_set_status'))]}\\\">\\n    <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"status-outline\\\"></svg></div>\\n    <div class=\\\"group-chat-status-border\\\">\\n        <div class=\\\"group-chat-status\\\">\\n            <div class=\\\"status-wrap\\\">\\n                <div class=\\\"status-message dotted-underline\\\"></div>\\n                <div class=\\\"status status-bulb\\\"></div>\\n            </div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_status\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap one-line\\\"></div>\\n            <div class=\\\"jid one-line\\\"></div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"msg-wrap\\\"><p class=\\\"msg-text\\\"></p></div>\\n        <div class=\\\"panel-footer noselect\\\">\\n            <div class=\\\"buttons-wrap\\\">\\n                <button class=\\\"btn-join btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_join\\\"))]}</button>\\n                <button class=\\\"btn-decline btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_decline\\\"))]}</button>\\n                <button class=\\\"btn-block btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"list-item {{status}}-user\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"member-item\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n        <p title=\\\"{{jid}}\\\" class=\\\"one-line\\\">{{jid}}</p>\\n        {[if (status == 'invitations') {]}\\n        <div title='{[print(xabber.getString(\\\"groupchat_revoke\\\"))]}' class=\\\"revoke-invitation\\\">\\n            {[}else{]}\\n            <div title='{[print(xabber.getString(\\\"groupchat_unblock\\\"))]}' class=\\\"unblock-user\\\">\\n                {[}]}\\n                <i class=\\\"mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"rich-textarea field-input badge-text\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_member_badge\\\"))]}' contenteditable></div>\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"insert-emoticon\\\">\\n            <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n        </div>\\n        <div class=\\\"emoticons-panel-wrap\\\">\\n            <div class=\\\"emoticons-panel\\\"></div>\\n            <div class=\\\"emoji-menu\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item {[if (subscription === null) {]}unsubscribed{[}]}\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    {[if (subscription !== null) {]}\\n    <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{id}}-buttons-wrap\\\">\\n        <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n    </div>\\n    <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n        <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n    </ul>\\n    {[}]}\\n    <div class=\\\"circle-avatar\\\">\\n        {[if (subscription !== null) {]}\\n        <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\">\\n            <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n            </svg>\\n            <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            </div>\\n        {[}]}\\n    </div>\\n        <div class=\\\"participant-info\\\">\\n            {[if (subscription !== null) {]}<div id=\\\"edit-nickname\\\" class=\\\"rich-textarea\\\" tabindex=\\\"1\\\" contenteditable></div>{[}]}\\n            <div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>\\n            <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n            {[if (jid) {]}<p title=\\\"{{jid}}\\\" class=\\\"jid selectable-text one-line\\\">{{jid}}</p>{[}]}\\n            {[ if (is_myself) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n            {[}]}\\n            {[ if (is_blocked_contact) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"action_contact_blocked\\\"))]}</div>\\n            {[}]}\\n            {[if (subscription === null) {]}<p class=\\\"role selectable-text one-line\\\">{[if (blocked) { print(xabber.getString(\\\"groupchat_blocked\\\")); }else{print(xabber.getString(\\\"settings_group_member__placeholder_not_a_member\\\"));}]}</p>{[}]}\\n        </div>\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (incognito_chat) {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-incognito btn-chat\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_private_chat\\\"))]}</div>\\n        </div>\\n        {[} else {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_direct_chat\\\"))]}</div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"button-wrap btn-participant-messages-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-view-list btn-participant-messages\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_member_messages\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-set-badge-wrap\\\">\\n            <svg class=\\\"btn-set-badge\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M17,3H14V6H10V3H7A2,2 0 0,0 5,5V21A2,2 0 0,0 7,23H17A2,2 0 0,0 19,21V5A2,2 0 0,0 17,3M12,8A2,2 0 0,1 14,10A2,2 0 0,1 12,12A2,2 0 0,1 10,10A2,2 0 0,1 12,8M16,16H8V15C8,13.67 10.67,13 12,13C13.33,13 16,13.67 16,15V16M13,5H11V1H13V5M16,19H8V18H16V19M12,21H8V20H12V21Z\\\" />\\n            </svg>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_set_member_badge\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-kick-participant-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-account-remove btn-kick-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_kick\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item {[if (subscription === null) {]}unsubscribed{[}]}\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"block-header\\\">\\n        <i class=\\\"details-icon btn-back parent-btn mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <i class=\\\"details-icon btn-back-name child-btn mdi mdi-24px mdi-arrow-right hidden\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <button class=\\\"btn-save-user-rights non-active fade-out btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_save_member_settings\\\"))]}</button>\\n        {[if (subscription !== null) {]}\\n        <div class=\\\"btn-edit-participant\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n            <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n        </ul>\\n        {[}]}\\n    </div>\\n    <div class=\\\"circle-avatar\\\">\\n        {[if (subscription !== null) {]}\\n            <div class=\\\"preloader-wrap\\\">\\n                <div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        {[}]}\\n    </div>\\n        <div class=\\\"participant-info\\\">\\n            {[if (subscription !== null) {]}<div class=\\\"participant-edit-nickname hidden\\\"></div>{[}]}\\n            <div class=\\\"participant-edit-badge hidden\\\"></div>\\n            <div class=\\\"participant-info-text\\\">\\n                <div class=\\\"nickname\\\">\\n                    {{nickname}} <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n                </div>\\n                {[ if (is_myself) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n                {[}]}\\n                {[ if (subscription === null && blocked) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_blocked\\\"))]}</div>\\n                {[} else if (subscription === null) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_kicked\\\"))]}</div>\\n                {[}]}\\n\\n            </div>\\n        </div>\\n    <div class=\\\"buttons-wrap sticky-details-wrap\\\">\\n        {[if (incognito_chat) {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-incognito btn-chat-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_private_chat\\\"))]}</div>\\n        </div>\\n        {[} else {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-message-text btn-chat-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_direct_chat\\\"))]}</div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"button-wrap btn-participant-messages-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-view-list btn-participant-messages\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_member_messages\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap non-active btn-set-visibility-wrap\\\">\\n            <i title=\\\"Feature not yet implemented\\\" class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-eye btn-set-visibility\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_set_member_visibility_visible\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-kick-participant-wrap\\\">\\n            <i class=\\\"mdi contact-btn mdi-24px mdi-account-remove text-color-500 btn-kick-participant\\\"></i>\\n            <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_kick\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"vcard-wrap vcard\\\">\\n        {[if (jid) {]}\\n        <div class=\\\"info-wrap jid-info-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n            <div class=\\\"info-hover\\\">\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">{{jid}}</div>\\n                    <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        {[}]}\\n        {[if (role === 'owner' || role === 'admin') {]}\\n        <div class=\\\"info-wrap role-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\">\\n                {[if (role === 'owner') {]}\\n                    <i class=\\\"details-icon mdi mdi-24px mdi-star\\\"></i>\\n                {[}else if (role === 'admin') {]}\\n                    <i class=\\\"details-icon mdi mdi-24px mdi-star-outline\\\"></i>\\n                {[}]}\\n            </div>\\n            <div>\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">\\n                        <span>\\n                            {[if (role === 'owner') {]}\\n                                {[print(xabber.getString(\\\"groupchat_role_owner\\\"))]}\\n                            {[}else if (role === 'admin') {]}\\n                                {[print(xabber.getString(\\\"groupchat_role_admin\\\"))]}\\n                            {[}]}\\n                        </span>\\n                    </div>\\n                    <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_role\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"info-wrap present-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" {[if (!present) {]}data-svgname=\\\"status-outline\\\"{[} else {]}data-svgname=\\\"clock-outline\\\"{[}]}></svg></div>\\n            <div>\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">\\n                        <span>\\n                            {[if (!present) {]}\\n                                {[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}\\n                            {[} else {]}\\n                            {{pretty_present}}\\n                            {[}]}\\n                        </span>\\n                    </div>\\n                    <div class=\\\"label\\\">{[if (!present) {]}{[print(xabber.getString(\\\"groupchat_status\\\"))]}{[} else {]}{[print(xabber.getString(\\\"group_settings__members__label_last_seen\\\"))]}{[}]}</div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-wrap\\\">\\n    <div class=\\\"participant-details-info-wrap\\\">\\n    </div>\\n    <ul class=\\\"tabs participant-tabs bottom-block-tabs\\\">\\n        <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n        <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n        <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n        <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n    </ul>\\n    <div class=\\\"bottom-block participant-bottom-block\\\">\\n        <div class=\\\"block-wrap participants-details-media-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"participant-details-edit-wrap edit-wrap\\\">\\n        <div class=\\\"main-info\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-participant-image\\\">\\n                    <input class=\\\"hidden\\\" title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                    <div class=\\\"preloader-wrap\\\">\\n                        <div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div id=\\\"{{view.cid}}-participant-image\\\" class=\\\"profile-image-dropdown bootstrap-dropdown dropdown-content noselect\\\">\\n                    <div class=\\\"btn-emoji-panel property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                    </div>\\n                    <div class=\\\"btn-selfie property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                    </div>\\n                    <div class=\\\"btn-choose-image property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"participant-details-edit-inputs\\\">\\n            <div class=\\\"edit-participant-name-wrap\\\">\\n            </div>\\n            <div class=\\\"edit-participant-badge-wrap\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"rights-wrap\\\">\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"header\\\">\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"rights-wrap\\\">\\n    </div>\\n</div>\\n\";","export default \"<table class=\\\"members-list-wrap\\\">\\n    <thead>\\n    <tr>\\n        <th>\\n            <div class=\\\"participants-search-form search-form\\\">\\n                <svg class=\\\"search-icon\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z\\\" />\\n                </svg>\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_search_members\\\"))]}'>\\n                <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n        </th>\\n        <th>{[print(xabber.getString(\\\"group_settings__members__label_last_seen\\\"))]}</th>\\n        <th>{[print(xabber.getString(\\\"groupchat_role\\\"))]}</th>\\n        <th></th>\\n    </tr>\\n    </thead>\\n    <tbody></tbody>\\n</table>\\n<div class=\\\"preloader-wrapper preloader-17px active\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<table class=\\\"members-list-wrap\\\">\\n    <thead>\\n    <tr>\\n        <th>\\n            <div class=\\\"participants-search-form search-form\\\">\\n                <svg class=\\\"search-icon\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z\\\" />\\n                </svg>\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_search_members\\\"))]}'>\\n                <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n        </th>\\n    </tr>\\n    </thead>\\n    <tbody></tbody>\\n</table>\\n<div class=\\\"preloader-wrapper preloader-17px active\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<svg class=\\\"pin\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path fill=\\\"#757575\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\" />\\n</svg>\\n<div class=\\\"msg-wrap\\\">\\n    <div class=\\\"chat-msg-author-wrap\\\">\\n        <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{author}}</div>{[if (fwd_author){]}<svg class=\\\"fwd-chevron\\\" viewBox=\\\"0 0 24 24\\\"><path fill=\\\"#9E9E9E\\\" d=\\\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\\\"></path></svg><div class=\\\"chat-msg-author text-color-700 one-line\\\">{{fwd_author}}</div>{[}]}\\n        <div class=\\\"msg-time\\\">{{time}}</div>\\n    </div>\\n    <div class=\\\"chat-msg-content chat-text-content one-line\\\">\\n        {{message}}\\n    </div>\\n</div>\\n<svg title='{[print(xabber.getString(\\\"group_chat__pinned_message__tooltip_unpin\\\"))]}' class=\\\"close\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path class=\\\"close\\\" fill=\\\"#9E9E9E\\\" d=\\\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\\\" />\\n</svg>\";","export default \"<div class=\\\"participant-details-item\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"circle-avatar\\\">\\n        {[ if (is_myself) {]}\\n        <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\">\\n        {[}]}\\n        {[ if (is_myself) {]}\\n        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n        </svg>\\n        <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        </div>\\n        {[}]}\\n    </div>\\n    <div class=\\\"participant-info\\\">\\n        {[ if (is_myself) {]}\\n        <div id=\\\"edit-nickname\\\" class=\\\"rich-textarea\\\" tabindex=\\\"1\\\" contenteditable></div>\\n        {[}]}\\n        <div title=\\\"{{nickname}}\\\" class=\\\"{{is_myself && 'is-myself'}} nickname one-line\\\">{{nickname}}</div>\\n        <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n        {[ if (is_myself) {]}\\n        <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n        {[}]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"block-header\\\">\\n        <i class=\\\"details-icon btn-back parent-btn mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <i class=\\\"details-icon btn-back-name child-btn mdi mdi-24px mdi-arrow-right hidden\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <button class=\\\"btn-save-user-rights non-active fade-out btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_save_member_settings\\\"))]}</button>\\n        {[if (subscription !== null) {]}\\n        <div class=\\\"btn-edit-participant\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n            <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n        </ul>\\n        {[}]}\\n    </div>\\n    <div class=\\\"circle-avatar\\\">\\n        <div class=\\\"preloader-wrap\\\">\\n            <div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"participant-info\\\">\\n        {[if (subscription !== null) {]}<div class=\\\"participant-edit-nickname hidden\\\"></div>{[}]}\\n        <div class=\\\"participant-edit-badge hidden\\\"></div>\\n        <div class=\\\"participant-info-text\\\">\\n            <div class=\\\"nickname\\\">\\n                {{nickname}} <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n            </div>\\n            {[ if (is_myself) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n            {[}]}\\n\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"right-item restriction restriction-{{name}}\\\">\\n    <div class=\\\"right-name\\\">{{pretty_name}}</div>\\n    <div class=\\\"field clickable-field restriction-{{name}}-state switch normal\\\">\\n        <input type=\\\"checkbox\\\" {[if (type === 'fixed') {]} onclick=\\\"return false;\\\" {[}]} class=\\\"filled-in\\\" id=\\\"{{name}}\\\">\\n        <label for=\\\"{{name}}\\\"></label>\\n    </div>\\n</div>\";","export default \"<div class=\\\"select-timer\\\">\\n    <div class=\\\"dropdown-button\\\" data-activates=\\\"select-timer-{{right_name}}\\\">\\n        <div class=\\\"timer-item-wrap\\\"><div data-value=\\\"0\\\" class=\\\"default-value property-value\\\">{[print(xabber.getString(\\\"dialog_rights__button_set_timer\\\"))]}</div></div>\\n    </div>\\n    <div id=\\\"select-timer-{{right_name}}\\\" class=\\\"dropdown-content noselect\\\">\\n        {[expire_options.forEach(function (option) {]}\\n        <div data-value=\\\"{{option.value}}\\\" class=\\\"property-variant\\\">{{option.label}}</div>\\n        {[}.bind(this));]}\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_set_status__header\\\"))]}</span>\\n    </div>\\n    <ul class=\\\"status-values noselect\\\">\\n        <div class=\\\"loading-status\\\">\\n            <div class=\\\"preloader-wrapper preloader-17px active\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </ul>\\n</div>\\n\";","export default \"<li data-value=\\\"{{status.value}}\\\">\\n    <span class=\\\"status-value one-line\\\">{{status.label}}</span>\\n    <span class=\\\"status-bulb\\\" data-status=\\\"{{status.show}}\\\"></span>\\n</li>\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"group-head\\\">\\n    <i class=\\\"arrow mdi mdi-20px\\\"></i>\\n    <div class=\\\"group-title\\\">\\n        <span class=\\\"group-name one-line\\\"></span>\\n        <span class=\\\"member-counter one-line\\\"></span>\\n    </div>\\n    <i class=\\\"group-icon mdi mdi-20px hidden\\\"></i>\\n</div>\\n\";","export default \"<div class=\\\"group-head\\\">\\n    <i class=\\\"arrow mdi mdi-20px\\\"></i>\\n    <div class=\\\"group-title\\\">\\n        <span class=\\\"group-name one-line\\\"></span>\\n        <span class=\\\"member-counter one-line\\\"></span>\\n    </div>\\n    <i class=\\\"group-icon mdi mdi-20px hidden\\\"></i>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap settings-panel\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_circle_settings__header\\\"))]}</span>\\n    </div>\\n\\n    <div class=\\\"modal-content\\\">\\n            <div class=\\\"field-wrap group-name\\\">\\n                <div class=\\\"input-field\\\">\\n                    <label for=\\\"{{view.cid}}-group-name\\\">{[print(xabber.getString(\\\"circle_name\\\"))]}</label>\\n                    <input id=\\\"{{view.cid}}-group-name\\\" type=\\\"text\\\" name=\\\"group_name\\\">\\n                    <span class=\\\"errors fixed\\\"></span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"category_offline_contacts\\\"))]}</div>\\n            <div class=\\\"setting-wrap\\\">\\n                <div class=\\\"setting offline radio-button field-wrap\\\">\\n                    <div class=\\\"field radio-field clickable-field\\\">\\n                        <form action=\\\"#\\\">\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"yes\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show\\\" />\\n                                <label for=\\\"{{view.cid}}-show\\\">{[print(xabber.getString(\\\"show_offline_always\\\"))]}</label>\\n                            </p>\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"no\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hide\\\" />\\n                                <label for=\\\"{{view.cid}}-hide\\\">{[print(xabber.getString(\\\"hide_offline_always\\\"))]}</label>\\n                            </p>\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show-offline-default\\\" />\\n                                <label for=\\\"{{view.cid}}-show-offline-default\\\">{[print(xabber.getString(\\\"dialog_circle_settings__label_common_settings\\\"))]}</label>\\n                            </p>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-dark btn-delete left\\\">{[print(xabber.getString(\\\"circle_remove\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-apply\\\">{[print(xabber.getString(\\\"dialog_circle_settings__button_apply\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"groups-list-wrap\\\">\\n    <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles-outline\\\"></svg></div>\\n    <div class=\\\"groups\\\">\\n    </div>\\n    </div>\\n</div>\\n<div class=\\\"groups-wrap\\\">\\n    <div class=\\\"checkbox-list\\\">\\n    </div>\\n</div>\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    {[ if (!checked) {]}\\n        <div class=\\\"input-field checkbox-field existing-group-field\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{group_id}}\\\" data-groupname=\\\"{{name}}\\\" {[ if (checked) { ]}checked=\\\"checked\\\"{[ } ]} />\\n            <label for=\\\"{{group_id}}\\\">{{name}}</label>\\n        </div>\\n    {[}]}\\n{[ } ]}\\n\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    <div class=\\\"input-field checkbox-field existing-group-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{group_id}}\\\" data-groupname=\\\"{{name}}\\\" {[ if (checked) { ]}checked=\\\"checked\\\"{[ } ]} />\\n        <label for=\\\"{{group_id}}\\\">{{name}}</label>\\n    </div>\\n{[ } ]}\\n    <div class=\\\"new-group-field-wrap\\\">\\n        <div class=\\\"input-field checkbox-field new-group-checkbox\\\">\\n            <input type=\\\"checkbox\\\" disabled class=\\\"filled-in\\\" id=\\\"new_group_checkbox\\\"/>\\n            <label for=\\\"new_group_checkbox\\\"></label>\\n        </div>\\n        <div class=\\\"input-field new-group-name\\\">\\n            <input class=\\\"rich-textarea xabber-input\\\" id=\\\"new-group-name\\\" type=\\\"text\\\" name=\\\"new_group_name\\\" placeholder='{[print(xabber.getString(\\\"add_new_circle\\\"))]}'>\\n        </div>\\n    </div>\\n\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    {[ if (checked) {]}\\n        <div data-groupname=\\\"{{name}}\\\" title=\\\"{[print(xabber.getString('contact_tooltip_remove_by_click'))]}\\\" class=\\\"group ground-color-50\\\">\\n            <div>{{name}}</div>\\n        </div>\\n    {[}]}\\n\\n{[ } ]}\\n\";","export default \"<div class=\\\"new-group-field-wrap\\\">\\n    <div class=\\\"input-field checkbox-field new-group-checkbox\\\">\\n        <input type=\\\"checkbox\\\" disabled class=\\\"filled-in\\\" id=\\\"new_group_checkbox\\\"/>\\n        <label for=\\\"new_group_checkbox\\\"></label>\\n    </div>\\n    <div class=\\\"input-field new-group-name\\\">\\n        <input class=\\\"xabber-input\\\" id=\\\"new-group-name\\\" autocomplete=\\\"off\\\" type=\\\"text\\\" name=\\\"new_group_name\\\" placeholder='{[print(xabber.getString(\\\"add_new_circle\\\"))]}'>\\n    </div>\\n</div>\";","export default \"<div class=\\\"gallery-file\\\" title=\\\"{{file.name}}\\\" data-id=\\\"{{file.id}}\\\" data-uniqueid=\\\"{{file.uniqueid}}\\\"  data-file=\\\"{{file.sources[0]}}\\\" data-name=\\\"{{file.name}}\\\" data-size=\\\"{{file.size}}\\\" data-width=\\\"{{file.width}}\\\" data-height=\\\"{{file.height}}\\\" data-media-type=\\\"{{file.media_type}}\\\" >\\n    {[if (file.media_type && (file.media_type.includes('image') || (file.media_type.includes('video') && !file.has_encrypted_files && !is_encrypted))){]}\\n    <img class=\\\"{[if (file.media_type.includes('video')){]}uploaded-video{[} else {]}uploaded-img popup-img{[}]}\\\"\\n         data-mfp-src=\\\"{{file.sources[0]}}\\\"\\n         src=\\\"{[if (file.thumbnail){]}{{file.thumbnail}}{[} else {]}{{file.sources[0]}}{[}]}\\\"\\n         onError=\\\"this.parentElement.className = this.parentElement.className + ' hidden';\\\"\\n    >\\n    {[} else {]}\\n    {[if (svg_icon == 'file-audio' && file.true_voice){]}\\n    <div class=\\\"gallery-file-placeholder-background gallery-audio-file-not-uploaded\\\">\\n        <i class=\\\"details-icon mdi mdi-play no-uploaded\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-file-audio-container\\\">\\n    </div>\\n    {[} else {]}\\n    <div class=\\\"gallery-file-placeholder-background\\\">\\n        <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n        <div class=\\\"gallery-file-title-grid\\\">{{filesize}}</div>\\n    </div>\\n    {[}]}\\n    <div class=\\\"gallery-file-title one-line\\\">\\n        {{file.name}},  <span class=\\\"gallery-file-size\\\">{{filesize}}</span>\\n    </div>\\n    {[if (duration && file.true_voice){]}\\n    <div class=\\\"gallery-voice-file-duration\\\">\\n        0:00 / <span class=\\\"gallery-voice-file-total-duration\\\">{{duration}}</span>\\n    </div>\\n    {[}]}\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"gallery-empty\\\">\\n    <div class=\\\"gallery-empty-icon-wrap\\\">\\n        <i class=\\\"gallery-empty-icon mdi mdi-24px mdi-package-variant\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-empty-text\\\">{[print(xabber.getString(\\\"no_files\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"contacts-panel noselect\\\">\\n    <div class=\\\"contacts-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n\\n    <div class=\\\"contact-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"contact-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"contacts-panel noselect\\\">\\n    <div class=\\\"collapsed-wrap\\\">\\n        <i class=\\\"collapsed-contacts-icon mdi mdi-24px mdi-account-multiple\\\"></i>\\n        <div class=\\\"all-contacts-counter\\\"></div>\\n    </div>\\n    <div class=\\\"expanded-wrap\\\">\\n        <div class=\\\"roster-head panel-head\\\">\\n            <div class=\\\"contacts-header\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n            <div class=\\\"roster-button btn-pin\\\"></div>\\n        </div>\\n\\n        <div class=\\\"contact-list-wrap\\\">\\n            <div class=\\\"contact-list\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"    <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_contact_list__header_offline_contacts\\\"))]}</div>\\n    <div class=\\\"setting offline-contacts radio-button field-wrap\\\">\\n        <div class=\\\"field radio-field clickable-field\\\">\\n            <form action=\\\"#\\\">\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"offline-contacts\\\" value=\\\"yes\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show\\\" />\\n                    <label for=\\\"{{view.cid}}-show\\\">{[print(xabber.getString(\\\"settings__section_contact_list__offline_contacts__label_show\\\"))]}</label>\\n                </p>\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"offline-contacts\\\" value=\\\"no\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hide\\\" />\\n                    <label for=\\\"{{view.cid}}-hide\\\">{[print(xabber.getString(\\\"settings__section_contact_list__offline_contacts__label_hide\\\"))]}</label>\\n                </p>\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_contact_list__header_sorting\\\"))]}</div>\\n    <div class=\\\"setting sorting-contacts radio-button field-wrap\\\">\\n        <div class=\\\"field radio-field clickable-field\\\">\\n            <form action=\\\"#\\\">\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"sorting-contacts\\\" value=\\\"online-first\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-online-first\\\" />\\n                    <label for=\\\"{{view.cid}}-online-first\\\">{[print(xabber.getString(\\\"settings__section_contact_list__sorting__label_online_first\\\"))]}</label>\\n                </p>\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"sorting-contacts\\\" value=\\\"by-alphabet\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-by-alphabet\\\" />\\n                    <label for=\\\"{{view.cid}}-by-alphabet\\\">{[print(xabber.getString(\\\"settings__section_contact_list__sorting__label_alphabet\\\"))]}</label>\\n                </p>\\n            </form>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"group-chat-title-wrap hidden\\\">\\n    <div class=\\\"account-indicator ground-color-700\\\"></div>\\n    <div class=\\\"contact-icon\\\">\\n    </div>\\n    <div class=\\\"group-chat-name one-line\\\"></div>\\n</div>\\n<div class=\\\"mention-info-wrap\\\">\\n<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"mention-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n    <span class=\\\"msg-counter hidden\\\"></span>\\n</div>\\n</div>\";","export default \"<div class=\\\"mentions-panel noselect\\\">\\n    <div class=\\\"chats-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"mentions-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"mentions-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"mentions_list__placeholder\\\"))]}</div>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"searching__chat_properties__header\\\"))]}</span>\\n</div>\\n<div class=\\\"chat-properties-wrap selectable-text\\\">\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\">{{jid}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap name-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info name\\\">\\n            <div class=\\\"value one-line\\\">{{name}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value one-line\\\">{{description}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap anonymous-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-comment-question-outline\\\"></i>\\n        <div class=\\\"info anonymous\\\">\\n            <div class=\\\"value one-line\\\">{{privacy}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_incognito\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap model-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-lock-open-outline\\\"></i>\\n        <div class=\\\"info model\\\">\\n            <div class=\\\"value one-line\\\">{{membership}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\\n<button class=\\\"btn-join-chat btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"groupchat_join\\\"))]}</button>\\n\";","export default \"<div class=\\\"existing-chat-wrap\\\" data-name=\\\"{{name}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"account-indicator ground-color-{{color}}-500\\\"></div>\\n    <div class=\\\"circle-avatar\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"existing-chat-item\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"account-item-wrap\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"name one-line\\\">{{jid}}</div>\\n</div>\";","export default \"<div class=\\\"searching-panel\\\">\\n    <div class=\\\"search-wide search-form\\\">\\n        <div class=\\\"account-indicator ground-color-500\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"searching__placeholder_search_by_domain\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"searching-properties-field\\\">\\n        <div class=\\\"dropdown-button\\\" data-visible=\\\"false\\\">\\n            <i class=\\\"mdi mdi-24px mdi-chevron-down arrow\\\"></i>\\n        </div>\\n    </div>\\n    <ul id=\\\"select-searching-properties\\\" class=\\\"selectable-text\\\">\\n        <div class=\\\"account-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_account\\\"))]}</p>\\n            <div class=\\\"account-field\\\">\\n                <div class=\\\"multiple-acc\\\">\\n                    <div class=\\\"account-dropdown-wrap\\\">\\n                        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-account-for-searching\\\">\\n                            <div class=\\\"account-item-wrap\\\">\\n                            </div>\\n                            <div class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-account-for-searching\\\" class=\\\"dropdown-content\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"single-acc\\\">\\n                    <div class=\\\"dropdown-button\\\">\\n                        <div class=\\\"account-item-wrap\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"title-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_title\\\"))]}</p>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"searching_property_title\\\" type=\\\"text\\\" name=\\\"title\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"sorting-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_sort_by\\\"))]}</p>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"searching_property_sort_by\\\" type=\\\"text\\\" name=\\\"title\\\">\\n            </div>\\n        </div>\\n        <button class=\\\"btn-search btn btn-main-filled ground-color-700\\\">{[print(xabber.getString(\\\"search\\\"))]}</button>\\n    </ul>\\n</div>\\n<div class=\\\"searching-result-wrap\\\">\\n    <div class=\\\"chats-list-wrap\\\">\\n        <div class=\\\"result-string\\\"></div>\\n        <div class=\\\"preloader-wrapper preloader-17px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div></div>\\n        <div class=\\\"chats-list\\\"></div></div>\\n    <div class=\\\"searching-more\\\"></div>\\n</div>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/account-cancel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,4 C7.790861,4 6,5.790861 6,8 C6,10.209139 7.790861,12 10,12 C12.209139,12 14,10.209139 14,8 C14,5.790861 12.209139,4 10,4 M17.5,13 C15,13 13,15 13,17.5 C13,20 15,22 17.5,22 C20,22 22,20 22,17.5 C22,15 20,13 17.5,13 M10,14 C5.58,14 2,15.79 2,18 L2,20 L11.5,20 C11.169935,19.2078439 11,18.3581691 11,17.5 C11.004284,16.3143165 11.3328048,15.1523902 11.95,14.14 C11.32,14.06 10.68,14 10,14 M17.5,14.5 C19.16,14.5 20.5,15.84 20.5,17.5 C20.5,18.06 20.35,18.58 20.08,19 L16,14.92 C16.42,14.65 16.94,14.5 17.5,14.5 M14.92,16 L19,20.08 C18.58,20.35 18.06,20.5 17.5,20.5 C15.84,20.5 14.5,19.16 14.5,17.5 C14.5,16.94 14.65,16.42 14.92,16 Z\\\" id=\\\"mdi:account-cancel\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/account-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,19 L5,19 L5,5 L19,5 M19,3 L5,3 C3.8954305,3 3,3.8954305 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 M16.5,16.25 C16.5,14.75 13.5,14 12,14 C10.5,14 7.5,14.75 7.5,16.25 L7.5,17 L16.5,17 M12,12.25 C13.2426407,12.25 14.25,11.2426407 14.25,10 C14.25,8.75735931 13.2426407,7.75 12,7.75 C10.7573593,7.75 9.75,8.75735931 9.75,10 C9.75,11.2426407 10.7573593,12.25 12,12.25 Z\\\" id=\\\"mdi:account-box-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/account\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M6,17 C6,15 10,13.9 12,13.9 C14,13.9 18,15 18,17 L18,18 L6,18 M15,9 C15,10.6568542 13.6568542,12 12,12 C10.3431458,12 9,10.6568542 9,9 C9,7.34314575 10.3431458,6 12,6 C13.6568542,6 15,7.34314575 15,9 M3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.8954305 20.1045695,3 19,3 L5,3 C3.89,3 3,3.9 3,5 Z\\\" id=\\\"mdi:account-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/address-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 M12,2 C15.8659932,2 19,5.13400675 19,9 C19,14.25 12,22 12,22 C12,22 5,14.25 5,9 C5,5.13400675 8.13400675,2 12,2 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,10 7,12 12,18.71 C17,12 17,10 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:map-marker-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/address\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\\\" id=\\\"mdi:map-marker\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/alarm-bell\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M15,18.66 L15,22 L5,22 L5,18.66 C8.09301265,20.4500491 11.9069873,20.4500491 15,18.66 M22,4 C22,2.8954305 21.1045695,2 20,2 C19.69,2 19.39,2.07 19.12,2.21 C18.82,2.36 18.56,2.58 18.36,2.85 C17.9280885,3.46077217 17.873744,4.26171236 18.219194,4.92522914 C18.564644,5.58874591 19.2519508,6.00355658 20,6 L20.24,6 C21.97,10.43 20.66,15.46 17,18.5 C16.68,18.75 16.35,19 16,19.22 L16,21 L17,21 L17,19.74 C20.14,17.5 22,13.86 22,10 C22,8.5 21.72,7 21.17,5.62 C21.69,5.24 22,4.64 22,4 M18,10 C18,12.1217319 17.1571453,14.1565632 15.6568542,15.6568542 C14.1565632,17.1571453 12.1217319,18 10,18 C5.581722,18 2,14.418278 2,10 C2,5.581722 5.581722,2 10,2 C12.1217319,2 14.1565632,2.84285472 15.6568542,4.34314575 C17.1571453,5.84343678 18,7.87826808 18,10 L18,10 Z\\\" id=\\\"mdi:alarm-bell\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/alert-circle\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,13 L11,13 L11,7 L13,7 M13,17 L11,17 L11,15 L13,15 M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C14.6521649,22 17.195704,20.9464316 19.0710678,19.0710678 C20.9464316,17.195704 22,14.6521649 22,12 C22,9.3478351 20.9464316,6.80429597 19.0710678,4.92893219 C17.195704,3.0535684 14.6521649,2 12,2 Z\\\" id=\\\"mdi:alert-circle\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bell-off\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20.84,22.73 L18.11,20 L3,20 L3,19 L5,17 L5,11 C5.00430327,9.85524651 5.28929416,8.72901748 5.83,7.72 L1.11,3 L2.39,1.73 L22.11,21.46 L20.84,22.73 Z M19.0000002,15.8 L19.0000002,11 C19.0007944,7.90366232 16.9672665,5.17466784 14,4.29 C14.0049007,4.19339544 14.0049007,4.09660456 14,4 C14,2.8954305 13.1045695,2 12,2 C10.8954305,2 10,2.8954305 10,4 C9.99507868,4.09660403 9.99507868,4.19339597 10,4.29 C9.385,4.474 8.8,4.743 8.26,5.09 L19.0000002,15.8 Z M12,23 C13.1045695,23 14,22.1045695 14,21 L10,21 C10,22.1045695 10.8954305,23 12,23 Z\\\" id=\\\"mdi:bell-off\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bell-sleep\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,21 L14,21 C14,22.1045695 13.1045695,23 12,23 C10.8954305,23 10,22.1045695 10,21 Z M21,19 L21,20 L3,20 L3,19 L5,17 L5,11 C4.99920557,7.90366232 7.0327335,5.17466784 10,4.29 C9.99507868,4.19339597 9.99507868,4.09660403 10,4 C10,2.8954305 10.8954305,2 12,2 C13.1045695,2 14,2.8954305 14,4 C14.005,4.097 14.005,4.193 14,4.29 C16.9672665,5.17466784 19.0007944,7.90366232 19,11 L19,17 L21,19 L21,19 Z M15,9 L9,9 L9,11 L12.24,11 L9,13.7 L9,16 L15,16 L15,14 L11.76,14 L15,11.3 L15,9 Z\\\" id=\\\"mdi:bell-sleep\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bell\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,19 L21,20 L3,20 L3,19 L5,17 L5,11 C4.99920557,7.90366232 7.0327335,5.17466784 10,4.29 C9.99507868,4.19339597 9.99507868,4.09660403 10,4 C10,2.8954305 10.8954305,2 12,2 C13.1045695,2 14,2.8954305 14,4 C14.005,4.097 14.005,4.193 14,4.29 C16.9672665,5.17466784 19.0007944,7.90366232 19,11 L19,17 L21,19 L21,19 Z M14,21 C14,22.1045695 13.1045695,23 12,23 C10.8954305,23 10,22.1045695 10,21 L14,21 Z\\\" id=\\\"mdi:bell\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/birthday-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6 C13.1045695,6 14,5.1045695 14,4 C14,3.62 13.9,3.27 13.71,2.97 L12,0 L10.29,2.97 C10.1,3.27 10,3.62 10,4 C10,5.1 10.9,6 12,6 M18,9 L13,9 L13,7 L11,7 L11,9 L6,9 C4.34,9 3,10.34 3,12 L3,21 C3,21.55 3.45,22 4,22 L20,22 C20.55,22 21,21.55 21,21 L21,12 C21,10.34 19.66,9 18,9 M19,20 L5,20 L5,17 C5.9,17 6.76,16.63 7.4,16 L8.5,14.92 L9.56,16 C10.87,17.3 13.15,17.29 14.45,16 L15.53,14.92 L16.6,16 C17.24,16.63 18.1,17 19,17 L19,20 M19,15.5 C18.5,15.5 18,15.3 17.65,14.93 L15.5,12.8 L13.38,14.93 C12.64,15.67 11.35,15.67 10.61,14.93 L8.5,12.8 L6.34,14.93 C6,15.29 5.5,15.5 5,15.5 L5,12 C5,11.45 5.45,11 6,11 L18,11 C18.55,11 19,11.45 19,12 L19,15.5 Z\\\" id=\\\"mdi:cake-variant-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/birthday\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,7 C13.11,7 14,6.1 14,5 C14,4.62 13.9,4.27 13.71,3.97 L12,1 L10.29,3.97 C10.1,4.27 10,4.62 10,5 C10,6.1045695 10.8954305,7 12,7 M16.6,17 L15.53,15.92 L14.45,17 C13.15,18.29 10.87,18.3 9.56,17 L8.5,15.92 L7.4,17 C6.75,17.64 5.88,18 4.96,18 C4.23,18 3.56,17.77 3,17.39 L3,22 C3,22.5522847 3.44771525,23 4,23 L20,23 C20.5522847,23 21,22.5522847 21,22 L21,17.39 C20.44,17.77 19.77,18 19.04,18 C18.12,18 17.25,17.64 16.6,17 M18,10 L13,10 L13,8 L11,8 L11,10 L6,10 C4.34314575,10 3,11.3431458 3,13 L3,14.54 C3,15.62 3.88,16.5 4.96,16.5 C5.5,16.5 6,16.3 6.34,15.93 L8.5,13.8 L10.61,15.93 C11.35,16.67 12.64,16.67 13.38,15.93 L15.5,13.8 L17.65,15.93 C18,16.3 18.5,16.5 19.03,16.5 C20.11,16.5 21,15.62 21,14.54 L21,13 C21,11.3431458 19.6568542,10 18,10 Z\\\" id=\\\"mdi:cake-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/blocked-add\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,15 L20,18 L23,18 L23,20 L20,20 L20,23 L18,23 L18,20 L15,20 L15,18 L18,18 L18,15 L20,15 Z M12,2 C17.5,2 22,6.5 22,12 C22,12.5859564 21.9489239,13.1605626 21.851004,13.7195862 C21.2621133,13.4007388 20.6141835,13.1778427 19.9277796,13.0712956 C19.9754227,12.7216453 20,12.3635535 20,12 C20,10.1 19.4,8.4 18.3,7.1 L7.1,18.3 C8.5,19.3 10.2,20 12,20 C12.3635535,20 12.7216453,19.9754227 13.0726961,19.9278476 C13.1778427,20.6141835 13.4007388,21.2621133 13.719191,21.8507762 C13.1605626,21.9489239 12.5859564,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 Z M12,4 C7.6,4 4,7.6 4,12 C4,13.7882353 4.53148789,15.399308 5.51109302,16.6664767 L5.7,16.9 L16.9,5.7 C15.6,4.6 13.9,4 12,4 Z\\\" id=\\\"xabber:block-add\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/blocked\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8,1 C11.8659932,1 15,4.13400675 15,8 C15,11.8659932 11.8659932,15 8,15 C4.13400675,15 1,11.8659932 1,8 C1,4.13400675 4.13400675,1 8,1 Z M12.3574649,4.64359326 L4.64359326,12.3574649 C5.57228864,13.073866 6.73637986,13.5 8,13.5 C11.0375661,13.5 13.5,11.0375661 13.5,8 C13.5,6.73637986 13.073866,5.57228864 12.3574649,4.64359326 Z M8,2.5 C4.96243388,2.5 2.5,4.96243388 2.5,8 C2.5,9.26408031 2.92644441,10.4285592 3.64331784,11.3574212 L11.3574212,3.64331784 C10.4285592,2.92644441 9.26408031,2.5 8,2.5 Z\\\" id=\\\"blocked\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/bot-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8,3.5 C9.93299662,3.5 11.5,5.06700338 11.5,7 L11.5,9.5 C11.5,11.1568542 9.93299662,12.5 8,12.5 C6.06700338,12.5 4.5,11.1568542 4.5,9.5 L4.5,7 L4.50517886,6.8079648 C4.60487355,4.9642776 6.1314366,3.5 8,3.5 Z M8,5 C6.9456382,5 6.08183488,5.81587779 6.00548574,6.85073766 L6,7 L6,8 C6,8.82842712 6.8954305,9.5 8,9.5 C9.1045695,9.5 10,8.82842712 10,8 L10,7 C10,5.8954305 9.1045695,5 8,5 Z M3.5,6 C3.77614237,6 4,6.22385763 4,6.5 L4,9.5 C4,9.77614237 3.77614237,10 3.5,10 C3.22385763,10 3,9.77614237 3,9.5 L3,6.5 C3,6.22385763 3.22385763,6 3.5,6 Z M12.5,6 C12.7761424,6 13,6.22385763 13,6.5 L13,9.5 C13,9.77614237 12.7761424,10 12.5,10 C12.2238576,10 12,9.77614237 12,9.5 L12,6.5 C12,6.22385763 12.2238576,6 12.5,6 Z\\\" id=\\\"Bot\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/bot\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8.5,2.9 C8.83137085,2.9 9.1,3.16862915 9.1,3.5 C9.1,3.6775201 9.02290618,3.83703397 8.9003726,3.94688754 L8.899,4.999 L11,5 C11.5522847,5 12,5.44771525 12,6 L12,7 C12.2761424,7 12.5,7.22385763 12.5,7.5 L12.5,8.5 C12.5,8.77614237 12.2761424,9 12,9 L12,11 C12,11.5522847 11.5522847,12 11,12 L5,12 C4.44771525,12 4,11.5522847 4,11 L4,9 C3.72385763,9 3.5,8.77614237 3.5,8.5 L3.5,7.5 C3.5,7.22385763 3.72385763,7 4,7 L4,6 C4,5.44771525 4.44771525,5 5,5 L8.1,4.999 L8.0996274,3.94688754 C7.97709382,3.83703397 7.9,3.6775201 7.9,3.5 C7.9,3.16862915 8.16862915,2.9 8.5,2.9 Z M9.5,10 L6.5,10 C6.22385763,10 6,10.2238576 6,10.5 C6,10.7761424 6.22385763,11 6.5,11 L9.5,11 C9.77614237,11 10,10.7761424 10,10.5 C10,10.2238576 9.77614237,10 9.5,10 Z M6.5,6 C6.22385763,6 6,6.22385763 6,6.5 L6,7 L5.5,7 C5.22385763,7 5,7.22385763 5,7.5 C5,7.77614237 5.22385763,8 5.5,8 L6,8 L6,8.5 C6,8.77614237 6.22385763,9 6.5,9 C6.77614237,9 7,8.77614237 7,8.5 L7,8 L7.5,8 C7.77614237,8 8,7.77614237 8,7.5 C8,7.22385763 7.77614237,7 7.5,7 L7,7 L7,6.5 C7,6.22385763 6.77614237,6 6.5,6 Z M9.5,7 C9.22385763,7 9,7.22385763 9,7.5 C9,7.77614237 9.22385763,8 9.5,8 C9.77614237,8 10,7.77614237 10,7.5 C10,7.22385763 9.77614237,7 9.5,7 Z\\\" id=\\\"bot\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bug\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,12 L10,12 L10,10 L14,10 M14,16 L10,16 L10,14 L14,14 M20,8 L17.19,8 C16.7389578,7.21773668 16.1167554,6.54767256 15.37,6.04 L17,4.41 L15.59,3 L13.42,5.17 C12.4901518,4.94442551 11.5198482,4.94442551 10.59,5.17 L8.41,3 L7,4.41 L8.62,6.04 C7.88,6.55 7.26,7.22 6.81,8 L4,8 L4,10 L6.09,10 C6.04,10.33 6,10.66 6,11 L6,12 L4,12 L4,14 L6,14 L6,15 C6,15.34 6.04,15.67 6.09,16 L4,16 L4,18 L6.81,18 C7.85,19.79 9.78,21 12,21 C14.22,21 16.15,19.79 17.19,18 L20,18 L20,16 L17.91,16 C17.96,15.67 18,15.34 18,15 L18,14 L20,14 L20,12 L18,12 L18,11 C18,10.66 17.96,10.33 17.91,10 L20,10 L20,8 Z\\\" id=\\\"mdi:bug\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/call-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,15.5 C18.8,15.5 17.5,15.3 16.4,14.9 C16.3,14.9 16.2,14.9 16.1,14.9 C15.8,14.9 15.6,15 15.4,15.2 L13.2,17.4 C10.4,15.9 8,13.6 6.6,10.8 L8.8,8.6 C9.1,8.3 9.2,7.9 9,7.6 C8.7,6.5 8.5,5.2 8.5,4 C8.5,3.5 8,3 7.5,3 L4,3 C3.5,3 3,3.5 3,4 C3,13.4 10.6,21 20,21 C20.5,21 21,20.5 21,20 L21,16.5 C21,16 20.5,15.5 20,15.5 L20,15.5 Z M5,5 L6.5,5 C6.6,5.9 6.8,6.8 7,7.6 L5.8,8.8 C5.4,7.6 5.1,6.3 5,5 L5,5 Z M19,19 C17.7,18.9 16.4,18.6 15.2,18.2 L16.4,17 C17.2,17.2 18.1,17.4 19,17.4 L19,19 Z\\\" id=\\\"mdi:phone-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/call\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M6.62,10.79 C8.06,13.62 10.38,15.94 13.21,17.38 L15.41,15.18 C15.69,14.9 16.08,14.82 16.43,14.93 C17.55,15.3 18.75,15.5 20,15.5 C20.5522847,15.5 21,15.9477153 21,16.5 L21,20 C21,20.5522847 20.5522847,21 20,21 C10.6111593,21 3,13.3888407 3,4 C3,3.73478351 3.10535684,3.4804296 3.29289322,3.29289322 C3.4804296,3.10535684 3.73478351,3 4,3 L7.5,3 C8.05228475,3 8.5,3.44771525 8.5,4 C8.5,5.25 8.7,6.45 9.07,7.57 C9.18,7.92 9.1,8.31 8.82,8.59 L6.62,10.79 Z\\\" id=\\\"mdi:phone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/camera-retake\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,5 L17,5 L15,3 L9,3 L7,5 L4,5 C2.8954305,5 2,5.8954305 2,7 L2,19 C2,20.1045695 2.8954305,21 4,21 L20,21 C21.1045695,21 22,20.1045695 22,19 L22,7 C22,5.8954305 21.1045695,5 20,5 M12,18.0000026 C10.92,18.0000026 9.86,17.65 9,17 L10.44,15.56 C10.91,15.85 11.45,16 12,16 C13.6568542,16 15,14.6568542 15,13 C15,11.3431458 13.6568542,10 12,10 C10.74,10 9.6,10.8 9.18,12 L11,12 L8,15 L5,12 L7.1,12 C7.36424064,10.6999079 8.13463224,9.5582575 9.24136868,8.82668596 C10.3481051,8.09511441 11.7003328,7.83367752 13,8.1 C15.5173928,8.61117175 17.2378687,10.9467344 16.9797109,13.5024961 C16.7215532,16.0582577 14.5687655,18.0025816 12,18.0000026 L12,18.0000026 Z\\\" id=\\\"mdi:camera-retake\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/camera\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M4,5 L7,5 L9,3 L15,3 L17,5 L20,5 C21.1045695,5 22,5.8954305 22,7 L22,19 C22,20.1045695 21.1045695,21 20,21 L4,21 C2.8954305,21 2,20.1045695 2,19 L2,7 C2,5.8954305 2.8954305,5 4,5 M12,8 C9.23857625,8 7,10.2385763 7,13 C7,15.7614237 9.23857625,18 12,18 C14.7614237,18 17,15.7614237 17,13 C17,10.2385763 14.7614237,8 12,8 M12,10 C13.6568542,10 15,11.3431458 15,13 C15,14.6568542 13.6568542,16 12,16 C10.3431458,16 9,14.6568542 9,13 C9,11.3431458 10.3431458,10 12,10 Z\\\" id=\\\"mdi:camera\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/cancel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C14.6521649,2 17.195704,3.0535684 19.0710678,4.92893219 C20.9464316,6.80429597 22,9.3478351 22,12 C22,17.5228475 17.5228475,22 12,22 C9.3478351,22 6.80429597,20.9464316 4.92893219,19.0710678 C3.0535684,17.195704 2,14.6521649 2,12 C2,9.3478351 3.0535684,6.80429597 4.92893219,4.92893219 C6.80429597,3.0535684 9.3478351,2 12,2 M12,3.99999926 C7.581722,3.99999926 4,7.581722 4,11.9999993 C4,13.85 4.63,15.55 5.68,16.91 L16.91,5.68 C15.505295,4.59031127 13.7778124,3.99923779 12,3.99999926 M12,20.0000007 C16.418278,20.0000007 20,16.418278 20,12 C20,10.15 19.37,8.45 18.32,7.09 L7.09,18.32 C8.49470497,19.4096887 10.2221876,20.0007622 12,20.0000007 L12,20.0000007 Z\\\" id=\\\"mdi:cancel\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/channel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M6.5,12.5 C6.5,12.7761424 6.27614237,13 6,13 L5,13 C4.72385763,13 4.5,12.7761424 4.5,12.5 L4.5,9.997 L4.02563513,9.99796942 C3.49695533,9.99796942 3.06170233,9.63379568 3.00601829,9.10979782 L3,8.99514074 L3,7 C3,6.44278422 3.50172034,6 4.02563513,6 L8,6 L11,4 L11,12 L8,9.99796942 L6.5,9.997 L6.5,12.5 Z M12,6 C12.7835446,6.37375602 13.2808221,7.14951331 13.2820439,8 C13.2882682,8.85255761 12.7887168,9.63186239 12,10 L12,6 Z\\\" id=\\\"Horn\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chat\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,2 L4,2 C2.8954305,2 2,2.8954305 2,4 L2,22 L6,18 L20,18 C21.1045695,18 22,17.1045695 22,16 L22,4 C22,2.8954305 21.1045695,2 20,2 M6,9 L18,9 L18,11 L6,11 M14,14 L6,14 L6,12 L14,12 M18,8 L6,8 L6,6 L18,6\\\" id=\\\"mdi:message-text\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/check-circle\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C6.5,2 2,6.5 2,12 C2,17.5 6.5,22 12,22 C17.5,22 22,17.5 22,12 C22,6.5 17.5,2 12,2 M10,17 L5,12 L6.41,10.59 L10,14.17 L17.59,6.58 L19,8 L10,17 Z\\\" id=\\\"mdi:check-circle\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/check\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"check\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"21 7 9 19 3.5 13.5 4.91 12.09 9 16.17 19.59 5.59\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chevron-down\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:chevron-down\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"7.41 8.58 12 13.17 16.59 8.58 18 10 12 16 6 10\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chevron-left-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"xabber:chevron-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" transform=\\\"translate(11.5, 12) scale(-1, 1) translate(-11.5, -12)\\\" points=\\\"7 18.5 13.5 12 7 5.5 8.25 4.25 16 12 8.25 19.75\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chevron-right-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"xabber:chevron-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"8 18.5 14.5 12 8 5.5 9.25 4.25 17 12 9.25 19.75\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C13.93,5 15.68,5.78 16.95,7.05 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-1\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-2\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-2\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-3\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,13.93 18.22,15.68 16.95,16.95 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-3\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-4\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 L12,5 Z\\\" id=\\\"mdi:circle-slice-4\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-5\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 C10.07,19 8.32,18.22 7.05,16.95 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-5\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-6\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 C8.13,19 5,15.87 5,12 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-6\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-7\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 C8.13,19 5,15.87 5,12 C5,10.07 5.78,8.32 7.05,7.05 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-7\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-8\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 C8.13,19 5,15.87 5,12 C5,8.13 8.13,5 12,5 M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 Z\\\" id=\\\"mdi:circle-slice-8\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circles-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.61510772,4.31938417 C8.28417501,5.13922603 8.07752033,6.02134442 8.01792471,6.94352205 L7.91776678,6.99321105 C5.73983381,8.11301495 4.25,10.3825228 4.25,13 C4.25,16.7279221 7.27207794,19.75 11,19.75 C13.6571359,19.75 15.9556781,18.2146777 17.0568945,15.9827652 C17.9787775,15.9224511 18.8608306,15.7158021 19.6796219,15.3853225 C18.6352051,19.1981743 15.1448033,22 11,22 C6.02943725,22 2,17.9705627 2,13 C2,8.85508685 4.80197429,5.36460986 8.61510772,4.31938417 Z M16.5,1 C20.0898509,1 23,3.91014913 23,7.5 C23,11.0898509 20.0898509,14 16.5,14 C12.9101491,14 10,11.0898509 10,7.5 C10,3.91014913 12.9101491,1 16.5,1 Z M16.5,3 C14.0147186,3 12,5.01471863 12,7.5 C12,9.98528137 14.0147186,12 16.5,12 C18.9852814,12 21,9.98528137 21,7.5 C21,5.01471863 18.9852814,3 16.5,3 Z\\\" id=\\\"xabber:circles-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circles\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.61467749,4.32037814 C8.21824496,5.30257332 8,6.37579974 8,7.5 C8,12.1944204 11.8055796,16 16.5,16 C17.6242003,16 18.6974267,15.781755 19.6796219,15.3853225 C18.6352051,19.1981743 15.1448033,22 11,22 C6.02943725,22 2,17.9705627 2,13 C2,8.91703774 4.71884223,5.46909511 8.44481526,4.36788353 L8.61467749,4.32037814 Z M16.5,1 C20.0898509,1 23,3.91014913 23,7.5 C23,11.0898509 20.0898509,14 16.5,14 C12.9101491,14 10,11.0898509 10,7.5 C10,3.91014913 12.9101491,1 16.5,1 Z\\\" id=\\\"xabber:circles\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/client-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M23,4.5 C23,6.43 21.43,8 19.5,8 C17.57,8 16,6.43 16,4.5 C16,2.57 17.57,1 19.5,1 C21.43,1 23,2.57 23,4.5 M19.5,10 L19,10 L19,19 L5,19 L5,5 L14.03,5 C14,4.84 14,4.67 14,4.5 C14,4 14.08,3.5 14.21,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.11,21 21,20.11 21,19 L21,9.79 C20.5,9.92 20,10 19.5,10 Z\\\" id=\\\"mdi:checkbox-blank-badge-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/client\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M23,4.5 C23,6.43 21.43,8 19.5,8 C17.57,8 16,6.43 16,4.5 C16,2.57 17.57,1 19.5,1 C21.43,1 23,2.57 23,4.5 M19.5,10 C16.4647165,9.9944963 14.0055037,7.53528349 14,4.5 C14,4 14.08,3.5 14.21,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.11,21 21,20.11 21,19 L21,9.79 C20.5,9.92 20,10 19.5,10 Z\\\" id=\\\"mdi:checkout-blank-badge\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/clock-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 M12,2 C14.6521649,2 17.195704,3.0535684 19.0710678,4.92893219 C20.9464316,6.80429597 22,9.3478351 22,12 C22,17.5228475 17.5228475,22 12,22 C6.47,22 2,17.5 2,12 C2,6.4771525 6.4771525,2 12,2 M12.5,7 L12.5,12.25 L17,14.92 L16.25,16.15 L11,13 L11,7 L12.5,7 Z\\\" id=\\\"mdi:clock-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/close\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:close\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/cloud\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19.35,10.03 C18.67,6.59 15.64,4 12,4 C9.11,4 6.6,5.64 5.35,8.03 C2.34,8.36 0,10.9 0,14 C0,17.3137085 2.6862915,20 6,20 L19,20 C20.3260824,20 21.597852,19.4732158 22.5355339,18.5355339 C23.4732158,17.597852 24,16.3260824 24,15 C24,12.36 21.95,10.22 19.35,10.03 Z\\\" id=\\\"mdi:cloud\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/contact-add\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M15,14 C12.33,14 7,15.33 7,18 L7,20 L23,20 L23,18 C23,15.33 17.67,14 15,14 M6,10 L6,7.5 L4,7.5 L4,10 L1.5,10 L1.5,12 L4,12 L4,14.5 L6,14.5 L6,12 L8.5,12 L8.5,10 M15,12 C17.209139,12 19,10.209139 19,8 C19,5.790861 17.209139,4 15,4 C12.790861,4 11,5.790861 11,8 C11,10.209139 12.790861,12 15,12 Z\\\" id=\\\"xabber:contact-add\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/crosshairs-gps\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,8 C14.209139,8 16,9.790861 16,12 C16,14.209139 14.209139,16 12,16 C9.790861,16 8,14.209139 8,12 C8,9.790861 9.790861,8 12,8 M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\\\" id=\\\"mdi:crosshairs-gps\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/crosshairs-question\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13,5 5,8.13 5,12 C5,15.87 8.13,19 12,19 C15.87,19 19,15.87 19,12 C19,8.13 15.87,5 12,5 M11.13,17.25 L12.88,17.25 L12.88,15.5 L11.13,15.5 L11.13,17.25 M12,6.75 C10.07,6.75 8.5,8.32 8.5,10.25 L10.25,10.25 C10.25,9.28 11.03,8.5 12,8.5 C12.97,8.5 13.75,9.28 13.75,10.25 C13.75,12 11.13,11.78 11.13,14.63 L12.88,14.63 C12.88,12.66 15.5,12.44 15.5,10.25 C15.5,8.32 13.93,6.75 12,6.75 Z\\\" id=\\\"mdi:crosshairs-question\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/crosshairs\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\\\" id=\\\"mdi:crosshairs\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/database-lock\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,3 C15.42,3 19,4.79 19,7 C19,9.21 15.42,11 11,11 C6.58,11 3,9.21 3,7 C3,4.79 6.58,3 11,3 M19,12.03 C17.11,12.24 15.57,13.62 15.13,15.43 C13.92,15.79 12.5,16 11,16 C6.58,16 3,14.21 3,12 L3,9 C3,11.21 6.58,13 11,13 C15.42,13 19,11.21 19,9 L19,12.03 M14,17.71 L14,20.71 C13.07,20.9 12.06,21 11,21 C6.58,21 3,19.21 3,17 L3,14 C3,16.21 6.58,18 11,18 C12.06,18 13.07,17.9 14,17.71 M19.5,14 C20.8807119,14 22,15.1192881 22,16.5 L22,17 C22.5522847,17 23,17.4477153 23,18 L23,22 C23,22.5522847 22.5522847,23 22,23 L17,23 C16.4477153,23 16,22.5522847 16,22 L16,18 C16,17.4477153 16.4477153,17 17,17 L17,16.5 C17,15.1192881 18.1192881,14 19.5,14 M19.5,15 C18.6715729,15 18,15.6715729 18,16.5 L18,17 L21,17 L21,16.5 C21,15.6715729 20.3284271,15 19.5,15 Z\\\" id=\\\"mdi:database-lock\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/database\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 C7.58,3 4,4.79 4,7 C4,9.21 7.58,11 12,11 C16.42,11 20,9.21 20,7 C20,4.79 16.42,3 12,3 M4,9 L4,12 C4,14.21 7.58,16 12,16 C16.42,16 20,14.21 20,12 L20,9 C20,11.21 16.42,13 12,13 C7.58,13 4,11.21 4,9 M4,14 L4,17 C4,19.21 7.58,21 12,21 C16.42,21 20,19.21 20,17 L20,14 C20,16.21 16.42,18 12,18 C7.58,18 4,16.21 4,14 Z\\\" id=\\\"mdi:database\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/description-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.11 3.89,21 5,21 L19,21 C20.11,21 21,20.11 21,19 L21,5 C21,3.89 20.11,3 19,3 L5,3 M5,5 L19,5 L19,19 L5,19 L5,5 M7,7 L7,9 L17,9 L17,7 L7,7 M7,11 L7,13 L17,13 L17,11 L7,11 M7,15 L7,17 L14,17 L14,15 L7,15 Z\\\" id=\\\"mdi:text-box-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/description\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,17 L7,17 L7,15 L14,15 M17,13 L7,13 L7,11 L17,11 M17,9 L7,9 L7,7 L17,7 M19,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 Z\\\" id=\\\"mdi:text-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-cellphone\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,20 L7,20 L7,4 L17,4 M17,1 L7,1 C5.89,1 5,1.89 5,3 L5,21 C5,22.1045695 5.8954305,23 7,23 L17,23 C18.1045695,23 19,22.1045695 19,21 L19,3 C19,1.8954305 18.1045695,1 17,1 Z\\\" id=\\\"xabber:cellphone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-console\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,2 C22.0543618,2 22.9181651,2.81587779 22.9945143,3.85073766 L23,4 L23,16 C23,17.0543618 22.1841222,17.9181651 21.1492623,17.9945143 L21,18 L14,18 L14,20 L16,20 L16,22 L8,22 L8,20 L10,20 L10,18 L3,18 C1.9456382,18 1.08183488,17.1841222 1.00548574,16.1492623 L1,16 L1,4 C1,2.94045455 1.81092975,2.08136364 2.85006292,2.00545361 L3,2 L21,2 Z M21,4 L3,4 L3,16 L21,16 L21,4 Z M18,12 L18,14 L13,14 L13,12 L18,12 Z M8.4,6 L11.7,9.3 C12.09,9.69 12.09,10.33 11.7,10.72 L8.42,14 L5.59,14 L9.58,10 L5.57,6 L8.4,6 Z\\\" id=\\\"xabber.monitor-console\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-desktop\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,16 L3,16 L3,4 L21,4 M21,2 L3,2 C1.89,2 1,2.89 1,4 L1,16 C1,17.1045695 1.8954305,18 3,18 L10,18 L10,20 L8,20 L8,22 L16,22 L16,20 L14,20 L14,18 L21,18 C22.1045695,18 23,17.1045695 23,16 L23,4 C23,2.8954305 22.1045695,2 21,2 Z\\\" id=\\\"mdi:monitor\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-tablet\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,18 L4,18 L4,6 L20,6 M21,4 L3,4 C1.89,4 1,4.89 1,6 L1,18 C1,19.1045695 1.8954305,20 3,20 L21,20 C22.1045695,20 23,19.1045695 23,18 L23,6 C23,4.8954305 22.1045695,4 21,4 Z\\\" id=\\\"xabber:tablet\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-web\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,2 C22.0543618,2 22.9181651,2.81587779 22.9945143,3.85073766 L23,4 L23,16 C23,17.0543618 22.1841222,17.9181651 21.1492623,17.9945143 L21,18 L14,18 L14,20 L16,20 L16,22 L8,22 L8,20 L10,20 L10,18 L3,18 C1.9456382,18 1.08183488,17.1841222 1.00548574,16.1492623 L1,16 L1,4 C1,2.94045455 1.81092975,2.08136364 2.85006292,2.00545361 L3,2 L21,2 Z M21,4 L3,4 L3,16 L21,16 L21,4 Z M9.59,6.41 L10.5,7.5 L8,10 L10.5,12.5 L9.59,13.5 L6,10 L9.59,6.41 Z M14.5,6.50152764 L18,10 L14.5,13.5 L13.5,12.5 L16,10 L13.5,7.5 L14.5,6.50152764 Z\\\" id=\\\"xabber.monitor-tag\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/devices\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M23,11 L18,11 C17.4477153,11 17,11.4477153 17,12 L17,21 C17,21.5522847 17.4477153,22 18,22 L23,22 C23.5522847,22 24,21.5522847 24,21 L24,12 C24,11.4477153 23.5522847,11 23,11 M23,20 L18,20 L18,13 L23,13 L23,20 M20,2 L2,2 C0.89,2 0,2.89 0,4 L0,16 C0,17.1045695 0.8954305,18 2,18 L9,18 L9,20 L7,20 L7,22 L15,22 L15,20 L13,20 L13,18 L15,18 L15,16 L2,16 L2,4 L20,4 L20,9 L22,9 L22,4 C22,2.8954305 21.1045695,2 20,2 Z\\\" id=\\\"mdi:monitor-cellphone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/download\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M5,20 L19,20 L19,18 L5,18 M19,9 L15,9 L15,3 L9,3 L9,9 L5,9 L12,16 L19,9 Z\\\" id=\\\"mdi:download\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/edit-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14.06,9 L15,9.94 L5.92,19 L5,19 L5,18.08 L14.06,9 M17.66,3 C17.41,3 17.15,3.1 16.96,3.29 L15.13,5.12 L18.88,8.87 L20.71,7.04 C21.1,6.65 21.1,6 20.71,5.63 L18.37,3.29 C18.17,3.09 17.92,3 17.66,3 M14.06,6.19 L3,17.25 L3,21 L6.75,21 L17.81,9.94 L14.06,6.19 Z\\\" id=\\\"mdi:pencil-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/edit\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20.71,7.04 C21.1,6.65 21.1,6 20.71,5.63 L18.37,3.29 C18,2.9 17.35,2.9 16.96,3.29 L15.12,5.12 L18.87,8.87 M3,17.25 L3,21 L6.75,21 L17.81,9.93 L14.06,6.18 L3,17.25 Z\\\" id=\\\"mdi:pencil\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/email-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M22,6 C22,4.9 21.1,4 20,4 L4,4 C2.9,4 2,4.9 2,6 L2,18 C2,19.1 2.9,20 4,20 L20,20 C21.1,20 22,19.1 22,18 L22,6 M20,6 L12,11 L4,6 L20,6 M20,18 L4,18 L4,8 L12,13 L20,8 L20,18 Z\\\" id=\\\"mdi:email-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/email\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,8 L12,13 L4,8 L4,6 L12,11 L20,6 M20,4 L4,4 C2.89,4 2,4.89 2,6 L2,18 C2,19.1045695 2.8954305,20 4,20 L20,20 C21.1045695,20 22,19.1045695 22,18 L22,6 C22,4.89 21.1,4 20,4 Z\\\" id=\\\"mdi:email\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/expires\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19.03,7.39 L20.45,5.97 C20.0000001,5.46 19.55,5 19.04,4.56 L17.62,6 C16.07,4.74 14.12,4 12.0000001,4 C7.0294373,4 3.00000013,8.0294373 3.00000013,13 C3.00000013,17.9705627 7.0294373,22 12.0000001,22 C17.0000001,22 21.0000001,17.97 21.0000001,13 C21.0000001,10.88 20.26,8.93 19.03,7.39 M13,14 L11,14 L11,7 L13,7 L13,14 M15,1 L9,1 L9,3 L15,3 L15,1 Z\\\" id=\\\"mdi:timer\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-audio\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 L12,13.55 C11.41,13.21 10.73,13 10,13 C7.79,13 6,14.79 6,17 C6,19.21 7.79,21 10,21 C12.21,21 14,19.21 14,17 L14,7 L18,7 L18,3 L12,3 Z\\\" id=\\\"mdi:music-note\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-document\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L18.5,9 L13,3.5 L13,9 M6,2 L14,2 L20,8 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,4 C4,2.89 4.89,2 6,2 M15,18 L15,16 L6,16 L6,18 L15,18 M18,14 L18,12 L6,12 L6,14 L18,14 Z\\\" id=\\\"mdi:file-document\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-pdf\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,3 C20.1045695,3 21,3.8954305 21,5 L21,19 C21,20.1045695 20.1045695,21 19,21 L5,21 C3.89,21 3,20.1 3,19 L3,5 C3,3.89 3.89,3 5,3 L19,3 M10.59,10.08 C10.57,10.13 10.3,11.84 8.5,14.77 C8.5,14.77 5,16.58 5.83,17.94 C6.5,19 8.15,17.9 9.56,15.27 C9.56,15.27 11.38,14.63 13.79,14.45 C13.79,14.45 17.65,16.19 18.17,14.34 C18.69,12.5 15.12,12.9 14.5,13.09 C14.5,13.09 12.46,11.75 12,9.89 C12,9.89 13.13,5.95 11.38,6 C9.63,6.05 10.29,9.12 10.59,10.08 M11.4,11.13 C11.43,11.13 11.87,12.33 13.29,13.58 C13.29,13.58 10.96,14.04 9.9,14.5 C9.9,14.5 10.9,12.75 11.4,11.13 M15.32,13.84 C15.9,13.69 17.64,14 17.58,14.32 C17.5,14.65 15.32,13.84 15.32,13.84 M8.26,15.7 C7.73,16.91 6.83,17.68 6.6,17.67 C6.37,17.66 7.3,16.07 8.26,15.7 M11.4,8.76 C11.39,8.71 11.03,6.57 11.4,6.61 C11.94,6.67 11.4,8.71 11.4,8.76 Z\\\" id=\\\"mdi:file-pdf-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-presentation\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,2 L13,2 L13,3 L19,3 C20.1045695,3 21,3.8954305 21,5 L21,16 C21,17.1045695 20.1045695,18 19,18 L13,18 L13,21 L17,21 L17,23 L7,23 L7,21 L11,21 L11,18 L5,18 C3.8954305,18 3,17.1045695 3,16 L3,5 C3,3.8954305 3.8954305,3 5,3 L11,3 L11,2 Z M19,5 L5,5 L5,16 L19,16 L19,5 Z M9,9 L9,14 L7,14 L7,9 L9,9 Z M13,7 L13,14 L11,14 L11,7 L13,7 Z M17,11 L17,14 L15,14 L15,11 L17,11 Z\\\" id=\\\"xabber:presentation\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-video\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18,9 L16,9 L16,7 L18,7 M18,13 L16,13 L16,11 L18,11 M18,17 L16,17 L16,15 L18,15 M8,9 L6,9 L6,7 L8,7 M8,13 L6,13 L6,11 L8,11 M8,17 L6,17 L6,15 L8,15 M18,3 L18,5 L16,5 L16,3 L8,3 L8,5 L6,5 L6,3 L4,3 L4,21 L6,21 L6,19 L8,19 L8,21 L16,21 L16,19 L18,19 L18,21 L20,21 L20,3 L18,3 Z\\\" id=\\\"mdi:filmstrip\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-zip\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,17 L12,17 L12,15 L10,15 L10,13 L12,13 L12,15 L14,15 M14,9 L12,9 L12,11 L14,11 L14,13 L12,13 L12,11 L10,11 L10,9 L12,9 L12,7 L10,7 L10,5 L12,5 L12,7 L14,7 M19,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 Z\\\" id=\\\"mdi:zip-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L13,3.5 L18.5,9 M6,2 C4.89,2 4,2.89 4,4 L4,20 C4,21.1045695 4.8954305,22 6,22 L18,22 C19.1045695,22 20,21.1045695 20,20 L20,8 L14,2 L6,2 Z\\\" id=\\\"mdi:file\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/fullname-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8,9 C9.1045695,9 10,9.8954305 10,11 C10,12.1045695 9.1045695,13 8,13 C6.8954305,13 6,12.1045695 6,11 C6,9.8954305 6.8954305,9 8,9 M12,17 L4,17 L4,16 C4,14.67 6.67,14 8,14 C9.33,14 12,14.67 12,16 L12,17 M20,8 L14,8 L14,10 L20,10 L20,8 M20,12 L14,12 L14,14 L20,14 L20,12 M20,16 L14,16 L14,18 L20,18 L20,16 M22,4 L14,4 L14,6 L22,6 L22,20 L2,20 L2,6 L10,6 L10,4 L2,4 C0.8954305,4 0,4.8954305 0,6 L0,20 C0,21.1045695 0.8954305,22 2,22 L22,22 C23.1045695,22 24,21.1045695 24,20 L24,6 C24,4.8954305 23.1045695,4 22,4 M13,6 L11,6 L11,2 L13,2 L13,6 Z\\\" id=\\\"mdi:badge-account-horizontal-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/fullname\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M22,4 L14,4 L14,7 L10,7 L10,4 L2,4 C0.8954305,4 0,4.8954305 0,6 L0,20 C0,21.1045695 0.8954305,22 2,22 L22,22 C23.1045695,22 24,21.1045695 24,20 L24,6 C24,4.8954305 23.1045695,4 22,4 M8,9 C9.1045695,9 10,9.8954305 10,11 C10,12.1045695 9.1045695,13 8,13 C6.8954305,13 6,12.1045695 6,11 C6,9.8954305 6.8954305,9 8,9 M12,17 L4,17 L4,16 C4,14.67 6.67,14 8,14 C9.33,14 12,14.67 12,16 L12,17 M20,18 L14,18 L14,16 L20,16 L20,18 M20,14 L14,14 L14,12 L20,12 L20,14 M20,10 L14,10 L14,8 L20,8 L20,10 M13,6 L11,6 L11,2 L13,2 L13,6 Z\\\" id=\\\"mdi:badge-account-horizontal\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-incognito\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10,8.00704958 C10.9597902,8.00704958 12.8474987,8.64533875 12.9912872,9.91524601 L13,10.0706662 L13,11.0070496 L10.7492023,11.0070496 L10.75,9.875 C10.75,9.10242267 10.3751421,8.46914598 9.75414509,8.01828756 L9.88054216,8.01011295 L10,8.00704958 Z M7,8 C8.71428571,8 10,8.75 10,9.875 L10,11 L4,11 L4,9.875 C4,8.75 5.28571429,8 7,8 Z M7,8.75 C5.68529006,8.75 4.83790401,9.22876096 4.75645218,9.78636102 L4.75,9.875 L4.75,10.25 L9.25,10.25 L9.25,9.875 C9.25,9.31020891 8.46834945,8.80320839 7.20365867,8.75392032 L7,8.75 Z M10.5,4 C11.3284271,4 12,4.67157288 12,5.5 C12,6.32842712 11.3284271,7 10.5,7 C10.0309641,7 9.61220865,6.78472342 9.33715065,6.44758714 C9.59948544,6.02690214 9.75,5.53102835 9.75,5 C9.75,4.7455993 9.71545544,4.49926692 9.65080116,4.2654377 C9.89064982,4.09777196 10.183907,4 10.5,4 Z M7,3 C8.1045695,3 9,3.8954305 9,5 C9,6.1045695 8.1045695,7 7,7 C5.8954305,7 5,6.1045695 5,5 C5,3.8954305 5.8954305,3 7,3 Z M7,3.75 C6.30964406,3.75 5.75,4.30964406 5.75,5 C5.75,5.69035594 6.30964406,6.25 7,6.25 C7.69035594,6.25 8.25,5.69035594 8.25,5 C8.25,4.30964406 7.69035594,3.75 7,3.75 Z\\\" id=\\\"incognito\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-invite\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M4.8,5 L11.2,5 C11.64,5 12,5.33981818 12,5.76363636 L12,10.2363636 C12,10.6581084 11.6418278,11 11.2,11 L4.8,11 C4.3581722,11 4,10.6581084 4,10.2363636 L4,5.76363636 C4,5.33981818 4.356,5 4.8,5 Z M4.57142857,5.81818182 L4.57142857,6.90909091 L8,9.09090909 L11.4285714,6.90909091 L11.4285714,5.81818182 L8,8 L4.57142857,5.81818182 Z\\\" id=\\\"invitation\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-private\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M5.54386908,9.00001406 C4.74833179,9.00015914 4.03626356,9.50273575 3.75677818,10.2613541 C3.4772928,11.0199725 3.68898239,11.8755937 4.28805949,12.4087226 C4.88713659,12.9418515 5.74800895,13.0407214 6.44860686,12.6568582 C7.14920477,12.272995 7.54265288,11.4868729 7.43605089,10.683913 C7.61005089,10.6450242 7.79823271,10.6139132 7.99841453,10.6144687 C8.19859635,10.6155798 8.38677817,10.6450242 8.56077817,10.683913 C8.45417618,11.4868729 8.84762429,12.272995 9.5482222,12.6568582 C10.2488201,13.0407214 11.1096925,12.9418515 11.7087696,12.4087226 C12.3078467,11.8755937 12.5195363,11.0199725 12.2400509,10.2613541 C11.9605655,9.50273575 11.2484973,9.00015914 10.45296,9.00001406 C9.6733377,8.99699984 8.97079939,9.47872777 8.68023271,10.2155808 C8.45968538,10.1448214 8.22964016,10.109582 7.99841453,10.1111366 C7.69841453,10.1111366 7.49059635,10.1616921 7.31659635,10.2155808 C7.02602967,9.47872777 6.32349136,8.99699984 5.54386908,9.00001406 L5.54386908,9.00001406 Z M5.54386908,9.55558244 C6.29698464,9.55558244 6.90750544,10.1774076 6.90750544,10.9444679 C6.90750544,11.7115282 6.29698464,12.3333534 5.54386908,12.3333534 C4.79075351,12.3333534 4.18023271,11.7115282 4.18023271,10.9444679 C4.18023271,10.1774076 4.79075351,9.55558244 5.54386908,9.55558244 Z M10.45296,9.55558244 C11.2060756,9.55558244 11.8165963,10.1774076 11.8165963,10.9444679 C11.8165963,11.7115282 11.2060756,12.3333534 10.45296,12.3333534 C9.69984442,12.3333534 9.08932362,11.7115282 9.08932362,10.9444679 C9.08932362,10.1774076 9.69984442,9.55558244 10.45296,9.55558244 Z M8,7 C6.512,7 4.39345455,7.268 4.25,7.297 C3.78243762,7.41026088 3.32163107,7.54577794 2.86945455,7.703 C2.31418182,7.877 2,8 2,8 L14,8 C14,8 13.6858182,7.877 13.1305455,7.703 C12.6727414,7.54549536 12.2062901,7.40997808 11.7330909,7.297 C11.7330909,7.297 9.54036364,7 8,7 Z M8,3 C6.53163636,3.0015 5.49418182,3.6095 5.49418182,3.6095 L4.72727273,6 L11.2727273,6 L10.5058182,3.6095 C10.5058182,3.6095 9.46836364,3.001 8,3 Z\\\" id=\\\"private\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-public\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10.500501,8 C11.3287776,8 11.995,7.328 11.995,6.5 C11.995,5.672 11.3287776,5 10.500501,5 C9.67222445,5 9,5.672 9,6.5 C9,7.328 9.67222445,8 10.500501,8 Z M6.5,7 C7.33,7 7.995,6.33 7.995,5.5 C7.995,4.67 7.33,4 6.5,4 C5.67,4 5,4.67 5,5.5 C5,6.33 5.67,7 6.5,7 Z M10.5,9 C9.66818182,9 8,9.46 8,10.375 L8,10.9989178 L13,10.9989178 L13,10.375 C13,9.46 11.3318182,9 10.5,9 Z M6.50474946,7.99186821 C4.77490105,7.99186821 3,8.585 3,9.75 L3,11 L7,11 L7,10 C7,9.24841871 7.73828683,8.72461975 8.70884076,8.35916117 C8.08932051,8.04219075 6.85693708,7.99186821 6.50474946,7.99186821 Z\\\" id=\\\"xabber:group-public\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/history\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.5,8 L12,8 L12,13 L16.28,15.54 L17,14.33 L13.5,12.25 L13.5,8 M13,3 C8.02943725,3 4,7.02943725 4,12 L1,12 L4.96,16.03 L9,12 L6,12 C6,8.13400675 9.13400675,5 13,5 C16.8659932,5 20,8.13400675 20,12 C20,15.8659932 16.8659932,19 13,19 C11.07,19 9.32,18.21 8.06,16.94 L6.64,18.36 C8.31963558,20.0581063 10.6115589,21.0094707 13,21.00007 C17.9705627,21.00007 22,16.9705627 22,12 C22,7.02943725 17.9705627,3 13,3\\\" id=\\\"mdi:history\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<path fill=\\\"#9E9E9E\\\" d=\\\"M12,15C12.81,15 13.5,14.7 14.11,14.11C14.7,13.5 15,12.81 15,12C15,11.19 14.7,10.5 14.11,9.89C13.5,9.3 12.81,9 12,9C11.19,9 10.5,9.3 9.89,9.89C9.3,10.5 9,11.19 9,12C9,12.81 9.3,13.5 9.89,14.11C10.5,14.7 11.19,15 12,15M12,2C14.75,2 17.1,3 19.05,4.95C21,6.9 22,9.25 22,12V13.45C22,14.45 21.65,15.3 21,16C20.3,16.67 19.5,17 18.5,17C17.3,17 16.31,16.5 15.56,15.5C14.56,16.5 13.38,17 12,17C10.63,17 9.45,16.5 8.46,15.54C7.5,14.55 7,13.38 7,12C7,10.63 7.5,9.45 8.46,8.46C9.45,7.5 10.63,7 12,7C13.38,7 14.55,7.5 15.54,8.46C16.5,9.45 17,10.63 17,12V13.45C17,13.86 17.16,14.22 17.46,14.53C17.76,14.84 18.11,15 18.5,15C18.92,15 19.27,14.84 19.57,14.53C19.87,14.22 20,13.86 20,13.45V12C20,9.81 19.23,7.93 17.65,6.35C16.07,4.77 14.19,4 12,4C9.81,4 7.93,4.77 6.35,6.35C4.77,7.93 4,9.81 4,12C4,14.19 4.77,16.07 6.35,17.65C7.93,19.23 9.81,20 12,20H17V22H12C9.25,22 6.9,21 4.95,19.05C3,17.1 2,14.75 2,12C2,9.25 3,6.9 4.95,4.95C6.9,3 9.25,2 12,2Z\\\" />\";","export default \"<path\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path5\\\"\\n     d=\\\"m 5.2462478,6.4309194 c 0,0 0.2534497,0.5323027 1.6195791,-0.2126538 C 9.2126105,5.0708821 11.67437,4.0095 14.785441,5.5382202 17.009904,6.7924 17.27733,10.360371 13.864368,13.369134 c -1.679464,1.609494 -1.887868,4.226006 -1.825254,4.993295 -0.128246,1.561168 0.259655,1.837265 0.594912,1.938246 0.335257,0.100981 1.461445,-0.04379 1.305934,-1.000087 -0.193265,-1.461227 -0.06192,-2.413209 0.855267,-4.044829 0.758763,-1.162942 2.123721,-1.871086 3.273016,-4.211889 C 18.840748,9.1444158 18.891207,6.503336 17.479328,4.894053 16.152845,3.3821059 14.670099,2.4131656 12.422552,2.4210559 9.8716741,2.446853 8.13424,2.8374168 6.751418,3.5206351 4.5012489,4.730324 4.2973099,4.8714754 5.2462478,6.4309194 z\\\"\\n     clip-rule=\\\"evenodd\\\"\\n     sodipodi:nodetypes=\\\"cccccscccsccc\\\" />\\n<path\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path7\\\"\\n     d=\\\"M 10.393116,10.546893 C 10.179036,9.8582024 9.6418168,9.5037588 9.1268128,9.5037588 c -0.686671,0 -1.6386388,0.1373222 -1.6546508,1.5832442 0,0 0.5308711,2.944458 1.5235151,2.93234 0.364542,-0.004 0.7403587,-0.28287 0.017892,-1.856769 0,0 -0.4395592,-0.974022 -0.1380497,-1.193301 0.5440269,-0.394487 0.5911749,0.418754 0.9156116,1.069105 0.674692,0.328471 1.06244,-0.702948 1.201092,-0.722298 1.026124,-0.142524 -0.130551,1.372622 -0.2386,1.539241 -0.467844,0.515308 -1.3020963,1.251877 -0.614252,1.612091 0.864686,0.205725 1.292561,-0.492065 1.464229,-0.658684 0.2663,-0.37565 0.549622,-0.820112 0.721289,-1.133153 0.877971,-1.468145 0.834305,-2.8722146 -0.558429,-2.9011876 -0.515004,0 -0.814918,0.2302366 -1.373344,0.7725056 z\\\"\\n     clip-rule=\\\"evenodd\\\"\\n     sodipodi:nodetypes=\\\"cscccccccccccc\\\" />\\n<path\\n     sodipodi:nodetypes=\\\"cssccsccccssccssc\\\"\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path9\\\"\\n     d=\\\"m 6.8360046,14.735541 c -0.2526865,-0.134842 -0.341246,-0.148685 -0.556785,-0.125105 -0.4758127,0.05205 -0.712045,0.475393 -0.6165306,0.901178 0.2727696,1.215955 1.0359093,1.641989 2.25985,2.132257 1.2530682,0.41756 2.475738,0.396638 3.398493,-0.0757 0.298412,-0.05064 0.287556,-0.683612 0.292618,-1.034981 0.006,-0.414484 -0.327129,-0.528727 -0.651454,-0.493243 -0.82369,0.222079 -0.891361,0.338578 -1.882259,0.248554 -1.1996954,-0.369888 -1.6284239,-0.589257 -2.2439324,-1.55296 z m -0.596727,2.884244 c -0.1641271,-0.121 -0.2921232,-0.08347 -0.442594,-0.06701 -0.3893935,0.0426 -0.727761,0.382603 -0.6463412,0.81143 0.2795655,1.472433 3.2776659,2.179707 4.6014193,2.113323 1.0831623,-0.05044 1.6865703,-0.273231 1.7646093,-1.16247 -0.03364,-0.366114 -0.266964,-0.659232 -0.720411,-0.609623 -0.432095,0.04727 -0.373883,0.118182 -1.0438868,0.191485 C 8.563559,19.026954 7.5842504,18.723225 6.2392776,17.619785 z\\\"\\n     clip-rule=\\\"evenodd\\\" />\\n\";","export default \"<path fill=\\\"#9E9E9E\\\" d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\" />\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/id-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C15.8659932,2 19,5.13400675 19,9 C19,11.38 17.81,13.47 16,14.74 L16,17 C16,17.5522847 15.5522847,18 15,18 L9,18 C8.44771525,18 8,17.5522847 8,17 L8,14.74 C6.19,13.47 5,11.38 5,9 C5,5.13400675 8.13400675,2 12,2 M9,21 L9,20 L15,20 L15,21 C15,21.5522847 14.5522847,22 14,22 L10,22 C9.44771525,22 9,21.5522847 9,21 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,11.05 8.23,12.81 10,13.58 L10,16 L14,16 L14,13.58 C15.77,12.81 17,11.05 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:lightbulb-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/id\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C8.13400675,2 5,5.13400675 5,9 C5,11.38 6.19,13.47 8,14.74 L8,17 C8,17.5522847 8.44771525,18 9,18 L15,18 C15.5522847,18 16,17.5522847 16,17 L16,14.74 C17.81,13.47 19,11.38 19,9 C19,5.13400675 15.8659932,2 12,2 M9,21 C9,21.5522847 9.44771525,22 10,22 L14,22 C14.5522847,22 15,21.5522847 15,21 L15,20 L9,20 L9,21 Z\\\" id=\\\"mdi:lightbulb\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/image\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.5,13.5 L11,16.5 L14.5,12 L19,18 L5,18 M21,19 L21,5 C21,3.89 20.1,3 19,3 L5,3 C3.8954305,3 3,3.8954305 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 Z\\\" id=\\\"mdi:image\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/index\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C7.581722,2 4,5.581722 4,10 C4,14.03 7,17.42 11,17.93 L11,19 L10,19 C9.44771525,19 9,19.4477153 9,20 L2,20 L2,22 L9,22 C9,22.5522847 9.44771525,23 10,23 L14,23 C14.5522847,23 15,22.5522847 15,22 L22,22 L22,20 L15,20 C15,19.4477153 14.5522847,19 14,19 L13,19 L13,17.93 C17,17.43 20,14.03 20,10 C20,5.581722 16.418278,2 12,2 M12,4 C12,4 12.74,5.28 13.26,7 L10.74,7 C11.26,5.28 12,4 12,4 M9.77,4.43 C9.5,4.93 9.09,5.84 8.74,7 L6.81,7 C7.5,5.84 8.5,4.93 9.77,4.43 M14.23,4.44 C15.5,4.94 16.5,5.84 17.19,7 L15.26,7 C14.91,5.84 14.5,4.93 14.23,4.44 M6.09,9 L8.32,9 C8.28,9.33 8.25,9.66 8.25,10 C8.25,10.34 8.28,10.67 8.32,11 L6.09,11 C5.96891098,10.3388318 5.96891098,9.66116821 6.09,9 M10.32,9 L13.68,9 C13.72,9.33 13.75,9.66 13.75,10 C13.75,10.34 13.72,10.67 13.68,11 L10.32,11 C10.28,10.67 10.25,10.34 10.25,10 C10.25,9.66 10.28,9.33 10.32,9 M15.68,9 L17.91,9 C18.031089,9.66116821 18.031089,10.3388318 17.91,11 L15.68,11 C15.72,10.67 15.75,10.34 15.75,10 C15.75,9.66 15.72,9.33 15.68,9 M6.81,13 L8.74,13 C9.09,14.16 9.5,15.07 9.77,15.56 C8.5,15.06 7.5,14.16 6.81,13 M10.74,13 L13.26,13 C12.74,14.72 12,16 12,16 C12,16 11.26,14.72 10.74,13 M15.26,13 L17.19,13 C16.5,14.16 15.5,15.07 14.23,15.57 C14.5,15.07 14.91,14.16 15.26,13 Z\\\" id=\\\"mdi:wan\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/information-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,9 L13,9 L13,7 L11,7 M12,20 C7.59,20 4,16.41 4,12 C4,7.59 7.59,4 12,4 C16.41,4 20,7.59 20,12 C20,16.41 16.41,20 12,20 M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 M11,17 L13,17 L13,11 L11,11 L11,17 Z\\\" id=\\\"mdi:information-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/information\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L11,9 L11,7 L13,7 M13,17 L11,17 L11,11 L13,11 M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 Z\\\" id=\\\"mdi:information\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/invite-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 L15.77,4.36 L19,4.36 L19,6.36 L21.03,7.65 C21.5653846,7.97307692 21.9388757,8.53473373 21.993168,9.19339554 L22,9.36 L22,19.36 C22,20.4195455 21.1890702,21.2786364 20.1499371,21.3545464 L20,21.36 L4,21.36 C2.9456382,21.36 2.08183488,20.5441222 2.00548574,19.5092623 L2,19.36 L2,9.36 C2,8.68615385 2.33230769,8.09751479 2.83961766,7.73565772 L5,6.36 L5,4.36 L8.23,4.36 L12,2 Z M20,11.36 L12,16.36 L4,11.36 L4,19.36 L20,19.36 L20,11.36 Z M17,6.36 L7,6.36 L7,11.24 L12,14.36 L17,11.24 L17,6.36 Z M16,9.86 L16,11.36 L8,11.36 L8,9.86 L16,9.86 Z M19,8.74 L19,9.99 L20,9.36 L19,8.74 Z M5,8.74 L4,9.36 L5,9.99 L5,8.74 Z M16,7.36 L16,8.86 L8,8.86 L8,7.36 L16,7.36 Z\\\" id=\\\"xabber:invite-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/invite\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,0.64 L8.23,3 L5,3 L5,5 L2.97,6.29 C2.39,6.64 2,7.27 2,8 L2,18 C2,19.1045695 2.8954305,20 4,20 L20,20 C21.11,20 22,19.11 22,18 L22,8 C22,7.27 21.61,6.64 21.03,6.29 L19,5 L19,3 L15.77,3 M7,5 L17,5 L17,9.88 L12,13 L7,9.88 M8,6 L8,7.5 L16,7.5 L16,6 M5,7.38 L5,8.63 L4,8 M19,7.38 L20,8 L19,8.63 M8,8.5 L8,10 L16,10 L16,8.5 L8,8.5 Z\\\" id=\\\"mdi:email-newsletter\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/job-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,6 C20.58,6 21.05,6.2 21.42,6.59 C21.8,7 22,7.45 22,8 L22,19 C22,19.55 21.8,20 21.42,20.41 C21.05,20.8 20.58,21 20,21 L4,21 C3.42,21 2.95,20.8 2.58,20.41 C2.2,20 2,19.55 2,19 L2,8 C2,7.45 2.2,7 2.58,6.59 C2.95,6.2 3.42,6 4,6 L8,6 L8,4 C8,3.42 8.2,2.95 8.58,2.58 C8.95,2.2 9.42,2 10,2 L14,2 C14.58,2 15.05,2.2 15.42,2.58 C15.8,2.95 16,3.42 16,4 L16,6 L20,6 M4,8 L4,19 L20,19 L20,8 L4,8 M14,6 L14,4 L10,4 L10,6 L14,6 Z\\\" id=\\\"mdi:briefcase-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/job\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,2 L14,2 C15.1045695,2 16,2.8954305 16,4 L16,6 L20,6 C21.1045695,6 22,6.8954305 22,8 L22,19 C22,20.1045695 21.1045695,21 20,21 L4,21 C2.89,21 2,20.1 2,19 L2,8 C2,6.89 2.89,6 4,6 L8,6 L8,4 C8,2.89 8.89,2 10,2 M14,6 L14,4 L10,4 L10,6 L14,6 Z\\\" id=\\\"mdi:briefcase\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/key-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M7,14 C5.8954305,14 5,13.1045695 5,12 C5,10.8954305 5.8954305,10 7,10 C8.1045695,10 9,10.8954305 9,12 C9,13.1045695 8.1045695,14 7,14 M12.65,10 C11.8057828,7.60319579 9.54113618,6 7,6 C3.6862915,6 1,8.6862915 1,12 C1,15.3137085 3.6862915,18 7,18 C9.54113618,18 11.8057828,16.3968042 12.65,14 L15,14 L15,18 L18,18 L18,14 L19,14 L19,18 L22,18 L22,14 L23,14 L23,10 L12.65,10 Z\\\" id=\\\"xabber:key-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/key\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M7,14 C5.8954305,14 5,13.1045695 5,12 C5,10.8954305 5.8954305,10 7,10 C8.1045695,10 9,10.8954305 9,12 C9,13.1045695 8.1045695,14 7,14 M12.65,10 C11.8057828,7.60319579 9.54113618,6 7,6 C3.6862915,6 1,8.6862915 1,12 C1,15.3137085 3.6862915,18 7,18 C9.54113618,18 11.8057828,16.3968042 12.65,14 L17,14 L17,18 L21,18 L21,14 L23,14 L23,10 L12.65,10 Z\\\" id=\\\"mdi:key\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/link\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.9,12 C3.9,10.29 5.29,8.9 7,8.9 L11,8.9 L11,7 L7,7 C4.23857625,7 2,9.23857625 2,12 C2,14.7614237 4.23857625,17 7,17 L11,17 L11,15.1 L7,15.1 C5.29,15.1 3.9,13.71 3.9,12 M8,13 L16,13 L16,11 L8,11 L8,13 M17,7 L13,7 L13,8.9 L17,8.9 C18.71,8.9 20.1,10.29 20.1,12 C20.1,13.71 18.71,15.1 17,15.1 L13,15.1 L13,17 L17,17 C19.7614237,17 22,14.7614237 22,12 C22,9.23857625 19.7614237,7 17,7 Z\\\" id=\\\"mdi:link\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-alert\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,17 C11.1,17 12,16.1 12,15 C12,13.9 11.1,13 10,13 C8.9,13 8,13.9 8,15 C8,16.1 8.9,17 10,17 M16,8 C17.1,8 18,8.9 18,10 L18,20 C18,21.1 17.1,22 16,22 L4,22 C2.9,22 2,21.1 2,20 L2,10 C2,8.9 2.9,8 4,8 L5,8 L5,6 C5,3.2 7.2,1 10,1 C12.8,1 15,3.2 15,6 L15,8 L16,8 M10,3 C8.3,3 7,4.3 7,6 L7,8 L13,8 L13,6 C13,4.3 11.7,3 10,3 M22,13 L20,13 L20,7 L22,7 L22,13 M22,17 L20,17 L20,15 L22,15 L22,17 Z\\\" id=\\\"mdi:lock-alert\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-check\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,1 C13.3260824,1 14.597852,1.5267842 15.5355339,2.46446609 C16.4732158,3.40214799 17,4.67391755 17,6 L17,8 L18,8 C19.1045695,8 20,8.8954305 20,10 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,10 C4,8.89 4.9,8 6,8 L7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M15.6,11 L10.47,16.18 L8.4,14.09 L7,15.5 L10.47,19 L17,12.41 L15.6,11 Z M12,3 C10.3431458,3 9,4.34314575 9,6 L9,8 L15,8 L15,6 C15,4.34314575 13.6568542,3 12,3 Z\\\" id=\\\"mdi:lock-check\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-cross\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,1 C13.3260824,1 14.597852,1.5267842 15.5355339,2.46446609 C16.4732158,3.40214799 17,4.67391755 17,6 L17,8 L18,8 C19.1045695,8 20,8.8954305 20,10 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,10 C4,8.89 4.9,8 6,8 L7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M14.12,11.47 L12,13.59 L9.88,11.47 L8.5,12.86 L10.61,15 L8.5,17.11 L9.91,18.53 L12.03,16.41 L14.12,18.5 L15.5,17.11 L13.43,15 L15.55,12.9 L14.12,11.47 Z M12,3 C10.3431458,3 9,4.34314575 9,6 L9,8 L15,8 L15,6 C15,4.34314575 13.6568542,3 12,3 Z\\\" id=\\\"mdi:lock-cross\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-open\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18,1 C15.24,1 13,3.24 13,6 L13,8 L4,8 C2.8954305,8 2,8.8954305 2,10 L2,20 C2,21.1045695 2.8954305,22 4,22 L16,22 C17.11,22 18,21.11 18,20 L18,10 C18,8.8954305 17.1045695,8 16,8 L15,8 L15,6 C15,4.34 16.34,3 18,3 C19.66,3 21,4.34 21,6 L21,8 L23,8 L23,6 C23,3.24 20.76,1 18,1 M10,13 C11.1045695,13 12,13.8954305 12,15 C12,16.11 11.11,17 10,17 C8.8954305,17 8,16.1045695 8,15 C8,13.8954305 8.8954305,13 10,13 Z\\\" id=\\\"mdi:lock-open-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-question\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,1 C9.23857625,1 7,3.23857625 7,6 L7,8 L6,8 C4.8954305,8 4,8.8954305 4,10 L4,20 C4,21.1045695 4.8954305,22 6,22 L18,22 C19.1045695,22 20,21.1045695 20,20 L20,10 C20,8.8954305 19.1045695,8 18,8 L17,8 L17,6 C17,4.67391755 16.4732158,3.40214799 15.5355339,2.46446609 C14.597852,1.5267842 13.3260824,1 12,1 M12,2.9 C13.71,2.9 15.1,4.29 15.1,6 L15.1,8 L8.9,8 L8.9,6 C8.9,4.29 10.29,2.9 12,2.9 M12.19,10.5 C13.13,10.5 13.88,10.71 14.42,11.12 C14.96,11.54 15.23,12.1 15.23,12.8 C15.23,13.24 15.08,13.63 14.79,14 C14.5,14.36 14.12,14.64 13.66,14.85 C13.4,15 13.23,15.15 13.14,15.32 C13.05,15.5 13,15.72 13,16 L11,16 C11,15.5 11.1,15.16 11.29,14.92 C11.5,14.68 11.84,14.4 12.36,14.08 C12.62,13.94 12.83,13.76 13,13.54 C13.14,13.33 13.22,13.08 13.22,12.8 C13.22,12.5 13.13,12.28 12.95,12.11 C12.77,11.93 12.5,11.85 12.19,11.85 C11.92,11.85 11.7,11.92 11.5,12.06 C11.34,12.2 11.24,12.41 11.24,12.69 L9.27,12.69 C9.22,12 9.5,11.4 10.05,11.04 C10.59,10.68 11.3,10.5 12.19,10.5 M11,17 L13,17 L13,19 L11,19 L11,17 Z\\\" id=\\\"mdi:lock-question\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,17 C13.1045695,17 14,16.1045695 14,15 C14,13.89 13.1,13 12,13 C10.8954305,13 10,13.8954305 10,15 C10,16.1045695 10.8954305,17 12,17 M18,8 C19.1045695,8 20,8.8954305 20,10 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,10 C4,8.89 4.9,8 6,8 L7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 C13.3260824,1 14.597852,1.5267842 15.5355339,2.46446609 C16.4732158,3.40214799 17,4.67391755 17,6 L17,8 L18,8 M12,3 C10.3431458,3 9,4.34314575 9,6 L9,8 L15,8 L15,6 C15,4.34314575 13.6568542,3 12,3 Z\\\" id=\\\"mdi:lock\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/map-marker-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 M12,2 C15.8659932,2 19,5.13400675 19,9 C19,14.25 12,22 12,22 C12,22 5,14.25 5,9 C5,5.13400675 8.13400675,2 12,2 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,10 7,12 12,18.71 C17,12 17,10 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:map-marker-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/map-marker\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\\\" id=\\\"mdi:map-marker\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/membership-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 M7.07,18.28 C7.5,17.38 10.12,16.5 12,16.5 C13.88,16.5 16.5,17.38 16.93,18.28 C15.5293835,19.3960251 13.7908746,20.0025637 12,20 C10.14,20 8.43,19.36 7.07,18.28 M18.36,16.83 C16.93,15.09 13.46,14.5 11.9999999,14.5 C10.54,14.5 7.07,15.09 5.64,16.83 C4.57618516,15.4446232 3.99966563,13.7467029 3.99999985,12 C3.99999985,7.59 7.59,4 11.9999999,4 C16.41,4 19.9999999,7.59 19.9999999,12 C19.9999999,13.82 19.38,15.5 18.36,16.83 M12,6 C10.06,6 8.5,7.56 8.5,9.5 C8.5,11.44 10.06,13 12,13 C13.94,13 15.5,11.44 15.5,9.5 C15.5,7.56 13.94,6 12,6 M12,11 C11.1715729,11 10.5,10.3284271 10.5,9.5 C10.5,8.67157288 11.1715729,8 12,8 C12.8284271,8 13.5,8.67157288 13.5,9.5 C13.5,10.3284271 12.8284271,11 12,11 Z\\\" id=\\\"mdi:account-circle-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/message-bookmark-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,2 L4,2 C2.9,2 2,2.9 2,4 L2,22 L6,18 L20,18 C21.1,18 22,17.1 22,16 L22,4 C22,2.9 21.1,2 20,2 M20,16 L5.2,16 L4,17.2 L4,4 L20,4 L20,16 M18,14 L18,6 L13,6 L13,14 L15.5,12.5 L18,14\\\" id=\\\"mdi:message-bookmark-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"message-group-variant2\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M14.2526206,6 L21.4947588,6 C22.3260806,6 23,6.6752491 23,7.49824524 L23,24 L19,20 L8.50524116,20 C7.67391942,20 7,19.3247509 7,18.5017548 L7,17 L17.0005775,17 C18.6556493,17 20,15.6542582 20,13.9942017 L20,6 L14.2526206,6 Z\\\" id=\\\"Message2\\\"></path>\\n        <path d=\\\"M1,2.49824524 C1,1.67078724 1.66642015,1 2.50863659,1 L16.4913634,1 C17.3245604,1 18,1.6752491 18,2.49824524 L18,13.5017548 C18,14.3292128 17.3335799,15 16.4913634,15 L5,15 L1,19 L1,2.49824524 Z M4,10 L4,12 L12,12 L12,10 L4,10 Z M4,7 L4,9 L15,9 L15,7 L4,7 Z M4,4 L4,6 L15,6 L15,4 L4,4 Z\\\" id=\\\"Combined-Shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/minus\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:minus\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 13 5 13 5 11 19 11\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/mobile\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10,1 C11.1045695,1 12,1.8954305 12,3 L12,12 C12,13.1045695 11.1045695,14 10,14 L6,14 C4.8954305,14 4,13.1045695 4,12 L4,3 C4,1.8954305 4.8954305,1 6,1 L10,1 Z M10,4 L6,4 L6,10 L10,10 L10,4 Z\\\" id=\\\"Mobile\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/palette\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17.5,12 C16.6715729,12 16,11.3284271 16,10.5 C16,9.67157288 16.6715729,9 17.5,9 C18.3284271,9 19,9.67157288 19,10.5 C19,11.3284271 18.3284271,12 17.5,12 M14.5,8 C13.6715729,8 13,7.32842712 13,6.5 C13,5.67157288 13.6715729,5 14.5,5 C15.3284271,5 16,5.67157288 16,6.5 C16,7.32842712 15.3284271,8 14.5,8 M9.5,8 C8.67157288,8 8,7.32842712 8,6.5 C8,5.67157288 8.67157288,5 9.5,5 C10.3284271,5 11,5.67157288 11,6.5 C11,7.32842712 10.3284271,8 9.5,8 M6.5,12 C5.67157288,12 5,11.3284271 5,10.5 C5,9.67157288 5.67157288,9 6.5,9 C7.32842712,9 8,9.67157288 8,10.5 C8,11.3284271 7.32842712,12 6.5,12 M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C12.8284271,21 13.5,20.3284271 13.5,19.5 C13.5,19.11 13.35,18.76 13.11,18.5 C12.88,18.23 12.73,17.88 12.73,17.5 C12.73,16.6715729 13.4015729,16 14.23,16 L16,16 C18.7614237,16 21,13.7614237 21,11 C21,6.58 16.97,3 12,3 L12,3 Z\\\" id=\\\"mdi:palette\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/pause\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,19 L18,19 L18,5 L14,5 M6,19 L10,19 L10,5 L6,5 L6,19 Z\\\" id=\\\"mdi:pause\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/picture-in-picture-bottom-right\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,11 L11,11 L11,17 L19,17 L19,11 M23,19 L23,5 C23,3.88 22.1,3 21,3 L3,3 C1.8954305,3 1,3.8954305 1,5 L1,19 C1,20.1045695 1.8954305,21 3,21 L21,21 C22.1045695,21 23,20.1045695 23,19 M21,19 L3,19 L3,4.97 L21,4.97 L21,19 Z\\\" id=\\\"mdi:picture-in-picture-bottom-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/picture-in-picture-minimize\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,3 C22.1,3 23,3.88 23,5 L23.0008195,11.8103588 C22.4253055,11.2578757 21.7483079,10.8103075 21.000576,10.4984036 L21,4.97 L3,4.97 L3,19 L12.4984036,19.000576 C12.8103075,19.7483079 13.2578757,20.4253055 13.8103588,21.0008195 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L21,3 Z M21,13 L21,14.5 L17.5,14.5 L22,19 L21,20 L16.5,15.5 L16.5,19 L15,19 L15,13 L21,13 Z M13,7 L13,13 L5,13 L5,7 L13,7 Z\\\" id=\\\"xabber:picture-in-picture-minimize\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/picture-in-picture-top-right\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,7 L11,7 L11,13 L19,13 L19,7 M21,3 L3,3 C1.8954305,3 1,3.8954305 1,5 L1,19 C1,20.1045695 1.8954305,21 3,21 L21,21 C22.1045695,21 23,20.1045695 23,19 L23,5 C23,3.8954305 22.1045695,3 21,3 M21,19 L3,19 L3,5 L21,5 L21,19 Z\\\" id=\\\"mdi:picture-in-picture-top-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/pinned-circle-small\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 C16.9705627,3 21,7.02943725 21,12 C21,16.9705627 16.9705627,21 12,21 C7.02943725,21 3,16.9705627 3,12 C3,7.02943725 7.02943725,3 12,3 Z M12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 Z M14,6.5 L17.5,9.5 L16.5,10.5 L16,10 L14.25,13.25 L15.25,14.75 L14,16 L11.5,13.5 L8.75,16.25 L7.75,16.25 L7.75,15.25 L10.5,12.5 L8,10 L9.25,8.75 L10.75,9.75 L13.5,8 L13,7.5 L14,6.5 Z\\\" id=\\\"xabber:pinned-small\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/pinned\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5228475,2 22,6.4771525 22,12 C22,17.5228475 17.5228475,22 12,22 C6.4771525,22 2,17.5228475 2,12 C2,6.4771525 6.4771525,2 12,2 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M14.5,6 L18,9.5 L17,10.5 L16.5,10 L14.5,13 L15.5,14.5 L14,16 L11.5,13.5 L8.5,16.5 L7.5,16.5 L7.5,15.5 L10.5,12.5 L8,10 L9.5,8.5 L11,9.5 L14,7.5 L13.5,7 L14.5,6 Z\\\" id=\\\"xabber:pinned\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/play\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:play\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"8 5 8 19 19 12\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-float\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,3 L13,5 L3,5 L3,19 L20,19 L20,11 L22,11 L22,19 C22,20.1045695 21.1045695,21 20,21 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L13,3 Z M13,9 L13,15 L11.5,15 L11.5,11.5 L6.5,16.5 L5.5,15.5 L10.5,10.5 L7,10.5 L7,9 L13,9 Z M22,2 C23.1045695,2 24,2.8954305 24,4 L24,7 C24,8.1045695 23.1045695,9 22,9 L17,9 C15.8954305,9 15,8.1045695 15,7 L15,4 C15,2.8954305 15.8954305,2 17,2 L22,2 Z\\\" id=\\\"xabber:player-float\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-full\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14.8101336,2.99941507 C14.2575941,3.5750451 13.8100058,4.25218587 13.4981326,5.00007375 L3,5 L3,19 L20,19 L20.000332,13.9810299 C20.7043777,13.9274362 21.3770687,13.7616821 22.000576,13.5015964 L22,19 C22,20.1045695 21.1045695,21 20,21 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L14.8101336,2.99941507 Z M12,10 C13.1045695,10 14,10.8954305 14,12 L14,15 C14,16.1045695 13.1045695,17 12,17 L7,17 C5.8954305,17 5,16.1045695 5,15 L5,12 C5,10.8954305 5.8954305,10 7,10 L12,10 Z M22,4 L23,5 L18.5,9.5 L22,9.5 L22,11 L16,11 L16,5 L17.5,5 L17.5,8.5 L22,4 Z\\\" id=\\\"xabber:picture-in-picture-full\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-mini-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19.5,4.5 C19.5,5.32842712 18.8284271,6 18,6 L6,6 C5.17157288,6 4.5,5.32842712 4.5,4.5 C4.5,3.67157288 5.17157288,3 6,3 L18,3 C18.8284271,3 19.5,3.67157288 19.5,4.5 Z\\\" id=\\\"xabber:player-mini-variant\\\" fill=\\\"#000000\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-mini\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,8 L17,9.5 L13.5,9.5 L18,14 L17,15 L12.5,10.5 L12.5,14 L11,14 L11,8 L17,8 Z M19.5,4.5 C19.5,5.32842712 18.8284271,6 18,6 L6,6 C5.17157288,6 4.5,5.32842712 4.5,4.5 C4.5,3.67157288 5.17157288,3 6,3 L18,3 C18.8284271,3 19.5,3.67157288 19.5,4.5 Z\\\" id=\\\"xabber:player-mini\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/plus\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:plus\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 12.998 13 12.998 13 18.998 11 18.998 11 12.998 5 12.998 5 10.998 11 10.998 11 4.998 13 4.998 13 10.998 19 10.998\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <symbol id=\\\"plyr-airplay\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16 1H2a1 1 0 00-1 1v10a1 1 0 001 1h3v-2H3V3h12v8h-2v2h3a1 1 0 001-1V2a1 1 0 00-1-1z\\\"></path><path d=\\\"M4 17h10l-5-6z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-captions-off\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h4.6l2.7 2.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3l2.7-2.7H17c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1H1zm4.52 10.15c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41C8.47 4.96 7.46 3.76 5.5 3.76c-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69zm7.57 0c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41c-.28-1.15-1.29-2.35-3.25-2.35-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69z\\\" fill-rule=\\\"evenodd\\\" fill-opacity=\\\".5\\\"></path></symbol>\\n    <symbol id=\\\"plyr-captions-on\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h4.6l2.7 2.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3l2.7-2.7H17c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1H1zm4.52 10.15c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41C8.47 4.96 7.46 3.76 5.5 3.76c-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69zm7.57 0c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41c-.28-1.15-1.29-2.35-3.25-2.35-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69z\\\" fill-rule=\\\"evenodd\\\"></path></symbol>\\n    <symbol id=\\\"plyr-download\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M9 13c.3 0 .5-.1.7-.3L15.4 7 14 5.6l-4 4V1H8v8.6l-4-4L2.6 7l5.7 5.7c.2.2.4.3.7.3zm-7 2h14v2H2z\\\"></path></symbol><symbol id=\\\"plyr-enter-fullscreen\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M10 3h3.6l-4 4L11 8.4l4-4V8h2V1h-7zM7 9.6l-4 4V10H1v7h7v-2H4.4l4-4z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-exit-fullscreen\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 12h3.6l-4 4L2 17.4l4-4V17h2v-7H1zM16 .6l-4 4V1h-2v7h7V6h-3.6l4-4z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-fast-forward\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M7.875 7.171L0 1v16l7.875-6.171V17L18 9 7.875 1z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-logo-vimeo\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M17 5.3c-.1 1.6-1.2 3.7-3.3 6.4-2.2 2.8-4 4.2-5.5 4.2-.9 0-1.7-.9-2.4-2.6C5 10.9 4.4 6 3 6c-.1 0-.5.3-1.2.8l-.8-1c.8-.7 3.5-3.4 4.7-3.5 1.2-.1 2 .7 2.3 2.5.3 2 .8 6.1 1.8 6.1.9 0 2.5-3.4 2.6-4 .1-.9-.3-1.9-2.3-1.1.8-2.6 2.3-3.8 4.5-3.8 1.7.1 2.5 1.2 2.4 3.3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-logo-youtube\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16.8 5.8c-.2-1.3-.8-2.2-2.2-2.4C12.4 3 9 3 9 3s-3.4 0-5.6.4C2 3.6 1.3 4.5 1.2 5.8 1 7.1 1 9 1 9s0 1.9.2 3.2c.2 1.3.8 2.2 2.2 2.4C5.6 15 9 15 9 15s3.4 0 5.6-.4c1.4-.3 2-1.1 2.2-2.4.2-1.3.2-3.2.2-3.2s0-1.9-.2-3.2zM7 12V6l5 3-5 3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-muted\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M12.4 12.5l2.1-2.1 2.1 2.1 1.4-1.4L15.9 9 18 6.9l-1.4-1.4-2.1 2.1-2.1-2.1L11 6.9 13.1 9 11 11.1zM3.786 6.008H.714C.286 6.008 0 6.31 0 6.76v4.512c0 .452.286.752.714.752h3.072l4.071 3.858c.5.3 1.143 0 1.143-.602V2.752c0-.601-.643-.977-1.143-.601L3.786 6.008z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-pause\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M6 1H3c-.6 0-1 .4-1 1v14c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1zm6 0c-.6 0-1 .4-1 1v14c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1h-3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-pip\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M13.293 3.293L7.022 9.564l1.414 1.414 6.271-6.271L17 7V1h-6z\\\"></path><path d=\\\"M13 15H3V5h5V3H2a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1v-6h-2v5z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-play\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M15.562 8.1L3.87.225c-.818-.562-1.87 0-1.87.9v15.75c0 .9 1.052 1.462 1.87.9L15.563 9.9c.584-.45.584-1.35 0-1.8z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-restart\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M9.7 1.2l.7 6.4 2.1-2.1c1.9 1.9 1.9 5.1 0 7-.9 1-2.2 1.5-3.5 1.5-1.3 0-2.6-.5-3.5-1.5-1.9-1.9-1.9-5.1 0-7 .6-.6 1.4-1.1 2.3-1.3l-.6-1.9C6 2.6 4.9 3.2 4 4.1 1.3 6.8 1.3 11.2 4 14c1.3 1.3 3.1 2 4.9 2 1.9 0 3.6-.7 4.9-2 2.7-2.7 2.7-7.1 0-9.9L16 1.9l-6.3-.7z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-rewind\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M10.125 1L0 9l10.125 8v-6.171L18 17V1l-7.875 6.171z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-settings\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16.135 7.784a2 2 0 01-1.23-2.969c.322-.536.225-.998-.094-1.316l-.31-.31c-.318-.318-.78-.415-1.316-.094a2 2 0 01-2.969-1.23C10.065 1.258 9.669 1 9.219 1h-.438c-.45 0-.845.258-.997.865a2 2 0 01-2.969 1.23c-.536-.322-.999-.225-1.317.093l-.31.31c-.318.318-.415.781-.093 1.317a2 2 0 01-1.23 2.969C1.26 7.935 1 8.33 1 8.781v.438c0 .45.258.845.865.997a2 2 0 011.23 2.969c-.322.536-.225.998.094 1.316l.31.31c.319.319.782.415 1.316.094a2 2 0 012.969 1.23c.151.607.547.865.997.865h.438c.45 0 .845-.258.997-.865a2 2 0 012.969-1.23c.535.321.997.225 1.316-.094l.31-.31c.318-.318.415-.781.094-1.316a2 2 0 011.23-2.969c.607-.151.865-.547.865-.997v-.438c0-.451-.26-.846-.865-.997zM9 12a3 3 0 110-6 3 3 0 010 6z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-volume\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M15.6 3.3c-.4-.4-1-.4-1.4 0-.4.4-.4 1 0 1.4C15.4 5.9 16 7.4 16 9c0 1.6-.6 3.1-1.8 4.3-.4.4-.4 1 0 1.4.2.2.5.3.7.3.3 0 .5-.1.7-.3C17.1 13.2 18 11.2 18 9s-.9-4.2-2.4-5.7z\\\"></path><path d=\\\"M11.282 5.282a.909.909 0 000 1.316c.735.735.995 1.458.995 2.402 0 .936-.425 1.917-.995 2.487a.909.909 0 000 1.316c.145.145.636.262 1.018.156a.725.725 0 00.298-.156C13.773 11.733 14.13 10.16 14.13 9c0-.17-.002-.34-.011-.51-.053-.992-.319-2.005-1.522-3.208a.909.909 0 00-1.316 0zm-7.496.726H.714C.286 6.008 0 6.31 0 6.76v4.512c0 .452.286.752.714.752h3.072l4.071 3.858c.5.3 1.143 0 1.143-.602V2.752c0-.601-.643-.977-1.143-.601L3.786 6.008z\\\"></path></symbol>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/qrcode\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3,11 L5,11 L5,13 L3,13 L3,11 M11,5 L13,5 L13,9 L11,9 L11,5 M9,11 L13,11 L13,15 L11,15 L11,13 L9,13 L9,11 M15,11 L17,11 L17,13 L19,13 L19,11 L21,11 L21,13 L19,13 L19,15 L21,15 L21,19 L19,19 L19,21 L17,21 L17,19 L13,19 L13,21 L11,21 L11,17 L15,17 L15,15 L17,15 L17,13 L15,13 L15,11 M19,19 L19,15 L17,15 L17,19 L19,19 M15,3 L21,3 L21,9 L15,9 L15,3 M17,5 L17,7 L19,7 L19,5 L17,5 M3,3 L9,3 L9,9 L3,9 L3,3 M5,5 L5,7 L7,7 L7,5 L5,5 M3,15 L9,15 L9,21 L3,21 L3,15 M5,17 L5,19 L7,19 L7,17 L5,17 Z\\\" id=\\\"mdi:qrcode\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/restrictions-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18.5,8 C18.33,8 18.16,8 18,8.05 L18,4.5 C18,3.11928813 16.8807119,2 15.5,2 C15.31,2 15.13,2 14.96,2.06 C14.7461874,0.868716938 13.7103179,0.0012815407 12.5,0 C11.44,0 10.54,0.66 10.17,1.59 C9.41693202,1.38051444 8.60922719,1.53531349 7.98697307,2.00838366 C7.36471894,2.48145383 6.99954575,3.21833807 7,4 L7,4.55 C6.84,4.5 6.67,4.5 6.5,4.5 C5.11928813,4.5 4,5.61928813 4,7 L4,15.5 C4,20.19 7.81,24 12.5,24 C17.19,24 21,20.19 21,15.5 L21,10.5 C21,9.11928813 19.8807119,8 18.5,8 M19,15.5 C19,19.0898509 16.0898509,22 12.5,22 C8.91014913,22 6,19.0898509 6,15.5 L6,7 C6,6.72 6.22,6.5 6.5,6.5 C6.78,6.5 7,6.72 7,7 L7,12 L9,12 L9,4 C9,3.72 9.22,3.5 9.5,3.5 C9.78,3.5 10,3.72 10,4 L10,11 L12,11 L12,2.5 C12,2.22 12.22,2 12.5,2 C12.78,2 13,2.22 13,2.5 L13,11 L15,11 L15,4.5 C15,4.22 15.22,4 15.5,4 C15.78,4 16,4.22 16,4.5 L16,13.42 C14.23,14.19 13,15.95 13,18 L15,18 C15,16.34 16.34,15 18,15 L18,10.5 C18,10.22 18.22,10 18.5,10 C18.78,10 19,10.22 19,10.5 L19,15.5 Z\\\" id=\\\"mdi:hand-front-right-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/rss-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M5,10 C5.55228475,10 6,10.4477153 6,11 C6,11.5412844 5.55045872,12 5,12 C4.4587156,12 4,11.5412844 4,11 C4,10.4477153 4.44771525,10 5,10 M4,4 C8.418278,4 12,7.581722 12,12 L10.5449871,12 C10.5449871,8.38530341 7.61469659,5.45501285 4,5.45501285 L4,4 M4,7 C6.76142375,7 9,9.23857625 9,12 L7.57070707,12 C7.57070707,11.0529896 7.19450866,10.1447663 6.52487118,9.47512882 C5.85523371,8.80549134 4.9470104,8.42929293 4,8.42929293 L4,7 Z\\\" id=\\\"rss-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/rss\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M4.75,10 C5.44035594,10 6,10.5596441 6,11.25 C6,11.9403559 5.44035594,12.5 4.75,12.5 C4.05964406,12.5 3.5,11.9403559 3.5,11.25 C3.5,10.5596441 4.05964406,10 4.75,10 Z M5.11116669,7.54639605 C6.82660407,7.80940186 8.1830606,9.16218778 8.45158391,10.8758014 L7.23152342,11.1795044 C7.08441894,9.91212418 6.07561709,8.9075227 4.80628203,8.7668642 L5.11116669,7.54639605 Z M5.72009926,5.11432766 C8.32885675,5.60976503 10.3855062,7.6642481 10.8841422,10.2718714 L9.66858256,10.5739265 C9.28406621,8.41337145 7.57799724,6.7100586 5.41602734,6.32963962 L5.72009926,5.11432766 Z M6.32787101,2.68573625 C9.83044069,3.40831848 12.5892971,6.16611302 13.3134345,9.66811414 L12.0989255,9.96960741 C11.4871421,6.91510726 9.07973668,4.50930363 6.02438684,3.89987406 L6.32787101,2.68573625 Z\\\" id=\\\"Channel-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/saved-messages\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17.1666667,1 C17.9487847,1 18.6165365,1.26855469 19.1699219,1.80566406 C19.7233073,2.34277344 20,2.99088542 20,3.75 L20,21.625 C20,21.9973958 19.8634983,22.3196615 19.5904948,22.5917969 C19.3174913,22.8639323 18.9817708,23 18.5833333,23 L12,18.1875 L5.41666667,23 C5.01822917,23 4.68250868,22.8639323 4.40950521,22.5917969 C4.13650174,22.3196615 4,21.9973958 4,21.625 L4,3.75 C4,2.99088542 4.27669271,2.34277344 4.83007812,1.80566406 C5.38346354,1.26855469 6.05121528,1 6.83333333,1 L17.1666667,1 Z M12.0016667,4.4375 L10.2972396,8.1328125 L6.335,8.6484375 L9.256875,11.4199219 L8.50427083,15.4375 L12.0016667,13.4609375 L15.4990625,15.4375 L14.7464583,11.4199219 L17.6683333,8.6484375 L13.7060938,8.1328125 L12.0016667,4.4375 Z\\\" id=\\\"xabber:saved-messages\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <defs>\\n        <path d=\\\"M15.5,14 L14.71,14 L14.43,13.73 C15.41,12.59 16,11.11 16,9.5 C16,5.91 13.09,3 9.5,3 C5.91,3 3,5.91 3,9.5 C3,13.09 5.91,16 9.5,16 C11.11,16 12.59,15.41 13.73,14.43 L14,14.71 L14,15.5 L19,20.49 L20.49,19 L15.5,14 Z M9.5,14 C7.01,14 5,11.99 5,9.5 C5,7.01 7.01,5 9.5,5 C11.99,5 14,7.01 14,9.5 C14,11.99 11.99,14 9.5,14 Z\\\" id=\\\"path-1\\\"></path>\\n    </defs>\\n    <g id=\\\"icon/material/search\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <mask id=\\\"mask-2\\\" fill=\\\"white\\\">\\n            <use xlink:href=\\\"#path-1\\\"></use>\\n        </mask>\\n        <use id=\\\"mdi:search\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" xlink:href=\\\"#path-1\\\"></use>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/security\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,12 L19,12 C18.47,16.11 15.72,19.78 12,20.92 L12,12 L5,12 L5,6.3 L12,3.19 M12,1 L3,5 L3,11 C3,16.55 6.84,21.73 12,23 C17.16,21.73 21,16.55 21,11 L21,5 L12,1 Z\\\" id=\\\"mdi:security\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/server\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10.1428571,13 L5.85714286,13 C5.38571429,13 5,12.625 5,12.1666667 L5,3.83333333 C5,3.375 5.38571429,3 5.85714286,3 L10.1428571,3 C10.6142857,3 11,3.375 11,3.83333333 L11,12.1666667 C11,12.625 10.6142857,13 10.1428571,13 Z M10,5 L6,5 L6,6 L10,6 L10,5 Z M10,7 L6,7 L6,8 L10,8 L10,7 Z M10,11 L9,11 L9,12 L10,12 L10,11 Z\\\" id=\\\"Server\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/star-face\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2.5 L8.42,8.06 L2,9.74 L6.2,14.88 L5.82,21.5 L12,19.09 L18.18,21.5 L17.8,14.88 L22,9.74 L15.58,8.06 L12,2.5 M9.38,10.5 C10,10.5 10.5,11 10.5,11.63 C10.5,11.9270425 10.3820003,12.2119189 10.1719596,12.4219596 C9.96191885,12.6320003 9.67704247,12.75 9.38,12.75 C8.75,12.75 8.25,12.25 8.25,11.63 C8.25,11 8.75,10.5 9.38,10.5 M14.63,10.5 C15.25,10.5 15.75,11 15.75,11.63 C15.75,12.2485589 15.2485589,12.75 14.63,12.75 C14,12.75 13.5,12.25 13.5,11.63 C13.5,11 14,10.5 14.63,10.5 M9,15 L15,15 C14.4960889,16.2119097 13.3124982,17.0016023 12,17.0016023 C10.6875018,17.0016023 9.50391113,16.2119097 9,15 L9,15 Z\\\" id=\\\"mdi:star-face\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/status-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M16.06,2.2 L17.74,6.26 L21.8,7.94 L20.12,12 L21.8,16.06 L17.74,17.74 L16.06,21.8 L12,20.12 L7.94,21.8 L6.26,17.74 L2.2,16.06 L3.88,12 L2.2,7.94 L6.26,6.26 L7.94,2.2 L12,3.88 L16.06,2.2 Z M15,4.81 L12,6.05 L9,4.81 L7.79,7.79 L4.81,9 L6.05,12 L4.81,15 L7.79,16.21 L9,19.19 L12,17.95 L15,19.19 L16.21,16.21 L19.19,15 L17.95,12 L19.19,9 L16.21,7.79 L15,4.81 Z M13.5,7 L12,11 L15,11 L11.5,17 L10.5,17 L12,13 L9,13 L12.5,7 L13.5,7 Z\\\" id=\\\"xabber:status-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/status\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M16.06,2.2 L17.74,6.26 L21.8,7.94 L20.12,12 L21.8,16.06 L17.74,17.74 L16.06,21.8 L12,20.12 L7.94,21.8 L6.26,17.74 L2.2,16.06 L3.88,12 L2.2,7.94 L6.26,6.26 L7.94,2.2 L12,3.88 L16.06,2.2 Z M13.5,7 L12.5,7 L9,13 L12,13 L10.5,17 L11.5,17 L15,11 L12,11 L13.5,7 Z\\\" id=\\\"xabber:status\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/subscription-from\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,8 C17.3137085,8 20,10.6862915 20,14 C20,17.3137085 17.3137085,20 14,20 C10.6862915,20 8,17.3137085 8,14 C8,13.462632 8.07064283,12.9417636 8.20314833,12.4461748 L9.67168223,13.9143229 C9.77459988,14.0172246 9.8859413,14.1065666 10.0034864,14.1823489 L10.0048953,14.1996403 C10.1089211,16.3160315 11.8578046,18 14,18 C16.209139,18 18,16.209139 18,14 C18,11.851413 16.3059677,10.0984884 14.180685,10.0040081 C14.1065666,9.8859413 14.0172246,9.77459988 13.9143229,9.67168223 L12.4461748,8.20314833 C12.9417636,8.07064283 13.462632,8 14,8 Z M11,4 L11,6 L7.415,6 L12.5,11.0857864 L11.0857864,12.5 L6,7.415 L6,11 L4,11 L4,4 L11,4 Z\\\" id=\\\"xabber:subscribe-from\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/subscription-to\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.9994979,8.00000002 C17.3137085,8.00000002 20,10.6862915 20,14 C20,17.3137085 17.3137085,20 14,20 C10.7616031,20 8.12242824,17.4344251 8.00413847,14.2249383 L8,13.999 L10,14 L10,14 C10,16.209139 11.790861,18 14,18 C16.209139,18 18,16.209139 18,14 C18,11.8578046 16.3160315,10.1089211 14.1996403,10.0048953 L13.999,10 L13.9994979,8.00000002 Z M4.91421356,3.5 L10,8.585 L10,5 L12,5 L12,12 L5,12 L5,10 L8.585,10 L3.5,4.91421356 L4.91421356,3.5 Z\\\" id=\\\"xabber:subscribe-to\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/circle/task\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <circle id=\\\"Circle\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" cx=\\\"8\\\" cy=\\\"8\\\" r=\\\"7\\\"></circle>\\n        <g id=\\\"icon16/bot-variant\\\">\\n            <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n            <polygon id=\\\"Path\\\" fill=\\\"#FFFFFF\\\" fill-rule=\\\"nonzero\\\" points=\\\"7 12.5 2.75 8.25 4 7 7 10 12 5 13.25 6.25\\\"></polygon>\\n        </g>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/translate\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12.87,15.07 L10.33,12.56 L10.36,12.53 C12.0541502,10.6471017 13.3198948,8.41925464 14.07,6 L17,6 L17,4 L10,4 L10,2 L8,2 L8,4 L1,4 L1,6 L12.17,6 C11.5,7.92 10.44,9.75 9,11.35 C8.07,10.32 7.3,9.19 6.69,8 L4.69,8 C5.42,9.63 6.42,11.17 7.67,12.56 L2.58,17.58 L4,19 L9,14 L12.11,17.11 L12.87,15.07 M18.5,10 L16.5,10 L12,22 L14,22 L15.12,19 L19.87,19 L21,22 L23,22 L18.5,10 M15.88,17 L17.5,12.67 L19.12,17 L15.88,17 L15.88,17 Z\\\" id=\\\"mdi:translate\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/trash\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,4 L15.5,4 L14.5,3 L9.5,3 L8.5,4 L5,4 L5,6 L19,6 M6,19 C6,20.1045695 6.8954305,21 8,21 L16,21 C17.1045695,21 18,20.1045695 18,19 L18,7 L6,7 L6,19 Z\\\" id=\\\"mdi:trash\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/video\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,10.5 L17,7 C17,6.44771525 16.5522847,6 16,6 L4,6 C3.44771525,6 3,6.44771525 3,7 L3,17 C3,17.5522847 3.44771525,18 4,18 L16,18 C16.5522847,18 17,17.5522847 17,17 L17,13.5 L21,17.5 L21,6.5 L17,10.5 Z\\\" id=\\\"mdi:video\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/volume-high\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,3.23 L14,5.29 C16.89,6.15 19,8.83 19,12 C19,15.17 16.89,17.84 14,18.7 L14,20.77 C18,19.86 21,16.28 21,12 C21,7.72 18,4.14 14,3.23 M16.5,12 C16.5,10.23 15.5,8.71 14,7.97 L14,16 C15.5,15.29 16.5,13.76 16.5,12 M3,9 L3,15 L7,15 L12,20 L12,4 L7,9 L3,9 Z\\\" id=\\\"mdi:volume-high\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Mobile-Portrait\\\" transform=\\\"translate(-41.000000, -4.000000)\\\">\\n        <g id=\\\"volume-off-variant\\\" transform=\\\"translate(34.000000, 0.000000)\\\">\\n            <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n            <polygon id=\\\"Path-2\\\" points=\\\"7 9 7 15 11 15 16 20 16 16.5 8.5 9\\\"></polygon>\\n            <polygon id=\\\"Path-3\\\" points=\\\"7 6 18.5 17.5 19.5 16.5 16 13 16 4 11.5 8.5 8 5\\\"></polygon>\\n        </g>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/volume-off\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,4 L9.91,6.09 L12,8.18 M4.27,3 L3,4.27 L7.73,9 L3,9 L3,15 L7,15 L12,20 L12,13.27 L16.25,17.53 C15.58,18.04 14.83,18.46 14,18.7 L14,20.77 C15.38,20.45 16.63,19.82 17.68,18.96 L19.73,21 L21,19.73 L12,10.73 M19,12 C19,12.94 18.8,13.82 18.46,14.64 L19.97,16.15 C20.62,14.91 21,13.5 21,12 C21,7.72 18,4.14 14,3.23 L14,5.29 C16.89,6.15 19,8.83 19,12 M16.5,12 C16.5,10.23 15.5,8.71 14,7.97 L14,10.18 L16.45,12.63 C16.5,12.43 16.5,12.21 16.5,12 Z\\\" id=\\\"mdi:volume-off\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/web-cancel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.82,14 L9.66,14 C9.56,13.34 9.5,12.68 9.5,12 C9.5,11.32 9.56,10.65 9.66,10 L14.34,10 C14.43,10.65 14.5,11.32 14.5,12 C14.5,12.5 14.46,13 14.4,13.46 C15,12.96 15.72,12.57 16.5,12.32 L16.5,12 C16.5,11.32 16.44,10.66 16.36,10 L19.74,10 C19.9,10.64 20,11.31 20,12 L20,12.18 C20.7,12.35 21.35,12.63 21.95,13 C22,12.68 22,12.34 22,12 C22,6.5 17.5,2 12,2 C6.47,2 2,6.5 2,12 C2,17.5 6.5,22 12,22 C12.34,22 12.68,22 13,21.95 C12.59,21.29 12.29,20.55 12.13,19.75 C12.09,19.82 12.05,19.89 12,19.96 C11.17,18.76 10.5,17.43 10.09,16 L12.5,16 C12.81,15.25 13.26,14.58 13.82,14 M18.92,8 L15.97,8 C15.6570216,6.76145777 15.1935734,5.56589587 14.59,4.44 C16.43,5.07 17.96,6.34 18.92,8 M12,4.03 C12.83,5.23 13.5,6.57 13.91,8 L10.09,8 C10.5,6.57 11.17,5.23 12,4.03 M4.26,14 C4.1,13.36 4,12.69 4,12 C4,11.31 4.1,10.64 4.26,10 L7.64,10 C7.56,10.66 7.5,11.32 7.5,12 C7.5,12.68 7.56,13.34 7.64,14 L4.26,14 M5.08,16 L8,16 C8.35,17.25 8.8,18.45 9.4,19.56 C7.57862399,18.9316655 6.0448462,17.667719 5.08,16 M8,8 L5.08,8 C6.03885577,6.32721463 7.57479586,5.06148622 9.4,4.44 C8.8,5.55 8.35,6.75 8,8 M18.5,14 C16,14 14,16 14,18.5 C14,21 16,23 18.5,23 C21,23 23,21 23,18.5 C23,16 21,14 18.5,14 M18.5,21.5 C16.84,21.5 15.5,20.16 15.5,18.5 C15.5,17.94 15.65,17.42 15.92,17 L20,21.08 C19.58,21.35 19.06,21.5 18.5,21.5 M21.08,20 L17,15.92 C17.42,15.65 17.94,15.5 18.5,15.5 C20.16,15.5 21.5,16.84 21.5,18.5 C21.5,19.06 21.35,19.58 21.08,20 Z\\\" id=\\\"mdi:web-cancel\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/web\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M16.36,14 C16.44,13.34 16.5,12.68 16.5,12 C16.5,11.32 16.44,10.66 16.36,10 L19.74,10 C19.9,10.64 20,11.31 20,12 C20,12.69 19.9,13.36 19.74,14 M14.59,19.56 C15.19,18.45 15.65,17.25 15.97,16 L18.92,16 C17.96,17.65 16.43,18.93 14.59,19.56 M14.34,14 L9.66,14 C9.56,13.34 9.5,12.68 9.5,12 C9.5,11.32 9.56,10.65 9.66,10 L14.34,10 C14.43,10.65 14.5,11.32 14.5,12 C14.5,12.68 14.43,13.34 14.34,14 M12,19.96 C11.17,18.76 10.5,17.43 10.09,16 L13.91,16 C13.5,17.43 12.83,18.76 12,19.96 M8,8 L5.08,8 C6.03,6.34 7.57,5.06 9.4,4.44 C8.8,5.55 8.35,6.75 8,8 M5.08,16 L8,16 C8.35,17.25 8.8,18.45 9.4,19.56 C7.57,18.93 6.03,17.65 5.08,16 M4.26,14 C4.1,13.36 4,12.69 4,12 C4,11.31 4.1,10.64 4.26,10 L7.64,10 C7.56,10.66 7.5,11.32 7.5,12 C7.5,12.68 7.56,13.34 7.64,14 M12,4.03 C12.83,5.23 13.5,6.57 13.91,8 L10.09,8 C10.5,6.57 11.17,5.23 12,4.03 M18.92,8 L15.97,8 C15.65,6.75 15.19,5.55 14.59,4.44 C16.43,5.07 17.96,6.34 18.92,8 M12,2 C6.47,2 2,6.5 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,9.3478351 20.9464316,6.80429597 19.0710678,4.92893219 C17.195704,3.0535684 14.6521649,2 12,2 Z\\\" id=\\\"mdi:web\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Xabber-Offline\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M13.4146471,22.5 L14.009222,22.5 C14.5490248,22.5 15,22.0522847 15,21.5 C15,20.9438648 14.5564136,20.5 14.009222,20.5 L9.99077797,20.5 C9.45097518,20.5 9,20.9477153 9,21.5 C9,22.0561352 9.44358641,22.5 9.99077797,22.5 L10.5853529,22.5 C10.7912711,23.0825962 11.3468906,23.5 12,23.5 C12.6531094,23.5 13.2087289,23.0825962 13.4146471,22.5 Z\\\" id=\\\"Base\\\"></path>\\n        <rect id=\\\"Middle-base\\\" x=\\\"8\\\" y=\\\"17.75\\\" width=\\\"8\\\" height=\\\"2\\\" rx=\\\"1\\\"></rect>\\n        <path d=\\\"M17.5099945,14.8015103 L17.5099945,14.8015103 C17.1966102,15.1049344 17.0013821,15.5296633 17,16 C17,16.5522847 16.5443356,17 16.0046024,17 L7.99539757,17 C7.44565467,17 7,16.5561352 6.99998649,16 C6.99861167,15.5296664 6.80338616,15.10494 6.49000549,14.8015163 L6.49000549,14.8000192 C4.95622884,13.3424727 4,11.282906 4,9 C4,4.581722 7.581722,1 12,1 C16.418278,1 20,4.581722 20,9 C20,11.282906 19.0437712,13.3424727 17.5099945,14.8000192 L17.5099945,14.8015103 Z M8.86088543,15 L15.1391084,15 C15.3021338,14.4253123 15.6014858,13.895093 16,13.472213 C17.2274987,12.3735719 18,10.7769996 18,9 C18,5.6862915 15.3137085,3 12,3 C8.6862915,3 6,5.6862915 6,9 C6,10.7769996 6.77250128,12.3735719 8,13.472213 C8.39851111,13.8950917 8.69786083,14.4253152 8.86088543,15 Z\\\" id=\\\"Bulb-shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Xabber-Online\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M13.4146471,22.5 L14.009222,22.5 C14.5490248,22.5 15,22.0522847 15,21.5 C15,20.9438648 14.5564136,20.5 14.009222,20.5 L9.99077797,20.5 C9.45097518,20.5 9,20.9477153 9,21.5 C9,22.0561352 9.44358641,22.5 9.99077797,22.5 L10.5853529,22.5 C10.7912711,23.0825962 11.3468906,23.5 12,23.5 C12.6531094,23.5 13.2087289,23.0825962 13.4146471,22.5 Z\\\" id=\\\"Base\\\"></path>\\n        <rect id=\\\"Middle-base\\\" x=\\\"8\\\" y=\\\"17.75\\\" width=\\\"8\\\" height=\\\"2\\\" rx=\\\"1\\\"></rect>\\n        <path d=\\\"M17.5099945,14.8015103 L17.5099945,14.8000192 C19.0437712,13.3424727 20,11.282906 20,9 C20,4.581722 16.418278,1 12,1 C7.581722,1 4,4.581722 4,9 C4,11.282906 4.95622884,13.3424727 6.49000549,14.8000192 L6.49000549,14.8015163 C6.80338616,15.10494 6.99861167,15.5296664 6.99998649,16 C7,16.5561352 7.44565467,17 7.99539757,17 L16.0046024,17 C16.5443356,17 17,16.5522847 17,16 C17.0013821,15.5296633 17.1966102,15.1049344 17.5099945,14.8015103 L17.5099945,14.8015103 Z\\\" id=\\\"Bulb-shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/xmpp\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,16.4 C9.75,14.09 8,10.54 8,7 C2,5 8,7 2,5 C2,10.65 6.33,15.11 10.55,17.66 C9.38,18.5 8.15,19 7,19 C7,20 7,19 7,20 C8.2,20 10.03,19.46 12,18.46 C13.97,19.46 15.8,20 17,20 C17,19 17,20 17,19 C15.85,19 14.62,18.5 13.45,17.66 C17.66,15.11 22,10.65 22,5 C16,7 22,5 16,7 C16,10.54 14.25,14.09 12,16.4 Z\\\" id=\\\"mdi:xmpp\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <div class=\\\"btn-vcard-refresh\\\">\\n        <div class=\\\"button\\\">\\n            <i class=\\\"mdi mdi-20px mdi-refresh\\\"></i>\\n        </div>\\n        <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"vcard-wrap\\\">\\n    <div class=\\\"info-wrap jid-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg></div>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap personal-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"info first-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info middle-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_middle_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info last-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info fullname\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_full_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap nickname-info-wrap hidden\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info nickname\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap birthday-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n        <div class=\\\"info birthday\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap job-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n        <div class=\\\"info org-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info job-title\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_title\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info org-unit\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization_unit\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info role\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_role\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap site-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n        <div class=\\\"info url\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap phone-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-phone\\\"></i>\\n        <div class=\\\"info phone-work\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-home\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-mobile\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_mobile\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-default\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap email-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-email\\\"></i>\\n        <div class=\\\"info email-work\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info email-home\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info email-default\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap address-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-map-marker\\\"></i>\\n        <div class=\\\"info address-home\\\">\\n            <div class=\\\"pobox value one-line\\\"></div>\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info address-work\\\">\\n            <div class=\\\"pobox value one-line\\\"></div>\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info address-default\\\">\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_address\\\"))]}</div>\\n        </div>\\n    </div>\\n    <button class=\\\"btn-vcard-edit btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</button>\\n</div>\\n\";","export default \"<div class=\\\"buttons-wrap\\\">\\n    <button class=\\\"btn-vcard-save btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"vcard_edit__button_save\\\"))]}</button>\\n</div>\\n<div class=\\\"vcard-edit-wrap\\\">\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n    <div class=\\\"info-wrap personal-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field first-name\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-first-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_given_name'))]}\\\" type=\\\"text\\\" name=\\\"first_name\\\">\\n        </div>\\n        <div class=\\\"input-field middle-name\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-middle-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_middle_name'))]}\\\" type=\\\"text\\\" name=\\\"middle_name\\\">\\n        </div>\\n        <div class=\\\"input-field last-name\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-last-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_family_name'))]}\\\" type=\\\"text\\\" name=\\\"last_name\\\">\\n        </div>\\n        <div class=\\\"input-field fullname\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-fullname\\\" placeholder=\\\"{[print(xabber.getString('vcard_full_name'))]}\\\" type=\\\"text\\\" name=\\\"fullname\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n    <div class=\\\"info-wrap nickname-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field nickname\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-nickname\\\" placeholder=\\\"{[print(xabber.getString('vcard_nick_name'))]}\\\" type=\\\"text\\\" name=\\\"nickname\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n    <div class=\\\"info-wrap birthday-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field birthday\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-birthday\\\" placeholder=\\\"{[print(xabber.getString('vcard_birth_date_placeholder'))]}\\\" type=\\\"text\\\" class=\\\"datepicker\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_job\\\"))]}</div>\\n    <div class=\\\"info-wrap job-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field org-name\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-org-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_organization'))]}\\\" type=\\\"text\\\" name=\\\"org_name\\\">\\n        </div>\\n        <div class=\\\"input-field job-title\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-job-title\\\" placeholder=\\\"{[print(xabber.getString('vcard_title'))]}\\\" type=\\\"text\\\" name=\\\"job_title\\\">\\n        </div>\\n        <div class=\\\"input-field org-unit\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-org-unit\\\" placeholder=\\\"{[print(xabber.getString('vcard_organization_unit'))]}\\\" type=\\\"text\\\" name=\\\"org_unit\\\">\\n        </div>\\n        <div class=\\\"input-field role\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-role\\\" placeholder=\\\"{[print(xabber.getString('vcard_role'))]}\\\" type=\\\"text\\\" name=\\\"role\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n    <div class=\\\"info-wrap site-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"web\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field url\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-url\\\" placeholder=\\\"{[print(xabber.getString('vcard_url_placeholder'))]}\\\" type=\\\"text\\\" name=\\\"url\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field description\\\">\\n            <textarea id=\\\"{{view.cid}}-description\\\" placeholder=\\\"{[print(xabber.getString('vcard_decsription_placeholder'))]}\\\" type=\\\"text\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"text-field textarea-glow input-glow account-glow\\\" name=\\\"description\\\"></textarea>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n    <div class=\\\"info-wrap phone-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field phone-work\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-phone-work\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_work'))]}\\\" type=\\\"text\\\" name=\\\"phone_work\\\">\\n        </div>\\n        <div class=\\\"input-field phone-home\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-phone-home\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_home'))]}\\\" type=\\\"text\\\" name=\\\"phone_home\\\">\\n        </div>\\n        <div class=\\\"input-field phone-mobile\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-phone-mobile\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_mobile'))]}\\\" type=\\\"text\\\" name=\\\"phone_mobile\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n    <div class=\\\"info-wrap email-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"email\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field email-work\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-email-work\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_work'))]}\\\" type=\\\"text\\\" name=\\\"email_work\\\">\\n        </div>\\n        <div class=\\\"input-field email-home\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-email-home\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_personal'))]}\\\" type=\\\"text\\\" name=\\\"email_home\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_home_address\\\"))]}</div>\\n    <div class=\\\"info-wrap address-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"address\\\"></svg>\\n        </div>\\n        <div class=\\\"input-wrap address-wrap address-home-wrap\\\">\\n            <div class=\\\"input-field pobox\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-po-home-box\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pobox'))]}\\\" type=\\\"text\\\" name=\\\"po_home_box\\\">\\n            </div>\\n            <div class=\\\"input-field extadd\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-extadd\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_extadr'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_extadd\\\">\\n            </div>\\n            <div class=\\\"input-field street\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-street\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_street'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_street\\\">\\n            </div>\\n            <div class=\\\"input-field locality\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-locality\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_locality'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_locality\\\">\\n            </div>\\n            <div class=\\\"input-field region\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-region\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_region'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_region\\\">\\n            </div>\\n            <div class=\\\"input-field pcode\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-pcode\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pcode'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_pcode\\\">\\n            </div>\\n            <div class=\\\"input-field country\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-country\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_ctry'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_country\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_work_address\\\"))]}</div>\\n    <div class=\\\"info-wrap address-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"address\\\"></svg>\\n        </div>\\n        <div class=\\\"input-wrap address-wrap address-work-wrap\\\">\\n            <div class=\\\"input-field pobox\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-po-work-box\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pobox'))]}\\\" type=\\\"text\\\" name=\\\"po_work_box\\\">\\n            </div>\\n            <div class=\\\"input-field extadd\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-extadd\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_extadr'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_extadd\\\">\\n            </div>\\n            <div class=\\\"input-field street\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-street\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_street'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_street\\\">\\n            </div>\\n            <div class=\\\"input-field locality\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-locality\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_locality'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_locality\\\">\\n            </div>\\n            <div class=\\\"input-field region\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-region\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_region'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_region\\\">\\n            </div>\\n            <div class=\\\"input-field pcode\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-pcode\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pcode'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_pcode\\\">\\n            </div>\\n            <div class=\\\"input-field country\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-country\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_ctry'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_country\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"vcard-wrap\\\">\\n    <button class=\\\"btn-vcard-edit btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</button>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <div class=\\\"btn-vcard-refresh\\\">\\n        <div class=\\\"button\\\">\\n            <i class=\\\"mdi mdi-20px mdi-refresh\\\"></i>\\n        </div>\\n        <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"vcard-wrap\\\">\\n    <div class=\\\"info-wrap jid-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info jabber-id\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap nickname-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info nickname\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap personal-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info first-name\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info last-name\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap birthday-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info birthday\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap site-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info url\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap more\\\">\\n        <div class=\\\"show-vcard\\\">\\n            {[print(xabber.getString(\\\"contact_vcard_more\\\"))]}\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"full-vcard-wrap\\\">\\n    <div class=\\\"full-vcard-content\\\">\\n        <div class=\\\"vcard-header block-header\\\">\\n            <div class=\\\"vcard-header-title\\\">\\n                <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_vcard_header_title\\\"))]}</span>\\n            </div>\\n            <div class=\\\"main-info\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar\\\"></div>\\n                </div>\\n                <div class=\\\"text-info\\\">\\n                    <div class=\\\"name-wrap\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"vcard-list\\\">\\n            <div class=\\\"info-wrap jid-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info jabber-id\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap nickname-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info nickname\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap personal-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info first-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info middle-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_middle_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info last-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info fullname\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_full_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap birthday-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info birthday\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap job-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info org-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info job-title\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_title\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info org-unit\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization_unit\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info role\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_role\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap site-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info url\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap description-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info description\\\">\\n                        <div class=\\\"value\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap phone-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-work\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-home\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-mobile\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_mobile\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-default\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap email-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"email-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-work\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-home\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-default\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap address-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-home\\\">\\n                        <div class=\\\"pobox value one-line\\\"></div>\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-work\\\">\\n                        <div class=\\\"pobox value one-line\\\"></div>\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-default\\\">\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_address\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"resources-block-wrap hidden\\\">\\n                <div class=\\\"resources-wrap\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","module.exports = {\"background-images\":{\"image\":[{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0293+he.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-A0tXm8gjfMU/U08VDMRGtuI/AAAAAAAAvrI/IQEscTGZyJY/s1920-w1920-h1080-c/IMG_0293%2Bhe.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0660.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-wkrGBuk0DoA/Us9JnUoXnTI/AAAAAAAAkTA/yDQexzLKhKY/s1920-w1920-h1080-c/DSC_0660.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071227-4144-PtLomaReef.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-1xZqgaRDIec/Tg1dMJq1vBI/AAAAAAAAALc/7m0Tpv2htVc/s1920-w1920-h1080-c/071227-4144-PtLomaReef.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/976865336_a+view+of+queenstown.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-36YdSRh6q9w/TgtZEChvrkI/AAAAAAAJA0M/zVvIUAdwQ3Q/s1920-w1920-h1080-c/976865336_a%2Bview%2Bof%2Bqueenstown.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB-MarshallBeach-lightSky.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/--L7AhWZit78/TysVss3ThoI/AAAAAAAARho/n2ToQ-2Kw7g/s1920-w1920-h1080-c/GGB-MarshallBeach-lightSky.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01079+(1).png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-ePzy0PYNkjY/ToE9F9iPxKI/AAAAAAAAsWg/o7LkkqWEs2o/s1920-w1920-h1080-c/DSC01079%2B%25281%2529.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8492_HDR-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-pnosgcd6G2c/UbheNBeniVI/AAAAAAAAWp0/hSEX3IwAgyI/s1920-w1920-h1080-c/DSC_8492_HDR-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/02202012-04.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-El8tXEJMqm4/UOD9tk8_rkI/AAAAAAAAkM0/sZP34rwkVsQ/s1920-w1920-h1080-c/02202012-04.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20100530_120257_0273-Edit-2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-EpsKJMBxb6I/TBpXudG4_PI/AAAAAAABEHk/_knVZZOptTY/s1920-w1920-h1080-c/20100530_120257_0273-Edit-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Lines.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Ot1wFdQdaqw/UBSl7ewGOkI/AAAAAAAAPd4/3tUkrKTWDgM/s1920-w1920-h1080-c/Lines.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DunesEdge.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-WbNq4f1kE7Y/Tu9tVtXGCYI/AAAAAAABFWY/N9NL1MKUt4A/s1920-w1920-h1080-c/DunesEdge.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_2857.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-YPiBdTDD5Vo/UpExbztAgWI/AAAAAAAAFg8/8n5CyP4w8Ps/s1920-w1920-h1080-c/DSC_2857.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0513-edited.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-CY6T5q8rqmA/UZWyvmYhLYI/AAAAAAAAAw4/Pi0Uy3nq19I/s1920-w1920-h1080-c/DSC_0513-edited.jpeg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/stuck_04.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-fc8aRqsAEzk/U0MjlhykUtI/AAAAAAAJF1s/nRoV1Yk1z2E/s1920-w1920-h1080-c/stuck_04.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Dandelion_.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ExqBtlpobeE/T-aKZZzVcKI/AAAAAAABhl4/jrErtktlcuA/s1920-w1920-h1080-c/Dandelion_.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8670434759_91e92fd1ee_k.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-3nqLFWiEm3E/UXXCrC5RBeI/AAAAAAAANoY/8_ktEhLdCLs/s1920-w1920-h1080-c/8670434759_91e92fd1ee_k.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/2049233526_19f97ff57f_o.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-gJmej39yU_c/TgtZECWgTtI/AAAAAAAJFFY/Y0nVr5_Tchg/s1920-w1920-h1080-c/2049233526_19f97ff57f_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RodeoBeach-firespinning-2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-teMxOetSsy0/TwNDboHbM0I/AAAAAAABFao/F9yQHylkRdo/s1920-w1920-h1080-c/RodeoBeach-firespinning-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Iceland.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-rF8zodn1xAI/U_yjoZyDgcI/AAAAAAAB-38/U62D7hi4-NU/s1920-w1920-h1080-c/20140204_Iceland_0234_5_6_32bit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6887-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-KiRwrTTHEWk/UdFoWqh2bFI/AAAAAAAAXhA/6PIDVYH9nFY/s1920-w1920-h1080-c/DSC_6887-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SealRocks-sunset-beach-rock.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-6_QxmRRnJO8/TwjqsB2kshI/AAAAAAABFZw/__-irT00R2k/s1920-w1920-h1080-c/SealRocks-sunset-beach-rock.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_7112.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-HWAadtEQKQE/UtTyRxs2u4I/AAAAAAAAOhk/Y3jT0QJtdhQ/s1920-w1920-h1080-c/DSC_7112.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Invitation.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-5NKrifl_xpo/UUxwAqoj7nI/AAAAAAAAwGk/82Dkiz_sEaw/s1920-w1920-h1080-c/Invitation.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_DX_7114-Edit-Recovered.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-W5qc4LH_lpo/U_yjzHjSpzI/AAAAAAAB-7E/8MQAw4fsEJc/s1920-w1920-h1080-c/_DX_7114-Edit-Recovered.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP8993.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-sy3wa9ofb38/UQtPlF6YOQI/AAAAAAAAfXc/9uYpeM68vOc/s1920-w1920-h1080-c/IMGP8993.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/dsc_4194.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-cFySK9YoOOI/SwTDSXWTa2I/AAAAAAABNnY/1VFL3dYXkgA/s1920-w1920-h1080-c/dsc_4194.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/panthercreek_7509-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-JoKkOqJLegk/T7KQORntaBI/AAAAAAABjLg/FbmDYu5k3DY/s1920-w1920-h1080-c/panthercreek_7509-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6464.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-RYt_J-BlGJs/UmBWyVrQZII/AAAAAAAAFAA/9Y9zqjdXQeU/s1920-w1920-h1080-c/DSC_6464.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/080820-5209-MakenaLL.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-6IrulujJPwU/Tg1d_n1nptI/AAAAAAAAAMc/O4OAV6udX8Y/s1920-w1920-h1080-c/080820-5209-MakenaLL.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_5300.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-cn-CS-vxFn4/UtTvqLzjmrI/AAAAAAAAX3Y/OdfK9XhRGeE/s1920-w1920-h1080-c/DSC_5300.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/080327-4706-JoshuaTreeOasis.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-mwobIYTjtko/Tg1dd90GDjI/AAAAAAAAAL0/M_NjYSMqoG0/s1920-w1920-h1080-c/080327-4706-JoshuaTreeOasis.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/217440037_8ca190627e_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-EjnJBBcvhrU/TgtZEIVpLlI/AAAAAAAJJ5s/CQK74NolX7E/s1920-w1920-h1080-c/217440037_8ca190627e_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MSU_1184.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-lM1sKRbIu7A/T_mdon8mP-I/AAAAAAAAAwc/SJMO-kWHQLY/s1920-w1920-h1080-c/MSU_1184.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0537-Edit-Edit-Edit-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-HfCYnCbpqww/Us1HNtNz00I/AAAAAAAAkFE/UJChD7bbmm0/s1920-w1920-h1080-c/DSC_0537-Edit-Edit-Edit-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TetonShwabacher.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-gi8-azW5hAQ/UGdSQqk9G_I/AAAAAAAAJto/inIHRwOCy3c/s1920-w1920-h1080-c/TetonShwabacher.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/PVK_5178.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-zAuJ1AZC34Y/TrsJH22VV5I/AAAAAAAAEvc/EzBqDb6tQRE/s1920-w1920-h1080-c/PVK_5178.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3824+pe.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-QgFnhS9tfuI/U0tzKPZox-I/AAAAAAAAvhg/EjRaa8ETaYM/s1920-w1920-h1080-c/IMG_3824%2Bpe.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/101016-4858-GrayWhaleGran1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-gb7vG0Z6jrU/Tg1gas5e87I/AAAAAAAAAPY/4zsNQt6LotI/s1920-w1920-h1080-c/101016-4858-GrayWhaleGran1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+Queenstown+Aurora+Australis.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-F1T9flY075Y/U0Mgnwr2AJI/AAAAAAAJBJY/eeooel6-ZXY/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BQueenstown%2BAurora%2BAustralis.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_4393.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-RtJjOCkuYL8/UtTvDO3sraI/AAAAAAAAX3c/VVVtMV1yPW0/s1920-w1920-h1080-c/DSC_4393.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-road-to-paradise.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-2Lhxkz2EBz4/U0MlX7aExHI/AAAAAAAJXMc/Lh1kPpcrBi8/s1920-w1920-h1080-c/trey-ratcliff-road-to-paradise.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Sunrise+in+Sangam.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-7X44UiG6ohw/Ua2Qmj06zkI/AAAAAAAAfYA/owBHOfu6u_I/s1280-w1280-c-h720-k-no/Sunrise%2Bin%2BSangam\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061012-1109-PigeonPEve.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-r3D0LQrT3K4/Tg1bQhpX5hI/AAAAAAAAAIs/ONg4BWnADUM/s1920-w1920-h1080-c/061012-1109-PigeonPEve.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Motion.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-eYFfx8sHLZY/UBSl8KkdpRI/AAAAAAAAPeA/5sJreKxzLYc/s1920-w1920-h1080-c/Motion.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGate+Dawn+from+Slacker+Hill.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-GYfXywevB-4/UtTtugxGWlI/AAAAAAAAXpw/e5tyHYdIIK0/s1920-w1920-h1080-c/GGate%2BDawn%2Bfrom%2BSlacker%2BHill.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_7006-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-iqs_ihvxlzM/Ur0B20OjdgI/AAAAAAAAF7Y/yJ1rAuyEQjQ/s1920-w1920-h1080-c/IMG_7006-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MoraineLake.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-YNlHO0F-y_U/UoazYeYqMvI/AAAAAAAAVqg/h8tLY6Zwktw/s1920-w1920-h1080-c/MoraineLake.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/12-11-12-original.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-qdhLu3VPZU8/Uqjrkz-1dzI/AAAAAAAAYTY/Is8QaEy3rZo/s1920-w1920-h1080-c/12-11-12-original.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20090411_132734_.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-0EQ-4alz8RY/S9aXij2EEzI/AAAAAAABDQ8/SUAUmq9rm60/s1920-w1920-h1080-c/20090411_132734_.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Seattle_BrianMatiash.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-BK4o8MjAzHY/T6vkuyTuQ7I/AAAAAAAIovQ/rWAnhK0bJqQ/s1920-w1920-h1080-c/Seattle_BrianMatiash.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Infinity+of+Tokyo.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-vCWMbf5t3RI/U0MbNIFWMsI/AAAAAAAJA-w/hbek0tN8Oqk/s1920-w1920-h1080-c/The%2BInfinity%2Bof%2BTokyo.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/PatriciaLake.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-oMSn89uorIA/UktkPI4oEVI/AAAAAAAAVqo/d_0ZasIPfnc/s1920-w1920-h1080-c/PatriciaLake.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/02212012-08.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-_ApXZ5TKn2Y/UOD9xbbz3OI/AAAAAAAAkNY/p6fXkvjZNY8/s1920-w1920-h1080-c/02212012-08.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/LandsEnds-le-sunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-aqN5sgbqggQ/T3sLvuIoTmI/AAAAAAABFlQ/jxR2IgWbFM4/s1920-w1920-h1080-c/LandsEnds-le-sunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Approaching+Yosemite.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-bEYj5hwZ1G8/U0MSbgTqo4I/AAAAAAAJF9c/ijCLJ4jvSuU/s1920-w1920-h1080-c/Approaching%2BYosemite.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Rust.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-B7_iA_X9u6k/UBSl-nRhkxI/AAAAAAAAPeg/QCRwYky8OXM/s1920-w1920-h1080-c/Rust.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3054580997_b9c89c7d9f_o.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-KilhfjagQZw/TgtZGB0uBJI/AAAAAAAJXZc/rjj3xvxSkso/s1920-w1920-h1080-c/3054580997_b9c89c7d9f_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0853-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-3dXv-q-kMJg/Ute8DoCJgSI/AAAAAAAAlHI/A3PJNXvm8g4/s1920-w1920-h1080-c/DSC_0853-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Across+the+Alaskan+Fjords.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-h782AeqXwL4/U0MTcwzNuyI/AAAAAAAJBlg/B0ICHy6uj-I/s1920-w1920-h1080-c/Across%2Bthe%2BAlaskan%2BFjords.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP0592.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-rOuBbaxoNAU/T-zOq9MmziI/AAAAAAAABdU/y24M7n3oj70/s1920-w1920-h1080-c/IMGP0592.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071121-3891-MontcitoMorn.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-X5n9ak4dE1s/Tg1c8c9xvWI/AAAAAAAAALE/M9bf_hSgUHI/s1920-w1920-h1080-c/071121-3891-MontcitoMorn.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8551.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-0QWWEWkAEkA/UTmo6qnkIgI/AAAAAAAAWsU/VIzT5UsUyh8/s1920-w1920-h1080-c/DSC_8551.png\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_20130330_120430-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-f1YF98XfEmY/UVmHsvQBxvI/AAAAAAAAT9g/0Uk7XjxUFCw/s1920-w1920-h1080-c/IMG_20130330_120430-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SutroSunset-surf-burn.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-zcGhuTDGZ7Q/TvI44kbopOI/AAAAAAABFaY/677iL2Z8O8s/s1920-w1920-h1080-c/SutroSunset-surf-burn.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Beach.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-lMCO5r3MLUQ/UZURZdDoWWI/AAAAAAAAPOU/FayJm6cQrN4/s1920-w1920-h1080-c/The%2BBeach.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Take+It+or+Leave+It.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-jrCbEVo5pok/UTUniMfAPQI/AAAAAAAAMlc/taFKyOwN7ro/s1920-w1920-h1080-c/Take%2BIt%2Bor%2BLeave%2BIt.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ENS-+Macro+Snow-.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-JMRLCkgYWUI/UR0He_hKbyI/AAAAAAAAOyM/Fjml1QshbrU/s1920-w1920-h1080-c/ENS-%2BMacro%2BSnow-.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1351.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-DHg264B2vlg/Ul9y7zxl9iI/AAAAAAAAE6A/KNGHpq_cH1M/s1920-w1920-h1080-c/DSC_1351.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_7939+he.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-lA8lfuSjpBY/U0tzavr8B0I/AAAAAAAAvh8/YNJ4VVT6axk/s1920-w1920-h1080-c/IMG_7939%2Bhe.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071124-3917-BigSurSky.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-vQXExn8x3Wo/Tg1dCJ3WSJI/AAAAAAAAALM/j6v5p4iMLDc/s1920-w1920-h1080-c/071124-3917-BigSurSky.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3189889363_6357f5f645_o.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-mA6_1F0fM7U/TgtZGJt2oII/AAAAAAAJKTg/te1m0BOVycg/s1920-w1920-h1080-c/3189889363_6357f5f645_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01070+Mosaic.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-nCN9lgyjKd0/UpBNC_yRLBI/AAAAAAAAD_s/xH5Pb5wEGH4/s1920-w1920-h1080-c/DSC01070%2BMosaic.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1182.CR2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-2y17u99oVV8/TwyPAbOBPqI/AAAAAAAAF9w/EQOhIwGaHiA/s1920-w1920-h1080-c/IMG_1182.CR2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Grassy+Roof.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Y_Bp6GUWfSE/U0Maxnb6OyI/AAAAAAAJA4U/a05iPi39_7c/s1920-w1920-h1080-c/The%2BGrassy%2BRoof.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Seal+Rocks-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-rQdS7R8LdHM/T1Jy2z5kZcI/AAAAAAABFZY/Cqb-Q9aWw2Q/s1920-w1920-h1080-c/Seal%2BRocks-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MountainSplendor.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-f6OToCJWRrg/UUsOySkJXoI/AAAAAAAATgk/DWwubrzxFPY/s1920-w1920-h1080-c/MountainSplendor.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_4460.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GQv4Q_NZKH8/UDZ1v6AEcSI/AAAAAAAA6ik/i90ZeH2jexc/s1920-w1920-h1080-c/IMG_4460.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untitled+(101+of+207).png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-tw3AkYSVojM/U0MlwltSINI/AAAAAAAJBMA/7_5x_BUOOww/s1920-w1920-h1080-c/untitled%2B%2528101%2Bof%2B207%2529.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6674-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-X3k5JeDbKW4/UZtfuMrJ49I/AAAAAAAAVpI/Qy3yA3weGXM/s1920-w1920-h1080-c/DSC_6674-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/5-07-13-hodgeman-ks-lightning-supercell.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-NE7B7ZtjC9M/UknSexY2-_I/AAAAAAAAN6g/od62b4KTS9U/s1920-w1920-h1080-c/5-07-13-hodgeman-ks-lightning-supercell.png\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Thamserku.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-gvCvkN6ll9Y/UtRUq4mYc8I/AAAAAAAAGpo/RecztlhW01k/s1920-w1920-h1080-c/Thamserku.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ohau-cliff-hawaii-trey-ratcliff.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-lKPOvxP_3hQ/U0MjW1IS8QI/AAAAAAAJBP4/qTn4pFXZq_8/s1920-w1920-h1080-c/ohau-cliff-hawaii-trey-ratcliff.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/7439storm2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-PBAhFhrSEPM/Ugj3wyodrvI/AAAAAAAAIOs/Fo7lNmwWNu0/s1920-w1920-h1080-c/7439storm2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/bondi_sml.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-OuaQJ-ktrms/TmH7HMco5NI/AAAAAAAADYk/CvmoywXR_ck/s1920-w1920-h1080-c/bondi_sml.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+China+2011+-+A+Great+Wall+at+Sunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Bm8YwGRxgzI/U0MfR72bkDI/AAAAAAAJKHE/TKs1mWF8US4/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BChina%2B2011%2B-%2BA%2BGreat%2BWall%2Bat%2BSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TwilightRocks_SanMateoCoast-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-WiGnP1yACq0/T2-Ib08jHdI/AAAAAAABFaw/uRs4YlY_qss/s1920-w1920-h1080-c/TwilightRocks_SanMateoCoast-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Farm+of+Eden.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-To5JBx7eAO4/U0MaTRPOM4I/AAAAAAAJEWM/8Bgvm9uL6Do/s1920-w1920-h1080-c/The%2BFarm%2Bof%2BEden.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8031438226_5713c1a86c_o.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-VeCrM9fKDYw/UkPR39wFICI/AAAAAAAALrQ/1VmRr7zq_N4/s1920-w1920-h1080-c/8031438226_5713c1a86c_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061012-1078-PelicanCove.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Hn2QgYPEDxo/Tg1bUgAlTfI/AAAAAAAAAI0/R33ZpN3IaJ8/s1920-w1920-h1080-c/061012-1078-PelicanCove.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC03916+Green+Leaf+Texture.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Lpppujp4Qb4/UpBTNYFdx7I/AAAAAAAAD_4/SCgq46wEvcU/s1920-w1920-h1080-c/DSC03916%2BGreen%2BLeaf%2BTexture.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Fickle+Mistress.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Z9mJn5vva2U/T6sVZGdrvgI/AAAAAAAAdAo/rdpy_ia2NS8/s1920-w1920-h1080-c/The%2BFickle%2BMistress.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090227-0384-McCluresPoint.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-K7DKKrLhMec/Tg1eUKdLbXI/AAAAAAAAAM4/BaH6ytbEX4U/s1920-w1920-h1080-c/090227-0384-McCluresPoint.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/080816-4952-WaianSands.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-tCgHZWwSulc/Tg1dtfmRPHI/AAAAAAAAAMI/ol6-WLOo7WU/s1920-w1920-h1080-c/080816-4952-WaianSands.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0684.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-xOVjmeJjM3o/TqtYP_buAoI/AAAAAAAAFlA/xUHqJSkr-MU/s1920-w1920-h1080-c/IMG_0684.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071229-4276-LaJollaFalls.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-e6TcvHbkNxo/Tg1dYGAJKTI/AAAAAAAAALw/_t-M3-wmbeg/s1920-w1920-h1080-c/071229-4276-LaJollaFalls.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090911-2088-AngelIslandSky2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-n76GULHmI8U/Tg1fNmGyDbI/AAAAAAAAAOA/pNieTMoo0ro/s1920-w1920-h1080-c/090911-2088-AngelIslandSky2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1134103121_gateway+to+the+temple+of+heaven.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-08NVs0omPPw/TgtZEFlihuI/AAAAAAAJBBo/KKdqrpOP5Z0/s1920-w1920-h1080-c/1134103121_gateway%2Bto%2Bthe%2Btemple%2Bof%2Bheaven.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DolphinWalk.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-WHdVljxASJk/UOue-BcvLNI/AAAAAAAAwoo/ENRQQBJtKsA/s1920-w1920-h1080-c/DolphinWalk.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Red+paint+on+rock!.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-1OMPOm50As0/Ua2didd-IjI/AAAAAAAAfX4/afXkw0vQ4Nc/s1280-w1280-c-h720-k-no/Red%2Bpaint%2Bon%2Brock%2521\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/5-20-11-sunset-clouds365-kdelay.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-sVsjQwFKpM0/UFN9mKAiexI/AAAAAAAASuM/qpOQevOJY8k/s1920-w1920-h1080-c/5-20-11-sunset-clouds365-kdelay.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/maui-13.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-A5xnIm26hoM/UQ6xWBcP60I/AAAAAAAAFZI/xCilpfxW-3Y/s1920-w1920-h1080-c/maui-13.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Sloat-SunsetBeachFoam.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-2oWY5eMxbnY/TwJ1W3DnAII/AAAAAAABFbs/V9UTfZKkOnM/s1920-w1920-h1080-c/Sloat-SunsetBeachFoam.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6436.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Hjg_1FAJV7k/T8miVTXavMI/AAAAAAAAIgo/Ksveh_v5Pws/s1920-w1920-h1080-c/DSC_6436.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090501-0963-CycloneOfLt.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-duWLWrx3RtU/Tg1erB-vvtI/AAAAAAAAANU/3iD8-ATfJsw/s1920-w1920-h1080-c/090501-0963-CycloneOfLt.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1189866210_spanish+sunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-zAb56uSfuX0/TgtZEG6yqnI/AAAAAAAJBDQ/5prXR1sSzyU/s1920-w1920-h1080-c/1189866210_spanish%2Bsunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_5433.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-dN576MDlyEM/TiRJgIjUtZI/AAAAAAAD6lY/sbNK1sQOiow/s1920-w1920-h1080-c/IMG_5433.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A4957.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-7EJI2_bMWrg/U0_6WXfnu0I/AAAAAAAA2IA/qnv2qDY374E/s1920-w1920-h1080-c/388A4957.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Olmsted-Sunset-1.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-_X4BN2gmOh4/TqTdEJ8Q95I/AAAAAAAAEx4/4HIX-pD4OuI/s1920-w1920-h1080-c/Olmsted-Sunset-1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/new-england-4.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-z9s9Br2P5fo/UKZedhD_eYI/AAAAAAAACfk/2-qRWoFQDcs/s1920-w1920-h1080-c/new-england-4.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20101103_TorresDelPaine_Cuernos_Horns_6215_blended-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-9VBXTbvWld0/U_yjmbN6zVI/AAAAAAAB-3c/rSgR3kL3uTQ/s1920-w1920-h1080-c/20101103_TorresDelPaine_Cuernos_Horns_6215_blended-Edit-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/bodie-11.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-NFuPWEa3vrE/UFs2mhJrWQI/AAAAAAAAST4/QAg74w1fZpI/s1920-w1920-h1080-c/bodie-11.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP8003.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-xjlOWCsBOHg/UL2Bg7-fWJI/AAAAAAAAEQM/_Af3LToQDmg/s1920-w1920-h1080-c/IMGP8003.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20110710-160024.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GN97YhnT3Qo/Tj1SVC1wv-I/AAAAAAAADi0/upwFGIqVhPQ/s1920-w1920-h1080-c/20110710-160024.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/River+and+Mount.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-mdbG7ZFFzKQ/U0MX5tKa1vI/AAAAAAAJCBM/XGhf_-p25Ys/s1920-w1920-h1080-c/River%2Band%2BMount.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/060607-0405-PillarsPast.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-USkNl2UVpk8/Tg1a6ynrEKI/AAAAAAAAc0c/fcUJz1E5SKw/s1920-w1920-h1080-c/060607-0405-PillarsPast.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8949932059_416d4806ab_o.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-rU4h5IKilhs/UbC8PJyZCII/AAAAAAAABBo/tPQZAwV8nxA/s1920-w1920-h1080-c/8949932059_416d4806ab_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untitled-5.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-iXtTEIicPCE/Thz5P1Y-mFI/AAAAAAACqmA/QwzDzmHWk94/s1920-w1920-h1080-c/untitled-5.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20140105-untitled+shoot-2908_HDR_HDR.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-kM5nzgAtWSI/Us2ewqEBtFI/AAAAAAAABiM/iwvLzC2OMEk/s1920-w1920-h1080-c/20140105-untitled%2Bshoot-2908_HDR_HDR.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100731-4524-HapunaLight1.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-EF8NaWPwjTM/Tg1gLGBR_9I/AAAAAAAAAPE/3DlU_Kv1HHQ/s1920-w1920-h1080-c/100731-4524-HapunaLight1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TetonSnakeOverlook.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-RCFt3utBaXk/UE5kxyUxo6I/AAAAAAAAJWQ/jtgzKjcGfuU/s1920-w1920-h1080-c/TetonSnakeOverlook.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20120212-IMG_4250.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-5FV5VQzT0WQ/Tzy0dNznpGI/AAAAAAAAEwc/5uIfwjNBMhc/s1920-w1920-h1080-c/20120212-IMG_4250.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100312-3521-MonolithicLight1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-KKZmrbmQdYM/Tg1fx0f9EaI/AAAAAAAAAOs/zg07LmkK2eg/s1920-w1920-h1080-c/100312-3521-MonolithicLight1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8156803630_fcb67dbe98_k.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-p3T0Z0zLK5E/UJhoD6_Ac1I/AAAAAAAAgMQ/fqQxNGKpL-c/s1920-w1920-h1080-c/8156803630_fcb67dbe98_k.jpeg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/4088949046_5d094cb2e2_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-yX9BOjrswig/TgtZEPKtS_I/AAAAAAAJEmo/jrnHGoDlpHw/s1920-w1920-h1080-c/4088949046_5d094cb2e2_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8621-2-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-4eLicoBRkAQ/Uc7OMQqqKMI/AAAAAAAAXbw/eMQHZ3fhXGA/s1920-w1920-h1080-c/DSC_8621-2-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1171692863_the+eiffel+from+beneath.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-PQQBBUfBmNs/TgtZENaPpRI/AAAAAAAJA1Y/mfOoa5PJw4g/s1920-w1920-h1080-c/1171692863_the%2Beiffel%2Bfrom%2Bbeneath.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/A+Sunset+on+a+Texas+Farm.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-9-6Sd41GxEQ/U0MR8Gvqf4I/AAAAAAAJRB0/9fYITnA4fQk/s1920-w1920-h1080-c/A%2BSunset%2Bon%2Ba%2BTexas%2BFarm.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/300928932_3bf6d408df_o.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-DfDrf9tZth0/TgtZGBjmXqI/AAAAAAAJA_A/e6jq_VQrXaY/s1920-w1920-h1080-c/300928932_3bf6d408df_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ReflectingMoonlight.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-B7gaJXyGoIs/UHOmYB8GzPI/AAAAAAAAwHA/MGpwJlaw7Yw/s1920-w1920-h1080-c/Reflecting%25252520Moonlight.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Solar+Flower.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-zuD-bqjkRMs/U0MdYYTiWJI/AAAAAAAJJLE/xEEn0-D32-Q/s1920-w1920-h1080-c/The%2BSolar%2BFlower.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061119-1290-HaenaSurf.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-DtOOMCEQEzs/Tg1baI_IkFI/AAAAAAAAc0g/4HYnmK0I21k/s1920-w1920-h1080-c/061119-1290-HaenaSurf.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3425202839_7a6b829432_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Mo0DARoQ5pg/TgtZGObV66I/AAAAAAAJA4A/x3NBiBZ1T08/s1920-w1920-h1080-c/3425202839_7a6b829432_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A3302.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-EGI_DF6_jjM/U0_6WeYaAcI/AAAAAAAA2IA/onrkX5wYXC0/s1920-w1920-h1080-c/388A3302.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2388+e.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-uWYftkrNY7Y/U08nbhRFXEI/AAAAAAAAvt8/Jvqvy9ZX7Rw/s1920-w1920-h1080-c/IMG_2388%2Be.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/060506-0094-Farscape.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-mB0CsB02334/Tg1a0rca9TI/AAAAAAAAc0M/poMn2aae0XU/s1920-w1920-h1080-c/060506-0094-Farscape.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090102-0143-SeaAndStorm.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-rqPXOCN3Sf4/Tg1eJr7jzJI/AAAAAAAAAMs/neSQj8_NJbQ/s1920-w1920-h1080-c/090102-0143-SeaAndStorm.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB-Wave_mono-square.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-_9KsThqIDII/TsKQNHpnMcI/AAAAAAABFcM/myl4tBgFSMs/s1920-w1920-h1080-c/GGB-Wave_mono-square.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_2817.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-KTagpsQRiZw/Tk84FHT3wvI/AAAAAAABMJE/lGUSRehuqK0/s1920-w1920-h1080-c/DSC_2817.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/A+Morning+at+the+Secret+Lak2e.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-r9JZ23uiJdw/U0MRzWVvfDI/AAAAAAAJA5Q/4xCghAQGdp8/s1920-w1920-h1080-c/A%2BMorning%2Bat%2Bthe%2BSecret%2BLak2e.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/C21T0817.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-s8Arhr77hCs/UqTF_xWLYVI/AAAAAAAAXK8/uRcPFpV7CPM/s1920-w1920-h1080-c/C21T0817.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/091009-2169-LibOfAges3.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-VeOuV8_xtzQ/Tg1fcY4BfBI/AAAAAAAAAOQ/y0D10NZbTOw/s1920-w1920-h1080-c/091009-2169-LibOfAges3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SFBay-Sunrise-Hank-n-Pilings-2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-NZ_Ll43savw/TzCKeTsXQHI/AAAAAAAASAc/n4AJeYm6ehA/s1920-w1920-h1080-c/SFBay-Sunrise-Hank-n-Pilings-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Adventure+in+Argentina-7283-March+31,+2009-2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-q7WJKw9Oqog/U0MSH9OpjdI/AAAAAAAJGxU/FDOzRfCcMro/s1920-w1920-h1080-c/Adventure%2Bin%2BArgentina-7283-March%2B31%252C%2B2009-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SunetReflection_16x9-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/--s1xvTZu_8s/TvEFum2qOkI/AAAAAAABFiQ/RVtjU4CacrI/s1920-w1920-h1080-c/SunetReflection_16x9-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1221.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-id9Mf91TyIg/UQmGXFzYiAI/AAAAAAAAlfo/n2RM1udWSeM/s1920-w1920-h1080-c/IMG_1221.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey-Ratcliff-New-Zealand+(362+of+696).png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-4-wMlkvbnxI/U0MiMX47iJI/AAAAAAAJJJ8/lstLqeHqMOM/s1920-w1920-h1080-c/Trey-Ratcliff-New-Zealand%2B%2528362%2Bof%2B696%2529.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Rocks+of+Iceland.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-7EENXFBPvH8/U0Mc5Ty31YI/AAAAAAAJBIY/d9kb4PcgsXc/s1920-w1920-h1080-c/The%2BRocks%2Bof%2BIceland.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/2012-Favorites-3.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-_TPUkTQ0foE/UOu3R1Fih9I/AAAAAAAAUwU/n2BcAi9lFAI/s1920-w1920-h1080-c/2012-Favorites-3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Exclamation-4.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-p2S6pYJG8TY/UkLZ-2heppI/AAAAAAAAdAo/UEwJsuYTGXM/s1920-w1920-h1080-c/Exclamation-4.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01099+Plant.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-AM_AYNzr-a0/UpBNRCa9JbI/AAAAAAAAD_w/gATI2Qr7EHw/s1920-w1920-h1080-c/DSC01099%2BPlant.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1-24-13.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-k85UvBDxqso/UbdXjw35hhI/AAAAAAAAFh4/E7cP1B2hXgg/s1920-w1920-h1080-c/1-24-13.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/LowerAntelope1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Hy-GW9jdRmM/UOOY4T51IhI/AAAAAAAAKiI/dj3WLyRqMJE/s1920-w1920-h1080-c/LowerAntelope1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DelicateArch.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-lTCOr1mGi98/T0m262j2RnI/AAAAAAAAGbs/4Ab-Mhv-4_A/s1920-w1920-h1080-c/DelicateArch.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_3091-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-dzQdFd1d2cg/UpExTYfIJ6I/AAAAAAAAFgo/jW1vrNByXqg/s1920-w1920-h1080-c/DSC_3091-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Lorne+Road.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-SPVIRuebjx0/U0MWpwm-GJI/AAAAAAAJJKQ/b1X__UQq1K8/s1920-w1920-h1080-c/Lorne%2BRoad.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/110429-7971-Faultlines.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-9evAJAwXovk/Tg1aR0viDRI/AAAAAAAAc0I/TecuJZTaV44/s1920-w1920-h1080-c/110429-7971-Faultlines.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+NEX+7-+Sunset+2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-2Q98cG0kiX8/U0MgMcXhJgI/AAAAAAAJKoU/iqJaKYOi6J0/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BNEX%2B7-%2BSunset%2B2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP8556-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-ree1zkofuLM/UPBTkiEo3pI/AAAAAAAAfWU/t0UKepl53qw/s1920-w1920-h1080-c/IMGP8556-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Most+Beautiful+Road+in+the+World.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Cp1EGSOiT7o/U0MbuGaep5I/AAAAAAAJIA0/Hi4dBFthsQE/s1920-w1920-h1080-c/The%2BMost%2BBeautiful%2BRoad%2Bin%2Bthe%2BWorld.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Chicago.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-KxjcNjAfrow/U0MTi1JasjI/AAAAAAAJKS4/JcqmHStMKgE/s1920-w1920-h1080-c/Chicago.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/070211-2329-GarrapataSurf1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-p8gu7w4UaB0/Tg1cD-zJRXI/AAAAAAAAAJw/xKPs4AJ8WTU/s1920-w1920-h1080-c/070211-2329-GarrapataSurf1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Day+Break+G+.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-KwGZ0753oAA/T_SUbhKUrmI/AAAAAAAAhqg/aN2q0nhUYNA/s1920-w1920-h1080-c/Day%2BBreak%2BG%252B.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/070902-3129-BowlingBall1.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-EIrEuHD0skg/Tg1cUtz3htI/AAAAAAAAc00/ykp5Z4-BtGg/s1920-w1920-h1080-c/070902-3129-BowlingBall1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+OTW+to+Glen.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-ggjaMcHz6Fw/U0Mgf-CsIDI/AAAAAAAJFdQ/iyuO6PIuUdg/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BOTW%2Bto%2BGlen.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/136.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-DZDQ-Jc4VPA/TSjtGSyY5lI/AAAAAAAAkNQ/r8BTRHGP7qI/s1920-w1920-h1080-c/136.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1311-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-smKqSEXvptA/UpZ3FAZqrSI/AAAAAAAAf5w/iIG6Dg0XSKs/s1920-w1920-h1080-c/DSC_1311-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/In+a+Foreign+Land+-+West+Fjords,+Iceland.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-5vOp8Qd9Cr0/UZURZbC6EvI/AAAAAAAAgTY/jZBHwF9W4VU/s1920-w1920-h1080-c/In%2Ba%2BForeign%2BLand%2B-%2BWest%2BFjords%252C%2BIceland.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Hell's+Gate+Bridge-6.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-sZXaqdy-xcA/UKzgVo7pqnI/AAAAAAAAIaA/tvF7kHoKH2I/s1920-w1920-h1080-c/Hell%2527s%2BGate%2BBridge-6.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/End+Game+.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-vYrcLbr_syE/UO0CdVlLb_I/AAAAAAAAgOE/-NoOWCD3-LY/s1920-w1920-h1080-c/End%2BGame%252B.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+China+2011+-+The+Egg+at+Sunset.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-fSZtzjxYoBk/U0MfcOvbsrI/AAAAAAAJBP8/prm689xvgE4/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BChina%2B2011%2B-%2BThe%2BEgg%2Bat%2BSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_8642.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-IFmqkzp2Z74/SlgjPMN0INI/AAAAAAAAJlI/cVrfkqJwBj4/s1920-w1920-h1080-c/IMG_8642.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A3234.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-81O00JEe7GY/U0_6WV9qs6I/AAAAAAAA2IA/xSYNSA5zuIo/s1920-w1920-h1080-c/388A3234.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A4648-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Xb-0VhFJErE/U0_6WZpo_5I/AAAAAAAA2IA/3wWOfPmtuno/s1920-w1920-h1080-c/388A4648-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_2238-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-0gRcRJvCyq8/UYWMMwK-xyI/AAAAAAAAgOg/YAmwDINMMW4/s1920-w1920-h1080-c/MOL_2238-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Kona-Hawaii-Stormy-Sky.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-EgToYDexIWA/TugFtw6MbOI/AAAAAAAAJ_E/AFdXppomBHM/s1920-w1920-h1080-c/Kona-Hawaii-Stormy-Sky.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/BakerBeach-SunsetColor.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-AGyN05vOAVg/Trv455hOvXI/AAAAAAABFag/ruA7zfHRDik/s1920-w1920-h1080-c/BakerBeach-SunsetColor.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/red+bridge+in+late+afternoon.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-voPn3r8W5cQ/TgtZEGX9FFI/AAAAAAAJG7g/wotb_OlghAE/s1920-w1920-h1080-c/red%2Bbridge%2Bin%2Blate%2Bafternoon.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/LandsEnd-sunset-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-i1rPphMhUYQ/T1l7sJNRR5I/AAAAAAABFaA/ISCx26OdOHM/s1920-w1920-h1080-c/LandsEnd-sunset-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20130915-7372-34873c91-2048.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-3d-tkshy_0Y/Um32gHQ1usI/AAAAAAAACGA/O4ZCsNcd1-M/s1920-w1920-h1080-c/20130915-7372-34873c91-2048.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Ocean+Sigh.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-KKLEMMadjkQ/UO8V4We8BYI/AAAAAAAAwHI/245vkVmGU8w/s1920-w1920-h1080-c/Ocean%2BSigh.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RodeoCove-SmallSunset-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-cFtlqrFqSy0/Tpr3ij-CA7I/AAAAAAABC7g/PhNSHOv9-dw/s1920-w1920-h1080-c/RodeoCove-SmallSunset-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1556-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-01ZxJyYSOq4/UtTs57pjoXI/AAAAAAAAOYg/L4SWL7LqweM/s1920-w1920-h1080-c/DSC_1556-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Road+to+Lindis+Pass.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-wBaT-XTU5lw/U0McsiS2QGI/AAAAAAAJG6g/emxVwa5ILwo/s1920-w1920-h1080-c/The%2BRoad%2Bto%2BLindis%2BPass.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Life+in+the+greenhouse-3.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-t4GuDMvJgtk/TPK0WgSeLBI/AAAAAAADI4c/zYc1x7I-S9k/s1920-w1920-h1080-c/Life%2Bin%2Bthe%2Bgreenhouse-3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/7995122298_d4743a46ce_k.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-dVPjiuCL-og/UNi-6EF0QjI/AAAAAAAAK5E/33w0ipRlzuc/s1920-w1920-h1080-c/7995122298_d4743a46ce_k.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/McWay+Milky+Way.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-4J2fjwHlZpk/UtTyvD-FnJI/AAAAAAAAX1k/TuYoeLc-Ku8/s1920-w1920-h1080-c/McWay%2BMilky%2BWay.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-queenstown-nz-nikon-d800.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uxsx0IEs6eA/U0MlLb1IerI/AAAAAAAJP20/dPosYR9XVxw/s1920-w1920-h1080-c/trey-ratcliff-queenstown-nz-nikon-d800.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Chef+at+Sunset.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-YB4kZ5ge9Cc/U0MTgZTfmZI/AAAAAAAJQpw/V9nAX7xkgF0/s1920-w1920-h1080-c/Chef%2Bat%2BSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ConvictLakeSunrise.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-FAIPD0L_XLs/UBctAcHLwcI/AAAAAAAAJAo/fsicVZWEcT8/s1920-w1920-h1080-c/ConvictLakeSunrise.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01009+(1).png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-k1Op3rHp90U/ToFAGEMaH4I/AAAAAAAAraU/f_xZikhzlCY/s1920-w1920-h1080-c/DSC01009%2B%25281%2529.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0444_5_6-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-UHWxgek6Ei0/T58Hpp9zkeI/AAAAAAAANzY/M8D4GtsE6cY/s1920-w1920-h1080-c/DSC_0444_5_6-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090424-0690-CrystCvBreakers.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-9FMwjMIo6MU/Tg1efx1FWSI/AAAAAAAAANE/NuC3xJSPApo/s1920-w1920-h1080-c/090424-0690-CrystCvBreakers.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Sky+Forever.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-rYUyEz24110/U0MddxVVpKI/AAAAAAAJI0g/Yo2Aeee9akk/s1920-w1920-h1080-c/The%2BSky%2BForever.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20140310_Iceland_1392-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-bjac3OgFBG8/U_yjp004PtI/AAAAAAAB-4U/jq6sA93FbVI/s1920-w1920-h1080-c/20140310_Iceland_1392-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3410783929_310572ed16_o.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-1oYAqn8Hi9o/TgtZEE_8tKI/AAAAAAAJJKI/8CbtKab2l0U/s1920-w1920-h1080-c/3410783929_310572ed16_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/G+.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-udPQ4zAGUYg/UZURZTfLDhI/AAAAAAAAPSc/ptIJgEKd2LQ/s1920-w1920-h1080-c/G%252B.jpeg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/C21T0861.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-v6_xr8m1Nh4/UqTF_6FhNQI/AAAAAAAATJY/VWbCHgg5quc/s1920-w1920-h1080-c/C21T0861.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3505475407_d776e4d589_o-1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-TVzStzhfexU/S_5S8_zMy5I/AAAAAAADFE0/fN7-JZzP46I/s1920-w1920-h1080-c/3505475407_d776e4d589_o-1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Seattle.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-DteiBArt5UI/U0MYH6zthEI/AAAAAAAJFtY/UU1t1FU6uX4/s1920-w1920-h1080-c/Seattle.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100409-3657-PinnacleRock3.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-eOzWq5Yn-SY/Tg1f10Dgx4I/AAAAAAAAAOw/PiXj6h2JAio/s1920-w1920-h1080-c/100409-3657-PinnacleRock3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey-Ratcliff-Milford-Sound-100.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-PwjNo1puYPI/U0MiQaw-PxI/AAAAAAAJF3M/gyTiKomggGc/s1920-w1920-h1080-c/Trey-Ratcliff-Milford-Sound-100.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061125-1635-Maelstrom3.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-5E0jD9xU4kU/Tg1brt6WipI/AAAAAAAAc0s/2YRKYYKsEkM/s1920-w1920-h1080-c/061125-1635-Maelstrom3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A1865_HDR.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-zrMZyIFb_wM/U0_6WbX2k0I/AAAAAAAA2IA/EM_Lt3L7XOg/s1920-w1920-h1080-c/388A1865_HDR.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2337.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uxwr24FdX3I/TwZMCaKx4XI/AAAAAAAAQnE/DcLxR0jnfqE/s1920-w1920-h1080-c/IMG_2337.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1531.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-EIEk1-tv81w/TGD0hHBXZEI/AAAAAAAAav0/MfGEerqGlfk/s1920-w1920-h1080-c/IMG_1531.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/FI4C4577.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-KN7d8PlNOxU/UA7HP8WNpTI/AAAAAAAASLc/esv8pSYjYmQ/s1920-w1920-h1080-c/FI4C4577.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RaceTrack-tilted.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-TiuUGmgrIJo/T2fhWrPoAtI/AAAAAAAAX-0/KhLFCt5muZ0/s1920-w1920-h1080-c/RaceTrack-tilted.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/tempest+(1)-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-aN5bGPX4Rig/UW_esdzHpZI/AAAAAAAAUYo/lhx3gIuY2Tc/s1920-w1920-h1080-c/tempest%2B%25281%2529-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/the+lonely+grass+house.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-BqdD6DbXnso/TgtZGH_h6AI/AAAAAAAJA0Q/VNpKkFnn1eg/s1920-w1920-h1080-c/the%2Blonely%2Bgrass%2Bhouse.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/BeanHollow-sunset-surf.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-bhHK29YjgVc/T3CquVOc6hI/AAAAAAABFZI/Z-FfTyBzwLI/s1920-w1920-h1080-c/BeanHollow-sunset-surf.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20140328_Hawaii_2209-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-JOT24t6ZLx4/U_yjrKLK2zI/AAAAAAAB-4o/KC0ZWVXh110/s1920-w1920-h1080-c/20140328_Hawaii_2209-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RHeaRy_402.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-a860A9miaZQ/ThtTuOdNWNI/AAAAAAABSE0/tjO54r6kego/s1920-w1920-h1080-c/RHeaRy_402.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MorningBlue-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-w_It3dmq8_Q/Tr26ZtIDRNI/AAAAAAAAGVg/qOM8lD2pCpU/s1920-w1920-h1080-c/MorningBlue-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071118-3765-LvrsPtMorn.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-3l1ZJxwb6rI/Tg1czp-9MFI/AAAAAAAAAK0/rdFg0gGfCqg/s1920-w1920-h1080-c/071118-3765-LvrsPtMorn.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/forest+fog+v2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-f3E6blFBDVk/Tg0tjUx3BJI/AAAAAAAAgMY/f8tnlRGQisU/s1920-w1920-h1080-c/forest%2Bfog%2Bv2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/oil3.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-cQXP45_tLq0/T0m27oIexHI/AAAAAAAAGb8/keNzP_2lN60/s1920-w1920-h1080-c/oil3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/FoggySunrise-HawkHill-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-nwpgAk2m0O8/ToM1yp5NLQI/AAAAAAABC64/ExPWPjc-oLE/s1920-w1920-h1080-c/FoggySunrise-HawkHill-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB-SlackersRidge-Sunrise-fog-headlights-wide.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-s-CrcrZfoEY/TzlsdNVcPpI/AAAAAAAAS2I/vgewR4SWII0/s1920-w1920-h1080-c/GGB-SlackersRidge-Sunrise-fog-headlights-wide.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/4+horses.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-PFORpB2nRWU/TgtZEBZXStI/AAAAAAAJG78/sg8P1h1FTu4/s1920-w1920-h1080-c/4%2Bhorses.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1-02-12-part2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-LuTnYJ-_AcA/UbdXj-v1fMI/AAAAAAAAFhg/emAw_2y06Ak/s1920-w1920-h1080-c/1-02-12-part2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1071616194_the+farm+of+eden.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-mWoPAMsZ8qM/TgtZECWsZDI/AAAAAAAJGYQ/mGJ5umfc76I/s1920-w1920-h1080-c/1071616194_the%2Bfarm%2Bof%2Beden.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MWF_2155.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-ll7ATwQQOnE/UkPP_YH9WKI/AAAAAAAALoA/_9E2BHedhG4/s1920-w1920-h1080-c/MWF_2155.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RHeaRy_465.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-hDuDewqWJhc/ThYuDF3m4II/AAAAAAABSc8/OMs4oB1Xj6U/s1920-w1920-h1080-c/RHeaRy_465.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/101027-4887-TestOfTime.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-lOZvJ3yPdfc/Tg1gbgvj2bI/AAAAAAAAAPc/bgWip6MWRVI/s1920-w1920-h1080-c/101027-4887-TestOfTime.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1272-Edit-Edit-2-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Ov6cnpCqcKo/Ue52zucefaI/AAAAAAAAZuc/Ya8H97MGDxo/s1920-w1920-h1080-c/DSC_1272-Edit-Edit-2-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MarshallBeachSunset.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-BjCgH3F-OtM/ToojnEsMoHI/AAAAAAAAFNw/RMun2UfSHvI/s1920-w1920-h1080-c/MarshallBeachSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/by+Chris+Chabot.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-5L66J8m3eOc/US-gTtMRQbI/AAAAAAAAX5c/kyQnx5QiiKw/s1920-w1920-h1080-c/by%2BChris%2BChabot.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Chasing+the+Sunset.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-oeJbNPb-T-M/UZURZeo6N9I/AAAAAAAAPQU/py94YP9ogqg/s1920-w1920-h1080-c/Chasing%2Bthe%2BSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1428.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-KK0a8yX7hUc/TnemEmslOEI/AAAAAAAAG4I/qj90bfgIkqs/s1920-w1920-h1080-c/IMG_1428.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6160-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Fz5s5Sq3uSc/UqXO06_DNPI/AAAAAAAAhPw/UNBDEnOdEhs/s1920-w1920-h1080-c/DSC_6160-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20130805_mit_and_river_00001-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GGY-AaDQgJc/UgG4BcMHLWI/AAAAAAAAVgA/pUfLz3uxV-w/s1920-w1920-h1080-c/20130805_mit_and_river_00001-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/tree+in+the+park.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-OIKJTN2YWhU/TgtZGPb42zI/AAAAAAAJA5c/IY3N83zJARw/s1920-w1920-h1080-c/tree%2Bin%2Bthe%2Bpark.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_MG_1449.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-qLopnv-fFT0/TxYB5_vxoEI/AAAAAAABFlo/0zpzDJeTYYk/s1920-w1920-h1080-c/_MG_1449.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3K9C4807.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-4x17JQmbu1s/Ur0CrKBRTzI/AAAAAAAAGH4/t-G8zEmm1jU/s1920-w1920-h1080-c/3K9C4807.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP4090-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Hhp_SMvb6a0/UOSjNI1cZnI/AAAAAAAAGjU/0XLFokAU-bw/s1920-w1920-h1080-c/IMGP4090-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8703.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-ZVK5-96bzpA/UtTypXkQUHI/AAAAAAAARwI/_iTqNhaMZ6c/s1920-w1920-h1080-c/DSC_8703.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-milford11.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-ISfFDxxtu-s/U0MkxpnU1rI/AAAAAAAJBQQ/gmuXSo3KcFQ/s1920-w1920-h1080-c/trey-ratcliff-milford11.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/by+Joel++Tjintjelaar.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-sVAg7ixe6zM/US-gUOy49yI/AAAAAAAAXrM/6iXuvw5XdBw/s1920-w1920-h1080-c/by%2BJoel%2B%2BTjintjelaar.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3857-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-V4KqnGwqPtA/Ur0CJf-GmTI/AAAAAAAAGBA/LO0uFjb-Erc/s1920-w1920-h1080-c/IMG_3857-Edit-Edit-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1311.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-9n3C3hJmGGc/UQmHUE2y6RI/AAAAAAAAlfs/6JKtNnI29Uk/s1920-w1920-h1080-c/IMG_1311.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6743-Edit-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-NZsqwlPxJ08/Ulff-DU9xQI/AAAAAAAAdbg/pJkMnw8uLCk/s1920-w1920-h1080-c/DSC_6743-Edit-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB_DarkMorningWindyFog.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-qiK0GrZEcpQ/TtZtCl10xrI/AAAAAAAAHow/WGJu8GP6dmA/s1920-w1920-h1080-c/GGB_DarkMorningWindyFog.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey-ratcliff-toronto-Recovered.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-HiLp9PsqEEg/U0MiTxSu0yI/AAAAAAAJP3w/ZWMfpXVaQVI/s1920-w1920-h1080-c/Trey-ratcliff-toronto-Recovered.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/070319-2657-PathToLight.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-VGh9JQ9DCzM/Tg1cKU7qBRI/AAAAAAAAAJ4/Dyi6MrlgffU/s1920-w1920-h1080-c/070319-2657-PathToLight.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MWF_6244-7.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-UBxJsB_kCVU/UettpK1i2BI/AAAAAAAAK3s/siEVsMTSHIg/s1920-w1920-h1080-c/MWF_6244-7.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A3363.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Fje9gDslRI0/U0_6WU_6rMI/AAAAAAAA2IA/m4PXkm_hAvI/s1920-w1920-h1080-c/388A3363.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8520.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-sTiWMAC13YQ/UTmo6ED7v9I/AAAAAAAAWsQ/PfI4WYswhJw/s1920-w1920-h1080-c/DSC_8520.png\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/700_1870.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-YOIwgQ1uXcM/SRGZJ-A3yvI/AAAAAAAADMI/6qvORkHqWS4/s1920-w1920-h1080-c/700_1870.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Dream+Catcher+-+Palouse,WA.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-skB9ljKV58M/UXp3kiaG3DI/AAAAAAAAgRM/hZ3rTbu1XwU/s1920-w1920-h1080-c/The%2BDream%2BCatcher%2B-%2BPalouse%252CWA.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Farewell+India.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-H8NDmFzpF_A/TgtZEOagTaI/AAAAAAAIPp0/eTfdvWDBvt4/s1920-w1920-h1080-c/Farewell%2BIndia.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SonomaCoast-Arch-surf-longexp.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-x0qCPDjYL9w/T2Z8tuYaHII/AAAAAAABFXc/empnlAhR_eY/s1920-w1920-h1080-c/SonomaCoast-Arch-surf-longexp.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/2398605326_bf7dde0cf7_o.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-bXrGY2Cafa0/TgtZGEzbZDI/AAAAAAAJA5g/JWbeuWkbTLc/s1920-w1920-h1080-c/2398605326_bf7dde0cf7_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/A+View+from+the+Ranch+in+Argentina.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-txUs9Q95dM8/U0MR9lvvDNI/AAAAAAAJIA8/vY9TD4TiPzw/s1920-w1920-h1080-c/A%2BView%2Bfrom%2Bthe%2BRanch%2Bin%2BArgentina.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/inverness-to-istanbul-00077.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-5uz5EzVcvNU/UEpN7gJg2nI/AAAAAAAAI7s/-Xwxg57SCn0/s1920-w1920-h1080-c/inverness-to-istanbul-00077.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SanGregorioCliffReflection.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-465XgZS4LQo/UOuDAiDRcrI/AAAAAAAAKng/4m7maZotsgg/s1920-w1920-h1080-c/SanGregorioCliffReflection.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/santa-cruz-trey-ratcliff.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-U0yjKIXF2fs/U0MjfTbjf1I/AAAAAAAJEbY/MkqCoe1DfG4/s1920-w1920-h1080-c/santa-cruz-trey-ratcliff.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061122-1421-LtAtEndOfPier.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-7Zi62qJ-NNg/Tg1bfusNzfI/AAAAAAAAAJA/P4bDaf-68Ys/s1920-w1920-h1080-c/061122-1421-LtAtEndOfPier.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_SUE4322.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-vA0vdrM3_ro/UnDyzCqXFaI/AAAAAAAAGxw/GAtvLCwZbAM/s1920-w1920-h1080-c/_SUE4322.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Bamboo+Forest.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-bkNEhcz00Z8/U0MZQ3MdO3I/AAAAAAAJGy4/S-coTfmsQfE/s1920-w1920-h1080-c/The%2BBamboo%2BForest.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC02146+Red+Plant.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-tyOlTzJRvmw/UpBQXuuK_JI/AAAAAAAAD_0/PL7enPiYUT8/s1920-w1920-h1080-c/DSC02146%2BRed%2BPlant.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/01_MG_3677.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-YHEf8jl_LDg/Tgxgtdub2iI/AAAAAAAAAMQ/zmkWf0WkFTI/s1920-w1920-h1080-c/01_MG_3677.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RedTide.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-feW_gVKW6j8/UI5fg6xQBXI/AAAAAAAAWQY/DIOuGTieAMM/s1920-w1920-h1080-c/RedTide.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/091220-2536-TheCurl.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-lR3vG062kEk/Tg1fjlh053I/AAAAAAAAAOc/Sv1zKPXPkPQ/s1920-w1920-h1080-c/091220-2536-TheCurl.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-close-to-tepako-new-zealand.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Q1AA5A9uiYU/U0MkdTp90YI/AAAAAAAJJIw/SuamKxYgwts/s1920-w1920-h1080-c/trey-ratcliff-close-to-tepako-new-zealand.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6837_CropBrightContrast.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Hqmu2H_l2XY/SwIysuFOIiI/AAAAAAABLWk/W9rX5qlmk4c/s1920-w1920-h1080-c/DSC_6837_CropBrightContrast.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061121-1389-UndPierHanalei.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-VZ8vGJ6Qfvc/Tg1bgCMJ1HI/AAAAAAAAAJE/QMa5LYy7phM/s1920-w1920-h1080-c/061121-1389-UndPierHanalei.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20100924-IMG_5794-HDR-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-eCSjsP08EcA/T_0K5wVePeI/AAAAAAAARxk/I-Qx3ciOzUE/s1920-w1920-h1080-c/20100924-IMG_5794-HDR-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Farewell+San+Francisco.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-N7h4Iit041g/U0MUZ6H8WdI/AAAAAAAJKok/V-IfPQ_XXK4/s1920-w1920-h1080-c/Farewell%2BSan%2BFrancisco.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/stream.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-GCr_cZIif7g/Tnarp7XhOMI/AAAAAAAABPU/WNrHyAJOLNA/s1920-w1920-h1080-c/stream.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071110-3579-HvnsGate.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-0DC0pkVJw5g/Tg1cjeX4YpI/AAAAAAAAAKc/bNEDQtv0J4A/s1920-w1920-h1080-c/071110-3579-HvnsGate.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100726-4239-LightAtAhalanui.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-m-0LmCqZxSo/Tg1gLoaJJKI/AAAAAAAAAPI/KNkzyqLgUa0/s1920-w1920-h1080-c/100726-4239-LightAtAhalanui.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RHeaRy_380.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-4026KDnYCqc/ThYb2MMKRLI/AAAAAAABSEs/3N3nOtyl_lI/s1920-w1920-h1080-c/RHeaRy_380.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/CrissyField-SaltMarsh-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-OwU2batkg6A/TrbvnMATI7I/AAAAAAAAF3w/q_7_jgF0ngE/s1920-w1920-h1080-c/CrissyField-SaltMarsh-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/tekapo-new-zealand-trey-ratcliff-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-mGgW1ovI2PE/U0Mjzq2YJuI/AAAAAAAJA0o/aLuxOVgUjlY/s1920-w1920-h1080-c/tekapo-new-zealand-trey-ratcliff-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/p1000284.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-patMHu2oyfs/RJBWFz5TABI/AAAAAAACnSo/ZP9KYfCSFM8/s1920-w1920-h1080-c/p1000284.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2617.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-_p1iKjPzjGc/TIW63f_px1I/AAAAAAAAOck/NCDLhcVRam8/s1920-w1920-h1080-c/IMG_2617.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8280686512_7820f388dc_k.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-NeMzsWIU6RU/UZURZR7U_aI/AAAAAAAAgSY/-AtSrt0ig5Q/s1920-w1920-h1080-c/8280686512_7820f388dc_k.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC02700.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-9Nj6ilPU0NI/Ts9Gk0pfW_I/AAAAAAAAD4I/GWbtz0c91tE/s1920-w1920-h1080-c/DSC02700.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A6457.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-jTQjx2iGz84/U0_6WWCDwxI/AAAAAAAA2IA/FmHhYqwC0Y8/s1920-w1920-h1080-c/388A6457.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TufaSunset-1-2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uk4W-F3OXbM/Tqwm9e_vuJI/AAAAAAABFcE/zPYFePKqTxs/s1920-w1920-h1080-c/TufaSunset-1-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/P1142336.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-7ZuJOGpJ5-0/UHRHfwcGEUI/AAAAAAAAKsU/s31OrXjVZ9A/s1920-w1920-h1080-c/P1142336.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Glacier+Point+Milky+Way+Panorama.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-YxXTf0j_MTQ/UtTwF4t9yEI/AAAAAAAAW8g/dYsGmWzs81Y/s1920-w1920-h1080-c/Glacier%2BPoint%2BMilky%2BWay%2BPanorama.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_DX_6908_09_10_11_32bit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-gBb9HtLb3zw/U_yjyTFvcAI/AAAAAAAB-64/G_Jt5mnm-mU/s1920-w1920-h1080-c/_DX_6908_09_10_11_32bit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/inverness-to-istanbul-00177.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-yCO0vebn5x0/UFBrOZtDNZI/AAAAAAAAJO8/jX4MgPfHQbE/s1920-w1920-h1080-c/inverness-to-istanbul-00177.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0554.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-59MYsAxhB_I/UtTzqg1a7VI/AAAAAAAAWds/BLWELYZHUWE/s1920-w1920-h1080-c/DSC_0554.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Blue.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-p4V1WVO8Dhw/UBSl6P5W35I/AAAAAAAAPdg/UFIS4M1KDBE/s1920-w1920-h1080-c/Blue.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/BayBridge-night-mono.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-5IpprOs0T78/T3PwhE-VJ9I/AAAAAAAAYzA/-2X-oY9C3N0/s1920-w1920-h1080-c/BayBridge-night-mono.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_9645-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-utp4ouvAO10/Ud6okYh24yI/AAAAAAAAYrg/fRr-tnaqxBI/s1920-w1920-h1080-c/DSC_9645-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_X7A8818-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-bCmJvz5jD9s/U_yj0wk6KLI/AAAAAAAB-7s/t7dIu3T7nvw/s1920-w1920-h1080-c/_X7A8818-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/FI4C6008.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Pg1HXtyXBZ0/UGHWhKaSrhI/AAAAAAAASZE/q3omNbvxCJU/s1920-w1920-h1080-c/FI4C6008.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/10-13-12highres.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-boXHwu7eW_g/UjjGBMhSzwI/AAAAAAAANJE/9w555NqrJws/s1920-w1920-h1080-c/10-13-12highres.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/P1080441.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-gKcKe_o5slw/RapYX1Oyx0I/AAAAAAAAa9Q/P9rYqEPs7dc/s1920-w1920-h1080-c/P1080441.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Seal_Rocks-centered.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-PtAU0On5OII/Tr8FOZ3yVuI/AAAAAAAAGY4/IYyAYzHZzo0/s1920-w1920-h1080-c/Seal_Rocks-centered.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3144-3.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-129Q91osfKU/UKsTjV0_Q0I/AAAAAAACKD0/ejMXCx6_w14/s1920-w1920-h1080-c/IMG_3144-3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_X7A5208-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-7wj7ipdaCbI/U_yj0qysNgI/AAAAAAAB-7k/dl8d2M4N5vE/s1920-w1920-h1080-c/_X7A5208-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Red+by+Alistair+Nicol.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-vK7sTdwps8g/UKPHFTynz-I/AAAAAAAARas/_RETAXGVU9g/s1920-w1920-h1080-c/Red%2Bby%2BAlistair%2BNicol.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Silver+Lake+StarTrails.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-rQ9SZ0dfJ_I/UtTzyqBufcI/AAAAAAAAOj4/zAOnrvu9aG8/s1920-w1920-h1080-c/Silver%2BLake%2BStarTrails.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP7962.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-fOXNAoVsl2E/UONnO-Zp2zI/AAAAAAAAyPo/kjEzrMZXylk/s1920-w1920-h1080-c/IMGP7962.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untitled-19.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-q2yAJwhwIic/Th0QR-JaxiI/AAAAAAAABCo/YIGFyyYRXBI/s1920-w1920-h1080-c/untitled-19.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/080229-4653-GraytonStream.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-cjUv9eE6oRE/Tg1dXWtEjRI/AAAAAAAAc1E/ScCXWwu6HbM/s1920-w1920-h1080-c/080229-4653-GraytonStream.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6902-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-x838dk0Z5UE/UaXxyeQ21gI/AAAAAAAAm-o/7OSZeQrHSO0/s1920-w1920-h1080-c/DSC_6902-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Lupines.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-oWXc6hihoxM/UAQ2flp_ioI/AAAAAAAAgLE/wL2UgiGSdRk/s1920-w1920-h1080-c/Lupines.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/BayBridgeSunrise-LE.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-k1-SvxtkRaI/TzW2PE5LU_I/AAAAAAAA14A/JuGDMoDvbCQ/s1920-w1920-h1080-c/BayBridgeSunrise-LE.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Iceland.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-fJVeA8ZcZSU/UAbPQdXxfbI/AAAAAAAAgLI/tIVVrrPINVs/s1920-w1920-h1080-c/Iceland.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/the+trane+and+the+pharoah.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-B4s7SDef3U8/TwttGH3PVKI/AAAAAAAAR8k/Gp5uWnBs4JE/s1920-w1920-h1080-c/the%2Btrane%2Band%2Bthe%2Bpharoah.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6930-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-F44_mY6bA2c/UaiW3nWnsrI/AAAAAAAAWKk/pVPuQcy_ygQ/s1920-w1920-h1080-c/DSC_6930-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Funston-Sunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-hs9pldJQseQ/Tw9Z3Mea0PI/AAAAAAABFTs/u8KBBQQ9At4/s1920-w1920-h1080-c/Funston-Sunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP0913.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-ouB3hbNdnVY/Tzlw8hO_W7I/AAAAAAAAAVQ/GNAVkaDa0lw/s1920-w1920-h1080-c/IMGP0913.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP5017.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-YiCUO9G6Vfg/ULgv8pQPeGI/AAAAAAAAD-k/NGhYvPuu5bc/s1920-w1920-h1080-c/IMGP5017.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061228-2049-UTPScripps1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-JkxqJu_ZG6I/Tg1b6ZErN-I/AAAAAAAAAJk/sD_vHpTz-hU/s1920-w1920-h1080-c/061228-2049-UTPScripps1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071010-3287-SausMorn1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-o11hGOKretw/Tg1cW-5ZUOI/AAAAAAAAAKQ/bz8-ylAE0_A/s1920-w1920-h1080-c/071010-3287-SausMorn1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+New+York+-+Inception.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-uw6YFcXJKbo/U0MgUuctfgI/AAAAAAAJEXg/rLxRH7N4ths/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BNew%2BYork%2B-%2BInception.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/LandsEnd-Sunset.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-lEy_31bnK1A/TyYVYFaoUxI/AAAAAAAAPxc/_4v9O3EKy6c/s1920-w1920-h1080-c/LandsEnd-Sunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Spires-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-MjADvnIjxV0/U0MdmA5ytOI/AAAAAAAJKn4/0ZUjaXODMKA/s1920-w1920-h1080-c/The%2BSpires-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/32+Hours++Counting.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-xbmT1vIDvZc/UZURZTZzmhI/AAAAAAAAgSo/f1msNjQ2YSw/s1920-w1920-h1080-c/32%2BHours%2B%2526%2BCounting.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_2018-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-IPbUv2dc9E4/Ugotamqb0xI/AAAAAAAAbME/zTVKgdkCdRY/s1920-w1920-h1080-c/DSC_2018-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MSU_9976.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-tFk1NsophJc/UqWc4p6NF9I/AAAAAAAAHws/4zvvKSi-qRk/s1920-w1920-h1080-c/MSU_9976.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Reef-mono.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-5-bmm_yEw8Q/ToaN8JLAR1I/AAAAAAABC7I/eMpXTtyj67Y/s1920-w1920-h1080-c/Reef-mono.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Dreams.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-wWAxuHAMqWo/UZURZU59sUI/AAAAAAAAPOY/bxIdsdlg4DE/s1920-w1920-h1080-c/Dreams.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2705.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-D-a8TeEMxVU/T0u5OcN_KcI/AAAAAAAAQ3A/buaoFgy2i-Y/s1920-w1920-h1080-c/IMG_2705.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SutroSunset-WaterfallRock.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-F3PyWBuTa9A/Txo6n6KVzRI/AAAAAAABFQ4/bhv0lJobcUE/s1920-w1920-h1080-c/SutroSunset-WaterfallRock.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/060820-0818-ThePhotogs.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-m6gJXedR5K0/Tg1bJIJrdDI/AAAAAAAAAIk/luzGf-NHcC0/s1920-w1920-h1080-c/060820-0818-ThePhotogs.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Portofino2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-F33Ezsq01cw/TgkRlUvin5I/AAAAAAAI6wA/g434OYIBJiA/s1920-w1920-h1080-c/Portofino2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/110521-8046-PacificaLt2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-QOLm5NyrBAg/Tg1hGjt7CQI/AAAAAAAAc2A/oW-ErAUPpKY/s1920-w1920-h1080-c/110521-8046-PacificaLt2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_DX_3511_2_3_4_5_32bit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-QVbxD_ZZCa0/U_yjxBJn4WI/AAAAAAAB-6k/fAnDqFKCfh4/s1920-w1920-h1080-c/_DX_3511_2_3_4_5_32bit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/C21T0880.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uNim7D5ywdM/UqTGRcbr78I/AAAAAAAAXKY/2Fv7yLI2kZc/s1920-w1920-h1080-c/C21T0880.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Pescadero.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-FNrstx8M7hY/TyH51o60WuI/AAAAAAAAGTY/3nRvYRuPjEU/s1920-w1920-h1080-c/Pescadero.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Temple+Over+Kyoto.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-I7qT8fiUqZU/TgkSotvmFkI/AAAAAAAI6h0/ASyt4FPWAso/s1920-w1920-h1080-c/Temple%2BOver%2BKyoto.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_4154b.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-7FTPwrBoDBs/Ufb1a1gM-UI/AAAAAAAADK0/NrOPNAfCG7I/s1920-w1920-h1080-c/DSC_4154b.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0663-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-JLMulqzQsQQ/UqBrOg83JWI/AAAAAAAAgsY/vzUeMdvC-h0/s1920-w1920-h1080-c/DSC_0663-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB_130628_MCu_1-2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-IevMmNQigxY/Uc3F-z0I5qI/AAAAAAAAItw/eRKlk6yr6TY/s1920-w1920-h1080-c/GGB_130628_MCu_1-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090810-1930-NeedleAndHaystack.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-SUKN-r5lw5A/Tg1fNM6yIEI/AAAAAAAAAN8/PULlaJpHBkI/s1920-w1920-h1080-c/090810-1930-NeedleAndHaystack.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/2012.+purple+is+my+favorite+color.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-vtVHPLJKT3w/T9KLSzUhuOI/AAAAAAAABiY/3a5M4phhFs0/s1920-w1920-h1080-c/2012.%2Bpurple%2Bis%2Bmy%2Bfavorite%2Bcolor.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SealRocks-sunset-reflection.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-55UeILqE2s0/T0PDELei3HI/AAAAAAABFbU/4_nqVtef2m8/s1920-w1920-h1080-c/SealRocks-sunset-reflection.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/New+York+-+NEX7+-+Trey+Ratcliff+(8+of+21).png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-XxP1oir93Fg/U0MW6gL3miI/AAAAAAAJA0U/hP0D1e9JC-w/s1920-w1920-h1080-c/New%2BYork%2B-%2BNEX7%2B-%2BTrey%2BRatcliff%2B%25288%2Bof%2B21%2529.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Patience.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Gp7BKH79U6k/T_rPHeEUv4I/AAAAAAAAPL8/LSoFOwB9QNU/s1920-w1920-h1080-c/Patience.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP8828.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-RZKOyMbLobw/UONnVGAE9tI/AAAAAAAAyPM/60as7LUVuHI/s1920-w1920-h1080-c/IMGP8828.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/5-01-13-spider-crawler-lightning-road-albany-tx.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-oYOr7AcS0F4/UZUYFMNixiI/AAAAAAAAGL0/6fp4ZSWjH90/s1920-w1920-h1080-c/5-01-13-spider-crawler-lightning-road-albany-tx.png\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Blue+City.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-4wJlrgKnUsI/U0MZbQCL-5I/AAAAAAAJOwE/yL0yy2OMWtI/s1920-w1920-h1080-c/The%2BBlue%2BCity.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/06152012-12.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-_OVIBu35BFs/UOD9ybxkzmI/AAAAAAAAkNo/YyQXlMNgeEk/s1920-w1920-h1080-c/06152012-12.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/D30_0895.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-onm54VnIRFQ/SBnwVTP3Y4I/AAAAAAAAvJc/jJxlxmTu5t8/s1920-w1920-h1080-c/D30_0895.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Metal-1.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-TKsDKeRS95U/Tkrw6TiAyPI/AAAAAAAC4HY/bygELaJa5-s/s1920-w1920-h1080-c/Metal-1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0300.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-b_ZyO6A8eec/UNcwXdvdtMI/AAAAAAAAR4k/YcThGSa1EHE/s1920-w1920-h1080-c/DSC_0300.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6868.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Mc32ZHV--b0/SwIy9sStc0I/AAAAAAABLXg/AB-YvtyK-wk/s1920-w1920-h1080-c/DSC_6868.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/class3_05.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-EUrlRFim4uQ/Uo5D2fBJduI/AAAAAAAABZU/73PLVw3Xxk0/s1920-w1920-h1080-c/class3_05.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MarshalBeach-sunset-rocks-.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-_SFDsIPPKzI/TxhNwgko__I/AAAAAAABFhY/uz_fTrjtNFg/s1920-w1920-h1080-c/MarshalBeach-sunset-rocks-.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_O9V5569_HDR.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-WrzPVL3SMFs/Uq-D3XLVHUI/AAAAAAAAPBY/JQpQw38ggyM/s1920-w1920-h1080-c/_O9V5569_HDR.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-road-to-mountain-forever.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-n8kCRwIAl3I/U0MlTxDHALI/AAAAAAAJEL0/VwbBzYmP0nQ/s1920-w1920-h1080-c/trey-ratcliff-road-to-mountain-forever.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RodeoBeach-sunset-16x9.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-grccgI_cL8k/TwH0-_dHIvI/AAAAAAABFbM/sqNxtA-Gi30/s1920-w1920-h1080-c/RodeoBeach-sunset-16x9.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Sky+Painting.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-XZGw1LIoIQk/Ua2ANshiwmI/AAAAAAAAfX8/PIcgUJRHb3M/s1280-w1280-c-h720-k-no/Sky%2BPainting\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0816-Edit-Edit-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-dKrL8_a8MmE/UrWktdbZX_I/AAAAAAAAilY/2Ce0qzN9r3s/s1920-w1920-h1080-c/DSC_0816-Edit-Edit-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1204.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-NvzWYFZm9b0/UQmFrRIGaDI/AAAAAAAAlew/em5aqVHnV3M/s1920-w1920-h1080-c/IMG_1204.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_MSU8463.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-9SBIVQE_N98/UnDyKXBM-VI/AAAAAAAAGw8/JRqWBIObFek/s1920-w1920-h1080-c/_MSU8463.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_4067.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-oVqvzpNBaE8/UlmYCAD6pNI/AAAAAAAAQPQ/xDn8iGotkyo/s1920-w1920-h1080-c/DSC_4067.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_D3_0763-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-SzwsBTne5SM/U_yjvpyvA6I/AAAAAAAB-6A/q0imuvbf0Yw/s1920-w1920-h1080-c/_D3_0763-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_4772+p4.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uXesNMoRpN8/U08k4CCBTsI/AAAAAAAAvr0/7ZtIaGpNfHU/s1920-w1920-h1080-c/IMG_4772%2Bp4.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SutroSunset-rocks-misty.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-sSh1MI_KB_c/TwXF_f9Tr4I/AAAAAAAAL-g/ivbuKnmkfLI/s1920-w1920-h1080-c/SutroSunset-rocks-misty.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/the+docs.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-djAiXa_L7EU/TgtZGJZPcFI/AAAAAAAJBA0/Ih2FgNUBZYE/s1920-w1920-h1080-c/the%2Bdocs.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/AtAnchor.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-25-BIcSpaLU/UX-tEB0seYI/AAAAAAAAU2Y/SX0W4AL4YQM/s1920-w1920-h1080-c/AtAnchor.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/A+Razor+to+the+Sky.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-WUT3n130gGw/U0MR8lh-SbI/AAAAAAAIpgw/VO52olLVJN8/s1920-w1920-h1080-c/A%2BRazor%2Bto%2Bthe%2BSky.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/4070581709_a1c668a779_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/--ETG9eU1_Xw/Tgt5l8cyMwI/AAAAAAAIWTg/nWSbj2O5c6w/s1920-w1920-h1080-c/4070581709_a1c668a779_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6165.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-PAZT1pXjMM8/UrM5S_Ht1cI/AAAAAAAACVE/adGv8TflzYc/s1920-w1920-h1080-c/IMG_6165.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/CliffHouseSunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-aIBq7YhM6-M/TxMQytFssDI/AAAAAAAANXs/9RurRnKmOOw/s1920-w1920-h1080-c/CliffHouseSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01034.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/--Km5pB3lBaM/Ua3DdDBGtcI/AAAAAAAAPV4/p_BFy_Ps50w/s2560/DSC01034\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Big-Sur-Coastal-Seascape-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-LVkYomDgo1g/TwoREmpuoLI/AAAAAAAAMiE/duaVKfg5Blg/s1920-w1920-h1080-c/Big-Sur-Coastal-Seascape-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100804-4696-PololuMorn1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-hXPVBw1iPyc/Tg1gUs9WABI/AAAAAAAAAPU/J-g25o_00Gk/s1920-w1920-h1080-c/100804-4696-PololuMorn1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_1600.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GwSLzDzfyGA/UWoqCg-pk2I/AAAAAAAAMh0/JeyhZ3UqFys/s1920-w1920-h1080-c/MOL_1600.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP0652_3_4_tonemapped.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Sm0TD1_vzFo/ULrHwJOPf3I/AAAAAAAAEMY/NGUYdwUEtGY/s1920-w1920-h1080-c/IMGP0652_3_4_tonemapped.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/CGPier-storm-mono.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-gE1QbuQR45Q/TqiD0bdOG7I/AAAAAAAAE8w/fawdaKhXGu4/s1920-w1920-h1080-c/CGPier-storm-mono.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Night+Falls+on+Crater+Lake+-+Crater+Lake,+OR1.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-8h4vm06cRYo/UZURZQG4KwI/AAAAAAAAPOE/GltqdZojKKE/s1920-w1920-h1080-c/Night%2BFalls%2Bon%2BCrater%2BLake%2B-%2BCrater%2BLake%252C%2BOR1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0213.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uaGTbkMBysI/R7qYVHTGv6I/AAAAAAAABiQ/IU0yK7OgvYc/s1920-w1920-h1080-c/IMG_0213.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP1985_stitch.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-14sNcCfmulY/UOj-YBSQ8oI/AAAAAAAALsk/v-C7ZmZ-UIk/s1920-w1920-h1080-c/IMGP1985_stitch.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Reflection.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-qd290nJU0FM/UZYXTBbrzeI/AAAAAAAAVhI/gNH2tEzLT80/s1920-w1920-h1080-c/Reflection.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ibiza+dock.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-QyxGZeaBON4/TgtZEYemvZI/AAAAAAAAgVE/_VepyvNFiTE/s1920-w1920-h1080-c/ibiza%2Bdock.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trippin'-3.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-b4ZiJXUmZLg/TUCPhc_z2pI/AAAAAAAAAgM/uY37UMRjGsw/s1920-w1920-h1080-c/Trippin%2527-3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1612.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-2A31P4WBC8s/UtT1BndamcI/AAAAAAAAO1E/Qj5CF7S1UeU/s1920-w1920-h1080-c/DSC_1612.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/YosemiteFalls.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-1dANL8dJDT0/T6h0JShpn-I/AAAAAAAAIDk/l_dKhWvFXUs/s1920-w1920-h1080-c/YosemiteFalls.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/07_20090416.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-8kQQYYzz_l8/UZSathUsJGI/AAAAAAAAsUM/3Z4WK9CG8wE/s1920-w1920-h1080-c/07_20090416.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_7222-Edit-2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-yYJUfqBHHXw/UoffDIFgJOI/AAAAAAAARpQ/M7Nskp7pTDg/s1920-w1920-h1080-c/DSC_7222-Edit-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_9581.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-gcU_icksx-A/TnuyXEh2MeI/AAAAAAAAFhE/sjZHDkU_Vlg/s1920-w1920-h1080-c/IMG_9581.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20100525-IMG_6788-HDR-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/--y_TRuOOPTA/T_0KxukaPeI/AAAAAAAARw0/VTeenM1J2xI/s1920-w1920-h1080-c/20100525-IMG_6788-HDR-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MagicBallContest.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-6nBwDVfR-BE/UXrL2u6iqII/AAAAAAAAUro/CL47d2nXDzE/s1920-w1920-h1080-c/MagicBallContest.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3857-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-eDbulGr2hu8/Ur0CIxLk-FI/AAAAAAAAGA4/R7oAYMeXRws/s1920-w1920-h1080-c/IMG_3857-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP9268.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-K258GmbSDxM/T_TBV0i4kLI/AAAAAAAABro/rW_nlHdct7U/s1920-w1920-h1080-c/IMGP9268.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Hooded+Lady+of+the+Valley.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-31H2j9KKMi0/UTpeMK5JrEI/AAAAAAAAPHo/4QOl-12J750/s1920-w1920-h1080-c/Hooded%2BLady%2Bof%2Bthe%2BValley.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_MG_4776.CR2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-MxVUPW7j-L0/UCFpW985f5I/AAAAAAAAJI8/HQfELZDoN7I/s1920-w1920-h1080-c/_MG_4776.CR2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untitled-3-2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-1cz2zcbiz-4/Th0QVgyAMBI/AAAAAAAABC4/gVc-Bp_mFGs/s1920-w1920-h1080-c/untitled-3-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/sky_leaves.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-1o-jUyycpcE/UIdjwEWDS3I/AAAAAAAAED4/7Mj-xSqdO5E/s1920-w1920-h1080-c/sky_leaves.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TunnelViewWinter.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GGVPhdUiKwY/UOOZDe9JFQI/AAAAAAAAKiY/Noq6gsZlXxk/s1920-w1920-h1080-c/TunnelViewWinter.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3674678524_f49854f3b1_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ZGfUihferj8/TgtZGKAJjOI/AAAAAAAAdd8/e-EXjm51hhA/s1920-w1920-h1080-c/3674678524_f49854f3b1_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/I+Cover+the+Waterfront+-+Alki+Beach,+WA.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Zj8Aex6oXYo/UW6x5FfAtjI/AAAAAAAANiY/lukbqNiI2go/s1920-w1920-h1080-c/I%2BCover%2Bthe%2BWaterfront%2B-%2BAlki%2BBeach%252C%2BWA.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/morning+with+coffee+in+yellowstone.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-HdhuOcwGEcs/TgtZEZtITGI/AAAAAAAAVmw/nPx5UAR0qic/s1920-w1920-h1080-c/morning%2Bwith%2Bcoffee%2Bin%2Byellowstone.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Bristlecone_Stars.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-xu-TTAEZtQo/UbtDr65unqI/AAAAAAAABKo/-2asqRlMolw/s1920-w1920-h1080-c/Bristlecone_Stars.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/StillStanding.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Bz1rXnbAy1s/UQNThZKgMRI/AAAAAAAAScM/eUItE7glPn0/s1920-w1920-h1080-c/StillStanding.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Salt_Point.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-FDe6_2rxtEs/UkBgjq9ZJmI/AAAAAAAAELo/zT29ZhT2NAA/s1920-w1920-h1080-c/Salt_Point.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untouched.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-KPCupfttZeg/UYEMyuiN84I/AAAAAAAAU5k/74L4iR6gMDk/s1920-w1920-h1080-c/untouched.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TacomaChiluly--10.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/--LqjPK05as8/TsSfH1cu69I/AAAAAAAATUE/JyMyDxcW1Ms/s1920-w1920-h1080-c/TacomaChiluly--10.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_5165-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-5ntl45J8Lxg/UiHZG2mJ1nI/AAAAAAAAb8s/f10TxWDh2zA/s1920-w1920-h1080-c/DSC_5165-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Group+TWO.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-HbF8zRNZt-o/UMPHYkBuCMI/AAAAAAAAKUQ/GYFSC7-LVqs/s1920-w1920-h1080-c/Group%2BTWO.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/CrackedIsSometimesGood.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-5lm5qxI06OU/TqkYjHdt_lI/AAAAAAAAKOc/Eqb40U2Jsiw/s1920-w1920-h1080-c/CrackedIsSometimesGood.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0472.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ot6zDqm0p1s/UM-oZwFOYBI/AAAAAAAAImc/_9QNnbQXa5Y/s1920-w1920-h1080-c/IMG_0472.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_2167.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-HW1I0DVsq6A/UlmXtm9TvGI/AAAAAAAAQOM/MBQeGBzVB2M/s1920-w1920-h1080-c/MOL_2167.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/T3_IMG_3936.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-r3jKfQruwv4/Uc6B8fRsKmI/AAAAAAAAIAg/VCLgE4EqjtY/s1920-w1920-h1080-c/T3_IMG_3936.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8941Autumn.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-TFEx1ptMuoc/UpN7a9C-YlI/AAAAAAAAKUI/A3KeBF2vSnE/s1920-w1920-h1080-c/8941Autumn.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6682.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-l9peRQpmVRQ/T54s3ZTfGBI/AAAAAAAAJQk/-_8lDImWzwE/s1920-w1920-h1080-c/IMG_6682.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_5908.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-nFgpOv4T3M0/TWLTD6xOiJI/AAAAAAAAPFs/PSfnLjBIrVU/s1920-w1920-h1080-c/IMG_5908.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0935.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-acdH1dPsUdk/ToQNXK7HgDI/AAAAAAAATyM/95rFxKIy_Dw/s1920-w1920-h1080-c/IMG_0935.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/11-17-12-India+Trip-Kanheri+Caves+(JPEGs)-20.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-ko4QbKawOzs/UMrlGpBHGtI/AAAAAAAAMbA/TVYDrsxchf4/s1920-w1920-h1080-c/11-17-12-India%2BTrip-Kanheri%2BCaves%2B%2528JPEGs%2529-20.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_MSU3203.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-E5h_DjLkO9g/UJGAP4Q_1jI/AAAAAAAABI0/xb_a1wwuddA/s1920-w1920-h1080-c/_MSU3203.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_5328.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-3vJ7YydpvVU/T3Fad0DfOvI/AAAAAAAAIIg/rJ5piFMcgKg/s1920-w1920-h1080-c/IMG_5328.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_5974.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-qwOaqE4cYCg/Ur0CAf2nO5I/AAAAAAAAF-I/b2vYQp-TxW4/s1920-w1920-h1080-c/IMG_5974.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_1755.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-nVpMVoplcjA/UlmXtr57GiI/AAAAAAAAQOo/YPNo51GXyLU/s1920-w1920-h1080-c/MOL_1755.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2828.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-RM253k65h0g/RuWXqF2PN3I/AAAAAAAAASw/bWQAJ47AvxQ/s1920-w1920-h1080-c/IMG_2828.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_T3_0788.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-JhsS5Efemfw/UAUNCf1J1aI/AAAAAAAACno/1178JtnVPVQ/s1920-w1920-h1080-c/IMG_T3_0788.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0471-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-IOB7UYjdfKk/UWxRNQruJpI/AAAAAAAAqYo/ZYOTEFEaUUQ/s1920-w1920-h1080-c/DSC_0471-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_8176.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-97kOELXyRw0/UpKzpdSGLsI/AAAAAAAACU8/t7toymdF9ys/s1920-w1920-h1080-c/IMG_8176.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSCF0155-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-v5W9oXSutcs/UjX_nq7Q1DI/AAAAAAAAPVE/A201XC4J5qs/s1920-w1920-h1080-c/DSCF0155-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1017.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-OvptEVwUDuA/UE_P875OPoI/AAAAAAAAPWM/ocqkejUt5AQ/s1920-w1920-h1080-c/IMG_1017.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_4701.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-SCc_19Vl5Ng/SuoniirQlZI/AAAAAAAAGOo/UsRZ0o6GJeI/s1920-w1920-h1080-c/IMG_4701.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6000.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-GMJoozxAcgE/Tk7h8aldhrI/AAAAAAAAFZ8/SnFiv5CZcYE/s1920-w1920-h1080-c/IMG_6000.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/austin+2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-G4bChH6K3mY/ULdpTli69GI/AAAAAAAAJIg/cfku63jtnY4/s1920-w1920-h1080-c/austin%2B2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2526-3b.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-11t9DgvNYhY/UG3HjpR9T9I/AAAAAAAAIO4/FSkNbPYzUMA/s1920-w1920-h1080-c/IMG_2526-3b.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6451.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-YtE41zDzZZM/UBCa4Ui2cuI/AAAAAAAAOMg/Uzs03aPfWak/s1920-w1920-h1080-c/IMG_6451.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_4369+-+Large.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-mPicgJz8Yes/USOzc3Ki2TI/AAAAAAAADVA/QzQqtctMISI/s1920-w1920-h1080-c/IMG_4369%2B-%2BLarge.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0109.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-1n2blvh-lkQ/TX_WqEAkKAI/AAAAAAAAAI4/xlaLPLcp6nI/s1920-w1920-h1080-c/DSC_0109.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20120128-20120128-ENS_3119_20_21_tonemapped-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-HBDE39Hgv9M/TyXGMvNUzjI/AAAAAAAAA_A/nBMmnHMcT0o/s1920-w1920-h1080-c/20120128-20120128-ENS_3119_20_21_tonemapped-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6499.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-iTxENBfrZfY/T5ZLrTvoeCI/AAAAAAAAJD8/ik0c31ZcTOw/s1920-w1920-h1080-c/IMG_6499.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MorningGlory.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-8K8X3n7zPKE/UOOZGSlNvjI/AAAAAAAAKig/yTCbEVh-lCw/s1920-w1920-h1080-c/MorningGlory.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1984.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-MXAy1Q1e8pw/TtPRnPCM4AI/AAAAAAAAQc0/Vvc74HYL35s/s1920-w1920-h1080-c/IMG_1984.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_1841.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-LQXZpNUUdw8/UWoqJONj7-I/AAAAAAAAMh0/7m100XOFcEo/s1920-w1920-h1080-c/MOL_1841.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/9082667654_c7919ec6ed_o.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-iVr5r1Yycbs/UkPSMp_2CZI/AAAAAAAALrA/ME5aBtr5fdM/s1920-w1920-h1080-c/9082667654_c7919ec6ed_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Wyoming-5.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-jwJEWGscrls/T-dsvGIbyRI/AAAAAAAABp4/Pgn_t5V2LNs/s1920-w1920-h1080-c/Wyoming-5.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_8981.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-FeRCoqwVOB4/Tkgq-geJE3I/AAAAAAAAFYo/xdj-91ytvg8/s1920-w1920-h1080-c/IMG_8981.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/04_20080526.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ENSOsH-5iPQ/UZSar_1xTLI/AAAAAAAAsTo/CjPKgR3jXAs/s1920-w1920-h1080-c/04_20080526.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0432.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-jmMSVP61kaQ/TqtX5OPLfZI/AAAAAAAAFkk/8dE_CxpTiHM/s1920-w1920-h1080-c/IMG_0432.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/tah+prohm+ruins.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-N-jkCCpnvmM/Tg0t85f5-dI/AAAAAAAABj8/otdYcgGq4ZU/s1920-w1920-h1080-c/tah%2Bprohm%2Bruins.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0642.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Lk6txIIotmM/ToZuJ99slYI/AAAAAAAAQIg/y0jvaiYTIHA/s1920-w1920-h1080-c/IMG_0642.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MC2_8779.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-QpB1YMuAXEA/TikI95S2KmI/AAAAAAAAPSw/kJPeHft92m4/s1920-w1920-h1080-c/MC2_8779.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0366.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-E57LJIzkkd8/UM-oHjiKHJI/AAAAAAAAIjY/QKAP7QTXBNY/s1920-w1920-h1080-c/IMG_0366.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_1818.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/--qL9ddvO4gs/UWoqHffdewI/AAAAAAAAMh0/uf5mp_xqsHI/s1920-w1920-h1080-c/MOL_1818.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3027.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Xdz2ceNVzdw/Tm5L7A9tdYI/AAAAAAAAFsg/k4Tjwbi73Cw/s1920-w1920-h1080-c/IMG_3027.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0242.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ejLi6Bg7IUI/TonR_AZLYLI/AAAAAAAAQWk/A1bVgL3p2A4/s1920-w1920-h1080-c/IMG_0242.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0423-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-iNpCGNJTrRo/Ugbk1ZMLczI/AAAAAAAAOE0/FZWVWqXGdT8/s1920-w1920-h1080-c/DSC_0423-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/WahclelaFalls.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-q9gWC1ZIAvg/UbZrg9lIcAI/AAAAAAAAL4I/xzSlyLfAGrQ/s1920-w1920-h1080-c/WahclelaFalls.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_9166.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-CaqC7SHp_2w/SF8sHokHjwI/AAAAAAAACyw/gC4j26zZen8/s1920-w1920-h1080-c/DSC_9166.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_7449.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Bo0_R3Hshio/UOUefGb4bpI/AAAAAAAARno/EBZGWRhWwzk/s1920-w1920-h1080-c/IMG_7449.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/path_of_leaves.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-y9mHkm6F9NI/UJH6oUvIN3I/AAAAAAAADqU/ueLAmjtceMI/s1920-w1920-h1080-c/path_of_leaves.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/700_1905.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-nEEPZA887gc/SRGbDPl6jgI/AAAAAAAADOc/LH5WYu-Vc1k/s1920-w1920-h1080-c/700_1905.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_2079-1.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ps4uT_pEdCE/RpKjlC16MuI/AAAAAAAAAt0/n09gNExGMl0/s1920-w1920-h1080-c/DSC_2079-1.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MWF_6457-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-M6BRAUZHPyo/UfbbKobVOKI/AAAAAAAAK_M/4WIHtFv7Idk/s1920-w1920-h1080-c/MWF_6457-2.jpg\"]}]}}","module.exports = {\"background-patterns\":{\"image\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/01.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern1.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern2.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern3.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern4.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern5.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern6.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern7.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-1667135_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-2069198_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-2425614_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-2790359_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-2863542_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-3288642_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-geometric-pattern-background_1319-242.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/animals-16908_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/autumn-1801896_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/backdrop-3346304_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/background-1141891_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/background-1141892_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/basket-2023197_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begflo41.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begflo45.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begflo55.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begflo63.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begtkan01.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begtkan20.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begtkan56.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo02.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo102.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo106.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo135.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo33.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo75.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo76.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo80.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan11.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan15.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan17.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan21.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan30.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan33.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan46.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan48.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan50.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan56.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/blue-1545368_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/blue-3368023_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/braiding-2697075_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cactus-2191647_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cactus-3324067_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cactus-3334141_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/camouflage-145980_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/camouflage-33708_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor05.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor125.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor126.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor129.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor131.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor139.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor15.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor41.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor44.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/christmas-1091551_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/circle-2696910_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/circles-1005197_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/circles-1005321_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cube-402231_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cute-3047767_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/decor-763806_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/decorative-1781458_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/design-3289984_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/diamonds-1524471_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/dreamcatcher-3334128_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/floral-1299131_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/floral-1788412_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/floral-4655084_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/floral-pattern-1603073_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/foil02.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/foil09.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/foil10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/foil14.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/galk06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/galk07.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/galk09.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/geluzor81.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/geluzor82.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/geluzor84.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/geometric-patterns-1978688_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/goltum10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/gothic-756211_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/green-753533_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/green-763804_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart05.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart32.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart33.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart34.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart39.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart41.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart51.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart53.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/hexagon-1312786_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-1bjZ4CEqGLSGiWI.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-3PniNaR4EM.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-6oQV3ly2I1vFY5Je.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-9fPsO9xLXxzONha.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-AJ5CKq0awy4d9EF.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-Elrl20LiRFHXr.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-Fu9UMDonFXB4mIqU.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-HxkaMXBjzP.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-UwawezoPZ9I.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-VFpI9G4V62V.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-VcTxveu7iXkz.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-ka9dtT7zZFsY.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-nJw0PAz0l03dSZY.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-ybmMVJ4cYA.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-z9Xwv2KKSbgW2b.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga16.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga17.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga25.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga31.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga32.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga37.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/kortkan03.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/kortkan06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/kortkan07.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/lilflow110.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/lilflow24.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/lilflow82.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/lilflow84.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/magnolia-732331_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/meha10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/meha18.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/meha23.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/mesh-2697072_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic18.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic28.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic59.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic82.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic83.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic87.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic88.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/mosaic-2790339_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/music57.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/music58.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-1008150_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-3289978_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-403769_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-5415668_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-728509_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/purple-755266_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/purple-756209_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rail-2721626_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast02.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast11.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast22.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast38.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast43.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast46.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast48.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast59.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast60.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast68.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast69.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast79.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast83.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/roses-5095521_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/roses-5100472_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor12.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor26.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor27.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor35.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor67.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sand89.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-1320742_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-1781493_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-1837442_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-3289975_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1085294_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1085297_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1086306_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1086309_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1086311_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1089796_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1089797_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1822610_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-5095737_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-757848_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sersv01.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sersv32.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seruzor06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seruzor47.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sinkrasuz10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sinkrasuz101.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sinkrasuz37.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star-2721633_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star02.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star41.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star48.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star49.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/stars-1005267_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/tile-1892631_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/tree-5970709_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/tree-5970776_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/triangle-753534_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/vector-1603109_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/violet10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/wave-2697053_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/wave-2721632_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/white-2484120_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/white-abstract-background_23-2148806274.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/white-abstract-background_23-2148810246.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/white-abstract-background_23-2148810353.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/zolot31.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/zolot47.png\"]}}","var map = {\n\t\"./attention/attention.mp3\": 17533\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 10253;","var map = {\n\t\"./marching-band-dave-girtsman/marching-band-dave-girtsman.mp3\": 65705\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 81089;","var map = {\n\t\"./beep_positive/beep_positive.mp3\": 66391,\n\t\"./beep_up/beep_up.mp3\": 51922,\n\t\"./bleep/bleep.mp3\": 83113,\n\t\"./cellular_click/cellular_click.mp3\": 70180,\n\t\"./computer_chime/computer_chime.mp3\": 14528,\n\t\"./ether/ether.mp3\": 86123,\n\t\"./good_chime/good_chime.mp3\": 11691,\n\t\"./mono_u/mono_u.mp3\": 63414,\n\t\"./pixel_beep/pixel_beep.mp3\": 66488,\n\t\"./plop/plop.mp3\": 88711,\n\t\"./pop/pop.mp3\": 730,\n\t\"./retro_game/retro_game.mp3\": 76496,\n\t\"./tiny_noize/tiny_noize.mp3\": 28288\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 60255;","var map = {\n\t\"./future-synth/future-synth.mp3\": 66849,\n\t\"./marching-band-dave-girtsman/marching-band-dave-girtsman.mp3\": 36445,\n\t\"./retro-chiptune/retro-chiptune.mp3\": 15737\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 90683;","var map = {\n\t\"./_auth_request/_auth_request.mp3\": 48710,\n\t\"./_call_connecting/_call_connecting.mp3\": 2301,\n\t\"./_phone_busy/_phone_busy.mp3\": 33246\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 60623;","var constants = {\n\n    ASSETS_URL_PREFIX: './',\n    STORAGE_NAME: 'xabber-storage',\n    STORAGE_VERSION: 'v8',\n\n    CONTAINER_ELEMENT: \"#xabber-container\",\n\n    FAVICON_DEFAULT: \"assets/images/favicon.png\",\n    FAVICON_DEFAULT_GREY: \"assets/images/favicon-grey.png\",\n    FAVICON_MESSAGE: \"assets/images/favicon-message.png\",\n    BACKGROUND_IMAGE: \"assets/images/background.png\",\n\n    WIDTH_MEDIUM: 1650,\n    WIDTH_NARROW: 1280,\n    WIDTH_TINY: 1152,\n\n    LOG_LEVEL_NONE: -1,\n    LOG_LEVEL_ERROR: 1,\n    LOG_LEVEL_WARN: 2,\n    LOG_LEVEL_INFO: 3,\n    LOG_LEVEL_DEBUG: 4,\n\n    LOG_LEVEL: 'ERROR',\n\n    KEY_BACKSPACE: 8,\n    KEY_TAB: 9,\n    KEY_ENTER: 13,\n    KEY_SHIFT: 16,\n    KEY_CTRL: 17,\n    KEY_ESCAPE: 27,\n    KEY_SPACE: 32,\n    KEY_ARROW_LEFT: 37,\n    KEY_ARROW_UP: 38,\n    KEY_ARROW_RIGHT: 39,\n    KEY_ARROW_DOWN: 40,\n    KEY_DELETE: 46,\n    KEY_FORWARD_SLASH: 47,\n    KEY_AT: 50,\n\n    VOICE_MSG_TIME: 120,\n\n    PASSWORD_DOT: String.fromCharCode(0x2022),\n\n    CONNECTION_URL: null,\n\n    CONN_STATUSES: {\n        0: 'ERROR',\n        1: 'CONNECTING',\n        2: 'CONNFAIL',\n        3: 'AUTHENTICATING',\n        4: 'AUTHFAIL',\n        5: 'CONNECTED',\n        6: 'DISCONNECTED',\n        7: 'DISCONNECTING',\n        8: 'ATTACHED',\n        9: 'REDIRECT',\n        10: 'CONNTIMEOUT'\n    },\n\n    PREKEYS_COUNT: 100,\n    MIN_PREKEYS_COUNT: 80,\n\n    AES_KEY_LENGTH: 128,\n    AES_TAG_LENGTH: 128,\n    AES_EXTRACTABLE: true,\n\n    BAD_CONN_STATUSES: [0, 2, 4, 6, 10],\n\n    RECONNECTION_TIMEOUTS: [5000, 10000, 15000],\n    DOWNTIME_RECONNECTION_TIMEOUT: 15,\n    PING_SENDING_INTERVAL: 10,\n\n    IDLING_MINIMAL_TIMEOUT: 10,\n    IDLING_MAXIMUM_TIMEOUT: 90,\n    IDLING_DEFAULT_TIMEOUT: 30,\n\n    STATUS_WEIGHTS: {\n        chat: 1,\n        online: 2,\n        away: 3,\n        xa: 4,\n        dnd: 5,\n        offline: 6,\n        unavailable: 7\n    },\n\n    PRESENT_INTERVAL: 900000,\n    CHATSTATE_INTERVAL_COMPOSING_AUDIO: 5000,\n    CHATSTATE_TIMEOUT_PAUSED: 15000,\n    CHATSTATE_TIMEOUT_STOPPED: 5000,\n    CHATSTATE_TIMEOUT_PAUSED_AUDIO: 10000,\n\n    JINGLE_WAITING_TIME: 60,\n\n    SYNCHRONIZATION_RSM_MAX: 25,\n\n    REGISTRATION_DOMAINS: [],\n    LOGIN_DOMAINS: [],\n    TRUSTED_DOMAINS: [],\n    RECOMMENDED_DOMAIN: '',\n    REGISTRATION_BUTTON: true,\n    REGISTRATION_CUSTOM_DOMAIN: true,\n    LOGIN_CUSTOM_DOMAIN: true,\n\n    TURN_SERVERS_LIST: [\n        {\n            urls: 'turn:numb.viagenie.ca',\n            credential: 'muazkh',\n            username: 'webrtc@live.com'\n        },\n        {\n            urls: \"turn:turn.editcompany.org:5439\",\n            username: \"test\",\n            credential: \"1111\"\n        },\n        {\n            urls: 'turn:192.158.29.39:3478?transport=udp',\n            credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n            username: '28224511:1379330808'\n        },\n        {\n            urls: 'turn:192.158.29.39:3478?transport=tcp',\n            credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n            username: '28224511:1379330808'\n        }\n    ],\n\n    JINGLE_MSG_PROPOSE: 0,\n    JINGLE_MSG_REJECT: 1,\n    JINGLE_MSG_ACCEPT: 2,\n\n    MSG_BLOCKED: -2,\n    MSG_ERROR: -1,\n    MSG_PENDING: 0,\n    MSG_SENT: 1,\n    MSG_DELIVERED: 2,\n    MSG_DISPLAYED: 3,\n    MSG_ARCHIVED: 4,\n    MSG_SAVED: 5,\n\n    RSM_ATTRIBUTES: ['max', 'first', 'last', 'after', 'before', 'index', 'count'],\n    MAM_ATTRIBUTES: ['with', 'start', 'end'],\n\n    GENERAL_GROUP_ID: 1,\n    NON_ROSTER_GROUP_ID: 2,\n\n    MATERIAL_COLORS: [\n        \"red\", \"green\", \"blue\", \"deep-purple\", \"orange\", \"lime\",\n        \"pink\", \"purple\", \"indigo\", \"light-blue\", \"cyan\", \"teal\",\n        \"light-green\", \"amber\", \"deep-orange\", \"brown\", \"blue-grey\"\n    ],\n\n    MAX_AVATAR_FILE_SIZE: 64000,\n\n    AVATAR_PRIORITIES: {\n        VCARD_AVATAR: 0,\n        PUBSUB_AVATAR: 1\n    },\n\n    EMAIL_FOR_JOIN_TRANSLATION: \"info@xabber.com\",\n\n    AVATAR_SIZES: {\n        TOOLBAR_ACCOUNT_ITEM: 32,\n        SETTINGS_ACCOUNT_ITEM: 32,\n        XABBER_ACCOUNT: 32,\n        SYNCHRONIZE_ACCOUNT_ITEM: 36,\n        MENTION_ITEM: 36,\n        ACCOUNT_SETTINGS_LEFT: 96,\n        ACCOUNT_VCARD_EDIT: 80,\n        ROSTER_RIGHT_ACCOUNT_ITEM: 38,\n        ROSTER_LEFT_ACCOUNT_ITEM: 40,\n        PARTICIPANT_DETAILS_ITEM: 48,\n        CONTACT_RIGHT_ITEM: 32,\n        GROUPCHAT_MEMBER_ITEM: 32,\n        CONTACT_LEFT_ITEM: 32,\n        CONTACT_BLOCKED_ITEM: 32,\n        CONTACT_DETAILS: 192,\n        GROUP_SETTINGS: 96,\n        CHAT_ITEM: 40,\n        CHAT_HEAD: 40,\n        CHAT_MESSAGE: 32,\n        CHAT_BOTTOM: 48,\n        XABBER_VOICE_CALL_VIEW: 128,\n        OMEMO_ENABLE_SETTING: 182\n    },\n\n\n    SYNC_WAY_DATA: {\n        no: {\n            tip: 'xabber_account__sync__settings_already_synced',\n            icon: 'mdi-cloud-check'\n        },\n        from_server: {\n            tip: 'xabber_account__sync__settings_will_be_downloaded',\n            icon: 'mdi-cloud-download'\n        },\n        to_server: {\n            tip: 'xabber_account__sync__settings_will_be_uploaded',\n            icon: 'mdi-cloud-upload'\n        },\n        delete: {\n            tip: 'xabber_account__sync__acc_will_be_deleted',\n            icon: 'mdi-delete'\n        },\n        off_local: {\n            tip: 'xabber_account__sync__local_acc',\n            icon: 'mdi-cloud-outline-off'\n        },\n        off_remote: {\n            tip: 'xabber_account__sync__remote_acc',\n            icon: 'mdi-cloud-outline-off'\n        }\n    },\n\n    SYNCED_STATUS_DATA: {\n        off: {\n            tip: 'xabber_account__sync_status__disabled',\n            icon: 'mdi-cloud-outline-off'\n        },\n        yes: {\n            tip: 'xabber_account__sync_status__synced',\n            icon: 'mdi-cloud-check'\n        },\n        no: {\n            tip: 'xabber_account__sync_status__not_synced',\n            icon: 'mdi-cloud'\n        }\n    },\n\n    EMOJI_LIST_NAME: function (emoji_list) {\n        return {\n            \"smiles_and_people\": 'emoji_list__catelory_name__smiles_and_people',\n            \"body_and_clothes\": 'emoji_list__catelory_name__body_and_clothes',\n            \"animals_and_nature\": 'emoji_list__catelory_name__animals_and_nature',\n            \"food_and_drinks\": 'emoji_list__catelory_name__food_and_drinks',\n            \"travel_and_places\": 'emoji_list__catelory_name__travel_and_places',\n            \"events\": 'emoji_list__catelory_name__events',\n            \"objects\": 'emoji_list__catelory_name__objects',\n            \"signs\": 'emoji_list__catelory_name__signs'\n        }[emoji_list]\n    },\n\n    QUOTE_MARKER: '&gt;',\n    MARKUP_TAGS: ['bold', 'underline', 'italic', 'strike', 'link', 'quote'],\n\n    BLANK_VIDEO: {\n        OGG: 'data:video/ogg;base64, ',\n        MP4: 'data:video/mp4;base64, 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',\n        WEBM: 'data:video/webm;base64, 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qqqruu6sgxQVdd1XVmWZQCu67qyLMsCAAAOHAAAAoygk4wqi7DRhAsPQKEhKwKAKAAAwBimFFPKMCYhpBAaxiSEFEImJaXSUqogpFJSKRWEVEoqJaOUUmopVRBSKamUCkIqJZVSAADYgQMA2IGFUGjISgAgDwCAMEYpxhhzTiKkFGPOOScRUoox55yTSjHmnHPOSSkZc8w556SUzjnnnHNSSuacc845KaVzzjnnnJRSSuecc05KKSWEzkEnpZTSOeecEwAAVOAAABBgo8jmBCNBhYasBABSAQAMjmNZmuZ5omialiRpmud5niiapiZJmuZ5nieKqsnzPE8URdE0VZXneZ4oiqJpqirXFUXTNE1VVV2yLIqmaZqq6rowTdNUVdd1XZimaaqq67oubFtVVdV1ZRm2raqq6rqyDFzXdWXZloEsu67s2rIAAPAEBwCgAhtWRzgpGgssNGQlAJABAEAYg5BCCCFlEEIKIYSUUggJAAAYcAAACDChDBQashIASAUAAIyx1lprrbXWQGettdZaa62AzFprrbXWWmuttdZaa6211lJrrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmstpZRSSimllFJKKaWUUkoppZRSSgUA+lU4APg/2LA6wknRWGChISsBgHAAAMAYpRhzDEIppVQIMeacdFRai7FCiDHnJKTUWmzFc85BKCGV1mIsnnMOQikpxVZjUSmEUlJKLbZYi0qho5JSSq3VWIwxqaTWWoutxmKMSSm01FqLMRYjbE2ptdhqq7EYY2sqLbQYY4zFCF9kbC2m2moNxggjWywt1VprMMYY3VuLpbaaizE++NpSLDHWXAAAd4MDAESCjTOsJJ0VjgYXGrISAAgJACAQUooxxhhzzjnnpFKMOeaccw5CCKFUijHGnHMOQgghlIwx5pxzEEIIIYRSSsaccxBCCCGEkFLqnHMQQgghhBBKKZ1zDkIIIYQQQimlgxBCCCGEEEoopaQUQgghhBBCCKmklEIIIYRSQighlZRSCCGEEEIpJaSUUgohhFJCCKGElFJKKYUQQgillJJSSimlEkoJJYQSUikppRRKCCGUUkpKKaVUSgmhhBJKKSWllFJKIYQQSikFAAAcOAAABBhBJxlVFmGjCRcegEJDVgIAZAAAkKKUUiktRYIipRikGEtGFXNQWoqocgxSzalSziDmJJaIMYSUk1Qy5hRCDELqHHVMKQYtlRhCxhik2HJLoXMOAAAAQQCAgJAAAAMEBTMAwOAA4XMQdAIERxsAgCBEZohEw0JweFAJEBFTAUBigkIuAFRYXKRdXECXAS7o4q4DIQQhCEEsDqCABByccMMTb3jCDU7QKSp1IAAAAAAADADwAACQXAAREdHMYWRobHB0eHyAhIiMkAgAAAAAABcAfAAAJCVAREQ0cxgZGhscHR4fICEiIyQBAIAAAgAAAAAggAAEBAQAAAAAAAIAAAAEBB9DtnUBAAAAAAAEPueBAKOFggAAgACjzoEAA4BwBwCdASqwAJAAAEcIhYWIhYSIAgIABhwJ7kPfbJyHvtk5D32ych77ZOQ99snIe+2TkPfbJyHvtk5D32ych77ZOQ99YAD+/6tQgKOFggADgAqjhYIAD4AOo4WCACSADqOZgQArADECAAEQEAAYABhYL/QACIBDmAYAAKOFggA6gA6jhYIAT4AOo5mBAFMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAGSADqOFggB6gA6jmYEAewAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAj4AOo5mBAKMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAKSADqOFggC6gA6jmYEAywAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAz4AOo4WCAOSADqOZgQDzADECAAEQEAAYABhYL/QACIBDmAYAAKOFggD6gA6jhYIBD4AOo5iBARsAEQIAARAQFGAAYWC/0AAiAQ5gGACjhYIBJIAOo4WCATqADqOZgQFDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggFPgA6jhYIBZIAOo5mBAWsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAXqADqOFggGPgA6jmYEBkwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIBpIAOo4WCAbqADqOZgQG7ADECAAEQEAAYABhYL/QACIBDmAYAAKOFggHPgA6jmYEB4wAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIB5IAOo4WCAfqADqOZgQILADECAAEQEAAYABhYL/QACIBDmAYAAKOFggIPgA6jhYICJIAOo5mBAjMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAjqADqOFggJPgA6jmYECWwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYICZIAOo4WCAnqADqOZgQKDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggKPgA6jhYICpIAOo5mBAqsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCArqADqOFggLPgA6jmIEC0wARAgABEBAUYABhYL/QACIBDmAYAKOFggLkgA6jhYIC+oAOo5mBAvsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAw+ADqOZgQMjADECAAEQEAAYABhYL/QACIBDmAYAAKOFggMkgA6jhYIDOoAOo5mBA0sAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA0+ADqOFggNkgA6jmYEDcwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIDeoAOo4WCA4+ADqOZgQObADECAAEQEAAYABhYL/QACIBDmAYAAKOFggOkgA6jhYIDuoAOo5mBA8MAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA8+ADqOFggPkgA6jhYID+oAOo4WCBA+ADhxTu2sBAAAAAAAAEbuPs4EDt4r3gQHxghEr8IEK'\n    },\n\n    MIME_TYPES: {\n        image: [\n            'image/gif',\n            'image/jpeg',\n            'image/pjpeg',\n            'image/png',\n            'image/svg+xml',\n            'image/tiff',\n            'image/vnd.microsoft.icon',\n            'image/vnd.wap.wbmp',\n            'image/webp'\n        ],\n        audio: [\n            'audio/basic',\n            'audio/L24',\n            'audio/mp4',\n            'audio/aac',\n            'audio/mpeg',\n            'audio/ogg',\n            'audio/ogg; codecs=opus',\n            'audio/ogg; codecs=opus+voice',\n            'audio/vorbis',\n            'audio/x-ms-wma',\n            'audio/x-ms-wax',\n            'audio/vnd.rn-realaudio',\n            'audio/vnd.wave',\n            'audio/webm',\n            'audio/x-wav'\n        ],\n        video: [\n            'video/mpeg',\n            'video/mp4',\n            'video/ogg',\n            'video/quicktime',\n            'video/webm',\n            'video/x-ms-wmv',\n            'video/x-flv',\n            'video/3gpp',\n            'video/3gpp2'\n        ],\n        document: [\n            'text/cmd',\n            'text/css',\n            'text/csv',\n            'text/html',\n            'text/javascript (Obsolete)',\n            'text/plain',\n            'text/php',\n            'text/xml',\n            'text/markdown',\n            'text/cache-manifestapplication/json',\n            'application/xml',\n            'application/vnd.oasis.opendocument.text',\n            'application/vnd.oasis.opendocument.graphics',\n            'application/msword'\n        ],\n        pdf: [\n            'application/pdf'\n        ],\n        table: [\n            'application/vnd.oasis.opendocument.spreadsheet',\n            'application/vnd.ms-excel'\n        ],\n        archive: [\n            'application/zip',\n            'application/gzip',\n            'application/x-rar-compressed',\n            'application/x-tar',\n            'application/x-7z-compressed'\n        ],\n        presentation: [\n            'application/vnd.ms-powerpoint',\n            'application/vnd.oasis.opendocument.presentation'\n        ]\n    },\n\n    languages: {\n        \"en\": \"English\",\n        \"ar-SA\": \"العربية\",\n        \"az-AZ\": \"Azərbaycanca\",\n        \"be-BY\": \"Беларуская\",\n        \"bg-BG\": \"Български\",\n        \"bs-BA\": \"Bosanski\",\n        \"ca-ES\": \"Català\",\n        \"cs-CZ\": \"Čeština\",\n        \"cy-GB\": \"Cymraeg\",\n        \"da-DK\": \"Dansk\",\n        \"de-DE\": \"Deutsch\",\n        \"el-GR\": \"Ελληνικά\",\n        \"es419\": \"Spanish Latin America\",\n        \"es-ES\": \"Español\",\n        \"et-EE\": \"Eesti\",\n        \"fa-IR\": \"فارسی\",\n        \"fi-FI\": \"Suomi\",\n        \"fil-PH\": \"Pilipino\",\n        \"fr-FR\": \"Français\",\n        \"ga-IE\": \"Gaeilge\",\n        \"he\": \"עברית\",\n        \"hi-IN\": \"हिन्दी\",\n        \"hr-HR\": \"Hrvatski\",\n        \"hu-HU\": \"Magyar\",\n        \"hy-AM\": \"Հայերեն\",\n        \"in-ID\": \"Bahasa Indonesia\",\n        \"is-IS\": \"Íslenska\",\n        \"it-IT\": \"Italiano\",\n        \"ja-JP\": \"日本語\",\n        \"ka-GE\": \"ქართული\",\n        \"kmr-TR\": \"Kurmancî (Kurdî)\",\n        \"ko-KR\": \"한국어\",\n        \"ku-TR\": \"Kurdî\",\n        \"ky-KG\": \"Кыргызча\",\n        \"la-LA\": \"Latina\",\n        \"lb-LU\": \"Luxembourgish\",\n        \"lt-LT\": \"Lietuvių\",\n        \"mk-MK\": \"Македонски\",\n        \"mn-MN\": \"Монгол\",\n        \"mr-IN\": \"मराठी\",\n        \"ms-MY\": \"Bahasa Melayu\",\n        \"nb-NO\": \"Norsk (bokmål)\",\n        \"ne-NP\": \"Nepālī\",\n        \"nl-NL\": \"Nederlands\",\n        \"no-NO\": \"Norsk (nynorsk)\",\n        \"oc-FR\": \"Occitan\",\n        \"pa-IN\": \"ਪੰਜਾਬੀ (ਗੁਰਮੁਖੀ)\",\n        \"pl-PL\": \"Polski\",\n        \"pt-BR\": \"Português, brasileiro\",\n        \"pt-PT\": \"Português\",\n        \"qya-AA\": \"quenya\",\n        \"ro-RO\": \"Română\",\n        \"ru-RU\": \"Русский\",\n        \"sco-GB\": \"Scots\",\n        \"si-LK\": \"සිංහල\",\n        \"sk-SK\": \"Slovenčina\",\n        \"sl-SI\": \"Slovenščina\",\n        \"sq-AL\": \"Shqip\",\n        \"sr-Cyrl-ME\": \"Montenegrin (Cyrillic)\",\n        \"sr-SP\": \"Српски / Srpski\",\n        \"sv-SE\": \"Svenska\",\n        \"sw-KE\": \"Kiswahili\",\n        \"ta-IN\": \"தமிழ்\",\n        \"te-IN\": \"తెలుగు\",\n        \"tg-TJ\": \"Тоҷикӣ\",\n        \"tk-TM\": \"Türkmençe\",\n        \"tlh-AA\": \"Klingon\",\n        \"tr-TR\": \"Türkçe\",\n        \"uk-UA\": \"Українська\",\n        \"uz-UZ\": \"Oʻzbekcha / Ўзбекча\",\n        \"vi-VN\": \"Tiếng Việt\",\n        \"yo-NG\": \"Yorùbá\",\n        \"zh-CN\": \"简体中文\",\n        \"zh-TW\": \"中國傳統的\",\n        \"zu-ZA\": \"isiZulu\"\n    },\n\n    languages_another_locales: {\n        \"es419\": \"es-latin\",\n        \"in-ID\": \"id\"\n    },\n\n    PERSONAL_AREA_URL: {},\n\n    XABBER_ACCOUNT_URL: 'https://www.xabber.com/account',\n    USE_SOCIAL_AUTH: true,\n    USE_TAB_SIGNALS: true,\n    REGISTER_XMPP_ACCOUNT: true,\n    REGISTER_XMPP_ACCOUNT_URL: 'https://www.xabber.com/account/auth/signup/',\n    CHECK_VERSION: true,\n    DEFAULT_LOGIN_SCREEN: 'xmpp',\n\n    GCM_SENDER_ID: '868637702480',\n    GCM_API_KEY: 'AIzaSyC1JCBB3LLf_4DG_vRWMEEe0I4X5msEU-M',\n    MESSAGE_ARCHIVE_DB_NAME: 'MessageArchive',\n    STANZA_MAX_SIZE: Math.pow(2, 16),\n\n    BLUR_VALUE: 25,\n    VIGNETTING_VALUE: 128,\n    TRANSPARENCY_VALUE: 50,\n\n    MAIN_COLOR: 'red',\n    CLIENT_NAME: 'Xabber for Web',\n    CLIENT_RESOURCE: 'xabber-web',\n    SHORT_CLIENT_NAME: 'Xabber',\n    SHORT_CLIENT_DESCRIPTION: 'World’s best XMPP experience',\n    CLIENT_LOGO: 'assets/images/xabber-logo-96.png',\n    TOOLBAR_LOGO: 'assets/images/xabber-logo.png',\n    ENABLE_XABBER_ACCOUNT: false,\n    SCREEN_ABOUT: true,\n    BACKGROUND_IMAGES_XML_URL: 'https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/background-images.xml',\n    BACKGROUND_PATTERNS_XML_URL: 'https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/background-patterns.xml',\n    DEVELOPER_URL: 'https://redsolution.com',\n    CLIENT_GITHUB_URL: 'https://github.com/redsolution/xabber-web',\n    PROJECT_CROWDIN_URL: 'https://crowdin.com/project/xabber',\n    CLIENT_LICENSE_GITHUB_URL: 'https://github.com/redsolution/xabber-web/blob/master/LICENSE',\n    DEFAULT_EMOJI_FONT: 'notoColor',\n\n    EMOJI_FONTS_LIST: {\n        notoColor: {\n            name: 'NotoColorEmoji',\n            value: 'notoColor',\n            url: '../assets/fonts/notocolor/NotoColorEmoji-Regular.ttf',\n            hint: 'Locally stored NotoColorEmoji font, size is 23MB',\n            attribution_text: 'Copyright 2021 Google Inc. All Rights Reserved.',\n            order: 0\n\n        },\n    },\n};\n\nconstants.JINGLE_MSG_STATE = {};\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_REJECT] = 'reject';\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_PROPOSE] = 'propose';\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_ACCEPT] = 'accept';\n\nconstants.MSG_STATE = {};\nconstants.MSG_STATE[constants.MSG_ERROR] = 'error';\nconstants.MSG_STATE[constants.MSG_PENDING] = 'pending';\nconstants.MSG_STATE[constants.MSG_SENT] = 'sent';\nconstants.MSG_STATE[constants.MSG_DELIVERED] = 'delivered';\nconstants.MSG_STATE[constants.MSG_DISPLAYED] = 'displayed';\nconstants.MSG_STATE[constants.MSG_ARCHIVED] = 'archived';\nconstants.MSG_STATE[constants.MSG_BLOCKED] = 'not-allowed';\nconstants.MSG_STATE[constants.MSG_SAVED] = 'saved';\n\nconstants.MSG_VERBOSE_STATE = {};\nconstants.MSG_VERBOSE_STATE[constants.MSG_ERROR] = 'message__delivering_state__error';\nconstants.MSG_VERBOSE_STATE[constants.MSG_PENDING] = 'message__delivering_state__pending';\nconstants.MSG_VERBOSE_STATE[constants.MSG_SENT] = 'message__delivering_state__sent';\nconstants.MSG_VERBOSE_STATE[constants.MSG_DELIVERED] = 'message__delivering_state__delivered';\nconstants.MSG_VERBOSE_STATE[constants.MSG_DISPLAYED] = 'message__delivering_state__displayed';\nconstants.MSG_VERBOSE_STATE[constants.MSG_ARCHIVED] = 'message__delivering_state__archived';\nconstants.MSG_VERBOSE_STATE[constants.MSG_BLOCKED] = 'message__delivering_state__error';\nconstants.MSG_VERBOSE_STATE[constants.MSG_SAVED] = 'message__delivering_state__saved';\n\nexport default constants;\n","// only external libs and plugins for them\n// import Backbone from \"backbone\";\nimport \"backbone\";\nimport _ from \"underscore\";\nimport $ from \"jquery\";\nimport moment from \"moment\";\nimport WaveSurfer from \"wavesurfer\";\nimport slug from \"slug\";\nimport sha256 from \"sha256\";\nimport magnificPopup from \"magnific-popup\";\nimport i18next from \"i18next\";\nimport i18next_sprintf from \"i18next-post\";\nimport Strophe from \"strophe\";\nimport plyr from \"Plyr\";\nimport Quill from \"Quill\";\nimport libsignal from \"libsignal-protocol\";\nimport sha1 from \"sha1_hasher\";\nimport Recorder from 'opus-recorder';\nimport encoderPath from 'opus-recorder/dist/encoderWorker.min.js';\nimport VanillaQR from \"VanillaQR\";\nimport idleJs from \"idle-js\";\nimport backgroundImagesXml from \"xml-loader!~/xmls/background-images.xml\";\nimport backgroundPatternsXml from \"xml-loader!~/xmls/background-patterns.xml\";\nimport \"~/css/color-scheme.css\";\nimport \"~/css/materialdesignicons.css\";\nimport \"~/css/materialize.css\";\nimport \"~/css/plyr.css\";\nimport \"~/css/quill.snow.css\";\nimport \"~/css/xabber.css\";\nimport \"~/node_modules/magnific-popup/dist/magnific-popup.css\";\nimport \"~/node_modules/perfect-scrollbar/dist/css/perfect-scrollbar.css\";\nimport \"strophe.disco\";\nimport \"strophe.ping\";\nimport \"strophe.rsm\";\nimport \"strophe.caps\";\nimport \"strophe.pubsub\";\nimport \"omemo\";\nimport \"backbone.localsync\";\nimport \"materialize\";\nimport \"perfectScrollbarJQuery\";\n\nexport default _.extend({\n    $: $,\n    _: _,\n    moment: moment,\n    WaveSurfer: WaveSurfer,\n    Plyr: plyr,\n    Quill: Quill,\n    libsignal: libsignal,\n    slug: slug,\n    sha1: sha1,\n    idleJs: idleJs,\n    opusRecorder: Recorder,\n    opusRecorderEncoderPath: encoderPath,\n    xabber_i18next: i18next,\n    xabber_i18next_sprintf: i18next_sprintf,\n    sha256: sha256,\n    VanillaQR: VanillaQR,\n    magnificPopup: magnificPopup,\n    backgroundImagesXml: backgroundImagesXml,\n    backgroundPatternsXml: backgroundPatternsXml,\n    Strophe: Strophe\n}, Strophe);\n","    import _ from \"underscore\";\n    import $ from \"jquery\";\n\n    _.templateSettings = {\n        evaluate : /\\{\\[([\\s\\S]+?)\\]\\}/g,\n        interpolate : /\\{\\{([\\s\\S]+?)\\}\\}/g\n    };\n\n    let templates = {};\n\n    let insertSvg = function (html) {\n        let $html = $('<div/>').html(html);\n        $html.find('.mdi-svg-template').each(function () {\n            let $el = $(this),\n                svg_name = $el.data('svgname');\n            $el.removeClass('mdi-svg-template').addClass('mdi-'+svg_name)\n                .attr('data-svgname', null);\n            $el.html(templates.svg[svg_name]());\n        });\n        return $html.html();\n    };\n\n    let _addTemplate = function (name, options) {\n        options || (options = {});\n        let path = name.split('.'),\n            tpl = _.template(require('raw-loader!~/templates/'+path.join('/')+'.html').default),\n            tpl_name = path.pop(),\n            res = templates;\n        _.each(path, function (attr) {\n            res[attr] || (res[attr] = {});\n            res = res[attr];\n        });\n        if (options.is_svg) {\n            res[tpl_name] = tpl;\n        } else {\n            res[tpl_name] = function (data) {\n                return insertSvg(tpl(data));\n            };\n        }\n    };\n\n    let addJSONTemplate = function (name, ) {\n        let path = name.split('.'),\n            tpl = require('~/templates/'+path.join('/')+'.json'),\n            tpl_name = path.pop(),\n            res = templates;\n        _.each(path, function (attr) {\n            res[attr] || (res[attr] = {});\n            res = res[attr];\n        });\n        res[tpl_name] = tpl;\n    };\n\n    let addTemplate = function (name) {\n        _addTemplate(name, {is_svg: false});\n    };\n\n    let addSvgTemplate = function (name) {\n        _addTemplate(name, {is_svg: true});\n    };\n\n\n    addTemplate('base.dialog');\n    addTemplate('base.fingerprints');\n    addTemplate('base.fingerprints_devices');\n    addTemplate('base.fingerprint_item');\n    addTemplate('base.fingerprint_devices_item');\n    addTemplate('base.jingle_message_calling');\n    addTemplate('base.plyr_player_popup');\n    addTemplate('base.input_widget');\n    addTemplate('base.toolbar');\n    addTemplate('base.settings');\n    addTemplate('base.settings_modal');\n    addTemplate('base.setting_radio_input');\n    addTemplate('base.setting_emoji_font_radio_input');\n    addTemplate('base.setting_language_radio_input');\n    addTemplate('base.about');\n    addTemplate('base.omemo_enable');\n    addTemplate('base.backgrounds_gallery');\n    addTemplate('base.color_picker');\n    addTemplate('base.color_scheme');\n\n    addTemplate('accounts.xmpp_login');\n    addTemplate('accounts.add_account');\n    addTemplate('accounts.unregister_account');\n    addTemplate('accounts.change_password');\n    addTemplate('accounts.change_account_password');\n    addTemplate('accounts.toolbar_item');\n    addTemplate('accounts.media_gallery_account_file');\n    addTemplate('accounts.media_gallery_account');\n    addTemplate('accounts.delete_files_media_gallery');\n    addTemplate('accounts.single_account_settings_modal');\n    addTemplate('accounts.account_settings_modal');\n    addTemplate('accounts.existing_groupchat_item');\n    addTemplate('accounts.resource');\n    addTemplate('accounts.resource_right');\n    addTemplate('accounts.webcam_panel');\n    addTemplate('accounts.emoji_panel');\n    addTemplate('accounts.emoji_picker');\n    addTemplate('accounts.emoji_picker_tabs');\n    addTemplate('accounts.global_settings_item_modal');\n    addTemplate('accounts.change_status');\n    addTemplate('accounts.token_item_modal');\n    addTemplate('accounts.current_token_item_modal');\n    addTemplate('accounts.audio_file_waveform');\n    addTemplate('accounts.avatars_gallery');\n    addTemplate('accounts.status_message_input_widget');\n\n    addTemplate('vcard.vcard');\n    addTemplate('vcard.vcard_modal');\n    addTemplate('vcard.vcard_edit_modal');\n    addTemplate('vcard.vcard_right');\n\n    addTemplate('searching.searching_wide');\n    addTemplate('searching.searching_account_item');\n    addTemplate('searching.existing_groupchat_item');\n    addTemplate('searching.existing_groupchat_details_view');\n\n    addTemplate('contacts.roster_right');\n    addTemplate('contacts.roster_left');\n    addTemplate('contacts.account_roster_right');\n    addTemplate('contacts.account_roster_left');\n    addTemplate('contacts.group_right');\n    addTemplate('contacts.group_left');\n    addTemplate('contacts.add_contact');\n    addTemplate('contacts.contact_right_item');\n    addTemplate('contacts.contact_left_item');\n    addTemplate('contacts.contact_blocked_item');\n    addTemplate('contacts.contact_details_right');\n    addTemplate('contacts.roster_settings');\n    addTemplate('contacts.group_settings');\n    addTemplate('contacts.groups_checkbox_list');\n    addTemplate('contacts.groups_checkbox_list_contact');\n    addTemplate('contacts.groups_new_group');\n    addTemplate('contacts.groups_list');\n    addTemplate('contacts.add_contact_account_item');\n    addTemplate('contacts.contact_placeholder');\n    addTemplate('contacts.groups');\n    addTemplate('contacts.edit_contact');\n    addTemplate('contacts.edit_group');\n    addTemplate('contacts.preloader');\n    addTemplate('contacts.media_item');\n    addTemplate('contacts.media_items_empty');\n    addTemplate('contacts.audio_file_waveform');\n    addTemplate('contacts.group_chats.group_chat_properties');\n    addTemplate('contacts.group_chats.group_chat_properties_right');\n    addTemplate('contacts.group_chats.group_chat_details');\n    addTemplate('contacts.group_chats.group_chat_details_right');\n    addTemplate('contacts.group_chats.invitation');\n    addTemplate('contacts.group_chats.group_chat_properties_edit');\n    addTemplate('contacts.group_chats.default_restrictions');\n    addTemplate('contacts.group_chats.default_restrictions_right');\n    addTemplate('contacts.group_chats.group_member_item');\n    addTemplate('contacts.group_chats.group_member_item_right');\n    addTemplate('contacts.group_chats.description_input_widget');\n    addTemplate('contacts.group_chats.group_name_input_widget');\n    addTemplate('contacts.group_chats.participant_badge_input_widget');\n    addTemplate('contacts.group_chats.invited_member_item');\n    addTemplate('contacts.group_chats.add_blocked_participant_form');\n    addTemplate('contacts.group_chats.participant_details_right');\n    addTemplate('contacts.group_chats.participant_rights');\n    addTemplate('contacts.group_chats.restriction_item');\n    addTemplate('contacts.group_chats.right_expire_variants');\n    addTemplate('contacts.group_chats.pinned_message');\n    addTemplate('contacts.group_chats.participant_details_item_right');\n    addTemplate('contacts.group_chats.participant_details_item');\n    addTemplate('contacts.group_chats.participants');\n    addTemplate('contacts.group_chats.participants_right_panel');\n    addTemplate('contacts.group_chats.badge_edit_view');\n    addTemplate('contacts.group_chats.private_participant_details');\n    addTemplate('contacts.group_chats.private_participant_details_item_right');\n    addTemplate('contacts.group_chats.set_status');\n    addTemplate('contacts.group_chats.status_item');\n    addTemplate('contacts.group_chats.group_status');\n    addTemplate('contacts.group_chats.group_status_right');\n    addTemplate('contacts.group_chats.file_item');\n\n    addTemplate('chats.chats_panel');\n    addTemplate('chats.add_chat_account_item');\n    addTemplate('chats.chat_item');\n    addTemplate('chats.chat_head');\n    addTemplate('chats.send_media');\n    addTemplate('chats.saved_chat_head');\n    addTemplate('chats.chat_content');\n    addTemplate('chats.chat_content_placeholder');\n    addTemplate('chats.chat_content_contact');\n    addTemplate('chats.chat_bottom');\n    addTemplate('chats.unread_marker');\n    addTemplate('chats.location_popup');\n    addTemplate('chats.subscription_buttons');\n    addTemplate('chats.forward_panel');\n    addTemplate('chats.chat_placeholder');\n    addTemplate('chats.message_item');\n    addTemplate('chats.messages.main');\n    addTemplate('chats.messages.searched');\n    addTemplate('chats.messages.forwarded');\n    addTemplate('chats.messages.system');\n    addTemplate('chats.messages.file_upload');\n    addTemplate('chats.messages.loading_circle');\n    addTemplate('chats.messages.file');\n    addTemplate('chats.messages.file_loading');\n    addTemplate('chats.messages.link_reference');\n    addTemplate('chats.messages.link_reference_chat');\n    addTemplate('chats.messages.attached_file');\n    addTemplate('chats.messages.video');\n    addTemplate('chats.messages.location');\n    addTemplate('chats.messages.audio_file');\n    addTemplate('chats.messages.audio_file_waveform');\n    addTemplate('chats.messages.auth_request');\n    addTemplate('chats.messages.group_request');\n    addTemplate('chats.messages.template-for-2');\n    addTemplate('chats.messages.template-for-3');\n    addTemplate('chats.messages.template-for-4');\n    addTemplate('chats.messages.template-for-5');\n    addTemplate('chats.messages.template-for-6');\n    addTemplate('chats.messages.hidden-template-for-2');\n    addTemplate('chats.messages.hidden-template-for-3');\n    addTemplate('chats.messages.hidden-template-for-4');\n    addTemplate('chats.messages.hidden-template-for-5');\n    addTemplate('chats.messages.hidden-template-for-6');\n    addTemplate('chats.messages.images_details');\n    addTemplate('chats.messages.saved_main');\n    addTemplate('chats.group_chats.pinned_message_panel');\n    addTemplate('chats.group_chats.add_group_chat');\n    addTemplate('chats.group_chats.invitation_panel_view');\n    addTemplate('chats.group_chats.mention_item');\n    addTemplate('chats.encryption_warning');\n    addTemplate('chats.content_encryption_warning');\n    addTemplate('chats.ephemeral_timer_selector');\n\n\n    addTemplate('mentions.mentions_panel');\n    addTemplate('mentions.mentions_placeholder');\n    addTemplate('mentions.mention_item');\n\n    addSvgTemplate('svg.ic-jabber');\n    addSvgTemplate('svg.xmpp');\n    addSvgTemplate('svg.account-outline');\n    addSvgTemplate('svg.qrcode');\n    addSvgTemplate('svg.id-outline');\n    addSvgTemplate('svg.clock-outline');\n    addSvgTemplate('svg.index');\n    addSvgTemplate('svg.restrictions-outline');\n    addSvgTemplate('svg.history');\n    addSvgTemplate('svg.chevron-down');\n    addSvgTemplate('svg.camera');\n    addSvgTemplate('svg.camera-retake');\n    addSvgTemplate('svg.membership-outline');\n    addSvgTemplate('svg.invite');\n    addSvgTemplate('svg.invite-outline');\n    addSvgTemplate('svg.chevron-right-variant');\n    addSvgTemplate('svg.chevron-left-variant');\n    addSvgTemplate('svg.subscription-to');\n    addSvgTemplate('svg.subscription-from');\n    addSvgTemplate('svg.image');\n    addSvgTemplate('svg.file-audio');\n    addSvgTemplate('svg.file-video');\n    addSvgTemplate('svg.file-document');\n    addSvgTemplate('svg.file-presentation');\n    addSvgTemplate('svg.file-zip');\n    addSvgTemplate('svg.file');\n    addSvgTemplate('svg.file-pdf');\n    addSvgTemplate('svg.close');\n    addSvgTemplate('svg.link');\n    addSvgTemplate('svg.picture-in-picture-minimize');\n    addSvgTemplate('svg.picture-in-picture-bottom-right');\n    addSvgTemplate('svg.picture-in-picture-top-right');\n    addSvgTemplate('svg.pause');\n    addSvgTemplate('svg.volume-off');\n    addSvgTemplate('svg.volume-high');\n    addSvgTemplate('svg.plyr');\n    addSvgTemplate('svg.plus');\n    addSvgTemplate('svg.player-float');\n    addSvgTemplate('svg.player-full');\n    addSvgTemplate('svg.player-mini-variant');\n    addSvgTemplate('svg.player-mini');\n    addSvgTemplate('svg.message-bookmark-outline');\n    addSvgTemplate('svg.play');\n    addSvgTemplate('svg.video');\n    addSvgTemplate('svg.cancel');\n    addSvgTemplate('svg.status');\n    addSvgTemplate('svg.status-outline');\n    addSvgTemplate('svg.birthday');\n    addSvgTemplate('svg.birthday-outline');\n    addSvgTemplate('svg.web');\n    addSvgTemplate('svg.xmpp');\n    addSvgTemplate('svg.job');\n    addSvgTemplate('svg.job-outline');\n    addSvgTemplate('svg.address');\n    addSvgTemplate('svg.address-outline');\n    addSvgTemplate('svg.email');\n    addSvgTemplate('svg.email-outline');\n    addSvgTemplate('svg.description');\n    addSvgTemplate('svg.description-outline');\n    addSvgTemplate('svg.contact-add');\n    addSvgTemplate('svg.check');\n    addSvgTemplate('svg.call-outline');\n    addSvgTemplate('svg.call');\n    addSvgTemplate('svg.search');\n    addSvgTemplate('svg.device-cellphone');\n    addSvgTemplate('svg.device-console');\n    addSvgTemplate('svg.device-desktop');\n    addSvgTemplate('svg.device-tablet');\n    addSvgTemplate('svg.device-web');\n    addSvgTemplate('svg.devices');\n    addSvgTemplate('svg.bell');\n    addSvgTemplate('svg.bell-sleep');\n    addSvgTemplate('svg.bell-off');\n    addSvgTemplate('svg.cancel');\n    addSvgTemplate('svg.trash');\n    addSvgTemplate('svg.client');\n    addSvgTemplate('svg.client-outline');\n    addSvgTemplate('svg.database-lock');\n    addSvgTemplate('svg.index');\n    addSvgTemplate('svg.bug');\n    addSvgTemplate('svg.cloud');\n    addSvgTemplate('svg.key');\n    addSvgTemplate('svg.key-variant');\n    addSvgTemplate('svg.account');\n    addSvgTemplate('svg.alert-circle');\n    addSvgTemplate('svg.security');\n    addSvgTemplate('svg.edit');\n    addSvgTemplate('svg.edit-outline');\n    addSvgTemplate('svg.check-circle');\n    addSvgTemplate('svg.blocked-add');\n    addSvgTemplate('svg.information-outline');\n    addSvgTemplate('svg.information');\n    addSvgTemplate('svg.fullname');\n    addSvgTemplate('svg.fullname-outline');\n    addSvgTemplate('svg.ic-at');\n    addSvgTemplate('svg.ic-searching');\n    addSvgTemplate('svg.blocked');\n    addSvgTemplate('svg.bot');\n    addSvgTemplate('svg.bot-variant');\n    addSvgTemplate('svg.group-incognito');\n    addSvgTemplate('svg.group-invite');\n    addSvgTemplate('svg.group-public');\n    addSvgTemplate('svg.task');\n    addSvgTemplate('svg.group-private');\n    addSvgTemplate('svg.channel');\n    addSvgTemplate('svg.rss');\n    addSvgTemplate('svg.rss-variant');\n    addSvgTemplate('svg.server');\n    addSvgTemplate('svg.volume-off-variant');\n    addSvgTemplate('svg.message-group');\n    addSvgTemplate('svg.xabber-offline');\n    addSvgTemplate('svg.xabber-online');\n    addSvgTemplate('svg.saved-messages');\n    addSvgTemplate('svg.account-cancel');\n    addSvgTemplate('svg.web-cancel');\n    addSvgTemplate('svg.palette');\n    addSvgTemplate('svg.chat');\n    addSvgTemplate('svg.star-face');\n    addSvgTemplate('svg.alarm-bell');\n    addSvgTemplate('svg.id');\n    addSvgTemplate('svg.expires');\n    addSvgTemplate('svg.database');\n    addSvgTemplate('svg.download');\n    addSvgTemplate('svg.lock');\n    addSvgTemplate('svg.lock-open');\n    addSvgTemplate('svg.lock-alert');\n    addSvgTemplate('svg.lock-check');\n    addSvgTemplate('svg.lock-cross');\n    addSvgTemplate('svg.lock-question');\n    addSvgTemplate('svg.circles');\n    addSvgTemplate('svg.circles-outline');\n    addSvgTemplate('svg.circle-slice-1');\n    addSvgTemplate('svg.circle-slice-2');\n    addSvgTemplate('svg.circle-slice-3');\n    addSvgTemplate('svg.circle-slice-4');\n    addSvgTemplate('svg.circle-slice-5');\n    addSvgTemplate('svg.circle-slice-6');\n    addSvgTemplate('svg.circle-slice-7');\n    addSvgTemplate('svg.circle-slice-8');\n    addSvgTemplate('svg.translate');\n    addSvgTemplate('svg.trash');\n    addSvgTemplate('svg.crosshairs-gps');\n    addSvgTemplate('svg.crosshairs-question');\n    addSvgTemplate('svg.crosshairs');\n    addSvgTemplate('svg.map-marker-outline');\n    addSvgTemplate('svg.map-marker');\n    addSvgTemplate('svg.minus');\n\n    addJSONTemplate('accounts.emojis');\n\n    export default templates;","\n    let sounds = {};\n\n    let attention_json = require('~/sounds/attention/attention.json'),\n        attention = [];\n\n\n    Object.keys(attention_json).forEach(item => {\n        let audio = require(`~/sounds/attention/${item}/${item}.mp3`),\n            attention_sound = {\n                file_name: item,\n                name: attention_json[item].name,\n                audio: audio,\n                not_selectable: attention_json[item].not_selectable,\n        };\n        attention.push(attention_sound);\n    });\n\n    let ringtones_json = require('~/sounds/ringtones/ringtones.json'),\n        ringtones = [];\n\n\n    Object.keys(ringtones_json).forEach(item => {\n        let audio = require(`~/sounds/ringtones/${item}/${item}.mp3`),\n            ringtone = {\n                file_name: item,\n                name: ringtones_json[item].name,\n                audio: audio,\n                not_selectable: ringtones_json[item].not_selectable,\n        };\n        ringtones.push(ringtone);\n    });\n\n    let dialtones_json = require('~/sounds/dialtones/dialtones.json'),\n        dialtones = [];\n\n\n    Object.keys(dialtones_json).forEach(item => {\n        let audio = require(`~/sounds/dialtones/${item}/${item}.mp3`),\n            dialtone = {\n                file_name: item,\n                name: dialtones_json[item].name,\n                audio: audio,\n                not_selectable: dialtones_json[item].not_selectable,\n        };\n        dialtones.push(dialtone);\n    });\n\n    let notifications_json = require('~/sounds/notifications/notifications.json'),\n        notifications = [];\n\n\n    Object.keys(notifications_json).forEach(item => {\n        let audio = require(`~/sounds/notifications/${item}/${item}.mp3`),\n            notification = {\n                file_name: item,\n                name: notifications_json[item].name,\n                audio: audio,\n                not_selectable: notifications_json[item].not_selectable,\n        };\n        notifications.push(notification);\n    });\n\n    let system_json = require('~/sounds/system/system.json'),\n        system_sound_list = [];\n\n\n    Object.keys(system_json).forEach(item => {\n        let audio = require(`~/sounds/system/${item}/${item}.mp3`),\n            system_item = {\n                file_name: item,\n                name: system_json[item].name,\n                audio: audio,\n                not_selectable: system_json[item].not_selectable,\n        };\n        system_sound_list.push(system_item);\n    });\n\n    sounds.attention = attention;\n    sounds.ringtones = ringtones;\n    sounds.dialtones = dialtones;\n    sounds.notifications = notifications;\n    sounds.system = system_sound_list;\n    sounds.all_sounds = attention.concat(ringtones).concat(dialtones).concat(notifications).concat(system_sound_list);\n\n    export default sounds;","import _ from \"underscore\";\nimport $ from \"jquery\";\nimport constants from \"xabber-constants\";\n\nvar raw_data = {\n    \"smiles_and_people\": [{code:0x1f600,x:9,y:3},{code:0x1f603,x:12,y:3},{code:0x1f604,x:13,y:3},{code:0x1f601,x:10,y:3},{code:0x1f606,x:1,y:4},{code:0x1f605,x:0,y:4},{code:0x1f923,x:6,y:10},{code:0x1f602,x:11,y:3},{code:0x1f642,x:5,y:8},{code:0x1f643,x:6,y:8},{code:0x1f609,x:4,y:4},{code:0x1f60a,x:5,y:4},{code:0x1f607,x:2,y:4},{code:0x1f60d,x:8,y:4},{code:0x1f929,x:12,y:10},{code:0x1f617,x:4,y:5},{code:0x263a,x:14,y:5},{code:0x1f61a,x:7,y:5},{code:0x1f619,x:6,y:5},{code:0x1f60b,x:6,y:4},{code:0x1f61b,x:8,y:5},{code:0x1f61c,x:9,y:5},{code:0x1f92a,x:13,y:10},{code:0x1f61d,x:10,y:5},{code:0x1f911,x:10,y:9},{code:0x1f917,x:2,y:10},{code:0x1f92d,x:2,y:11},{code:0x1f92b,x:0,y:11},{code:0x1f914,x:13,y:9},{code:0x1f910,x:9,y:9},{code:0x1f928,x:11,y:10},{code:0x1f610,x:11,y:4},{code:0x1f611,x:12,y:4},{code:0x1f636,x:7,y:7},{code:0x1f60f,x:10,y:4},{code:0x1f612,x:13,y:4},{code:0x1f644,x:7,y:8},{code:0x1f62c,x:11,y:6},{code:0x1f925,x:8,y:10},{code:0x1f60c,x:7,y:4},{code:0x1f614,x:1,y:5},{code:0x1f62a,x:9,y:6},{code:0x1f924,x:7,y:10},{code:0x1f634,x:5,y:7},{code:0x1f637,x:8,y:7},{code:0x1f912,x:11,y:9},{code:0x1f915,x:0,y:10},{code:0x1f922,x:5,y:10},{code:0x1f92e,x:3,y:11},{code:0x1f927,x:10,y:10},{code:0x1f975,x:7,y:12},{code:0x1f976,x:8,y:12},{code:0x1f974,x:6,y:12},{code:0x1f635,x:6,y:7},{code:0x1f92f,x:4,y:11},{code:0x1f920,x:3,y:10},{code:0x1f973,x:5,y:12},{code:0x1f60e,x:9,y:4},{code:0x1f913,x:12,y:9},{code:0x1f9d0,x:1,y:13},{code:0x1f615,x:2,y:5},{code:0x1f61f,x:12,y:5},{code:0x1f641,x:4,y:8},{code:0x2639,x:14,y:4},{code:0x1f62e,x:13,y:6},{code:0x1f62f,x:0,y:7},{code:0x1f632,x:3,y:7},{code:0x1f633,x:4,y:7},{code:0x1f97a,x:9,y:12},{code:0x1f626,x:5,y:6},{code:0x1f627,x:6,y:6},{code:0x1f628,x:7,y:6},{code:0x1f630,x:1,y:7},{code:0x1f625,x:4,y:6},{code:0x1f622,x:1,y:6},{code:0x1f62d,x:12,y:6},{code:0x1f631,x:2,y:7},{code:0x1f616,x:3,y:5},{code:0x1f623,x:2,y:6},{code:0x1f61e,x:11,y:5},{code:0x1f613,x:0,y:5},{code:0x1f629,x:8,y:6},{code:0x1f62b,x:10,y:6},{code:0x1f624,x:3,y:6},{code:0x1f621,x:0,y:6},{code:0x1f620,x:13,y:5},{code:0x1f92c,x:1,y:11},{code:0x1f608,x:3,y:4},{code:0x1f47f,x:9,y:2},{code:0x1f480,x:10,y:2},{code:0x2620,x:14,y:3},{code:0x1f4a9,x:4,y:3},{code:0x1f921,x:4,y:10},{code:0x1f479,x:3,y:2},{code:0x1f47a,x:4,y:2},{code:0x1f47b,x:5,y:2},{code:0x1f47d,x:7,y:2},{code:0x1f47e,x:8,y:2},{code:0x1f916,x:1,y:10},{code:0x1f63a,x:11,y:7},{code:0x1f638,x:9,y:7},{code:0x1f639,x:10,y:7},{code:0x1f63b,x:12,y:7},{code:0x1f63c,x:13,y:7},{code:0x1f63d,x:0,y:8},{code:0x1f640,x:3,y:8},{code:0x1f63f,x:2,y:8},{code:0x1f63e,x:1,y:8},{code:0x1f648,x:11,y:8},{code:0x1f649,x:12,y:8},{code:0x1f64a,x:13,y:8},{code:0x1f476,x:0,y:2},{code:0x1f9d2,x:3,y:13},{code:0x1f466,x:12,y:0},{code:0x1f467,x:13,y:0},{code:0x1f471,x:9,y:1},{code:0x1f9d4,x:5,y:13},{code:0x1f9d3,x:4,y:13},{code:0x1f474,x:12,y:1},{code:0x1f475,x:13,y:1},{code:0x1f64d,x:1,y:9},{code:0x1f64e,x:2,y:9},{code:0x1f645,x:8,y:8},{code:0x1f646,x:9,y:8},{code:0x1f481,x:11,y:2},{code:0x1f64b,x:0,y:9},{code:0x1f647,x:10,y:8},{code:0x1f926,x:9,y:10},{code:0x1f937,x:10,y:11},{code:0x1f46e,x:6,y:1},{code:0x1f575,x:6,y:3},{code:0x1f482,x:12,y:2},{code:0x1f477,x:1,y:2},{code:0x1f934,x:7,y:11},{code:0x1f478,x:2,y:2},{code:0x1f473,x:11,y:1},{code:0x1f472,x:10,y:1},{code:0x1f9d5,x:6,y:13},{code:0x1f935,x:8,y:11},{code:0x1f470,x:8,y:1},{code:0x1f930,x:5,y:11},{code:0x1f931,x:6,y:11},{code:0x1f47c,x:6,y:2},{code:0x1f385,x:0,y:0},{code:0x1f936,x:9,y:11},{code:0x1f9b8,x:10,y:12},{code:0x1f9b9,x:11,y:12},{code:0x1f9d9,x:10,y:13},{code:0x1f9da,x:11,y:13},{code:0x1f9db,x:12,y:13},{code:0x1f9dc,x:13,y:13},{code:0x1f9dd,x:14,y:0},{code:0x1f9de,x:14,y:1},{code:0x1f9df,x:14,y:2},{code:0x1f486,x:0,y:3},{code:0x1f487,x:1,y:3},{code:0x1f6b6,x:6,y:9},{code:0x1f3c3,x:2,y:0},{code:0x1f483,x:13,y:2},{code:0x1f57a,x:7,y:3},{code:0x1f574,x:5,y:3},{code:0x1f46f,x:7,y:1},{code:0x1f9d6,x:7,y:13},{code:0x1f9d7,x:8,y:13},{code:0x1f93a,x:13,y:11},{code:0x1f3c7,x:4,y:0},{code:0x26f7,x:14,y:6},{code:0x1f3c2,x:1,y:0},{code:0x1f3cc,x:7,y:0},{code:0x1f3c4,x:3,y:0},{code:0x1f6a3,x:3,y:9},{code:0x1f3ca,x:5,y:0},{code:0x26f9,x:14,y:7},{code:0x1f3cb,x:6,y:0},{code:0x1f6b4,x:4,y:9},{code:0x1f6b5,x:5,y:9},{code:0x1f938,x:11,y:11},{code:0x1f93c,x:0,y:12},{code:0x1f93d,x:1,y:12},{code:0x1f93e,x:2,y:12},{code:0x1f939,x:12,y:11},{code:0x1f9d8,x:9,y:13},{code:0x1f6c0,x:7,y:9},{code:0x1f6cc,x:8,y:9},{code:0x1f46d,x:5,y:1},{code:0x1f46b,x:3,y:1},{code:0x1f46c,x:4,y:1},{code:0x1f48f,x:2,y:3},{code:0x1f491,x:3,y:3},{code:0x1f46a,x:2,y:1},{code:0x1f5e3,x:8,y:3},{code:0x1f464,x:10,y:0},{code:0x1f465,x:11,y:0},{code:0x1f463,x:9,y:0}],\n    \"body_and_clothes\": [{code:0x1f44b,x:3,y:1},{code:0x1f91a,x:10,y:7},{code:0x1f590,x:7,y:6},{code:0x270b,x:9,y:10},{code:0x1f596,x:9,y:6},{code:0x1f44c,x:4,y:1},{code:0x270c,x:10,y:10},{code:0x1f91e,x:3,y:8},{code:0x1f91f,x:4,y:8},{code:0x1f918,x:8,y:7},{code:0x1f919,x:9,y:7},{code:0x1f448,x:0,y:1},{code:0x1f449,x:1,y:1},{code:0x1f446,x:9,y:0},{code:0x1f595,x:8,y:6},{code:0x1f447,x:10,y:0},{code:0x261d,x:6,y:10},{code:0x1f44d,x:5,y:1},{code:0x1f44e,x:6,y:1},{code:0x270a,x:8,y:10},{code:0x1f44a,x:2,y:1},{code:0x1f91b,x:0,y:8},{code:0x1f91c,x:1,y:8},{code:0x1f44f,x:7,y:1},{code:0x1f64c,x:2,y:7},{code:0x1f450,x:8,y:1},{code:0x1f932,x:5,y:8},{code:0x1f91d,x:2,y:8},{code:0x1f64f,x:3,y:7},{code:0x270d,x:11,y:0},{code:0x1f485,x:6,y:3},{code:0x1f933,x:6,y:8},{code:0x1f4aa,x:9,y:5},{code:0x1f9b5,x:2,y:9},{code:0x1f9b6,x:3,y:9},{code:0x1f442,x:5,y:0},{code:0x1f443,x:6,y:0},{code:0x1f9e0,x:6,y:9},{code:0x1f9b7,x:4,y:9},{code:0x1f9b4,x:1,y:9},{code:0x1f440,x:3,y:0},{code:0x1f445,x:8,y:0},{code:0x1f444,x:7,y:0},{code:0x1f48b,x:7,y:3},{code:0x1f48c,x:8,y:3},{code:0x1f498,x:5,y:4},{code:0x1f49d,x:10,y:4},{code:0x1f496,x:3,y:4},{code:0x1f497,x:4,y:4},{code:0x1f493,x:0,y:4},{code:0x1f49e,x:0,y:5},{code:0x1f495,x:2,y:4},{code:0x1f49f,x:1,y:5},{code:0x2763,x:11,y:1},{code:0x1f494,x:1,y:4},{code:0x2764,x:11,y:2},{code:0x1f9e1,x:7,y:9},{code:0x1f49b,x:8,y:4},{code:0x1f49a,x:7,y:4},{code:0x1f499,x:6,y:4},{code:0x1f49c,x:9,y:4},{code:0x1f5a4,x:10,y:6},{code:0x1f4af,x:3,y:6},{code:0x1f4a2,x:2,y:5},{code:0x1f4a5,x:5,y:5},{code:0x1f4ab,x:10,y:5},{code:0x1f4a6,x:6,y:5},{code:0x1f4a8,x:8,y:5},{code:0x1f573,x:5,y:6},{code:0x1f4a3,x:3,y:5},{code:0x1f4ac,x:0,y:6},{code:0x1f441,x:4,y:0},{code:0x1f5e8,x:0,y:7},{code:0x1f5ef,x:1,y:7},{code:0x1f4ad,x:1,y:6},{code:0x1f4a4,x:4,y:5},{code:0x1f453,x:0,y:2},{code:0x1f576,x:6,y:6},{code:0x1f97d,x:9,y:8},{code:0x1f97c,x:8,y:8},{code:0x1f454,x:1,y:2},{code:0x1f455,x:2,y:2},{code:0x1f456,x:3,y:2},{code:0x1f9e3,x:9,y:9},{code:0x1f9e4,x:10,y:9},{code:0x1f9e5,x:0,y:10},{code:0x1f9e6,x:1,y:10},{code:0x1f457,x:4,y:2},{code:0x1f458,x:5,y:2},{code:0x1f459,x:6,y:2},{code:0x1f45a,x:7,y:2},{code:0x1f45b,x:8,y:2},{code:0x1f45c,x:9,y:2},{code:0x1f45d,x:10,y:2},{code:0x1f6cd,x:4,y:7},{code:0x1f392,x:0,y:0},{code:0x1f45e,x:0,y:3},{code:0x1f45f,x:1,y:3},{code:0x1f97e,x:10,y:8},{code:0x1f97f,x:0,y:9},{code:0x1f460,x:2,y:3},{code:0x1f461,x:3,y:3},{code:0x1f462,x:4,y:3},{code:0x1f451,x:9,y:1},{code:0x1f452,x:10,y:1},{code:0x1f3a9,x:2,y:0},{code:0x1f393,x:1,y:0},{code:0x1f9e2,x:8,y:9},{code:0x26d1,x:7,y:10},{code:0x1f4ff,x:4,y:6},{code:0x1f484,x:5,y:3},{code:0x1f48d,x:9,y:3},{code:0x1f48e,x:10,y:3}],\n    \"animals_and_nature\": [{code:0x1f435,x:6,y:6},{code:0x1f412,x:4,y:3},{code:0x1f98d,x:2,y:9},{code:0x1f436,x:7,y:6},{code:0x1f415,x:7,y:3},{code:0x1f429,x:6,y:5},{code:0x1f43a,x:0,y:7},{code:0x1f98a,x:10,y:8},{code:0x1f99d,x:7,y:10},{code:0x1f408,x:5,y:2},{code:0x1f981,x:1,y:8},{code:0x1f42f,x:1,y:6},{code:0x1f405,x:2,y:2},{code:0x1f406,x:3,y:2},{code:0x1f434,x:5,y:6},{code:0x1f40e,x:0,y:3},{code:0x1f984,x:4,y:8},{code:0x1f993,x:8,y:9},{code:0x1f98c,x:1,y:9},{code:0x1f42e,x:0,y:6},{code:0x1f402,x:10,y:1},{code:0x1f403,x:0,y:2},{code:0x1f404,x:1,y:2},{code:0x1f437,x:8,y:6},{code:0x1f416,x:9,y:3},{code:0x1f417,x:10,y:3},{code:0x1f43d,x:3,y:7},{code:0x1f40f,x:1,y:3},{code:0x1f411,x:3,y:3},{code:0x1f410,x:2,y:3},{code:0x1f42a,x:7,y:5},{code:0x1f42b,x:8,y:5},{code:0x1f999,x:3,y:10},{code:0x1f992,x:7,y:9},{code:0x1f418,x:0,y:4},{code:0x1f98f,x:4,y:9},{code:0x1f99b,x:5,y:10},{code:0x1f42d,x:10,y:5},{code:0x1f401,x:9,y:1},{code:0x1f400,x:8,y:1},{code:0x1f439,x:10,y:6},{code:0x1f430,x:2,y:6},{code:0x1f407,x:4,y:2},{code:0x1f43f,x:5,y:7},{code:0x1f994,x:9,y:9},{code:0x1f987,x:7,y:8},{code:0x1f43b,x:1,y:7},{code:0x1f428,x:5,y:5},{code:0x1f43c,x:2,y:7},{code:0x1f998,x:2,y:10},{code:0x1f9a1,x:11,y:0},{code:0x1f43e,x:4,y:7},{code:0x1f983,x:3,y:8},{code:0x1f414,x:6,y:3},{code:0x1f413,x:5,y:3},{code:0x1f423,x:0,y:5},{code:0x1f424,x:1,y:5},{code:0x1f425,x:2,y:5},{code:0x1f426,x:3,y:5},{code:0x1f427,x:4,y:5},{code:0x1f54a,x:7,y:7},{code:0x1f985,x:5,y:8},{code:0x1f986,x:6,y:8},{code:0x1f9a2,x:11,y:1},{code:0x1f989,x:9,y:8},{code:0x1f99a,x:4,y:10},{code:0x1f99c,x:6,y:10},{code:0x1f438,x:9,y:6},{code:0x1f40a,x:7,y:2},{code:0x1f422,x:10,y:4},{code:0x1f98e,x:3,y:9},{code:0x1f40d,x:10,y:2},{code:0x1f432,x:3,y:6},{code:0x1f409,x:6,y:2},{code:0x1f995,x:10,y:9},{code:0x1f996,x:0,y:10},{code:0x1f433,x:4,y:6},{code:0x1f40b,x:8,y:2},{code:0x1f42c,x:9,y:5},{code:0x1f41f,x:7,y:4},{code:0x1f420,x:8,y:4},{code:0x1f421,x:9,y:4},{code:0x1f988,x:8,y:8},{code:0x1f419,x:1,y:4},{code:0x1f41a,x:2,y:4},{code:0x1f40c,x:9,y:2},{code:0x1f98b,x:0,y:9},{code:0x1f41b,x:3,y:4},{code:0x1f41c,x:4,y:4},{code:0x1f41d,x:5,y:4},{code:0x1f41e,x:6,y:4},{code:0x1f997,x:1,y:10},{code:0x1f577,x:8,y:7},{code:0x1f578,x:9,y:7},{code:0x1f982,x:2,y:8},{code:0x1f99f,x:9,y:10},{code:0x1f9a0,x:10,y:10},{code:0x1f490,x:6,y:7},{code:0x1f338,x:6,y:0},{code:0x1f3f5,x:7,y:1},{code:0x1f339,x:7,y:0},{code:0x1f940,x:10,y:7},{code:0x1f33a,x:8,y:0},{code:0x1f33b,x:9,y:0},{code:0x1f33c,x:10,y:0},{code:0x1f337,x:5,y:0},{code:0x1f331,x:0,y:0},{code:0x1f344,x:6,y:1},{code:0x1f332,x:1,y:0},{code:0x1f333,x:2,y:0},{code:0x1f334,x:3,y:0},{code:0x1f335,x:4,y:0},{code:0x1f33e,x:0,y:1},{code:0x1f33f,x:1,y:1},{code:0x2618,x:11,y:8},{code:0x1f340,x:2,y:1},{code:0x1f341,x:3,y:1},{code:0x1f342,x:4,y:1},{code:0x1f343,x:5,y:1},{code:0x1f980,x:0,y:8},{code:0x1f99e,x:8,y:10},{code:0x1f990,x:5,y:9},{code:0x1f991,x:6,y:9}],\n    \"food_and_drinks\": [{code:0x1f347,x:8,y:0},{code:0x1f348,x:9,y:0},{code:0x1f349,x:0,y:1},{code:0x1f34a,x:1,y:1},{code:0x1f34b,x:2,y:1},{code:0x1f34c,x:3,y:1},{code:0x1f34d,x:4,y:1},{code:0x1f96d,x:10,y:0},{code:0x1f34e,x:5,y:1},{code:0x1f34f,x:6,y:1},{code:0x1f350,x:7,y:1},{code:0x1f351,x:8,y:1},{code:0x1f352,x:9,y:1},{code:0x1f353,x:0,y:2},{code:0x1f95d,x:4,y:8},{code:0x1f345,x:6,y:0},{code:0x1f965,x:2,y:9},{code:0x1f951,x:2,y:7},{code:0x1f346,x:7,y:0},{code:0x1f954,x:5,y:7},{code:0x1f955,x:6,y:7},{code:0x1f33d,x:5,y:0},{code:0x1f336,x:4,y:0},{code:0x1f952,x:3,y:7},{code:0x1f96c,x:9,y:9},{code:0x1f966,x:3,y:9},{code:0x1f95c,x:3,y:8},{code:0x1f330,x:3,y:0},{code:0x1f35e,x:1,y:3},{code:0x1f950,x:1,y:7},{code:0x1f956,x:7,y:7},{code:0x1f968,x:5,y:9},{code:0x1f96f,x:10,y:2},{code:0x1f95e,x:5,y:8},{code:0x1f9c0,x:10,y:3},{code:0x1f356,x:3,y:2},{code:0x1f357,x:4,y:2},{code:0x1f969,x:6,y:9},{code:0x1f953,x:4,y:7},{code:0x1f354,x:1,y:2},{code:0x1f35f,x:2,y:3},{code:0x1f355,x:2,y:2},{code:0x1f32d,x:0,y:0},{code:0x1f96a,x:7,y:9},{code:0x1f32e,x:1,y:0},{code:0x1f32f,x:2,y:0},{code:0x1f959,x:0,y:8},{code:0x1f95a,x:1,y:8},{code:0x1f373,x:2,y:5},{code:0x1f958,x:9,y:7},{code:0x1f372,x:1,y:5},{code:0x1f963,x:0,y:9},{code:0x1f957,x:8,y:7},{code:0x1f37f,x:4,y:6},{code:0x1f9c2,x:10,y:5},{code:0x1f96b,x:8,y:9},{code:0x1f371,x:0,y:5},{code:0x1f358,x:5,y:2},{code:0x1f359,x:6,y:2},{code:0x1f35a,x:7,y:2},{code:0x1f35b,x:8,y:2},{code:0x1f35c,x:9,y:2},{code:0x1f35d,x:0,y:3},{code:0x1f360,x:3,y:3},{code:0x1f362,x:5,y:3},{code:0x1f363,x:6,y:3},{code:0x1f364,x:7,y:3},{code:0x1f365,x:8,y:3},{code:0x1f96e,x:10,y:1},{code:0x1f361,x:4,y:3},{code:0x1f95f,x:6,y:8},{code:0x1f960,x:7,y:8},{code:0x1f961,x:8,y:8},{code:0x1f366,x:9,y:3},{code:0x1f367,x:0,y:4},{code:0x1f368,x:1,y:4},{code:0x1f369,x:2,y:4},{code:0x1f36a,x:3,y:4},{code:0x1f382,x:5,y:6},{code:0x1f370,x:9,y:4},{code:0x1f9c1,x:10,y:4},{code:0x1f967,x:4,y:9},{code:0x1f36b,x:4,y:4},{code:0x1f36c,x:5,y:4},{code:0x1f36d,x:6,y:4},{code:0x1f36e,x:7,y:4},{code:0x1f36f,x:8,y:4},{code:0x1f37c,x:1,y:6},{code:0x1f95b,x:2,y:8},{code:0x2615,x:4,y:10},{code:0x1f375,x:4,y:5},{code:0x1f376,x:5,y:5},{code:0x1f37e,x:3,y:6},{code:0x1f377,x:6,y:5},{code:0x1f378,x:7,y:5},{code:0x1f379,x:8,y:5},{code:0x1f37a,x:9,y:5},{code:0x1f37b,x:0,y:6},{code:0x1f942,x:8,y:6},{code:0x1f943,x:9,y:6},{code:0x1f964,x:1,y:9},{code:0x1f962,x:9,y:8},{code:0x1f37d,x:2,y:6},{code:0x1f374,x:3,y:5},{code:0x1f944,x:0,y:7},{code:0x1f52a,x:7,y:6},{code:0x1f3fa,x:6,y:6}],\n    \"travel_and_places\": [{code:0x1f30d,x:13,y:0},{code:0x1f30e,x:0,y:1},{code:0x1f30f,x:1,y:1},{code:0x1f310,x:2,y:1},{code:0x1f5fa,x:0,y:8},{code:0x1f5fe,x:4,y:8},{code:0x1f9ed,x:12,y:12},{code:0x1f3d4,x:9,y:3},{code:0x26f0,x:14,y:8},{code:0x1f30b,x:11,y:0},{code:0x1f5fb,x:1,y:8},{code:0x1f3d5,x:10,y:3},{code:0x1f3d6,x:11,y:3},{code:0x1f3dc,x:3,y:4},{code:0x1f3dd,x:4,y:4},{code:0x1f3de,x:5,y:4},{code:0x1f3df,x:6,y:4},{code:0x1f3db,x:2,y:4},{code:0x1f3d7,x:12,y:3},{code:0x1f9f1,x:13,y:12},{code:0x1f3d8,x:13,y:3},{code:0x1f3da,x:1,y:4},{code:0x1f3e0,x:7,y:4},{code:0x1f3e1,x:8,y:4},{code:0x1f3e2,x:9,y:4},{code:0x1f3e3,x:10,y:4},{code:0x1f3e4,x:11,y:4},{code:0x1f3e5,x:12,y:4},{code:0x1f3e6,x:13,y:4},{code:0x1f3e8,x:0,y:5},{code:0x1f3e9,x:1,y:5},{code:0x1f3ea,x:2,y:5},{code:0x1f3eb,x:3,y:5},{code:0x1f3ec,x:4,y:5},{code:0x1f3ed,x:5,y:5},{code:0x1f3ef,x:6,y:5},{code:0x1f3f0,x:7,y:5},{code:0x1f492,x:9,y:5},{code:0x1f5fc,x:2,y:8},{code:0x1f5fd,x:3,y:8},{code:0x26ea,x:14,y:7},{code:0x1f54c,x:0,y:6},{code:0x1f54d,x:1,y:6},{code:0x26e9,x:14,y:6},{code:0x1f54b,x:13,y:5},{code:0x26f2,x:14,y:10},{code:0x26fa,x:0,y:14},{code:0x1f301,x:1,y:0},{code:0x1f303,x:3,y:0},{code:0x1f3d9,x:0,y:4},{code:0x1f304,x:4,y:0},{code:0x1f305,x:5,y:0},{code:0x1f306,x:6,y:0},{code:0x1f307,x:7,y:0},{code:0x1f309,x:9,y:0},{code:0x2668,x:14,y:0},{code:0x1f3a0,x:1,y:3},{code:0x1f3a1,x:2,y:3},{code:0x1f3a2,x:3,y:3},{code:0x1f488,x:8,y:5},{code:0x1f3aa,x:5,y:3},{code:0x1f682,x:8,y:8},{code:0x1f683,x:9,y:8},{code:0x1f684,x:10,y:8},{code:0x1f685,x:11,y:8},{code:0x1f686,x:12,y:8},{code:0x1f687,x:13,y:8},{code:0x1f688,x:0,y:9},{code:0x1f689,x:1,y:9},{code:0x1f68a,x:2,y:9},{code:0x1f69d,x:7,y:10},{code:0x1f69e,x:8,y:10},{code:0x1f68b,x:3,y:9},{code:0x1f68c,x:4,y:9},{code:0x1f68d,x:5,y:9},{code:0x1f68e,x:6,y:9},{code:0x1f690,x:8,y:9},{code:0x1f691,x:9,y:9},{code:0x1f692,x:10,y:9},{code:0x1f693,x:11,y:9},{code:0x1f694,x:12,y:9},{code:0x1f695,x:13,y:9},{code:0x1f696,x:0,y:10},{code:0x1f697,x:1,y:10},{code:0x1f698,x:2,y:10},{code:0x1f699,x:3,y:10},{code:0x1f69a,x:4,y:10},{code:0x1f69b,x:5,y:10},{code:0x1f69c,x:6,y:10},{code:0x1f3ce,x:8,y:3},{code:0x1f3cd,x:7,y:3},{code:0x1f6f5,x:4,y:12},{code:0x1f6b2,x:4,y:11},{code:0x1f6f4,x:3,y:12},{code:0x1f6f9,x:7,y:12},{code:0x1f68f,x:7,y:9},{code:0x1f6e3,x:9,y:11},{code:0x1f6e4,x:10,y:11},{code:0x1f6e2,x:8,y:11},{code:0x26fd,x:1,y:14},{code:0x1f6a8,x:3,y:11},{code:0x1f6a5,x:0,y:11},{code:0x1f6a6,x:1,y:11},{code:0x1f6d1,x:6,y:11},{code:0x1f6a7,x:2,y:11},{code:0x2693,x:14,y:1},{code:0x26f5,x:14,y:13},{code:0x1f6f6,x:5,y:12},{code:0x1f3a3,x:4,y:3},{code:0x1f6a4,x:13,y:10},{code:0x1f6f3,x:2,y:12},{code:0x26f4,x:14,y:12},{code:0x1f6e5,x:11,y:11},{code:0x1f6a2,x:12,y:10},{code:0x2708,x:2,y:14},{code:0x1f6e9,x:12,y:11},{code:0x1f6eb,x:13,y:11},{code:0x1f6ec,x:0,y:12},{code:0x1f4ba,x:11,y:5},{code:0x1f681,x:7,y:8},{code:0x1f69f,x:9,y:10},{code:0x1f6a0,x:10,y:10},{code:0x1f6a1,x:11,y:10},{code:0x1f6f0,x:1,y:12},{code:0x1f680,x:6,y:8},{code:0x1f6f8,x:6,y:12},{code:0x1f6ce,x:5,y:11},{code:0x1f9f3,x:0,y:13},{code:0x231b,x:3,y:13},{code:0x23f3,x:7,y:13},{code:0x231a,x:2,y:13},{code:0x23f0,x:4,y:13},{code:0x23f1,x:5,y:13},{code:0x23f2,x:6,y:13},{code:0x1f570,x:12,y:7},{code:0x1f55b,x:13,y:6},{code:0x1f567,x:11,y:7},{code:0x1f550,x:2,y:6},{code:0x1f55c,x:0,y:7},{code:0x1f551,x:3,y:6},{code:0x1f55d,x:1,y:7},{code:0x1f552,x:4,y:6},{code:0x1f55e,x:2,y:7},{code:0x1f553,x:5,y:6},{code:0x1f55f,x:3,y:7},{code:0x1f554,x:6,y:6},{code:0x1f560,x:4,y:7},{code:0x1f555,x:7,y:6},{code:0x1f561,x:5,y:7},{code:0x1f556,x:8,y:6},{code:0x1f562,x:6,y:7},{code:0x1f557,x:9,y:6},{code:0x1f563,x:7,y:7},{code:0x1f558,x:10,y:6},{code:0x1f564,x:8,y:7},{code:0x1f559,x:11,y:6},{code:0x1f565,x:9,y:7},{code:0x1f55a,x:12,y:6},{code:0x1f566,x:10,y:7},{code:0x1f311,x:3,y:1},{code:0x1f312,x:4,y:1},{code:0x1f313,x:5,y:1},{code:0x1f314,x:6,y:1},{code:0x1f315,x:7,y:1},{code:0x1f316,x:8,y:1},{code:0x1f317,x:9,y:1},{code:0x1f318,x:10,y:1},{code:0x1f319,x:11,y:1},{code:0x1f31a,x:12,y:1},{code:0x1f31b,x:13,y:1},{code:0x1f31c,x:0,y:2},{code:0x1f321,x:5,y:2},{code:0x2600,x:8,y:13},{code:0x1f31d,x:1,y:2},{code:0x1f31e,x:2,y:2},{code:0x2b50,x:4,y:14},{code:0x1f31f,x:3,y:2},{code:0x1f320,x:4,y:2},{code:0x1f30c,x:12,y:0},{code:0x2601,x:9,y:13},{code:0x26c5,x:14,y:4},{code:0x26c8,x:14,y:5},{code:0x1f324,x:6,y:2},{code:0x1f325,x:7,y:2},{code:0x1f326,x:8,y:2},{code:0x1f327,x:9,y:2},{code:0x1f328,x:10,y:2},{code:0x1f329,x:11,y:2},{code:0x1f32a,x:12,y:2},{code:0x1f32b,x:13,y:2},{code:0x1f32c,x:0,y:3},{code:0x1f300,x:0,y:0},{code:0x1f308,x:8,y:0},{code:0x1f302,x:2,y:0},{code:0x2602,x:10,y:13},{code:0x2614,x:13,y:13},{code:0x26f1,x:14,y:9},{code:0x26a1,x:14,y:2},{code:0x2744,x:3,y:14},{code:0x2603,x:11,y:13},{code:0x26c4,x:14,y:3},{code:0x2604,x:12,y:13},{code:0x1f525,x:12,y:5},{code:0x1f4a7,x:10,y:5},{code:0x1f30a,x:10,y:0}],\n    \"events\": [{code:0x1f383,x:4,y:0},{code:0x1f384,x:5,y:0},{code:0x1f386,x:6,y:0},{code:0x1f387,x:7,y:0},{code:0x1f9e8,x:5,y:6},{code:0x2728,x:9,y:3},{code:0x1f388,x:8,y:0},{code:0x1f389,x:0,y:1},{code:0x1f38a,x:1,y:1},{code:0x1f38b,x:2,y:1},{code:0x1f38d,x:3,y:1},{code:0x1f38e,x:4,y:1},{code:0x1f38f,x:5,y:1},{code:0x1f390,x:6,y:1},{code:0x1f391,x:7,y:1},{code:0x1f9e7,x:4,y:6},{code:0x1f380,x:2,y:0},{code:0x1f381,x:3,y:0},{code:0x1f397,x:0,y:2},{code:0x1f39f,x:1,y:2},{code:0x1f3ab,x:3,y:2},{code:0x1f396,x:8,y:1},{code:0x1f3c6,x:7,y:3},{code:0x1f3c5,x:6,y:3},{code:0x1f947,x:4,y:5},{code:0x1f948,x:5,y:5},{code:0x1f949,x:6,y:5},{code:0x26bd,x:8,y:8},{code:0x26be,x:9,y:0},{code:0x1f94e,x:2,y:6},{code:0x1f3c0,x:5,y:3},{code:0x1f3d0,x:2,y:4},{code:0x1f3c8,x:8,y:3},{code:0x1f3c9,x:0,y:4},{code:0x1f3be,x:3,y:3},{code:0x1f94f,x:3,y:6},{code:0x1f3b3,x:1,y:3},{code:0x1f3cf,x:1,y:4},{code:0x1f3d1,x:3,y:4},{code:0x1f3d2,x:4,y:4},{code:0x1f94d,x:1,y:6},{code:0x1f3d3,x:5,y:4},{code:0x1f3f8,x:6,y:4},{code:0x1f94a,x:7,y:5},{code:0x1f94b,x:8,y:5},{code:0x1f945,x:3,y:5},{code:0x26f3,x:9,y:1},{code:0x26f8,x:9,y:2},{code:0x1f3bd,x:2,y:3},{code:0x1f3bf,x:4,y:3},{code:0x1f6f7,x:2,y:5},{code:0x1f94c,x:0,y:6},{code:0x1f3af,x:6,y:2},{code:0x1f3b1,x:8,y:2},{code:0x1f52e,x:8,y:4},{code:0x1f9ff,x:1,y:7},{code:0x1f3ae,x:5,y:2},{code:0x1f579,x:0,y:5},{code:0x1f3b0,x:7,y:2},{code:0x1f3b2,x:0,y:3},{code:0x1f9e9,x:6,y:6},{code:0x1f9f8,x:0,y:7},{code:0x2660,x:4,y:8},{code:0x2665,x:6,y:8},{code:0x2666,x:7,y:8},{code:0x2663,x:5,y:8},{code:0x265f,x:3,y:8},{code:0x1f0cf,x:1,y:0},{code:0x1f004,x:0,y:0},{code:0x1f3ad,x:4,y:2},{code:0x1f5bc,x:1,y:5},{code:0x1f3a8,x:2,y:2},{code:0x1f9f5,x:7,y:6},{code:0x1f9f6,x:8,y:6}],\n    \"objects\": [{code:0x1f507,x:1,y:7},{code:0x1f508,x:2,y:7},{code:0x1f509,x:3,y:7},{code:0x1f50a,x:4,y:7},{code:0x1f4e2,x:3,y:5},{code:0x1f4e3,x:4,y:5},{code:0x1f4ef,x:3,y:6},{code:0x1f514,x:1,y:8},{code:0x1f515,x:2,y:8},{code:0x1f3bc,x:2,y:1},{code:0x1f3b5,x:8,y:0},{code:0x1f3b6,x:9,y:0},{code:0x1f399,x:0,y:0},{code:0x1f39a,x:1,y:0},{code:0x1f39b,x:2,y:0},{code:0x1f3a4,x:4,y:0},{code:0x1f3a7,x:6,y:0},{code:0x1f4fb,x:11,y:6},{code:0x1f3b7,x:10,y:0},{code:0x1f3b8,x:11,y:0},{code:0x1f3b9,x:12,y:0},{code:0x1f3ba,x:0,y:1},{code:0x1f3bb,x:1,y:1},{code:0x1f941,x:6,y:11},{code:0x1f4f1,x:5,y:6},{code:0x1f4f2,x:6,y:6},{code:0x260e,x:13,y:3},{code:0x1f4de,x:12,y:4},{code:0x1f4df,x:0,y:5},{code:0x1f4e0,x:1,y:5},{code:0x1f50b,x:5,y:7},{code:0x1f50c,x:6,y:7},{code:0x1f4bb,x:4,y:2},{code:0x1f5a5,x:5,y:9},{code:0x1f5a8,x:6,y:9},{code:0x2328,x:13,y:2},{code:0x1f5b1,x:7,y:9},{code:0x1f5b2,x:8,y:9},{code:0x1f4bd,x:6,y:2},{code:0x1f4be,x:7,y:2},{code:0x1f4bf,x:8,y:2},{code:0x1f4c0,x:9,y:2},{code:0x1f9ee,x:2,y:12},{code:0x1f3a5,x:5,y:0},{code:0x1f39e,x:3,y:0},{code:0x1f4fd,x:0,y:7},{code:0x1f3ac,x:7,y:0},{code:0x1f4fa,x:10,y:6},{code:0x1f4f7,x:7,y:6},{code:0x1f4f8,x:8,y:6},{code:0x1f4f9,x:9,y:6},{code:0x1f4fc,x:12,y:6},{code:0x1f50d,x:7,y:7},{code:0x1f50e,x:8,y:7},{code:0x1f56f,x:12,y:8},{code:0x1f4a1,x:8,y:1},{code:0x1f526,x:5,y:8},{code:0x1f3ee,x:3,y:1},{code:0x1f4d4,x:3,y:4},{code:0x1f4d5,x:4,y:4},{code:0x1f4d6,x:5,y:4},{code:0x1f4d7,x:6,y:4},{code:0x1f4d8,x:7,y:4},{code:0x1f4d9,x:8,y:4},{code:0x1f4da,x:9,y:4},{code:0x1f4d3,x:2,y:4},{code:0x1f4d2,x:1,y:4},{code:0x1f4c3,x:12,y:2},{code:0x1f4dc,x:10,y:4},{code:0x1f4c4,x:0,y:3},{code:0x1f4f0,x:4,y:6},{code:0x1f5de,x:4,y:10},{code:0x1f4d1,x:0,y:4},{code:0x1f516,x:3,y:8},{code:0x1f3f7,x:4,y:1},{code:0x1f4b0,x:9,y:1},{code:0x1f4b4,x:11,y:1},{code:0x1f4b5,x:12,y:1},{code:0x1f4b6,x:0,y:2},{code:0x1f4b7,x:1,y:2},{code:0x1f4b8,x:2,y:2},{code:0x1f4b3,x:10,y:1},{code:0x1f9fe,x:13,y:0},{code:0x1f4b9,x:3,y:2},{code:0x2709,x:1,y:13},{code:0x1f4e7,x:8,y:5},{code:0x1f4e8,x:9,y:5},{code:0x1f4e9,x:10,y:5},{code:0x1f4e4,x:5,y:5},{code:0x1f4e5,x:6,y:5},{code:0x1f4e6,x:7,y:5},{code:0x1f4eb,x:12,y:5},{code:0x1f4ea,x:11,y:5},{code:0x1f4ec,x:0,y:6},{code:0x1f4ed,x:1,y:6},{code:0x1f4ee,x:2,y:6},{code:0x1f5f3,x:6,y:10},{code:0x270f,x:2,y:13},{code:0x2712,x:3,y:13},{code:0x1f58b,x:2,y:9},{code:0x1f58a,x:1,y:9},{code:0x1f58c,x:3,y:9},{code:0x1f58d,x:4,y:9},{code:0x1f4dd,x:11,y:4},{code:0x1f4bc,x:5,y:2},{code:0x1f4c1,x:10,y:2},{code:0x1f4c2,x:11,y:2},{code:0x1f5c2,x:9,y:9},{code:0x1f4c5,x:1,y:3},{code:0x1f4c6,x:2,y:3},{code:0x1f5d2,x:0,y:10},{code:0x1f5d3,x:1,y:10},{code:0x1f4c7,x:3,y:3},{code:0x1f4c8,x:4,y:3},{code:0x1f4c9,x:5,y:3},{code:0x1f4ca,x:6,y:3},{code:0x1f4cb,x:7,y:3},{code:0x1f4cc,x:8,y:3},{code:0x1f4cd,x:9,y:3},{code:0x1f4ce,x:10,y:3},{code:0x1f587,x:0,y:9},{code:0x1f4cf,x:11,y:3},{code:0x1f4d0,x:12,y:3},{code:0x2702,x:0,y:13},{code:0x1f5c3,x:10,y:9},{code:0x1f5c4,x:11,y:9},{code:0x1f5d1,x:12,y:9},{code:0x1f512,x:12,y:7},{code:0x1f513,x:0,y:8},{code:0x1f50f,x:9,y:7},{code:0x1f510,x:10,y:7},{code:0x1f511,x:11,y:7},{code:0x1f5dd,x:3,y:10},{code:0x1f528,x:7,y:8},{code:0x26cf,x:13,y:11},{code:0x2692,x:13,y:4},{code:0x1f6e0,x:3,y:11},{code:0x1f5e1,x:5,y:10},{code:0x2694,x:13,y:5},{code:0x1f52b,x:9,y:8},{code:0x1f3f9,x:5,y:1},{code:0x1f6e1,x:4,y:11},{code:0x1f527,x:6,y:8},{code:0x1f529,x:8,y:8},{code:0x2699,x:13,y:8},{code:0x1f5dc,x:2,y:10},{code:0x2696,x:13,y:6},{code:0x1f517,x:4,y:8},{code:0x26d3,x:13,y:12},{code:0x1f9f0,x:4,y:12},{code:0x1f9f2,x:5,y:12},{code:0x2697,x:13,y:7},{code:0x1f9ea,x:12,y:11},{code:0x1f9eb,x:0,y:12},{code:0x1f9ec,x:1,y:12},{code:0x1f52c,x:10,y:8},{code:0x1f52d,x:11,y:8},{code:0x1f4e1,x:2,y:5},{code:0x1f489,x:6,y:1},{code:0x1f48a,x:7,y:1},{code:0x1f6aa,x:8,y:10},{code:0x1f6cf,x:1,y:11},{code:0x1f6cb,x:0,y:11},{code:0x1f6bd,x:10,y:10},{code:0x1f6bf,x:11,y:10},{code:0x1f6c1,x:12,y:10},{code:0x1f9f4,x:6,y:12},{code:0x1f9f7,x:7,y:12},{code:0x1f9f9,x:8,y:12},{code:0x1f9fa,x:9,y:12},{code:0x1f9fb,x:10,y:12},{code:0x1f9fc,x:11,y:12},{code:0x1f9fd,x:12,y:12},{code:0x1f9ef,x:3,y:12},{code:0x1f6d2,x:2,y:11},{code:0x1f6ac,x:9,y:10},{code:0x26b0,x:13,y:9},{code:0x26b1,x:13,y:10},{code:0x1f5ff,x:7,y:10}],\n    \"signs\": [{code:0x1f6ae,x:4,y:8},{code:0x1f6b0,x:6,y:8},{code:0x267f,x:3,y:13},{code:0x1f6b9,x:11,y:8},{code:0x1f6ba,x:12,y:8},{code:0x1f6bb,x:13,y:8},{code:0x1f6bc,x:14,y:8},{code:0x1f6be,x:0,y:9},{code:0x1f6c2,x:1,y:9},{code:0x1f6c3,x:2,y:9},{code:0x1f6c4,x:3,y:9},{code:0x1f6c5,x:4,y:9},{code:0x1f3e7,x:13,y:4},{code:0x26a0,x:7,y:13},{code:0x1f6b8,x:10,y:8},{code:0x26d4,x:11,y:13},{code:0x1f6ab,x:2,y:8},{code:0x1f6b3,x:8,y:8},{code:0x1f6ad,x:3,y:8},{code:0x1f6af,x:5,y:8},{code:0x1f6b1,x:7,y:8},{code:0x1f6b7,x:9,y:8},{code:0x1f4f5,x:7,y:5},{code:0x1f51e,x:7,y:6},{code:0x2622,x:10,y:11},{code:0x2623,x:11,y:11},{code:0x2b06,x:15,y:5},{code:0x2197,x:14,y:9},{code:0x27a1,x:14,y:14},{code:0x2198,x:0,y:10},{code:0x2b07,x:15,y:6},{code:0x2199,x:1,y:10},{code:0x2b05,x:15,y:4},{code:0x2196,x:13,y:9},{code:0x2195,x:12,y:9},{code:0x2194,x:11,y:9},{code:0x21a9,x:2,y:10},{code:0x21aa,x:3,y:10},{code:0x2934,x:15,y:2},{code:0x2935,x:15,y:3},{code:0x1f503,x:12,y:5},{code:0x1f504,x:13,y:5},{code:0x1f519,x:2,y:6},{code:0x1f51a,x:3,y:6},{code:0x1f51b,x:4,y:6},{code:0x1f51c,x:5,y:6},{code:0x1f51d,x:6,y:6},{code:0x1f6d0,x:5,y:9},{code:0x269b,x:5,y:13},{code:0x1f549,x:14,y:7},{code:0x2721,x:1,y:14},{code:0x2638,x:1,y:12},{code:0x262f,x:0,y:12},{code:0x271d,x:0,y:14},{code:0x2626,x:12,y:11},{code:0x262a,x:13,y:11},{code:0x262e,x:14,y:11},{code:0x1f54e,x:0,y:8},{code:0x1f52f,x:14,y:6},{code:0x2648,x:4,y:12},{code:0x2649,x:5,y:12},{code:0x264a,x:6,y:12},{code:0x264b,x:7,y:12},{code:0x264c,x:8,y:12},{code:0x264d,x:9,y:12},{code:0x264e,x:10,y:12},{code:0x264f,x:11,y:12},{code:0x2650,x:12,y:12},{code:0x2651,x:13,y:12},{code:0x2652,x:14,y:12},{code:0x2653,x:0,y:13},{code:0x26ce,x:10,y:13},{code:0x1f500,x:9,y:5},{code:0x1f501,x:10,y:5},{code:0x1f502,x:11,y:5},{code:0x25b6,x:3,y:11},{code:0x23e9,x:5,y:10},{code:0x23ed,x:9,y:10},{code:0x23ef,x:11,y:10},{code:0x25c0,x:4,y:11},{code:0x23ea,x:6,y:10},{code:0x23ee,x:10,y:10},{code:0x1f53c,x:12,y:7},{code:0x23eb,x:7,y:10},{code:0x1f53d,x:13,y:7},{code:0x23ec,x:8,y:10},{code:0x23f8,x:12,y:10},{code:0x23f9,x:13,y:10},{code:0x23fa,x:14,y:10},{code:0x23cf,x:4,y:10},{code:0x1f3a6,x:11,y:4},{code:0x1f505,x:14,y:5},{code:0x1f506,x:0,y:6},{code:0x1f4f6,x:8,y:5},{code:0x1f4f3,x:5,y:5},{code:0x1f4f4,x:6,y:5},{code:0x2640,x:2,y:12},{code:0x2642,x:3,y:12},{code:0x2716,x:14,y:13},{code:0x2795,x:11,y:14},{code:0x2796,x:12,y:14},{code:0x2797,x:13,y:14},{code:0x267e,x:2,y:13},{code:0x203c,x:6,y:9},{code:0x2049,x:7,y:9},{code:0x2753,x:7,y:14},{code:0x2754,x:8,y:14},{code:0x2755,x:9,y:14},{code:0x2757,x:10,y:14},{code:0x3030,x:15,y:10},{code:0x1f4b1,x:2,y:5},{code:0x1f4b2,x:3,y:5},{code:0x2695,x:4,y:13},{code:0x267b,x:1,y:13},{code:0x269c,x:6,y:13},{code:0x1f531,x:1,y:7},{code:0x1f4db,x:4,y:5},{code:0x1f530,x:0,y:7},{code:0x2b55,x:15,y:9},{code:0x2705,x:12,y:13},{code:0x2611,x:9,y:11},{code:0x2714,x:13,y:13},{code:0x274c,x:5,y:14},{code:0x274e,x:6,y:14},{code:0x27b0,x:15,y:0},{code:0x27bf,x:15,y:1},{code:0x303d,x:15,y:11},{code:0x2733,x:2,y:14},{code:0x2734,x:3,y:14},{code:0x2747,x:4,y:14},{code:0x00a9,x:12,y:0},{code:0x00ae,x:13,y:0},{code:0x2122,x:9,y:9},{code:0x1f520,x:9,y:6},{code:0x1f521,x:10,y:6},{code:0x1f522,x:11,y:6},{code:0x1f523,x:12,y:6},{code:0x1f524,x:13,y:6},{code:0x1f170,x:14,y:0},{code:0x1f18e,x:3,y:1},{code:0x1f171,x:0,y:1},{code:0x1f191,x:4,y:1},{code:0x1f192,x:5,y:1},{code:0x1f193,x:6,y:1},{code:0x2139,x:10,y:9},{code:0x1f194,x:7,y:1},{code:0x24c2,x:0,y:11},{code:0x1f195,x:8,y:1},{code:0x1f196,x:9,y:1},{code:0x1f17e,x:1,y:1},{code:0x1f197,x:10,y:1},{code:0x1f17f,x:2,y:1},{code:0x1f198,x:11,y:1},{code:0x1f199,x:12,y:1},{code:0x1f19a,x:13,y:1},{code:0x1f201,x:10,y:3},{code:0x1f202,x:11,y:3},{code:0x1f237,x:4,y:4},{code:0x1f236,x:3,y:4},{code:0x1f22f,x:13,y:3},{code:0x1f250,x:8,y:4},{code:0x1f239,x:6,y:4},{code:0x1f21a,x:12,y:3},{code:0x1f232,x:14,y:3},{code:0x1f251,x:9,y:4},{code:0x1f238,x:5,y:4},{code:0x1f234,x:1,y:4},{code:0x1f233,x:0,y:4},{code:0x3297,x:15,y:12},{code:0x3299,x:15,y:13},{code:0x1f23a,x:7,y:4},{code:0x1f235,x:2,y:4},{code:0x1f534,x:4,y:7},{code:0x1f535,x:5,y:7},{code:0x26ab,x:9,y:13},{code:0x26aa,x:8,y:13},{code:0x2b1c,x:15,y:8},{code:0x25fc,x:6,y:11},{code:0x25fb,x:5,y:11},{code:0x25fe,x:8,y:11},{code:0x25fd,x:7,y:11},{code:0x25aa,x:1,y:11},{code:0x25ab,x:2,y:11},{code:0x1f536,x:6,y:7},{code:0x1f537,x:7,y:7},{code:0x1f538,x:8,y:7},{code:0x1f539,x:9,y:7},{code:0x1f53a,x:10,y:7},{code:0x1f53b,x:11,y:7},{code:0x1f4a0,x:1,y:5},{code:0x1f518,x:1,y:6},{code:0x1f533,x:3,y:7},{code:0x1f532,x:2,y:7},{code:0x1f3c1,x:12,y:4},{code:0x1f6a9,x:1,y:8},{code:0x1f38c,x:10,y:4},{code:0x1f3f4,x:0,y:5},{code:0x1f3f3,x:14,y:4},{code:0x1f1e6,x:14,y:1},{code:0x1f1e7,x:0,y:2},{code:0x1f1e8,x:1,y:2},{code:0x1f1e9,x:2,y:2},{code:0x1f1ea,x:3,y:2},{code:0x1f1eb,x:4,y:2},{code:0x1f1ec,x:5,y:2},{code:0x1f1ed,x:6,y:2},{code:0x1f1ee,x:7,y:2},{code:0x1f1ef,x:8,y:2},{code:0x1f1f0,x:9,y:2},{code:0x1f1f1,x:10,y:2},{code:0x1f1f2,x:11,y:2},{code:0x1f1f3,x:12,y:2},{code:0x1f1f4,x:13,y:2},{code:0x1f1f5,x:14,y:2},{code:0x1f1f6,x:0,y:3},{code:0x1f1f7,x:1,y:3},{code:0x1f1f8,x:2,y:3},{code:0x1f1f9,x:3,y:3},{code:0x1f1fa,x:4,y:3},{code:0x1f1fb,x:5,y:3},{code:0x1f1fc,x:6,y:3},{code:0x1f1fd,x:7,y:3},{code:0x1f1fe,x:8,y:3},{code:0x1f1ff,x:9,y:3}]\n};\n\nvar getEmoji = function (code) {\n    if (code < 0x10000) {\n        return String.fromCharCode(code);\n    }\n    var offset = code - 0x10000,\n        lead = 0xd800 + (offset >> 10),\n        trail = 0xdc00 + (offset & 0x3ff);\n    return String.fromCharCode(lead)+String.fromCharCode(trail);\n};\n\nvar emoji_data = {}, all = {};\n\nvar getEmojiByIndex = function (idx) {\n    var emoji;\n    for (var emoji_list in raw_data) {\n       if (raw_data[emoji_list][idx]) {\n           emoji = raw_data[emoji_list][idx];\n           break;\n       }\n    }\n    return getEmoji(emoji.code);\n};\n\nfor (var emoji_list in raw_data) {\n    _.each(raw_data[emoji_list], function (item) {\n        var emoji = getEmoji(item.code);\n        emoji_data[emoji] = item;\n        !all[emoji_list] && (all[emoji_list] = []);\n        all[emoji_list].push(emoji);\n    });\n}\n\nvar emoji_regexp = /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/g;\n\nString.prototype.emojify = function (options) {\n    options || (options = {});\n    let emoji_size = options.emoji_size || 20,\n        title = options.title ? ` title=\"${options.title}\" ` :\"\";\n    return this.replace(emoji_regexp, function (emoji) {\n        return `<span ${title} class=\"emoji emoji-w${emoji_size}\" data-emoji=\"${emoji}\"><span class=\"positioned-emoji\">${emoji}</span></span>`;\n    });\n};\n\nString.prototype.removeEmoji = function () {\n    return this.replace(emoji_regexp, function (emoji) {\n        var data = emoji_data[emoji];\n        if (data) {\n            return \"\";\n        } else {\n            return emoji;\n        }\n    });\n};\n\nString.prototype.replaceEmoji = function () {\n    return this.replace(emoji_regexp, function (emoji) {\n        var data = emoji_data[emoji];\n        if (data) {\n            return \" \";\n        } else {\n            return emoji;\n        }\n    });\n};\n\n$.fn.emojify = function (selector, options) {\n    this.find(selector).each(function () {\n        var text = $(this).html();\n        if ($(`<div>${text}</div>`).find('.positioned-emoji').length)\n            return;\n        $(this).html(text.emojify(options));\n    });\n    return this;\n};\n\nexport default {\n    all: all,\n    get: getEmoji,\n    getByIndex: getEmojiByIndex\n};\n","import deps from \"xabber-dependencies\"\n\nvar _ = deps._,\n    $ = deps.$,\n    hasher = deps.SHA1.b64_sha1;\n\nvar _image_cache = {};\n\nvar COLORS = [\n    \"#1abc9c\", \"#16a085\", \"#f1c40f\", \"#f39c12\",\n    \"#2ecc71\", \"#27ae60\", \"#e67e22\", \"#d35400\",\n    \"#3498db\", \"#2980b9\", \"#e74c3c\", \"#c0392b\",\n    \"#9b59b6\", \"#8e44ad\", \"#bdc3c7\", \"#34495e\",\n    \"#2c3e50\", \"#95a5a6\", \"#7f8c8d\", \"#ec87bf\",\n    \"#d870ad\", \"#f69785\", \"#9ba37e\", \"#b49255\",\n    \"#a94136\"\n];\n\nvar MAX_SIZE = 200;\nvar MAX_IMG_SIZE = 1280;\n\nvar b64toBlob = function (b64Data, contentType, sliceSize) {\n    contentType = contentType || '';\n    sliceSize = sliceSize || 512;\n    var byteCharacters = atob(b64Data);\n    var byteArrays = [];\n    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n        var slice = byteCharacters.slice(offset, offset + sliceSize);\n        var byteNumbers = new Array(slice.length);\n        for (var i = 0; i < slice.length; i++) {\n            byteNumbers[i] = slice.charCodeAt(i);\n        }\n        var byteArray = new Uint8Array(byteNumbers);\n        byteArrays.push(byteArray);\n    }\n    var blob = new Blob(byteArrays, {type: contentType});\n    return blob;\n};\n\nvar CachedImage = function (image) {\n    this.url = window.URL.createObjectURL(b64toBlob(image));\n    _image_cache[image] = this;\n    return this;\n};\n\nvar getCachedImage = function (image) {\n    // save often used image and get blob url for it\n    if (image instanceof CachedImage) {\n        return image;\n    } else if (image && (_.isString(image) && image.indexOf('http') == 0 || _.isObject(image) && image.url && image.url.indexOf('http') == 0)) {\n        if (_.isString(image))\n            return {url: image};\n        else if (_.isObject(image))\n            return image;\n    }\n    return _image_cache[image] || new CachedImage(image);\n};\n\nvar getDefaultAvatar = function (name, color, font, width, height) {\n    // generate colored avatar with first letters of username\n    var canvas = document.createElement('canvas'),\n        ctx = canvas.getContext('2d'),\n        _name = name ? name.trim() : '',\n        first_name, last_name, splitted_name = _name.split(' ', 2),\n        first_letter, second_letter;\n        // color_index;\n    first_name = splitted_name[0];\n    last_name = (splitted_name.length > 1 ? splitted_name[1] : '');\n    first_letter = first_name[0] || '';\n    if (last_name) {\n        second_letter = last_name[0];\n    } else {\n        second_letter = (first_name.length > 1 ? first_name[1] : '');\n    }\n    // color_index = Math.floor(hasher(_name).charCodeAt(0) % COLORS.length);\n    canvas.width = width || 256;\n    canvas.height = height || 256;\n    ctx.rect(0, 0, width || 256, height || 256);\n    ctx.fillStyle = color || getAccountColor(name);//COLORS[color_index];\n    ctx.fill();\n    ctx.font = font || \"bold 100px sans-serif\";\n    ctx.fillStyle = font ? '#000' : \"#FFF\";\n    ctx.textAlign = \"center\";\n    if (font){\n        ctx.textBaseline = 'ideographic';\n        ctx.fillText(_name, width/2 || 128, (height/2 + height *0.33) || 160);\n    }\n    else\n        ctx.fillText(first_letter.toUpperCase()+second_letter.toUpperCase(), 128, 160);\n    var image = canvas.toDataURL().replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n    return image;\n};\n\nvar getAccountColor = function (name) {\n    var _name = name ? name.trim() : '',\n        color_index = Math.floor(hasher(_name).charCodeAt(0) % COLORS.length);\n    return COLORS[color_index];\n};\n\nvar getImageSize = function (size, max_size) {\n    if (max_size){\n        if (size.width > size.height) {\n            if (size.width > max_size) {\n                size.height *= max_size / size.width;\n                size.width = max_size;\n            }\n        } else {\n            if (size.height > max_size) {\n                size.width *= max_size / size.height;\n                size.height = max_size;\n            }\n        }\n    }\n    return size;\n};\n\nvar compressImage = function (file) {\n    var image_obj = new Image(),\n        src = window.URL.createObjectURL(file),\n        deferred = new $.Deferred();\n    image_obj.onload = function () {\n        image_obj.onload = null;\n        var canvas = document.createElement('canvas'),\n            ctx = canvas.getContext('2d'),\n            width = image_obj.naturalWidth,\n            height = image_obj.naturalHeight,\n            file_type = file.type,\n            file_name = file.name,\n            new_size = getImageSize({width: width, height: height}, MAX_IMG_SIZE);\n        if (file.type === 'image/svg+xml' || file.type.includes('image/gif') || (width < MAX_IMG_SIZE && height < MAX_IMG_SIZE)) {\n            file.width = width;\n            file.height = height;\n            deferred.resolve(file);\n        }\n        canvas.width = new_size.width;\n        canvas.height = new_size.height;\n        ctx.drawImage(image_obj, 0, 0, new_size.width, new_size.height);\n        canvas.toBlob((blob) => {\n            const file = new File([blob], file_name, {\n                type: file_type,\n                lastModified: Date.now()\n            });\n            deferred.resolve(file);\n        }, file_type, 0.8);\n        window.URL.revokeObjectURL(src);\n    };\n    image_obj.onerror = function() {\n        image_obj.onerror = null;\n        window.URL.revokeObjectURL(src);\n        deferred.resolve(false);\n    };\n    image_obj.src = src;\n    return deferred.promise();\n};\n\nvar setCss = function (image_el, cached_image, img_size) {\n    var $image_el = $(image_el),\n        css = {\n            backgroundImage: 'url(\"' + cached_image.url + '\")',\n            backgroundSize: 'cover',\n            backgroundColor: '#FFF'\n        };\n    $image_el.css(css);\n};\n\nvar getCachedBackground = function (base64) {\n    if (base64.indexOf('http') == 0)\n        return base64;\n    return getCachedImage(base64.replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')).url;\n};\n\nvar getAvatarFromFile = function (file) {\n    var image_obj = new Image(),\n         src = window.URL.createObjectURL(file),\n         deferred = new $.Deferred();\n     image_obj.onload = function () {\n         image_obj.onload = null;\n         var canvas = document.createElement('canvas'),\n             ctx = canvas.getContext('2d'),\n             width = image_obj.naturalWidth,\n             height = image_obj.naturalHeight,\n             b64_image, hash,\n             new_size = getImageSize({width: width, height: height}, MAX_SIZE);\n         canvas.width = new_size.width;\n         canvas.height = new_size.height;\n         ctx.drawImage(image_obj, 0, 0, canvas.width, canvas.height);\n         b64_image = canvas.toDataURL().replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n         window.URL.revokeObjectURL(src);\n         canvas.toBlob((blob) => {\n             var reader = new FileReader();\n             reader.onload = function () {\n                 b64_image = reader.result.replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n                 let binary_file = atob(b64_image),\n                    bytes = new Uint8Array(binary_file.length);\n\n                 for (let i = 0; i < binary_file.length; i++)\n                     bytes[i] = binary_file.charCodeAt(i);\n\n                 hash = sha1(bytes);\n                 deferred.resolve(b64_image, hash, binary_file.length);\n             }.bind(this);\n             reader.readAsDataURL(blob);\n         }, file.type, 0.8);\n     };\n     image_obj.onerror = function() {\n         image_obj.onerror = null;\n         window.URL.revokeObjectURL(src);\n         deferred.resolve(false, false, false);\n     };\n     image_obj.src = src;\n     return deferred.promise();\n};\n\n$.fn.setAvatar = function (image, size) {\n    var cached_image = getCachedImage(image);\n    setCss(this, cached_image, size);\n};\n\nexport default {\n    getCachedImage: getCachedImage,\n    getBlobImage: b64toBlob,\n    getDefaultAvatar: getDefaultAvatar,\n    getAvatarFromFile: getAvatarFromFile,\n    getDefaultColor: getAccountColor,\n    getCachedBackground: getCachedBackground,\n    compressImage: compressImage\n};\n","import deps from \"xabber-dependencies\"\nimport templates from \"xabber-templates\";\nimport constants from \"xabber-constants\";\n\nvar _ = deps._,\n    $ = deps.$;\n\nvar $modal_container = $('<div>').attr('id', 'modals').appendTo(constants.CONTAINER_ELEMENT);\nvar modal_queue = [];\n\nvar Modal = function (modal_constructor, options) {\n    if (modal_constructor instanceof Function) {\n        this.$modal = $(modal_constructor());\n    } else {\n        this.$modal = $(modal_constructor);\n    }\n    this.options = options || {};\n    this.closed = new $.Deferred();\n};\n\nlet getString = function (id, params) {\n    if (deps.xabber_i18next.exists(id)) {\n        return deps.xabber_i18next.t(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n    } else if (deps.xabber_i18next.default_lang) {\n        return deps.xabber_i18next.default_lang(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n    } else\n        return \"\";\n};\n\n_.extend(Modal.prototype, {\n    open: function (options) {\n        if (this.options.use_queue) {\n            modal_queue.push(this);\n            (modal_queue.length === 1) && this.throw();\n        } else {\n            this.throw();\n        }\n        setTimeout(() => {\n            document.addEventListener(\"keyup\", this.clickHandler.bind(this));\n        }, 500);\n        return this.closed.promise();\n    },\n\n    throw: function () {\n        this.$modal.appendTo($('#modals')).prop('modal', this);\n        var modal_options = _.omit(this.options, ['use_queue']);\n        _.extend(modal_options, {\n            is_default_complete: true,\n            complete_data: null\n        });\n\n        if (this.options.use_queue) {\n            this.$modal.one('modal_close', function (ev, data) {\n                this.$modal.detach();\n                this.closed.resolve(data.value);\n                modal_queue.shift();\n                modal_queue.length && modal_queue[0].throw();\n            }.bind(this));\n        }\n\n        this.$modal._openModal(modal_options);\n    },\n\n    close: function (options) {\n        var modal_options = _.omit(options, ['use_queue', 'is_default_complete', 'complete_data']);\n        _.extend(modal_options, {\n            complete: function () {\n                if (this.options.use_queue) {\n                    var data = _.isUndefined(options.complete_data) ? null : options.complete_data;\n                    this.complete(data);\n                }\n                if (options.is_default_complete) {\n                    if (typeof(this.options.complete) === \"function\") {\n                        this.options.complete();\n                    }\n                } else {\n                    if (this.options.use_queue) {\n                        this.complete();\n                    }\n                    if (typeof(options.complete) === \"function\") {\n                        options.complete();\n                    }\n                }\n            }.bind(this)\n        });\n\n        this.$modal.prop('modal', null);\n        this.$modal._closeModal(modal_options);\n    },\n\n    complete: function (value) {\n        document.removeEventListener(\"keyup\", this.clickHandler);\n        this.$modal.trigger('modal_close', {value: value});\n    },\n\n    clickHandler: function (ev) {\n        if (ev.keyCode === 13) {\n            this.$modal.find('.modal-footer button.ok-button').click();\n            ev.preventDefault();\n        }\n    }\n});\n\n$.fn._openModal = $.fn.openModal;\n\n$.fn.openModal = function (options) {\n    var modal = new Modal(this, options);\n    return modal.open();\n};\n\n$.fn._closeModal = $.fn.closeModal;\n\n$.fn.closeModal = function (options) {\n    var modal = this.prop('modal');\n    if (modal) {\n        modal.close(options);\n    } else {\n        this._closeModal(options);\n    }\n};\n\nexport default {\n    Modal: Modal,\n\n    clear_queue: function () {\n        modal_queue = [];\n    },\n\n    dialogs: {\n        common: function (header, text, buttons, dialog_options, flag, modal_class) {\n            var dialog = new Modal(function () {\n                dialog_options || (dialog_options = []);\n                let options = dialog_options || [];\n                buttons || (buttons = {});\n                if (typeof(dialog_options) === \"object\" && !Array.isArray(dialog_options)){\n                    options = [];\n                }\n                var ok_button = buttons.ok_button,\n                    cancel_button = buttons.cancel_button,\n                    optional_buttons = (buttons.optional_buttons || []).reverse();\n                ok_button && (ok_button = {text: ok_button.text || getString(\"ok\")});\n                cancel_button && (cancel_button = {text: cancel_button.text || getString(\"cancel\")});\n                return templates.base.dialog({\n                    header: header,\n                    text: text,\n                    ok_button: ok_button,\n                    cancel_button: cancel_button,\n                    optional_buttons: optional_buttons,\n                    dialog_options: options,\n                    flag: flag || \"\",\n                    modal_class: modal_class || \"\"\n                });\n            }, {use_queue: true});\n\n            if (dialog_options.modal_class) {\n                dialog.$modal.addClass(dialog_options.modal_class)\n            }\n\n            if (dialog_options.no_dialog_options) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n            }\n\n            if (dialog_options.quoted_text) {\n                dialog.$modal.find('.modal-content').append(`<div class=\"dialog-quoted-text\">${dialog_options.quoted_text}</div>`);\n            }\n            if (dialog_options.cancel_button_main) {\n                dialog.$modal.find('.cancel-button').removeClass('btn-dark');\n            }\n            if (dialog_options.inverted_buttons) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.cancel-button').removeClass('btn-dark');\n                dialog.$modal.find('.ok-button').addClass('btn-dark');\n                dialog.$modal.find('.modal-footer').addClass('inverted-buttons');\n            }\n\n            if (dialog_options.img_details) {\n                dialog.$modal.find('.modal-content').append('<div class=\"modal-images-details\"/>').append('<div class=\"modal-images-details-btn btn-flat btn-dark btn-main\"/>');\n                dialog.$modal.find('.modal-images-details-btn').text(xabber.getString(\"details\"));\n                dialog.$modal.find('.modal-images-details').append('<div class=\"image-details-container hidden\"/>');\n                dialog.$modal.find('.image-details-container').html(dialog_options.img_details);\n                dialog.$modal.find('.modal-images-details-btn').click(function () {\n                    dialog.$modal.find('.image-details-container').switchClass('hidden', !dialog.$modal.find('.image-details-container').hasClass('hidden'));\n                });\n            }\n\n            if (dialog_options.blob_image_from_clipboard) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.img-from-clipboard')[0].src = dialog_options.blob_image_from_clipboard;\n                dialog.$modal.find('.container-for-img').removeClass('hidden');\n            }\n\n            if (dialog_options.canvas) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.container-for-img').html(\"\").removeClass('hidden')[0].appendChild(dialog_options.canvas);\n                if (dialog_options.bottom_text)\n                    $('<div class=\"dialog-bottom-text\"/>').html(dialog_options.bottom_text).appendTo(dialog.$modal.find('.container-for-img'));\n            }\n\n            if (dialog_options.escape_button) {\n                dialog.$modal.find('.modal-header').append('<i class=\"close-modal mdi mdi-close mdi-24px\"></i>');\n            }\n\n            if (dialog_options.input_placeholder_value || dialog_options.input_value) {\n                dialog.$modal.find('.dialog-options-wrap').html($('<input type=\"text\" placeholder=\"' + dialog_options.input_placeholder_value + '\" id=\"user_value\"/>').val(dialog_options.input_value));\n            }\n\n            dialog.$modal.find('.modal-footer button').click(function (ev) {\n                var option = $(ev.target).data('option'),\n                    $options = dialog.$modal.find('.dialog-option'),\n                    user_value_input = dialog.$modal.find('#user_value');\n                if (option && $options.length) {\n                    var result = {};\n                    _.each($options, function (item) {\n                        var $item = $(item);\n                        result[$item.data('name')] = $item.find('input').prop('checked');\n                    });\n                    dialog.close({complete_data: result});\n                } else {\n                    if (user_value_input.length) {\n                        if ($(ev.target).hasClass('btn-cancel')) {\n                            dialog.close({complete_data: false});\n                        } else if ($(ev.target).hasClass('optional-button')) {\n                            dialog.close({complete_data: option});\n                        }\n                        else {\n                            var user_value = user_value_input.val();\n                            dialog.close({complete_data: user_value});\n                        }\n                    }\n                    else\n                        dialog.close({complete_data: option});\n                }\n            });\n\n            dialog.$modal.find('.modal-header .close-modal').click(function () {\n                    dialog.close({complete_data: false});\n            });\n\n            return dialog.open();\n        },\n\n        warning: function (text, dialog_options) {\n            return this.common(getString(\"warning\"), text, {ok_button: true}, dialog_options);\n        },\n\n        error: function (text, dialog_options, header) {\n            return this.common(header || getString(\"xabber_account__login__dialog_error__header\"), text, {ok_button: true}, dialog_options);\n        },\n\n        ask: function (header, text, dialog_options, buttons, flag) {\n            var ok_text, cancel_text;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                cancel_text = buttons.cancel_button_text;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, cancel_button: {text: cancel_text}}, dialog_options, flag);\n        },\n\n        ask_extended: function (header, text, dialog_options, buttons) {\n            var ok_text, cancel_text, optional_button;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                cancel_text = buttons.cancel_button_text;\n                optional_button = (buttons.optional_button) ? [{value: buttons.optional_button, name: buttons.optional_button_text}] : false;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, cancel_button: {text: cancel_text}, optional_buttons: optional_button}, dialog_options, 'extended');\n        },\n\n        ask_enter_value: function (header, text, dialog_options, buttons) {\n            var ok_text, resend_button;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                resend_button = (buttons.resend_button_text) ? [{value: buttons.resend_to, name: buttons.resend_button_text}] : false;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, optional_buttons: resend_button, cancel_button: true}, dialog_options);\n        },\n\n        notify: function (header, text) {\n            return this.common(header, text, {ok_button: true});\n        }\n    }\n};\n","import deps from \"xabber-dependencies\"\n\nvar _ = deps._,\n    $ = deps.$;\n\n$.fn.placeCaretAtEnd = function () {\n    if (!this.length) {\n        return this;\n    }\n    var el = this[0];\n    el.focus();\n    if (!_.isUndefined(window.getSelection) && !_.isUndefined(document.createRange)) {\n        var range = document.createRange();\n        range.selectNodeContents(el);\n        range.collapse(false);\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n    } else if (!_.isUndefined(document.body.createTextRange)) {\n        var textRange = document.body.createTextRange();\n        textRange.moveToElementText(el);\n        textRange.collapse(false);\n        textRange.select();\n    }\n    return this;\n};\n\n$.fn.updateRichTextarea = function () {\n    var text = this.getTextFromRichTextarea();\n    if (!text) {\n        this.html('');\n    }\n    return this;\n};\n\n$.fn.flushRichTextarea = function () {\n    this.html('');\n    return this;\n};\n\n$.fn.pasteHtmlAtCaret = function (html) {\n    var sel, range;\n    this[0].focus();\n    if (window.getSelection) {\n        // IE9 and non-IE\n        sel = window.getSelection();\n        if (sel.getRangeAt && sel.rangeCount) {\n            range = sel.getRangeAt(0);\n            range.deleteContents();\n\n            // Range.createContextualFragment() would be useful here but is\n            // non-standard and not supported in all browsers (IE9, for one)\n            var el = document.createElement(\"div\");\n            el.innerHTML = html;\n            var frag = document.createDocumentFragment(), node, lastNode;\n            while ( (node = el.firstChild) ) {\n                lastNode = frag.appendChild(node);\n            }\n            range.insertNode(frag);\n\n            // Preserve the selection\n            if (lastNode) {\n                range = range.cloneRange();\n                range.setStartAfter(lastNode);\n                range.collapse(true);\n                sel.removeAllRanges();\n                sel.addRange(range);\n            }\n        }\n    } else if (document.selection && document.selection.type != \"Control\") {\n        // IE < 9\n        document.selection.createRange().pasteHTML(html);\n    }\n    return this;\n};\n\n$.fn.getTextFromRichTextarea = function () {\n    var $div = $('<div>').html(this.html());\n    $div.find('.emoji').each(function () {\n        $(this).replaceWith($(this).data('emoji'));\n    });\n    $div.find('p').each(function () {\n        $(this).replaceWith($(this).html() + '\\n');\n    });\n    /*$div.find('blockquote').each(function () {\n        $(this).replaceWith($(this).html() + '\\n');\n    });*/\n    $div.find('span').each(function () {\n        $(this).replaceWith($(this).html());\n    });\n    $div.find('div').each(function () {\n        var $this = $(this);\n        $this.find('br').remove();\n        var html = $this.html();\n        if ($this.hasClass('emoji'))\n            $this.replaceWith(html);\n        else\n            $this.replaceWith('\\n'+html);\n    });\n    /*$div.find('br').each(function () {\n        $(this).replaceWith('\\n');\n    });*/\n    return $div.text();\n};\n\nexport default null;\n","import deps from \"xabber-dependencies\";\nimport emoji from \"xabber-emoji-utils\";\nimport images from \"xabber-image-utils\";\nimport modals from \"xabber-modal-utils\";\nimport constants from \"xabber-constants\";\nimport textarea from \"xabber-textarea-utils\";\n\nvar $ = deps.$,\n    _ = deps._,\n    moment = deps.moment;\n\n// jQuery extensions\n$.fn.switchClass = function (klass, condition) {\n    if (arguments.length === 1) {\n        condition = !this.hasClass(klass);\n    }\n    if (condition) {\n        this.addClass(klass);\n    } else {\n        this.removeClass(klass);\n    }\n    return this;\n};\n\n$.fn.showIf = function (condition) {\n    return this.switchClass('hidden', !condition);\n};\n\n$.fn.hideIf = function (condition) {\n    return this.switchClass('hidden', condition);\n};\n\n$.fn.isVisibleInViewport = function() {\n    let elementTop = $(this).offset().top,\n        elementBottom = elementTop + $(this).outerHeight();\n\n    let viewportTop = $(window).scrollTop(),\n        viewportBottom = viewportTop + $(window).height();\n\n    return elementBottom > viewportTop && elementTop < viewportBottom;\n};\n\n$.fn.isVisibleInContainer = function(container) {\n    if (!this.length || !container.length)\n        return;\n    container = container[0];\n    let eleTop = this[0].offsetTop,\n        eleBottom = eleTop + this[0].clientHeight;\n\n    let containerTop = container.scrollTop,\n        containerBottom = containerTop + container.clientHeight;\n\n    return (\n        (eleTop >= containerTop && eleBottom <= containerBottom) ||\n        // Some part of the element is visible in the container\n        (eleTop < containerTop && containerTop < eleBottom) ||\n        (eleTop < containerBottom && containerBottom < eleBottom)\n    );\n};\n\n$.fn.isFullyVisibleInContainer = function(container) {\n    if (!this.length || !container.length)\n        return;\n    container = container[0];\n    let eleTop = this[0].offsetTop,\n        eleBottom = eleTop + this[0].clientHeight;\n\n    let containerTop = container.scrollTop,\n        containerBottom = containerTop + container.clientHeight;\n\n    return (\n        eleTop >= containerTop && eleBottom <= containerBottom\n    );\n};\n\n$.fn.isBottomVisibleInContainer = function(container) {\n    if (!this.length || !container.length)\n        return;\n    container = container[0];\n    let eleTop = this[0].offsetTop,\n        eleBottom = eleTop + this[0].clientHeight;\n\n    let containerTop = container.scrollTop,\n        containerBottom = containerTop + container.clientHeight;\n\n    return (\n        eleBottom <= containerBottom\n    );\n};\n\nvar getHyperLink = function (url) {\n    var prot = (url.indexOf('http://') === 0 ||  url.indexOf('https://') === 0) ? '' : 'http://',\n        escaped_url = \"\";\n    try {\n        escaped_url = encodeURI(decodeURI(url)).replace(/[!'()]/g, escape).replace(/\\*/g, \"%2A\");\n    }\n    catch (e) {\n        escaped_url = url;\n    }\n    try {\n        url = decodeURI(url);\n    }\n    catch (e) {\n        return url;\n    }\n    return \"<a target='_blank' class='msg-hyperlink' href='\"+prot+escaped_url + \"'>\"+url+\"</a>\";\n};\n\n$.fn.hyperlinkify = function (options) {\n    options || (options = {});\n    var $query = options.selector ? this.find(options.selector) : this;\n    $query.each(function (i, obj) {\n        var $obj = $(obj),\n            html_concat = \"\",\n            url_regexp = /(((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g;\n            // url_regexp = /((((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)|((\\b)((\\w+)([\\w#!:.?+=&%@!\\-\\/])(\\w+))?(\\.net|\\.edu|\\.cloud|\\.top|\\.vip|\\.cash|\\.im|\\.online|\\.chat|\\.com|\\.org|\\.ru|\\.travel|\\.info|\\.tv|\\.biz|\\.mobi|\\.tel|\\.ar|\\.al|\\.asia|\\.np|\\.ng|\\.io|\\.bb|\\.br|\\.ca|\\.tr|\\.co|\\.ec|\\.fr|\\.ht|\\.in|\\.eg|\\.ie|\\.et|\\.jo|\\.mr|\\.id|\\.iq|\\.nl|\\.ps|\\.ph|\\.sl|\\.si|\\.se|\\.af|\\.ag|\\.be|\\.bd|\\.bg|\\.cl|\\.cd|\\.my|\\.mz|\\.mx|\\.cz|\\.eu|\\.dz|\\.de|\\.hk|\\.it|\\.la|\\.no|\\.pl|\\.ro|\\.sg|\\.ke|\\.kr|\\.ch|\\.ug|\\.us|\\.ve|\\.vn|\\.at|\\.bo|\\.cm|\\.cn|\\.cg|\\.dk|\\.fi|\\.gr|\\.gh|\\.is|\\.ir|\\.jp|\\.lv|\\.ma|\\.me|\\.pk|\\.pe|\\.pt|\\.sa|\\.sk|\\.es|\\.tz|\\.tw|\\.ua|\\.uz|\\.ye)((\\/\\w+)|(\\S+)|\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)/g;\n        $obj[0].childNodes.forEach(function (node) {\n            let $node = $(node),\n                x = node.outerHTML;\n            if (node.tagName === 'A') {\n                html_concat += x;\n                return;\n            }\n            else {\n                if (node.nodeName === '#text')\n                    x = _.escape($node.text());\n                let list = x && x.match(url_regexp);\n                list = Array.from(new Set(list));\n                if (!list) {\n                    html_concat += x;\n                    return;\n                }\n                if (list.length === 1 && list[0] === x) {\n                    html_concat += options.decode_uri ? decodeURI(x) : getHyperLink(x);\n                } else {\n                    for (i = 0; i < list.length; i++) {\n                            if (options.decode_uri) {\n                                try {\n                                    x = x.replace(list[i], decodeURI(list[i]));\n                                } catch (e) {\n                                    console.log(list[i])\n                                    console.error(e)\n                                }\n                            }\n                            else\n                                x = x.replaceAll(new RegExp(`(\\\\s|^)(${list[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')})`,\"g\"), '$1' + getHyperLink(list[i]));\n                    }\n                    html_concat += x;\n                }\n            }\n        }.bind(this));\n        $obj.html(html_concat);\n    });\n    return this;\n};\n\nvar utils = {\n    uuid: function () {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0,\n                v = c == 'x' ? r : r & 0x3 | 0x8;\n            return v.toString(16);\n        });\n    },\n\n    utoa: function (str) {\n        return window.btoa(_.unescape(encodeURIComponent(str)));\n    },\n\n    atou: function (str) {\n        return decodeURIComponent(_.escape(window.atob(str)));\n    },\n\n    now: function () {\n        return Math.floor(moment.now() / 1000);\n    },\n\n    pretty_time: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format('HH:mm:ss');\n    },\n\n    pretty_date: function (timestamp, format) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format(format || 'dddd, MMMM D, YYYY');\n    },\n\n    pretty_datetime: function (timestamp, format) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format(format || 'MMMM D, YYYY HH:mm:ss');\n    },\n\n    pretty_short_datetime_recent_chat: function (timestamp) {\n        timestamp = Number(timestamp ? moment(timestamp) : moment());\n        if (moment(timestamp).startOf('day').isSame(moment().startOf('day')) || Number(moment().subtract(12, 'hours') < timestamp)) {\n            return moment(timestamp).format(\"HH:mm:ss\");\n        }\n        if (Number(moment().subtract(12, 'hours')) > timestamp && Number(moment().subtract(7, 'days')) <= timestamp) {\n            return moment(timestamp).format(\"ddd\");\n        }\n        if (Number(moment().subtract(7, 'days')) > timestamp && Number(moment().subtract(1, 'year')) <= timestamp) {\n            return moment(timestamp).format(\"MMM D\");\n        }\n        if (timestamp && Number(moment().subtract(1, 'year')) > timestamp) {\n            return moment(timestamp).format(\"D MMM YYYY\");\n        }\n    },\n\n    pretty_short_datetime: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment(),\n            day = moment(datetime).startOf('day'),\n            year = moment(datetime).startOf('year');\n        if (day.isSame(moment().startOf('day'))) {\n            return datetime.format('HH:mm:ss');\n        } else if (year.isSame(moment().startOf('year'))) {\n            return datetime.format('MMM D');\n        } else {\n            return datetime.format('DD/MM/gg');\n        }\n    },\n\n    pretty_short_month_date: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment(),\n            day = moment(datetime).startOf('day');\n        if (day.isSame(moment().startOf('day'))) {\n            return datetime.format('HH:mm:ss');\n        } else {\n            return datetime.format('MMM D, YYYY HH:mm:ss');\n        }\n    },\n\n    isImageType: function(type) {\n        if (type.indexOf('image') > -1 && !(type.indexOf('application') > -1))\n            return true;\n        else\n            return false;\n    },\n\n    tryReadingFile: function(file) {\n        return new Promise((resolve, reject) => {\n            let r = new FileReader();\n            r.onload = (e) => {\n                resolve();\n            };\n            r.onerror = (e) => {\n                console.log(r.error);\n                reject(r.error);\n            };\n            r.readAsDataURL(file)\n        });\n    },\n\n    getDomainFromUrl: function(url) {\n        let a = document.createElement('a');\n        if (url && !/^https?:\\/\\//i.test(url))\n            url = 'http://' + url;\n        a.href = url;\n        return a.hostname;\n    },\n\n    isVideoType: function(type) {\n        if (type.indexOf('video') > -1)\n            return true;\n        else\n            return false;\n    },\n\n    file_type_icon: function (mime_type) {\n        let filetype = utils.pretty_file_type(mime_type);\n        if (filetype === 'image')\n            return 'mdi-image';\n        if (filetype === 'audio')\n            return 'mdi-music-note';\n        if (filetype === 'video')\n            return 'mdi-filmstrip';\n        if (filetype === 'document')\n            return 'mdi-file-document-box';\n        if (filetype === 'presentation')\n            return 'mdi-presentation';\n        if (filetype === 'archive')\n            return 'mdi-zip-box';\n        if (filetype === 'file')\n            return 'mdi-file';\n        if (filetype === 'pdf')\n            return 'mdi-file-pdf';\n        return 'mdi-file'\n    },\n\n    file_type_icon_svg: function (mime_type) {\n        let filetype = utils.pretty_file_type(mime_type);\n        if (filetype === 'image')\n            return 'image';\n        if (filetype === 'audio')\n            return 'file-audio';\n        if (filetype === 'video')\n            return 'file-video';\n        if (filetype === 'document')\n            return 'file-document';\n        if (filetype === 'presentation')\n            return 'file-presentation';\n        if (filetype === 'archive')\n            return 'file-zip';\n        if (filetype === 'file')\n            return 'file';\n        if (filetype === 'pdf')\n            return 'file-pdf';\n        return 'file'\n    },\n\n    pretty_file_type: function (mime_type) {\n        if (constants.MIME_TYPES.image.includes(mime_type))\n            return 'image';\n        if (constants.MIME_TYPES.audio.includes(mime_type))\n            return 'audio';\n        if (constants.MIME_TYPES.video.includes(mime_type))\n            return 'video';\n        if (constants.MIME_TYPES.document.includes(mime_type))\n            return 'document';\n        if (constants.MIME_TYPES.pdf.includes(mime_type))\n            return 'pdf';\n        if (constants.MIME_TYPES.presentation.includes(mime_type))\n            return 'presentation';\n        if (constants.MIME_TYPES.archive.includes(mime_type))\n            return 'archive';\n        if (constants.MIME_TYPES.table.includes(mime_type))\n            return 'electronic table';\n        return 'file';\n    },\n\n    pretty_file_type_with_article: function (mime_type) {\n        let type = utils.pretty_file_type(mime_type),\n            vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n        (type === 'pdf') && (type = 'document');\n        if (vowels.includes(type[0]))\n            return 'an ' + type;\n        else\n            return 'a ' + type;\n    },\n\n    pretty_size: function (size) {\n        if (!size && size != 0)\n            return \"\";\n        if (_.isNaN(Number(size)))\n            return size;\n        if (size < 1024) {\n            return size+' B';\n        } else if (size < 1048576) {\n            return (size/1024).toFixed(2)+' KiB';\n        } else if (size < 1073741824) {\n            return (size/1048576).toFixed(2)+' MiB';\n        } else {\n            return (size/1073741824).toFixed(2)+' GiB';\n        }\n    },\n\n    pretty_duration: function (duration) {\n        if (_.isNaN(Number(duration)))\n            return duration;\n        if (_.isUndefined(duration) || duration === \"\")\n            return \"\";\n        if (duration < 10)\n            return (\"0:0\" + duration);\n        if (duration < 60)\n            return (\"0:\" + duration);\n        if (duration >= 60)\n            return (Math.trunc(duration/60) + \":\" + ((duration%60 < 10) ? (\"0\" + (duration%60)) : duration%60));\n    },\n\n    pretty_duration_ephemeral_timer: function (timer) {\n        let text = '';\n        switch (timer) {\n            case '5':\n                text = '5s';\n                break;\n            case '10':\n                text = '10s';\n                break;\n            case '15':\n                text = '15s';\n                break;\n            case '30':\n                text = '30s';\n                break;\n            case '60':\n                text = '1m';\n                break;\n            case '300':\n                text = '5m';\n                break;\n            case '600':\n                text = '10m';\n                break;\n            case '900':\n                text = '15m';\n                break;\n            default:\n                text = '';\n                break;\n        }\n        return text;\n    },\n\n    pretty_name: function (name) {\n        return name ? (name[0].toUpperCase() + name.replace(/-/,' ').substr(1).toLowerCase()) : \"\";\n    },\n\n    getKeyByValue: function (object, value) {\n        return Object.keys(object).find(key => object[key] === value);\n    },\n\n    slice_string: function (str, from, to) {\n        to = _.isNumber(to) ? to : [...str].length;\n        if (str.length === [...str].length)\n            return str.slice(from, to);\n        else\n            return Array.from(str).slice(from, to).join(\"\");\n    },\n\n    slice_pretty_body: function (body, mutable_refs) {\n        if (!mutable_refs || !mutable_refs.length)\n            return body;\n        body = body || \"\";\n        mutable_refs = mutable_refs.filter(m => m.type === 'groupchat' || m.type === 'forward');\n        let pretty_body = Array.from(deps.Strophe.xmlescape(body));\n        mutable_refs && mutable_refs.forEach(function (ref) {\n            for (let idx = ref.start; idx < ref.end; idx++)\n                pretty_body[idx] = \"\";\n        }.bind(this));\n        return deps.Strophe.xmlunescape(pretty_body.join(\"\").trim());\n    },\n\n    markupBodyMessage: function (message, mention_tag) {\n        let attrs = _.clone(message.attributes),\n            mentions = attrs.mentions || [],\n            markups = attrs.markups || [],\n            mutable_refs = attrs.mutable_content || [],\n            blockquotes = attrs.blockquotes || [],\n            markup_body = Array.from(deps.Strophe.xmlescape(attrs.original_message || attrs.message || \"\"));\n        !mention_tag && (mention_tag = 'span');\n\n        mutable_refs.forEach(function (muted) {\n            for (let idx = muted.start; idx < muted.end; idx++)\n                markup_body[idx] = \"\";\n        }.bind(this));\n\n        mentions.forEach(function (mention) {\n            let start_idx = mention.start,\n                end_idx = mention.end > (markup_body.length - 1) ? (markup_body.length - 1) : (mention.end - 1), target = mention.target;\n            if (start_idx > markup_body.length - 1)\n                return;\n            if (mention.is_gc) {\n                let id = target.match(/\\?id=\\w*/),\n                    jid = target.match(/\\?jid=.*/);\n                if (id)\n                    target = id[0].slice(4);\n                else if (jid)\n                    target = jid[0].slice(5);\n                else {\n                    target = \"\";\n                    mention.me = true;\n                }\n            }\n            else\n                target = target.slice(5);\n            if (mention_tag === 'mention'){\n                markup_body[start_idx] = '<' + mention_tag + ' data-target=\"?jid=' + target + '\">' + markup_body[start_idx];\n                markup_body[end_idx] += '</' + mention_tag + '>';\n                return;\n            }\n            markup_body[start_idx] = '<' + mention_tag + ' data-target=\"' + target + '\" class=\"mention' + (mention.me ? ' ground-color-100' : '') + '\">' + markup_body[start_idx];\n            markup_body[end_idx] += '</' + mention_tag + '>';\n        }.bind(this));\n\n        markups.forEach(function (markup) {\n            let start_idx = markup.start,\n                end_idx = markup.end > (markup_body.length - 1) ? (markup_body.length - 1) : (markup.end - 1);\n            if (start_idx > markup_body.length - 1)\n                return;\n            if (markup.markup.length) {\n                let start_tags = \"\",\n                    end_tags = \"\";\n                markup.markup.forEach(function (mark_up_style) {\n                    if (typeof(mark_up_style) === 'object') {\n                        start_tags = '<a target=\"_blank\" class=\"msg-hyperlink\" href=\"' + mark_up_style.uri + '\">' + start_tags;\n                        end_tags += '</a>';\n                    } else {\n                        start_tags = '<' + mark_up_style[0].toLowerCase() + '>' + start_tags;\n                        end_tags += '</' + mark_up_style[0].toLowerCase() + '>';\n                    }\n                }.bind(this));\n                markup_body[start_idx] = start_tags + markup_body[start_idx];\n                markup_body[end_idx] += end_tags;\n            }\n        }.bind(this));\n\n        blockquotes.forEach(function (quote) {\n            let end_idx = quote.end > (markup_body.length - 1) ? (markup_body.length - 1) : (quote.end - 1);\n            for (let idx = quote.start; idx < (quote.start + constants.QUOTE_MARKER.length); idx++) {\n                if (idx === end_idx)\n                    markup_body[idx] = '<br>';\n                else\n                    markup_body[idx] = \"\";\n\n            }\n            for (let idx = quote.start; idx < end_idx; idx++) {\n                if (markup_body[idx] === '\\n') {\n                    for (let child_idx = idx + 1; child_idx <= (idx + constants.QUOTE_MARKER.length); child_idx++)\n                        markup_body[child_idx] = \"\";\n                    idx+= constants.QUOTE_MARKER.length - 1;\n                }\n            }\n            if (mention_tag === 'mention'){\n                markup_body[quote.start] = '<blockquote>';\n                markup_body[end_idx] += '</blockquote>';\n                return;\n            }\n            markup_body[quote.start] = '<div class=\"quote\">';\n            markup_body[end_idx] += '</div>';\n        }.bind(this));\n\n        return markup_body.join(\"\").trim();\n    },\n\n    getOS: function() {\n        let platform = window.navigator.platform,\n            macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],\n            windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],\n            os = null;\n\n        if (macosPlatforms.indexOf(platform) !== -1) {\n            os = 'mac OS';\n        } else if (windowsPlatforms.indexOf(platform) !== -1) {\n            os = 'Windows';\n        } else if (!os && /Linux/.test(platform)) {\n            os = 'Linux';\n        }\n\n        return os;\n    },\n\n    isOverflownWidth: function(element) {\n        return element.scrollWidth > element.clientWidth;\n    },\n\n    isOverflownHeight: function(element) {\n        return element.scrollHeight > element.clientHeight;\n    },\n\n    render_data_form: function (data_form) {\n        let $data_form = $('<div class=\"data-form\"/>');\n        data_form.fields.forEach(function (field) {\n            if (field.type === 'hidden')\n                return;\n            if (field.type === 'fixed') {\n                let $fixed_field = $('<div class=\"data-form-field fixed-field\"/>');\n                field.label && $fixed_field.append($('<div class=\"label\"/>').text(field.label));\n                field.values.forEach(function (value) {\n                    let $input = $('<div class=\"value\"/>').text(value);\n                    $fixed_field.append($input);\n                }.bind(this));\n                $data_form.append($fixed_field);\n            }\n            if (field.type === 'boolean') {\n                let $input = $(`<button id=${field.var} class=\"data-form-field ground-color-100 btn-dark btn-flat btn-main boolean-field\"/>`).text(field.label);\n                $data_form.append($input);\n            }\n        }.bind(this));\n        return $data_form;\n    },\n\n    copyTextToClipboard: function(text, callback_msg, errback_msg) {\n        if (!window.navigator.clipboard) {\n            return;\n        }\n        window.navigator.clipboard.writeText(text).then(function() {\n            if (callback_msg) {\n                let info_msg = callback_msg;\n                this.callback_popup_message(info_msg, 1500);\n            }\n        }.bind(this), function() {\n            if (errback_msg) {\n                let info_msg = errback_msg;\n                this.callback_popup_message(info_msg, 1500);\n            }\n        }.bind(this));\n    },\n\n    callback_popup_message: function (info_msg, time) {\n        let $body = $(document.body),\n            $popup_msg = $('<div class=\"callback-popup-message\"/>').text(info_msg);\n        time = time || 3000;\n        $body.find('.callback-popup-message').remove();\n        $body.append($popup_msg);\n        setTimeout( function() {\n            $popup_msg.remove();\n        }, time);\n    },\n\n    emoji_size: function (count) {\n        let size;\n        switch (count) {\n            case 1:\n                size = 56;\n                break;\n            case 2:\n                size = 44;\n                break;\n            case 3:\n                size = 32;\n                break;\n            case 4:\n                size = 24;\n                break;\n            case 5:\n                size = 22;\n                break;\n            default:\n                size = 20;\n                break;\n        }\n        return size;\n    },\n\n    openWindow: function (url, errback) {\n        let win = window.open(url, '_blank');\n        if (win) {\n            win.focus();\n        } else {\n            errback && errback();\n        }\n    },\n\n    clearSelection: function () {\n        var selection = window.getSelection();\n        if (selection.empty) {\n            selection.empty();\n        } else if (selection.removeAllRanges) {\n            selection.removeAllRanges();\n        }\n    },\n\n    getCookie: function (name) {\n        let matches = window.document.cookie.match(new RegExp(\n            \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n        ));\n        return matches ? decodeURIComponent(matches[1]) : undefined;\n    },\n\n    isMobile: {\n        Android: function () {\n            return navigator.userAgent.match(/Android/i);\n        },\n        BlackBerry: function () {\n            return navigator.userAgent.match(/BlackBerry/i);\n        },\n        iOS: function () {\n            return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n        },\n        Opera: function () {\n            return navigator.userAgent.match(/Opera Mini/i);\n        },\n        Windows: function () {\n            return navigator.userAgent.match(/IEMobile/i) || navigator.userAgent.match(/WPDesktop/i);\n        },\n        any: function () {\n            return (this.Android() || this.BlackBerry() || this.iOS() || this.Opera() || this.Windows());\n        }\n    },\n\n    fromBase64toArrayBuffer: function (b64_string) {\n        return Uint8Array.from(atob(b64_string), c => c.charCodeAt(0)).buffer;\n    },\n\n    ArrayBuffertoBase64: function (arrayBuffer) {\n        return btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n    },\n\n    generateHOTPKey: async function(secret, counter) {\n        let Crypto = window.crypto.subtle;\n        let counterArray = this.padCounter(counter);\n\n        let key = await Crypto.importKey(\n            'raw',\n            secret,\n            { name: 'HMAC', hash: { name: 'SHA-1' } },\n            false,\n            ['sign']\n        );\n\n        let HS = await Crypto.sign('HMAC', key, counterArray);\n\n        return HS;\n    },\n\n    padCounter: function(counter) {\n        let buffer = new ArrayBuffer(8);\n        let bView = new DataView(buffer);\n\n        let byteString = '0'.repeat(64); // 8 bytes\n        let bCounter = (byteString + counter.toString(2)).slice(-64);\n\n        for (let byte = 0; byte < 64; byte += 8) {\n            let byteValue = parseInt(bCounter.slice(byte, byte + 8), 2);\n            bView.setUint8(byte / 8, byteValue);\n        }\n\n        return buffer;\n    },\n\n    DT: function(HS) {\n        let offset = HS[19] & 0b1111;\n        let P = ((HS[offset] & 0x7f) << 24) | (HS[offset + 1] << 16) | (HS[offset + 2] << 8) | HS[offset + 3]\n        let pString = P.toString(2);\n\n        return pString;\n    },\n\n    truncate: function(uKey) {\n        let Sbits = this.DT(uKey);\n        let Snum = parseInt(Sbits, 2);\n\n        return Snum;\n    },\n\n    generateHOTP: async function(secret, counter) {\n        let key = await this.generateHOTPKey(secret, counter);\n        let uKey = new Uint8Array(key);\n\n        let Snum = this.truncate(uKey);\n        let padded = ('000000' + (Snum % (10 ** 8))).slice(-8);\n\n        return padded;\n    },\n\n    hmacSha256: async function(key, message) {\n\n        let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n\n        let hashBuffer = await crypto.subtle.sign(\n            algorithm.name,\n            key,\n            message\n        );\n\n        return hashBuffer;\n    },\n\n    stringToArrayBuffer: function (string) {\n        let { length } = string;\n        let buffer = new Uint8Array(length);\n\n        for (let i = 0; i < length; i++) {\n            buffer[i] = string.charCodeAt(i);\n        }\n\n        return buffer;\n    },\n\n    AES: {\n        ALGO_NAME: 'AES-GCM',\n\n        decoder: new window.TextDecoder('utf-8'),\n        encoder: new window.TextEncoder('utf-8'),\n\n        decrypt: async function (masterKey, HMACData, payload) {\n            let masterObj = await window.crypto.subtle.importKey('raw', masterKey, {name: 'HKDF'}, false, ['deriveKey', 'deriveBits']),\n                hkdfCtrParams = { name: 'HKDF', salt: new Uint8Array(32), info: utils.stringToArrayBuffer('OMEMO Payload'), hash: 'SHA-256'};\n\n            let key = await window.crypto.subtle.deriveBits(hkdfCtrParams, masterObj, 640);\n\n            key = new Uint8Array(key);\n\n            let encryptionKey = key.slice(0,32),\n                authenticationKey = key.slice(32,64),\n                iv = key.slice(64);\n\n            let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n\n            authenticationKey = await crypto.subtle.importKey(\n                \"raw\",\n                authenticationKey,\n                algorithm,\n                false, [\"sign\", \"verify\"]\n            );\n\n            let generatedHMAC = await utils.hmacSha256(authenticationKey, payload);\n\n            generatedHMAC = generatedHMAC.slice(0, generatedHMAC.byteLength - 16);\n\n            if (!(utils.ArrayBuffertoBase64(HMACData) === utils.ArrayBuffertoBase64(generatedHMAC)))\n                return;\n\n            encryptionKey = await window.crypto.subtle.importKey('raw', encryptionKey, { \"name\": 'AES-CBC' }, true, ['decrypt'])\n\n\n            let decryptedBuffer = await window.crypto.subtle.decrypt({\n                name: 'AES-CBC',\n                iv,\n            }, encryptionKey, payload);\n\n            return utils.AES.decoder.decode(decryptedBuffer);\n        },\n\n        encrypt: async function (plaintext) {\n            let masterKey = window.crypto.getRandomValues(new Uint8Array(32)),\n                masterObj = await window.crypto.subtle.importKey('raw', masterKey, {name: 'HKDF'}, false, ['deriveKey', 'deriveBits']),\n                hkdfCtrParams = { name: 'HKDF', salt: new Uint8Array(32), info: utils.stringToArrayBuffer('OMEMO Payload'), hash: 'SHA-256'};\n\n            let key = await window.crypto.subtle.deriveBits(hkdfCtrParams, masterObj, 640);\n\n            key = new Uint8Array(key);\n\n            let encryptionKey = key.slice(0,32),\n                authenticationKey = key.slice(32,64),\n                iv = key.slice(64);\n\n            encryptionKey = await window.crypto.subtle.importKey('raw', encryptionKey, { \"name\": 'AES-CBC' }, true, ['encrypt']);\n\n            let encrypted = await utils.AES.generateAESencryptedMessage(iv, encryptionKey, plaintext);\n\n            let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n            authenticationKey = await crypto.subtle.importKey(\n                \"raw\",\n                authenticationKey,\n                algorithm,\n                false, [\"sign\", \"verify\"]\n            );\n\n            let payload = await utils.hmacSha256(authenticationKey, encrypted);\n\n            payload = payload.slice(0, payload.byteLength - 16);\n\n            let keydata = new Uint8Array([...masterKey, ...new Uint8Array(payload)]);\n\n            return {\n                keydata: keydata.buffer,\n                payload: encrypted,\n            }\n        },\n\n        generateAESencryptedMessage: async function (iv, key, plaintext) {\n            let encryptOptions = {\n                name: 'AES-CBC',\n                iv,\n            };\n            let encodedPlaintext = utils.AES.encoder.encode(plaintext),\n                encrypted = await window.crypto.subtle.encrypt(encryptOptions, key, encodedPlaintext);\n\n            return encrypted;\n        },\n\n        arrayBufferConcat: function () {\n            let length = 0,\n                buffer = null;\n\n            for (let i in arguments) {\n                buffer = arguments[i];\n                length += buffer.byteLength;\n            }\n\n            let joined = new Uint8Array(length),\n                offset = 0;\n\n            for (let i in arguments) {\n                buffer = arguments[i];\n                joined.set(new Uint8Array(buffer), offset);\n                offset += buffer.byteLength;\n            }\n\n            return joined.buffer\n        },\n\n        generateAESKey: async function () {\n            let algo = {\n                name: utils.AES.ALGO_NAME,\n                length: constants.AES_KEY_LENGTH,\n            };\n            let keyUsage = ['encrypt', 'decrypt'],\n                key = await window.crypto.subtle.generateKey(algo, constants.AES_EXTRACTABLE, keyUsage);\n\n            return key;\n        }\n    },\n\n    getBrowser: function () {\n        // Get the user-agent string\n        let userAgentString =\n            navigator.userAgent;\n\n        // Detect Chrome\n        let chromeAgent =\n            userAgentString.indexOf(\"Chrome\") > -1;\n\n        // Detect Internet Explorer\n        let IExplorerAgent =\n            userAgentString.indexOf(\"MSIE\") > -1 ||\n            userAgentString.indexOf(\"Windows NT:\") > -1;\n\n        // Detect Firefox\n        let firefoxAgent =\n            userAgentString.indexOf(\"Firefox\") > -1;\n\n        // Detect Safari\n        let safariAgent =\n            userAgentString.indexOf(\"Safari\") > -1;\n\n        // Discard Safari since it also matches Chrome\n        if ((chromeAgent) && (safariAgent))\n            safariAgent = false;\n\n        // Detect Opera\n        let operaAgent =\n            userAgentString.indexOf(\"OP\") > -1;\n\n        // Discard Chrome since it also matches Opera\n        if ((chromeAgent) && (operaAgent))\n            chromeAgent = false;\n\n        if (safariAgent)\n            return 'Safari';\n        if (chromeAgent)\n            return 'Chrome';\n        if (IExplorerAgent)\n            return 'IE';\n        if (operaAgent)\n            return 'Opera';\n        if (firefoxAgent)\n            return 'Firefox';\n        return 'Unknown browser';\n    },\n\n    emoji: emoji,\n    images: images,\n    modals: modals,\n    dialogs: modals.dialogs\n};\n\n    export default utils;\n","// expands dependencies with internal xabber modules\nimport deps from \"xabber-dependencies\";\nimport constants from \"xabber-constants\";\nimport templates from \"xabber-templates\";\nimport sounds from \"xabber-sounds\";\nimport utils from \"xabber-utils\";\nimport client_translation_progress from \"xabber-translations-info\";\nimport version from \"xabber-version\";\nimport _ from \"underscore\";\n\nexport default _.extend({\n    constants: constants,\n    templates: templates,\n    sounds: sounds,\n    client_translation_progress: client_translation_progress,\n    utils: utils,\n    uuid: utils.uuid\n}, version, deps);","import env from \"xabber-environment\";\n\nlet constants = env.constants,\n    _ = env._,\n    $ = env.$,\n    moment = env.moment,\n    client_translation_progress = env.client_translation_progress,\n    xabber_i18next = env.xabber_i18next,\n    xabber_i18next_sprintf = env.xabber_i18next_sprintf,\n    uuid = env.uuid,\n    utils = env.utils;\n\n\nlet Xabber = Backbone.Model.extend({\n    defaults: {\n        version_number: env.version_number,\n        actual_version_number: env.version_number,\n        audio: false,\n        video: false,\n        client_id: uuid().substring(0, 8),\n        // client_name: 'Xabber for Web 1'\n    },\n\n    initialize: function () {\n        this.env = env;\n        this.fetchURLParams();\n        this.cleanUpStorage();\n        this.initDefaultLanguage();\n        this.detectMediaDevices();\n        window.navigator.mediaDevices && (window.navigator.mediaDevices.ondevicechange = this.detectMediaDevices.bind(this));\n        this.check_config = new $.Deferred();\n        this._settings = new this.Settings({id: 'settings'},\n                {storage_name: this.getStorageName(), fetch: 'before'});\n        this.settings = this._settings.attributes;\n        let url = window.location.host + window.location.pathname.replace(/\\//g, \"-\");\n        if (url[url.length - 1] == \"-\")\n            url.slice(0, url.length - 1);\n        this._cache = new Backbone.ModelWithStorage({id: `cache-${url}`},\n                {storage_name: this.getStorageName(), fetch: 'before'});\n        this.cache = this._cache.attributes;\n        this.cache.client_id && (this.set('client_id', this.cache.client_id));\n        this._cache.save('client_id', this.get('client_id'));\n        this.extendFunction();\n        this.plyr_players = [];\n        this.current_plyr_player = null;\n        this.on(\"change:actual_version_number\", this.throwNewVersion, this);\n        this.on(\"quit\", this.onQuit, this);\n        this._version_interval = setInterval(this.readActualVersion.bind(this), 600000);\n\n        window.onerror = (msg, url, line, col, error) => {\n            utils.dialogs.error(msg + '\\n' + url + '\\n' + line + ':' + col + '\\n' + error);\n        };\n        window.ononline = () => {\n            this.disconnectWhenConnecting();\n        };\n    },\n\n    initDefaultLanguage: function () {\n        let lang = window.navigator.language,\n            progress = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));\n        if (progress != 100)\n            lang = 'en';\n        this.set(\"default_language\", lang);\n    },\n\n    loadTranslations: async function (lang) {\n        return new Promise((resolve, reject) => {\n            let language = {};\n            language.lang = lang;\n            !language.lang && (language.lang = this.settings.language);\n            if (language.lang == 'default' && this.default_translation) {\n                language.lang = this.get(\"default_language\");\n                language.translation  = this.default_translation;\n                resolve(language);\n                return;\n            }\n            import(`~/translations/${language.lang.replace(/-/g, \"-r\")}.js`).then(translation => {\n                language.translation  = translation;\n                resolve(language)\n            });\n        });\n    },\n\n    setLocale: function (lang, translations) {\n        let default_lang = this.get(\"default_language\"),\n            _translations = {\n                [default_lang]: {\n                    translation: this.default_translation\n                }\n            };\n        lang && (_translations[lang] = {translation: translations});\n        xabber_i18next.use(xabber_i18next_sprintf);\n        xabber_i18next.init({\n            lng: default_lang,\n            debug: false,\n            pluralSeparator: '-',\n            resources: _translations\n        });\n        if (lang) {\n            xabber_i18next.changeLanguage(lang);\n            moment.locale(lang);\n        }\n        xabber_i18next.default_lang = xabber_i18next.getFixedT(default_lang);\n    },\n    getOneLiners: function () {\n        if (xabber_i18next.exists(\"motivating_oneliner\")) {\n            return xabber_i18next.t(\"motivating_oneliner\").replace(/\\\\'/g, \"'\").split('\\n');\n        } else if (xabber_i18next.default_lang) {\n            return xabber_i18next.default_lang(\"motivating_oneliner\").replace(/\\\\'/g, \"'\").split('\\n');\n        } else\n            return [];\n    },\n    getString: function (id, params) {\n        if (xabber_i18next.exists(id)) {\n            return xabber_i18next.t(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n        } else if (xabber_i18next.default_lang) {\n            return xabber_i18next.default_lang(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n        } else\n            return \"\";\n    },\n\n    getQuantityString: function (id, count, params) {\n        let lang = xabber_i18next.language,\n            plurals = xabber_i18next.services.pluralResolver.getRule(lang);\n        if (!plurals)\n            return this.getString(`${id}_plural_0`, (params || [count]));\n        let _count = parseInt(count, 10);\n        xabber_i18next.services.pluralResolver.options.compatibilityJSON = 'v0';\n        let suffix = xabber_i18next.services.pluralResolver.getSuffix(lang, _count);\n        suffix = suffix.replace(/-/g, \"_\");\n        if (xabber_i18next.language == 'en' || !xabber_i18next.exists(`${id}_plural${suffix}`)) {\n            suffix = xabber_i18next.services.pluralResolver.getSuffix(\"en\", _count);\n            if (!suffix || suffix && !suffix.length)\n                suffix = '_0';\n            else\n                suffix = '_1';\n        }\n        return this.getString(`${id}_plural${suffix}`, (params || [count]));\n    },\n\n    error: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_ERROR) {\n            console.error(msg);\n        }\n    },\n\n    warn: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_WARN) {\n            console.warn(msg);\n        }\n    },\n\n    info: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_INFO) {\n            console.log(msg);\n        }\n    },\n\n    debug: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_DEBUG) {\n            console.log(msg);\n        }\n    },\n\n    pretty_last_seen: function (seconds) {\n        if (seconds >= 0 && seconds <= 120)\n            return this.getString(\"last_seen_now\");\n        if (seconds > 120 && seconds < 3600)\n            return this.getString(\"last_seen_minutes\", [Math.trunc(seconds/60)]);\n        if (seconds >= 3600 && seconds < 7200)\n            return this.getString(\"last_seen_hours\");\n        if (seconds >= 3600*48*2)\n            return this.getString(\"last_seen_date\", [env.moment().subtract(seconds, 'seconds').format('LL')]);\n        else\n            return this.getString(\"last_seen_date\", [env.moment().subtract(seconds, 'seconds').calendar().toLowerCase()]);\n    },\n\n    readActualVersion: function () {\n        if (!constants.CHECK_VERSION)\n            return;\n        // get version.js file from server and parse it\n        let rawFile = new XMLHttpRequest();\n        rawFile.open(\"GET\", \"version.js?\"+uuid(), true);\n        rawFile.onreadystatechange = () => {\n            if (rawFile.readyState === 4 && rawFile.status === 200) {\n                let text, json;\n                rawFile.onreadystatechange = null;\n                try {\n                    text = rawFile.responseText;\n                    json = JSON.parse(text.split('\\n')[1].slice(1, -1));\n                } catch (e) {\n                    return;\n                }\n                this.set({\n                    actual_version_number: json.version_number,\n                    version_description: json.version_description\n                });\n            }\n        };\n        rawFile.send();\n    },\n\n    extendFunction: function () {\n        if (!String.prototype.trimStart) {\n            String.prototype.trimStart = function () {\n                return this.replace(/^\\s+/, '');\n            }\n        }\n        if (!String.prototype.trimEnd) {\n            String.prototype.trimEnd = function () {\n                return Array.from(Array.from(this).reverse().join(\"\").trimStart(/\\s$/, '')).reverse().join(\"\");\n            }\n        }\n    },\n\n    onQuit: function () {\n        if (window.indexedDB.databases) {\n            window.indexedDB.databases().then((a) => {\n                a.forEach((db) => {\n                    window.indexedDB.deleteDatabase(db.name)\n                });\n            });\n        } else {\n            this.accounts.forEach((acc) => {\n                indexedDB.deleteDatabase(acc.cached_roster.database.name);\n                indexedDB.deleteDatabase(acc.cached_sync_conversations.database.name);\n                indexedDB.deleteDatabase(acc.cached_server_features.database.name);\n            });\n        }\n        let full_storage_name = this.getStorageName();\n        for (let key in window.localStorage) {\n            if (key.startsWith(full_storage_name) || key.startsWith(constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION + '-' + this.cache.id)) {\n                window.localStorage.removeItem(key);\n            }\n        }\n    },\n\n    cacheFavicons: async function () {\n        this._cache.save('favicon', URL.createObjectURL(await fetch(constants.FAVICON_DEFAULT).then(r => r.blob())));\n        this._cache.save('favicon_gray', URL.createObjectURL(await fetch(constants.FAVICON_DEFAULT_GREY).then(r => r.blob())));\n        this._cache.save('favicon_message', URL.createObjectURL(await fetch(constants.FAVICON_MESSAGE).then(r => r.blob())));\n    },\n\n    detectMediaDevices: function () {\n        this.getMediaDevices((media_devices) => {\n            this.set(media_devices);\n        });\n    },\n\n    getMediaDevices: function (callback, errback) {\n        if (window.navigator && window.navigator.mediaDevices) {\n            window.navigator.mediaDevices.enumerateDevices()\n                .then((devices) => {\n                    let media_devices = {audio: false, video: false};\n                    (devices.find(device => device.kind === 'audioinput')) && (media_devices.audio = true);\n                    (devices.find(device => device.kind === 'videoinput')) && (media_devices.video = true);\n                    callback && callback(media_devices);\n                })\n                .catch((err) => {\n                    errback && errback(err);\n                });\n        }\n    },\n\n    throwNewVersion: function () {\n        if (!constants.CHECK_VERSION)\n            return;\n        let version_number = this.get('actual_version_number'),\n            version_description = this.get('version_description');\n        utils.dialogs.common(this.getString(\"dialog_version_update__header\", [constants.CLIENT_NAME]), `${this.getString(\"dialog_version_update__confirm_text__new_version\", [version_number])}<div class=\"new-version-description client-text-color-500\">${version_description}</div>${this.getString(\"dialog_version_update__confirm_text__question_reload_page\")}`,\n            {ok_button: {text: this.getString(\"dialog_version_update__button_reload\")}, cancel_button: {text: this.getString(\"dialog_version_update__option_not_now\")}}\n        ).done((result) => {\n            if (result) {\n                window.location.reload(true);\n            }\n        });\n    },\n\n    Settings: Backbone.ModelWithStorage.extend({\n        defaults: {\n            max_connection_retries: -1,\n            idling: true,\n            idling_time: 'default',\n            notifications: true,\n            notifications_private: true,\n            notifications_group: true,\n            jingle_calls: true,\n            notifications_volume_enabled: true,\n            notifications_volume: 0.50,\n            message_preview_private: false,\n            message_preview_group: false,\n            private_sound: true,\n            group_sound: true,\n            background: {type: 'default'},\n            side_panel: {theme: 'dark', blur: false, transparency: 50},\n            appearance: {blur: 0, vignetting: 0, color: '#E0E0E0'},\n            main_color: 'default',\n            emoji_font: 'default',\n            sound_on_private_message: 'beep_up',\n            sound_on_group_message: 'beep_up',\n            call_attention: true,\n            load_media: 'default',\n            typing_notifications: 'default',\n            mapping_service: 'default',\n            sound_on_call: 'marching-band-dave-girtsman',\n            sound_on_dialtone: 'marching-band-dave-girtsman',\n            sound_on_connection: '_call_connecting',\n            sound_on_attention: 'attention',\n            sound_on_auth_request: '_auth_request',\n            sound_on_call_busy: '_phone_busy',\n            hotkeys: 'enter',\n            avatar_shape: 'circle',\n            language: 'default',\n            load_history: true,\n            mam_requests_limit: 200,\n            mam_messages_limit_start: 1,\n            mam_messages_limit: 20,\n        }\n    }),\n\n    start: function () {\n        this.check_config.done((result) => {\n            this.cacheFavicons();\n            this.check_config = undefined;\n            result && this.trigger('start');\n        });\n    },\n\n    configure: function (config) {\n        this.loadTranslations(this.get('default_language')).then((language) => {\n            this.default_translation = language.translation ;\n            return this.loadTranslations();}).then((language) => {\n                this.setLocale(language.lang, language.translation);\n            _.extend(constants, _.pick(config, [\n                'CONNECTION_URL',\n                'PERSONAL_AREA_URL',\n                'LOG_LEVEL',\n                'SYNCHRONIZATION_RSM_MAX',\n                'ASSETS_URL_PREFIX',\n                'CONTAINER_ELEMENT',\n                'XABBER_ACCOUNT_URL',\n                'REGISTER_XMPP_ACCOUNT',\n                'REGISTER_XMPP_ACCOUNT_URL',\n                'REGISTER_XMPP_ACCOUNT_TEXT',\n                'USE_SOCIAL_AUTH',\n                'USE_TAB_SIGNALS',\n                'CLIENT_RESOURCE',\n                'CONTAINER',\n                'CHECK_VERSION',\n                'DEFAULT_LOGIN_SCREEN',\n                'STORAGE_NAME_ENDING',\n                'CLIENT_NAME',\n                'SHORT_CLIENT_NAME',\n                'CLIENT_LOGO',\n                'TOOLBAR_LOGO',\n                'ENABLE_XABBER_ACCOUNT',\n                'SCREEN_ABOUT',\n                'DISABLE_LOOKUP_WS',\n                'PRIVACY_LOAD_MEDIA',\n                'PRIVACY_TYPING_NOTIFICATIONS',\n                'PRIVACY_MAPPING_SERVICE',\n            ]));\n\n            let log_level = constants['LOG_LEVEL_'+constants.LOG_LEVEL];\n            constants.LOG_LEVEL = log_level || constants.LOG_LEVEL_ERROR;\n            constants.MATERIAL_COLORS.includes(config.MAIN_COLOR) && (constants.MAIN_COLOR = config.MAIN_COLOR);\n            (this._settings.get(\"main_color\") == 'default') && this._settings.set(\"main_color\", constants.MAIN_COLOR);\n            this.trigger(\"update_main_color\");\n            if (this._settings.get(\"load_media\") === 'default' && config.PRIVACY_LOAD_MEDIA != null)\n                this._settings.set(\"load_media\", config.PRIVACY_LOAD_MEDIA);\n            else if (this._settings.get(\"load_media\") === 'default')\n                this._settings.set(\"load_media\", true);\n            if (this._settings.get(\"typing_notifications\") === 'default' && config.PRIVACY_TYPING_NOTIFICATIONS != null)\n                this._settings.set(\"typing_notifications\", config.PRIVACY_TYPING_NOTIFICATIONS);\n            else if (this._settings.get(\"typing_notifications\") === 'default')\n                this._settings.set(\"typing_notifications\", true);\n            if (this._settings.get(\"mapping_service\") === 'default' && config.PRIVACY_MAPPING_SERVICE != null)\n                this._settings.set(\"mapping_service\", config.PRIVACY_MAPPING_SERVICE);\n            else if (this._settings.get(\"mapping_service\") === 'default')\n                this._settings.set(\"mapping_service\", true);\n            if (this._settings.get(\"idling_time\") === 'default' && config.IDLING_DEFAULT_TIMEOUT != null)\n                this._settings.set(\"idling_time\", config.IDLING_DEFAULT_TIMEOUT);\n            else if (this._settings.get(\"idling_time\") === 'default')\n                this._settings.set(\"idling_time\", constants.IDLING_DEFAULT_TIMEOUT);\n\n            window.xabber = this;\n            _.extend(window, env);\n            if (config.SYNCHRONIZATION_RSM_MAX)\n                constants.SYNCHRONIZATION_RSM_MAX = config.SYNCHRONIZATION_RSM_MAX;\n            if (config.ASSETS_URL_PREFIX) {\n                constants.ASSETS_URL_PREFIX = config.ASSETS_URL_PREFIX;\n            }\n            if (config.BACKGROUND_IMAGES_XML_URL)\n                constants.BACKGROUND_IMAGES_XML_URL = config.BACKGROUND_IMAGES_XML_URL;\n            if (config.BACKGROUND_PATTERNS_XML_URL)\n                constants.BACKGROUND_PATTERNS_XML_URL = config.BACKGROUND_PATTERNS_XML_URL;\n            if (config.CONTAINER_ELEMENT)\n                constants.CONTAINER_ELEMENT = config.CONTAINER_ELEMENT;\n            if (config.REGISTRATION_DOMAINS)\n                constants.REGISTRATION_DOMAINS = config.REGISTRATION_DOMAINS;\n            if (config.LOGIN_DOMAINS)\n                constants.LOGIN_DOMAINS = config.LOGIN_DOMAINS;\n            if (config.TRUSTED_DOMAINS)\n                constants.TRUSTED_DOMAINS = config.TRUSTED_DOMAINS;\n            if (config.RECOMMENDED_DOMAIN)\n                constants.RECOMMENDED_DOMAIN = config.RECOMMENDED_DOMAIN;\n            if (config.DOWNTIME_RECONNECTION_TIMEOUT)\n                constants.DOWNTIME_RECONNECTION_TIMEOUT = config.DOWNTIME_RECONNECTION_TIMEOUT;\n            if (config.IDLING_MINIMAL_TIMEOUT)\n                constants.IDLING_MINIMAL_TIMEOUT = config.IDLING_MINIMAL_TIMEOUT;\n            if (config.IDLING_MAXIMUM_TIMEOUT)\n                constants.IDLING_MAXIMUM_TIMEOUT = config.IDLING_MAXIMUM_TIMEOUT;\n            if (config.PING_SENDING_INTERVAL)\n                constants.PING_SENDING_INTERVAL = config.PING_SENDING_INTERVAL;\n            if (config.REGISTRATION_BUTTON != null)\n                constants.REGISTRATION_BUTTON = config.REGISTRATION_BUTTON;\n            if (config.REGISTRATION_CUSTOM_DOMAIN != null)\n                constants.REGISTRATION_CUSTOM_DOMAIN = config.REGISTRATION_CUSTOM_DOMAIN;\n            if (config.LOGIN_CUSTOM_DOMAIN != null)\n                constants.LOGIN_CUSTOM_DOMAIN = config.LOGIN_CUSTOM_DOMAIN;\n            if (config.SHORT_CLIENT_DESCRIPTION)\n                constants.SHORT_CLIENT_DESCRIPTION = config.SHORT_CLIENT_DESCRIPTION;\n            if (config.DEFAULT_EMOJI_FONT)\n                constants.DEFAULT_EMOJI_FONT = config.DEFAULT_EMOJI_FONT;\n            if (config.EMOJI_FONTS_LIST && _.isObject(config.EMOJI_FONTS_LIST))\n                constants.EMOJI_FONTS_LIST = config.EMOJI_FONTS_LIST;\n            (this._settings.get(\"emoji_font\") == 'default') && this._settings.set(\"emoji_font\", constants.DEFAULT_EMOJI_FONT);\n\n            if (config.CLIENT_NAME && !config.SHORT_CLIENT_NAME)\n                constants.SHORT_CLIENT_NAME = config.CLIENT_NAME;\n            else if (!config.CLIENT_NAME && config.SHORT_CLIENT_NAME)\n                constants.CLIENT_NAME = config.SHORT_CLIENT_NAME;\n\n            if (config.TURN_SERVERS_LIST) {\n                if (_.isArray(config.TURN_SERVERS_LIST))\n                    _.extend(constants, {TURN_SERVERS_LIST: config.TURN_SERVERS_LIST});\n                else if (_.isObject(config.TURN_SERVERS_LIST) && Object.keys(config.TURN_SERVERS_LIST).length)\n                    _.extend(constants, {TURN_SERVERS_LIST: [config.TURN_SERVERS_LIST]});\n            }\n\n            constants.FAVICON_DEFAULT = constants.ASSETS_URL_PREFIX + constants.FAVICON_DEFAULT;\n            constants.FAVICON_DEFAULT_GREY = constants.ASSETS_URL_PREFIX + constants.FAVICON_DEFAULT_GREY;\n            constants.FAVICON_MESSAGE = constants.ASSETS_URL_PREFIX + constants.FAVICON_MESSAGE;\n            constants.BACKGROUND_IMAGE = constants.ASSETS_URL_PREFIX + constants.BACKGROUND_IMAGE;\n\n\n            constants.CLIENT_LOGO = constants.ASSETS_URL_PREFIX + constants.CLIENT_LOGO;\n            constants.TOOLBAR_LOGO = constants.ASSETS_URL_PREFIX + constants.TOOLBAR_LOGO;\n\n            if (!constants.CONNECTION_URL) {\n                utils.dialogs.error(this.getString(\"client_error__missing_connection_url\"));\n                this.check_config.resolve(false);\n                return;\n            }\n            let bc;\n            if (constants.USE_TAB_SIGNALS){\n                try {\n                    bc = new BroadcastChannel(\"xabber-web\");\n                } catch (e) {\n                    console.log(e);\n                }\n                if (bc){\n                    bc.onmessage = (event) => {\n                        if (event.data === `1` && !bc.disabled_client) {\n                            bc.postMessage(`2`);\n                        }\n                        if (event.data === `2`) {\n                            bc.disabled_client = true\n                        }\n                    };\n\n                    bc.postMessage(`1`);\n                }\n            }\n            if (bc && bc.disabled_client){\n                utils.dialogs.error(this.getString(\"client_error__another_tab_active\"));\n                this.check_config.resolve(false);\n                return;\n            }\n\n            let self = this;\n            if (!Backbone.useLocalStorage && !this.cache.ignore_localstorage_warning) {\n                utils.dialogs.warning(this.getString(\"client_warning__no_local_storage\"),\n                    [{name: this.getString(\"ignore\"), text: this.getString(\"client_error__option_show_msg_again\")}]\n                ).done(function (res) {\n                    res && res.ignore && self._cache.save('ignore_localstorage_warning', true);\n                });\n            }\n\n            this.requestNotifications().done(function (granted) {\n                let emoji_dfd = new $.Deferred();\n                emoji_dfd.done(() => {\n                    self._cache.save('notifications', granted);\n                    self._cache.save('endpoint_key', undefined);\n                    self.check_config.resolve(true);\n                })\n                if (self._settings.get(\"emoji_font\") === 'system' || !Object.keys(constants.EMOJI_FONTS_LIST).length)\n                    emoji_dfd.resolve();\n                else {\n                    let emoji_obj = constants.EMOJI_FONTS_LIST[self._settings.get(\"emoji_font\")],\n                        emoji_url;\n                    if (emoji_obj && emoji_obj.url) {\n                        emoji_url = emoji_obj.url;\n                        self.loadEmojiFont(emoji_url, emoji_dfd);\n                    }\n                    else {\n                        emoji_dfd.resolve();\n                    }\n                }\n            });\n        });\n    },\n\n    fetchURLParams: function () {\n        let splitted_url = window.location.href.split(/[?#]/),\n            splitted_url_anchor = window.location.href.split('#');\n        this.url_params = {};\n        if (splitted_url.length > 1) {\n            let idx, param, params = splitted_url[1].split('&');\n            for (idx = 0; idx < params.length; idx++) {\n                param = params[idx].split('=');\n                if (param.length === 1) {\n                    this.url_params[param[0]] = null;\n                } else {\n                    this.url_params[param[0]] = param[1];\n                }\n            }\n        }\n        if (splitted_url_anchor.length > 1) {\n            this.url_params['anchor'] = splitted_url[1];\n        }\n        window.history.pushState(null, null, window.location.pathname);\n    },\n\n    getStorageName: function () {\n        let name = constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION;\n        if (constants.STORAGE_NAME_ENDING) {\n            name = name + '-' + constants.STORAGE_NAME_ENDING;\n        }\n        return name;\n    },\n\n    cleanUpStorage: function () {\n        let full_storage_name = constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION;\n        for (let key in window.localStorage) {\n            if (key.startsWith('xabber') &&\n                    !key.startsWith(full_storage_name)) {\n                window.localStorage.removeItem(key);\n            }\n        }\n    },\n\n    requestNotifications: function () {\n        let result = new $.Deferred(),\n            self = this;\n        if (!window.Notification) {\n            result.resolve(null);\n        } else if (window.Notification.permission === 'granted') {\n            result.resolve(true);\n        } else {\n            if (!self.cache.ignore_notifications_warning)\n                self.notifications_placeholder = new self.NotificationsPlaceholder();\n            result.resolve(false);\n        }\n        return result.promise();\n    },\n\n    updateFaviconConnected: function () {\n        let is_disconnected = false;\n        this.accounts.each((account) => {\n            if (account.get('enabled') && (!account.isConnected() || (account.session && account.session.get('auth_failed')))){\n                is_disconnected = true;\n                return;\n            }\n        });\n        this.updateAllMessageCounterOnDisconnect(is_disconnected);\n    },\n\n    disconnectWhenConnecting: function (is_fast) {\n        this.accounts.each((account) => {\n            if (account.session && account.connection && account.get('enabled') && !account.session.get('reconnecting') && !account.session.get('connected')){\n                account.activate();\n            }\n        });\n    },\n\n    extendWith: function () {\n        return _.reduce(arguments, function (instance, module) {\n            return instance;\n        }, this);\n    }\n});\n\nexport default new Xabber();\n","import xabber from \"xabber-core\";\nimport { transliterate as query_transliterate } from 'transliteration';\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.base,\n    utils = env.utils,\n    uuid = env.uuid,\n    $ = env.$,\n    _ = env._;\n\nxabber.ViewPath = function (str) {\n    this.path = str.split('.');\n    this.applyTo = function (obj) {\n        let result = obj;\n        for (let idx = 0; idx < this.path.length; idx++) {\n            if (!(result = _.result(result, this.path[idx]))) {\n                return null;\n            }\n        }\n        return result;\n    };\n};\n\nxabber.BasicView = Backbone.View.extend({\n    template: function () {\n        return '';\n    },\n\n    initialize: function (options) {\n        options || (options = {});\n        this.parent = options.parent;\n        this.vname = options.vname;\n        this.children = {};\n        this.$el.addClass(options.classlist);\n        if (!options.el) {\n            this.$el.html(this.template(_.extend({view: this}, constants)));\n        }\n        if (!_.isUndefined(this.ps_selector)) {\n            this.ps_container = this.$(this.ps_selector);\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        this.data = new Backbone.Model({visible: false});\n        this.data.on(\"change:visible\", this.onChangedVisibility, this);\n        xabber.on(\"update_css\", function (options) {\n            this.updateCSS && this.updateCSS();\n            (options && options.size_changed && this.windowResized) && this.windowResized();\n        }, this);\n        this._initialize && this._initialize(options);\n        this.__initialize && this.__initialize(options);\n    },\n\n    isVisible: function () {\n        return this.data.get('visible');\n    },\n\n    onChangedVisibility: function () {},\n\n    show: function () {\n        this.onShow.apply(this, arguments);\n        this.data.set('visible', true);\n        this.trigger('after_show', this);\n        this.updateScrollBar();\n    },\n\n    hide: function () {\n        this.trigger('before_hide', this);\n        this.data.set('visible', false);\n        this.onHide.apply(this, arguments);\n    },\n\n    onShow: function () {\n        this.render.apply(this, arguments);\n        _.each(this.children, function (view) {\n            view.render.apply(view, arguments);\n        });\n    },\n\n    onHide: function () {\n        _.each(this.children, function (view) {\n            view.onHide.apply(view, arguments);\n        });\n    },\n\n    detach: function () {\n        this.$el.detach();\n    },\n\n    child: function (name) {\n        return this.children[name];\n    },\n\n    addChild: function (name, constructor, options) {\n        let view;\n        if (constructor instanceof Backbone.View) {\n            view = constructor;\n            view.parent = this;\n        } else {\n            view = new constructor(_.extend({\n                parent: this,\n                vname: name\n            }, options));\n        }\n        this.children[name] = view;\n        return view;\n    },\n\n    removeChild: function (name, options) {\n        options || (options = {});\n        let view = this.children[name];\n        if (view) {\n            delete this.children[name];\n            options.soft ? view.detach() : (view.trigger(\"remove\") && view.remove());\n        }\n    },\n\n    removeChildren: function () {\n        _.each(_.keys(this.children), (view_id) => {\n            this.removeChild(view_id);\n        });\n    },\n\n    setCustomCss: function (styles) {\n        this.$el.css(styles);\n    },\n\n    removeCustomCss: function () {\n        this.$el.removeAttr('style');\n    },\n\n    saveScrollBarOffset: function () {\n        if (this.ps_container && this.isVisible()) {\n            let scroll_top = this.data.get('scroll_top');\n            if (typeof scroll_top === \"undefined\") {\n                this.data.set('scroll_top', this.getScrollTop());\n            }\n        }\n    },\n\n    updateScrollBar: function () {\n        // let start_scrolled_bottom = this.getScrollBottom();\n        if (this.ps_container && this.isVisible()) {\n            let scroll_top = this.data.get('scroll_top');\n            if (typeof scroll_top === \"undefined\") {\n                this.ps_container.perfectScrollbar('update');\n            } else {\n                this.data.set('scroll_top', undefined);\n                this.scrollTo(scroll_top);\n            }\n        }\n        // this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - start_scrolled_bottom);\n        return this;\n    },\n\n    scrollTo: function (offset) {\n        this.ps_container[0].scrollTop = offset;\n        this.ps_container.perfectScrollbar('update');\n    },\n\n    scrollToTop: function () {\n        this.scrollTo(0);\n    },\n\n    scrollToBottom: function () {\n        let scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        this.scrollTo(scrollHeight - offsetHeight);\n    },\n\n    scrollToChild: function ($child) {\n        let scrollTop = _.reduce($child.prevAll(), function (sum, el) {\n            return sum + el.offsetHeight + 2;\n        }, 0);\n        this.scrollTo(scrollTop);\n    },\n\n    scrollToChildPlus: function ($child, plus_scroll) {\n        let scrollTop = _.reduce($child.prevAll(), function (sum, el) {\n            return sum + el.offsetHeight + 2;\n        }, 0);\n        plus_scroll = plus_scroll || 0;\n\n        this.scrollTo(scrollTop + plus_scroll);\n    },\n\n    getScrollTop: function () {\n        return this.ps_container[0].scrollTop;\n    },\n\n    getScrollBottom: function () {\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollHeight - (scrollTop + offsetHeight);\n    },\n\n    getPercentScrolled: function () {\n        if (this.isScrolledToTop()) {\n            return 0;\n        }\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollTop / (scrollHeight - offsetHeight);\n    },\n\n    isScrolledToTop: function () {\n        return this.getScrollTop() === 0;\n    },\n\n    isScrolledToBottom: function () {\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return (scrollHeight - (scrollTop + offsetHeight)) < 10;\n    }\n});\n\nxabber.NodeView = xabber.BasicView.extend({\n    onShow: function (options, tree) {\n        if ((xabber.body.data.get('contact_details_view') && (this.vname === 'right_contact'))){\n            xabber.body.data.get('contact_details_view').scrollTo(xabber.body.data.get('contact_details_view').data.get('scroll_top'));\n            xabber.body.data.set('contact_details_view', null)\n            return;\n        }\n        if (options.close_settings && this.children.main_overlay){\n            this.children.main_overlay.hide();\n            this.children.main_overlay.$el.detach();\n            return;\n        }\n        if (!(tree && tree.main_overlay)){\n            _.each(this.children, function (view) {\n                view.hide();\n            });\n        }\n        if (!(tree && tree.main_overlay))\n            this.$el.children().detach();\n        tree = this.patchTree(tree, options) || tree;\n        _.each(this.children, (view, name) => {\n            if (tree.main_overlay && (name != 'main_overlay'))\n                return;\n            if (_.has(tree, name)) {\n                if (name !== 'login')\n                    this.$el.append(view.$el);\n                this.$el.switchClass('hidden', name === 'login');\n                view.show(options, tree[name]);\n            }\n        });\n        return this.render(options);\n    },\n\n    onHide: function (options) {\n        _.each(this.children, function (view) {\n            view.hide(options);\n        });\n    },\n\n    patchTree: function () {}\n});\n\nxabber.Container = xabber.BasicView.extend({\n    className: 'container',\n\n    render: function (options, path) {\n        if (_.isNull(path)){\n            this.$el.addClass('hidden');\n            return;\n        } else {\n            this.$el.removeClass('hidden');\n        }\n        let new_view = path.applyTo(options);\n        this.$el.children().detach();\n        if (this.view !== new_view) {\n            this.onHide(options);\n        }\n        this.view = new_view;\n        if (this.view) {\n            this.$el.append(this.view.$el);\n            this.view.show(options);\n        }\n        return this;\n    },\n\n    onHide: function (options) {\n        if (this.view) {\n            this.view.hide(options);\n        }\n        this.view = null;\n    }\n});\n\nxabber.SearchView = xabber.BasicView.extend({\n    events: {\n        \"keydown .search-input\": \"keyUpOnSearch\",\n        \"focusout .search-input\": \"clearSearchSelection\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .list-item\": \"onClickItem\"\n    },\n\n    keyUpOnSearch: function (ev) {\n        ev.stopPropagation();\n        this.ids = this.$('.list-item:not(.hidden)').map(function () {\n            return $(this).data('id');\n        }).toArray();\n        let $selection = this.getSelectedItem();\n        if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n            return this.selectNextItem();\n        }\n        if (ev.keyCode === constants.KEY_ARROW_UP) {\n            return this.selectPreviousItem();\n        }\n        if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n            ev.preventDefault();\n            return this.onEnterPressed($selection);\n        }\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            ev.preventDefault();\n            if ($(ev.target).val())\n                return this.clearSearch();\n            else\n                this.close();\n        }\n        this.updateSearch();\n    },\n\n    getSelectedItem: function () {\n        return this.$('.list-item[data-id=\"'+this.selection_id+'\"]');\n    },\n\n    selectItem: function (id, arrow) {\n        if (!id)\n            return;\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            this.ps_container[0].scrollTop = 0;\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        if (arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop || $selection[0].clientHeight + $selection[0].offsetTop < this.ps_container[0].scrollTop))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop;\n        if (arrow === 'up' && ($selection[0].offsetTop <= this.ps_container[0].scrollTop || $selection[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop;\n        $selection.addClass('selected');\n    },\n\n    selectNextItem: function () {\n        this.selectItem(this.ids[this.ids.indexOf(this.selection_id)+1], 'down');\n    },\n\n    selectPreviousItem: function () {\n        this.selectItem(this.ids[this.ids.indexOf(this.selection_id)-1], 'up');\n    },\n\n    updateSearch: function () {\n        if (!this._update_search_timeout) {\n            let query = this.$('.search-input').val();\n            this.$('.search-form').switchClass('active', query);\n            this.clearSearchSelection();\n            if (query)\n                this.search(query.toLowerCase());\n            else {\n                this.$('.list-item').removeClass('hidden');\n                this.onEmptyQuery();\n            }\n            this.updateScrollBar();\n            this.query = false;\n            this._update_search_timeout = setTimeout(() => {\n                this._update_search_timeout = null;\n                this.query && this.updateSearch();\n            }, 150);\n        } else {\n            this.query = true;\n        }\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.updateSearch();\n    },\n\n    clearSearchSelection: function (ev) {\n        this.selection_id = null;\n        this.$('.list-item.selected').removeClass('selected');\n    },\n\n    searchAll: function () {\n        this.$('.list-item').removeClass('hidden');\n    },\n\n    keyUpOnSearchWithQuery: function () {},\n\n    close: function () {},\n\n    search: function () {},\n\n    onEnterPressed: function () {},\n\n    onEmptyQuery: function () {},\n\n    onClickItem: function () {}\n});\n\n  xabber.SearchPanelView = xabber.SearchView.extend({\n      events: {\n          \"keydown .search-input\": \"keyUpOnSearch\",\n          \"focusout .search-input\": \"clearSearchSelection\",\n          \"click .close-search-icon\": \"clearSearch\",\n          \"click .list-item\": \"onClickItem\",\n          \"click .btn-search-messages\": \"updateSearchWithMessages\"\n      },\n\n      updateSearchWithMessages: function (ev) {\n          this.search_messages = true;\n          this.updateSearch();\n      },\n\n      keyUpOnSearch: function (ev) {\n          ev.stopPropagation();\n          if ($(ev.target).val()) {\n              this.keyUpOnSearchWithQuery(ev);\n              return;\n          }\n          this.ids = this.$('.list-item:not(.hidden)').map(function () {\n              return $(this).data('id');\n          }).toArray();\n          let $selection = this.getSelectedItem();\n          if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n              return this.selectNextItem();\n          }\n          if (ev.keyCode === constants.KEY_ARROW_UP) {\n              return this.selectPreviousItem();\n          }\n          if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n              ev.preventDefault();\n              return this.onEnterPressed($selection);\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              ev.preventDefault();\n              if ($(ev.target).val())\n                  return this.clearSearch();\n              else\n                  this.close();\n          }\n          this.updateSearch();\n      },\n\n      onScrollY: function (options) {\n          if (xabber.all_searched_messages && xabber.all_searched_messages.length && this.queryid && !this._loading_messages && !this._messages_loaded && this.isScrolledToBottom()) {\n              this._loading_messages = true;\n              options = options || {};\n              this.queryid = uuid();\n              options.query_id = this.queryid;\n              let accounts = xabber.accounts.connected;\n              accounts.forEach((account) => {\n                  let first_message = xabber.all_searched_messages.find(message => (message.account.get('jid') === account.get('jid')));\n                  if (!first_message || account.searched_msgs_loaded) {\n                      // this._loading_messages = false;\n                      return;\n                  }\n                  options.account = account;\n                  options.before = first_message.get('archive_id');\n                  this.MAMRequest(this.query_text, options, (messages) => {\n                      _.each(messages, (message) => {\n                          let message_from_stanza = account.chats.receiveChatMessage(message,\n                              _.extend({is_searched: true}, options)\n                              ),\n                              msg_idx = xabber.all_searched_messages.indexOf(message_from_stanza),\n                              $message_item_view;\n                          if (!message_from_stanza)\n                              return;\n                          else\n                              $message_item_view = new xabber.MessageItemView({model: message_from_stanza});\n                          if (msg_idx === 0) {\n                              $message_item_view.$el.appendTo(this.$('.messages-list-wrap .messages-list'));\n                          } else {\n                              $message_item_view.$el.insertBefore(this.$('.messages-list-wrap .message-item').eq(-msg_idx));\n                          }\n                      });\n                      this.$('.messages-list-wrap').switchClass('hidden', !this.$('.messages-list').children().length);\n                      this.updateScrollBar();\n                      this._loading_messages = false;\n                  });\n              });\n              (accounts.filter(account => account.searched_msgs_loaded).length === accounts.length) && (this._messages_loaded = true);\n          }\n      },\n\n      onScroll: function () {},\n\n      keyUpOnSearchWithQuery: function (ev) {\n          ev.stopPropagation();\n          this.ids = this.$('.searched-lists-wrap .list-item:not(.hidden)').map(function () {\n              return $(this).data('id');\n          }).toArray();\n          let $selection = this.getSelectedItemWithQuery();\n          if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n              return this.selectNextItemWithQuery();\n          }\n          if (ev.keyCode === constants.KEY_ARROW_UP) {\n              return this.selectPreviousItemWithQuery();\n          }\n          if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n              ev.preventDefault();\n              return this.onEnterPressed($selection);\n          }\n          else if (ev.keyCode === constants.KEY_ENTER){\n              this.search_messages = true;\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              ev.preventDefault();\n              if ($(ev.target).val())\n                  return this.clearSearch();\n              else\n                  this.close();\n          }\n          this.updateSearch();\n      },\n\n      getSelectedItemWithQuery: function () {\n          return this.$('.searched-lists-wrap .list-item[data-id=\"'+this.selection_id+'\"]');\n      },\n\n      selectItemWithQuery: function (id, arrow) {\n          if (!id) {\n              if (this.isScrolledToBottom())\n                  this.onScrollY();\n              return;\n          }\n          this.clearSearchSelection();\n          let $selection = this.$('.searched-lists-wrap .list-item[data-id=\"'+id+'\"]');\n          if ($selection.length) {\n              this.selection_id = id;\n          } else {\n              this.ps_container[0].scrollTop = 0;\n              $selection = this.$('.searched-lists-wrap .list-item:visible').first();\n              this.selection_id = $selection.data('id');\n          }\n          if (arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop\n          || $selection[0].clientHeight + $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop < this.ps_container[0].scrollTop))\n              this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop;\n          if (arrow === 'up' && ($selection[0].offsetTop + $selection.parent().parent()[0].offsetTop <= this.ps_container[0].scrollTop\n          || $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n              this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop;\n          $selection.addClass('selected');\n      },\n\n      selectNextItemWithQuery: function () {\n          this.selectItemWithQuery(this.ids[this.ids.indexOf(this.selection_id)+1], 'down');\n      },\n\n      selectPreviousItemWithQuery: function () {\n          this.selectItemWithQuery(this.ids[this.ids.indexOf(this.selection_id)-1], 'up');\n      },\n\n      search: function (query) {\n          this.$(this.main_container).addClass('hidden');\n          clearTimeout(this.keyup_timeout);\n          this.keyup_timeout = null;\n          this.query_text = query;\n          let query_transliterated = query_transliterate(query);\n          this.$('.contacts-list').html(\"\");\n          this.$('.chats-list').html(\"\");\n          xabber.accounts.connected.forEach((acc) => {\n              let saved_chat = acc.chats.getSavedChat();\n              saved_chat.set('opened', true);\n              saved_chat.item_view.updateLastMessage();\n          });\n          let query_chats = _.clone(xabber.chats);\n          query_chats.comparator = 'timestamp';\n          query_chats.sort('timestamp').forEach((chat) => {\n              let jid = chat.get('jid').toLowerCase(),\n                  name = chat.contact ? (chat.contact.get('roster_name') || chat.contact.get('name')) : chat.get('name');\n              name && (name = name.toLowerCase());\n              if (chat.get('timestamp') || chat.get('saved')) {\n                  if (name.indexOf(query) > -1 || jid.indexOf(query) > -1\n                      || name.indexOf(query_transliterated) > -1 || jid.indexOf(query_transliterated) > -1\n                      || (chat.get('saved') && query.includes('saved'))) {\n                      let searched_by = name.indexOf(query) > -1 || name.indexOf(query_transliterated) > -1 ? 'by-name' : 'by-jid',\n                          chat_item = xabber.chats_view.child(chat.get('id'));\n                      chat_item && (chat_item = chat_item.$el.clone().addClass(searched_by));\n                      if (chat_item) {\n                          this.$('.chats-list-wrap').removeClass('hidden');\n                          if (searched_by === 'by-name')\n                              this.$('.chats-list').prepend(chat_item);\n                          else if (this.$('.chats-list .by-jid').length)\n                              chat_item.insertBefore(this.$('.chats-list .by-jid').first());\n                          else\n                              this.$('.chats-list').append(chat_item);\n                          chat_item.click(() => {\n                              this.$('.list-item.active').removeClass('active');\n                              xabber.chats_view.openChat(chat.item_view, {screen: xabber.body.screen.get('name')});\n                              chat_item.addClass('active');\n                          });\n                      }\n                  }\n              }\n          });\n          xabber.accounts.each((account) => {\n              account.contacts.each((contact) => {\n                  let jid = contact.get('jid').toLowerCase(),\n                      name = contact.get('roster_name') || contact.get('name'),\n                      chat = account.chats.get(contact.hash_id),\n                      chat_id = chat && chat.id;\n                  name && (name = name.toLowerCase());\n                  if (!chat_id || chat_id && !this.$('.chat-item[data-id=\"' + chat_id + '\"]').length)\n                      if (name.indexOf(query) > -1 || jid.indexOf(query) > -1\n                          || name.indexOf(query_transliterated) > -1 || jid.indexOf(query_transliterated) > -1) {\n                          let searched_by = name.indexOf(query) > -1 || name.indexOf(query_transliterated) > -1 ? 'by-name' : 'by-jid',\n                              item_list = xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${account.get('jid')}\"] .list-item[data-jid=\"${jid}\"]`).first().clone().data('account-jid', account.get('jid'));\n                          item_list.attr({'data-color': account.settings.get('color'), 'data-account': account.get('jid')}).addClass(searched_by).prepend($('<div class=\"account-indicator ground-color-700\"/>'));\n                          if (searched_by === 'by-name')\n                              this.$('.contacts-list').prepend(item_list);\n                          else if (this.$('.contacts-list .by-jid').length)\n                              item_list.insertBefore(this.$('.contacts-list .by-jid').first());\n                          else\n                              this.$('.contacts-list').append(item_list);\n                          item_list.click(() => {\n                              this.$('.list-item.active').removeClass('active');\n                              let chat = account.chats.getChat(contact);\n                              chat && xabber.chats_view.openChat(chat.item_view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                              item_list.addClass('active');\n                          });\n                      }\n              });\n          });\n          this.$('.chats-list-wrap').switchClass('hidden', !this.$('.chats-list').children().length);\n          this.$('.pinned-chat-list').switchClass('hidden', query);\n          this.$('.contacts-list-wrap').switchClass('hidden', !this.$('.contacts-list').children().length);\n          this.$('.messages-list-wrap').addClass('hidden').find('.messages-list').html(\"\");\n          if (query.length >= 2 && this.search_messages) {\n              this.search_messages = false;\n              this.queryid = uuid();\n              this.searchMessages(query, {query_id: this.queryid});\n          }\n          else if (query.length >= 2 && !this.search_messages){\n              this.$('.btn-search-messages').showIf(query);\n          }\n      },\n\n      searchMessages: function (query, options) {\n          this._loading_messages = true;\n          this._messages_loaded = false;\n          this.$('.messages-list-wrap').showIf(query);\n          this.$('.btn-search-messages').hideIf(query);\n          this.$('.messages-list-wrap .messages-list').html(env.templates.contacts.preloader());\n          options = options || {};\n          !options.max && (options.max = xabber.settings.mam_messages_limit);\n          !options.before && (options.before = \"\");\n          xabber.all_searched_messages = new xabber.SearchedMessages();\n          let accounts = xabber.accounts.connected;\n          accounts.forEach((account) => {\n              account.searched_msgs_loaded = false;\n              options.account = account;\n              this.MAMRequest(query, options, (messages) => {\n                  this.$('.messages-list-wrap .messages-list').html('');\n                  if (!this.query_text)\n                      return;\n                  _.each(messages, (message) => {\n                      if (!this.query_text)\n                          return;\n                      let message_from_stanza = account.chats.receiveChatMessage(message,\n                          _.extend({is_searched: true}, options)\n                          ),\n                          msg_idx = xabber.all_searched_messages.indexOf(message_from_stanza), $message_item_view;\n                          if (!message_from_stanza)\n                              return;\n                          else\n                              $message_item_view = new xabber.MessageItemView({model: message_from_stanza});\n                      if (msg_idx === 0) {\n                          $message_item_view.$el.appendTo(this.$('.messages-list-wrap .messages-list'));\n                      } else {\n                          $message_item_view.$el.insertBefore(this.$('.messages-list-wrap .message-item').eq(-msg_idx));\n                      }\n                  });\n                  this.$('.messages-list-wrap').switchClass('hidden', !this.$('.messages-list').children().length);\n                  this.updateScrollBar();\n                  this._loading_messages = false;\n              });\n          });\n          (accounts.filter(account => account.searched_msgs_loaded).length === accounts.length) && (this._messages_loaded = true);\n      },\n\n      MAMRequest: function (query, options, callback, errback) {\n          let messages = [],\n              account = options.account,\n              queryid = uuid(),\n              iq = $iq({type: 'set'})\n                  .c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                  .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                  .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                  .c('value').t(Strophe.NS.MAM).up().up()\n                  .c('field', {'var': 'withtext'})\n                  .c('value').t(query).up().up().up().cnode(new Strophe.RSM(options).toXML()),\n              handler = account.connection.addHandler((message) => {\n                  let $msg = $(message);\n                  if ($msg.find('result').attr('queryid') === queryid && options.query_id === this.queryid) {\n                      messages.push(message);\n                  }\n                  return true;\n              }, env.Strophe.NS.MAM);\n          account.sendIQFast(iq,\n              function (res) {\n                  account.connection.deleteHandler(handler);\n                  let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                  if ($fin.length && $fin.attr('queryid') === queryid) {\n                      let rsm_complete = ($fin.attr('complete') === 'true') ? true : false;\n                      rsm_complete && (account.searched_msgs_loaded = true);\n                  }\n                  callback && callback(messages);\n              },\n              function () {\n                  account.connection.deleteHandler(handler);\n                  errback && errback();\n              }\n          );\n      },\n\n      clearSearch: function (ev) {\n          ev && ev.preventDefault();\n          this.$('.search-input').val('');\n          this.updateSearch();\n          this.onEmptyQuery();\n      },\n\n      onEmptyQuery: function () {\n          xabber.accounts.forEach(function (account) {\n              account.searched_msgs_loaded = false;\n          });\n          this.query_text = null;\n          this.queryid = null;\n          this._messages_loaded = false;\n          this._loading_messages = false;\n          this.$(this.main_container).removeClass('hidden');\n          this.$('.chats-list-wrap').addClass('hidden');\n          this.$('.pinned-chat-list').removeClass('hidden');\n          this.$('.contacts-list-wrap').addClass('hidden');\n          this.$('.messages-list-wrap').addClass('hidden');\n      }\n  });\n\n  xabber.InputWidget = Backbone.View.extend({\n    field_type: 'text',\n    template: templates.input_widget,\n\n    events: {\n        \"click .field-text\": \"showInput\",\n        \"click .btn-rename\": \"showInput\",\n        \"keydown .field-input\": \"keyDown\",\n        \"keyup .field-input\": \"keyUp\",\n        \"focusout .field-input\": \"changeValue\"\n    },\n\n    initialize: function () {\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n        this.data.on(\"change:input_mode\", this.onChangedInputMode, this);\n        this.bindModelEvents();\n    },\n\n    bindModelEvents: function () {\n        this.model.on(\"change:\"+this.model_field, this.updateValue, this);\n    },\n\n    showInput: function () {\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    onChangedInputMode: function () {\n        let input_mode = this.data.get('input_mode');\n        this.$value.hideIf(input_mode);\n        this.$btn.hideIf(input_mode);\n        this.$input.showIf(input_mode).focus();\n    },\n\n    keyDown: function (ev) {\n        ev.stopPropagation();\n        let value = this.getValue();\n        if (ev.keyCode === constants.KEY_ENTER) {\n            this.changeValue();\n        } else if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.$input.removeClass('changed').val(value);\n            this.data.set('input_mode', false);\n        }\n    },\n\n    keyUp: function (ev) {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        return this.model.get(this.model_field);\n    },\n\n    setValue: function (value) {\n        this.model.save(this.model_field, value);\n    },\n\n    changeValue: function () {\n        let value = this.getValue(),\n            new_value = this.$input.removeClass('changed').val();\n        new_value !== value && this.setValue(new_value);\n        this.data.set('input_mode', false);\n    },\n\n    updateValue: function () {\n        let value = this.getValue();\n        this.$value.text(value);\n        this.$input.val(value);\n    }\n});\n\nxabber.Body = xabber.NodeView.extend({\n    className: 'client-body-wrap',\n\n    _initialize: function () {\n        this.vname = 'body';\n        this.data.set('visible', true);\n        this.screen = new Backbone.Model();\n        this.screen_map = new Backbone.Model();\n        this.screen.on(\"change\", this.update, this);\n        this.screen_map.on(\"change\", this.onScreenMapChanged, this);\n        $(constants.CONTAINER_ELEMENT).append(this.$el);\n        this.updateBackground();\n        this.updateMainColor();\n        this.updateAvatarShape();\n        $('#modals').insertAfter(this.$el);\n        xabber.on('update_main_color', this.updateMainColor, this);\n        xabber.on('update_avatar_shape', this.updateAvatarShape, this);\n    },\n\n    addScreen: function (name, attrs) {\n        this.screen_map.set(name, attrs);\n    },\n\n    updateMainColor: function () {\n        this.$el.attr('data-main-color', xabber.settings.main_color);\n        this.$el.siblings('#modals').attr('data-main-color', xabber.settings.main_color);\n        $(window.document).find('.login-container').attr('data-main-color', xabber.settings.main_color);\n    },\n\n    updateAvatarShape: function () {\n        let shape = xabber.settings.avatar_shape;\n        $(constants.CONTAINER_ELEMENT).switchClass('non-circle-avatars', shape != 'circle');\n        $(constants.CONTAINER_ELEMENT).switchClass('octagon-avatars', shape === 'octagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('hexagon-avatars', shape === 'hexagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('pentagon-avatars', shape === 'pentagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('rounded-avatars', shape === 'rounded');\n        $(constants.CONTAINER_ELEMENT).switchClass('star-avatars', shape === 'star');\n        $(constants.CONTAINER_ELEMENT).switchClass('squircle-avatars', shape === 'squircle');\n    },\n\n    updateBackground: function () {\n        let background_settings = xabber.settings.background || {};\n        if (background_settings.image) {\n            if (background_settings.type === 'repeating-pattern') {\n                this.$el.css({\n                    'background-repeat': 'repeat',\n                    'background-size': 'unset',\n                    'background-image': `url(\"${utils.images.getCachedBackground(background_settings.image)}\")`\n                });\n            } else if (background_settings.type === 'image') {\n                this.$el.css({\n                    'background-repeat': 'no-repeat',\n                    'background-size': 'cover',\n                    'background-image': `url(\"${utils.images.getCachedBackground(background_settings.image)}\")`\n                });\n            }\n        } else {\n            this.$el.css({\n                'background-repeat': 'repeat',\n                'background-size': 'unset',\n                'background-image': `url(\"${constants.BACKGROUND_IMAGE}\")`,\n                'box-shadow': 'none'\n            });\n        }\n        this.updateBoxShadow(xabber.settings.appearance.vignetting);\n    },\n\n    updateBoxShadow: function (value) {\n        value = Number(value);\n        if (!value)\n            this.$el.css({\n                'box-shadow': `unset`\n            });\n        else\n            this.$el.css({\n            'box-shadow': `${value}px 0 100px 1px rgba(0, 0, 0, 0.7) inset, -${value}px 0 100px -1px rgba(0, 0, 0, 0.7) inset`\n        });\n    },\n\n    updateBlur: function (value) {\n        value = Number(value);\n        xabber.blur_overlay.$el.css({\n            \"backdrop-filter\": `blur(${value}px)`,\n            \"-webkit-backdrop-filter\": `blur(${value}px)`\n        });\n    },\n\n    setScreen: function (name, attrs, options) {\n        xabber.error(name);\n        options = options || {};\n        $(window).unbind(\"keydown.contact_panel\");\n        xabber.notifications_placeholder && xabber.main_panel.$el.addClass('notifications-request');\n        $(constants.CONTAINER_ELEMENT).switchClass('xabber-login', name === 'login');\n        $(constants.CONTAINER_ELEMENT).switchClass('on-xabber-login', name !== 'login');\n        let new_attrs = {stamp: _.uniqueId()};\n        if (name && !this.isScreen(name)) {\n            new_attrs.name = name;\n        }\n        if (!attrs || !attrs.show_placeholder) {\n            new_attrs.show_placeholder = null;\n        }\n        if ((attrs && attrs.right && attrs.right === 'group_invitation') || options.right_force_close)\n            new_attrs.right_contact = null;\n        else {\n            new_attrs.right_contact = xabber.body.screen.get('right_contact');\n        }\n        if ((!attrs && xabber.body.screen.get('right'))\n            || (attrs && !attrs.right && attrs.right !== null && xabber.body.screen.get('right')))\n            new_attrs.right = xabber.body.screen.get('right');\n        new_attrs = _.extend(new_attrs, attrs);\n        let chat_item_view;\n        if (_.isUndefined(new_attrs.chat_item)){\n            chat_item_view = this.screen.get('chat_item');\n            if (chat_item_view && chat_item_view.content)\n                chat_item_view.content._prev_scrolltop = chat_item_view.content.getScrollTop() || chat_item_view.content._scrolltop;\n        }\n        if (name){\n            let tree = this.screen_map.get(name);\n            if (tree && tree.main_overlay){\n                if (!this.screen.get('previous_screen'))\n                    new_attrs.previous_screen = {...this.screen.attributes};\n            } else {\n                new_attrs.previous_screen = undefined;\n            }\n        }\n        this.screen.set(_.extend(new_attrs, attrs), options);\n    },\n\n    isScreen: function (name) {\n        return this.screen.get('name') === name;\n    },\n\n    onScreenMapChanged: function () {\n        let name = this.screen.get('name');\n        if (_.has(this.screen_map.changed, name)) {\n            this.update();\n        }\n    },\n\n    showChatPlaceholder: function () {\n        try {\n            xabber.right_panel.$el.children().detach();\n            xabber.right_panel.$el.append(xabber.chat_placeholder.$el);\n        } catch (e) {\n            console.log(e)\n        }\n    },\n\n    update: function () {\n        let options = this.screen.attributes,\n            tree = this.screen_map.get(options.name);\n        if (typeof tree !== \"undefined\") {\n            this.onShow(options, tree);\n            this.model.trigger('update_screen', this.screen.get('name'));\n            this.model.trigger('update_layout', {screen_changed: options.name});\n        }\n    }\n});\n\nxabber.ToolbarView = xabber.BasicView.extend({\n    className: \"toolbar noselect\",\n    ps_selector: '.accounts',\n    template: templates.toolbar,\n\n    events: {\n        \"click .toolbar-logo\":             \"clickAllChats\",\n        \"click .all-chats\":             \"showAllChats\",\n        \"click .contacts\":              \"showContacts\",\n        \"click .archive-chats\":         \"showArchive\",\n        \"click .saved-chats\":           \"showSavedChats\",\n        \"click .mentions\":              \"showNotifications\",\n        \"click .settings\":              \"showSettings\",\n        \"click .settings-modal\":              \"showSettingsModal\",\n        \"click .jingle-calls\":              \"showPlaceholder\",\n        \"click .geolocation-chats\":              \"showPlaceholder\",\n        \"click .add-variant.contact\":   \"showAddContactView\",\n        \"click .add-variant.account\":   \"showAddAccountView\",\n        \"click .add-variant.public-groupchat\": \"showAddPublicGroupChatView\",\n        \"click .add-variant.incognito-groupchat\": \"showAddIncognitoGroupChatView\",\n    },\n\n    _initialize: function () {\n        this.$('.add-something').on(\"change_state\", function (ev, state) {\n            $(this).switchClass('active', state).find('.mdi')\n                    .switchClass('mdi-close', state)\n                    .switchClass('mdi-plus', !state);\n            if (state) {\n                this.setAttribute('data-title',  this.getAttribute('title'));\n                this.setAttribute('title', \"\");\n            } else {\n                this.setAttribute('title', this.getAttribute('data-title'));\n                this.removeAttribute('data-title');\n            }\n        });\n\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        this.data.on(\"change:all_msg_counter\", this.onChangedAllMessageCounter, this);\n        this.data.on(\"change:group_msg_counter\", this.onChangedGroupMessageCounter, this);\n        this.data.on(\"change:mentions_counter\", this.onChangedMentionsCounter, this);\n        this.data.on(\"change:msg_counter\", this.onChangedMessageCounter, this);\n        this.data.set({msg_counter: 0});\n        this.data.set({group_msg_counter: 0});\n        this.data.set({all_msg_counter: 0});\n        this.data.set({mentions_counter: 0});\n    },\n\n    render: function () {\n        this.$('.add-something').dropdown({\n            inDuration: 50,\n            outDuration: 50,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        this.$('.add-variant.account').hideIf(!constants.LOGIN_CUSTOM_DOMAIN && !constants.LOGIN_DOMAINS.length);\n    },\n\n    updateColor: function (color) {\n    },\n\n    onUpdatedScreen: function (name) {\n        if (name === 'account_settings_modal' || name === 'settings-modal'){\n            return;\n        }\n        if ((name === 'all-chats') &&\n            (this.$('.toolbar-item:not(.toolbar-logo).all-chats').hasClass('active') ||\n                this.$('.toolbar-item:not(.toolbar-logo).chats').hasClass('active')||\n                this.$('.toolbar-item:not(.toolbar-logo).saved-chats').hasClass('active')||\n                this.$('.toolbar-item:not(.toolbar-logo).mentions').hasClass('active')||\n                this.$('.toolbar-item:not(.toolbar-logo).archive-chats').hasClass('active'))) {\n            return;\n        }\n        this.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n        if (_.contains(['all-chats', 'contacts', 'mentions',\n                        'settings', 'settings-modal', 'search', 'jingle-calls', 'geolocation-chats', 'about'], name)) {\n            this.$('.toolbar-item:not(.toolbar-logo).'+name).addClass('active');\n        }\n    },\n\n    clickAllChats: function (ev) {\n        this.$('.all-chats').click();\n    },\n\n    showAllChats: function (ev, no_unread) {\n        let $el;\n        if (ev && ev.target)\n            $el = $(ev.target).closest('.toolbar-item:not(.toolbar-logo)');\n        else\n            $el = this.$('.all-chats');\n        let is_active = $el.hasClass('active') && !$el.hasClass('unread');\n        this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n            .filter('.all-chats').addClass('active').switchClass('unread', is_active);\n        let options = {}\n        no_unread && (options.no_unread = no_unread);\n        xabber.body.setScreen('all-chats', options);\n        xabber.trigger('show_all_chats', no_unread);\n        xabber.trigger('update_placeholder');\n    },\n\n    showArchive: function (ev, no_unread) {\n        this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n            .filter('.archive-chats').addClass('active');\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_archive_chats', no_unread);\n        xabber.trigger('update_placeholder');\n    },\n\n    showSavedChats: function (ev, no_unread) {\n        if (xabber.accounts.enabled.length === 1){\n            let saved_chat = xabber.accounts.enabled[0].chats.getSavedChat();\n            saved_chat.item_view && saved_chat.item_view.open({right_contact_save: true, clear_search: false, scroll_to_chat: true});\n            this.$('.active').removeClass('active');\n            this.$('.saved-chats').addClass('active');\n            saved_chat.once(\"change:active\", () => {\n                xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n                xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).'+xabber.body.screen.get('name')).addClass('active');\n            });\n        } else {\n            this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n                .filter('.saved-chats').addClass('active');\n            xabber.body.setScreen('all-chats',);\n            xabber.trigger('show_saved_chats', no_unread);\n            xabber.trigger('update_placeholder');\n        }\n    },\n\n    showNotifications: function (ev, no_unread) {\n        this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n            .filter('.mentions').addClass('active');\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_notification_chats', no_unread);\n        xabber.trigger('update_placeholder');\n    },\n\n    showChatsByAccount: function (account) {\n        if (this.data.get('account_filtering') === account.get('jid'))\n            this.data.set('account_filtering', null);\n        else\n            this.data.set('account_filtering', account.get('jid'));\n        if (this.$('.toolbar-item:not(.toolbar-logo).all-chats').hasClass('active')) {\n            this.showAllChats(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).archive-chats').hasClass('active')) {\n            this.showArchive(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).saved-chats').hasClass('active')) {\n            this.showSavedChats(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).mentions').hasClass('active')) {\n            this.showNotifications(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).jingle-calls').hasClass('active') ||\n            this.$('.toolbar-item:not(.toolbar-logo).geolocation-chats').hasClass('active')){\n            this.showAllChats(null, true);\n            return;\n        }\n    },\n\n    showContacts: function () {\n        xabber.body.setScreen('contacts', {right_contact: null});\n        xabber.trigger('update_placeholder');\n    },\n\n    showMentions: function () {\n        xabber.body.setScreen('mentions');\n        xabber.trigger('update_placeholder');\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    },\n\n    showSettingsModal: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    },\n\n    showPlaceholder: function (ev) {\n        if (xabber.chats_view && xabber.chats_view.active_chat){\n            xabber.chats_view.active_chat.model.trigger('hide_chat');\n            xabber.chats_view.active_chat = null;\n        }\n        let screen_name = this.$('.toolbar-item:not(.toolbar-logo).settings').hasClass('active') ? 'all-chats' : xabber.body.screen.get('name');\n        xabber.body.setScreen(screen_name, {chat_item: null});\n        let $el = $(ev.target).closest('.toolbar-item:not(.toolbar-logo)');\n        this.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n        $el.addClass('active');\n        xabber.trigger('update_placeholder');\n    },\n\n    showAddContactView: function () {\n        xabber.trigger('add_contact', {right: null});\n    },\n\n    showAddAccountView: function () {\n        xabber.trigger('add_account', {right: null});\n    },\n\n    showAddIncognitoGroupChatView: function () {\n        xabber.trigger('add_group_chat', {incognito: true, right: null});\n    },\n\n    showAddPublicGroupChatView: function () {\n        xabber.trigger('add_group_chat', {public: true, right: null});\n    },\n\n    setAllMessageCounter: function () {\n        let count_msg = 0, count_all_msg = 0, count_group_msg = 0, mentions = 0;\n        xabber.accounts.each((account) => {\n            account.chats.each((chat) => {\n                if (chat.contact && !chat.isMuted()) {\n                    if (chat.get('unread') || chat.get('const_unread')){\n                        xabber.error(chat);\n                    }\n                    count_all_msg += chat.get('unread') + chat.get('const_unread');\n                    if (chat.contact.get('group_chat'))\n                        count_group_msg += chat.get('unread') + chat.get('const_unread');\n                    else\n                        count_msg += chat.get('unread') + chat.get('const_unread');\n                }\n            });\n            let incoming_subscriptions = account.contacts.filter(item => (item.get('invitation') && !item.get('removed')) || (item.get('subscription_request_in') && item.get('subscription') != 'both')).length;\n            count_all_msg += incoming_subscriptions;\n            mentions += account.unread_mentions.length;\n        });\n        return { msgs: count_msg, all_msgs: count_all_msg, group_msgs: count_group_msg, mentions: mentions };\n    },\n\n    recountAllMessageCounter: function () {\n        let unread_messages = this.setAllMessageCounter();\n        this.data.set('all_msg_counter', unread_messages.all_msgs);\n        this.data.set('msg_counter', unread_messages.msgs);\n        this.data.set('group_msg_counter', unread_messages.group_msgs);\n        this.data.set('mentions_counter', unread_messages.mentions);\n        xabber.recountAllMessageCounter();\n    },\n\n    onChangedMessageCounter: function () {\n        let c = this.data.get('msg_counter');\n        this.$('.msg-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedGroupMessageCounter: function () {\n        let c = this.data.get('group_msg_counter');\n        this.$('.group-msg-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedMentionsCounter: function () {\n        let c = this.data.get('mentions_counter');\n        this.$('.mentions-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedAllMessageCounter: function () {\n        let c = this.data.get('all_msg_counter');\n        if (c >= 100)\n            c = '99+';\n        this.$('.all-msg-indicator').switchClass('unread', c).text(c);\n    },\n});\n\nxabber.JingleMessageView = xabber.BasicView.extend({\n    className: 'modal main-modal jingle-message-view',\n    template: templates.jingle_message_calling,\n    avatar_size: constants.AVATAR_SIZES.XABBER_VOICE_CALL_VIEW,\n\n    events: {\n        \"click\": \"clickOnWindow\",\n        \"click .btn-accept\": \"accept\",\n        \"click .btn-share-screen\": \"shareScreen\",\n        \"click .btn-microphone\": \"toggleMicrophone\",\n        \"click .btn-video\": \"videoCall\",\n        \"click .btn-volume\": \"toggleVolume\",\n        \"click .btn-collapse\": \"collapse\",\n        \"click .btn-cancel\": \"cancel\",\n        \"click .btn-full-screen\": \"setFullScreen\"\n    },\n\n    _initialize: function (options) {\n        this.model = options.model;\n        this.model.on('destroy', this.onDestroy, this);\n        this.contact = this.model.contact;\n        this.account = this.contact.account;\n        this.model.on('change:state', this.updateCallingStatus, this);\n        this.model.on('change:status', this.updateBackground, this);\n        this.model.on('change:volume_on', this.updateButtons, this);\n        this.model.on('change:video_live', this.updateButtons, this);\n        this.model.on('change:video_screen', this.updateButtons, this);\n        this.model.on('change:video_in', this.updateCollapsedWindow, this);\n        this.model.on('change:video', this.updateCollapsedWindow, this);\n        this.model.on('change:audio', this.updateButtons, this);\n    },\n\n    render: function (options) {\n        options = options || {};\n        this.updateName();\n        this.updateCallingStatus(options.status);\n        if (options.status === 'in') {\n            this.updateStatusText(xabber.getString(\"dialog_jingle_message__status_calling\"));\n        }\n        else {\n            this.model.set('status', 'calling');\n        }\n        this.updateAccountJid();\n        this.updateButtons();\n        this.$el.openModal({\n            dismissible: false,\n            ready: () => {\n                this.updateAvatar();\n                this.pos1 = 0;\n                this.pos2 = 0;\n                this.pos3 = 0;\n                this.pos4 = 0;\n                this.$('.collapsed-movable').mousedown((e) => {\n                    e = e || window.event;\n                    e.preventDefault();\n                    // get the mouse cursor position at startup:\n                    this.pos3 = e.clientX;\n                    this.pos4 = e.clientY;\n                    let didDrag = false;\n                    document.onmouseup = (e) => {\n                        document.onmouseup = null;\n                        document.onmousemove = null;\n                        if (!didDrag)\n                            this.collapse();\n                    };\n                    // call a function whenever the cursor moves:\n                    document.onmousemove = (e) => {\n                        e = e || window.event;\n                        e.preventDefault();\n                        // calculate the new cursor position:\n                        this.pos1 = this.pos3 - e.clientX;\n                        this.pos2 = this.pos4 - e.clientY;\n                        this.pos3 = e.clientX;\n                        this.pos4 = e.clientY;\n                        // set the element's new position:\n                        this.$el.css('top', (this.$el.offset().top - this.pos2) + \"px\");\n                        this.$el.css('left', (this.$el.offset().left - this.pos1) + \"px\");\n                        this.$el.css('transform', \"none\");\n                        this.$el.css('right', \"unset\");\n                        didDrag = true;\n                    };\n                });\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n\n    },\n\n    setFullScreen: function () {\n        if (document.fullscreenElement) {\n            document.exitFullscreen();\n        } else if(this.$el.length) {\n            this.$el[0].requestFullscreen();\n        }\n    },\n\n    cancelFullScreen: function () {\n        if (document.exitFullscreen) {\n            let full_screen_el = document.fullscreenElement;\n            full_screen_el && document.exitFullscreen().then(() => {\n                document.fullscreenElement && this.cancelFullScreen();\n            });\n        } else if (document.mozCancelFullScreen) { /* Firefox */\n            let full_screen_el = document.mozFullScreenElement;\n            full_screen_el && document.mozCancelFullScreen();\n            document.mozFullScreenElement && this.cancelFullScreen();\n        } else if (document.webkitExitFullscreen) { /* Chrome, Safari and Opera */\n            let full_screen_el = document.webkitCurrentFullScreenElement;\n            full_screen_el && document.webkitExitFullscreen();\n            document.webkitCurrentFullScreenElement && this.cancelFullScreen();\n        } else if (document.msExitFullscreen) { /* IE/Edge */\n            let full_screen_el = document.msFullscreenElement;\n            full_screen_el && document.msExitFullscreen();\n            document.msFullscreenElement && this.cancelFullScreen();\n        }\n    },\n\n    windowResized: function () {\n        this.$el.hasClass('collapsed') && this.$el.css('right', parseInt(xabber.main_panel.$el.css('margin-right')) + 8 + 'px');\n    },\n\n    updateButtons: function () {\n        this.$('.btn-video .video').switchClass('hidden', !this.model.get('video'));\n        this.$('.btn-share-screen').switchClass('active', this.model.get('video_screen'));\n        this.$('.btn-full-screen').switchClass('hidden', !this.model.get('video_in'));\n        this.$('.btn-video').switchClass('mdi-video active', this.model.get('video_live'))\n            .switchClass('mdi-video-off', !this.model.get('video_live'));\n        this.$('.btn-volume').switchClass('mdi-volume-high active', this.model.get('volume_on'))\n            .switchClass('mdi-volume-off', !this.model.get('volume_on'));\n        this.$('.btn-microphone').switchClass('active mdi-microphone', this.model.get('audio'))\n            .switchClass('mdi-microphone-off', !this.model.get('audio'));\n    },\n\n    updateAvatar: function () {\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateBackground: function () {\n        let status = this.model.get('status');\n        this.$el.attr('data-state', status);\n    },\n\n    updateCallingStatus: function (status) {\n        this.$('.buttons-wrap').switchClass('incoming', (status === 'in'));\n    },\n\n    updateStatusText: function (status) {\n        this.$('.calling-status').text(status || \"\");\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.contact.get('name'));\n    },\n\n    updateAccountJid: function () {\n        this.$('.modal-footer .contact-info .jid').text(this.contact.get('jid'));\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    shareScreen: function () {\n        this.model.set('video_screen', !this.model.get('video_screen'));\n    },\n\n    isFullScreen: function () {\n        if (document.fullscreenElement)\n            return true;\n        else if (document.webkitFullscreenElement)\n            return true;\n        else if (document.mozFullScreenElement)\n            return true;\n        else return false;\n    },\n\n    accept: function () {\n        this.model.accept();\n        this.updateCallingStatus(constants.JINGLE_MSG_ACCEPT);\n        this.model.initSession();\n    },\n\n    clickOnWindow: function (ev) {\n        if ($(ev.target).closest('.collapsed-movable').length)\n            return;\n        if ($(ev.target).closest('.video-wrap').length && this.$el.hasClass('collapsed') && this.$el.hasClass('collapsed-video'))\n            this.collapse();\n    },\n\n    collapse: function (ev) {\n        ev && ev.stopPropagation();\n        if (this.isFullScreen()) {\n            this.cancelFullScreen();\n            return;\n        }\n        let $overlay = this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId'));\n        $overlay.toggle();\n        this.$el.toggleClass('collapsed');\n        if (this.$el.hasClass('collapsed')) {\n            this.$el.switchClass('collapsed-video', (this.model.get('video') || this.model.get('video_in')));\n            this.$el.switchClass('multiple-videos', this.model.get('video') && this.model.get('video_in'));\n        }\n        else {\n            this.$el.css('right', \"\");\n            this.$el.css('left', \"\");\n            this.$el.css('width', \"\");\n            this.$el.css('height', \"\");\n            this.$el.removeClass('collapsed-video');\n        }\n        this.windowResized();\n    },\n\n    updateCollapsedWindow: function () {\n        this.updateButtons();\n        if (this.$el.hasClass('collapsed')) {\n            this.$el.switchClass('collapsed-video', (this.model.get('video') || this.model.get('video_in')));\n            this.$el.switchClass('multiple-videos', this.model.get('video') && this.model.get('video_in'));\n        }\n    },\n\n    toggleMicrophone: function () {\n        this.model.set('audio', !this.model.get('audio'));\n    },\n\n    onDestroy: function (status) {\n        let status_text;\n        if (this.model.get('status') == 'device_busy')\n            status_text = 'dialog_jingle_message__status_device_busy';\n        else if (this.model.get('status') == 'busy')\n            status_text = 'dialog_jingle_message__status_busy';\n        else if (this.model.get('status') == 'accepted_another_device')\n            status_text = 'dialog_jingle_message__status_another_device_accepted';\n        else\n            status_text = 'dialog_jingle_message__status_disconnected';\n        this.updateStatusText(xabber.getString(status_text));\n        setTimeout(() => {\n            this.close();\n            this.$el.detach();\n        }, 3000);\n    },\n\n    videoCall: function () {\n        this.model.set('video_live', !this.model.get('video_live'));\n    },\n\n    toggleVolume: function (ev) {\n        let $target = $(ev.target);\n        $target.switchClass(this.model.set('volume_on', !this.model.get('volume_on')));\n    },\n\n    cancel: function () {\n        this.model.reject();\n        this.close();\n    }\n});\n\nxabber.PlyrPlayerPopupView = xabber.BasicView.extend({\n    className: 'modal main-modal player-overlay plyr-player-popup-view',\n    template: templates.plyr_player_popup,\n\n    events: {\n        \"click .mdi-close\": \"closePopup\",\n        \"click .mdi-minimize-float\": \"floatPopup\",\n        \"click .mdi-minimize-full\": \"fullPopup\",\n        \"click .mdi-plyr-hide\": \"hidePopup\",\n        \"click .btn-next-plyr\": \"nextPlyr\",\n        \"click .btn-previous-plyr\": \"previousPlyr\",\n        \"click .mdi-open-message\": \"openMessage\",\n        \"click .mdi-toggle-play\": \"togglePlay\",\n        \"click .mdi-toggle-mute\": \"toggleMute\",\n    },\n\n    _initialize: function (options) {\n        this.data.set('visibility_state', 0);\n        this.data.on('change:visibility_state', this.onVisibilityChange, this);\n        xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n    },\n\n    render: function (options) {\n        options = options || {};\n        this.$el.openModal({\n            dismissible: false,\n            ready: () => {\n                if (!this.player){\n                    this.player = new Plyr('.plyr-player-popup', {\n                        controls: [\n                            'play-large', 'play', 'progress', 'duration', 'mute', 'volume', 'settings', 'download', 'fullscreen',\n                        ],\n                        youtube: {controls: 0, disablekb: 1, iv_load_policy: 3, modestbranding: 1, rel: 0, showinfo: 0}\n                    });\n                    this.player.on('play',(event) => {\n                        let other_players = xabber.plyr_players.filter(other => other != this.player);\n                        other_players.forEach(function(other) {\n                            if (other.$audio_elem){\n                                if (other.$audio_elem.voice_message)\n                                    other.$audio_elem.voice_message.stopTime();\n                            }\n                        })\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('pause',(event) => {\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('timeupdate',(event) => {\n                        xabber.trigger('plyr_player_time_updated');\n                    });\n                    this.player.on('volumechange',(event) => {\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('statechange',(event) => {\n                        if (event.detail.code === 3) {\n                            this.$('.plyr-player-popup-draggable').removeClass('hidden');\n                            this.$('.plyr-player-popup-draggable').css({\n                                width: '',\n                                height: '',\n                            });\n                        }\n                        xabber.trigger('plyr_player_updated');\n                    });\n                }\n                this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId')).mousedown(() => {this.minimizePopup()});\n                this.showNewVideo(options);\n                this.onVisibilityChange();\n                this.updatePlyrControls();\n                this.pos1 = 0;\n                this.pos2 = 0;\n                this.pos3 = 0;\n                this.pos4 = 0;\n                this.$('.plyr-player-min-controls-tab').mousedown((e) => {\n                    e = e || window.event;\n                    if ($(e.target).closest('.plyr__control--overlaid').length || $(e.target).closest('.plyr__controls').length || $(e.target).closest('.mdi-close').length || $(e.target).closest('.plyr-player-min-controls-buttons').length)\n                        return;\n                    e.preventDefault();\n                    // get the mouse cursor position at startup:\n                    this.pos3 = e.clientX;\n                    this.pos4 = e.clientY;\n                    let didDrag = false;\n                    document.onmouseup = (e) => {\n                        document.onmouseup = null;\n                        document.onmousemove = null;\n                        if (!didDrag && !$(e.target).closest('.plyr__control--overlaid').length)\n                            this.$('.plyr__video-wrapper').click();\n                    };\n                    // call a function whenever the cursor moves:\n                    document.onmousemove = (e) => {\n                        e = e || window.event;\n                        didDrag = true;\n                        e.preventDefault();\n                        if (this.$el.hasClass('player-overlay'))\n                            return;\n                        // calculate the new cursor position:\n                        this.pos1 = this.pos3 - e.clientX;\n                        this.pos2 = this.pos4 - e.clientY;\n                        this.pos3 = e.clientX;\n                        this.pos4 = e.clientY;\n\n                        let xPercent = (((this.$el.offset().left - this.pos1)/window.innerWidth) * 100),\n                            yPercent = (((this.$el.offset().top - this.pos2)/window.innerHeight) * 100);\n\n\n                        // set the element's new position:\n                        this.$el.css('left', xPercent + '%');\n                        this.$el.css('top', yPercent + '%');\n                        this.$el.css('transform', \"none\");\n                        this.$el.css('right', \"unset\");\n                    };\n                });\n            },\n        });\n\n    },\n\n    showNewVideo: function (options) {\n        options = options || {};\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            if (options.player.provider === 'youtube'){\n                this.$('.plyr-player-popup-draggable').addClass('hidden');\n                this.$('.plyr-player-popup-draggable').css({\n                    width: 400,\n                    height: 200,\n                });\n            }\n            this.account = options.player.chat_item.account;\n            this.updateColorScheme();\n            this.player.chat_item = options.player.chat_item;\n            this.player.player_item = options.player;\n            this.player.message_unique_id = options.player.message_unique_id;\n            let video_sources = {\n                src: options.player.video_src,\n                provider: options.player.provider,\n            };\n            options.player.type && (video_sources.type = options.player.type);\n            this.player.source = {\n                type: 'video',\n                sources: [\n                    video_sources,\n                ],\n            }\n            xabber.current_plyr_player = this.player;\n            this.player.once('ready',(event) => {\n                let $minimize_element_float = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-minimize mdi-minimize-float mdi-svg-template\" data-svgname=\"player-float\"></svg>')\n                $minimize_element_float.append(env.templates.svg['player-float']())\n                $minimize_element_float.insertBefore(this.$('.plyr__controls__item[data-plyr=\"fullscreen\"]'));\n                let $minimize_element_full = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-minimize mdi-minimize-full mdi-svg-template\" data-svgname=\"player-full\"></svg>')\n                $minimize_element_full.append(env.templates.svg['player-full']())\n                $minimize_element_full.insertBefore(this.$('.plyr__controls__item[data-plyr=\"fullscreen\"]'));\n                let $show_message_element_full = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-open-message mdi-svg-template\" data-svgname=\"message-bookmark-outline\"></svg>')\n                $show_message_element_full.append(env.templates.svg['message-bookmark-outline']())\n                $show_message_element_full.insertAfter(this.$('.plyr__controls__item[data-plyr=\"download\"]'));\n                let $previous_element = $('<div class=\"btn-previous-plyr\"><i class=\"mdi mdi-skip-previous mdi-24px\"></i></div>')\n                $previous_element.insertBefore(this.$('.plyr__controls__item[data-plyr=\"play\"]'));\n                let $next_element = $('<div class=\"btn-next-plyr\"><i class=\"mdi mdi-skip-next mdi-24px\"></i></div>')\n                $next_element.insertAfter(this.$('.plyr__controls__item[data-plyr=\"play\"]'));\n                this.player.play();\n                xabber.trigger('plyr_player_updated');\n            });\n        });\n\n        if (options.player && options.player.video_file && options.player.video_file.key) {\n            options.player.key = options.player.video_file.key;\n            options.player.video_file.type && (options.player.type = options.player.video_file.type);\n        }\n\n        if (options.player && options.player.key && options.player.chat_item.model && options.player.video_src && !options.player.video_decrypted){\n            options.player.chat_item.model.messages.decryptFile(options.player.video_src, options.player.key).then((result) => {\n                options.player.video_src = result;\n                options.player.video_decrypted = true;\n                dfd.resolve();\n            });\n        } else\n            dfd.resolve();\n    },\n\n    closePopup: function () {\n        this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId')).detach();\n        this.$el.detach();\n        xabber.current_plyr_player = null;\n        xabber.plyr_player_popup = null;\n        xabber.trigger('plyr_player_updated');\n    },\n\n    minimizePopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        let visibility_state = this.data.get('visibility_state');\n        visibility_state = visibility_state + 1;\n        (visibility_state > 2) && (visibility_state = 0);\n        this.data.set('visibility_state', visibility_state);\n    },\n\n    hidePopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 2);\n    },\n\n    floatPopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 1);\n    },\n\n    fullPopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 0);\n    },\n\n    onVisibilityChange: function () {\n        let visibility_state = this.data.get('visibility_state'),\n            $overlay = this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId'));\n        $overlay.switchClass('hidden', visibility_state != 0);\n        this.$el.switchClass('player-overlay', visibility_state === 0);\n        this.$el.switchClass('hidden', visibility_state === 2);\n    },\n\n    nextPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n            let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n            if (!next_item.$audio_elem.voice_message){\n                let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                next_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n        }\n    },\n\n    previousPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n            let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n            if (!prev_item.$audio_elem.voice_message){\n                let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                prev_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n        }\n    },\n\n    updatePlyrControls: function () {\n        if (xabber.current_plyr_player) {\n            let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n            this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n            this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n            this.$('.mdi-plyr-play').switchClass('hidden', xabber.current_plyr_player.playing);\n            this.$('.mdi-plyr-pause').switchClass('hidden', !xabber.current_plyr_player.playing);\n            this.$('.mdi-mute-plyr').switchClass('hidden', !xabber.current_plyr_player.muted);\n            this.$('.mdi-unmute-plyr').switchClass('hidden', xabber.current_plyr_player.muted);\n        }\n    },\n\n    openMessage: function () {\n        if (!(this.player && this.player.chat_item && this.player.message_unique_id))\n            return;\n        this.floatPopup();\n        let chat = this.player.chat_item.model;\n        xabber.chats_view.openChat(chat.item_view, {right_contact_save: true, clear_search: false});\n        xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'message_context', model: chat });\n        if (xabber.right_contact_panel_saveable && xabber.body.screen.get('right_contact') && xabber.body.screen.get('right') === 'message_context') {\n            if (xabber.right_contact_panel_saveable)\n                chat.contact.showDetailsRight('all-chats', {right_saved: true});\n            else\n                chat.contact.showDetailsRight('all-chats', {right_saved: false});\n        }\n        chat.getMessageContext(this.player.message_unique_id, {message: true});\n    },\n\n    togglePlay: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        if (xabber.current_plyr_player.$audio_elem){\n            if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n            } else {\n                xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n            }\n        } else\n            xabber.current_plyr_player.togglePlay();\n    },\n\n    toggleMute: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        xabber.current_plyr_player.muted = !xabber.current_plyr_player.muted;\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n        this.account.settings.once(\"change:color\", this.updateColorScheme, this);\n    },\n});\n\nxabber.SettingsModalView = xabber.BasicView.extend({\n    className: 'settings-panel-wrap',\n    template: templates.settings_modal,\n    ps_selector: '.settings-panel',\n\n    events: {\n        \"click .background-overlay\": \"closeSettings\",\n        \"click .btn-back\": \"backToMenu\",\n        \"click .btn-back-subsettings\": \"backToSubMenu\",\n        \"click .settings-tabs-wrap.global-settings-tabs .settings-tab:not(.delete-all-accounts)\": \"jumpToBlock\",\n        \"click .desktop-notifications-clue-wrap b\": \"goToWebNotifications\",\n        \"click .btn-add-account\": \"showAddAccountView\",\n        \"click .setting.idling label\": \"setIdling\",\n        \"change #idle_timeout\": \"setIdlingTimeout\",\n        \"click .setting.notifications label\": \"setNotifications\",\n        // \"click .setting.volume-enable label\": \"setNotificationsVolumeEnabled\",\n        \"click .private-notifications label\": \"setPrivateNotifications\",\n        \"click .group-notifications label\": \"setGroupNotifications\",\n        \"click .notifications-lever label\": \"setNotifications\",\n        \"click .jingle-calls label\": \"setJingleCalls\",\n        \"click .setting.message-preview.private-preview label\": \"setPrivateMessagePreview\",\n        \"click .setting.message-preview.group-preview label\": \"setGroupMessagePreview\",\n        \"click .call-attention label\": \"setCallAttention\",\n        \"click .setting.load-media label\": \"setLoadMedia\",\n        \"click .setting.typing-notifications label\": \"setTypingNotifications\",\n        \"click .setting.mapping-service label\": \"setMappingService\",\n        \"change .sound input[type=radio][name=private_sound]\": \"setPrivateSound\",\n        \"change .sound input[type=radio][name=group_sound]\": \"setGroupSound\",\n        \"change .sound input[type=radio][name=call_sound]\": \"setCallSound\",\n        \"change .sound input[type=radio][name=dialtone_sound]\": \"setDialtoneSound\",\n        \"change .sound input[type=radio][name=attention_sound]\": \"setAttentionSound\",\n        \"change .languages-list input[type=radio][name=language]\": \"changeLanguage\",\n        \"change .emoji-fonts-list input[type=radio][name=emoji_font]\": \"changeEmojiFont\",\n        \"click .emoji-font-external-url-button\": \"loadExternalEmojiFont\",\n        \"change #vignetting\": \"changeVignetting\",\n        \"change #blur\": \"changeBlur\",\n        \"change #notifications_volume\": \"changeNotificationsVolume\",\n        \"change #blur_switch\": \"switchBlur\",\n        \"change #vignetting_switch\": \"switchVignetting\",\n        \"click .selected-color-wrap\": \"openColorPicker\",\n        \"click .client-main-color-item\": \"chooseMainColor\",\n        \"change .background input[type=radio][name=background]\": \"setBackground\",\n        \"click .current-background-wrap\": \"changeBackgroundImage\",\n        \"change .hotkeys input[type=radio][name=hotkeys]\": \"setHotkeys\",\n        \"change .avatar-shape input[type=radio][name=avatar_shape]\": \"setAvatarShape\",\n        \"click .settings-tab.delete-all-accounts\": \"deleteAllAccounts\"\n    },\n\n    _initialize: function (options) {\n        this.$('.xabber-info-wrap .version').text(xabber.get('version_number'));\n        xabber.on('update_main_color', this.updateMainColor, this);\n        this.model.on('change:language', this.updateLanguage, this);\n        this.model.on('change:emoji_font', this.updateEmojiFontLabel, this);\n        this.model.on('change:avatar_shape', this.updateAvatarLabel, this);\n        this.model.on('change:notifications_private', this.updateSoundsLabel, this);\n        this.model.on('change:notifications_group', this.updateSoundsLabel, this);\n        this.model.on('change:call_attention', this.updateSoundsLabel, this);\n        this.model.on('change:private_sound', this.updateSoundsLabel, this);\n        this.model.on('change:group_sound', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_private_message', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_group_message', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_call', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_dialtone', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_attention', this.updateSoundsLabel, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        $(document).on(\"keyup\", (ev) => {\n            if (ev.keyCode === constants.KEY_ESCAPE && this.data.get('visible')) {\n                this.closeSettings();\n            }\n        });\n        xabber.once('accounts_ready',() => {\n            xabber.accounts.on(\"list_changed add change:enabled destroy\", this.updateAccounts, this);\n        })\n    },\n\n    render: function (options) {\n        let settings = this.model.attributes,\n            lang = settings.language,\n            emoji_font = settings.emoji_font;\n        this.updateSounds();\n        this.updateLanguages();\n        this.updateEmojiFonts();\n        this.$('.notifications input[type=checkbox]').prop({\n            checked: settings.notifications && xabber._cache.get('notifications')\n        });\n        this.$('.notifications-lever input[type=checkbox]').prop({\n            checked: settings.notifications && xabber._cache.get('notifications')\n        });\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !settings.notifications_group)\n        this.$('.private-notifications input[type=checkbox]')\n            .prop({checked: settings.notifications_private});\n        this.$('.sound input[type=radio][name=private_sound]').prop('disabled', !settings.notifications_private)\n        this.$('.sound input[type=radio][name=call_sound]').prop('disabled', !settings.jingle_calls);\n        this.$('.sound input[type=radio][name=dialtone_sound]').prop('disabled', !settings.jingle_calls);\n        this.$('.group-notifications input[type=checkbox]')\n            .prop({checked: settings.notifications_group});\n        this.$('.jingle-calls input[type=checkbox]')\n            .prop({checked: settings.jingle_calls});\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !settings.notifications_group)\n        this.$('.sound input[type=radio][name=attention_sound]').prop('disabled', !settings.call_attention)\n        this.$('.message-preview.private-preview input[type=checkbox]')\n            .prop({checked: settings.message_preview_private}).prop('disabled', !(settings.notifications && xabber._cache.get('notifications') && settings.notifications_private));\n        this.$('.message-preview.group-preview input[type=checkbox]')\n            .prop({checked: settings.message_preview_group}).prop('disabled', !(settings.notifications && xabber._cache.get('notifications') && settings.notifications_group));\n        this.$('.desktop-notifications-clue-wrap').hideIf(settings.notifications);\n        this.$('.notifications-dependant').switchClass('notifications-dependant-two-line', !settings.notifications);\n        this.$('.call-attention input[type=checkbox]')\n            .prop({checked: settings.call_attention});\n        this.$('.load-media input[type=checkbox]')\n            .prop({checked: settings.load_media});\n        this.$('.typing-notifications input[type=checkbox]')\n            .prop({checked: settings.typing_notifications});\n        this.$('.idling input[type=checkbox]')\n            .prop({checked: settings.idling});\n        this.$('#idle_timeout')\n            .val(settings.idling_time).prop('disabled', !settings.idling);\n        // this.$(`#notifications_volume_enable`)\n        //     .prop('checked', settings.notifications_volume_enabled);\n        this.$('.mapping-service input[type=checkbox]')\n            .prop({checked: settings.mapping_service});\n        let sound_private_value = settings.private_sound ? settings.sound_on_private_message : '';\n        this.$(`.sound input[type=radio][name=private_sound][value=\"${sound_private_value}\"]`)\n                .prop('checked', true);\n        let sound_group_value = settings.group_sound ? settings.sound_on_group_message : '';\n        this.$(`.sound input[type=radio][name=group_sound][value=\"${sound_group_value}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=call_sound][value=\"${settings.sound_on_call}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=dialtone_sound][value=\"${settings.sound_on_dialtone}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=attention_sound][value=\"${settings.sound_on_attention}\"]`)\n                .prop('checked', true);\n        this.$(`.hotkeys input[type=radio][name=hotkeys][value=${settings.hotkeys}]`)\n                .prop('checked', true);\n        this.$(`.avatar-shape input[type=radio][name=avatar_shape][value=${settings.avatar_shape}]`)\n                .prop('checked', true);\n        (lang == xabber.get(\"default_language\")) && (lang = 'default');\n        this.$(`.languages-list input[type=radio][name=language][value=\"${lang}\"]`)\n            .prop('checked', true);\n        this.$(`.emoji-fonts-list input[type=radio][name=emoji_font][value=\"${emoji_font}\"]`)\n            .prop('checked', true);\n        this.$(`.client-main-color-item`).removeClass('chosen-client-color');\n        this.$(`.client-main-color-item[data-value=\"${settings.main_color}\"]`).addClass('chosen-client-color');\n        let notifications_volume = !isNaN(settings.notifications_volume) ? settings.notifications_volume * 100 : 100;\n        this.$(`#notifications_volume`).val(notifications_volume);\n        // this.$('.volume-setting .disabled').switchClass('hidden', settings.notifications_volume_enabled);\n        // this.$('#notifications_volume').prop('disabled', !settings.notifications_volume_enabled);\n        this.$('.settings-panel-head span').text(this.$('.settings-block-wrap:not(.hidden)').attr('data-header'))\n        this.updateAvatarLabel();\n        this.updateSoundsLabel();\n        this.updateDescription();\n        this.updateBackgroundSetting();\n        this.updateColor();\n        this.updateMainColor();\n        this.updateLanguage();\n        this.updateEmojiFontLabel();\n        this.$('.toolbar-main-color-setting-wrap .dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            belowOrigin: true,\n            hover: false\n        });\n        this.$('.left-column').removeClass('hidden');\n        this.$('.left-column .settings-tabs-wrap.global-settings-tabs').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.$('.btn-back').removeClass('hidden');\n        this.$('.btn-back-subsettings').addClass('hidden');\n        this.$('.settings-panel-head .description').addClass('hidden');\n        this.$('.desktop-notifications-clue-wrap b').addClass('client-text-color-500');\n        this.updateAccounts(options);\n        this.updateHeight();\n        this.updateSliders();\n        if (options && options.block_name) {\n            let $elem = this.$(`.settings-tab[data-block-name=\"${options.block_name}\"]`);\n            if ($elem.length)\n                this.jumpToBlock({target: $elem[0]});\n        }\n        return this;\n    },\n\n    updateAccounts: function (options) {\n        if (this.settings_single_account_modal){\n            this.settings_single_account_modal.removeChild('blocklist');\n            this.removeChild('single_account');\n        }\n        if (xabber.accounts.length === 1 && xabber.accounts.enabled.length){\n            this.$('.accounts-info-wrap').addClass('hidden');\n            this.$('.btn-add-account').addClass('hidden');\n            this.$('.single-account-info-wrap').removeClass('hidden');\n            let first_account = xabber.accounts.models[0];\n            this.single_account_has_rendered = false;\n            this.settings_single_account_modal = this.addChild('single_account', xabber.AccountSettingsSingleModalView, {\n                model: first_account,\n                forced_ps_container: this.ps_container,\n                single_account_modal: true,\n                el: this.$('.single-account-info-wrap .single-account-info')[0]\n            });\n            if (!this.single_account_has_rendered){\n                this.settings_single_account_modal.show(null, options);\n            }\n            first_account.trigger('render_single_settings', this.settings_single_account_modal);\n            this.settings_single_account_modal.addChild('blocklist', xabber.BlockListView, {\n                account: first_account,\n                el: this.settings_single_account_modal.$('.block-list-view-wrap')[0]\n            });\n        } else {\n            this.$('.btn-add-account').removeClass('hidden');\n            this.$('.accounts-info-wrap').removeClass('hidden');\n            this.$('.single-account-info-wrap').addClass('hidden');\n        }\n        this.updateHeight();\n    },\n\n    updateMainColor: function () {\n        this.$('.toolbar-main-color-setting').attr('data-color', this.model.get('main_color'));\n    },\n\n    updateBackgroundSetting: function () {\n        this.$(`.background input[type=radio][name=background][value=${this.model.get('background').type}]`)\n            .prop('checked', true);\n        if (this.model.get('background').image) {\n            this.$('.current-background').css('background-image', `url(${utils.images.getCachedBackground(this.model.get('background').image)})`);\n        }\n        this.$('.current-background-wrap').switchClass('hidden', !this.model.get('background').image);\n        let appearance = this.model.get('appearance'),\n            blur_switched = appearance.blur !== false,\n            vignetting_switched = appearance.vignetting !== false;\n        this.$('#blur_switch')[0].checked = blur_switched;\n        this.$('.blur-setting .disabled').switchClass('hidden', blur_switched);\n        if (blur_switched)\n            this.$('#blur')[0].value = appearance.blur;\n        this.$('#vignetting_switch')[0].checked = vignetting_switched;\n        this.$('.vignetting-setting .disabled').switchClass('hidden', vignetting_switched);\n        if (vignetting_switched)\n            this.$('#vignetting')[0].value = appearance.vignetting;\n        this.updateScrollBar();\n    },\n\n    updateColor: function () {\n        let color = this.model.get('appearance').color || '#E0E0E0';\n        this.$('.selected-color-item').css('background-color', color);\n        this.$('.selected-color-hex').text(color);\n        let material_color = xabber.ColorPicker.prototype.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == color.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == color.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n        xabber.toolbar_view.updateColor(color);\n    },\n\n    jumpToBlock: function (ev) {\n        if ($(ev.target).closest('.switch').length)\n            return;\n        let $tab = $(ev.target).closest('.settings-tab'),\n            $elem = this.$('.settings-block-wrap.' + $tab.attr('data-block-name'));\n        if ($tab.hasClass('link-button')) {\n            $tab.parent().siblings().removeClass('active');\n            this.scrollTo(0);\n            return;\n        }\n        this.$('.settings-block-wrap').addClass('hidden');\n        this.$('.left-column').addClass('hidden');\n        this.$('.right-column').removeClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span').text($elem.attr('data-header'))\n        $tab.addClass('active').siblings().removeClass('active');\n        if ($tab.closest('.right-column') && $tab.attr('data-subblock-parent-name')) {\n            this.$('.btn-back').addClass('hidden');\n            this.$('.btn-back-subsettings').removeClass('hidden');\n            this.$('.btn-back-subsettings').attr('data-subblock-parent-name', $tab.attr('data-subblock-parent-name'));\n        }\n        if ($tab.attr('data-block-name') === 'interface_language')\n            this.$('.settings-panel-head .description').removeClass('hidden');\n        else\n            this.$('.settings-panel-head .description').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    updateHeight: function () {\n        let height;\n        if (!this.$('.left-column.main-left-column').hasClass('hidden'))\n            height = this.$('.left-column.main-left-column').height();\n        if (!this.$('.right-column.main-right-column').hasClass('hidden'))\n            height = this.$('.right-column.main-right-column').height();\n        this.ps_container.css('height', height + 'px');\n        setTimeout(() => {\n            this.updateScrollBar();\n        }, 500)\n    },\n\n    updateSliders: function () {\n        this.$('.range-field.range-field-design').each((idx, item) => {\n            let $input = $(item).find('input'),\n                range_min = $input.attr('min'),\n                range_max = $input.attr('max'),\n                range_value = $input.val(),\n                left =  ((182 / (range_max - range_min)) * (range_value - range_min)) + 10;\n            $(item).find('span.thumb').css('left', left + 'px');\n            if ($input.hasClass('materialize-timer'))\n                $(item).find('span.value').text(range_value + 's');\n            else\n                $(item).find('span.value').text(range_value);\n        })\n\n    },\n\n    updateSounds: function () {\n\n        this.$('.notification-field').html('<form action=\"#\"></form>');\n\n        sounds.notifications.forEach((item,idx) => {\n            if (!item.not_selectable){\n                let element = $(templates.setting_radio_input({\n                    input_name: 'private_sound',\n                    input_id: `${this.cid}-private-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.notification-field:not(.group-notification-field)').append(element);\n                let group_element = $(templates.setting_radio_input({\n                    input_name: 'group_sound',\n                    input_id: `${this.cid}-group-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.group-notification-field').append(group_element);\n            }\n        });\n\n        let element_no_sound = $(templates.setting_radio_input({\n            input_name: 'private_sound',\n            input_id: `${this.cid}-private-sound-no`,\n            label: 'No sound',\n            value: '',\n        }));\n        this.$('.notification-field:not(.group-notification-field)').prepend(element_no_sound);\n\n        let group_element_no_sound = $(templates.setting_radio_input({\n            input_name: 'group_sound',\n            input_id: `${this.cid}-group-sound-no`,\n            label: 'No sound',\n            value: '',\n        }));\n        this.$('.group-notification-field').prepend(group_element_no_sound);\n\n        this.$('.dialtone-field').html('<form action=\"#\"></form>');\n        sounds.dialtones.forEach((item,idx) => {\n            if (!item.not_selectable){\n                let element = $(templates.setting_radio_input({\n                    input_name: 'dialtone_sound',\n                    input_id: `${this.cid}-dialtone-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.dialtone-field').append(element);\n            }\n        });\n\n        this.$('.ringtone-field').html('<form action=\"#\"></form>');\n        sounds.ringtones.forEach((item,idx) => {\n            if (!item.not_selectable){\n                let element = $(templates.setting_radio_input({\n                    input_name: 'call_sound',\n                    input_id: `${this.cid}-call-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.ringtone-field').append(element);\n            }\n        });\n\n        this.$('.attention-field').html('<form action=\"#\"></form>');\n        sounds.attention.forEach((item,idx) => {\n            if (!item.not_selectable){\n                let element = $(templates.setting_radio_input({\n                    input_name: 'attention_sound',\n                    input_id: `${this.cid}-attention-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.attention-field').append(element);\n            }\n        });\n\n    },\n\n    updateLanguages: function () {\n        this.$('.languages-list').html('<form action=\"#\"></form>');\n\n        let default_element = $(templates.setting_language_radio_input({\n            input_name: 'language',\n            input_id: `${this.cid}-default`,\n            label: xabber.getString(\"settings__languages_list___item_default\", [constants.languages[xabber.get(\"default_language\") || 'en']]),\n            value: 'default',\n            progress: {},\n        }));\n\n        this.$('.languages-list').append(default_element);\n\n        if (!window.navigator.language.includes('en')){\n            let second_lang = xabber.get(\"default_language\") === 'en' ? window.navigator.language : 'en',\n                second_prog, second_prog_text,\n                second_locale = Object.keys(client_translation_progress)\n                    .find(key => !second_lang.indexOf(key)) || constants.languages_another_locales[second_lang] && Object.keys(client_translation_progress)\n                    .find(key => !constants.languages_another_locales[second_lang].indexOf(key)); // < - check for locales that differ in names\n\n            if (second_locale) {\n                second_prog = client_translation_progress[second_locale];\n                second_prog_text = (second_prog == 100) ? xabber.getString(\"settings__section_interface_language__translation_progress_fully\")\n                    : xabber.getString(\"settings__section_interface_language__translation_progress\", [`${second_prog}%`]);\n\n                let second_element = $(templates.setting_language_radio_input({\n                    input_name: 'language',\n                    input_id: `${this.cid}-${second_lang}`,\n                    label: constants.languages[second_lang],\n                    value: second_lang,\n                    progress: {\n                        text: second_prog_text\n                    },\n                }));\n                this.$('.languages-list').append(second_element);\n            }\n        }\n\n\n        for (let lang in constants.languages) {\n            if (!lang || lang == xabber.get(\"default_language\") || lang == window.navigator.language)\n                continue;\n\n            let locale = Object.keys(client_translation_progress)\n                .find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress)\n                .find(key => !constants.languages_another_locales[lang].indexOf(key)); // < - check for locales that differ in names\n\n            if (locale) {\n                let progress = client_translation_progress[locale],\n                    progress_text = (progress == 100) ? xabber.getString(\"settings__section_interface_language__translation_progress_fully\")\n                        : xabber.getString(\"settings__section_interface_language__translation_progress\", [`${progress}%`]);\n\n                let element = $(templates.setting_language_radio_input({\n                    input_name: 'language',\n                    input_id: `${this.cid}-${lang}`,\n                    label: constants.languages[lang],\n                    value: lang,\n                    progress: {\n                        text: progress_text\n                    },\n                }));\n                this.$('.languages-list').append(element);\n            }\n        }\n    },\n\n    updateEmojiFonts: function () {\n        let emoji_fonts_list = constants.EMOJI_FONTS_LIST;\n\n        if (!Object.keys(emoji_fonts_list).length) {\n            this.$('.settings-tab[data-block-name=\"emoji_font\"').addClass('hidden');\n            return;\n        }\n        this.$('.settings-tab[data-block-name=\"emoji_font\"').removeClass('hidden');\n\n        this.$('.emoji-fonts-list').html('<form action=\"#\"></form>');\n\n        let system_element = $(templates.setting_emoji_font_radio_input({\n            input_name: 'emoji_font',\n            input_id: `${this.cid}-emoji-font-system`,\n            label: xabber.getString(\"settings__menu_item__emoji_font_system\"),\n            value: 'system',\n            hint: null,\n        }));\n\n        this.$('.emoji-fonts-list').append(system_element);\n        emoji_fonts_list = Object.values(emoji_fonts_list);\n\n        emoji_fonts_list.sort((a, b) => {\n            return a.order - b.order;\n        })\n\n        emoji_fonts_list.forEach((item) => {\n            let item_name = item.name,\n                element = $(templates.setting_emoji_font_radio_input({\n                    input_name: 'emoji_font',\n                    input_id: `${this.cid}-emoji-font-${item.value}`,\n                    label: item_name,\n                    value: item.value,\n                    hint: item.hint,\n                }));\n            this.$('.emoji-fonts-list').append(element);\n        });\n    },\n\n    onScrollY: function () {\n        if (this.getScrollTop() === 0)\n            this.$('.settings-panel-head').removeClass('lined-head')\n        else\n            this.$('.settings-panel-head').addClass('lined-head')\n    },\n\n    closeSettings: function (ev) {\n        this.current_sound && this.current_sound.pause();\n        if (xabber.body.screen && xabber.body.screen.get('previous_screen')){\n            let previous_screen = xabber.body.screen.get('previous_screen');\n            previous_screen.close_settings = true;\n            xabber.body.setScreen(previous_screen.name, previous_screen);\n            xabber.body.screen.attributes.close_settings = undefined;\n        } else\n            xabber.toolbar_view.showAllChats();\n    },\n\n    backToMenu: function (ev) {\n        this.current_sound && this.current_sound.pause();\n        this.$('.left-column').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.$('.settings-panel-head .description').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    backToSubMenu: function (ev) {\n        this.current_sound && this.current_sound.pause();\n        let $tab = $(ev.target).closest('.btn-back-subsettings'),\n            block_name = $tab.attr('data-subblock-parent-name'),\n            $elem = this.$('.settings-block-wrap.' + block_name),\n            elem_parent = $elem.attr('data-parent-block');\n        this.$('.settings-block-wrap').addClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span.settings-panel-head-title').text($elem.attr('data-header'));\n        if (elem_parent) {\n            $tab.attr('data-subblock-parent-name', elem_parent)\n        } else {\n            this.$('.btn-back').removeClass('hidden');\n            this.$('.btn-back-subsettings').addClass('hidden');\n        }\n        this.$('.settings-panel-head .description').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    goToWebNotifications: function (ev) {\n        this.$('.settings-tab[data-block-name=\"web-notifications\"]').click();\n    },\n\n    setIdling: function (ev) {\n        let value = !this.model.get('idling');\n        this.model.save('idling', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.idling').find('input').prop('checked', value);\n        this.$('#idle_timeout').prop('disabled', !value);\n    },\n\n    setIdlingTimeout: function (ev) {\n        let $target = $(ev.target),\n            value = $(ev.target).val();\n        value = parseInt(value);\n        if (_.isNaN(value)){\n            value = constants.IDLING_DEFAULT_TIMEOUT;\n        } else if (value < constants.IDLING_MINIMAL_TIMEOUT){\n            value = constants.IDLING_MINIMAL_TIMEOUT;\n        }\n        this.model.save('idling_time', value);\n        $target.val(value);\n        ev.preventDefault();\n    },\n\n    setNotificationsVolumeEnabled: function (ev) {\n        ev.preventDefault();\n        let value = !this.model.get('notifications_volume_enabled');\n        this.model.save('notifications_volume_enabled', value);\n        this.$('#notifications_volume_enable').prop('checked', value);\n        this.$('.volume-setting .disabled').switchClass('hidden', value);\n        this.$('#notifications_volume').prop('disabled', !value);\n    },\n\n    setNotifications: function (ev) {\n        let value = this.model.get('notifications');\n        ev.preventDefault();\n        if (value === null) {\n            utils.callback_popup_message(xabber.getString(\"notifications__toast_notifications_not_supported\"), 1500);\n        } else {\n            value = value && xabber._cache.get('notifications');\n            if (!xabber._cache.get('notifications')) {\n                window.Notification.requestPermission((permission) => {\n                    xabber._cache.save({'notifications': (permission === 'granted'), 'ignore_notifications_warning': true});\n                    xabber.notifications_placeholder && xabber.notifications_placeholder.close();\n                    value = (permission === 'granted');\n                    this.model.save('notifications', value ? value : this.model.get('notifications'));\n                    this.$('.setting.notifications input[type=checkbox]').prop('checked', value);\n                    this.$('.notifications-lever input[type=checkbox]').prop('checked', value);\n                    this.$('.message-preview.private-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_private')));\n                    this.$('.message-preview.group-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_group')));\n                    this.$('.desktop-notifications-clue-wrap').hideIf(value);\n                    this.$('.notifications-dependant').switchClass('notifications-dependant-two-line', !value);\n                });\n            } else {\n                value = !value;\n                this.model.save('notifications', value);\n                this.$('.setting.notifications input[type=checkbox]').prop('checked', value);\n                this.$('.notifications-lever input[type=checkbox]').prop('checked', value);\n                this.$('.message-preview.private-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_private')));\n                this.$('.message-preview.group-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_group')));\n                this.$('.desktop-notifications-clue-wrap').hideIf(value);\n                this.$('.notifications-dependant').switchClass('notifications-dependant-two-line', !value);\n            }\n        }\n    },\n\n    setPrivateNotifications: function (ev) {\n        let value = !this.model.get('notifications_private');\n        this.model.save('notifications_private', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=private_sound]').prop('disabled', !value)\n        this.$('.message-preview.private-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_private')));\n        $(ev.target).closest('.private-notifications').find('input').prop('checked', value);\n    },\n\n    setGroupNotifications: function (ev) {\n        let value = !this.model.get('notifications_group');\n        this.model.save('notifications_group', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !value)\n        this.$('.message-preview.group-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_group')));\n        $(ev.target).closest('.group-notifications').find('input').prop('checked', value);\n    },\n\n    setJingleCalls: function (ev) {\n        let value = !this.model.get('jingle_calls');\n        this.model.save('jingle_calls', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=call_sound]').prop('disabled', !value)\n        this.$('.sound input[type=radio][name=dialtone_sound]').prop('disabled', !value)\n        $(ev.target).closest('.jingle-calls').find('input').prop('checked', value);\n    },\n\n    setPrivateMessagePreview: function (ev) {\n        let value = !this.model.get('message_preview_private');\n        this.model.save('message_preview_private', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.message-preview').find('input').prop('checked', value);\n    },\n\n    setGroupMessagePreview: function (ev) {\n        let value = !this.model.get('message_preview_group');\n        this.model.save('message_preview_group', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.message-preview').find('input').prop('checked', value);\n    },\n\n    setCallAttention: function (ev) {\n        let value = !this.model.get('call_attention');\n        this.model.save('call_attention', value);\n        ev.preventDefault();\n        $(ev.target).closest('.call-attention').find('input').prop('checked', value);\n    },\n\n    setLoadMedia: function (ev) {\n        let value = !this.model.get('load_media');\n        this.model.save('load_media', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.load-media').find('input').prop('checked', value);\n    },\n\n    setTypingNotifications: function (ev) {\n        let value = !this.model.get('typing_notifications');\n        this.model.save('typing_notifications', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.typing-notifications').find('input').prop('checked', value);\n    },\n\n    setMappingService: function (ev) {\n        let value = !this.model.get('mapping_service');\n        this.model.save('mapping_service', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.mapping-service').find('input').prop('checked', value);\n    },\n\n    setPrivateSound: function (ev) {\n        let value = ev.target.value;\n        if (value) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false, !this.model.get('notifications_volume_enabled') ? 0 : this.model.get('notifications_volume'));\n            this.model.save({private_sound: true, sound_on_private_message: value});\n        } else {\n            this.model.save('private_sound', false);\n        }\n    },\n\n    setGroupSound: function (ev) {\n        let value = ev.target.value;\n        if (value) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false, !this.model.get('notifications_volume_enabled') ? 0 : this.model.get('notifications_volume'));\n            this.model.save({group_sound: true, sound_on_group_message: value});\n        } else {\n            this.model.save('group_sound', false);\n        }\n    },\n\n    setCallSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_call: value});\n    },\n\n    setDialtoneSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_dialtone: value});\n    },\n\n    setAttentionSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_attention: value});\n    },\n\n    setBackground: function (ev) {\n        let value = ev.target.value;\n        if (value == 'default') {\n            this.model.save('background', {type: 'default'});\n            xabber.body.updateBackground();\n            this.updateBackgroundSetting();\n        } else if (value == 'repeating-pattern' || value == 'image') {\n            let background_view = new xabber.SetBackgroundView();\n            background_view.render({type: value, model: this.model});\n        }\n    },\n\n    changeBackgroundImage: function () {\n        let type = this.model.get('background').type;\n        if (type == 'repeating-pattern' || type == 'image') {\n            let background_view = new xabber.SetBackgroundView();\n            background_view.render({type: type, model: this.model});\n        }\n    },\n\n    openColorPicker: function () {\n        if (!this.colorPicker)\n            this.colorPicker = new xabber.ColorPicker({model: this.model});\n        this.colorPicker.render();\n    },\n\n    chooseMainColor: function (ev) {\n        let color = $(ev.target).closest('.client-main-color-item').attr('data-value');\n        this.model.save('main_color', color);\n        this.$(`.client-main-color-item`).removeClass('chosen-client-color');\n        this.$(`.client-main-color-item[data-value=\"${color}\"]`).addClass('chosen-client-color');\n        xabber.trigger('update_main_color');\n    },\n\n    changeBlur: function () {\n        let value = this.$('#blur')[0].value,\n            appearance = this.model.get('appearance');\n        xabber.body.updateBlur(value);\n        this.model.save('appearance', _.extend(appearance, {blur: value}));\n    },\n\n    changeNotificationsVolume: function () {\n        let volume = this.$('#notifications_volume')[0].value / 100,\n            sound = this.$('.sound input[type=radio][name=private_sound]:checked').val() || this.$('.sound input[type=radio][name=group_sound]:checked').val();\n        this.model.save('notifications_volume', volume);\n        if (sound) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(sound, false, volume);\n        }\n    },\n\n    changeVignetting: function () {\n        let value = this.$('#vignetting')[0].value,\n            appearance = this.model.get('appearance');\n        xabber.body.updateBoxShadow(value);\n        this.model.save('appearance', _.extend(appearance, {vignetting: value}));\n    },\n\n    switchVignetting: function () {\n        let is_switched = this.$('#vignetting_switch:checked').length,\n            appearance = this.model.get('appearance'),\n            value = is_switched ? this.$('#vignetting')[0].value : false;\n        this.$('.vignetting-setting .disabled').switchClass('hidden', is_switched);\n        this.model.save('appearance', _.extend(appearance, {vignetting: value}));\n        xabber.body.updateBoxShadow(value);\n    },\n\n    switchBlur: function () {\n        let is_switched = this.$('#blur_switch:checked').length,\n            appearance = this.model.get('appearance'),\n            value = is_switched ? this.$('#blur')[0].value : false;\n        this.$('.blur-setting .disabled').switchClass('hidden', is_switched);\n        this.model.save('appearance', _.extend(appearance, {blur: value}));\n        xabber.body.updateBlur(value);\n    },\n\n    setHotkeys: function (ev) {\n        this.model.save('hotkeys', ev.target.value);\n    },\n\n    setAvatarShape: function (ev) {\n        this.model.save('avatar_shape', ev.target.value);\n        xabber.trigger('update_avatar_shape');\n    },\n\n    deleteAllAccounts: function (ev) {\n        utils.dialogs.ask(xabber.getString(\"button_quit\"), xabber.getString(\"settings__dialog_quit_client__confirm\", [constants.CLIENT_NAME]), null, { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            res && xabber.trigger('quit');\n        });\n    },\n\n    changeLanguage: function (ev) {\n        let value = ev.target.value,\n            locale = Object.keys(client_translation_progress).find(key => !value.indexOf(key)) || constants.languages_another_locales[value] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[value].indexOf(key)),\n            progress = client_translation_progress[locale],\n            platform_text;\n\n        (value == 'default') && (progress = 100);\n\n        if (progress == 100 && ((xabber.get(\"default_language\") === 'en' && value === 'default') || value === 'en')) {\n            platform_text = xabber.getString(\"settings__dialog_change_language__confirm\");\n        } else if (progress == 100) {\n            platform_text = xabber.getString(\"settings__interface_language__change_language_text_full_translation\",\n                [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" href='${constants.PROJECT_CROWDIN_URL}'>${xabber.getString(\"settings__section_interface_language__text_description__text_translations\")}</a>`, constants.SHORT_CLIENT_NAME, ])\n             + '\\n\\n' +xabber.getString(\"settings__dialog_change_language__confirm\");\n        } else if (progress == 0) {\n            platform_text = xabber.getString(\"settings__interface_language__change_language_text_no_translation\",\n                [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" href='${constants.PROJECT_CROWDIN_URL}'>${xabber.getString(\"settings__section_interface_language__text_description__text_translation\")}</a>`]);\n        } else {\n            platform_text = xabber.getString(\"settings__interface_language__change_language_text_partial_translation\",\n                [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" href='${constants.PROJECT_CROWDIN_URL}'>${xabber.getString(\"settings__section_interface_language__text_description__text_translation_team\")}</a>`, constants.SHORT_CLIENT_NAME])\n                + '\\n\\n' +xabber.getString(\"settings__dialog_change_language__confirm\");\n        }\n        let modal_classes = ['change-language-modal'], inverted_buttons;\n        if (progress == 0){\n            modal_classes.push('change-language-modal-no-ok');\n        } else if (progress != 0 && progress < 70){\n            inverted_buttons = true;\n        }\n        utils.dialogs.ask(xabber.getString(\"settings__dialog_change_language__header\"),\n            platform_text,\n            {modal_class: modal_classes, no_dialog_options: true, inverted_buttons: inverted_buttons},\n            { ok_button_text: xabber.getString(\"settings__dialog_change_language__button_change\")}).done((result) => {\n\n            if (result) {\n                this.model.save('language', value);\n                window.location.reload(true);\n            } else {\n                this.$(`.languages-list input[type=radio][name=language][value=\"${this.model.get('language')}\"]`)\n                    .prop('checked', true);\n            }\n        });\n    },\n\n    changeEmojiFont: function (ev) {\n        let value = ev.target.value,\n            emoji_font = constants.EMOJI_FONTS_LIST[value],\n            current_time;\n\n\n        if (!emoji_font && value !== 'system'){\n            $(ev.target).closest('.emoji-font-field').detach();\n            utils.dialogs.error(xabber.getString(\"settings__menu_item__emoji_font_chosen_does_not_exist\"));\n            this.$(`.emoji-fonts-list input[type=radio][name=emoji_font][value=\"${this.model.get('emoji_font')}\"]`)\n                .prop('checked', true);\n            return\n        }\n        this.load_emoji_external_dfd = new $.Deferred();\n        this.load_emoji_external_dfd.done(() => {\n\n            this.font_load_dfd = new $.Deferred();\n            this.currently_loaded_font_value = value;\n\n            this.font_load_dfd.done((response) => {\n                if (this.emoji_load_date !== current_time)\n                    return;\n                this.$('.emoji_font .preloader-wrap').addClass('hidden');\n                this.$('.emoji_font .emoji-font-download-text').addClass('hidden');\n                this.$('.emoji_font .emojis-preview').removeClass('hidden');\n                this.$('.emoji_font .emoji-font-external-url-text').addClass('hidden');\n                this.$('.emoji_font .emoji-font-external-url-button').addClass('hidden');\n                this.$(`.emoji-fonts-list input[type=radio][name=emoji_font]`)\n                    .prop('disabled', false);\n\n                this.font_load_dfd = null;\n                this.currently_loaded_font_value = null;\n                if (response && response.error){\n                    this.$('.emoji_font .emoji-font-attribution-text').addClass('hidden');\n                    this.$(`.emoji-fonts-list input[type=radio][name=emoji_font][value=\"${this.model.get('emoji_font')}\"]`)\n                        .prop('checked', true);\n                    $(ev.target).prop('disabled', true);\n                } else {\n                    this.model.save('emoji_font', value);\n                }\n            });\n\n            this.$('.emoji_font .emoji-font-external-url-text').addClass('hidden');\n            this.$('.emoji_font .emoji-font-external-url-button').addClass('hidden');\n            this.$('.emoji_font .preloader-wrap').removeClass('hidden');\n            this.$('.emoji_font .emoji-font-download-text').removeClass('hidden');\n            let emoji_url = value === 'system' ? value : emoji_font.url;\n            this.load_emoji_external_dfd = null;\n            this.$(`.emoji-fonts-list input[type=radio][name=emoji_font]`)\n                .prop('disabled', true);\n            this.emoji_load_date = Date.now();\n            current_time = this.emoji_load_date;\n            this.$('.settings-tab[data-block-name=\"emoji_font\"] .settings-block-label').text(xabber.getString(\"settings__menu_item__emoji_font_downloading_text\"));\n            xabber.loadEmojiFont(emoji_url, this.font_load_dfd);\n        });\n\n        this.$('.emoji_font .emojis-preview').addClass('hidden');\n        this.$('.emoji_font .emoji-font-attribution-text').addClass('hidden');\n\n        if (emoji_font && emoji_font.is_outside_url && value !== 'system'){\n            this.$('.emoji_font .emoji-font-external-url-text').removeClass('hidden');\n            this.$('.emoji_font .emoji-font-external-url-button').removeClass('hidden');\n        } else {\n            this.load_emoji_external_dfd.resolve();\n        }\n    },\n\n    loadExternalEmojiFont: function (ev) {\n        this.load_emoji_external_dfd && this.load_emoji_external_dfd.resolve();\n    },\n\n    updateEmojiFontLabel: function () {\n        if (!constants.EMOJI_FONTS_LIST[this.model.get('emoji_font')] && this.model.get('emoji_font') !== 'system') {\n            this.$('.settings-tab[data-block-name=\"emoji_font\"] .settings-block-label').text(xabber.getString(\"settings__menu_item__emoji_font_chosen_does_not_exist\"))\n            return;\n        }\n        let label = this.model.get('emoji_font') === 'system' ? 'system' : constants.EMOJI_FONTS_LIST[this.model.get('emoji_font')].name,\n            attribution_text = this.model.get('emoji_font') === 'system' ? '' : constants.EMOJI_FONTS_LIST[this.model.get('emoji_font')].attribution_text;\n        if (label === 'system')\n            label = xabber.getString(\"settings__menu_item__emoji_font_system\");\n        this.$('.settings-tab[data-block-name=\"emoji_font\"] .settings-block-label').text(label);\n        this.$('.emoji-font-attribution-text').switchClass('hidden', !attribution_text);\n        this.$('.emoji-font-attribution-text').text(attribution_text);\n        this.$(`.emoji-fonts-list input[type=radio][name=emoji_font][value=\"${this.model.get('emoji_font')}\"]`)\n            .prop('checked', true);\n        this.$(`.emoji-fonts-list input[type=radio][name=emoji_font]`)\n            .prop('disabled', false);\n        this.$('.emoji_font .emoji-font-external-url-text').addClass('hidden');\n        this.$('.emoji_font .emoji-font-external-url-button').addClass('hidden');\n        this.$('.emoji_font .preloader-wrap').addClass('hidden');\n        this.$('.emoji_font .emoji-font-download-text').addClass('hidden');\n        this.$('.emoji_font .emojis-preview').removeClass('hidden');\n        if (this.font_load_dfd && this.currently_loaded_font_value){\n            this.$('.emoji_font .emojis-preview').addClass('hidden');\n            this.$('.emoji-font-attribution-text').addClass('hidden');\n            this.$('.emoji_font .preloader-wrap').removeClass('hidden');\n            this.$('.emoji_font .emoji-font-download-text').removeClass('hidden');\n            this.$(`.emoji-fonts-list input[type=radio][name=emoji_font]`)\n                .prop('disabled', true);\n            this.$(`.emoji-fonts-list input[type=radio][name=emoji_font][value=\"${this.currently_loaded_font_value}\"]`)\n                .prop('checked', true);\n            this.$('.settings-tab[data-block-name=\"emoji_font\"] .settings-block-label').text(xabber.getString(\"settings__menu_item__emoji_font_downloading_text\"));\n        }\n    },\n\n    updateLanguage: function () {\n        if (this.model.get('language') === 'default'){\n            this.$('.settings-tab[data-block-name=\"interface_language\"] .settings-block-label').text(xabber.getString(\"settings__languages_list___item_default\", [constants.languages[xabber.get(\"default_language\") || 'en']]));\n        } else {\n            this.$('.settings-tab[data-block-name=\"interface_language\"] .settings-block-label').text(constants.languages[this.model.get('language')]);\n        }\n    },\n\n    showAddAccountView: function () {\n        xabber.trigger('add_account', {right: null});\n    },\n\n    updateDescription: function () {\n\n        if (!xabber.settings.language)\n            return;\n\n        let lang = xabber.settings.language,\n            locale = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key)),\n            progress = client_translation_progress[locale];\n\n        (lang == 'default' || !lang.indexOf('en')) && (progress = 100);\n\n        if (!_.isUndefined(progress)) {\n            let progress_text, platform_text;\n            if (progress == 100 && ((xabber.get(\"default_language\") === 'en' && lang === 'default') || lang === 'en')) {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_full_translation_english\", [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" class=\"email-link\" href='mailto:${constants.EMAIL_FOR_JOIN_TRANSLATION}'>${constants.EMAIL_FOR_JOIN_TRANSLATION}</a>`, constants.SHORT_CLIENT_NAME]);\n            } else if (progress == 100) {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_full_translation\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n            } else if (progress == 0) {\n                progress_text = xabber.getString(\"settings__section_interface_language__text_description_no_translations\", [constants.SHORT_CLIENT_NAME]);\n            } else {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_unfull_translation\", [constants.SHORT_CLIENT_NAME]);\n            }\n            platform_text = xabber.getString(\"settings__interface_language__text_description_platform\",\n                [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" href='${constants.PROJECT_CROWDIN_URL}'>${constants.PROJECT_CROWDIN_URL}</a>`]);\n            this.$('.description').html(`${progress_text}<br><br>${platform_text}`);\n        }\n    },\n\n    updateAvatarLabel: function () {\n        let shape = this.model.get('avatar_shape'), label_text;\n        if (shape === 'circle')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_circle\");\n        if (shape === 'squircle')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_squircle\");\n        if (shape === 'octagon')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_octagon\");\n        if (shape === 'hexagon')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_hexagon\");\n        if (shape === 'pentagon')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_pentagon\");\n        if (shape === 'rounded')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_rounded\");\n        if (shape === 'star')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_star\");\n        this.$('.settings-tab[data-block-name=\"avatars\"] .settings-block-label').text(label_text);\n    },\n\n    updateSoundsLabel: function () {\n        let sound_private_value = this.model.get('private_sound') && this.model.get('notifications_private') ? this.model.get('sound_on_private_message') : '',\n            sound_group_value = this.model.get('group_sound') && this.model.get('notifications_group') ? this.model.get('sound_on_group_message') : '',\n            sound_on_attention = this.model.get('call_attention') ? this.model.get('sound_on_attention') : '',\n            sound_private_text, sound_group_text, sound_on_attention_text;\n\n\n        if (sound_private_value === '')\n            sound_private_text = 'No sound';\n        else\n            sound_private_text = sound_private_value.replace('_', ' ');\n\n        if (sound_group_value === '')\n            sound_group_text = 'No sound';\n        else\n            sound_group_text = sound_group_value.replace('_', ' ');\n\n        if (sound_on_attention === '')\n            sound_on_attention_text = 'No sound';\n        else\n            sound_on_attention_text = sound_on_attention.replace('_', ' ');\n\n        this.$('.settings-tab[data-block-name=\"chats-notifications\"] .settings-block-label').text(sound_private_text);\n        this.$('.settings-tab[data-block-name=\"groupchats-notifications\"] .settings-block-label').text(sound_group_text);\n        this.$('.settings-tab[data-block-name=\"attention-calls\"] .settings-block-label').text(sound_on_attention_text);\n    },\n});\n\nxabber.mainColorPicker = xabber.BasicView.extend({\n    className: 'modal main-modal main-color-picker',\n    template: templates.color_scheme,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .color-value\": \"setColor\"\n    },\n\n    _initialize: function (options) {\n        this.model = options.model;\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('max-height', Math.min(($(window).height() - 341), 456)).perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n    },\n\n    setColor: function (ev) {\n        let color = $(ev.target).closest('.color-value').attr('data-value');\n        this.model.save('main_color', color);\n        xabber.trigger('update_main_color');\n        this.close();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n\n});\n\nxabber.ColorPicker = xabber.BasicView.extend({\n    className: 'modal main-modal color-picker',\n    materialColors: [\n        {\n            color: \"red\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFEBEE\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFCDD2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#EF9A9A\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#E57373\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#EF5350\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#F44336\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#E53935\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#D32F2F\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#C62828\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#B71C1C\"\n                }\n            ]\n        },\n        {\n            color: \"pink\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FCE4EC\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F8BBD0\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#F48FB1\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#F06292\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#EC407A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#E91E63\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#D81B60\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#C2185B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#AD1457\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#880E4F\"\n                }\n            ]\n        },\n        {\n            color: \"purple\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F3E5F5\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#E1BEE7\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#CE93D8\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#BA68C8\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#AB47BC\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#9C27B0\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#8E24AA\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#7B1FA2\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#6A1B9A\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#4A148C\"\n                }\n            ]\n        },\n        {\n            color: \"deep-purple\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#EDE7F6\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#D1C4E9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#B39DDB\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#9575CD\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#7E57C2\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#673AB7\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#5E35B1\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#512DA8\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#4527A0\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#311B92\"\n                }\n            ]\n        },\n        {\n            color: \"indigo\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E8EAF6\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#C5CAE9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#9FA8DA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#7986CB\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#5C6BC0\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#3F51B5\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#3949AB\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#303F9F\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#283593\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#1A237E\"\n                }\n            ]\n        },\n        {\n            color: \"blue\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E3F2FD\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#BBDEFB\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#90CAF9\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#64B5F6\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#42A5F5\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#2196F3\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#1E88E5\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#1976D2\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#1565C0\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#0D47A1\"\n                }\n            ]\n        },\n        {\n            color: \"light-blue\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E1F5FE\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B3E5FC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#81D4FA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4FC3F7\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#29B6F6\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#03A9F4\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#039BE5\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#0288D1\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#0277BD\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#01579B\"\n                }\n            ]\n        },\n        {\n            color: \"cyan\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E0F7FA\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B2EBF2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#80DEEA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4DD0E1\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#26C6DA\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#00BCD4\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#00ACC1\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#0097A7\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#00838F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#006064\"\n                }\n            ]\n        },\n        {\n            color: \"teal\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E0F2F1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B2DFDB\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#80CBC4\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4DB6AC\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#26A69A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#009688\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#00897B\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#00796B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#00695C\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#004D40\"\n                }\n            ]\n        },\n        {\n            color: \"green\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E8F5E9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#C8E6C9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#A5D6A7\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#81C784\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#66BB6A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#4CAF50\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#43A047\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#388E3C\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#2E7D32\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#1B5E20\"\n                }\n            ]\n        },\n        {\n            color: \"light-green\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F1F8E9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#DCEDC8\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#C5E1A5\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#AED581\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#9CCC65\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#8BC34A\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#7CB342\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#689F38\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#558B2F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#33691E\"\n                }\n            ]\n        },\n        {\n            color: \"lime\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F9FBE7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F0F4C3\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#E6EE9C\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#DCE775\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#D4E157\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#CDDC39\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#C0CA33\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#AFB42B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#9E9D24\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#827717\"\n                }\n            ]\n        },\n        {\n            color: \"yellow\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFFDE7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFF9C4\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFF59D\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFF176\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFEE58\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FFEB3B\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FDD835\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#FBC02D\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#F9A825\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#F57F17\"\n                }\n            ]\n        },\n        {\n            color: \"amber\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFF8E1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFECB3\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFE082\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFD54F\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFCA28\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FFC107\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FFB300\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#FFA000\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#FF8F00\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#FF6F00\"\n                }\n            ]\n        },\n        {\n            color: \"orange\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFF3E0\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFE0B2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFCC80\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFB74D\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFA726\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FF9800\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FB8C00\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#F57C00\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#EF6C00\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#E65100\"\n                }\n            ]\n        },\n        {\n            color: \"deep-orange\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FBE9E7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFCCBC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFAB91\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FF8A65\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FF7043\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FF5722\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#F4511E\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#E64A19\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#D84315\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#BF360C\"\n                }\n            ]\n        },\n        {\n            color: \"brown\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#EFEBE9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#D7CCC8\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#BCAAA4\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#A1887F\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#8D6E63\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#795548\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#6D4C41\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#5D4037\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#4E342E\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#3E2723\"\n                }\n            ]\n        },\n        {\n            color: \"grey\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FAFAFA\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F5F5F5\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#EEEEEE\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#E0E0E0\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#BDBDBD\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#9E9E9E\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#757575\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#616161\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#424242\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#212121\"\n                }\n            ]\n        },\n        {\n            color: \"blue-grey\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#ECEFF1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#CFD8DC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#B0BEC5\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#90A4AE\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#78909C\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#607D8B\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#546E7A\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#455A64\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#37474F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#263238\"\n                }\n            ]\n        }\n    ],\n\n    ps_selector: '.material-color-picker-wrap',\n    events: {\n        \"click .color-palette-item\": \"selectColor\",\n        \"click .selected-color-hex\": \"updateInputField\",\n        \"focusout .selected-color-hex-input\": \"focusoutInputField\",\n        \"keyup .selected-color-hex-input\": \"keyUpInput\",\n        \"click .btn-set\": \"setColor\"\n    },\n\n    _initialize(options) {\n        this.model = options.model;\n        this.$el.html(templates.color_picker({materialColors: this.materialColors}));\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                let $input = this.$('.selected-color-hex-input'),\n                    $color_hex = this.$('.selected-color-hex'),\n                    value = this.model.get('appearance').color || '#E0E0E0';\n                let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n                if (material_color) {\n                    let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n                    this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n                } else {\n                    this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n                }\n                if (value) {\n                    this.$('.selected-color-wrap').removeClass('hidden');\n                    $input.addClass('hidden');\n                    $color_hex.removeClass('hidden').text(value);\n                    value && this.$('.selected-color-item').css('background-color', value);\n                }\n            },\n            complete: this.close.bind(this)\n        });\n\n    },\n\n    updateInputField: function () {\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex');\n        $input.removeClass('hidden');\n        $input[0].value = $color_hex.text();\n        $color_hex.addClass('hidden');\n    },\n\n    keyUpInput: function (ev) {\n        if (ev.keyCode == constants.KEY_ENTER) {\n            ev.preventDefault();\n            this.focusoutInputField();\n        }\n        let $input = this.$('.selected-color-hex-input'),\n            value = $input[0].value.trim();\n        this.$('.selected-color-item').css('background-color', value);\n        let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n    },\n\n    focusoutInputField: function () {\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex'),\n            value = $input[0].value.trim();\n        let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n        $input.addClass('hidden');\n        $color_hex.removeClass('hidden').text(value);\n        this.$('.selected-color-item').css('background-color', value);\n    },\n\n    selectColor: function (ev) {\n        let $target = $(ev.target),\n            hex = $target.attr('data-hex'),\n            color_name = $target.closest('.color-palette-wrapper').attr('data-color-name').replace(/-/g, \"_\"),\n            weight = $target.attr('data-weight');\n        this.$('.selected-color-wrap').removeClass('hidden');\n        this.$('.selected-color-item').css('background-color', hex);\n        this.$('.selected-color-name').text(xabber.getString(`account_color_name_${color_name}`).replace(/-/g, \" \").replace(/-/g, \" \") + ` ${weight}`);\n        this.$('.selected-color-hex').text(hex);\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex');\n        $input.addClass('hidden');\n        $color_hex.removeClass('hidden');\n    },\n\n    setColor: function () {\n        this.close();\n        let appearance = this.model.get('appearance');\n        this.model.save('appearance', _.extend(appearance, {color: this.$('.selected-color-hex').text()}));\n\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                xabber.settings_modal_view.updateColor();\n            }\n        });\n    }\n\n});\n\nxabber.SetBackgroundView = xabber.BasicView.extend({\n    className: 'modal main-modal settings-background background-panel',\n    template: templates.backgrounds_gallery,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .menu-btn\": \"updateActiveMenu\",\n        \"click .library-wrap .image-item\": \"setActiveImage\",\n        'change input[type=\"file\"]': \"onFileInputChanged\",\n        'keyup input.url': \"onInputChanged\",\n        \"click .btn-add\": \"addBackground\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n    },\n\n    render: function (options) {\n        this.model = options.model;\n        this.type = options.type;\n        this.createLibrary();\n        this.$('.menu-btn').removeClass('active');\n        this.$('.menu-btn[data-screen-name=\"library\"]').addClass('active');\n        if (this.type == 'repeating-pattern')\n            this.$('.modal-header span').text(xabber.getString(\"settings__dialog_background__header_pattern\"));\n        else\n            this.$('.modal-header span').text(xabber.getString(\"settings__dialog_background__header_image\"));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('max-height', Math.min(($(window).height() - 341), 456)).perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n        let draggable = this.$('.upload-wrap');\n        draggable[0].ondragenter = function (ev) {\n            ev.preventDefault();\n            draggable.addClass('file-drop');\n        };\n        draggable[0].ondragover = function (ev) {\n            ev.preventDefault();\n        };\n        draggable[0].ondragleave = function (ev) {\n            if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                return;\n            ev.preventDefault();\n            draggable.removeClass('file-drop');\n        };\n        draggable[0].ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            draggable.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [], file;\n            for (let i = 0; i < files.length; i++) {\n                if (utils.isImageType(files[i].type)) {\n                    file = files[i];\n                    break;\n                }\n            }\n            file && this.addFile(file);\n        };\n    },\n\n    onScrollY: function () {\n        if (this.$('.screen-wrap:not(.hidden)').attr('data-screen') === 'library' && this.getScrollBottom() < 5) {\n            this.loadMoreImages();\n        }\n    },\n\n    getImagesFromXML: function (callback) {\n        if (this.type == 'repeating-pattern' && this.model.patterns_library || this.type == 'images' && this.model.img_library) {\n            callback && callback();\n            return;\n        }\n        if (this.type == 'repeating-pattern') {\n            this.onGetPatternsCallback(env.backgroundPatternsXml)\n        } else {\n            this.onGetImagesCallback(env.backgroundImagesXml);\n        }\n        callback && callback();\n    },\n\n    onGetPatternsCallback: function (data) {\n        if (!(data && data['background-patterns'] && data['background-patterns'].image))\n            return;\n        let images = [];\n        data = data['background-patterns'].image;\n        data.forEach((item) => {\n            images.push({thumbnail: item});\n        });\n        this.model.patterns_library = images;\n    },\n\n    onGetImagesCallback: function (data) {\n        if (!(data && data['background-images'] && data['background-images'].image))\n            return;\n        let images = [];\n        data = data['background-images'].image;\n        data.forEach((item) => {\n            let thumbnail = item.thumbnail,\n                fs_img = item['fullscreen-image'];\n            images.push({thumbnail, fs_img});\n        });\n        this.model.img_library = images;\n    },\n\n    onPaste: function (ev) {\n        let url = ev.clipboardData.getData('text').trim();\n        this.$('.image-preview img')[0].onload = () => {\n            this.$('.image-preview img').removeClass('hidden');\n            this.updateActiveButton();\n        };\n        this.$('.image-preview img').addClass('hidden')[0].src = url;\n        this.updateActiveButton();\n    },\n\n    updateActiveMenu: function (ev) {\n        let screen_name = ev.target.getAttribute('data-screen-name');\n        this.$('.menu-btn').removeClass('active');\n        this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n        this.updateScreen(screen_name);\n    },\n\n    updateScreen: function (name) {\n        this.$('.screen-wrap').addClass('hidden');\n        this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n        this.scrollToTop();\n        this.updateActiveButton();\n    },\n\n    updateActiveButton: function () {\n        let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            non_active = true;\n        if ($active_screen.attr('data-screen') == 'library') {\n            $active_screen.find('div.active').length && (non_active = false);\n        } else {\n            $active_screen.find('img:not(.hidden)').length && (non_active = false);\n        }\n        this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n    },\n\n    createLibrary: function () {\n        this.getImagesFromXML(() => {\n            this.loadMoreImages(40);\n        });\n    },\n\n    loadMoreImages: function (count) {\n        if ((this.type == 'repeating-pattern' && !this.model.patterns_library) || (this.type == 'images' && !this.model.img_library))\n            return;\n        !count && (count = 20);\n        let current_count = this.$(`.image-item`).length;\n        if (this.type == 'repeating-pattern' && current_count >= this.model.patterns_library.length || this.type == 'images' && current_count >= this.model.img_library.length)\n            return;\n        for (let i = current_count; i < (current_count + count); i++) {\n            let img = $(`<div class=\"image-item\"/>`),\n                img_sources = this.type == 'repeating-pattern' ? this.model.patterns_library[i] : this.model.img_library[i];\n            if (!img_sources)\n                break;\n            img.css('background-image', `url(\"${img_sources.thumbnail}\")`);\n            img.attr('data-src', this.type == 'repeating-pattern' ? img_sources.thumbnail : img_sources.fs_img);\n            this.$('.library-wrap').append(img);\n        }\n    },\n\n    setActiveImage: function (ev) {\n        let $target = $(ev.target);\n        if ($target.hasClass('active'))\n            $target.removeClass('active');\n        else {\n            this.$('.library-wrap>div').removeClass('active');\n            $target.addClass('active');\n        }\n        this.updateActiveButton();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target, file;\n        for (let i = 0; i < target.files.length; i++) {\n            if (utils.isImageType(target.files[i].type)) {\n                file = target.files[i];\n                break;\n            }\n        }\n        file && this.addFile(file);\n        $(target).val('');\n    },\n\n    addFile: function (file) {\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            let image_prev = new Image(),\n                src = e.target.result;\n            image_prev.src = src;\n            this.$('.screen-wrap[data-screen=\"upload\"] img').detach();\n            this.$('.screen-wrap[data-screen=\"upload\"]').prepend(image_prev);\n            this.updateActiveButton();\n        };\n        reader.readAsDataURL(file);\n    },\n\n    onInputChanged: function (ev) {\n        if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n            return;\n        if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n            let url = ev.target.value.trim();\n            this.$('.image-preview img')[0].onload = () => {\n                this.$('.image-preview img').removeClass('hidden');\n                this.updateActiveButton();\n            };\n            this.$('.image-preview img').addClass('hidden')[0].src = url;\n            this.updateActiveButton();\n        } else {\n            this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n            this.updateActiveButton();\n        }\n    },\n\n    addBackground: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n        dfd.done((img) => {\n            if (img) {\n                this.model.save('background', {type: this.type, image: img});\n            }\n            else {\n                this.model.save('background', {type: 'default'});\n            }\n            xabber.body.updateBackground();\n            this.close();\n        });\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = $active_screen.find('div.active').attr('data-src');\n            dfd.resolve(image);\n        } else {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            if ($active_screen.attr('data-screen') == 'web-address') {\n                let request = {\n                    type: \"GET\",\n                    url: image,\n                    headers: {\"Access-Control-Allow-Origin\": \"*\"},\n                    dataType: 'blob',\n                    success: function (data) {\n                        image = data;\n                        dfd.resolve(image);\n                    },\n                    error: () => {\n                        dfd.resolve(image);\n                    }\n                };\n                $.ajax(request);\n            } else\n                dfd.resolve(image);\n        }\n    },\n\n    close: function () {\n        xabber.settings_modal_view.updateBackgroundSetting();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n});\n\nxabber.AboutView = xabber.BasicView.extend({\n    className: 'settings-panel about-panel',\n    template: templates.about,\n    ps_selector: '.panel-content',\n\n    _initialize: function () {\n        this.$('.xabber-info-wrap .version').text(this.model.get('version_number'));\n    },\n\n    render: function () {\n    }\n});\n\nxabber.DragManager = Backbone.Model.extend({\n    initialize: function () {\n        window.document.onmousedown = this.onMouseDown.bind(this);\n        window.document.onmousemove = this.onMouseMove.bind(this);\n        window.document.onmouseup = this.onMouseUp.bind(this);\n    },\n\n    onMouseDown: function (ev) {\n        if (ev.which != 1) {\n            return;\n        }\n        let draghandle_elem = ev && ev.target && ev.target.closest ? ev.target.closest('.drag-handle') : $(ev.target).closest('.drag-handle'),\n            elem = draghandle_elem && draghandle_elem.closest('.draggable');\n        if (!elem) {\n            return this.resetElem();\n        }\n        this.set({\n            elem: elem,\n            draghandle_elem: draghandle_elem,\n            downX: ev.pageX,\n            downY: ev.pageY\n        });\n    },\n\n    onMouseMove: function (ev) {\n        if (!this.get('elem')) {\n            return;\n        }\n        let avatar = this.get('avatar');\n        if (!avatar) {\n            if (    Math.abs(ev.pageX - this.get('downX')) < 3 &&\n                    Math.abs(ev.pageY - this.get('downY')) < 3) {\n                return;\n            }\n            avatar = this.createAvatar(ev);\n            if (!avatar) {\n                return this.resetElem();\n            }\n            this.set('avatar', avatar);\n            let coords = this.getCoords(avatar);\n            this.set({\n                shiftX: this.get('downX') - coords.left,\n                shiftY: this.get('downY') - coords.top\n            });\n            this.startDrag(ev);\n        }\n        avatar.style.left = ev.pageX - this.get('shiftX') + 'px';\n        avatar.style.top = ev.pageY - this.get('shiftY') + 'px';\n        let drop_elem = this.findDropElem(ev);\n        this.updateDropElem(drop_elem);\n        return;\n    },\n\n    onMouseUp: function (ev) {\n        let selector = document.querySelector('.recording');\n        if (selector) {\n            $(selector).removeClass('recording');\n            return;\n        }\n        this.get('avatar') && this.finishDrag(ev);\n        this.resetElem();\n    },\n\n    resetElem: function () {\n        this.set({elem: null, draghandle_elem: null, avatar: null});\n    },\n\n    getCoords: function (elem) {\n        let box = elem.getBoundingClientRect();\n        return {\n            top: box.top + window.pageYOffset,\n            left: box.left + window.pageXOffset\n        };\n    },\n\n    createAvatar: function () {\n        let avatar = this.get('elem'),\n            $avatar = $(avatar),\n            draghandle_elem = this.get('draghandle_elem');\n        let old = {\n            parent: avatar.parentNode,\n            nextSibling: avatar.nextSibling,\n            position: avatar.position || '',\n            left: avatar.left || '',\n            top: avatar.top || '',\n            zIndex: avatar.zIndex || '',\n            avatar_cursor: avatar.style.cursor || '',\n            draghandle_elem_cursor: draghandle_elem.style.cursor || ''\n        };\n\n        $avatar.addClass('dragging');\n        avatar.style.cursor = '-webkit-grabbing';\n        draghandle_elem.style.cursor = '-webkit-grabbing';\n\n        avatar.rollback = function () {\n            old.parent.insertBefore(avatar, old.nextSibling);\n            $avatar.removeClass('dragging');\n            avatar.style.position = old.position;\n            avatar.style.left = old.left;\n            avatar.style.top = old.top;\n            avatar.style.zIndex = old.zIndex;\n            avatar.style.cursor = old.avatar_cursor;\n            draghandle_elem.style.cursor = old.draghandle_elem_cursor;\n        };\n\n        return avatar;\n    },\n\n    startDrag: function (ev) {\n        let avatar = this.get('avatar');\n        window.document.body.appendChild(avatar);\n        avatar.style.zIndex = 9999;\n        avatar.style.position = 'absolute';\n    },\n\n    finishDrag: function (ev) {\n        let elem = this.get('elem'),\n            avatar = this.get('avatar'),\n            drop_elem = this.findDropElem(ev);\n        avatar.rollback();\n        this.updateDropElem(null);\n        if (elem && drop_elem) {\n            $(elem).trigger('drag_to', drop_elem);\n            $(drop_elem).trigger('drag_from', elem);\n        }\n    },\n\n    findDropElem: function (ev) {\n        let avatar = this.get('avatar');\n        avatar.hidden = true;\n        let elem = window.document.elementFromPoint(ev.clientX, ev.clientY);\n        avatar.hidden = false;\n        if (!elem) {\n            return null;\n        }\n        return elem.closest('.droppable');\n    },\n\n    updateDropElem: function (drop_elem) {\n        let old_drop_elem = this.get('drop_elem');\n        this.set('drop_elem', drop_elem);\n        old_drop_elem && $(old_drop_elem).removeClass('drag-on');\n        drop_elem && $(drop_elem).addClass('drag-on');\n    }\n});\n\n_.extend(xabber, {\n    modal_settings: {\n        open: {\n            in_duration: 10,\n            out_duration: 10,\n            opacity: 0.4\n        },\n        close: {out_duration: 10}\n    },\n\n    ps_settings: {\n        minScrollbarLength: 40,\n        suppressScrollX: true,\n        wheelSpeed: 0.5\n    },\n\n    startBlinkingFavicon: function (is_disconnected) {\n        if (this._blink_interval && is_disconnected === undefined)\n            return;\n        clearInterval(this._blink_interval);\n        this._blink_interval = setInterval(() => {\n            let $icon = $(\"link[rel='shortcut icon']\"), url;\n            if ($icon.attr('href').indexOf(this.cache.favicon) > -1 || $icon.attr('href').indexOf(constants.FAVICON_DEFAULT) > -1 || $icon.attr('href').indexOf(this.cache.favicon_gray) > -1 || $icon.attr('href').indexOf(constants.FAVICON_DEFAULT_GREY) > -1)\n                url = this.cache.favicon_message || constants.FAVICON_MESSAGE;\n            else\n                url = is_disconnected ? this.cache.favicon_gray || constants.FAVICON_DEFAULT_GREY : this.cache.favicon || constants.FAVICON_DEFAULT;\n            $icon.attr('href', url);\n        }, 1000);\n    },\n\n    stopBlinkingFavicon: function (is_disconnected) {\n        if (this._blink_interval || is_disconnected !== undefined) {\n            clearInterval(this._blink_interval);\n            this._blink_interval = null;\n            let url = is_disconnected ? this.cache.favicon_gray || constants.FAVICON_DEFAULT_GREY : this.cache.favicon || constants.FAVICON_DEFAULT;\n            $(\"link[rel='shortcut icon']\").attr(\"href\", url);\n        }\n    },\n\n    onChangedAllMessageCounter: function () {\n        if (this.get('all_msg_counter')) {\n            this.startBlinkingFavicon();\n            window.document.title = xabber.getString(\"notofications__desktop_notification__text\", [this.get('all_msg_counter')]);\n        } else {\n            this.stopBlinkingFavicon();\n            window.document.title = constants.CLIENT_NAME;\n        }\n    },\n\n    updateAllMessageCounterOnDisconnect: function (is_disconnected) {\n        if (this.get('all_msg_counter')) {\n            this.startBlinkingFavicon(is_disconnected);\n            window.document.title = xabber.getString(\"notofications__desktop_notification__text\", [this.get('all_msg_counter')]);\n        } else {\n            this.stopBlinkingFavicon(is_disconnected);\n            window.document.title = constants.CLIENT_NAME;\n        }\n    },\n\n    loadEmojiFont: function (url, dfd) {\n        xabber.error('loading Font!');\n        if (url && url !== 'system') {\n            let FontName = \"EmojiFont\",\n                FontURL = url,\n                emoji_font = new FontFace(FontName, `url(${FontURL})`),\n                font_loaded;\n\n            let load_check_interval = setInterval(() => {\n                console.log('status - ' + emoji_font.status);\n                if (emoji_font.status == 'loaded' || emoji_font.status == 'error'){\n                    clearInterval(load_check_interval);\n                    if (emoji_font.status == 'loaded' && !font_loaded){\n                        font_loaded = true;\n                        console.log('loaded - interval');\n                        document.fonts.add(emoji_font);\n                        $(constants.CONTAINER_ELEMENT).addClass('custom-emoji-font');\n                        dfd && dfd.resolve({});\n                    } else if (emoji_font.status == 'error' && !font_loaded) {\n                        font_loaded = true;\n                        console.log('error - interval');\n                        utils.dialogs.error(xabber.getString(\"settings__menu_item__emoji_font_error_loading\"));\n                        $(constants.CONTAINER_ELEMENT).removeClass('custom-emoji-font');\n                        dfd && dfd.resolve({error: true});\n                    }\n                }\n            }, 1000);\n\n            emoji_font.load().then(() => {\n                console.log('loaded');\n                if (font_loaded)\n                    return;\n                font_loaded = true;\n                document.fonts.add(emoji_font);\n                $(constants.CONTAINER_ELEMENT).addClass('custom-emoji-font');\n                dfd && dfd.resolve({});\n            }).catch((error) => {\n                console.log('error');\n                if (font_loaded)\n                    return;\n                font_loaded = true;\n                utils.dialogs.error(xabber.getString(\"settings__menu_item__emoji_font_error_loading\") + error);\n                $(constants.CONTAINER_ELEMENT).removeClass('custom-emoji-font');\n                dfd && dfd.resolve({error: true});\n            });\n        } else if (url === 'system'){\n            console.log('system font');\n            $(constants.CONTAINER_ELEMENT).removeClass('custom-emoji-font');\n            dfd && dfd.resolve({});\n        }\n    },\n\n    setAllMessageCounter: function () {\n        let count_msg = 0;\n        xabber.accounts.each((account) => {\n            account.chats.each((chat) => {\n                if (chat.contact && !chat.isMuted())\n                    count_msg += chat.get('unread') + chat.get('const_unread');\n            });\n            let incoming_subscriptions = account.contacts.filter(item => (item.get('invitation') && !item.get('removed')) || (item.get('subscription_request_in') && item.get('subscription') != 'both')).length;\n            count_msg += incoming_subscriptions;\n        });\n        return count_msg;\n    },\n\n    recountAllMessageCounter: function () {\n        if (!this.get('focused')) {\n            this.set('all_msg_counter', this.setAllMessageCounter());\n        }\n    },\n\n    resetMessageCounter: function () {\n        this.set('all_msg_counter', 0);\n    },\n\n    onChangedFocusState: function () {\n        if (this.get('focused')) {\n            this.resetMessageCounter();\n        }\n    },\n\n    openWindow: function (url) {\n        utils.openWindow(url, () => {\n            utils.dialogs.error(xabber.getString(\"notifications__error__text_could_not_open_new_tab\"));\n        });\n    },\n\n    popupNotification: function (params) {\n        let notification = new window.Notification(params.title, {\n            body: params.text,\n            icon: params.icon\n        });\n        setTimeout(notification.close.bind(notification), 5000);\n        return notification;\n    },\n\n    playAudio: function (name, loop, volume) {\n        if (!((volume || volume === 0) && !isNaN(volume)))\n            volume = 1;\n        loop = loop || false;\n        let filename = sounds.all_sounds.find(item => item.file_name === name);\n        if (filename) {\n            let audio = new window.Audio(filename.audio);\n            audio.loop = loop;\n            audio.volume = volume;\n            audio.play();\n            return audio;\n        }\n        return;\n    },\n\n    stopAudio: function (audio) {\n        if (audio) {\n            audio.pause();\n            audio.remove();\n        }\n    },\n\n    registerDOMEvents: function () {\n        let self = this;\n\n        $(window).on(\"blur focus\", function (ev) {\n            self.set('focused', ev.type === 'focus');\n        });\n\n        $(window).on(\"resize\", function (ev) {\n            self.set({\n                width: window.innerWidth,\n                height: window.innerHeight\n            });\n            self.trigger('update_layout', {size_changed: true});\n        });\n\n        window.document.body.ondragover = (ev) => {\n            ev.preventDefault();\n        };\n\n        window.document.body.ondrop = (ev) => {\n            ev.preventDefault();\n        };\n    },\n\n\n    initIdleJS: function () {\n        if (this.idleJs)\n            this.idleJs.stop();\n        let self = this,\n            idling_time = self._settings.get('idling_time') * 1000\n\n        this.idleJs = new idleJs({\n            idle: idling_time, // idle time in ms\n            events: ['mousemove', 'keydown', 'mousedown', 'touchstart', 'focus', 'blur'], // events that will trigger the idle resetter\n            onIdle: () => {\n                if (self._settings.get('idling'))\n                    self.set('idle', true);\n                else\n                    self.set('idle', false);\n            } , // callback function to be executed after idle time\n            onActive:() => {\n                self.set('idle', false);\n            }  , // callback function to be executed after back form idleness\n            keepTracking: true, // set it to false if you want to be notified only on the first idleness change\n            startAtIdle: false // set it to true if you want to start in the idle state\n        })\n        this.idleJs.start();\n    },\n});\n\nxabber.once(\"start\", function () {\n    this.set('all_msg_counter', 0);\n    this.on(\"change:all_msg_counter\", this.onChangedAllMessageCounter, this);\n    this.on(\"change:focused\", this.onChangedFocusState, this);\n    this._settings.on(\"change:idling_time\", this.initIdleJS, this);\n    this.set({\n        focused: window.document.hasFocus(),\n        width: window.innerWidth,\n        height: window.innerHeight\n    });\n    this.registerDOMEvents();\n    this.initIdleJS();\n\n    Materialize.modalSettings = this.modal_settings;\n\n    this.drag_manager = new this.DragManager();\n\n    this.body = new this.Body({model: this});\n\n    this.login_page = this.body.addChild('login', this.NodeView, {\n        classlist: 'login-page-wrap', el: $(document).find('.login-container')[0]});\n\n    this.toolbar_view = this.body.addChild('toolbar', this.ToolbarView);\n    this.settings.appearance.color && this.toolbar_view.updateColor(this.settings.appearance.color);\n\n    this.blur_overlay = this.body.addChild('blur_overlay', this.NodeView, {\n        classlist: 'blur-overlay'});\n\n    this.main_panel = this.body.addChild('main', this.NodeView, {\n        classlist: 'main-wrap'});\n    this.main_overlay_panel = this.body.addChild('main_overlay', this.NodeView, {\n        classlist: 'main-overlay-wrap hidden'});\n    this.body.updateBlur(this.settings.appearance.blur);\n    this.left_panel = this.main_panel.addChild(\n        'left', this.NodeView, {classlist: 'panel-wrap left-panel-wrap'});\n    this.right_panel = this.main_panel.addChild(\n        'right', this.NodeView, {classlist: 'panel-wrap right-panel-wrap'});\n    this.right_contact_panel = this.main_panel.addChild(\n        'right_contact', this.NodeView, {classlist: 'panel-wrap right-contact-panel-wrap'});\n    this.wide_panel = this.main_panel.addChild(\n        'wide', this.NodeView, {classlist: 'panel-wrap wide-panel-wrap'});\n    this.placeholders_wrap = this.main_panel.addChild('placeholders', this.NodeView, {classlist: 'wide-placeholders-wrap'});\n    this.settings_modal_view = this.main_overlay_panel.addChild(\n        'settings_modal', this.SettingsModalView, {model: this._settings});\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    utils = env.utils;\n\n\nxabber.AccountSettings = Backbone.Model.extend({\n    idAttribute: 'jid',\n\n    defaults: {\n        timestamp: 0,\n        to_sync: false,\n        synced: false,\n        deleted: false\n    },\n\n    update_timestamp: function () {\n        this.save('timestamp', utils.now());\n    },\n\n    update_settings: function (settings) {\n        this.save(_.extend({timestamp: utils.now()}, settings));\n    },\n\n    request_data: function () {\n        return {\n            jid: this.get('jid'),\n            timestamp: this.get('timestamp'),\n            settings: _.omit(this.attributes, [\n                'jid', 'timestamp', 'order',\n                'to_sync', 'synced', 'deleted'\n            ])\n        };\n    }\n});\n\nxabber.AccountSettingsList = Backbone.CollectionWithStorage.extend({\n    model: xabber.AccountSettings,\n});\n\nxabber.AccountsOrderTimestamp = Backbone.ModelWithStorage.extend({\n    defaults: {\n        timestamp: 0\n    }\n});\n\nxabber.once(\"start\", function () {\n        this.account_settings_list = new this.AccountSettingsList(null, {\n            storage_name: this.getStorageName() + '-account-settings'\n        });\n        this.account_settings_list.fetch();\n        this.account_settings_list.order_timestamp = new this.AccountsOrderTimestamp(\n            {id: 'accounts-order-timestamp'},\n            {storage_name: this.getStorageName(), fetch: 'after'}\n        );\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    _ = env._,\n    uuid = env.uuid,\n    $iq = env.$iq,\n    utils = env.utils,\n    Strophe = env.Strophe,\n    constants = env.constants;\n\nStrophe.log = function (log_level, msg) {\n    let do_log = (constants.LOG_LEVEL === constants.LOG_LEVEL_DEBUG) ||\n        (constants.LOG_LEVEL >= constants.LOG_LEVEL_WARN &&\n            log_level >= Strophe.LogLevel.WARN) ||\n        (constants.LOG_LEVEL >= constants.LOG_LEVEL_ERROR &&\n            log_level >= Strophe.LogLevel.ERROR);\n    if (do_log) {\n        console.info('Strophe log: ');\n        console.info(msg);\n    }\n};\n\nStrophe.addConnectionPlugin('register', {\n    _connection: null,\n\n    //The plugin must have the init function.\n    init: function(conn) {\n        this._connection = conn;\n\n        // compute free emun index number\n        let i = 0;\n        Object.keys(Strophe.Status).forEach(function (key) {\n            i = Math.max(i, Strophe.Status[key]);\n        });\n\n        /* extend name space\n         *  NS.REGISTER - In-Band Registration\n         *              from XEP 77.\n         */\n        Strophe.addNamespace('REGISTER', 'jabber:iq:register');\n        Strophe.Status.REGIFAIL        = i + 1;\n        Strophe.Status.REGISTER        = i + 2;\n        Strophe.Status.REGISTERED      = i + 3;\n        Strophe.Status.CONFLICT        = i + 4;\n        Strophe.Status.NOTACCEPTABLE   = i + 5;\n\n        if (conn.disco) {\n            if(conn.disco.addFeature)\n                conn.disco.addFeature(Strophe.NS.REGISTER);\n            if(conn.disco.addNode)\n                conn.disco.addNode(Strophe.NS.REGISTER, {items:[]});\n        }\n\n        // hooking strophe's connection.reset\n        var self = this, reset = conn.reset.bind(conn);\n        conn.reset = function () {\n            reset();\n            self.instructions = \"\";\n            self.fields = {};\n            self.registered = false;\n        };\n\n        // hooking strophe's _connect_cb\n        var connect_cb = conn._connect_cb.bind(conn);\n        conn._connect_cb = function (req, callback, raw) {\n            if (!self._registering) {\n                if (self.processed_features) {\n                    // exchange Input hooks to not print the stream:features twice\n                    var xmlInput = conn.xmlInput;\n                    conn.xmlInput = Strophe.Connection.prototype.xmlInput;\n                    var rawInput = conn.rawInput;\n                    conn.rawInput = Strophe.Connection.prototype.rawInput;\n                    connect_cb(req, callback, raw);\n                    conn.xmlInput = xmlInput;\n                    conn.rawInput = rawInput;\n                    delete self.processed_features;\n                } else {\n                    connect_cb(req, callback, raw);\n                }\n            } else {\n                if(!self._check_user) {\n                    // Save this request in case we want to authenticate later\n                    self._connect_cb_data = {\n                        req: req,\n                        raw: raw\n                    };\n                    if (self._register_cb(req, callback, raw)) {\n                        // remember that we already processed stream:features\n                        self.processed_features = true;\n                        delete self._registering;\n                    }\n                }\n                else {\n                    if (self._register_cb_check_user(req, callback, raw)) {\n                        // remember that we already processed stream:features\n                        self.processed_features = true;\n                        delete self._registering;\n                    }\n\n                }\n            }\n        };\n\n        // hooking strophe`s authenticate\n        var auth_old = conn.authenticate.bind(conn);\n        conn.authenticate = function(matched) {\n            if (typeof matched === \"undefined\") {\n                var conn = this._connection;\n\n                if (!this.fields.username || !this.domain || !this.fields.password) {\n                    Strophe.info(\"Register a JID first!\");\n                    return;\n                }\n\n                var jid = this.fields.username + \"@\" + this.domain;\n\n                conn.jid = jid;\n                conn.authzid = Strophe.getBareJidFromJid(conn.jid);\n                conn.authcid = Strophe.getNodeFromJid(conn.jid);\n                conn.pass = this.fields.password;\n\n                var req = this._connect_cb_data.req;\n                var callback = conn.connect_callback;\n                var raw = this._connect_cb_data.raw;\n                conn._connect_cb(req, callback, raw);\n            } else {\n                auth_old(matched);\n            }\n        }.bind(this);\n\n    },\n\n    /** Function: connect\n     *  Starts the registration process.\n     *\n     *  As the registration process proceeds, the user supplied callback will\n     *  be triggered multiple times with status updates.  The callback\n     *  should take two arguments - the status code and the error condition.\n     *\n     *  The status code will be one of the values in the Strophe.Status\n     *  constants.  The error condition will be one of the conditions\n     *  defined in RFC 3920 or the condition 'strophe-parsererror'.\n     *\n     *  Please see XEP 77 for a more detailed explanation of the optional\n     *  parameters below.\n     *\n     *  Parameters:\n     *    (String) domain - The xmpp server's Domain.  This will be the server,\n     *      which will be contacted to register a new JID.\n     *      The server has to provide and allow In-Band Registration (XEP-0077).\n     *    (Function) callback The connect callback function.\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n     *      time the server will wait before returning an empty result for\n     *      a request.  The default setting of 60 seconds is recommended.\n     *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n     *      number of connections the server will hold at one time.  This\n     *      should almost always be set to 1 (the default).\n     */\n    connect: function(domain, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(domain);\n        this.instructions = \"\";\n        this.fields = {};\n        this.registered = false;\n\n        this._registering = true;\n\n        conn.connect(this.domain, \"\", callback, wait, hold, route);\n    },\n\n\n    connect_check_user: function(domain, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(domain);\n        this.instructions = \"\";\n        this.fields = {};\n        this.registered = false;\n\n        this._registering = true;\n        this._check_user = true;\n\n        conn.connect(this.domain, \"\", callback, wait, hold, route);\n    },\n\n    connect_change_password: function(jid, password, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(jid);\n        this.instructions = \"\";\n        this.fields = {};\n        conn.registerSASLMechanisms([Strophe.SASLAnonymous,\n            Strophe.SASLExternal,\n            Strophe.SASLMD5,\n            Strophe.SASLPlain,\n            Strophe.SASLSHA1]);\n\n        conn.connect(jid, password, callback, wait, hold, route);\n    },\n\n    /** PrivateFunction: _register_cb\n     *  _Private_ handler for initial registration request.\n     *\n     *  This handler is used to process the initial registration request\n     *  response from the BOSH server. It is used to set up a bosh session\n     *  and requesting registration fields from host.\n     *\n     *  Parameters:\n     *    (Strophe.Request) req - The current request.\n     */\n    _register_cb: function (req, _callback, raw) {\n        var conn = this._connection;\n\n        Strophe.info(\"_register_cb was called\");\n        conn.connected = true;\n\n        var bodyWrap = conn._proto._reqToData(req);\n        if (!bodyWrap) { return; }\n\n        if (conn.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (bodyWrap.nodeName === conn._proto.strip && bodyWrap.childNodes.length) {\n                conn.xmlInput(bodyWrap.childNodes[0]);\n            } else {\n                conn.xmlInput(bodyWrap);\n            }\n        }\n        if (conn.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                conn.rawInput(raw);\n            } else {\n                conn.rawInput(Strophe.serialize(bodyWrap));\n            }\n        }\n\n        var conncheck = conn._proto._connect_cb(bodyWrap);\n        if (conncheck === Strophe.Status.CONNFAIL) {\n            return false;\n        }\n\n        // Check for the stream:features tag\n        var register = bodyWrap.getElementsByTagName(\"register\");\n        var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n        if (register.length === 0 && mechanisms.length === 0) {\n            conn._proto._no_auth_received(_callback);\n            return false;\n        }\n\n        if (register.length === 0) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, null);\n            return true;\n        }\n\n        // send a get request for registration, to get all required data fields\n        conn._addSysHandler(this._get_register_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send($iq({type: \"get\", id: uuid(), to: this.domain }).c(\"query\",\n            {xmlns: Strophe.NS.REGISTER}).tree());\n\n        return true;\n    },\n    _register_cb_check_user: function (req, _callback, raw) {\n        var conn = this._connection;\n\n        Strophe.info(\"_register_cb was called\");\n        conn.connected = true;\n\n        var bodyWrap = conn._proto._reqToData(req);\n        if (!bodyWrap) { return; }\n\n        if (conn.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (bodyWrap.nodeName === conn._proto.strip && bodyWrap.childNodes.length) {\n                conn.xmlInput(bodyWrap.childNodes[0]);\n            } else {\n                conn.xmlInput(bodyWrap);\n            }\n        }\n        if (conn.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                conn.rawInput(raw);\n            } else {\n                conn.rawInput(Strophe.serialize(bodyWrap));\n            }\n        }\n\n        var conncheck = conn._proto._connect_cb(bodyWrap);\n        if (conncheck === Strophe.Status.CONNFAIL) {\n            return false;\n        }\n\n        // Check for the stream:features tag\n        var register = bodyWrap.getElementsByTagName(\"register\");\n        var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n        if (register.length === 0 && mechanisms.length === 0) {\n            conn._proto._no_auth_received(_callback);\n            return false;\n        }\n\n        if (register.length === 0) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, null);\n            return true;\n        }\n        conn._changeConnectStatus(Strophe.Status.REGISTER, null);\n\n        return true;\n    },\n\n    /** PrivateFunction: _get_register_cb\n     *  _Private_ handler for Registration Fields Request.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The query stanza.\n     *\n     *  Returns:\n     *    false to remove SHOULD contain the registration information currentlSHOULD contain the registration information currentlSHOULD contain the registration information currentlthe handler.\n     */\n    _get_register_cb: function (stanza) {\n        var i, query, field, conn = this._connection;\n        query = stanza.getElementsByTagName(\"query\");\n\n        if (query.length !== 1) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n            return false;\n        }\n        query = query[0];\n        // get required fields\n        for (i = 0; i < query.childNodes.length; i++) {\n            field = query.childNodes[i];\n            if (field.tagName.toLowerCase() === 'instructions') {\n                // this is a special element\n                // it provides info about given data fields in a textual way.\n                conn.register.instructions = Strophe.getText(field);\n                continue;\n            } else if (field.tagName.toLowerCase() === 'x') {\n                // ignore x for now\n                continue;\n            }\n            conn.register.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n        }\n        conn._changeConnectStatus(Strophe.Status.REGISTER, null);\n        return false;\n    },\n\n    /** Function: submit\n     *  Submits Registration data.\n     *\n     *  As the registration process proceeds, the user supplied callback will\n     *  be triggered with status code Strophe.Status.REGISTER. At this point\n     *  the user should fill all required fields in connection.register.fields\n     *  and invoke this function to procceed in the registration process.\n     */\n    submit: function () {\n        var lang = xabber.settings.language;\n        (lang === 'default') && (lang = xabber.get('default_language'));\n        var i, name, query, fields, conn = this._connection;\n        query = $iq({type: \"set\", 'xml:lang': lang, id: uuid()}).c(\"query\", {xmlns:Strophe.NS.REGISTER});\n\n        // set required fields\n        fields = Object.keys(this.fields);\n        for (i = 0; i < fields.length; i++) {\n            name = fields[i];\n            query.c(name).t(this.fields[name]).up();\n        }\n\n        // providing required information\n        conn._addSysHandler(this._submit_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send(query);\n    },\n\n    /** PrivateFunction: _submit_cb\n     *  _Private_ handler for submitted registration information.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The query stanza.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    _submit_cb: function (stanza) {\n        var i, query, field, error = null, conn = this._connection;\n\n        query = stanza.getElementsByTagName(\"query\");\n        if (query.length > 0) {\n            query = query[0];\n            // update fields\n            for (i = 0; i < query.childNodes.length; i++) {\n                field = query.childNodes[i];\n                if (field.tagName.toLowerCase() === 'instructions') {\n                    // this is a special element\n                    // it provides info about given data fields in a textual way\n                    this.instructions = Strophe.getText(field);\n                    continue;\n                }\n                this.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n            }\n        }\n\n        if (stanza.getAttribute(\"type\") === \"error\") {\n            error = stanza.getElementsByTagName(\"error\");\n            let error_text = stanza.getElementsByTagName(\"text\");\n            if (error_text.length > 0)\n                error_text = error_text[0].innerHTML;\n            if (error.length !== 1) {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n                return false;\n            }\n\n            Strophe.info(\"Registration failed.\");\n\n            // this is either 'conflict' or 'not-acceptable'\n            error = error[0].firstChild.tagName.toLowerCase();\n            if (error === 'conflict') {\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, error, error_text);\n            } else if (error === 'not-acceptable') {\n                conn._changeConnectStatus(Strophe.Status.NOTACCEPTABLE, error, error_text);\n            } else {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, error, error_text);\n            }\n        } else {\n            Strophe.info(\"Registration successful.\");\n\n            conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n\n        return false;\n    },\n\n    submit_unregister: function () {\n        var lang = xabber.settings.language;\n        (lang === 'default') && (lang = xabber.get('default_language'));\n        var i, name, query, fields, conn = this._connection;\n        query = $iq({type: \"set\", 'xml:lang': lang, id: uuid()}).c(\"query\", {xmlns:Strophe.NS.REGISTER}).c('remove');\n\n        conn._addSysHandler(this._submit_unregister_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send(query);\n    },\n\n    _submit_unregister_cb: function (stanza) {\n        var i, error = null, conn = this._connection;\n\n        if (stanza.getAttribute(\"type\") === \"error\") {\n            error = stanza.getElementsByTagName(\"error\");\n            let error_text = stanza.getElementsByTagName(\"text\");\n            if (error_text.length > 0)\n                error_text = error_text[0].innerHTML;\n            if (error.length !== 1) {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n                return false;\n            }\n\n            Strophe.info(\"Unregistration failed.\");\n\n            // this is either 'conflict' or 'not-acceptable'\n            error = error[0].firstChild.tagName.toLowerCase();\n            if (error === 'conflict') {\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, error, error_text);\n            } else if (error === 'not-acceptable') {\n                conn._changeConnectStatus(Strophe.Status.NOTACCEPTABLE, error, error_text);\n            } else {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, error, error_text);\n            }\n        } else {\n            Strophe.info(\"Unregistration successful.\");\n\n            conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n\n        return false;\n    }\n});\n\n\nlet utf16to8 = function (str) {\n    let i, c;\n    let out = \"\";\n    let len = str.length;\n    for (i = 0; i < len; i++) {\n        c = str.charCodeAt(i);\n        if ((c >= 0x0000) && (c <= 0x007F)) {\n            out += str.charAt(i);\n        } else if (c > 0x07FF) {\n            out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));\n            out += String.fromCharCode(0x80 | ((c >>  6) & 0x3F));\n            out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n        } else {\n            out += String.fromCharCode(0xC0 | ((c >>  6) & 0x1F));\n            out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n        }\n    }\n    return out;\n};\n\nStrophe.SASLHOTP = function() {};\nStrophe.SASLHOTP.prototype = new Strophe.SASLMechanism(\"HOTP\", true, 100);\n\nStrophe.SASLHOTP.prototype.test = function (connection) {\n    return true;\n};\n\nStrophe.SASLHOTP.prototype.onChallenge = function (connection) {\n    let auth_str = String.fromCharCode(0) + connection.authcid +\n        String.fromCharCode(0) + connection.hotp_pass;\n    return utf16to8(auth_str);\n};\n\nStrophe.ConnectionManager = function (CONNECTION_URL, options) {\n    options = options || {};\n    this.connection = new Strophe.Connection(CONNECTION_URL, options);\n};\n\nStrophe.ConnectionManager.prototype = {\n    connect: function (auth_type, jid, password, callback) {\n        this.connection.mechanisms = {};\n        this.auth_type = auth_type || 'password';\n        if (this.auth_type === 'password') {\n            this.connection.registerSASLMechanisms([Strophe.SASLAnonymous,\n                Strophe.SASLExternal,\n                Strophe.SASLMD5,\n                Strophe.SASLPlain,\n                Strophe.SASLSHA1]);\n        } else if (this.auth_type === 'x-token') {\n            this.connection.registerSASLMechanism(Strophe.SASLHOTP);\n            delete this.connection._sasl_data[\"server-signature\"];\n            utils.generateHOTP(utils.fromBase64toArrayBuffer(password), this.connection.counter).then((pass) => {\n                this.connection.hotp_pass = pass;\n            }).then(() => {\n                this.connection.connect(jid, password, callback)\n            });\n            return;\n        } else {\n            this.connection.registerSASLMechanisms([Strophe.SASLXOAuth2]);\n            delete this.connection._sasl_data[\"server-signature\"];\n        }\n        this.connection.connect(jid, password, callback);\n    },\n\n    reconnect: function (callback) {\n        if (this.auth_type === 'x-token') {\n            if (!this.connection.mechanisms[\"HOTP\"]) {\n                this.connection.registerSASLMechanism(Strophe.SASLHOTP);\n                delete this.connection._sasl_data[\"server-signature\"];\n            }\n            if (this.connection.account && this.connection.account.get('hotp_counter'))\n                this.connection.counter = this.connection.account.get('hotp_counter');\n            utils.generateHOTP(utils.fromBase64toArrayBuffer(this.connection.pass), this.connection.counter).then((pass) => {\n                this.connection.hotp_pass = pass;\n            }).then(() => {\n                this.connection.connect(this.connection.jid, this.connection.pass, callback)\n            });\n            return;\n        }\n        this.connection.connect(this.connection.jid, this.connection.pass, callback);\n    }\n};\n\n_.extend(Strophe.Connection.prototype, {\n\n    _attemptSASLAuth: function (mechanisms) {\n        mechanisms = this.sortMechanismsByPriority(mechanisms || []);\n        var i = 0, mechanism_found = false;\n        for (i = 0; i < mechanisms.length; ++i) {\n            if (!mechanisms[i].prototype.test(this)) {\n                continue;\n            }\n            this._sasl_success_handler = this._addSysHandler(\n                this._sasl_success_cb.bind(this), null,\n                \"success\", null, null);\n            this._sasl_failure_handler = this._addSysHandler(\n                this._sasl_failure_cb.bind(this), null,\n                \"failure\", null, null);\n            this._sasl_challenge_handler = this._addSysHandler(\n                this._sasl_challenge_cb.bind(this), null,\n                \"challenge\", null, null);\n\n            this._sasl_mechanism = new mechanisms[i]();\n            this._sasl_mechanism.onStart(this);\n\n            var request_auth_exchange = $build(\"auth\", {\n                xmlns: Strophe.NS.SASL,\n                mechanism: this._sasl_mechanism.name\n            });\n            if (this._sasl_mechanism.isClientFirst) {\n                var response = this._sasl_mechanism.onChallenge(this, null);\n                request_auth_exchange.t(btoa(response));\n            }\n            this.send(request_auth_exchange.tree());\n            mechanism_found = true;\n            if (this.account && this.counter && this.account.get('x_token') && this._sasl_mechanism.name === \"HOTP\") {\n                this.counter++;\n                this.account.save({\n                    hotp_counter: this.counter,\n                });\n            }\n            break;\n        }\n        return mechanism_found;\n    },\n\n    _sasl_auth1_cb: function (elem) {\n        this.features = elem;\n        let i, child;\n        for (i = 0; i < elem.childNodes.length; i++) {\n            child = elem.childNodes[i];\n            if (child.nodeName === 'bind') {\n                this.do_bind = true;\n            }\n\n            if (child.nodeName === 'session') {\n                this.do_session = true;\n            }\n\n            if ((child.nodeName === 'devices') && child.namespaceURI === Strophe.NS.AUTH_DEVICES && this.options['x-token']) {\n                this.x_token_auth = true;\n            }\n\n            if ((child.nodeName === 'synchronization') && (child.namespaceURI === Strophe.NS.SYNCHRONIZATION)) {\n                this.account.server_features.create({\n                    'var': child.namespaceURI,\n                    from: this.domain\n                });\n                this.do_synchronization = true;\n            }\n\n            if ((child.nodeName === 'sub') && (child.namespaceURI === Strophe.NS.SUBSCRIPTION_PREAPPROVAL)) {\n                this.account.server_features.create({\n                    'var': child.namespaceURI,\n                    from: this.domain\n                });\n            }\n        }\n\n        if (!this.do_bind) {\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\n            return false;\n        } else {\n            if (this.x_token_auth && (!this.x_token || (parseInt(this.x_token.expire)*1000 < env.moment.now()))) {\n                this.getXToken((success) => {\n                    let token = $(success).find('secret').text(),\n                        expires_at = $(success).find('expire').text(),\n                        token_uid = $(success).find('device').attr('id');\n                    this.x_token = {token: token, expire: expires_at, token_uid: token_uid,};\n                    this.counter = 1;\n                    this.pass = token;\n                    this._send_auth_bind();\n                    if (this.account) {\n                        this.account.save({\n                            hotp_counter: this.counter,\n                            password: null,\n                        });\n                    }\n                }, () => {\n                    this._send_auth_bind();\n                });\n            }\n            else {\n                this._send_auth_bind();\n            }\n        }\n        return false;\n    },\n\n    _send_auth_bind() {\n        this._addSysHandler(this._sasl_bind_cb.bind(this), null, null,\n            null, \"_bind_auth_2\");\n\n        let resource = Strophe.getResourceFromJid(this.jid);\n        if (resource) {\n            this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                .c('bind', {xmlns: Strophe.NS.BIND})\n                .c('resource', {}).t(resource).tree());\n        } else {\n            this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                .c('bind', {xmlns: Strophe.NS.BIND})\n                .tree());\n        }\n    },\n\n    getXToken: function (callback, errback) {\n        let uniq_id = uuid(), old_token,\n            iq = $iq({\n            type: 'set',\n            to: this.domain,\n            id: uniq_id\n        }).c('register', { xmlns: Strophe.NS.AUTH_DEVICES});\n        this.account && (old_token = this.account.get('old_device_token'));\n        if (old_token && old_token.token && old_token.token_uid){\n            iq.c('device', { xmlns: Strophe.NS.AUTH_DEVICES, id: old_token.token_uid})\n                .c('client').t(constants.CLIENT_NAME).up()\n                .c('secret').t(old_token.token).up()\n                .c('info').t(`PC, ${utils.getOS()}, ${env.utils.getBrowser()}`);\n            this.account.save('old_device_token', null);\n        } else {\n            iq.c('device', { xmlns: Strophe.NS.AUTH_DEVICES})\n                .c('client').t(constants.CLIENT_NAME).up()\n                .c('info').t(`PC, ${utils.getOS()}, ${env.utils.getBrowser()}`);\n        }\n        let handler = function (stanza) {\n            let iqtype = stanza.getAttribute('type');\n            if (iqtype == 'result') {\n                if (callback) {\n                    callback(stanza);\n                }\n            } else if (iqtype == 'error') {\n                if (errback) {\n                    errback(stanza);\n                }\n            } else {\n                throw {\n                    name: \"StropheError\",\n                    message: \"Got bad IQ type of \" + iqtype\n                };\n            }\n        };\n\n        this._addSysHandler(handler.bind(this), Strophe.NS.AUTH_DEVICES, 'iq', 'result' , uniq_id);\n\n        this.send(iq.tree());\n    }\n});\n\n_.extend(Strophe.Websocket.prototype, {\n\n    _onIdle: function () {\n        var data = this._conn._data;\n        if (data.length > 0 && !this._conn.paused) {\n            for (var i = 0; i < data.length; i++) {\n                if (data[i] !== null) {\n                    var stanza, rawStanza;\n                    if (data[i] === \"restart\") {\n                        stanza = this._buildStream().tree();\n                    } else {\n                        stanza = data[i];\n                    }\n                    rawStanza = Strophe.serialize(stanza);\n                    this._conn.xmlOutput(stanza);\n                    this._conn.rawOutput(rawStanza);\n                    if (this.socket && this.socket.readyState === 1){\n                        this.socket.send(rawStanza);\n                    } else {\n                        console.log('data went to pending');\n                        console.log(this._conn._data.slice(i));\n                        this._conn.account._pending_stanzas.push(this._conn._data.slice(i))\n                        this._conn._data = [];\n                        return;\n                    }\n                }\n            }\n            this._conn._data = [];\n        }\n    },\n});\n\nStrophe.xmlunescape = function (text) {\n    let reg_exp = {\n        '&amp;': '&',\n        '&lt;': '<',\n        '&gt;': '>',\n        '&quot;': '\"',\n        '&apos;': \"'\"\n    };\n    let escaper = function(match) {\n        return reg_exp[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    let source = '(?:' + _.keys(reg_exp).join('|') + ')',\n        testRegexp = RegExp(source),\n        replaceRegexp = RegExp(source, 'g');\n    text = text == null ? '' : '' + text;\n    return testRegexp.test(text) ? text.replace(replaceRegexp, escaper) : text;\n};\n\nStrophe.addNamespace('ATTENTION', 'urn:xmpp:attention:0');\nStrophe.addNamespace('CARBONS', 'urn:xmpp:carbons:2');\nStrophe.addNamespace('FORWARD', 'urn:xmpp:forward:0');\nStrophe.addNamespace('HASH', 'urn:xmpp:hashes:2');\nStrophe.addNamespace('HINTS', 'urn:xmpp:hints');\nStrophe.addNamespace('SCE', 'urn:xmpp:sce:1');\nStrophe.addNamespace('RECEIPTS', 'urn:xmpp:receipts');\nStrophe.addNamespace('JINGLE', 'urn:xmpp:jingle:1');\nStrophe.addNamespace('JINGLE_SECURITY_STUB', 'urn:xmpp:jingle:security:stub:0');\nStrophe.addNamespace('JINGLE_MSG', 'urn:xmpp:jingle-message:0');\nStrophe.addNamespace('JINGLE_RTP', 'urn:xmpp:jingle:apps:rtp:1');\nStrophe.addNamespace('JINGLE_TRANSPORTS_ICE', 'urn:xmpp:jingle:transports:ice-udp:1');\nStrophe.addNamespace('ADDRESS', 'http://jabber.org/protocol/address');\nStrophe.addNamespace('CHATSTATES', 'http://jabber.org/protocol/chatstates');\nStrophe.addNamespace('EXTENDED_CHATSTATES', 'https://xabber.com/protocol/extended-chatstates');\nStrophe.addNamespace('HTTP_AUTH', 'http://jabber.org/protocol/http-auth');\nStrophe.addNamespace('AUTH_TOKENS', 'https://xabber.com/protocol/auth-tokens');\nStrophe.addNamespace('AUTH_DEVICES', 'https://xabber.com/protocol/devices');\nStrophe.addNamespace('SYNCHRONIZATION', 'https://xabber.com/protocol/synchronization');\nStrophe.addNamespace('SYNCHRONIZATION_REGULAR_CHAT', 'urn:xabber:chat');\nStrophe.addNamespace('SYNCHRONIZATION_CHANNEL', 'https://xabber.com/protocol/channels');\nStrophe.addNamespace('SYNCHRONIZATION_OLD_OMEMO', 'urn:xmpp:omemo:1');\nStrophe.addNamespace('SYNCHRONIZATION_OMEMO', 'urn:xmpp:omemo:2');\nStrophe.addNamespace('XABBER_CHAT', 'urn:xabber:chat');\nStrophe.addNamespace('EXPLICIT_MESSAGE_ENCRYPTION', 'urn:xmpp:eme:0');\nStrophe.addNamespace('DELIVERY', 'https://xabber.com/protocol/delivery');\nStrophe.addNamespace('ARCHIVE', 'https://xabber.com/protocol/archive');\nStrophe.addNamespace('MAM', 'urn:xmpp:mam:2');\nStrophe.addNamespace('RSM', 'http://jabber.org/protocol/rsm');\nStrophe.addNamespace('DATAFORM', 'jabber:x:data');\nStrophe.addNamespace('CHAT_MARKERS', 'urn:xmpp:chat-markers:0');\nStrophe.addNamespace('VCARD_UPDATE', 'vcard-temp:x:update');\nStrophe.addNamespace('HTTP_UPLOAD', 'urn:xmpp:http:upload');\nStrophe.addNamespace('BLOCKING', 'urn:xmpp:blocking');\nStrophe.addNamespace('SEARCH', 'jabber:iq:search');\nStrophe.addNamespace('PRIVATE_STORAGE', 'jabber:iq:private');\nStrophe.addNamespace('MEDIA', 'urn:xmpp:media-element');\nStrophe.addNamespace('LAST', 'jabber:iq:last');\nStrophe.addNamespace('GROUP_CHAT', 'https://xabber.com/protocol/groups');\nStrophe.addNamespace('GROUP_CHAT_INVITE', 'https://xabber.com/protocol/groups#invite');\nStrophe.addNamespace('GROUP_CHAT_INVITE_HTTP', 'http://xabber.com/protocol/groups#invite');\nStrophe.addNamespace('WEBCHAT', 'https://xabber.com/protocol/webchat');\nStrophe.addNamespace('INDEX', 'https://xabber.com/protocol/index');\nStrophe.addNamespace('PUBSUB', 'http://jabber.org/protocol/pubsub');\nStrophe.addNamespace('PUBSUB_AVATAR_DATA', 'urn:xmpp:avatar:data');\nStrophe.addNamespace('PUBSUB_AVATAR_METADATA', 'urn:xmpp:avatar:metadata');\nStrophe.addNamespace('PUBSUB_AVATAR_METADATA_THUMBNAIL', 'urn:xmpp:thumbs:1');\nStrophe.addNamespace('REWRITE', 'https://xabber.com/protocol/rewrite');\nStrophe.addNamespace('REFERENCE', 'https://xabber.com/protocol/references');\nStrophe.addNamespace('GEOLOC', 'http://jabber.org/protocol/geoloc');\nStrophe.addNamespace('MARKUP', 'https://xabber.com/protocol/markup');\nStrophe.addNamespace('VOICE_MESSAGE', 'https://xabber.com/protocol/voice-messages');\nStrophe.addNamespace('FILES', 'https://xabber.com/protocol/files');\nStrophe.addNamespace('SUBSCRIPTION_PREAPPROVAL', 'urn:xmpp:features:pre-approval');\nStrophe.addNamespace('OGP', 'https://xabber.com/protocol/ogp');\nStrophe.addNamespace('URLDISCO', 'urn:xabber:http:url');\nStrophe.addNamespace('MEDIAGALLERY', 'urn:xabber:http:url:mediagallery');\nStrophe.addNamespace('EPHEMERAL', 'urn:xmpp:ephemeral:0');\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.vcard,\n    $ = env.$,\n    _ = env._,\n    moment = env.moment,\n    Strophe = env.Strophe,\n    $iq = env.$iq,\n    $build = env.$build,\n    utils = env.utils;\n\nlet xmlToObject = function ($vcard) {\n    let vcard = {\n        nickname: $vcard.find('NICKNAME').text().trim(),\n        fullname: $vcard.find('FN').text().trim(),\n        first_name: $vcard.find('N GIVEN').text().trim(),\n        middle_name: $vcard.find('N MIDDLE').text().trim(),\n        last_name: $vcard.find('N FAMILY').text().trim(),\n        birthday: $vcard.find('BDAY').text().trim(),\n        job_title: $vcard.find('TITLE').text().trim(),\n        role: $vcard.find('ROLE').text().trim(),\n        url: $vcard.find('URL').text().trim(),\n        description: $vcard.find('DESC').text().trim(),\n        jabber_id: $vcard.find('JABBERID').text().trim(),\n        org: {},\n        photo: {},\n        phone: {},\n        address: {},\n        email: {}\n    };\n\n    if ($vcard.find('X-PRIVACY').length || $vcard.find('X-MEMBERSHIP').length || $vcard.find('X-INDEX').length) {\n        vcard.group_info = {\n            jid: vcard.jabber_id,\n            description: vcard.description,\n            name: vcard.nickname,\n            anonymous: $vcard.find('X-PRIVACY').text().trim(),\n            searchable: $vcard.find('X-INDEX').text().trim(),\n            model: $vcard.find('X-MEMBERSHIP').text().trim(),\n            status_msg: $vcard.find('X-STATUS').text().trim(),\n            members_num: $vcard.find('X-MEMBERS').text().trim()\n        };\n    }\n\n    let $org = $vcard.find('ORG');\n    if ($org.length) {\n        vcard.org.name = $org.find('ORGNAME').text().trim();\n        vcard.org.unit = $org.find('ORGUNIT').text().trim();\n    }\n\n    let $photo = $vcard.find('PHOTO');\n    if ($photo.length) {\n        vcard.photo.image = $photo.find('BINVAL').text().trim();\n        vcard.photo.type = $photo.find('TYPE').text().trim();\n    }\n\n    $vcard.find('TEL').each(function () {\n        let $this = $(this),\n            number = $this.find('NUMBER').text().trim();\n        if (!number) {\n            return;\n        }\n        if ($this.find('WORK').length) {\n            vcard.phone.work = number;\n        } else if ($this.find('HOME').length) {\n            vcard.phone.home = number;\n        } else if ($this.find('MOBILE').length) {\n            vcard.phone.mobile = number;\n        } else {\n            vcard.phone.default = number;\n        }\n    });\n\n    $vcard.find('EMAIL').each(function () {\n        let $this = $(this);\n        let email = $this.find('USERID').text().trim();\n        if (!email) {\n            return;\n        }\n        if ($this.find('WORK').length) {\n            vcard.email.work = email;\n        } else if ($this.find('HOME').length) {\n            vcard.email.home = email;\n        } else {\n            vcard.email.default = email;\n        }\n    });\n\n    $vcard.find('ADR').each(function () {\n        let $this = $(this);\n        let address = {\n            pobox: $this.find('POBOX').text().trim(),\n            extadd: $this.find('EXTADR').text().trim(),\n            street: $this.find('STREET').text().trim(),\n            locality: $this.find('LOCALITY').text().trim(),\n            region: $this.find('REGION').text().trim(),\n            pcode: $this.find('PCODE').text().trim(),\n            country: $this.find('CTRY').text().trim()\n        };\n        if ($this.find('WORK').length) {\n            vcard.address.work = address;\n        } else if ($this.find('HOME').length) {\n            vcard.address.home = address;\n        } else {\n            vcard.address.default = address;\n        }\n    });\n\n    return vcard;\n};\n\nlet objectToXml = function (vcard) {\n    let $vcard = $build(\"vCard\", {xmlns: Strophe.NS.VCARD});\n    vcard.nickname && $vcard.c(\"NICKNAME\").t(vcard.nickname).up();\n    vcard.fullname && $vcard.c(\"FN\").t(vcard.fullname).up();\n    if (vcard.first_name || vcard.last_name || vcard.middle_name) {\n        $vcard.c(\"N\");\n        vcard.first_name && $vcard.c(\"GIVEN\").t(vcard.first_name).up();\n        vcard.last_name && $vcard.c(\"FAMILY\").t(vcard.last_name).up();\n        vcard.middle_name && $vcard.c(\"MIDDLE\").t(vcard.middle_name).up();\n        $vcard.up();\n    }\n    vcard.birthday && $vcard.c(\"BDAY\").t(vcard.birthday).up();\n    vcard.job_title && $vcard.c(\"TITLE\").t(vcard.job_title).up();\n    vcard.role && $vcard.c(\"ROLE\").t(vcard.role).up();\n    if (vcard.org.name || vcard.org.unit) {\n        $vcard.c(\"ORG\");\n        vcard.org.name && $vcard.c(\"ORGNAME\").t(vcard.org.name).up();\n        vcard.org.unit && $vcard.c(\"ORGUNIT\").t(vcard.org.unit).up();\n        $vcard.up();\n    }\n    vcard.url && $vcard.c(\"URL\").t(vcard.url).up();\n    if (vcard.photo.image) {\n        $vcard.c(\"PHOTO\").c(\"BINVAL\").t(vcard.photo.image).up();\n        $vcard.c(\"TYPE\").t(vcard.photo.type || 'image/jpeg').up();\n        $vcard.up();\n    }\n    vcard.description && $vcard.c(\"DESC\").t(vcard.description).up();\n    vcard.jabber_id && $vcard.c(\"JABBERID\").t(vcard.jabber_id).up();\n\n    _.each(vcard.phone, function (phone, type) {\n        $vcard.c(\"TEL\").c(\"NUMBER\").t(phone).up();\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        $vcard.up();\n    });\n\n    _.each(vcard.email, function (email, type) {\n        $vcard.c(\"EMAIL\").c(\"USERID\").t(email).up();\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        $vcard.up();\n    });\n\n    _.each(vcard.address, function (address, type) {\n        $vcard.c(\"ADR\");\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        address.pobox && $vcard.c(\"POBOX\").t(address.pobox).up();\n        address.extadd && $vcard.c(\"EXTADR\").t(address.extadd).up();\n        address.street && $vcard.c(\"STREET\").t(address.street).up();\n        address.locality && $vcard.c(\"LOCALITY\").t(address.locality).up();\n        address.region && $vcard.c(\"REGION\").t(address.region).up();\n        address.pcode && $vcard.c(\"PCODE\").t(address.pcode).up();\n        address.country && $vcard.c(\"CTRY\").t(address.country).up();\n        $vcard.up();\n    });\n\n    return $vcard.tree();\n};\n\nStrophe.addConnectionPlugin('vcard', {\n    _connection: null,\n\n    init: function(conn) {\n        this._connection = conn;\n        return Strophe.addNamespace('VCARD', 'vcard-temp');\n    },\n\n    get: function(jid, callback, errback) {\n        let iq = $iq({type: 'get', to: jid}).c('vCard', {xmlns: Strophe.NS.VCARD});\n        this._connection.sendIQ(iq, function (res) {\n            if (!callback) { return; }\n            let vcard = xmlToObject($(res).find('vCard[xmlns='+Strophe.NS.VCARD+']'));\n            vcard.jabber_id || (vcard.jabber_id = jid);\n            return callback(vcard);\n        }, errback);\n    },\n\n    set: function(jid, vcard, callback, errback) {\n        vcard.jabber_id || (vcard.jabber_id = jid);\n        let iq = $iq({type: 'set', to: jid}).cnode(objectToXml(vcard));\n        this._connection.sendIQ(iq, callback, errback);\n    }\n});\n\nutils.vcard = {\n    getBlank: function (jid) {\n        let vcard = xmlToObject($('<div/>'));\n        vcard.jabber_id = jid;\n        return vcard;\n    }\n};\n\nxabber.VCardView = xabber.BasicView.extend({\n    template: templates.vcard,\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.model.on(\"change:vcard_updated\", this.update, this);\n        this.data.on(\"change:refresh\", this.updateRefreshButton, this);\n    },\n\n    render: function () {\n        this.$('.block-header .block-name').text(this.model.get('group_chat') ? 'Group chat details' : xabber.getString(\"vcard_screen__header\"));\n        this.data.set('refresh', false);\n        this.model.getVCard(() => {\n            this.update();\n        });\n    },\n\n    update: function () {\n        let $info, vcard = this.model.get('vcard');\n\n        $info = this.$('.jid-info-wrap');\n        $info.find('.jabber-id').showIf(vcard.jabber_id).find('.value').text(vcard.jabber_id);\n        $info.showIf(vcard.jabber_id);\n\n        $info = this.$('.personal-info-wrap');\n        $info.find('.fullname').showIf(vcard.fullname).find('.value').text(vcard.fullname);\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.middle-name').showIf(vcard.middle_name).find('.value').text(vcard.middle_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.fullname || vcard.first_name || vcard.middle_name || vcard.last_name);\n\n        $info = this.$('.nickname-info-wrap');\n        $info.find('.nickname').showIf(vcard.nickname).find('.value').text(vcard.nickname);\n        $info.showIf(vcard.nickname);\n\n        $info = this.$('.birthday-info-wrap');\n        $info.find('.birthday').showIf(vcard.birthday).find('.value').text(vcard.birthday);\n        $info.showIf(vcard.birthday);\n\n        $info = this.$('.job-info-wrap');\n        $info.find('.role').showIf(vcard.role).find('.value').text(vcard.role);\n        $info.find('.job-title').showIf(vcard.job_title).find('.value').text(vcard.job_title);\n        $info.find('.org-name').showIf(vcard.org.name).find('.value').text(vcard.org.name);\n        $info.find('.org-unit').showIf(vcard.org.unit).find('.value').text(vcard.org.unit);\n        $info.showIf(vcard.role || vcard.job_title || vcard.org.name || vcard.org.unit);\n\n        $info = this.$('.site-info-wrap');\n        $info.find('.url').showIf(vcard.url).find('.value').text(vcard.url).hyperlinkify();\n        $info.showIf(vcard.url);\n\n        $info = this.$('.description-info-wrap');\n        $info.find('.description').showIf(vcard.description).find('.value').text(vcard.description);\n        $info.showIf(vcard.description);\n\n        let $addr_info = this.$('.address-info-wrap'),\n            address = _.clone(vcard.address),\n            show_addr_block = false;\n        $addr_info.find('.info').addClass('hidden');\n        _.each(address, function (addr, type) {\n            $info = $addr_info.find('.address-'+type);\n            $info.find('.pobox').showIf(addr.pobox).text(addr.pobox);\n            $info.find('.extadd').showIf(addr.extadd).text(addr.extadd);\n            $info.find('.street').showIf(addr.street).text(addr.street);\n            $info.find('.locality').showIf(addr.locality).text(addr.locality);\n            $info.find('.region').showIf(addr.region).text(addr.region);\n            $info.find('.pcode').showIf(addr.pcode).text(addr.pcode);\n            $info.find('.country').showIf(addr.country).text(addr.country);\n            let show = (addr.pobox || addr.extadd || addr.street || addr.locality ||\n                         addr.region || addr.pcode || addr.country);\n            show && (show_addr_block = true);\n            $info.showIf(show);\n        });\n        $addr_info.showIf(show_addr_block);\n\n        $info = this.$('.phone-info-wrap');\n        let phone = vcard.phone;\n        if (phone) {\n            $info.find('.phone-work').showIf(phone.work).find('.value').text(phone.work);\n            $info.find('.phone-home').showIf(phone.home).find('.value').text(phone.home);\n            $info.find('.phone-mobile').showIf(phone.mobile).find('.value').text(phone.mobile);\n            $info.find('.phone-default').showIf(phone.default).find('.value').text(phone.default);\n        }\n        $info.showIf(phone && (phone.work || phone.home || phone.mobile || phone.default));\n\n        $info = this.$('.email-info-wrap');\n        let email = vcard.email;\n        if (email) {\n            $info.find('.email-work').showIf(email.work).find('.value').text(email.work);\n            $info.find('.email-home').showIf(email.home).find('.value').text(email.home);\n            $info.find('.email-default').showIf(email.default).find('.value').text(email.default);\n        }\n        $info.showIf(email && (email.work || email.home || email.default));\n\n        this.parent.updateScrollBar();\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target).closest('.info-wrap'),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n    updateRefreshButton: function () {\n        this.$('.btn-vcard-refresh .button').hideIf(this.data.get('refresh'));\n        this.$('.btn-vcard-refresh .preloader-wrapper').showIf(this.data.get('refresh'));\n    },\n\n    refresh: function () {\n        if (!this.data.get('refresh')) {\n            this.data.set('refresh', true);\n            this.model.getVCard(() => {\n                this.data.set('refresh', false);\n            });\n        }\n    }\n});\n\nxabber.VCardRightView = xabber.VCardView.extend({\n    template: templates.vcard_right,\n\n    __initialize: function (ev) {\n        this.ps_container = this.$('.full-vcard-content');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.set('vcard_hidden', true)\n    },\n\n    render: function () {\n        this.data.set('refresh', false);\n        this.update();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        if (this.parent.ps_container.length) {\n            if(!this.model.get('vcard_hidden'))\n                this.parent.ps_container.perfectScrollbar('destroy')\n            else\n                this.parent.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n        }\n        this.model.updateName();\n        this.model.updateAvatar();\n        this.model.getVCard(() => {\n            this.update();\n        });\n    },\n\n    update: function () {\n        let $info, vcard = this.model.get('vcard');\n\n        $info = this.$('.jid-info-wrap');\n        $info.find('.jabber-id').showIf(vcard.jabber_id).find('.value').text(vcard.jabber_id);\n        $info.showIf(vcard.jabber_id);\n\n        $info = this.$('.vcard-wrap .personal-info-wrap');\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.first_name || vcard.last_name);\n\n        $info = this.$('.full-vcard-wrap .personal-info-wrap');\n        $info.find('.fullname').showIf(vcard.fullname).find('.value').text(vcard.fullname);\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.middle-name').showIf(vcard.middle_name).find('.value').text(vcard.middle_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.fullname || vcard.first_name || vcard.middle_name || vcard.last_name);\n\n        $info = this.$('.nickname-info-wrap');\n        $info.find('.nickname').showIf(vcard.nickname).find('.value').text(vcard.nickname);\n        $info.showIf(vcard.nickname);\n\n        $info = this.$('.birthday-info-wrap');\n        $info.find('.birthday').showIf(vcard.birthday).find('.value').text(vcard.birthday);\n        $info.showIf(vcard.birthday);\n\n        $info = this.$('.job-info-wrap');\n        $info.find('.role').showIf(vcard.role).find('.value').text(vcard.role);\n        $info.find('.job-title').showIf(vcard.job_title).find('.value').text(vcard.job_title);\n        $info.find('.org-name').showIf(vcard.org.name).find('.value').text(vcard.org.name);\n        $info.find('.org-unit').showIf(vcard.org.unit).find('.value').text(vcard.org.unit);\n        $info.showIf(vcard.role || vcard.job_title || vcard.org.name || vcard.org.unit);\n\n        $info = this.$('.site-info-wrap');\n        $info.find('.url').showIf(vcard.url).find('.value').text(vcard.url).hyperlinkify();\n        $info.showIf(vcard.url);\n\n        $info = this.$('.description-info-wrap');\n        $info.find('.description').showIf(vcard.description).find('.value').text(vcard.description);\n        $info.showIf(vcard.description);\n\n        let $addr_info = this.$('.address-info-wrap'),\n            address = _.clone(vcard.address),\n            show_addr_block = false;\n        $addr_info.find('.info').addClass('hidden');\n        _.each(address, function (addr, type) {\n            $info = $addr_info.find('.address-'+type);\n            $info.find('.pobox').showIf(addr.pobox).text(addr.pobox);\n            $info.find('.extadd').showIf(addr.extadd).text(addr.extadd);\n            $info.find('.street').showIf(addr.street).text(addr.street);\n            $info.find('.locality').showIf(addr.locality).text(addr.locality);\n            $info.find('.region').showIf(addr.region).text(addr.region);\n            $info.find('.pcode').showIf(addr.pcode).text(addr.pcode);\n            $info.find('.country').showIf(addr.country).text(addr.country);\n            let show = (addr.pobox || addr.extadd || addr.street || addr.locality ||\n                addr.region || addr.pcode || addr.country);\n            show && (show_addr_block = true);\n            $info.showIf(show);\n        });\n        $addr_info.showIf(show_addr_block);\n\n        $info = this.$('.phone-info-wrap');\n        let phone = vcard.phone;\n        if (phone) {\n            $info.find('.phone-work').showIf(phone.work).find('.value').text(phone.work);\n            $info.find('.phone-home').showIf(phone.home).find('.value').text(phone.home);\n            $info.find('.phone-mobile').showIf(phone.mobile).find('.value').text(phone.mobile);\n            $info.find('.phone-default').showIf(phone.default).find('.value').text(phone.default);\n        }\n        $info.showIf(phone && (phone.work || phone.home || phone.mobile || phone.default));\n\n        $info = this.$('.email-info-wrap');\n        let email = vcard.email;\n        if (email) {\n            $info.find('.email-work').showIf(email.work).find('.value').text(email.work);\n            $info.find('.email-home').showIf(email.home).find('.value').text(email.home);\n            $info.find('.email-default').showIf(email.default).find('.value').text(email.default);\n        }\n        $info.showIf(email && (email.work || email.home || email.default));\n\n        this.parent.updateScrollBar();\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.vcard-header-title').addClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n        }\n        else {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        }\n\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n});\n\nxabber.VCardEditModalView = xabber.BasicView.extend({\n    className: 'account-vcard-edit-modal-wrap account-vcard-edit-wrap',\n    template: templates.vcard_edit_modal,\n    ps_selector: '.panel-content',\n\n    events: {\n        \"keyup input\": \"keyUp\",\n        \"keyup textarea\": \"keyUp\",\n        \"input .first-name input\": \"changePlaceholder\",\n        \"input .middle-name input\": \"changePlaceholder\",\n        \"input .last-name input\": \"changePlaceholder\",\n        \"click .btn-vcard-save\": \"save\",\n    },\n\n    _initialize: function () {\n        let self = this,\n            $input = this.$('.datepicker').pickadate({\n            selectMonths: true,\n            selectYears: 100,\n            autoOk: false,\n            // min = 100 years ago\n            min: new Date(moment.now() - 3153600000000),\n            max: new Date(moment.now() - 86400000),\n            format: 'dd.mm.yyyy',\n            allowKeyboardControl: false,\n            today: '',\n            onClose: function(){\n                $(document.activeElement).blur();\n                self.$('.btn-vcard-back').removeClass('hidden');\n                self.$('.btn-vcard-save').removeClass('hidden');\n            },\n            klass: {\n                weekday_display: 'picker__weekday-display ground-color-700',\n                date_display: 'picker__date-display ground-color-500',\n                navPrev: 'picker__nav--prev hover-ground-color-100',\n                navNext: 'picker__nav--next hover-ground-color-100',\n                selected: 'picker__day--selected ground-color-500',\n                now: 'picker__day--today text-color-700',\n                buttonClear: 'btn-flat btn-main btn-dark',\n                buttonClose: 'btn-flat btn-main text-color-700'\n            }\n        });\n        $input.on('mousedown', function cancelEvent(evt) {\n            evt.preventDefault();\n        });\n        this.data.on(\"change:saving\", this.updateSaveButton, this);\n    },\n\n    render: function (options) {\n        options.$el.html('');\n        options.$el.append(this.$el);\n        this.data.set('saving', false);\n        this.setData();\n        Materialize.updateTextFields();\n        this.changePlaceholder();\n        this.updateScrollBar();\n        this.$('.btn-vcard-save').addClass('hidden');\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    changePlaceholder: function () {\n        let nickname_placeholder = ((this.$('.first-name input').val() + \" \" + this.$('.middle-name input').val()).trim() + \" \" + this.$('.last-name input').val()).trim() || this.model.get('jid');\n        this.$('.nickname input').attr('placeholder', nickname_placeholder);\n    },\n\n    setData: function () {\n        let vcard = this.model.get('vcard');\n\n        this.$('.nickname input').val(vcard.nickname);\n        this.$('.fullname input').val(vcard.fullname);\n        this.$('.first-name input').val(vcard.first_name);\n        this.$('.last-name input').val(vcard.last_name);\n        this.$('.middle-name input').val(vcard.middle_name);\n\n        this.$('.birthday input').val(vcard.birthday);\n\n        this.$('.role input').val(vcard.role);\n        this.$('.job-title input').val(vcard.job_title);\n        this.$('.org-name input').val(vcard.org.name);\n        this.$('.org-unit input').val(vcard.org.unit);\n\n        this.$('.url input').val(vcard.url);\n\n        this.$('.description textarea').val(vcard.description);\n\n        this.$('.phone-work input').val(vcard.phone.work);\n        this.$('.phone-home input').val(vcard.phone.home);\n        this.$('.phone-mobile input').val(vcard.phone.mobile);\n\n        this.$('.email-work input').val(vcard.email.work);\n        this.$('.email-home input').val(vcard.email.home);\n\n        let addr = vcard.address.work || {},\n            $info = this.$('.address-work-wrap');\n        $info.find('.pobox input').val(addr.pobox);\n        $info.find('.extadd input').val(addr.extadd);\n        $info.find('.street input').val(addr.street);\n        $info.find('.locality input').val(addr.locality);\n        $info.find('.region input').val(addr.region);\n        $info.find('.pcode input').val(addr.pcode);\n        $info.find('.country input').val(addr.country);\n\n        addr = vcard.address.home || {};\n        $info = this.$('.address-home-wrap');\n        $info.find('.pobox input').val(addr.pobox);\n        $info.find('.extadd input').val(addr.extadd);\n        $info.find('.street input').val(addr.street);\n        $info.find('.locality input').val(addr.locality);\n        $info.find('.region input').val(addr.region);\n        $info.find('.pcode input').val(addr.pcode);\n        $info.find('.country input').val(addr.country);\n    },\n\n    getData: function () {\n        let vcard = utils.vcard.getBlank(this.model.get('jid'));\n\n        vcard.nickname = this.$('.nickname input').val();\n        vcard.fullname = this.$('.fullname input').val();\n        vcard.first_name = this.$('.first-name input').val();\n        vcard.last_name = this.$('.last-name input').val();\n        vcard.middle_name = this.$('.middle-name input').val();\n\n        vcard.birthday = this.$('.birthday input').val();\n\n        vcard.role = this.$('.role input').val();\n        vcard.job_title = this.$('.job-title input').val();\n        vcard.org.name = this.$('.org-name input').val();\n        vcard.org.unit = this.$('.org-unit input').val();\n\n        vcard.url = this.$('.url input').val();\n\n        vcard.description = this.$('.description textarea').val();\n\n        vcard.phone.work = this.$('.phone-work input').val();\n        vcard.phone.home = this.$('.phone-home input').val();\n        vcard.phone.mobile = this.$('.phone-mobile input').val();\n\n        vcard.email.work = this.$('.email-work input').val();\n        vcard.email.home = this.$('.email-home input').val();\n\n        vcard.address.work = {};\n        let addr = vcard.address.work,\n            $info = this.$('.address-work-wrap');\n        addr.pobox = $info.find('.pobox input').val();\n        addr.extadd = $info.find('.extadd input').val();\n        addr.street = $info.find('.street input').val();\n        addr.locality = $info.find('.locality input').val();\n        addr.region = $info.find('.region input').val();\n        addr.pcode = $info.find('.pcode input').val();\n        addr.country = $info.find('.country input').val();\n\n        vcard.address.home = {};\n        addr = vcard.address.home;\n        $info = this.$('.address-home-wrap');\n        addr.pobox = $info.find('.pobox input').val();\n        addr.extadd = $info.find('.extadd input').val();\n        addr.street = $info.find('.street input').val();\n        addr.locality = $info.find('.locality input').val();\n        addr.region = $info.find('.region input').val();\n        addr.pcode = $info.find('.pcode input').val();\n        addr.country = $info.find('.country input').val();\n        return vcard;\n    },\n\n    updateSaveButton: function () {\n        this.$('.btn-vcard-save').text(this.data.get('saving') ? xabber.getString(\"saving\") : xabber.getString(\"vcard_edit__button_save\"));\n    },\n\n    save: function () {\n        if (this.data.get('saving')) {\n            return;\n        }\n        this.data.set('saving', true);\n        this.model.setVCard(this.getData(),\n            () => {\n                this.model.getVCard();\n                this.data.set('saving', false);\n                this.$('.btn-vcard-back').addClass('hidden');\n                this.$('.btn-vcard-save').addClass('hidden');\n            },\n            function () {\n                utils.dialogs.error(xabber.getString(\"account_user_info_save_fail\"));\n                this.data.set('saving', false);\n            }\n        );\n    },\n\n    keyUp: function () {\n        this.$('.btn-vcard-back').removeClass('hidden');\n        this.$('.btn-vcard-save').removeClass('hidden');\n    },\n});\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.accounts,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $pres = env.$pres,\n    uuid = env.uuid,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    Images = utils.images,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')},\n    pretty_datetime_date = (timestamp) => { return utils.pretty_datetime(timestamp, 'MMM DD, YYYY')};\n\n\nxabber.Account = Backbone.Model.extend({\n        idAttribute: 'jid',\n\n        defaults: () => {\n            return {\n                enabled: true,\n                auth_type: \"password\",\n                status: \"online\",\n                status_message: \"\",\n                priority: 67,\n                auto_login_xa: false,\n                account_unique_id: uuid().substring(0, 8),\n                groupchat_servers_list: []\n            }\n        },\n\n        initialize: function (_attrs, options) {\n            this.retraction_version = null;\n            options || (options = {});\n            if (_attrs.is_new && !options.auth_view) {\n                this.is_invalid = true;\n                this.on(\"destroy\", this.onDestroy, this);\n                return;\n            }\n            this.last_msg_timestamp = 0;\n            this.settings = xabber.account_settings_list.get(_attrs.jid);\n            if (!this.settings) {\n                this.settings = xabber.account_settings_list.create({\n                    jid: _attrs.jid,\n                    timestamp: utils.now(),\n                });\n            }\n            let settings = _.clone(this.settings.attributes);\n            settings.color || (settings.color = this.collection.getDefaultColor());\n            settings.order || (settings.order = this.collection.getLastOrder() + 1);\n            this.settings.save(settings);\n            this.settings.on(\"delete_account\", this.deleteAccount, this);\n            let attrs = _.clone(_attrs);\n            attrs.name || (attrs.name = attrs.jid);\n            attrs.image || (attrs.image = Images.getDefaultAvatar(attrs.name));\n            this.cached_image = Images.getCachedImage(attrs.image);\n            attrs.vcard = utils.vcard.getBlank(attrs.jid);\n            attrs.photo_hash = '';\n            this.save(attrs);\n            this.auth_view = options.auth_view || null;\n            this.session = new Backbone.Model({\n                connected: false,\n                reconnected: false,\n                ready_to_send: false,\n                conn_retries: 0,\n                conn_feedback: xabber.getString(\"connection__error__text_disconnected\")\n            });\n            this._waiting_code = false;\n            this.code_requests = [];\n            this.gallery_code_requests = [];\n            this.xabber_auth = {};\n            this.session.on(\"change:connected\", this.onChangedConnected, this);\n            this.CONNECTION_URL = _attrs.websocket_connection_url || constants.CONNECTION_URL;\n            this.conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL, {'x-token': true});\n            this.connection = this.conn_manager.connection;\n            this.get('x_token') && (this.connection.x_token = this.get('x_token'));\n            if (this.connection.x_token && this.connection.x_token.counter && !this.get('hotp_counter'))\n                this.save({\n                    hotp_counter: this.connection.x_token.counter,\n                });\n            this.get('hotp_counter') && (this.connection.counter = this.get('hotp_counter'));\n            this.on(\"destroy\", this.onDestroy, this);\n            this._added_pres_handlers = [];\n            this._pending_stanzas = [];\n            this._pending_messages = [];\n            this.dfd_presence = new $.Deferred();\n            this.resources = new xabber.AccountResources(null, {account: this});\n            this.password_view = new xabber.ChangePasswordView({model: this});\n            this.updateColorScheme();\n            this.settings.on(\"change:color\", this.updateColorScheme, this);\n            this.on(\"change:photo_hash\", this.getVCard, this);\n            _.each(this._init_plugins, (plugin) => {\n                plugin.call(this);\n            });\n            this.connection.xmlInput = function (xml) {\n                xabber.info('input main connection');\n                xabber.info(xml);\n            };\n            this.connection.xmlOutput = function (xml) {\n                xabber.info('output main connection');\n                xabber.info(xml);\n            };\n            this.once(\"start\", this.start, this);\n            xabber.on(\"start_accounts\", () => {\n                this.trigger('start');\n            }, this);\n        },\n\n        start: function () {\n            this.get('enabled') && this.isOnline() && this.connect();\n        },\n\n        _init_plugins: [],\n\n        getPassword: function () {\n            try {\n                return utils.atou(this.get('password'));\n            } catch (e) {\n                return '';\n            }\n        },\n\n        isConnected: function () {\n            return this.session && this.session.get('connected');\n        },\n\n        isReconnecting: function () {\n            return this.session && this.session.get('reconnecting');\n        },\n\n        isOnline: function () {\n            return this.get('status') !== 'offline';\n        },\n\n        sendMsg: function (stanza, callback) {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.session.get('ready_to_send') && this.get('status') !== 'offline';\n            if (res) {\n                this.connection.send(stanza);\n            }\n            callback && callback();\n            return res;\n        },\n\n        sendMsgPending: function (stanza) {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline';\n            if (res) {\n                this.connection.send(stanza);\n            }\n            return res;\n        },\n\n        sendMsgFast: function (stanza, callback) {\n            return this.sendMsg(stanza, callback);\n        },\n\n        getConnectionForIQ: function () {\n            let res = this.fast_connection && !this.fast_connection.disconnecting && this.fast_connection.authenticated && this.fast_connection.connected && this.get('status') !== 'offline';\n            if (res) {\n                return this.fast_connection;\n            } else\n                return this.connection;\n        },\n\n        sendIQFast: function () {\n            let res = this.fast_connection && !this.fast_connection.disconnecting && this.fast_connection.authenticated && this.fast_connection.connected && this.get('status') !== 'offline';\n            if (res) {\n                this.fast_connection.sendIQ.apply(this.fast_connection, arguments);\n                return res;\n            } else\n                return this.sendIQ.apply(this, arguments);\n        },\n\n        sendFast: function (stanza, callback, errback) {\n            if ($(stanza.nodeTree).first().is('message')) {\n                this.sendMsgFast(stanza, callback);\n            } else {\n                this.sendIQFast(stanza, callback, errback);\n            }\n        },\n\n        pubAvatar: function (image, callback, errback) {\n            if (!image) {\n                this.removeAvatar(callback, errback);\n                return;\n            }\n            let dfd = new $.Deferred();\n\n            dfd.done((data, http_avatar) => {\n                if (http_avatar) {\n                    let avatar_hash = data.hash || image.hash || sha1(image.base64),\n                        iq_pub_metadata = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('item', {id: avatar_hash})\n                            .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('info', {bytes: data.size, id: avatar_hash, type: data.type, url: data.file});\n                    data.thumbnails && data.thumbnails.forEach((thumbnail) => {\n                        iq_pub_metadata.c('thumbnail', {\n                            xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA_THUMBNAIL,\n                            url: thumbnail.url,\n                            width: thumbnail.width,\n                            height: thumbnail.height,\n                        }).up()\n                    })\n                    this.sendIQFast(iq_pub_metadata, () => {\n                            callback && callback(avatar_hash);\n                        },\n                        function (data_error) {\n                            errback && errback(data_error);\n                        });\n                }\n                else {\n                    let avatar_hash = image.hash || sha1(image.base64),\n                        iq_pub_data = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_DATA})\n                            .c('item', {id: avatar_hash})\n                            .c('data', {xmlns: Strophe.NS.PUBSUB_AVATAR_DATA}).t(data),\n                        iq_pub_metadata = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('item', {id: avatar_hash})\n                            .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('info', {bytes: image.size, id: avatar_hash, type: image.type});\n                    this.sendIQFast(iq_pub_data, () => {\n                            this.sendIQFast(iq_pub_metadata, () => {\n                                    callback && callback(avatar_hash);\n                                },\n                                function (data_error) {\n                                    errback && errback(data_error);\n                                });\n                        },\n                        (data_error) => {\n                            errback && errback(data_error);\n                        });\n                }\n            });\n            if (image.uploaded){\n                dfd.resolve(image, true)\n            }\n            else if (this.get('gallery_token') && this.get('gallery_url') && !image.generated && !image.uploaded){\n                let file = image.name ? image : image.file;\n                this.uploadAvatar(file, (res) => {\n                    if (res.thumbnails && res.thumbnails.length || res.file){\n                        res.type = file.type;\n                        dfd.resolve(res, true)\n                    } else\n                        dfd.resolve(image.base64)\n                }, (res) => {\n                    dfd.resolve(image.base64)\n                });\n            } else\n                dfd.resolve(image.base64)\n        },\n\n        removeAvatar: function (callback, errback) {\n            let iq_pub_metadata = $iq({type: 'set'})\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                .c('item')\n                .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA});\n            this.sendIQFast(iq_pub_metadata, () => {\n                    callback && callback();\n                },\n                function () {\n                    errback && errback();\n                });\n        },\n\n        getAvatar: function (avatar, callback, errback) {\n            let iq_request_avatar = $iq({type: 'get', to: this.get('jid')})\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('items', {node: Strophe.NS.PUBSUB_AVATAR_DATA})\n                .c('item', {id: avatar});\n            this.sendIQFast(iq_request_avatar, (iq) => {\n                let pubsub_avatar = $(iq).find('data').text();\n                if (pubsub_avatar == \"\")\n                    errback && errback(xabber.getString(\"pubsub__error__text_empty_node\"));\n                else\n                    callback && callback(pubsub_avatar);\n            });\n        },\n\n        sendIQ: function () {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline';\n            if (res) {\n                let elem = arguments[0];\n                if (typeof(elem.tree) === \"function\" && elem.tree().getAttribute('type') == 'get') {\n                    let lang = xabber.settings.language;\n                    (lang == 'default') && (lang = xabber.get('default_language'));\n                    elem.tree().setAttribute('xml:lang', lang);\n                }\n                this.connection.sendIQ.apply(this.connection, arguments);\n            } else {\n                if (!(arguments[0] && $(arguments[0].nodeTree).find('query[xmlns=\"' + Strophe.NS.MAM + '\"]').length)) {\n                    this._pending_stanzas.push({stanza: arguments, is_iq: true});\n                }\n            }\n            return res;\n        },\n\n        parseDataForm: function ($dataform, options) {\n            options = options || {};\n            let type = $dataform.attr('type'),\n                title = $dataform.children('title').text(),\n                instructions = $dataform.children('instructions').text(),\n                fields = [],\n                data_form = {};\n            $dataform.children('field').each((idx, field) => {\n                let $field = $(field),\n                    attrs = {},\n                    field_var = $field.attr('var'),\n                    field_type = $field.attr('type'),\n                    field_label = $field.attr('label'),\n                    field_value = [], field_options = [];\n                $field.children('value').each((i, value) => {\n                    field_value.push($(value).text());\n                });\n                $field.children('option').each((i, option) => {\n                    let $option = $(option),\n                        val = $option.children('value').text(),\n                        lbl = $option.attr('label');\n                    field_options.push({value: val, label: lbl});\n                });\n                field_var && (attrs.var = field_var);\n                field_type && (attrs.type = field_type);\n                field_label && (attrs.label = field_label);\n                field_value.length && (attrs.values = field_value);\n                field_options.length && (attrs.options = field_options);\n                fields.push(attrs);\n            });\n            type && (data_form.type = type);\n            title && (data_form.title = title);\n            instructions && (data_form.instructions = instructions);\n            fields.length && (data_form.fields = fields);\n            return data_form;\n        },\n\n        addDataFormToStanza: function ($stanza, data_form) {\n            $stanza.c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'});\n            data_form.title && $stanza.c('title').t(data_form.title).up();\n            data_form.instructions && $stanza.c('instructions').t(data_form.instructions).up();\n            data_form.fields.forEach((field) => {\n                let field_attrs = _.clone(field);\n                delete field_attrs.values;\n                delete field_attrs.options;\n                $stanza.c('field', field_attrs);\n                field.values && field.values.forEach((value) => {\n                    $stanza.c('value').t(value).up();\n                });\n                $stanza.up();\n            });\n            return $stanza;\n        },\n\n        sendPres: function (stanza) {\n            if (this.connection.authenticated && this.session.get('connected')) {\n                this.connection.send(stanza);\n            } else {\n                this._pending_stanzas.push({stanza: stanza});\n            }\n            return this.connection.authenticated;\n        },\n\n        createFastConnection: function () {\n            let jid = this.get('jid'),\n                auth_type = this.conn_manager.auth_type,\n                password;\n            if (auth_type === 'token') {\n                password = this.settings.get('token');\n            } else if (auth_type === 'x-token') {\n                if (this.get('x_token') && (Number(this.get('x_token').expire)*1000 > moment.now() || !this.get('x_token').expire))\n                    password = this.get('x_token').token;\n                else\n                    password = undefined;\n            } else {\n                password = this.getPassword();\n            }\n            if (!password) {\n                let attrs = {login: true};\n                options.token_invalidated && (attrs.token_invalidated = true);\n                this.password_view.show(attrs);\n                return;\n            }\n            if (!this.fast_conn_manager) {\n                this.fast_conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL);\n                this.fast_connection = this.fast_conn_manager.connection;\n                this.fast_connection.account = this;\n                this.fast_connection.xmlInput = function (xml) {\n                    xabber.info('input fast connection');\n                    xabber.info(xml);\n                };\n                this.fast_connection.xmlOutput = function (xml) {\n                    xabber.info('output fast connection');\n                    xabber.info(xml);\n                };\n            } else{\n                this.fast_connection.disconnect();\n                return this.createFastConnection();\n            }\n            if (auth_type === 'x-token' && this.fast_connection) {\n                this.fast_connection.x_token = this.get('x_token');\n                this.fast_connection.counter = this.get('hotp_counter');\n                this.fast_connection.x_token_auth = true;\n            }\n            this.fast_conn_manager.connect(auth_type, jid, password, this.onFastConnected.bind(this));\n        },\n\n        connect: function (options) {\n            options = options || {};\n            let jid = this.get('jid'),\n                auth_type = this.get('auth_type'),\n                password;\n            jid += '/' + constants.CLIENT_RESOURCE + '-' + xabber.get('client_id');\n            this.connection.x_token = this.get('x_token');\n            this.connection.counter = this.get('hotp_counter');\n            this.connection.account = this;\n            if (this.connection.x_token && !this.connection.counter)\n                this.connection.counter = 0;\n            if (auth_type === 'token') {\n                password = this.settings.get('token');\n            } else if (auth_type === 'x-token') {\n                if (this.get('x_token') && (Number(this.get('x_token').expire)*1000 > moment.now() || !this.get('x_token').expire))\n                    password = this.get('x_token').token;\n                else\n                    password = undefined;\n            } else {\n                password = this.getPassword();\n            }\n            if (!password) {\n                let attrs = {login: true};\n                options.token_invalidated && (attrs.token_invalidated = true);\n                this.password_view.show(attrs);\n                return;\n            }\n            this.session.set({\n                connected: false,\n                reconnected: false,\n                reconnecting: false,\n                ready_to_send: false,\n                conn_retries: 0,\n                conn_feedback: xabber.getString(\"application_state_connecting\"),\n                auth_failed: false\n            });\n            this.restoreStatus();\n            this.conn_manager.connect(auth_type, jid, password, this.connectionCallback.bind(this));\n        },\n\n        reconnect: function (is_fast) {\n            let conn_retries = this.session.get('conn_retries'),\n                timeout = conn_retries < 3 ? constants.RECONNECTION_TIMEOUTS[conn_retries] : 20000;\n            is_fast && (timeout = 1500);\n            this.session.set({\n                connected: false,\n                reconnected: false,\n                ready_to_send: false,\n                reconnecting: true,\n                conn_retries: ++conn_retries,\n                conn_feedback:  xabber.getString(\"application_state_reconnect_after_some_seconds\", [timeout/1000]),\n                auth_failed: false\n            });\n            if (this.get('x_token'))\n                this.connection.x_token = this.get('x_token');\n            this.connection.account = this;\n            setTimeout(() => {\n                this.connFeedback(xabber.getString(\"application_state_connecting\"));\n                this.restoreStatus();\n                this.connection.reset();\n                console.log('started reconnecting');\n                utils.callback_popup_message('started reconnecting', 3000);\n                this.conn_manager.reconnect(this.reconnectionCallback.bind(this));\n            }, timeout);\n        },\n\n        connectionCallback: function (status, condition, elem) {\n            if (this.session.get('reconnecting')) {\n                xabber.info('ignore connection callback for status: '+constants.CONN_STATUSES[status]);\n                return;\n            }\n            this.auth_view && this.loginCallback(status, condition);\n            this.session.set({conn_status: status, conn_condition: condition});\n            if ((status === Strophe.Status.ERROR) && (condition === 'conflict') && !this.session.get('delete')) {\n                this.onConnectionConflict();\n            } else if (status === Strophe.Status.ERROR && (condition === 'policy-violation')) {\n                this.onAuthFailed(condition);\n            } else if (status === Strophe.Status.CONNECTED) {\n                this.session.set('on_token_revoked', false);\n                if (this.connection.x_token) {\n                    this.save({\n                        auth_type: 'x-token',\n                        x_token: this.connection.x_token,\n                        hotp_counter: this.connection.counter,\n                    });\n                    this.conn_manager.auth_type = 'x-token';\n                }\n\n                if (this.get('registration_nickname')){\n                    let vcard = utils.vcard.getBlank(this.get('jid'));\n                    vcard.nickname = this.get('registration_nickname');\n                    this.setVCard(vcard,\n                        () => {\n                            this.getVCard();\n                            this.set('registration_nickname', null)\n                        },\n                        function () {\n                            utils.dialogs.error(xabber.getString(\"account_user_info_save_fail\"));\n                            this.set('registration_nickname', null)\n                        }\n                    );\n                }\n                this.createFastConnection();\n                this.session.set({connected: true, reconnected: false});\n            } else if (status === Strophe.Status.AUTHFAIL || ((status === Strophe.Status.ERROR) && (condition === 'not-authorized'))) {\n                if ((this.get('auth_type') === 'x-token' || this.connection.x_token)){\n                    if (this.session.get('conn_retries') <= 3 && $(elem).find('credentials-expired').length === 0)\n                        this.reconnect(true);\n                    else\n                        this.onTokenRevoked();\n                }\n                else\n                    this.onAuthFailed();\n            } else if (status === Strophe.Status.DISCONNECTED) {\n                if (this.session.get('on_token_revoked'))\n                    return;\n                this.connection.flush();\n                if (this._main_interval_worker)\n                    this._main_interval_worker.terminate();\n                this.session.set({\n                    connected: false,\n                    ready_to_send: false,\n                });\n            }\n        },\n\n        reconnectionCallback: function (status, condition, elem) {\n            if (!this.session.get('reconnecting')) {\n                xabber.info('ignore reconnection callback for status: '+constants.CONN_STATUSES[status]);\n                return;\n            }\n            this.session.set({conn_status: status, conn_condition: condition});\n            if (status === Strophe.Status.CONNECTED) {\n                console.log('reconnected main connection');\n                utils.callback_popup_message(`reconnected main connection , conn_retries: ${this.session.get('conn_retries')}`, 5000);\n                this.session.set('on_token_revoked', false);\n                if (this.connection.x_token) {\n                    this.save({\n                        auth_type: 'x-token',\n                        x_token: this.connection.x_token,\n                        hotp_counter: this.connection.counter,\n                    });\n                }\n                this.createFastConnection();\n                this.connection.connect_callback = this.connectionCallback.bind(this);\n                this.session.set({\n                    connected: true,\n                    reconnected: true,\n                    reconnecting: false,\n                    conn_retries: 0\n                });\n            } else if (status === Strophe.Status.ERROR && (condition === 'policy-violation')) {\n                this.onAuthFailed(condition);\n            } else if (status === Strophe.Status.AUTHFAIL || ((status === Strophe.Status.ERROR) && (condition === 'not-authorized'))) {\n                if ((this.get('auth_type') === 'x-token' || this.connection.x_token)) {\n                    if ($(elem).find('credentials-expired').length > 0)\n                        this.onTokenRevoked();\n                    else if (this.session.get('conn_retries') > 2 )\n                        this.onAuthFailed();\n                    else\n                        this.reconnect(true);\n                }\n                else\n                    this.onAuthFailed();\n            } else if (status === Strophe.Status.DISCONNECTED) {\n                if (this.session.get('on_token_revoked'))\n                    return;\n                this.connection.flush();\n                if (this._main_interval_worker)\n                    this._main_interval_worker.terminate();\n                let max_retries = xabber.settings.max_connection_retries;\n                if (max_retries === -1 || this.session.get('conn_retries') < max_retries) {\n                    console.log(`started another reconnecting, conn_retries: ${this.session.get('conn_retries')},status: ${status} ,condition: ${condition} `);\n                    utils.callback_popup_message(`started another reconnecting, conn_retries: ${this.session.get('conn_retries')},status: ${status} ,condition: ${condition} `, 3000);\n                    this.reconnect();\n                } else {\n                    this.connFeedback(xabber.getString(\"connection__error__connection_lost\"));\n                }\n            }\n        },\n\n        registerCallback: function (status, condition, error_text) {\n            if (status === Strophe.Status.REGISTER) {\n                this.connection.register.fields.username = Strophe.getNodeFromJid(this.get('jid'));\n                this.connection.register.fields.password = this.getPassword();\n                if (xabber.url_params && xabber.url_params.rkey) {\n                    this.connection.register.fields.key = xabber.url_params.rkey;\n                }\n                this.connection.register.submit();\n            } else if (status === Strophe.Status.REGISTERED) {\n                let nickname = this.auth_view.$nickname_input.val()\n                this.auth_view.data.set('step',6);\n                if(nickname){\n                    this.set('registration_nickname', nickname)\n                }\n            } else if (status === Strophe.Status.CONFLICT) {\n                this.auth_view.errorRegistrationFeedback({jid: xabber.getString(\"label_xmpp_id\")});\n                this.auth_view.data.set('step', 3)\n            } else if (status === Strophe.Status.NOTACCEPTABLE) {\n                if (error_text)\n                    this.auth_view.errorRegistrationFeedback({password: error_text});\n                else {\n                    condition = condition ? ': ' + condition : '';\n                    this.auth_view.errorRegistrationFeedback({password: xabber.getString(\"xmpp_login__registration_not_filled\") + condition});\n                }\n                this.auth_view.data.set('step', 4)\n            } else if (status === Strophe.Status.REGIFAIL) {\n                if (error_text)\n                    this.auth_view.errorRegistrationFeedback({password: error_text});\n                else {\n                    condition = condition ? ': ' + condition : '';\n                    this.auth_view.errorRegistrationFeedback({password: xabber.getString(\"xmpp_login__registration_failed\") + condition});\n                }\n                this.auth_view.data.set('step', 4)\n            }\n        },\n\n        changePasswordCallback: function (status, condition) {\n            if (this.change_password_view){\n                if (status === Strophe.Status.REGISTERED) {\n                    this.change_password_view.successFeedback();\n                } else if (status === Strophe.Status.CONFLICT\n                    || status === Strophe.Status.NOTACCEPTABLE\n                    || status === Strophe.Status.REGIFAIL) {\n                    condition = condition ? ': ' + condition : '';\n                    this.change_password_view.errorFeedback({password: xabber.getString(\"password_changed_fail\") + condition});\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    this.change_password_view.errorFeedback({old_password: xabber.getString(\"AUTHENTICATION_FAILED\")});\n                } else if (status === Strophe.Status.CONNECTED) {\n                    this.change_password_connection.register.fields.username = Strophe.getNodeFromJid(this.get('jid'));\n                    this.change_password_connection.register.fields.password = this.change_password_view.$password_input.val().trim();\n                    this.change_password_connection.register.submit();\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    this.change_password_connection_manager = undefined;\n                    this.change_password_connection = undefined;\n                }\n            }\n        },\n\n        unregisterAccountCallback: function (status, condition) {\n            if (this.unregister_account_view){\n                if (status === Strophe.Status.REGISTERED) {\n                    this.unregister_account_view.close();\n                    this.trigger('deactivate', this);\n                    this.deleteAccount();\n                    xabber.settings_modal_view.closeSettings();\n                } else if (status === Strophe.Status.CONFLICT\n                    || status === Strophe.Status.NOTACCEPTABLE\n                    || status === Strophe.Status.REGIFAIL) {\n                    condition = condition ? ': ' + condition : '';\n                    this.unregister_account_view.errorFeedback({password: xabber.getString(\"account_unregister_failed\") + condition});\n                    this.unregister_account_view.data.set('step', 0);\n                    this.unregister_account_connection && this.unregister_account_connection.disconnect();\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    this.unregister_account_view.errorFeedback({password: xabber.getString(\"wrong_password\")});\n                    this.unregister_account_view.data.set('step', 0);\n                    this.unregister_account_connection && this.unregister_account_connection.disconnect();\n                } else if (status === Strophe.Status.CONNECTED) {\n                    this.unregister_account_view.data.set('step', 1);\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    this.unregister_account_connection_manager = undefined;\n                    this.unregister_account_connection = undefined;\n                }\n            }\n        },\n\n        loginCallback: function (status, condition) {\n            if (status === Strophe.Status.CONNECTING) {\n                if (this.auth_view.stepped_auth){\n                    this.auth_view.resetAuthStepper()\n                }\n            } else if (status === Strophe.Status.CONNECTED) {\n                this.save('is_new', undefined);\n                if (this.auth_view.stepped_auth && !this.auth_view.data.get('registration'))\n                    this.auth_view.authStepperStart();\n                else{\n                    this.auth_view.endAuth();\n                }\n\n            } else if (_.contains(constants.BAD_CONN_STATUSES, status)) {\n                let stepper_auth_error = false;\n                if (status === Strophe.Status.ERROR) {\n                    status = xabber.getString(\"CONNECTION_FAILED\");\n                } else if (status === Strophe.Status.CONNFAIL) {\n                    status = xabber.getString(\"CONNECTION_FAILED\");\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    status = xabber.getString(\"AUTHENTICATION_FAILED\");\n                    stepper_auth_error = true;\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    status = xabber.getString(\"connection__error__text_disconnected\");\n                } else if (status === Strophe.Status.CONNTIMEOUT) {\n                    status = xabber.getString(\"connection__error__text_timeout_expired\");\n                }\n                condition = condition ? ': ' + condition : '';\n                if (this.auth_view.stepped_auth)\n                    this.auth_view.authStepperError(stepper_auth_error, {password: status + condition});\n                else\n                    this.auth_view.errorFeedback({password: status + condition});\n                this.get('is_new') && this.destroy();\n            }\n        },\n\n        onAuthFailed: function (text) {\n            if (!this.auth_view && !text){\n                utils.dialogs.error(xabber.getString(\"connection__error__text_authentication_failed\", [this.get('jid')]));\n                this.password_view.show();\n            } else if (text){\n                if (this.auth_view)\n                    return;\n                this.session.set({\n                    connected: false,\n                    ready_to_send: false,\n                    no_reconnect: true\n                });\n                let dialog_text = xabber.getString(\"XMPP_EXCEPTION\") + \": \" + text;\n                utils.dialogs.ask_extended(xabber.getString(\"error\"), xabber.getString(\"modal_policy_violation_text\"),\n                    {modal_class: 'modal-policy-violation', no_dialog_options: true, quoted_text: text, cancel_button_main: true},\n                    {\n                        ok_button_text: xabber.getString(\"disable_account\"),\n                        cancel_button_text: xabber.getString(\"account_settings\"),\n                        optional_button: 'account-reconnect',\n                        optional_button_text: xabber.getString(\"account_reconnect\")\n                    }).done((res) => {\n                    if (res){\n                        if (res === 'account-reconnect')\n                            this.reconnect();\n                        else {\n                            this.save('enabled', false);\n                            this.deactivate()\n                        }\n                    } else {\n                        this.showSettingsModal();\n                    }\n                });\n                return;\n            }\n            this.session.set({\n                auth_failed: true,\n                connected: false,\n                ready_to_send: false,\n                no_reconnect: true\n            });\n            this.save({old_device_token: this.get('x_token'), auth_type: 'password', password: null, x_token: null});\n            this.connection.pass = \"\";\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_authentication_failed_short\"));\n        },\n\n        onConnectionConflict: function () {\n            utils.dialogs.error(xabber.getString(\"connection__error__text_connection_conflict\", [this.get('jid')]));\n            this.session.set({\n                auth_failed: true,\n                no_reconnect: true\n            });\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_connection_conflict_short\"));\n        },\n\n        getAllXTokens: function (callback) {\n            let tokens_list = [],\n                iq = $iq({\n                    type: 'get',\n                    to: this.connection.domain\n                }).c('query', {xmlns: `${Strophe.NS.AUTH_DEVICES}#items`});\n            this.sendIQFast(iq, (tokens) => {\n                $(tokens).find('device').each((idx, token) => {\n                    let $token = $(token),\n                        client = $token.find('client').text(),\n                        device = $token.find('info').text(),\n                        description = $token.find('public-label').text(),\n                        omemo_id = $token.find('omemo-id').text(),\n                        token_uid = $token.attr('id'),\n                        expire = Number($token.find('expire').text())*1000,\n                        last_auth = Number($token.find('last-auth').text())*1000,\n                        ip_address = $token.find('ip').text();\n                    tokens_list.push({client: client, device: device, description: description, token_uid: token_uid, last_auth: last_auth, expire: expire, ip: ip_address, omemo_id: omemo_id});\n                });\n                this.x_tokens_list = tokens_list;\n                callback && callback();\n            });\n        },\n\n        onTokenRevoked: function () {\n            if (!this.auth_view) {\n                utils.dialogs.error(xabber.getString(\"connection__error__text_token_invalidated\", [this.get('jid')]));\n            }\n            this.session.set({\n                on_token_revoked: true,\n                auth_failed: true,\n                connected: false,\n                no_reconnect: true\n            });\n            this.save({auth_type: 'password', password: null, x_token: null});\n            this.connection.pass = \"\";\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_token_invalidated_short\"));\n            this.deleteAccount()\n        },\n\n        onChangedConnected: function () {\n            if (this.isConnected()) {\n                this.session.get('reconnected') ? this.onReconnected() : this.onConnected();\n            } else {\n                this.onDisconnected();\n            }\n        },\n\n        onConnected: function () {\n            this.connFeedback(xabber.getString(\"account_state_connected\"));\n            this.jid = this.connection.jid;\n            this.resource = Strophe.getResourceFromJid(this.jid);\n            this.domain = Strophe.getDomainFromJid(this.jid);\n            this.trigger('activate', this);\n            this.session.get('no_reconnect') && this.session.set('no_reconnect', false);\n            this.afterConnected();\n            _.each(this._after_connected_plugins, (plugin) => {\n                plugin.call(this);\n            });\n        },\n\n        onFastConnected: function (status) {\n            if (status === Strophe.Status.CONNECTED) {\n                if (this.fast_connection.x_token) {\n                    this.save({\n                        x_token: this.fast_connection.x_token,\n                        hotp_counter: this.fast_connection.counter,\n                    });\n                    this.fast_conn_manager.auth_type = 'x-token';\n                    this.fast_connection.x_token_auth = true;\n                    if (this.connection && this.connection.pass)\n                        this.fast_connection.pass = this.connection.pass;\n                }\n                _.each(this._after_fast_connected_plugins, (plugin) => {\n                    plugin.call(this);\n                });\n            } else if (status === Strophe.Status.AUTHFAIL || status === Strophe.Status.DISCONNECTED) {\n                if (this._fast_interval_worker)\n                    this._fast_interval_worker.terminate();\n                this.fast_conn_manager = undefined;\n                this.fast_connection = undefined;\n                if (this.connection && !this.connection.disconnecting\n                    && this.connection.authenticated && this.connection.connected){\n                    this.getVCard();\n                    if (!(this.auth_view && this.auth_view.data.get('authentication')))\n                        this.trigger('ready_to_get_roster');\n                }\n            }\n        },\n\n        onReconnected: function () {\n            this.connFeedback(xabber.getString(\"account_state_connected\"));\n            this.afterConnected();\n            _.each(this._after_reconnected_plugins, (plugin) => {\n                plugin.call(this);\n            });\n        },\n\n        afterConnected: function () {\n            this.dfd_presence.done(() => {\n                this.sendPendingStanzas();\n                this.sendPendingMessages();\n                this.session.set({\n                    ready_to_send: true\n                })\n            });\n            this.registerPresenceHandler();\n            this.enableCarbons();\n        },\n\n        getAllMessageRetractions: function (callback) {\n            let query_options = {xmlns: Strophe.NS.REWRITE, version: this.retraction_version};\n            let retractions_query = $iq({type: 'get'})\n                .c('query', query_options);\n            this.sendIQ(retractions_query, callback);\n        },\n\n        sendPendingStanzas: function () {\n            console.log('pending stanzas');\n            console.log(this._pending_stanzas);\n            _.each(this._pending_stanzas, (item) => {\n                console.log(item);\n                if ((item.stanza instanceof Strophe.Builder) || item.is_msg) {\n                    this.connection.send(item.stanza);\n                    item.callback && item.callback();\n                } else if (item && item.stanza && item.is_iq){\n                    this.connection.sendIQ.apply(this.connection, item.stanza);\n                }\n            });\n            this._pending_stanzas = [];\n        },\n\n        sendPendingMessages: function () {\n            console.log('pending messages');\n            console.log(this._pending_messages);\n            this._pending_messages.sort((a,b) => (a.timestamp > b.timestamp) ? 1 : ((b.timestamp > a.timestamp) ? -1 : 0));\n            _.each(this._pending_messages, (item) => {\n                console.log(item)\n                let msg = this.messages.get(item.unique_id), msg_iq;\n                msg && (msg_iq = msg.get('xml'));\n                if (msg.collection && msg.collection.chat && msg.collection.chat.get('group_chat'))\n                    $(msg_iq).append(\"<retry to='\" + msg.collection.chat.get('jid') + \"' xmlns='\" + Strophe.NS.DELIVERY + \"'/>\");\n                else\n                    $(msg_iq).append(\"<retry xmlns='\" + Strophe.NS.DELIVERY + \"'/>\");\n                msg_iq && this.sendMsgPending(msg_iq);\n            });\n            this.trigger('send_pending_messages');\n        },\n\n        _after_connected_plugins: [],\n        _after_reconnected_plugins: [],\n        _after_fast_connected_plugins: [],\n\n        onDisconnected: function () {\n            this.disconnected_timestamp = this.last_stanza_timestamp;\n            if (this.session.get('delete')) {\n                this.destroy();\n                return;\n            }\n            let deactivate = this.session.get('deactivate');\n            if (deactivate) {\n                this.connFeedback(xabber.getString(\"settings_account__label_state_disconnected\"));\n                this.session.set('deactivate', null);\n                if (deactivate === 'set_off') {\n                    this.trigger('deactivate', this);\n                }\n            } else {\n                if (this.session.get('no_reconnect')) {\n                    this.session.set('no_reconnect', false);\n                } else {\n                    this.fast_connection && this.fast_connection.connected && this.fast_connection.disconnect();\n                    this.reconnect();\n                }\n            }\n        },\n\n        connFeedback: function (message) {\n            this.session.set(\"conn_feedback\", message);\n        },\n\n        enableCarbons: function () {\n            let iq = $iq({type: 'set'}).c('enable', {xmlns: Strophe.NS.CARBONS});\n            this.sendIQFast(iq);\n        },\n\n        getVCard: function (callback) {\n            let jid = this.get('jid'),\n                is_callback = _.isFunction(callback);\n            if (this.connection && this.connection.connected) {\n                this.getConnectionForIQ().vcard.get(jid,\n                    (vcard) => {\n                        let attrs = {\n                            vcard: vcard,\n                            vcard_updated: moment.now()\n                        };\n                        attrs.name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || jid;\n                        if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n                            if (vcard.photo.image) {\n                                attrs.avatar_priority = constants.AVATAR_PRIORITIES.VCARD_AVATAR;\n                                attrs.image = vcard.photo.image;\n                            }\n                            else\n                                attrs.image = Images.getDefaultAvatar(attrs.name);\n                            this.cached_image = Images.getCachedImage(attrs.image);\n                        }\n                        this.save(attrs);\n                        is_callback && callback(vcard);\n                    },\n                    function () {\n                        is_callback && callback(null);\n                    }\n                );\n            }\n        },\n\n        setVCard: function (data, callback, errback) {\n            let vcard = _.extend(_.clone(this.get('vcard')), data);\n            this.connection.vcard.set(this.get('jid'), vcard, () => {\n                this.vcardPhotoUpdated(vcard.photo.image);\n                callback && callback();\n            }, errback);\n        },\n\n        getStatusMessage: function () {\n            return this.get('status_message') || xabber.getString([this.get('status')]);\n        },\n\n        setStatus: function (status, message) {\n            let attrs = { status_updated: moment.now() };\n            status !== null && (attrs.status = status);\n            message !== null && (attrs.status_message = message || '');\n            if (status === 'offline' && this.get('status') !== 'offline')\n                attrs.status_prev = this.get('status');\n            this.save(attrs);\n            if (!this.get('enabled'))\n                return;\n            if (status === 'offline') {\n                this.deactivate('set_offline');\n            } else if (!this.isConnected()) {\n                this.activate();\n            } else {\n                this.sendPresence();\n            }\n        },\n\n        restoreStatus: function () {\n            if (this.get('status') === 'offline') {\n                this.save({\n                    status_updated: moment.now(),\n                    status: this.get('status_prev') || 'online',\n                    status_prev: undefined\n                });\n            }\n        },\n\n        getAvatarHash: function (avatar) {\n            let from_avatar = avatar || this.get('vcard').photo.image;\n            if (from_avatar) {\n                let decoded_raw = atob(from_avatar),\n                    bin = Uint8Array.from(Array.prototype.map.call(decoded_raw,function(x) {\n                        return x.charCodeAt(0);\n                    }));\n                return sha1(bin);\n            }\n            else\n                return \"\";\n        },\n\n        vcardPhotoUpdated: function (photo) {\n            let stanza = $pres().c('x', {xmlns: Strophe.NS.VCARD_UPDATE}).c('photo').t(this.getAvatarHash(photo)).up().up();\n            return this.sendPres(stanza);\n        },\n\n        sendPresence: function (type, message) {\n            type = type || this.get('status');\n            let status_message = message || this.get('status_message'), stanza = $pres();\n            if (type === 'offline') {\n                stanza.attrs({'type': 'unavailable'});\n            } else {\n                if (type !== 'online') {\n                    stanza.c('show').t(type).up();\n                }\n                stanza.c('status').t(status_message).up();\n                stanza.c('priority').t(this.get('priority')).up();\n                if(this.get('x_token'))\n                    stanza.c('device', {xmlns: Strophe.NS.AUTH_DEVICES, id: this.get('x_token').token_uid}).up();\n            }\n            stanza.cnode(this.connection.caps.createCapsNode({\n                node: 'https://www.xabber.com/clients/xabber/web'\n            }).tree());\n            return this.sendPres(stanza);\n        },\n\n        showSettings: function (right, block_name) {\n            this.showSettingsModal(block_name);\n        },\n\n        showSettingsModal: function (block_name) {\n            if (xabber.accounts.length === 1){\n                xabber.body.setScreen('settings-modal', {account_block_name: block_name});\n                xabber.trigger('update_placeholder');\n                return;\n            }\n            let has_modal_settings = !_.isUndefined(this.settings_account_modal);\n            if (!has_modal_settings)\n                this.settings_account_modal = new xabber.AccountSettingsModalView({model: this});\n            this.updateColorScheme();\n            xabber.body.setScreen('account_settings_modal', {\n                account: this, block_name: block_name\n            });\n            this.trigger('open_settings');\n            if (!has_modal_settings) {\n                this.trigger('render_settings');\n                this.settings_account_modal.addChild('blocklist', xabber.BlockListView, {\n                    account: this,\n                    el: this.settings_account_modal.$('.block-list-view-wrap')[0]\n                });\n            }\n            this.settings_account_modal.updateHeight();\n        },\n\n        updateColorScheme: function () {\n            let color = this.settings.get('color');\n            this.settings_account_modal && this.settings_account_modal.$el.attr('data-color', color);\n        },\n\n        revokeXToken: function (token_uid, callback) {\n            let iq = $iq({\n                type: 'set',\n                to: this.connection.domain\n            }).c('revoke', {xmlns:Strophe.NS.AUTH_DEVICES});\n            for (let token_num = 0; token_num < token_uid.length; token_num++)\n                iq.c('device', {id: token_uid[token_num]}).up();\n            this.sendIQFast(iq, () => {\n                callback && callback();\n            });\n        },\n\n        revokeAllXTokens: function (callback, errback) {\n            let iq = $iq({\n                type: 'set',\n                to: this.connection.domain\n            }).c('revoke-all', {xmlns:Strophe.NS.AUTH_DEVICES});\n            this.sendIQFast(iq, (success) => {\n                    callback & callback(success);\n                },\n                function (error) {\n                    errback && errback(error);\n                });\n        },\n\n        deleteAccount: function (show_settings, dont_change_screen) {\n            this.show_settings_after_delete = show_settings;\n            this.dont_change_screen_after_delete = dont_change_screen;\n            let screen = xabber.body.screen;\n            if (screen.get('account') && screen.get('account') === this && screen.get('name') === 'account_settings_modal')\n                this.show_settings_after_delete = true;\n            if (this.get('x_token'))\n                this.revokeXToken([this.get('x_token').token_uid]);\n            this.session.set('delete', true);\n            this.deactivate();\n        },\n\n        activate: function () {\n            if (!this.isConnected())\n                this.connect();\n        },\n\n        deactivate: function (type) {\n            type || (type = 'set_off');\n            this.session.set('deactivate', type);\n            if (this.isConnected()) {\n                this.connFeedback(xabber.getString(\"settings_account__label_state_disconnecting\"));\n                this.sendPresence('offline');\n                this.connection.disconnect();\n                if (this.fast_conn_manager) this.fast_connection.disconnect();\n            } else {\n                this.onDisconnected();\n            }\n        },\n\n        onDestroy: function () {\n            if (this.connection && !this.connection.register._registering)\n                this.connection.connect_callback = null;\n            if (this.omemo){\n                this.omemo.destroy();\n                this.omemo = undefined;\n            }\n            this.groups_settings\n            if (this.groups_settings){\n                this.groups_settings.clearStorage();\n            }\n            if (this.groupchat_settings){\n                this.groupchat_settings.destroy();\n                this.groupchat_settings = undefined;\n            }\n            if (this.chat_settings){\n                this.chat_settings.destroy();\n                this.chat_settings = undefined;\n            }\n            if (this.settings)\n                this.settings.destroy();\n            if (this.isConnected()) {\n                this.connection.disconnect();\n                if (this.fast_conn_manager) this.fast_connection.disconnect();\n            }\n            this.cached_sync_conversations && this.cached_sync_conversations.deleteDataBase();\n            this.cached_roster && this.cached_roster.deleteDataBase();\n            this.cached_server_features && this.cached_server_features.deleteDataBase();\n            this.trigger('remove_saved_chat');\n        },\n\n        registerIQHandler: function () {\n            this.connection.deleteHandler(this._stanza_handler);\n            this._stanza_handler = this.connection.addHandler((iq) => {\n                    this.onGetIQ(iq);\n                    return true;\n                }, null, 'iq', \"get\");\n        },\n\n\n        registerSyncedIQHandler: function () {\n            this.connection.deleteHandler(this._synced_stanza_handler);\n            this._synced_stanza_handler = this.connection.addHandler(\n                this.onSyncedIQ.bind(this),\n                Strophe.NS.SYNCHRONIZATION, 'iq', \"set\");\n        },\n\n        registerPresenceHandler: function () {\n            this.connection.deleteHandler(this._pres_handler);\n            this._pres_handler = this.connection.addHandler(\n                (presence) => {\n                    this.onPresence(presence);\n                    return true;\n                }, null, 'presence', null);\n        },\n\n        onSetIQResult: function (iq) {\n            let to = $(iq).attr('to');\n            if (this.fast_connection && this.fast_connection.jid === to\n                && !this.fast_connection.disconnecting && this.fast_connection.authenticated\n                && this.fast_connection.connected && this.get('status') !== 'offline'){\n                this.sendIQFast($iq({\n                    type: 'result', id: iq.getAttribute('id'),\n                }));\n            } else if (this.connection && this.connection.jid === to && this.connection.authenticated\n                && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline') {\n                this.sendIQ($iq({\n                    type: 'result', id: iq.getAttribute('id'),\n                }));\n            }\n        },\n\n        onSyncedIQ: function (iq) {\n            this.onSetIQResult(iq);\n            this.roster.syncConversations(iq);\n            return true;\n        },\n\n        onGetIQ: function (iq) {\n            let $incoming_iq = $(iq),\n                $confirm = $incoming_iq.find(`confirm[xmlns=\"${Strophe.NS.HTTP_AUTH}\"]`),\n                $session_availability = $incoming_iq.find(`query[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n                request_code,\n                from_jid = $incoming_iq.attr('from');\n            if ($confirm.length) {\n                request_code = $confirm.attr('id');\n                if (this.get('gallery_auth_request_code')) {\n                    this.onAuthCode(request_code)\n                }\n                else {\n                    this.gallery_code_requests.push({\n                        id: $incoming_iq.attr('id'),\n                        code: request_code\n                    });\n                }\n            }\n            if ($session_availability.length) {\n                let session_id = $session_availability.children('session').attr('id'), $session_availability_response;\n                if (session_id && xabber.current_voip_call && session_id === xabber.current_voip_call.get('session_id') && !xabber.current_voip_call.get('state')) {\n                    $session_availability_response = $iq({to: from_jid, type: 'result', id: $incoming_iq.attr('id')})\n                        .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n                        .c('session', {id: session_id});\n                    xabber.current_voip_call.updateStatus(xabber.getString(\"dialog_jingle_message__status_calling\"));\n                }\n                else {\n                    $session_availability_response = $iq({to: from_jid, type: 'error', id: $incoming_iq.attr('id')})\n                        .c('error', {xmlns: Strophe.NS.JINGLE_MSG});\n\n                }\n                this.sendIQFast($session_availability_response);\n            }\n        },\n\n        testGalleryTokenExpire: function(callback, errback) {\n            let currentTime = new Date(),\n                tokenExpireTime = new Date(this.get('gallery_token_expires'));\n            if (this.get('gallery_auth')){\n                this.once('gallery_token_authenticated', callback)\n            }\n            else if (currentTime < tokenExpireTime){\n                callback && callback();\n            }\n            else if (this.server_features.get('media-gallery')){\n                this.initGalleryAuth(this.server_features.get('media-gallery'), errback)\n                this.once('gallery_token_authenticated', callback)\n            }\n            else if (!this.server_features.get('media-gallery')){\n                this.set('gallery_url', undefined);\n                this.set('gallery_token', undefined);\n                this.set('gallery_token_expires', undefined);\n                callback && callback();\n            }\n        },\n\n        testGalleryFileSlot: function(file, callback) {\n            if (this.get('gallery_token') && this.get('gallery_url')){\n                let reader = new FileReader();\n                reader.onloadend = () => {\n                    let b64 = reader.result.split('base64,'),\n                        binary_file = atob(b64[1]),\n                        bytes = new Uint8Array(binary_file.length);\n                    for (let i = 0; i < binary_file.length; i++)\n                        bytes[i] = binary_file.charCodeAt(i);\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/slot/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: {size: file.size, name: file.name, hash: sha1(bytes)},\n                        success: (response) => {\n                            console.log(response);\n                            callback && callback(response);\n                        },\n                        error: (response) => {\n                            console.log(response);\n                            callback && callback(response.responseJSON);\n                        }\n                    });\n                }\n                reader.onerror = (e) => {\n                    console.log(reader.error);\n                    callback && callback(false)\n                };\n                reader.readAsDataURL(file);\n            }\n        },\n\n        initGalleryAuth: function(gallery_feature, errback) {\n            this.set('gallery_url', gallery_feature.get('from'));\n            if (this.get('gallery_url') && !this.get('gallery_auth')) {\n                this.set('gallery_token', undefined);\n                this.set('gallery_token_expires', undefined);\n                this.set('gallery_auth', true)\n                this.gallery_iq_answered = false;\n                $.ajax({\n                    type: 'POST',\n                    url: this.get('gallery_url') + 'v1/account/xmpp_code_request/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({jid: this.jid, type: \"iq\"}),\n                    success: (response) => {\n                        if (response.request_id){\n                            this.set('gallery_auth_request_code', response.request_id)\n                            this.gallery_auth_errback = errback;\n                            if (this.gallery_code_requests.length){\n                                let verifying_code = this.gallery_code_requests.find(verifying_mess => (verifying_mess.id === this.get('gallery_auth_request_code')));\n                                if (verifying_code && verifying_code.code)\n                                    this.onAuthCode(verifying_code.code)\n                            }\n                            setTimeout(() => {\n                                if (!this.gallery_iq_answered)\n                                    this.handleCommonGalleryErrors({status: 500}, errback)\n                            }, 5000)\n                        }\n                    },\n                    error: (response) => {\n                        this.handleCommonGalleryErrors(response, errback)\n                        this.set('gallery_auth', false)\n                        this.gallery_code_requests = [];\n                        console.log(response)\n                    }\n                });\n            }\n        },\n\n        onAuthCode: function (confirm_code) {\n            this.gallery_code_requests = [];\n            this.set('gallery_auth_request_code', undefined);\n            if (confirm_code) {\n                this.gallery_iq_answered = true;\n                $.ajax({\n                    type: 'POST',\n                    url: this.get('gallery_url') + 'v1/account/xmpp_auth/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({jid: this.id, code: confirm_code}),\n                    success: (response) => {\n                        if (response.token)\n                            this.set('gallery_token', response.token);\n                        if (response.expires)\n                            this.set('gallery_token_expires', response.expires);\n                        this.trigger('gallery_token_authenticated')\n                        this.set('gallery_auth', false)\n                    },\n                    error: (response) => {\n                        this.set('gallery_auth', false)\n                        this.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n            }\n        },\n\n        prepareFiles: function (files, callback) {\n            files.forEach((file) => {\n                let reader = new FileReader();\n                reader.onloadend = () => {\n                    let b64 = reader.result.split('base64,'),\n                        binary_file = atob(b64[1]),\n                        bytes = new Uint8Array(binary_file.length);\n                    for (let i = 0; i < binary_file.length; i++)\n                        bytes[i] = binary_file.charCodeAt(i);\n                    this.testFile({size: file.size, name: file.name, hash: sha1(bytes)}, file, callback)\n                }\n                reader.readAsDataURL(file);\n            })\n        },\n\n        handleCommonGalleryErrors: function (response, errback) {\n            !errback && (errback = this.gallery_auth_errback);\n            this.gallery_auth_errback = undefined;\n            let err_text;\n            response && response.responseJSON && response.responseJSON.error && (err_text = response.responseJSON.error);\n            if (response.status === 401){\n                if (this.server_features.get('media-gallery')){\n                    this.initGalleryAuth(this.server_features.get('media-gallery'), errback)\n                } else {\n                    this.set('gallery_url', null);\n                    this.set('gallery_token', null);\n                    errback && errback('No Media Gallery server feature');\n                }\n            } else if (response.status === 500) {\n                this.set('gallery_url', null);\n                this.set('gallery_token', null);\n                errback && errback(xabber.getString(\"media_gallery_server_error\"));\n            } else {\n                errback && errback('Media Gallery error - ' + (err_text || response.status));\n            }\n        },\n\n        getStorageStats: function (params, callback) {\n            this.testGalleryTokenExpire(() => {\n                params && (params = {});\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/stats/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: params,\n                        success: (response) => {\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                        }\n                    });\n            });\n        },\n\n        testFile: function (params, file, callback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/slot/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: params,\n                        success: (response) => {\n                            this.uploadFile(file , callback)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                        }\n                    });\n\n            });\n        },\n\n        uploadFile: function (file, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url')) {\n                    let formData = new FormData(),\n                        metadata = {};\n                    file.duration && (metadata.duration = file.duration);\n                    formData.append('file', file, file.name);\n                    formData.append('metadata', JSON.stringify(metadata));\n                    if (file.size)\n                        formData.append('size', file.size);\n                    if (file.voice){\n                        formData.append('media_type', file.type + '+voice');\n                        formData.append('context', 'voice');\n                    }\n                    else\n                        formData.append('media_type', file.type);\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/upload/',\n                        data: formData,\n                        contentType: false,\n                        processData: false,\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        uploadAvatar: function (file, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url')) {\n                    if (!file)\n                        errback && errback('no file')\n                    let formData = new FormData();\n                    formData.append('file', file, file.name);\n                    formData.append('media_type', file.type);\n                    formData.append('context', 'avatar');\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/upload/',\n                        data: formData,\n                        contentType: false,\n                        processData: false,\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        deleteFile: function (file_id, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url') && file_id){\n                    let options = {id: file_id, contexts: ['file', 'voice']};\n                    $.ajax({\n                        type: 'DELETE',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: JSON.stringify(options),\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        getOpenGraphData: function (url, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token'), \"Content-Type\": \"application/json\"},\n                        url: this.get('gallery_url') + 'v1/opengraph/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: JSON.stringify({url: url}),\n                        success: (response) => {\n                            response.site = $(response.ogp).closest('meta[property=\"og:site_name\"]').attr('content')\n                            response.type = $(response.ogp).closest('meta[property=\"og:type\"]').attr('content')\n                            response.url = $(response.ogp).closest('meta[property=\"og:url\"]').attr('content')\n                            response.description = $(response.ogp).closest('meta[property=\"og:description\"]').attr('content')\n                            response.title = $(response.ogp).closest('meta[property=\"og:title\"]').attr('content')\n                            response.image = $(response.ogp).closest('meta[property=\"og:image\"]').attr('content')\n                            response.image_height = $(response.ogp).closest('meta[property=\"og:image:height\"]').attr('content')\n                            response.image_width = $(response.ogp).closest('meta[property=\"og:image:width\"]').attr('content')\n                            response.video_url = $(response.ogp).closest('meta[property=\"og:video:url\"]').attr('content')\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            errback && errback(response)\n                            console.log(response)\n                        }\n                    });\n            });\n        },\n\n        createMessageFromIQ: function (attrs) {\n            let contact = this.contacts.mergeContact(attrs.from_jid),\n                chat = this.chats.getChat(contact);\n            chat.messages.create(attrs);\n        },\n\n        onPresence: function (presence) {\n            let $presence = $(presence),\n                type = presence.getAttribute('type');\n            if (type === 'error') { return; }\n            let jid = presence.getAttribute('from'),\n                bare_jid = Strophe.getBareJidFromJid(jid);\n            if (bare_jid !== this.get('jid')) {\n                _.each(this._added_pres_handlers, function (handler) {\n                    handler(presence, bare_jid);\n                });\n                return;\n            };\n            let resource = Strophe.getResourceFromJid(jid),\n                priority = Number($presence.find('priority').text()),\n                status = $presence.find('show').text() || 'online',\n                status_message = $presence.find('status').text();\n            _.isNaN(priority) && (priority = 0);\n            let $vcard_update = $presence.find(`x[xmlns=\"${Strophe.NS.VCAD_UPDATE}\"]`);\n            if ($vcard_update.length && this.get('avatar_priority') && this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR)\n                this.save('photo_hash', $vcard_update.find('photo').text());\n            if (resource) {\n                let resource_obj = this.resources.get(resource);\n                if (type === 'unavailable') {\n                    if (resource_obj) { resource_obj.destroy(); }\n                } else {\n                    let attrs = {\n                        resource: resource,\n                        priority: priority,\n                        status: status,\n                        status_message: status_message\n                    };\n                    let $device = $presence.find(`device[xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`);\n                    if ($device && this.x_tokens_list && $device.attr('id')) {\n                        attrs.token_uid = $device.attr('id')\n                    }\n                    if (!resource_obj)\n                        resource_obj = this.resources.create(attrs);\n                    else\n                        resource_obj.set(attrs);\n                }\n            }\n        }\n    },\n    {\n        addInitPlugin: function (func) {\n            this.prototype._init_plugins.push(func);\n        },\n\n        addConnPlugin: function (func, conn, reconn) {\n            conn && this.prototype._after_connected_plugins.push(func);\n            reconn && this.prototype._after_reconnected_plugins.push(func);\n        },\n\n        addFastConnPlugin: function (func, conn, reconn) {\n            conn && this.prototype._after_fast_connected_plugins.push(func);\n        }\n    });\n\nxabber.Accounts = Backbone.CollectionWithStorage.extend({\n    model: xabber.Account,\n    comparator: function (acc1, acc2) {\n        return acc1.settings.get('order') < acc2.settings.get('order') ? -1 : 1;\n    },\n\n    _initialize: function (models, options) {\n        this.settings_list = xabber.account_settings_list;\n        this.getEnabledList();\n        this.getConnectedList();\n        this.on(\"add\", this.onAdd, this);\n        this.on(\"destroy\", this.onDestroy, this);\n        this.on(\"change:enabled\", this.getEnabledList, this);\n        this.on(\"update_order\", this.onUpdatedOrder, this);\n        this.on(\"add destroy activate deactivate\", this.onListChanged, this);\n        this.on(\"destroy deactivate\", this.onAccountDisconnected, this);\n        xabber.on(\"quit\", this.onQuit, this);\n        xabber.on(\"quit_accounts\", this.onQuitAccounts, this);\n        this.settings_list.on(\"add_settings\", this.onSettingsAdded, this);\n    },\n\n    onQuit: function () {\n        _.each(_.clone(this.models), function (account) {\n            account.deleteAccount(true);\n            account.password_view.closeModal();\n            utils.modals.clear_queue();\n        });\n        !this.models.length && xabber.body.setScreen('login', {chat_item: null});\n    },\n\n    onQuitAccounts: function () {\n        _.each(_.clone(this.models), function (account) {\n            if (account.settings.get('to_sync')) {\n                account.deleteAccount();\n                account.password_view.closeModal();\n                utils.modals.clear_queue();\n            }\n        });\n        !this.models.length && xabber.body.setScreen('login');\n    },\n\n    getEnabledList: function () {\n        this.enabled = this.filter(account => account.get('enabled'));\n    },\n\n    getConnectedList: function () {\n        this.connected = this.filter(account => account.isConnected());\n    },\n\n    onListChanged: function () {\n        this.getEnabledList();\n        this.getConnectedList();\n        this.trigger('list_changed', this);\n    },\n\n    onAdd: function (account) {\n        if (account.is_invalid)\n            account.destroy();\n    },\n\n    onDestroy: function (account) {\n        if (!account.get('is_new')) {\n            let no_accounts = !(this.length);\n            if (no_accounts) {\n                xabber.body.setScreen('login');\n            } else if (account.show_settings_after_delete) {\n                xabber.body.setScreen('settings-modal', {account_block_name: null});\n            } else if (account.dont_change_screen_after_delete) {\n                return;\n            } else {\n            }\n        }\n    },\n\n    onAccountDisconnected: function () {\n        xabber.toolbar_view.recountAllMessageCounter();\n        xabber.recountAllMessageCounter();\n    },\n\n    onSettingsAdded: function (settings) {\n        let jid = settings.get('jid');\n        if (!this.get(jid))\n            this.create({jid: jid});\n    },\n\n    onUpdatedOrder: function () {\n        this.sort();\n        this.getEnabledList();\n        this.getConnectedList();\n    },\n\n    getLastOrder: function () {\n        return this.length ? this.last().settings.get('order') : 0;\n    },\n\n    getDefaultColor: function () {\n        let used_colors = {}, colors = constants.MATERIAL_COLORS;\n        this.each(function (account) {\n            used_colors[account.settings.get('color')] = true;\n        });\n        for (let idx = 0; idx < colors.length; idx++) {\n            if (!used_colors[colors[idx]])\n                return colors[idx];\n        }\n        return 'red';\n    },\n\n    moveBefore: function (acc1, acc2) {\n        let index2 = this.indexOf(acc2),\n            prev_order = index2 > 0 ? this.at(index2-1).settings.get('order') : 0;\n        acc1.settings.save('order', (acc2.settings.get('order') + prev_order)/2);\n        this._updateOrder();\n    },\n\n    moveToBottom: function (acc) {\n        acc.settings.save('order', this.getLastOrder() + 1);\n        this._updateOrder();\n    },\n\n    _updateOrder: function () {\n        this.sort();\n        this.each(function (acc, index) {\n            acc.settings.save({order: index + 1});\n        });\n        this.trigger('update_order');\n    }\n});\n\nxabber.AccountToolbarItemView = xabber.BasicView.extend({\n    className: 'toolbar-item account-item',\n    template: templates.toolbar_item,\n    avatar_size: constants.AVATAR_SIZES.TOOLBAR_ACCOUNT_ITEM,\n\n    events: {\n        'click .filter-chats': 'filterChats',\n        'click .account-item-avatar-wrap': 'showSettings'\n    },\n\n    _initialize: function () {\n        this.updateConnected();\n        this.updateAuthState();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.$el.attr('data-jid', this.model.get('jid'));\n        this.model.session.on(\"change:auth_failed\", this.updateAuthState, this);\n        this.model.session.on(\"change:connected\", this.updateConnected, this);\n        this.model.on(\"change:status\", this.updateStatus, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"open_settings\", this.setActive, this);\n    },\n\n    updateConnected: function () {\n        this.$el.switchClass('disconnected', !this.model.isConnected());\n        xabber.updateFaviconConnected();\n    },\n\n    updateAuthState: function () {\n        let auth_failed = this.model.session.get('auth_failed');\n        xabber.updateFaviconConnected();\n        this.$('.status').hideIf(auth_failed);\n        this.$('.auth-failed').showIf(auth_failed);\n    },\n\n    updateStatus: function () {\n        this.$('.status').attr('data-status', this.model.get('status'));\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    filterChats: function (ev) {\n        ev.stopPropagation();\n        let is_single = $(ev.target).closest('.single-item').length;\n        if (is_single){\n            xabber.body.setScreen('settings-modal', {account_block_name: null});\n            xabber.trigger('update_placeholder');\n            return;\n        }\n        xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        if (xabber.toolbar_view.data.get('account_filtering') != this.model.get('jid'))\n            this.$el.addClass('active');\n        xabber.toolbar_view.showChatsByAccount(this.model);\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    },\n});\n\nxabber.ToolbarAccountsBlockView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.updateList();\n        this.model.on(\"add change:enabled\", this.updateOneInList, this);\n        this.model.on(\"update_order\", this.updateList, this);\n        this.model.on(\"destroy\", this.onAccountRemoved, this);\n    },\n\n    updateList: function (account) {\n        this.$el.find('.single-item').removeClass('single-item');\n        _.each(this.children, function (view) { view.detach(); });\n        _.each(this.model.enabled, (account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            !view && (view = this.addChild(jid, xabber.AccountToolbarItemView, {model: account}));\n            this.$el.append(view.$el);\n            if (this.model.enabled.length === 1)\n                this.$el.find('.toolbar-item.account-item').addClass('single-item');\n        });\n        this.$el.find('.toolbar-item.settings-modal').switchClass('hidden', this.model.enabled.length != 0);\n        this.parent.updateScrollBar();\n    },\n\n    updateOneInList: function (account) {\n        let jid = account.get('jid');\n        if (account.get('enabled')) {\n            let view = this.child(jid);\n            if (view) {\n                view.$el.detach();\n            } else {\n                view = this.addChild(jid, xabber.AccountToolbarItemView,\n                    {model: account});\n            }\n            let index = this.model.enabled.indexOf(account);\n            if (index === 0) {\n                this.$el.prepend(view.$el);\n            } else {\n                this.$('.account-item').eq(index - 1).after(view.$el);\n            }\n        } else {\n            account.last_msg_timestamp = 0;\n            this.removeChild(jid);\n        }\n        this.$el.find('.single-item').removeClass('single-item');\n        if (this.model.enabled.length === 1)\n            this.$el.find('.toolbar-item.account-item').addClass('single-item');\n        this.$el.find('.toolbar-item.settings-modal').switchClass('hidden', this.model.enabled.length != 0);\n        this.parent.updateScrollBar();\n    },\n\n    onAccountRemoved: function (account) {\n        this.removeChild(account.get('jid'));\n        this.parent.updateScrollBar();\n        if (this.model.enabled.length === 1)\n            this.$el.find('.toolbar-item.account-item').addClass('single-item');\n        this.$el.find('.toolbar-item.settings-modal').switchClass('hidden', this.model.enabled.length != 0);\n    }\n});\n\nxabber.Resource = Backbone.Model.extend({\n    idAttribute: 'resource',\n    defaults: {\n        priority: 0\n    }\n});\n\nxabber.ResourceView = xabber.BasicView.extend({\n    className: 'resource-wrap',\n    template: templates.resource,\n\n    _initialize: function (options) {\n        this.update();\n        this.model.on(\"change\", this.update, this);\n    },\n\n    update: function () {\n        let attrs = this.model.attributes;\n        this.$('.status').attr('data-status', attrs.status);\n        this.$('.status-message').text(attrs.status_message || xabber.getString(attrs.status));\n        this.$('.client').text(attrs.client || xabber.getString(\"please_wait\"));\n        this.$('.resource').text(attrs.resource);\n        this.$('.priority').text(attrs.priority);\n        return this;\n    }\n});\n\nxabber.ResourceRightView = xabber.BasicView.extend({\n    className: 'resource-wrap',\n    template: templates.resource_right,\n\n    _initialize: function (options) {\n        this.update();\n        this.model.on(\"change\", this.update, this);\n    },\n\n    update: function () {\n        let attrs = this.model.attributes;\n        this.$('.status').attr('data-status', attrs.status);\n        this.$('.status-message').text(attrs.status_message || xabber.getString(attrs.status));\n        this.$('.client').text(attrs.client || xabber.getString(\"please_wait\"));\n        this.$('.resource').text(attrs.resource);\n        this.$('.priority').text(attrs.priority);\n        return this;\n    }\n});\n\nxabber.Resources = Backbone.Collection.extend({\n    model: xabber.Resource,\n    comparator: function (r1, r2) {\n        let p1 = r1.get('priority'), p2 = r2.get('priority');\n        return p1 > p2 ? -1 : (p1 < p2 ? 1 : 0);\n    },\n\n    requestInfo: function (resource, callback) {\n        let jid = this.jid + '/' + resource.get('resource');\n        if (this.connection && this.connection.connected) {\n            this.connection.disco.info(jid, null, (iq) => {\n                let $identity = $(iq).find('identity[category=client]');\n                if ($identity.length)\n                    resource.set('client', $identity.attr('name'));\n                this.attention_supported = this.isFeatureSupported(iq, Strophe.NS.ATTENTION);\n                callback && callback();\n            });\n        }\n    },\n\n    isFeatureSupported: function (stanza, ns) {\n        let $stanza = $(stanza), is_supported = false;\n        $stanza.find('feature').each(function () {\n            let namespace = $(this).attr('var');\n            if (namespace === ns)\n                is_supported = true;\n        });\n        return is_supported;\n    },\n});\n\nxabber.ResourcesView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.renderByInit();\n        this.model.on(\"add\", this.onResourceAdded, this);\n        this.model.on(\"remove\", this.onResourceRemoved, this);\n        this.model.on(\"reset\", this.onReset, this);\n        this.model.on(\"change:priority\", this.onPriorityChanged, this);\n    },\n\n    renderByInit: function () {\n        this.model.each((resource) => {\n            this.onResourceAdded(resource);\n        });\n    },\n\n    onResourceAdded: function (resource) {\n        this.model.requestInfo(resource);\n        this.addChild(resource.get('resource'),\n            xabber.ResourceView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    onPriorityChanged: function (resource) {\n        this.model.sort();\n        this.updatePosition(resource);\n    }\n});\n\nxabber.AccountResources = xabber.Resources.extend({\n    initialize: function (models, options) {\n        this.jid = options.account.get('jid');\n        this.connection = options.account.connection;\n    }\n});\n\nxabber.AccountResourcesView = xabber.ResourcesView.extend({\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.parent.updateScrollBar();\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.parent.updateScrollBar();\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.main-resource').after(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.AccountVCardModalView = xabber.VCardView.extend({\n    template: env.templates.vcard.vcard_modal,\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .btn-vcard-edit\": \"showEditView\",\n        \"click .details-icon\": \"onClickIcon\"\n    },\n\n    __initialize: function () {\n        this.updateButtons();\n        this.model.on(\"activate deactivate\", this.updateButtons, this);\n    },\n\n    updateButtons: function () {\n        let connected = this.model.isConnected();\n        this.$('.btn-vcard-edit').showIf(connected);\n        this.$('.btn-vcard-refresh').showIf(connected);\n    },\n\n    showEditView: function ($el) {\n        this.vcard_edit_modal = new xabber.VCardEditModalView({model: this.model});\n        this.vcard_edit_modal.show({$el: $el});\n    }\n});\n\nxabber.AccountMediaGalleryView = xabber.BasicView.extend({\n    template: templates.media_gallery_account,\n    events: {\n        \"change input.gallery-upload\": \"onFileInputChanged\",\n        \"click .gallery-file:not(.gallery-avatar) .btn-delete\": \"deleteFile\",\n        \"click .gallery-file.gallery-avatar .btn-delete\": \"deleteAvatar\",\n        \"click .gallery-file .checkbox-field\": \"selectFile\",\n        \"click .btn-delete-selection\": \"deleteSelectedFiles\",\n        \"click .settings-tab:not(.settings-deletion-button)\": \"onTabClick\",\n        \"click .show-deletion\": \"showDeleteFilesView\",\n        \"click .btn-back-gallery\": \"backToMain\",\n        \"click .gallery-file\": \"onClickFile\",\n        \"click .btn-close-selection\": \"disableFilesSelect\",\n    },\n\n    _initialize: function () {\n        this.account = this.model;\n        this.$el.html(this.template());\n        this.parent.ps_container.on(\"ps-scroll-y\", this.onScroll.bind(this));\n        this.account.on(\"update_avatar_list\", this.onUpdateAvatars.bind(this));\n    },\n\n    render: function () {\n        this.updateStorage();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n    },\n\n    onScroll: function () {\n        if (this.$el.hasClass('hidden'))\n            return;\n        let scrollTop = this.parent.ps_container[0].scrollTop,\n            scrollHeight = this.parent.ps_container[0].scrollHeight,\n            offsetHeight = this.parent.ps_container[0].offsetHeight,\n            persentScrolled = scrollTop / (scrollHeight - offsetHeight);\n        if (persentScrolled > 0.8 && !this.loading_files && (this.current_page < this.total_pages)){\n            this.current_page++;\n            this.current_options.page = this.current_page;\n            if (this.current_options.type === 'avatars'){\n                this.getAvatars(this.current_options)\n            } else {\n                this.getFiles(this.current_options)\n            }\n        }\n    },\n\n    updateStorage: function (after_deletion, after_avatar_update) {\n        this.account.getStorageStats(null,(response) => {\n            let used_storage = utils.pretty_size(response.total.used) || '0';\n            this.$('.btn-delete-files-dropdown').hideIf(!(response.total && response.total.used))\n            this.$('.gallery-manage-storage').hideIf(!(response.total && response.total.used))\n            this.$('.storage-usage').html(used_storage + xabber.getString(\"of\") + utils.pretty_size(response.quota))\n            this.$('.storage-usage-images').hideIf(!(response.images && response.images.used))\n            this.$('.storage-usage-images .storage-usage-amount').html(utils.pretty_size(response.images.used))\n            this.$('.storage-label-videos').hideIf(!(response.videos && response.videos.used))\n            this.$('.storage-usage-videos').hideIf(!(response.videos && response.videos.used))\n            this.$('.storage-usage-videos .storage-usage-amount').html(utils.pretty_size(response.videos.used))\n            this.$('.storage-label-voices').hideIf(!(response.voices && response.voices.used))\n            this.$('.storage-usage-voices').hideIf(!(response.voices && response.voices.used))\n            this.$('.storage-usage-voices .storage-usage-amount').html(utils.pretty_size(response.voices.used))\n            this.$('.storage-label-files').hideIf(!(response.files && response.files.used))\n            this.$('.storage-usage-files').hideIf(!(response.files && response.files.used))\n            this.$('.storage-usage-files .storage-usage-amount').html(utils.pretty_size(response.files.used))\n            if (response.images){\n                this.$('.storage-progress-images').css('width', ((response.images.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.videos){\n                this.$('.storage-progress-videos').css('width', ((response.videos.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.voices){\n                this.$('.storage-progress-voices').css('width', ((response.voices.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.files){\n                this.$('.storage-progress-files').css('width', ((response.files.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (this.parent){\n                this.parent.$('.settings-tab[data-block-name=\"media-gallery\"] .settings-block-label')\n                    .text(xabber.getString(\"settings_account__storage_label\", [utils.pretty_size(response.total.used), utils.pretty_size(response.quota)]));\n                this.parent.updateHeight();\n            }\n            if (xabber.settings_modal_view.$('.settings-tab[data-block-name=\"media-gallery\"] .settings-block-label').length){\n                xabber.settings_modal_view.$('.settings-tab[data-block-name=\"media-gallery\"] .settings-block-label')\n                    .text(xabber.getString(\"settings_account__storage_label\", [utils.pretty_size(response.total.used), utils.pretty_size(response.quota)]));\n                xabber.settings_modal_view.updateHeight();\n            }\n        });\n    },\n\n    filterType: function (file_type, sorting) {\n        this.$('.gallery-files').html('')\n        if (file_type === 'image' || file_type === 'video' || file_type === 'avatars') {\n            this.$('.gallery-files').removeClass('voice');\n            this.$('.gallery-files').removeClass('file');\n            this.$('.gallery-files').addClass('grid');\n        } else if (file_type === 'voice') {\n            this.$('.gallery-files').addClass('voice')\n            this.$('.gallery-files').removeClass('file');\n            this.$('.gallery-files').removeClass('grid')\n        } else {\n            this.$('.gallery-files').removeClass('voice')\n            this.$('.gallery-files').addClass('file');\n            this.$('.gallery-files').removeClass('grid')\n        }\n        let options = {type: file_type}\n        sorting && (options.order_by = sorting)\n        this.current_options = options\n        if (file_type === 'avatars')\n            this.getAvatars(options)\n        else\n            this.getFiles(options)\n    },\n\n    onTabClick: function (ev) {\n        let $target = $(ev.target).closest('.settings-tab'),\n            file_type = $target.attr('data-media-type'),\n            tab_header = $target.attr('data-header-text');\n        this.current_page = 1;\n        this.total_pages = 0;\n        this.parent.$('.btn-back-settings').addClass('hidden');\n        this.parent.$('.settings-panel-head-title').text(tab_header);\n        this.parent.$('.btn-select-files').removeClass('hidden');\n        this.parent.$('.btn-sorting').removeClass('hidden');\n        this.parent.$('.btn-more.media-gallery-button').removeClass('hidden');\n        this.$('.gallery-wrap').addClass('hidden');\n        this.$('.media-gallery-items-wrap').removeClass('hidden');\n        this.$('.media-gallery-items-wrap').attr('data-value', file_type);\n        this.$('.gallery-files').html('')\n        this.filterType(file_type);\n        if (this.parent){\n            this.parent.updateHeight();\n        }\n        if (xabber.settings_modal_view){\n            xabber.settings_modal_view.updateHeight();\n        }\n    },\n\n    backToMain: function (ev) {\n        this.parent.$('.btn-back-settings').removeClass('hidden');\n        this.parent.$('.btn-select-files').addClass('hidden');\n        this.parent.$('.btn-sorting').addClass('hidden');\n        this.parent.$('.settings-panel-head-title').text(xabber.getString(\"account_cloud_storage\"));\n        this.parent.$('.btn-more.media-gallery-button').addClass('hidden');\n        this.$('.gallery-wrap').removeClass('hidden');\n        this.$('.media-gallery-items-wrap').addClass('hidden');\n        this.updateStorage();\n        if (this.parent){\n            this.parent.updateHeight();\n        }\n        if (xabber.settings_modal_view){\n            xabber.settings_modal_view.updateHeight();\n        }\n    },\n\n    onUpdateAvatars: function (ev) {\n        this.updateStorage(false, true);\n        if (this.$('.media-gallery-items-wrap').attr('data-value') === 'avatars'){\n            this.current_page = 1;\n            this.total_pages = 0;\n            this.$('.gallery-files').html('');\n            this.filterType('avatars');\n        }\n    },\n\n    showDeleteFilesView: function (ev) {\n        xabber.trigger('show_delete_files', {model: this.account, gallery_view: this});\n    },\n\n    sortFiles: function (ev) {\n        let $target = $(ev.target).closest('.btn-gallery-sorting'),\n            file_type = this.$('.media-gallery-items-wrap').attr('data-value'),\n            sort_type = $target.attr('data-value');\n        this.current_page = 1;\n        this.total_pages = 0;\n        this.$('.gallery-files').html('')\n        this.filterType(file_type, sort_type);\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('uploaded-video')) {\n            let $file = $elem.closest('.gallery-file'),\n                f_url = $file.attr('data-file');\n\n            utils.dialogs.common('', '<video class=\"gallery-video-frame\" controls autoplay=1 width=\"420\" height=\"315\" src=\"' + f_url +'\"></video>', null, null, null, 'gallery-video-modal')\n            return;\n        }\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n\n        if ($elem.hasClass('mdi-play')) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n\n        if ($elem.hasClass('mdi-pause')) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.gallery-file');\n        $elem.addClass('voice-message-rendering').html($(templates.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, unique_id);\n\n        aud.on('ready', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('no-uploaded');\n            $msg_element.find('.gallery-file-placeholder-background').removeClass('gallery-audio-file-not-uploaded');\n            let duration = Math.round(aud.getDuration());\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n            aud.play();\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').addClass('mdi-pause').removeClass('mdi-play');\n            $msg_element.addClass('playing');\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n        });\n\n        aud.on('finish', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createAudio: function(file_url, unique_id) {\n        let audio = WaveSurfer.create({\n            container: \"#\" + unique_id,\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n\n    getFiles: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            options = Object.assign({obj_per_page: 50, order_by: '-id'}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                if (this.loading_files && this.current_rendered_type === options.type && !options.page)\n                    return;\n                this.current_rendered_type = options.type;\n                if (options.type === 'voice'){\n                    options.contexts = 'voice';\n                    delete options.type;\n                }\n                this.loading_files = true\n                $(env.templates.contacts.preloader()).appendTo(this.$('.gallery-files'))\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        if (options.type)\n                            response.type = options.type;\n                        else if (options.contexts)\n                            response.type = options.contexts;\n                        this.renderFiles(response)\n                        this.loading_files = false\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        this.current_rendered_type = undefined;\n                        console.log(response)\n                        this.loading_files = false\n                        this.$('.gallery-files .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    getAvatars: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            options = Object.assign({obj_per_page: 50, order_by: '-id', type: \"avatars\", contexts: \"avatar\"}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                if (this.loading_files && this.current_rendered_type === options.type && !options.page)\n                    return;\n                this.current_rendered_type = options.type;\n                this.loading_files = true\n                delete options.type;\n                $(env.templates.contacts.preloader()).appendTo(this.$('.gallery-files'))\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        response.type = 'avatars';\n                        this.renderFiles(response)\n                        this.loading_files = false\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        this.current_rendered_type = undefined\n                        console.log(response)\n                        this.loading_files = false\n                        this.$('.gallery-files .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    renderFiles: function (response) {\n        if (response.type != this.$('.media-gallery-items-wrap').attr('data-value'))\n            return;\n        this.total_pages = response.total_pages;\n        this.$('.gallery-files .preloader-wrapper').remove();\n        if (response.items && response.items.length){\n            response.items.forEach((item) => {\n                item.thumbnail && item.thumbnail.url && (item.thumbnail = item.thumbnail.url);\n                let duration;\n                item.metadata && item.metadata.duration && (duration = utils.pretty_duration(item.metadata.duration));\n                let $gallery_file = $(templates.media_gallery_account_file({\n                    file: item,\n                    svg_icon: utils.file_type_icon_svg(item.media_type),\n                    filesize: utils.pretty_size(item.size),\n                    created_at: utils.pretty_date(item.created_at),\n                    duration: duration,\n                    download_only: false,\n                }));\n                (response.type === 'avatars') && $gallery_file.addClass('gallery-avatar');\n                $gallery_file.appendTo(this.$('.gallery-files'));\n                $gallery_file.find('.uploaded-img').length && $gallery_file.find('.uploaded-img').magnificPopup({\n                    type: 'image',\n                    closeOnContentClick: true,\n                    fixedContentPos: true,\n                    mainClass: 'mfp-no-margins mfp-with-zoom',\n                    image: {\n                        verticalFit: true,\n                        titleSrc: function(item) {\n                            return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                        }\n                    },\n                    zoom: {\n                        enabled: true,\n                        duration: 300\n                    }\n                });\n            });\n        }\n        else {\n            this.$('.gallery-files').html(`<div class=\"no-files\">${xabber.getString(\"no_files\")}</div>`)\n        }\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings)\n        if (this.parent && this.parent.updateHeight)\n            this.parent.updateHeight();\n    },\n\n    deleteFile: function (ev) {\n        let $target = $(ev.target).closest('.gallery-file'),\n            file_id = $target.attr('data-id');\n        this.account.deleteFile(file_id,(response) => {\n            $target.detach();\n        }, (err) => {\n        })\n    },\n\n    deleteAvatar: function (ev) {\n        this.account.testGalleryTokenExpire(() => {\n            let $target = $(ev.target).closest('.gallery-file'),\n                file_id = $target.attr('data-id');\n            if (this.account.get('gallery_token') && this.account.get('gallery_url') && file_id)\n                $.ajax({\n                    type: 'DELETE',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({id: file_id, contexts: ['avatar']}),\n                    success: (response) => {\n                        $target.detach();\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n        });\n    },\n\n    enableFilesSelect: function (ev) {\n        this.$('.media-gallery-items-wrap').addClass('select-items-state');\n        this.parent.$('.settings-panel-head-title').addClass('hidden');\n        this.parent.$('.btn-more.media-gallery-button').addClass('hidden');\n        this.parent.$('.btn-back-settings').addClass('hidden');\n        this.onSelectFile();\n    },\n\n    disableFilesSelect: function (ev) {\n        this.$('.media-gallery-items-wrap').removeClass('select-items-state');\n        this.parent.$('.settings-panel-head-title').removeClass('hidden');\n        this.parent.$('.btn-more.media-gallery-button').removeClass('hidden');\n        this.parent.$('.btn-back-settings').removeClass('hidden');\n        this.$('.gallery-file .checkbox-field input:checked').prop('checked', false);\n    },\n\n    selectFile: function (ev) {\n        let $target_input = $(ev.target).closest('.checkbox-field').find('input');\n        $target_input.prop('checked', !$target_input.prop('checked'));\n        this.onSelectFile();\n    },\n\n    onSelectFile: function () {\n        if (!this.$('.media-gallery-items-wrap').attr('data-value'))\n            return;\n        let selected_count = this.$('.gallery-file .checkbox-field input:checked').length,\n            selected_header;\n        selected_header = xabber.getQuantityString(`media_gallery_selected_${this.$('.media-gallery-items-wrap').attr('data-value')}_header`, selected_count);\n        this.$('.gallery-selection-head').text(selected_header);\n\n        this.$('.gallery-file .checkbox-field input:checked').closest('.gallery-file').addClass('selected-gallery-file');\n        this.$('.gallery-file .checkbox-field input:not(:checked)').closest('.gallery-file').removeClass('selected-gallery-file');\n    },\n\n    deleteSelectedFiles: function () {\n        this.$('.gallery-file .checkbox-field input:checked').each((idx, item) => {\n            let file_id = $(item).closest('.gallery-file').attr('data-id');\n            if (file_id){\n                if (this.$('.media-gallery-items-wrap').attr('data-value') === 'avatars'){\n                    this.deleteAvatar({target: item});\n                } else {\n                    this.deleteFile({target: item});\n                }\n            }\n        })\n        this.disableFilesSelect();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target,\n            files = [];\n        for (let i = 0; i < target.files.length; i++) {\n            files.push(target.files[i]);\n        }\n\n        if (files) {\n            this.account.prepareFiles(files, this.openStoragePanel.bind(this));\n            $(target).val('')\n        }\n    },\n});\n\nxabber.DeleteFilesFromGalleryView = xabber.BasicView.extend({\n    className: 'modal main-modal delete-files-modal',\n    ps_selector: '.modal-content',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    template: templates.delete_files_media_gallery,\n    events: {\n        \"click .btn-confirm\": \"deleteFilesFiltered\",\n        \"click .btn-delete-files-percent\": \"deletePercent\",\n        \"click .btn-cancel\": \"close\",\n        \"click .gallery-file\": \"onClickFile\",\n        \"change #delete_avatars\": \"onChangeCheckbox\",\n    },\n\n    render: function (options) {\n        this.account = options.model;\n        this.gallery_view = options.gallery_view;\n        this.delete_percent = null;\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function (options) {\n        this.$el.removeClass('wide-deletion');\n        this.$('.media-gallery-delete-items-wrap').addClass('hidden');\n        this.$('.deletion-variants').removeClass('hidden');\n        this.$('.modal-footer').addClass('hidden');\n        this.$('.gallery-files').addClass('hidden');\n        this.$('.list-variant.tab').addClass('hidden');\n        this.$('.delete-files-preview-container').addClass('hidden');\n        this.$('.setting-name').addClass('hidden');\n        this.$('.delete-files-preview-wrap .gallery-files').html('');\n        this.$('.media-gallery-delete-items-wrap .no-files').addClass('hidden');\n        this.$('.modal-header').text(xabber.getString(\"media_gallery_delete_files\"));\n        this.$('.delete-avatars-checkbox input').prop('checked', false);\n        this.$('.btn-confirm').prop('disabled', false);\n        this.$('.delete-avatars-checkbox').addClass('hidden');\n        this.$('.delete-avatars-checkbox').addClass('hidden2');\n        this.updateScrollBar();\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target),\n            gallery;\n\n        if ($elem.hasClass('uploaded-video')) {\n            let $file = $elem.closest('.gallery-file'),\n                f_url = $file.attr('data-file');\n\n            utils.dialogs.common('', '<video class=\"gallery-video-frame\" controls autoplay=1 width=\"420\" height=\"315\" src=\"' + f_url +'\"></video>', null, null, null, 'gallery-video-modal')\n            return;\n        }\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.gallery_view.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n\n        if ($elem.hasClass('mdi-play')) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n\n        if ($elem.hasClass('mdi-pause')) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n    },\n\n    onChangeCheckbox: function (ev) {\n        let $elem = $(ev.target);\n        this.delete_avatars = $elem.prop('checked');\n        this.$('.delete-files-avatars').switchClass('hidden', !$elem.prop('checked'));\n        if (!this.has_files) {\n            this.$('.media-gallery-delete-items-wrap .no-files').switchClass('hidden', $elem.prop('checked'));\n            this.$('.delete-files-text').switchClass('hidden', !$elem.prop('checked'));\n            this.$('.btn-confirm').prop('disabled', !$elem.prop('checked'));\n        }\n    },\n\n    deletePercent: function (ev) {\n        let $target = $(ev.target).closest('.btn-delete-files-percent'),\n            percent = $target.attr('data-value');\n        this.$el.addClass('wide-deletion');\n        this.$('.deletion-variants').addClass('hidden');\n        this.$('.modal-header').text(xabber.getString(\"media_gallery_delete_files_header\"));\n        this.updateScrollBar();\n        this.delete_avatars = false;\n        this.delete_percent = percent;\n        this.has_files = false;\n        this.current_page_preview = 1\n        $(env.templates.contacts.preloader()).appendTo(this.$('.modal-content'))\n        this.getFilesForDeletion();\n    },\n\n    getFilesForDeletion: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            !options && (options = {});\n            options = Object.assign({obj_per_page: 50}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                let url;\n                if (this.delete_percent === '100'){\n                    url = this.account.get('gallery_url') + 'v1/files/';\n                    options.contexts = ['file', 'avatar', 'voice'];\n                } else {\n                    url = this.account.get('gallery_url') + 'v1/files/percent/' + this.delete_percent + '/';\n                }\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: url,\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    traditional: true,\n                    success: (response) => {\n                        console.log(response)\n                        let current_page = this.current_page_preview;\n                        if (current_page < response.total_pages){\n                            this.current_page_preview++;\n                            options.page = this.current_page_preview;\n                            this.getFilesForDeletion(options)\n                        } else {\n                            this.$('.preloader-wrapper').remove();\n                            this.$('.modal-footer').removeClass('hidden');\n                            this.$('.media-gallery-delete-items-wrap').removeClass('hidden');\n                            if (this.delete_percent === '100'){\n                                this.$('.delete-avatars-checkbox').removeClass('hidden');\n                            }\n                            this.updateScrollBar();\n                        }\n                        this.renderForDeletion(response);\n                        if (current_page === 1 && response.items && response.items.length){\n                            if (!this.has_files) {\n                                this.$('.media-gallery-delete-items-wrap .no-files').removeClass('hidden');\n                                this.$('.delete-files-text').addClass('hidden');\n                                this.$('.btn-confirm').prop('disabled', true);\n                            }\n                        } else if (current_page === 1 && response.items) {\n                            this.$('.media-gallery-delete-items-wrap .no-files').removeClass('hidden');\n                            this.$('.delete-files-text').addClass('hidden');\n                            this.$('.btn-confirm').prop('disabled', true);\n                        }\n                    },\n                    error: (response) => {\n                        console.log(response)\n                        this.$('.preloader-wrapper').remove();\n                        this.$('.media-gallery-delete-items-wrap .no-files').removeClass('hidden');\n                        this.$('.delete-files-text').addClass('hidden');\n                        this.$('.btn-confirm').prop('disabled', true);\n                        this.updateScrollBar();\n                    }\n                });\n            }\n        });\n    },\n\n    renderForDeletion: function (response) {\n        if (response.items && response.items.length){\n            response.items.forEach((item) => {\n                item.thumbnail && item.thumbnail.url && (item.thumbnail = item.thumbnail.url);\n                item.is_avatar = Boolean(item.context === 'avatar');\n                let duration;\n                item.metadata && item.metadata.duration && (duration = utils.pretty_duration(item.metadata.duration));\n                let $gallery_file = $(templates.media_gallery_account_file({\n                    file: item,\n                    svg_icon: utils.file_type_icon_svg(item.media_type),\n                    filesize: utils.pretty_size(item.size),\n                    created_at: utils.pretty_date(item.created_at),\n                    duration: duration,\n                    download_only: true,\n                }));\n                if (!item.is_avatar){\n                    this.has_files = true;\n                }\n                if (item.is_avatar) {\n                    $gallery_file.appendTo(this.$('.gallery-files.delete-files-avatars'));\n                    if (this.delete_percent !== '100')\n                        this.$('.delete-files-avatars').removeClass('hidden');\n                    else {\n                        this.$('.delete-avatars-checkbox').removeClass('hidden2');// сделать чтобы рисовало no files если при 100% есть только аватары и скрывалось появлялось на нажатие чекбокса,\n\n                    }\n                } else if (item.media_type && item.media_type.includes('image')){\n                    $gallery_file.appendTo(this.$('.gallery-files.delete-files-images'));\n                    this.$('.delete-files-images').removeClass('hidden');\n                } else if (item.media_type && item.media_type.includes('video')){\n                    $gallery_file.appendTo(this.$('.gallery-files.delete-files-videos'));\n                    this.$('.delete-files-videos').removeClass('hidden');\n                } else if (item.media_type && item.context === 'voice'){\n                    $gallery_file.appendTo(this.$('.gallery-files.delete-files-voices'));\n                    this.$('.delete-files-voices').removeClass('hidden');\n                } else {\n                    $gallery_file.appendTo(this.$('.gallery-files.delete-files-files'));\n                    this.$('.delete-files-files').removeClass('hidden');\n                }\n                $gallery_file.find('.uploaded-img').length && $gallery_file.find('.uploaded-img').magnificPopup({\n                    type: 'image',\n                    closeOnContentClick: true,\n                    fixedContentPos: true,\n                    mainClass: 'mfp-no-margins mfp-with-zoom',\n                    image: {\n                        verticalFit: true,\n                        titleSrc: function(item) {\n                            return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                        }\n                    },\n                    zoom: {\n                        enabled: true,\n                        duration: 300\n                    }\n                });\n            });\n            let dropdown_settings = {\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'right'\n            };\n            this.$('.dropdown-button').dropdown(dropdown_settings)\n            this.$('.list-variant.tab:not(.hidden)').length && this.$('.list-variant.tab:not(.hidden)').first().click();\n            this.updateScrollBar();\n        }\n    },\n\n    deleteFilesFiltered: function (ev) {\n        if (!this.delete_percent)\n            return\n\n        utils.dialogs.ask(xabber.getString(\"media_gallery_delete_files_confirm_delete_header\"), xabber.getString(\"media_gallery_delete_files_confirm_delete_text\"),\n            null, { ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n            if (!res)\n                return;\n            $(env.templates.contacts.preloader()).appendTo(this.$('.modal-footer'))\n            this.account.testGalleryTokenExpire(() => {\n                if (this.account.get('gallery_token') && this.account.get('gallery_url')){\n                    let options = {}, url;\n                    if (this.delete_percent === '100'){\n                        url = this.account.get('gallery_url') + 'v1/files/';\n                        if (this.delete_avatars)\n                            options.contexts = ['file', 'avatar', 'voice'];\n                        else\n                            options.contexts = ['file', 'voice'];\n                    } else {\n                        url = this.account.get('gallery_url') + 'v1/files/percent/' + this.delete_percent + '/';\n                    }\n                    $.ajax({\n                        type: 'DELETE',\n                        headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                        url: url ,\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: JSON.stringify(options),\n                        success: (response) => {\n                            console.log(response);\n                            this.close();\n                        },\n                        error: (response) => {\n                            this.account.handleCommonGalleryErrors(response)\n                            this.close();\n                            console.log(response)\n                        }\n                    });\n                }\n            });\n        });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n        this.gallery_view.updateStorage();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.AccountSettingsModalView = xabber.BasicView.extend({\n    className: 'settings-panel-wrap',\n    template: templates.account_settings_modal,\n    ps_selector: '.settings-panel',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    avatar_size: constants.AVATAR_SIZES.ACCOUNT_SETTINGS_LEFT,\n\n    events: {\n        \"click .background-overlay\": \"closeSettings\",\n        \"change .main-info-wrap .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-back\": \"showSettings\",\n        \"click .btn-back-settings\": \"backToMenu\",\n        \"click .btn-back-subsettings-account\": \"backToSubMenu\",\n        \"click .btn-emoji-panel\": \"openEmojiPanel\",\n        \"click .btn-selfie\": \"openWebcamPanel\",\n        \"click .settings-tab[data-block-name='status']\": \"openChangeStatus\",\n        \"click .settings-tabs-wrap .settings-tab:not(.delete-account):not(.settings-non-tab)\": \"jumpToBlock\",\n        \"click .tokens-wrap .settings-tab.token-wrap\": \"jumpToBlock\",\n        \"click .settings-tab.delete-account\": \"deleteAccount\",\n        \"click .settings-tab.unregister-account\": \"unregisterAccount\",\n\n        \"change .enabled-state input\": \"setEnabled\",\n        \"change .setting-send-chat-states input\": \"setTypingNotification\",\n        \"change .setting-use-omemo input\": \"setEnabledOmemo\",\n        \"click .btn-change-password\": \"showPasswordView\",\n        \"click .btn-reconnect\": \"reconnect\",\n        \"click\": \"hideResources\",\n        \"change .sync-account\": \"changeSyncSetting\",\n        \"click .btn-delete-settings\": \"deleteSettings\",\n        \"click .color-picker-button\": \"changeColor\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-revoke-token\": \"revokeXToken\",\n        \"click .devices-wrap .btn-revoke-all-tokens\": \"revokeAllXTokens\",\n        \"click .btn-manage-devices\": \"openDevicesWindow\",\n        \"click .btn-block\": \"openBlockWindow\",\n        \"click .btn-unblock-selected\": \"unblockSelected\",\n        \"click .btn-deselect-blocked\": \"deselectBlocked\",\n        \"click .btn-gallery-sorting\": \"sortFiles\",\n        \"click .btn-select-files\": \"enableFilesSelect\",\n        \"click .all-sessions .device-encryption.active\": \"openFingerprint\",\n        \"click .device-information-trust\": \"openFingerprintDevice\",\n        \"click .btn-purge-keys\": \"purgeKeys\"\n    },\n\n    _initialize: function (options) {\n        if (options.forced_ps_container){\n            this.ps_container = options.forced_ps_container;\n        }\n        this.status_field = new xabber.StatusMessageModalWidget({\n            el: this.$('.status-wrap')[0],\n            model: this.model\n        });\n        this.updateName();\n        this.updateAvatar();\n        this.updateBlocks();\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.on(\"change:gallery_token\", this.updateGallery, this);\n        this.model.on(\"activate deactivate\", this.updateBlocks, this);\n        this.model.on(\"destroy\", this.remove, this);\n\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n\n        this.vcard_view = this.addChild('vcard', xabber.AccountVCardModalView,\n            {model: this.model,});\n        this.gallery_view = this.addChild('media-gallery', xabber.AccountMediaGalleryView,\n            {model: this.model, el: this.$('.media-gallery')[0]});\n        this.$('.account-name .value').text(this.model.get('jid'));\n        this.updateStatus();\n        this.updateView();\n        this.showConnectionStatus();\n        this.updateSynchronizationBlock();\n\n        this.model.resources.on(\"change\", this.updateXTokens, this);\n        this.model.resources.on(\"add\", this.updateXTokens, this);\n        this.model.resources.on(\"destroy\", this.updateXTokens, this);\n        this.model.groups.on(\"change\", this.updateGroupsLabel, this);\n        this.model.groups.on(\"add\", this.updateGroupsLabel, this);\n        this.model.groups.on(\"destroy\", this.updateGroupsLabel, this);\n        this.model.session.on(\"change:reconnecting\", this.updateReconnectButton, this);\n        this.model.session.on(\"change:conn_feedback\", this.showConnectionStatus, this);\n        this.model.settings.on(\"change:to_sync\", this.updateSyncOption, this);\n        this.model.settings.on(\"change:deleted\", this.updateDelSettingsButton, this);\n        this.model.settings.on(\"change:to_sync change:synced\", this.updateSyncState, this);\n        this.model.on(\"change:enabled\", this.updateEnabled, this);\n        this.model.on(\"update_omemo_devices\", this.updateOmemoDevices, this);\n        this.model.on('trusting_updated', this.updateOmemoDevices, this);\n        this.model.on('trusting_updated', this.updateXTokens, this);\n        this.model.settings.on(\"change:omemo\", this.updateEnabledOmemo, this);\n        this.model.settings.on(\"change:encrypted_chatstates\", this.updateEncryptedChatstates, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"activate deactivate\", this.updateView, this);\n        this.model.on(\"change:auth_type\", this.updateView, this);\n        this.model.on(\"destroy\", this.remove, this);\n        if (options && !options.single_account_modal) {\n            $(document).on(\"keyup.account_settings_modal\", (ev) => {\n                if (ev.keyCode === constants.KEY_ESCAPE && this.data.get('visible') && !options.single_account_modal) {\n                    this.closeSettings();\n                }\n            });\n        }\n    },\n\n    render: function (options) {\n        this.$('.circle-avatar.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        this.updateCSS();\n\n        this.updateEnabledOmemo();\n        this.updateEncryptedChatstates();\n        this.updateEnabled();\n        this.updateXTokens();\n        this.updateGroupsLabel();\n        this.updateView();\n        this.$('.main-resource .client').text(constants.CLIENT_NAME);\n        this.$('.main-resource .resource').text(this.model.resource);\n        this.$('.main-resource .priority').text(this.model.get('priority'));\n        this.$(`.color-scheme input[type=radio][name=account_color][value=\"${this.model.settings.get('color')}\"]`)\n            .prop('checked', true);\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n        this.$('.panel-content-wrap').removeClass('hidden');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.updateOmemoDevices;\n        this.$('.left-column').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.$('.btn-back-settings').removeClass('hidden');\n        this.$('.btn-back-subsettings-account').addClass('hidden');\n        this.$('.btn-sorting').addClass('hidden');\n        this.$('.settings-panel-head-title').removeClass('hidden');\n        this.$('.media-gallery-button.btn-more').addClass('hidden');\n        this.updateHeight();\n        this.updateBlockedLabel();\n        if (options && options.block_name) {\n            let $elem = this.$(`.settings-tab[data-block-name=\"${options.block_name}\"]`);\n            if ($elem.length)\n                this.jumpToBlock({target: $elem[0]});\n        }\n        return this;\n    },\n\n    updateHeight: function () {\n        let height;\n        if (!this.$('.left-column').hasClass('hidden'))\n            height = this.$('.left-column').height();\n        if (!this.$('.right-column').hasClass('hidden'))\n            height = this.$('.right-column').height();\n        this.ps_container.css('height', height + 'px');\n        this.updateScrollBar();\n    },\n\n    updateBlockedLabel: function () {\n        if (!(this.model.blocklist && this.model.blocklist.list))\n            return;\n\n        let blocked_count = Object.keys(this.model.blocklist.list).length,\n            label_text = blocked_count === 0 ? xabber.getString(\"no_entries\") : xabber.getQuantityString(\"entry_count\", blocked_count);\n        this.$('.settings-tab[data-block-name=\"blocklist\"] .settings-block-label').text(label_text);\n    },\n\n    onScrollY: function () {\n        if (this.getScrollTop() === 0)\n            this.$('.settings-panel-head').removeClass('lined-head');\n        else\n            this.$('.settings-panel-head').addClass('lined-head');\n        if (this.getScrollTop() >= 180)\n            this.$('.settings-account-head').addClass('head-scrolled');\n        else\n            this.$('.settings-account-head').removeClass('head-scrolled');\n    },\n\n    jumpToBlock: function (ev) {\n        this.jumpToBlockHandler(ev);\n    },\n\n    jumpToBlockHandler: function (ev) {\n        if ($(ev.target).closest('.device-encryption').length || $(ev.target).closest('.btn-revoke-token').length)\n            return;\n\n        let $tab = $(ev.target).closest('.settings-tab'),\n            $elem = this.$('.settings-block-wrap.' + $tab.attr('data-block-name')),\n            block_name = $tab.attr('data-block-name');\n        if (block_name){\n            this.$('.device-more-button.btn-more').hideIf(block_name != 'encryption');\n            if (block_name != 'media-gallery'){\n                this.$('.media-gallery-button.btn-more').addClass('hidden');\n            }\n        }\n        if (block_name === 'password'){\n            xabber.trigger('change_account_password', this.model);\n            return;\n        }\n        this.$('.settings-block-wrap').addClass('hidden');\n        this.$('.left-column').addClass('hidden');\n        this.$('.right-column').removeClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span.settings-panel-head-title').text($elem.attr('data-header'));\n        if (block_name === 'media-gallery'){\n            this.gallery_view.$('.media-gallery-items-wrap:not(.delete-files-preview-wrap)').removeClass('select-items-state');\n            this.gallery_view.disableFilesSelect();\n            this.gallery_view.backToMain();\n        }\n        if (block_name === 'blocklist'){\n            this.$('.blocklist-tabs-wrap .tabs .indicator').remove();\n            this.$('.blocklist-tabs-wrap .tabs').tabs();\n            this.$('.blocklist-tabs-wrap .indicator').addClass('ground-color-500');\n        }\n        if (block_name === 'vcard-tab'){\n            this.vcard_view.showEditView(this.$('.vcard'));\n        }\n        if (block_name === 'device-information'){\n            $elem.attr('data-token-uid', $tab.attr('data-token-uid'));\n            this.updateDeviceInformation($tab.attr('data-token-uid'));\n        }\n        this.$('.btn-back-subsettings-account').attr('data-subblock-parent-name', '');\n        if ($tab.closest('.right-column') && $tab.attr('data-subblock-parent-name')) {\n            this.$('.btn-back-settings').addClass('hidden');\n            this.$('.btn-back-subsettings-account').removeClass('hidden');\n            this.$('.btn-back-subsettings-account').attr('data-subblock-parent-name', $tab.attr('data-subblock-parent-name'));\n        }\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    backToMenu: function (ev) {\n        this.backToMenuHandler(ev);\n    },\n\n    backToMenuHandler: function (ev) {\n        this.$('.left-column').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    backToSubMenu: function (ev) {\n        this.backToSubMenuHandler(ev);\n    },\n\n    backToSubMenuHandler: function (ev) {\n        let $tab = $(ev.target).closest('.btn-back-subsettings-account'),\n            block_name = $tab.attr('data-subblock-parent-name');\n        if (!block_name){\n            this.backToMenu(ev);\n            return;\n        }\n        let $elem = this.$('.settings-block-wrap.' + block_name),\n            elem_parent = $elem.attr('data-parent-block');\n        if (block_name){\n            this.$('.device-more-button.btn-more').hideIf(block_name != 'encryption');\n        }\n        this.$('.settings-block-wrap').addClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span.settings-panel-head-title').text($elem.attr('data-header'));\n        if (elem_parent) {\n            $tab.attr('data-subblock-parent-name', elem_parent);\n            this.deselectBlocked();\n        } else {\n            this.$('.btn-back-settings').removeClass('hidden');\n            this.$('.btn-back-subsettings-account').addClass('hidden');\n        }\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.model.get('name'));\n        this.$('.jid').text(this.model.get('jid'));\n        this.updateNameCSS();\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateBlocks: function () {\n        let connected = this.model.isConnected();\n        this.$('.main-info-wrap').switchClass('disconnected', !connected);\n        this.$('.settings-tab[data-block-name=\"profile\"]').showIf(connected);\n        this.$('.settings-tab[data-block-name=\"encryption\"]').showIf(connected);\n        this.$('.profile-image-dropdown').showIf(connected);\n        this.$('.set-groupchat-avatar').showIf(connected);\n        this.updateGallery();\n        this.updateScrollBar();\n    },\n\n    updateGallery: function () {\n        let connected = this.model.isConnected();\n        this.$('.settings-tab[data-block-name=\"media-gallery\"]').showIf(connected && this.model.get('gallery_token'));\n    },\n\n    updateNameCSS: function () {\n        if (!this.isVisible())\n            return;\n        let $name = this.$('.name');\n        $name.removeAttr('style');\n        let wrap_width = this.$('.name-wrap').width(),\n            width = $name.width(),\n            font_size = 22;\n        while (width > wrap_width && font_size > 12) {\n            $name.css({'font-size': font_size});\n            width = $name.width();\n            font_size -= 2;\n        }\n        $name.css({'margin-left': (wrap_width - width) / 2});\n    },\n\n    chooseAvatar: function () {\n        if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n            let avatar_view = new xabber.SetAvatarView();\n            avatar_view.render({model: this.model});\n        } else\n            this.$('.main-info-wrap .circle-avatar input').click();\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    },\n\n    closeSettings: function (ev) {\n        xabber.settings_modal_view.closeSettings();\n    },\n\n    openEmojiPanel: function () {\n        let emoji_panel_view = new xabber.EmojiProfileImageView();\n        emoji_panel_view.open({model: this.model});\n    },\n\n    openWebcamPanel: function () {\n        let webcam_panel_view = new xabber.WebcamProfileImageView();\n        webcam_panel_view.open({model: this.model});\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE && !(this.model.get('gallery_token') && this.model.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        this.$('.circle-avatar').find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image, hash, size) => {\n            if (image) {\n                this.model.pubAvatar({base64: image, hash: hash, size: size, type: file.type, file: file}, () => {\n                    this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                    this.$('.circle-avatar').find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                }, () => {\n                    this.$('.circle-avatar').find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            } else\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n        });\n    },\n\n    updateCSS: function () {\n        this.updateNameCSS();\n    },\n\n    openChangeStatus: function () {\n        !xabber.change_status_view && (xabber.change_status_view = new xabber.ChangeStatusView());\n        xabber.change_status_view.open(this.model);\n    },\n\n    deleteAccount: function () {\n        utils.dialogs.ask(xabber.getString(\"settings_account__button_quit_account\"), xabber.getString(\"dialog_quit_account__confirm\"),\n            [], { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            if (!res)\n                return;\n            this.model.deleteAccount(true);\n        });\n    },\n\n    unregisterAccount: function () {\n        xabber.trigger('unregister_account', this.model);\n    },\n\n\n\n\n\n    updateStatus: function () {\n        let account = this.model,\n            status = account.get('status');\n        this.$('.settings-block-wrap.status .settings-subblock-wrap .status').attr('data-status', status);\n\n        this.$('.settings-tab[data-block-name=\"status\"] .settings-block-label').text(this.model.getStatusMessage());\n    },\n\n    updateOmemoDevices: function () {\n        if (this.model.omemo && this.model.omemo.store){\n            let identity_key = this.model.omemo.store.get('identityKey');\n            if (identity_key){\n                this.$('.btn-manage-devices').removeClass('hidden2');\n            } else {\n                this.model.omemo.store.once('change:identityKey', () => {\n                    this.$('.btn-manage-devices').removeClass('hidden2');\n                }, this);\n            }\n        }\n        else\n            this.$('.btn-manage-devices').addClass('hidden2');\n    },\n\n    updateView: function () {\n        let connected = this.model.isConnected();\n        this.$('.connection-wrap .buttons-wrap .btn-change-password').hideIf(this.model.get('auth_type') === 'x-token');\n        this.$('.connection-wrap .buttons-wrap .btn-reconnect').hideIf(this.model.get('auth_type') === 'x-token');\n        this.updateScrollBar();\n    },\n\n    updateSynchronizationBlock: function () {\n        this.updateSyncState();\n        this.updateSyncOption();\n        this.updateDelSettingsButton();\n    },\n\n    showResources: function (ev) {\n        this.$(`.token-resource-wrap`).hideIf(true)\n        let resource_id = $(ev.target).attr('data-resource-id');\n        this.$(`.token-resource-wrap[data-resource-id=\"${resource_id}\"]`).hideIf(false)\n    },\n\n    hideResources: function (ev) {\n        if (!($(ev.target).hasClass('last-auth') && $(ev.target).hasClass('resource') || $(ev.target).closest(\".token-resource-wrap\").length > 0))\n            this.$(`.token-resource-wrap`).hideIf(true)\n    },\n\n    renderAllXTokens: function () {\n        this.$('.sessions-wrap').html(\"\");\n        this.$('.orphaned-fingerprints-wrap').html(\"\");\n        this.$('.device-encryption-warning').attr('data-not-trusted-count', 0);\n        this.$('.settings-tab[data-block-name=\"devices\"] .settings-block-label').text(xabber.getQuantityString(\"settings_account__devices_subheader_label\", this.model.x_tokens_list.length));\n        let devices_count = this.model.x_tokens_list.length, handled_devices = 0;\n        $(_.sortBy(this.model.x_tokens_list, '-last_auth')).each((idx, token) => {\n            let pretty_token = {\n                resource_obj: undefined,\n                client: token.client,\n                device: token.device,\n                token_uid: token.token_uid,\n                ip: token.ip,\n                last_auth: pretty_datetime_date(token.last_auth),\n                expire: pretty_datetime(token.expire)\n            };\n            let resource_obj = this.model.resources.findWhere({ token_uid: token.token_uid });\n            if (resource_obj)\n                pretty_token.resource_obj = resource_obj.toJSON();\n            if (this.model.get('x_token')) {\n                if (this.model.get('x_token').token_uid == token.token_uid) {\n                    pretty_token.is_omemo = this.model.omemo ? true : false\n                    let $cur_token_html = $(templates.current_token_item_modal(pretty_token));\n                    this.$('.current-session').append($cur_token_html);\n                    handled_devices++;\n                    if (handled_devices === devices_count){\n                        if (!_.isUndefined(this.$('.device-encryption-warning').attr('data-not-trusted-count')))\n                            this.$('.device-encryption-warning').switchClass('hidden', this.$('.device-encryption-warning').attr('data-not-trusted-count') === '0');\n                    }\n                    return;\n                }\n            }\n            let $token_html = $(templates.token_item_modal(pretty_token));\n            this.$('.all-sessions').append($token_html);\n            if (this.model.omemo) {\n                !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n                let omemo_device_id = token.omemo_id ? token.omemo_id : Number(pretty_token.token_uid.slice(0,8));\n                this.omemo_own_devices.updateTrustDevice(Number(omemo_device_id), $token_html, this, () => {\n                    if (this.$(`.settings-block-wrap.device-information[data-token-uid=\"${pretty_token.token_uid}\"]`).length\n                        && !this.$(`.settings-block-wrap.device-information[data-token-uid=\"${pretty_token.token_uid}\"]`).hasClass('hidden')){\n                        this.updateDeviceInformation(pretty_token.token_uid);\n                    }\n                    handled_devices++;\n                    if (handled_devices === devices_count){\n                        if (!_.isUndefined(this.$('.device-encryption-warning').attr('data-not-trusted-count')))\n                            this.$('.device-encryption-warning').switchClass('hidden', this.$('.device-encryption-warning').attr('data-not-trusted-count') === '0');\n                    }\n                });\n            } else {\n                if (token.omemo_id){\n                    $token_html.find('.device-encryption span').text(xabber.getString(\"settings_account__unverified_device\"));\n                    $token_html.find('.device-encryption .mdi-lock').removeClass('hidden');\n                }\n                handled_devices++;\n                if (handled_devices === devices_count){\n                    if (!_.isUndefined(this.$('.device-encryption-warning').attr('data-not-trusted-count')))\n                        this.$('.device-encryption-warning').switchClass('hidden', this.$('.device-encryption-warning').attr('data-not-trusted-count') === '0');\n                }\n            }\n        });\n        if (this.$('.all-sessions').children().length){\n            this.$('.all-sessions-wrap').removeClass('hidden');\n            this.$('.active-sessions-label').removeClass('hidden');\n            this.$('.btn-revoke-all-tokens').removeClass('hidden');\n        }\n        else {\n            this.$('.all-sessions-wrap').addClass('hidden');\n            this.$('.active-sessions-label').addClass('hidden');\n            this.$('.btn-revoke-all-tokens').addClass('hidden');\n        }\n        this.$('.devices-wrap').removeClass('hidden')\n        !this._single_account  && this.$('.token-wrap').attr('data-subblock-parent-name', '');\n        this.updateHeight();\n    },\n\n    updateDeviceInformation: function (token_uid) {\n        let token = this.model.x_tokens_list.find(item => (item.token_uid === token_uid));\n        this.$('.device-information-last-seen').showIf(pretty_datetime(token.last_auth)).find('.device-information-text').text(pretty_datetime(token.last_auth));\n        this.$('.device-information-device').showIf(token.device).find('.device-information-text').text(token.device);\n        this.$('.device-information-client').showIf(token.client).find('.device-information-text').text(token.client);\n        this.$('.device-information-ip').showIf(token.ip).find('.device-information-text').text(token.ip);\n        this.$('.device-information-expires').showIf(pretty_datetime(token.expire)).find('.device-information-text').text(pretty_datetime(token.expire));\n        this.$('.device-information-device-id').showIf(token.omemo_id).find('.device-information-text').text(token.omemo_id);\n        this.$('.device-information-security-label').showIf(token.omemo_id);\n        let resource_obj = this.model.resources.findWhere({ token_uid: token_uid }),\n            status_text;\n        if (resource_obj){\n            status_text = resource_obj.get('status_message') || resource_obj.get('status') && xabber.getString(resource_obj.get('status')) || xabber.getString(\"account_state_connected\");\n        } else if (this.model.get('x_token').token_uid == token.token_uid){\n            status_text = this.model.get('status_message') || this.model.get('status') && xabber.getString(this.model.get('status')) || xabber.getString(\"account_state_connected\")\n        } else\n            status_text = xabber.getString(\"offline\");\n\n        this.$('.device-information-status .device-information-text').text(status_text);\n\n        if (this.model.get('x_token')) {\n            this.$('.btn-revoke-token').hideIf(this.model.get('x_token').token_uid == token.token_uid);\n            this.$('.device-information-trust')\n                .switchClass('hidden', this.model.get('x_token').token_uid == token.token_uid)\n        }\n        if (token.omemo_id && this.model.omemo){\n            let dfd = new $.Deferred(),\n                device = this.model.omemo.own_devices[token.omemo_id];\n            dfd.done((fing) => {\n                if (fing.match(/.{1,8}/g))\n                    fing = fing.match(/.{1,8}/g).join(\" \");\n                this.$('.device-information-fingerprint').showIf(fing).find('.device-information-text').text(fing);\n\n                let $this_device = this.$(`.token-wrap[data-token-uid=\"${token_uid}\"]`)\n\n                this.$('.device-information-trust').removeClass('hidden');\n                this.$('.device-information-trust-text').text($this_device.attr('data-trust-text'));\n                this.$('.device-information-trust').attr('data-trust', $this_device.attr('data-trust'));\n                this.$('.device-information-trust-text').attr('data-trust', $this_device.attr('data-trust'));\n                if (this.model.get('x_token') && this.model.get('x_token').token_uid == token.token_uid){\n                    this.$('.device-information-trust-text').text(xabber.getString(\"settings_account__omemo_enabled\"));\n                    this.$('.device-information-trust').addClass('hidden');\n                    this.$('.device-information-trust').attr('data-trust', 'trust');\n                    this.$('.device-information-trust-text').attr('data-trust', 'trust');\n                }\n            })\n            if (device.get('fingerprint')) {\n                dfd.resolve(device.get('fingerprint'));\n            } else if (device.get('ik')) {\n                device.set('fingerprint', device.generateFingerprint());\n                dfd.resolve(device.get('fingerprint'));\n            } else {\n                device.getBundle().then(({pk, spk, ik}) => {\n                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                    let fingerprint = device.generateFingerprint();\n                    if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                        device.set('fingerprint', fingerprint);\n                    dfd.resolve(device.get('fingerprint'));\n                });\n            }\n        } else {\n            this.$('.device-information-fingerprint').addClass('hidden');\n            this.$('.device-information-trust').addClass('hidden');\n            this.$('.device-information-trust-text').text('');\n            this.$('.device-information-trust').attr('data-trust', '');\n            this.$('.device-information-trust-text').attr('data-trust', '');\n        }\n        this.$('.settings-panel-head span.settings-panel-head-title').text(token.device);\n    },\n\n    openFingerprint: function (ev) {\n        if (this.model.omemo){\n            let $target = $(ev.target).closest('.device-encryption'),\n                is_own = $target.hasClass('is-own');\n            !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n            let token = this.model.x_tokens_list.find(item => (item.token_uid === $target.closest('.token-wrap').attr('data-token-uid'))),\n                omemo_device_id = token && token.omemo_id ? token.omemo_id : Number($target.closest('.token-wrap').attr('data-token-uid').slice(0,8));\n            this.omemo_own_devices.open(Number(omemo_device_id), is_own);\n        }\n    },\n\n    openFingerprintDevice: function (ev) {\n        if (this.model.omemo){\n            if ($(ev.target).closest('.device-information-trust.device-information-trust-own').length)\n                return;\n            let $target = $(ev.target).closest('.device-information');\n            !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n            let token = this.model.x_tokens_list.find(item => (item.token_uid === $target.attr('data-token-uid'))),\n                omemo_device_id = token && token.omemo_id ? token.omemo_id : Number($target.attr('data-token-uid').slice(0,8));\n            this.omemo_own_devices.open(Number(omemo_device_id), false);\n        }\n    },\n\n    updateXTokens: function () {\n        if (this.model.get('auth_type') !== 'x-token') {\n            this.$('.tokens').addClass('hidden');\n            this.$('.sessions-wrap').children().html(\"\");\n            return;\n        }\n        this.model.getAllXTokens(() => {\n            this.$('.sessions-wrap').html(\"\");\n            if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                this.renderAllXTokens();\n            }\n        });\n    },\n\n    updateGroupsLabel: function () {\n        let groups_count = this.model.groups.length,\n            label_text = groups_count === 0 ? xabber.getString(\"contact_circles_empty\") : xabber.getQuantityString(\"settings_account__section_header_circles\", groups_count);\n\n        this.$('.settings-tab[data-block-name=\"circles-groups\"] .settings-block-label').text(label_text);\n    },\n\n    revokeXToken: function (ev) {\n        utils.dialogs.ask(xabber.getString(\"terminate_session_title\"), xabber.getString(\"terminate_session_text\"),\n            {}, { ok_button_text: xabber.getString(\"button_terminate\")}).done((res) => {\n            if (!res)\n                return;\n            let $target = $(ev.target).closest('.settings-block-wrap.device-information'),\n                token_uid = $target.attr('data-token-uid');\n            this.model.revokeXToken([token_uid], () => {\n                if (this.model.get('x_token')){\n                    if (this.model.get('x_token').token_uid === token_uid) {\n                        this.model.deleteAccount(true);\n                        return;\n                    }\n                    this.model.getAllXTokens(() => {\n                        this.$('.sessions-wrap').html(\"\");\n                        this.$('.btn-back-subsettings-account').length && this.backToSubMenu({target: this.$('.btn-back-subsettings-account')[0]})\n                        if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                            this.renderAllXTokens();\n                        }\n                    });\n                }\n            });\n        });\n    },\n\n    revokeAllXTokens: function () {\n        utils.dialogs.ask(xabber.getString(\"settings_account__dialog_terminate_sessions__header\"), xabber.getString(\"terminate_all_sessions_title\"), null, { ok_button_text: xabber.getString(\"button_terminate\")}).done((result) => {\n            if (result && this.model.x_tokens_list)\n                this.model.revokeAllXTokens(() => {\n                    this.model.getAllXTokens(() => {\n                        this.$('.sessions-wrap').html(\"\");\n                        if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                            this.renderAllXTokens();\n                        }\n                    });\n                });\n        });\n    },\n\n    updateSyncState: function () {\n        let state;\n        if (!this.model.settings.get('to_sync'))\n            state = 'off';\n        else\n            state = this.model.settings.get('synced') ? 'yes' : 'no';\n        this.$('.sync-status').text(xabber.getString(constants.SYNCED_STATUS_DATA[state].tip));\n        let mdiclass = constants.SYNCED_STATUS_DATA[state].icon,\n            $sync_icon = this.$('.sync-status-icon');\n        $sync_icon.removeClass($sync_icon.attr('data-mdiclass'))\n            .attr('data-mdiclass', mdiclass).addClass(mdiclass);\n    },\n\n    updateSyncOption: function () {\n        this.$('.sync-account').prop('checked', this.model.settings.get('to_sync'));\n    },\n\n    updateDelSettingsButton: function () {\n        this.$('.btn-delete-settings').hideIf(this.model.settings.get('deleted'));\n    },\n\n    updateEnabled: function () {\n        let enabled = this.model.get('enabled');\n        this.$('.enabled-state input[type=checkbox]').prop('checked', enabled);\n    },\n\n    updateEnabledOmemo: function () {\n        let enabled = this.model.settings.get('omemo'), has_keys = false;\n        if (_.isUndefined(enabled))\n            enabled = false;\n        if (enabled && this.model.omemo_enable_view)\n            this.model.omemo_enable_view.close();\n        this.$('.setting-use-omemo input[type=checkbox]').prop('checked', enabled);\n        this.$('.omemo-settings-wrap .setting-wrap:not(.omemo-enable)').switchClass('hidden', !enabled);\n        this.$('.device-more-button').switchClass('hidden', !enabled);\n        this.$('.label-encryption-enabled').switchClass('hidden', !enabled);\n        this.$('.label-encryption-disabled').switchClass('hidden', enabled);\n        if (!this.model.omemo){\n            this.$('.btn-manage-devices').addClass('hidden2');\n        }\n        this.updateHeight();\n    },\n\n    updateEncryptedChatstates: function () {\n        let enabled = this.model.settings.get('encrypted_chatstates');\n        this.$('.setting-send-chat-states input[type=checkbox]').prop('checked', enabled);\n    },\n\n    updateReconnectButton: function () {\n        this.$('.btn-reconnect').switchClass('disabled', this.model.session.get('reconnecting'));\n    },\n\n    setEnabled: function (ev) {\n        let enabled = this.$('.enabled-state input').prop('checked');\n        this.model.save('enabled', enabled);\n        enabled ? this.model.activate() : this.model.deactivate();\n        if (xabber.accounts.length !== 1){\n            this.showSettings();\n        }\n    },\n\n    setEnabledOmemo: function () {\n        let enabled = this.$('.setting-use-omemo input').prop('checked');\n        this.model.settings.save('omemo', enabled);\n        this.$('.omemo-settings-wrap .setting-wrap:not(.omemo-enable)').switchClass('hidden', !enabled);\n        if (enabled)\n            this.initOmemo();\n        else\n            this.destroyOmemo();\n    },\n\n    setTypingNotification: function () {\n        let enabled = this.$('.setting-send-chat-states input').prop('checked');\n        this.model.settings.save('encrypted_chatstates', enabled);\n    },\n\n    initOmemo: function () {\n        this.model.omemo = new xabber.Omemo({id: 'omemo'}, {\n            account: this.model,\n            storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n            fetch: 'before'\n        });\n        setTimeout(() => {\n            this.model.omemo.onConnected();\n            this.updateXTokens();\n        }, 1000);\n    },\n\n    destroyOmemo: function () {\n        this.model.omemo.destroy();\n        this.model.omemo = undefined;\n        this.updateXTokens();\n    },\n\n    openDevicesWindow: function () {\n        if (this.model.omemo) {\n            !this.omemo_devices && (this.omemo_devices = new xabber.Fingerprints({model: this.model.omemo}));\n            this.omemo_devices.open();\n        }\n        else\n            utils.dialogs.error(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\"));\n    },\n\n    purgeKeys: function () {\n        utils.dialogs.ask(xabber.getString('omemo__dialog_purge_keys__header'), xabber.getString('omemo__dialog_purge_keys__text'),\n            null, { ok_button_text: xabber.getString('omemo__dialog_purge_keys__button_purge_keys')}).done((result) => {\n            if (result) {\n                if (this.model.omemo) {\n                    let device_id = this.model.omemo.get('device_id');\n                    this.model.omemo.save('prekeys', {});\n                    this.model.omemo.bundle && (this.model.omemo.bundle.preKeys = []);\n                    if (this.model.omemo.own_devices[device_id]) {\n                        this.model.omemo.own_devices[device_id].preKeys = [];\n                        this.model.omemo.own_devices[device_id].set({ik: null, fingerprint: null});\n                    }\n                    this.model.getConnectionForIQ().omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                } else {\n                    let omemo = new xabber.Omemo({id: 'omemo'}, {\n                        account: this.model,\n                        storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n                        fetch: 'before'\n                    });\n                    omemo.save('prekeys', {});\n                    this.model.getConnectionForIQ().omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, omemo.get('device_id'));\n                    omemo.destroy();\n                }\n            }\n        });\n    },\n\n    showConnectionStatus: function () {\n        this.$('.conn-status').text(this.model.session.get('conn_feedback'));\n    },\n\n    showPasswordView: function () {\n        this.model.password_view.show();\n    },\n\n    reconnect: function () {\n        if (this.model.session.get('reconnecting'))\n            return;\n        this.model.save('enabled', true);\n        if (this.model.connection.connected)\n            this.model.connection.disconnect();\n        else\n            this.model.connect();\n    },\n\n    changeSyncSetting: function (ev) {\n        let to_sync = $(ev.target).prop('checked'),\n            settings = this.model.settings;\n        settings.save('to_sync', to_sync);\n        if (to_sync) {\n            settings.update_timestamp();\n        }\n    },\n\n    deleteSettings: function () {\n        utils.dialogs.ask(xabber.getString(\"progress_title_delete_settings\"), xabber.getString(\"delete_settings_summary\"),\n            [{name: 'delete_account', checked: this.model.settings.get('to_sync'),\n                text: xabber.getString(\"delete_settings__optional_button__delete_synced_account\")}],{ ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n            if (res) {\n                if (!res.delete_account) {\n                    this.model.settings.save('to_sync', false);\n                } else if (!this.model.settings.get('to_sync')) {\n                    this.model.deleteAccount(true);\n                }\n            }\n        });\n    },\n\n    changeColor: function (ev) {\n        let value = $(ev.target).closest('.color-picker-button').attr('data-color-value');\n        this.model.settings.update_settings({color: value});\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    openBlockWindow: function () {\n        utils.dialogs.ask_enter_value(xabber.getString(\"dialog_block_xmpp_address__text\"), null, {modal_class: 'account-add-blocked', input_placeholder_value: xabber.getString(\"dialog_block_xmpp_address__hint_address\")}, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done((result) => {\n            if (result) {\n                let contact = this.model.contacts.get(result);\n                if (contact)\n                    contact.block();\n                else {\n                    this.model.contacts.blockContact(result);\n                }\n            }\n        });\n    },\n\n    unblockSelected: function () {\n        if (this.children && this.children.blocklist){\n            this.children.blocklist.unblockSelected();\n        }\n    },\n\n    deselectBlocked: function () {\n        if (this.children && this.children.blocklist)\n            this.children.blocklist.deselectBlocked();\n    },\n\n    sortFiles: function (ev) {\n        if (this.gallery_view)\n            this.gallery_view.sortFiles(ev);\n    },\n\n    enableFilesSelect: function () {\n        if (this.gallery_view)\n            this.gallery_view.enableFilesSelect();\n    },\n});\n\nxabber.AccountSettingsSingleModalView = xabber.AccountSettingsModalView.extend({\n    className: 'single-account-settings-panel-wrap',\n    template: templates.single_account_settings_modal,\n    // ps_selector: '.right-column',\n    // ps_settings: {\n    //     wheelPropagation: true\n    // },\n\n    render: function (view, options, args) {\n        if (!_.isNull(view))\n            return;\n        this.$el.detach();\n        this.parent.$('.single-account-info-wrap').append(this.$el);\n        this.ps_container = this.parent.ps_container;\n        this.gallery_view.render();\n        this._single_account = true;\n\n        this.$el.attr('data-color', this.model.settings.get('color'));\n        this.$('.circle-avatar.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        this.updateCSS();\n\n        this.updateEnabledOmemo();\n        this.updateEncryptedChatstates();\n        this.updateEnabled();\n        this.updateXTokens();\n        this.updateGroupsLabel();\n        this.updateView();\n        this.$('.main-resource .client').text(constants.CLIENT_NAME);\n        this.$('.main-resource .resource').text(this.model.resource);\n        this.$('.main-resource .priority').text(this.model.get('priority'));\n        this.$(`.color-scheme input[type=radio][name=account_color][value=\"${this.model.settings.get('color')}\"]`)\n            .prop('checked', true);\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n        this.$('.panel-content-wrap').removeClass('hidden');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.updateOmemoDevices;\n        this.$('.left-column').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.$('.btn-back-settings').removeClass('hidden');\n        this.$('.btn-back-subsettings-account').addClass('hidden');\n        this.updateHeight();\n        this.updateBlockedLabel();\n        if (options && options.account_block_name) {\n            let $elem = this.$(`.settings-tab[data-block-name=\"${options.account_block_name}\"]`);\n            if ($elem.length)\n                this.jumpToBlock({target: $elem[0]});\n        }\n\n        this.parent.single_account_has_rendered = true;\n        return this;\n    },\n\n    jumpToBlock: function (ev) {\n        this.parent.$('.left-column .settings-tabs-wrap.global-settings-tabs').addClass('hidden');\n        this.jumpToBlockHandler(ev);\n    },\n\n    backToMenu: function (ev) {\n        this.parent.$('.left-column .settings-tabs-wrap.global-settings-tabs').removeClass('hidden');\n        this.backToMenuHandler(ev);\n    },\n\n    backToSubMenu: function (ev) {\n        this.parent.$('.left-column .settings-tabs-wrap.global-settings-tabs').addClass('hidden');\n        this.backToSubMenuHandler(ev);\n    },\n\n    updateHeight: function () {\n        this.parent.updateHeight();\n    },\n});\n\nxabber.StatusMessageWidget = xabber.InputWidget.extend({\n    field_name: 'status-message',\n    placeholder: 'Set custom status',\n\n    bindModelEvents: function () {\n        this.model.on(\"change:status_updated\", this.updateValue, this);\n    },\n\n    getValue: function () {\n        return this.model.getStatusMessage();\n    },\n\n    setValue: function (value) {\n        this.model.setStatus(null, value);\n    }\n});\n\nxabber.StatusMessageModalWidget = xabber.InputWidget.extend({\n    field_name: 'status-message',\n    placeholder: 'Set custom status',\n    template: templates.status_message_input_widget,\n\n    showInput: function () {\n        if (this.$input.prop('disabled'))\n            return;\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    bindModelEvents: function () {\n        this.model.on(\"change:status_updated\", this.updateValue, this);\n    },\n\n    getValue: function () {\n        return this.model.getStatusMessage();\n    },\n\n    setValue: function (value) {\n        this.model.setStatus(null, value);\n    }\n});\n\nxabber.AccountSettingsItemModalView = xabber.BasicView.extend({\n    className: 'xmpp-account draggable droppable',\n    template: templates.global_settings_item_modal,\n    avatar_size: constants.AVATAR_SIZES.SETTINGS_ACCOUNT_ITEM,\n\n    events: {\n        \"click .account-info-wrap\": \"showSettings\",\n        \"change .enabled-state input\": \"setEnabled\",\n    },\n\n    _initialize: function () {\n        this.updateEnabled();\n        this.updateNickname();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.updateSyncState();\n        this.showConnectionStatus();\n        this.model.on(\"change:enabled\", this.updateEnabled, this);\n        this.model.on(\"change:vcard\", this.updateNickname, this);\n        this.model.settings.on(\"change:omemo\", this.updateEnabledOmemo, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.session.on(\"change:conn_feedback\", this.showConnectionStatus, this);\n        this.$el.on('drag_to', this.onDragTo.bind(this));\n        this.$('.move-account-to-this')\n            .on('move_xmpp_account', this.onMoveAccount.bind(this));\n        this.model.settings.on(\"change:to_sync\", this.updateSyncState, this);\n    },\n\n    updateNickname: function () {\n        let nickname;\n        if (this.model.get('vcard')) {\n            if (this.model.get('vcard').nickname)\n                nickname = this.model.get('vcard').nickname;\n            else if (this.model.get('vcard').fullname)\n                nickname = this.model.get('vcard').fullname;\n            else if (this.model.get('vcard').first_name || this.model.get('vcard').last_name)\n                nickname = this.model.get('vcard').first_name + ' ' + this.model.get('vcard').last_name;\n        }\n        if (nickname){\n            this.$('.nickname').text(nickname);\n            this.$('.jid').text(this.model.get('jid'));\n            this.$('.nickname-wrap').removeClass('single-row');\n            this.$('.jid-wrap').removeClass('hidden');\n        } else {\n            this.$('.nickname').text(this.model.get('jid'));\n            this.$('.nickname-wrap').addClass('single-row');\n            this.$('.jid-wrap').addClass('hidden');\n        }\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    showConnectionStatus: function () {\n        // this.$('.status').attr('data-status', this.model.get('status'));\n        // this.$('.conn-status').text(this.model.session.get('conn_feedback'));\n    },\n\n    updateEnabled: function () {\n        let enabled = this.model.get('enabled');\n        this.$el.switchClass('disabled', !enabled);\n        this.$('.enabled-state input[type=checkbox]').prop('checked', enabled);\n    },\n\n    setEnabled: function (ev) {\n        let enabled = this.$('.enabled-state input').prop('checked');\n        this.model.save('enabled', enabled);\n        enabled ? this.model.activate() : this.model.deactivate();\n    },\n\n    onDragTo: function (ev, drop_elem) {\n        drop_elem && $(drop_elem).trigger('move_xmpp_account', this.model);\n    },\n\n    onMoveAccount: function (ev, account) {\n        this.model.collection.moveBefore(account, this.model);\n    },\n\n    updateSyncState: function () {\n    },\n\n    showSettings: function () {\n        if (this.model.get('enabled'))\n            this.model.showSettingsModal();\n        else {\n            utils.dialogs.ask_extended(xabber.getString(\"settings_account__enable_account_label\"), xabber.getString(\"settings_account__enable_account_text\", [this.model.get('jid')]),\n                {modal_class: 'modal-offline-account', no_dialog_options: true},\n                {\n                    ok_button_text: xabber.getString(\"button_enable\"),\n                    optional_button: 'delete-account',\n                    optional_button_text: xabber.getString(\"settings_account__button_quit_account\")\n                }).done((res) => {\n                    if (res){\n                        if (res === 'delete-account')\n                            this.model.deleteAccount(null, true);\n                        else {\n                            this.model.save('enabled', true);\n                            this.model.activate();\n                        }\n                    }\n            });\n        }\n    }\n});\n\nxabber.SettingsAccountsModalBlockView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.updateList();\n        this.updateSyncState();\n        this.model.on(\"add\", this.updateOneInList, this);\n        this.model.on(\"update_order\", this.updateList, this);\n        this.model.on(\"destroy\", this.onAccountRemoved, this);\n        this.model.on(\"add\", this.parent.updateAccounts, this.parent);\n        this.model.on(\"update_order\", this.parent.updateAccounts, this.parent);\n        this.model.on(\"destroy\", this.parent.updateAccounts, this.parent);\n        this.$('.move-account-to-bottom')\n            .on('move_xmpp_account', this.onMoveAccountToBottom.bind(this));\n    },\n\n    updateList: function () {\n        _.each(this.children, function (view) { view.detach(); });\n        this.model.each((account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            if (!view) {\n                view = this.addChild(jid, xabber.AccountSettingsItemModalView, {model: account});\n            }\n            this.$('.no-accounts-tip').before(view.$el);\n        });\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    updateOneInList: function (account) {\n        let jid = account.get('jid'),\n            view = this.child(jid);\n        if (view)\n            view.$el.detach();\n        else\n            view = this.addChild(jid, xabber.AccountSettingsItemModalView, {model: account});\n        let index = this.model.indexOf(account);\n        if (index === 0)\n            this.$('.no-accounts-tip').after(view.$el);\n        else\n            this.$('.xmpp-account').eq(index - 1).after(view.$el);\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    onAccountRemoved: function (account) {\n        this.removeChild(account.get('jid'));\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    render: function () {\n        this.updateHtml();\n        _.each(this.children, function (view) {\n            view.updateEnabled();\n        });\n    },\n\n    updateHtml: function () {\n        this.$('.no-accounts-tip').hideIf(this.model.length);\n    },\n\n    updateSyncState: function () {\n    },\n\n    onMoveAccountToBottom: function (ev, account) {\n        this.model.moveToBottom(account);\n    }\n});\n\nxabber.ChangeStatusView = xabber.BasicView.extend({\n    className: 'modal main-modal change-status-modal',\n    template: templates.change_status,\n\n    events: {\n        \"click .status-values li\": \"changeStatus\",\n        \"click .status-message-wrap .clear-input\": \"clearStatusMessageInput\",\n        \"keyup .status-message\": \"keyUp\",\n        \"change .apply-to-all\": \"changeApplyToAll\"\n    },\n\n    open: function (account) {\n        this.account = account;\n        this.highlightStatus(account.get('status'));\n        this.restoreStatusMessageInput();\n        this.show();\n    },\n\n    highlightStatus: function (status) {\n        this.$('.status-values li[data-value=\"'+status+'\"]').addClass('active')\n            .siblings().removeClass('active');\n    },\n\n    changeStatus: function (ev) {\n        let status = $(ev.target).closest('li').data('value');\n        this.highlightStatus(status);\n        this.do_change();\n        this.closeModal();\n    },\n\n    restoreStatusMessageInput: function () {\n        let status_message = this.account.get('status_message');\n        this.$('.status-message').val(status_message)\n            .switchClass('filled', status_message);\n        if (!status_message) {\n            this.$('.status-message').attr('placeholder', this.account.getStatusMessage());\n        }\n    },\n\n    clearStatusMessageInput: function () {\n        let verbose_status = xabber.getString(this.account.get('status'));\n        this.$('.status-message').val('').attr('placeholder', verbose_status)\n            .removeClass('filled');\n    },\n\n    keyUp: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            this.do_change();\n            this.closeModal();\n        } else {\n            let value = this.$('.status-message').val();\n            this.$('.status-message').switchClass('filled', value);\n        }\n    },\n\n    do_change: function () {\n        let status = this.$('.status-values li.active').data('value'),\n            status_message = this.$('.status-message').val();\n        if (this.apply_to_all) {\n            xabber.accounts.each(function (account) {\n                account.setStatus(status, status_message);\n            });\n        } else {\n            this.account.setStatus(status, status_message);\n        }\n    },\n\n    changeApplyToAll: function (ev) {\n        this.apply_to_all = $(ev.target).prop('checked');\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        Materialize.updateTextFields();\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        let value = this.$('.status-message').val();\n        if (!value)\n            this.do_change();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.SetAvatarView = xabber.BasicView.extend({\n    className: 'modal main-modal avatar-picker background-panel',\n    template: templates.avatars_gallery,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .menu-btn\": \"updateActiveMenu\",\n        \"click .library-wrap .image-item\": \"setActiveImage\",\n        'change input[type=\"file\"]': \"onFileInputChanged\",\n        'keyup input.url': \"onInputChanged\",\n        \"click .btn-add\": \"addAvatarSelecter\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n    },\n\n    render: function (options) {\n        this.model = options.model;\n        this.contact = options.contact;\n        this.participant = options.participant;\n        this.parent = options.parent;\n        this.createLibrary();\n        this.$('.menu-btn').removeClass('active');\n        this.$('.menu-btn[data-screen-name=\"library\"]').addClass('active');\n        this.$('.modal-header span').text(xabber.getString(\"account_set_avatar_header\"));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n        let draggable = this.$('.upload-wrap');\n        draggable[0].ondragenter = function (ev) {\n            ev.preventDefault();\n            draggable.addClass('file-drop');\n        };\n        draggable[0].ondragover = function (ev) {\n            ev.preventDefault();\n        };\n        draggable[0].ondragleave = function (ev) {\n            if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                return;\n            ev.preventDefault();\n            draggable.removeClass('file-drop');\n        };\n        draggable[0].ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            draggable.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [], file;\n            for (let i = 0; i < files.length; i++) {\n                if (utils.isImageType(files[i].type)) {\n                    file = files[i];\n                    break;\n                }\n            }\n            file && this.addFile(file);\n        };\n    },\n\n    onPaste: function (ev) {\n        let url = ev.clipboardData.getData('text').trim();\n        this.$('.image-preview img')[0].onload = () => {\n            this.$('.image-preview img').removeClass('hidden');\n            this.updateActiveButton();\n        };\n        this.$('.image-preview img').addClass('hidden')[0].src = url;\n        this.updateActiveButton();\n    },\n\n    updateActiveMenu: function (ev) {\n        let screen_name = ev.target.getAttribute('data-screen-name');\n        this.$('.menu-btn').removeClass('active');\n        this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n        this.updateScreen(screen_name);\n    },\n\n    updateScreen: function (name) {\n        this.$('.screen-wrap').addClass('hidden');\n        this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n        this.scrollToTop();\n        this.updateActiveButton();\n    },\n\n    updateActiveButton: function () {\n        let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            non_active = true;\n        if ($active_screen.attr('data-screen') == 'library') {\n            $active_screen.find('div.active').length && (non_active = false);\n        } else {\n            $active_screen.find('img:not(.hidden)').length && (non_active = false);\n        }\n        this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n    },\n\n    renderFiles: function (response) {\n        this.$('.library-wrap .preloader-wrapper').remove()\n        if (response.items.length){\n            this.current_items = response.items\n            response.items.forEach((item, idx) => {\n                let img = $(`<div class=\"image-item\"/>`);\n                img.css('background-image', `url(\"${item.thumbnail.url}\")`);\n                img.attr('data-src', item.file);\n                img.attr('data-id', idx);\n                this.$('.library-wrap').append(img);\n            });\n        }\n    },\n\n    createLibrary: function () {\n        this.model.testGalleryTokenExpire(() => {\n            let options = {order_by: '-id', contexts: 'avatar'};\n            if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n                this.$('.library-wrap').html(env.templates.contacts.preloader())\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                    url: this.model.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        console.log(response)\n                        this.renderFiles(response)\n                    },\n                    error: (response) => {\n                        this.model.handleCommonGalleryErrors(response)\n                        console.log(response)\n                        this.$('.library-wrap .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    setActiveImage: function (ev) {\n        let $target = $(ev.target);\n        if ($target.hasClass('active'))\n            $target.removeClass('active');\n        else {\n            this.$('.library-wrap>div').removeClass('active');\n            $target.addClass('active');\n        }\n        this.updateActiveButton();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target, file;\n        for (let i = 0; i < target.files.length; i++) {\n            if (utils.isImageType(target.files[i].type)) {\n                file = target.files[i];\n                break;\n            }\n        }\n        file && this.addFile(file);\n        $(target).val('');\n    },\n\n    addFile: function (file) {\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            let image_prev = new Image(),\n                src = e.target.result;\n            image_prev.src = src;\n            this.$('.screen-wrap[data-screen=\"upload\"] img').detach();\n            this.$('.screen-wrap[data-screen=\"upload\"]').prepend(image_prev);\n            this.current_file = file;\n            this.updateActiveButton();\n        };\n        reader.readAsDataURL(file);\n    },\n\n    onInputChanged: function (ev) {\n        if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n            return;\n        if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n            let url = ev.target.value.trim();\n            this.$('.image-preview img')[0].onload = () => {\n                this.$('.image-preview img').removeClass('hidden');\n                this.updateActiveButton();\n            };\n            this.$('.image-preview img').addClass('hidden')[0].src = url;\n            this.updateActiveButton();\n        } else {\n            this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n            this.updateActiveButton();\n        }\n    },\n\n    addAvatarSelecter: function () {\n        if (this.contact){\n            this.addNotOwnAvatar();\n        } else {\n            this.addAvatar();\n        }\n    },\n\n    addAvatar: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n        dfd.done((img, img_from_gallery) => {\n            if (img_from_gallery){\n                image.type = image.media_type;\n                this.model.pubAvatar(image, () => {\n                    this.current_items = [];\n                    this.close();\n                    this.model.trigger('update_avatar_list');\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            } else {\n                utils.images.getAvatarFromFile(img).done((image, hash, size) => {\n                    if (image) {\n                        this.model.pubAvatar({base64: image, hash: hash, size: size, type: img.type, file: img}, () => {\n                            this.close();\n                            this.model.trigger('update_avatar_list');\n                        }, () => {\n                            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                        });\n                    } else\n                        utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        });\n        this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n        this.$('.btn-add').addClass('hidden-disabled');\n\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = this.current_items[$active_screen.find('div.active').attr('data-id')]\n            image.uploaded = true;\n            dfd.resolve(image, true);\n        }\n        else if ($active_screen.attr('data-screen') == 'web-address') {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            this.createFileFromURL(image).then((file) => {\n                dfd.resolve(file);\n            }, (e) => {\n                this.$('.preloader-wrapper').remove();\n                this.$('.btn-add').removeClass('hidden-disabled');\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            })\n        } else\n            dfd.resolve(this.current_file);\n    },\n\n    addNotOwnAvatar: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            participant_node = '';\n        if (this.participant && this.participant.get('id')){\n            participant_node = '#' + this.participant.get('id');\n        }\n        dfd.done((img, img_from_gallery) => {\n            if (img_from_gallery){\n                image.type = image.media_type;\n                this.contact.pubAvatar(image, participant_node, () => {\n                    this.current_items = [];\n                    this.close();\n                    if (this.parent && this.participant) {\n                        this.parent.updateMemberAvatar(this.participant, true);\n                    }\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            } else {\n                utils.images.getAvatarFromFile(img).done((image, hash, size) => {\n                    if (image) {\n                        this.contact.pubAvatar({base64: image, hash: hash, size: size, type: img.type, file: img}, participant_node, () => {\n                            this.close();\n                            if (this.parent && this.participant) {\n                                this.parent.updateMemberAvatar(this.participant, true);\n                            }\n                        }, () => {\n                            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                        });\n                    } else\n                        utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        });\n        this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n        this.$('.btn-add').addClass('hidden-disabled');\n\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = this.current_items[$active_screen.find('div.active').attr('data-id')]\n            image.uploaded = true;\n            dfd.resolve(image, true);\n        }\n        else if ($active_screen.attr('data-screen') == 'web-address') {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            this.createFileFromURL(image).then((file) => {\n                dfd.resolve(file);\n            }, (e) => {\n                this.$('.preloader-wrapper').remove();\n                this.$('.btn-add').removeClass('hidden-disabled');\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            })\n        } else\n            dfd.resolve(this.current_file);\n    },\n\n    createFileFromURL: async function (url) {\n        let response = await fetch(url);\n        let data = await response.blob();\n        let metadata = {\n            type: 'image/png'\n        };\n        let file = new File([data], \"avatar.png\", metadata);\n        return file\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n});\n\nxabber.WebcamProfileImageView = xabber.BasicView.extend({\n    className: 'modal main-modal webcam-panel',\n    template: templates.webcam_panel,\n\n    events: {\n        \"click .btn-save\": \"addAvatarSelecter\",\n        \"click .btn-cancel\": \"close\",\n    },\n\n    open: function (options) {\n        this.account = options.model;\n        this.contact = options.contact;\n        this.participant = options.participant;\n        this.parent = options.parent;\n        this.registration = options.registration;\n        this.registration_view = options.registration_view;\n\n        this.width = 171;\n        this.height = 128;\n        this.streaming = false;\n        this.video = null;\n        this.canvas = null;\n        this.photo = null;\n        this.startbutton = null;\n\n        this.show();\n        this.startupStream();\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    onHide: function () {\n        if (this.video && this.video.srcObject && this.video.srcObject.getTracks()){\n            let tracks = this.video.srcObject.getTracks()\n            tracks.forEach(function(track) {\n                track.stop();\n            });\n            this.video.srcObject = null\n        }\n        this.$el.detach();\n\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    startupStream: function (ev) {\n        this.video = this.$('.webcam-video')[0];\n        this.canvas = this.$('#canvas')[0];\n        this.photo = this.$('.webcam-photo')[0];\n        this.startbutton = this.$('.btn-take-photo')[0];\n        navigator.mediaDevices.getUserMedia({video: true, audio: false})\n            .then((stream) => {\n                this.video.srcObject = stream;\n                this.video.play();\n            })\n            .catch((err) => {\n                console.log(\"An error occurred: \" + err);\n            });\n\n        this.video.addEventListener('canplay', (ev) => {\n            if (!this.streaming) {\n                if (isNaN(this.height)) {\n                    this.height = this.width / (4/3);\n                }\n                this.video.setAttribute('width', this.width);\n                this.video.setAttribute('height', this.height);\n                this.canvas.setAttribute('width', this.width);\n                this.canvas.setAttribute('height', this.height);\n                this.streaming = true;\n            }\n        }, false);\n\n        this.startbutton.addEventListener('click', (ev) =>{\n            this.takePicture();\n            ev.preventDefault();\n        }, false);\n\n        this.$('.circle-icon')[0].addEventListener('click', (ev) =>{\n            if ($(ev.target).closest('.circle-icon').hasClass('disabled'))\n                return;\n            this.clearPhoto();\n            ev.preventDefault();\n        }, false);\n\n        this.clearPhoto();\n\n    },\n\n\n    clearPhoto: function (ev) {\n        let context = this.canvas.getContext('2d');\n        context.fillStyle = \"#AAA\";\n        context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n        let data = this.canvas.toDataURL('image/png');\n        this.photo.setAttribute('src', data);\n        this.$('.btn-take-photo').hideIf(false)\n        this.$('.btn-save').hideIf(true)\n        this.$('.output').hideIf(true)\n    },\n\n\n    takePicture: function (ev) {\n        let context = this.canvas.getContext('2d');\n        this.$('.btn-take-photo').hideIf(true)\n        this.$('.btn-save').hideIf(false)\n        this.$('.output').hideIf(false)\n        if (this.width && this.height) {\n            this.canvas.width = this.width;\n            this.canvas.height = this.height;\n            context.drawImage(this.video, 0, 0, this.width, this.height);\n            context.globalCompositeOperation='destination-in';\n            context.beginPath();\n            context.arc(this.width/2,this.height/2,this.height/2,0,Math.PI*2);\n            context.closePath();\n            context.fill();\n\n            let data = this.canvas.toDataURL('image/png');\n            this.photo.setAttribute('src', data);\n        } else {\n            this.clearPhoto();\n        }\n    },\n\n    addAvatarSelecter: function (ev) {\n        if (this.contact){\n            this.saveNotOwnAvatar();\n        } else {\n            this.saveAvatar();\n        }\n    },\n\n\n    saveAvatar: function () {\n        let blob = Images.getBlobImage(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')),\n            file = new File([blob], \"avatar.png\", {\n                type: \"image/png\",\n            });\n        file.base64 = this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n        if (file && file.base64) {\n            if (this.registration && this.registration_view){\n                this.registration_view.avatar = file;\n                this.registration_view.$('.btn-next').prop('disabled', false);\n                this.registration_view.$('.circle-avatar').addClass('changed');\n                this.registration_view.$('.circle-avatar').setAvatar(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, ''), this.member_details_avatar_size);\n                this.close();\n            } else {\n                this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n                this.$('.btn-save').addClass('hidden-disabled');\n                this.$('.circle-icon').addClass('disabled');\n                this.account.pubAvatar(file, () => {\n                    this.close();\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        }\n    },\n\n    saveNotOwnAvatar: function () {\n        let blob = Images.getBlobImage(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')),\n            file = new File([blob], \"avatar.png\", {\n                type: \"image/png\",\n            }),\n            participant_node = '';\n        if (this.participant && this.participant.get('id')){\n            participant_node = '#' + this.participant.get('id');\n        }\n        file.base64 = this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n        if (file && file.base64) {\n            this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n            this.$('.btn-save').addClass('hidden-disabled');\n            this.$('.circle-icon').addClass('disabled');\n            this.contact.pubAvatar(file, participant_node, () => {\n                this.close();\n                if (this.parent && this.participant) {\n                    this.parent.updateMemberAvatar(this.participant, true);\n                }\n            }, () => {\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            });\n        }\n    },\n});\n\nxabber.EmojiProfileImageView = xabber.BasicView.extend({\n    className: 'modal main-modal emoji-panel',\n    template: templates.emoji_panel,\n\n    events: {\n        \"click .profile-image-background-color\": \"changeColor\",\n        \"click .avatar-wrap\": \"openEmojiPicker\",\n        \"click .close-modal\": \"close\",\n        \"click .btn-save\": \"addAvatarSelecter\",\n        \"click .btn-cancel\": \"close\",\n    },\n\n    open: function (options) {\n        this.account = options.model;\n        this.contact = options.contact;\n        this.participant = options.participant;\n        this.parent = options.parent;\n        this.registration = options.registration;\n        this.registration_view = options.registration_view;\n        this.emoji_panel_view = this.addChild('emoji_picker_panel', xabber.EmojiPickerView,{})\n        this.show();\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    openEmojiPicker: function () {\n        this.emoji_panel_view.open(this);\n    },\n\n    changeColor: function (ev) {\n        let color = $(ev.target).data('value');\n        this.$('.profile-image-background-color').removeClass('chosen-background-color');\n        $(ev.target).addClass('chosen-background-color');\n        this.$('.circle-avatar').attr('class', 'circle-avatar');\n        this.$('.circle-avatar').attr('data-value', color);\n        this.$('.circle-avatar').addClass('ground-color-' + color + '-100');\n    },\n\n    addAvatarSelecter: function (ev) {\n        if (this.contact){\n            this.saveNotOwnAvatar();\n        } else {\n            this.saveAvatar();\n        }\n    },\n\n    saveAvatar: function (ev) {\n        if (this.registration && this.registration_view){\n            let blob = Images.getDefaultAvatar(this.$('.chosen-emoji').data('value') ,this.$('.circle-avatar').css( \"background-color\" ), \"96px EmojiFont\", 176, 176),\n                file = new File([blob], \"avatar.png\", {\n                    type: \"image/png\",\n                });\n            file.generated = true;\n            file.base64 = blob;\n            if (file && file.base64) {\n                this.registration_view.avatar = file;\n                this.registration_view.$('.btn-next').prop('disabled', false);\n                this.registration_view.$('.circle-avatar').addClass('changed');\n                this.registration_view.$('.circle-avatar').setAvatar(blob, this.member_details_avatar_size);\n                xabber._settings.save('main_color', this.$('.circle-avatar').attr('data-value'));\n                xabber.trigger('update_main_color');\n                this.close();\n            }\n        } else {\n            let blob = Images.getBlobImage(Images.getDefaultAvatar(this.$('.chosen-emoji').data('value') ,this.$('.circle-avatar').css( \"background-color\" ), \"96px EmojiFont\", 176, 176)),\n                file = new File([blob], \"avatar.png\", {\n                    type: \"image/png\",\n                });\n            file.base64 = blob;\n            if (file && file.base64) {\n                this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n                this.$('.btn-save').addClass('hidden-disabled');\n                this.account.pubAvatar(file, () => {\n                    this.close();\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        }\n    },\n\n    saveNotOwnAvatar: function (ev) {\n        let blob = Images.getBlobImage(Images.getDefaultAvatar(this.$('.chosen-emoji').data('value') ,this.$('.circle-avatar').css( \"background-color\" ), \"96px EmojiFont\", 176, 176)),\n            file = new File([blob], \"avatar.png\", {\n                type: \"image/png\",\n            }),\n            participant_node = '';\n        if (this.participant && this.participant.get('id')){\n            participant_node = '#' + this.participant.get('id');\n        }\n        file.base64 = blob;\n        if (file && file.base64) {\n            this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n            this.$('.btn-save').addClass('hidden-disabled');\n            this.contact.pubAvatar(file, participant_node, () => {\n                this.close();\n                if (this.parent && this.participant) {\n                    if (this.participant.get('jid') === this.account.get('jid'))\n                        this.parent.updateMemberAvatar(this.participant, true);\n                }\n            }, () => {\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            });\n        }\n    },\n});\n\nxabber.EmojiPickerView = xabber.BasicView.extend({\n    className: 'modal main-modal emoji-panel emoji-picker',\n    template: templates.emoji_picker,\n\n    events: {\n        \"click .emojis-bottom-tab-selector\": \"pickEmojiTab\",\n        \"click .emoji-picker-emoji\": \"pickEmoji\",\n        \"click .close-modal\": \"close\",\n    },\n\n    open: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n        this.readEmojisJSON()\n        this.show();\n    },\n\n    readEmojisJSON: function () {\n        this.emojis = templates.emojis;\n\n        if (this.emojis.length) {\n            this.$('.emoji-picker-wrap').html(templates.emoji_picker_tabs({\n                emojis: this.emojis\n            }));\n            this.ps_container = this.$('.emojis-tab');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n    },\n\n    render: function () {\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    scrollTo: function (offset) {\n        this.ps_container.each((index) => {\n            this.ps_container[index].scrollTop = offset;\n        });\n        this.ps_container.perfectScrollbar('update');\n    },\n\n    scrollToTop: function () {\n        this.scrollTo(0);\n    },\n\n    pickEmojiTab: function (ev) {\n        let tab = $(ev.target).data('value');\n        this.$('.emojis-bottom-tab-selector').removeClass('chosen-emoji-selector');\n        $(ev.target).addClass('chosen-emoji-selector');\n        this.$('.emojis-tab').removeClass('chosen-emoji-tab').addClass('hidden');\n        this.$(`.emojis-tab[data-value=\"${tab}\"]`).removeClass('hidden').addClass('chosen-emoji-tab');\n        this.scrollToTop();\n    },\n\n    pickEmoji: function (ev) {\n        let emoji = $(ev.target).closest('.emoji-picker-emoji').data('value');\n        this.parent.$('.chosen-emoji').attr('data-value', emoji).text(emoji);\n        this.close();\n    },\n});\n\nxabber.ChangePasswordView = xabber.BasicView.extend({\n    className: 'modal main-modal change-password-modal',\n    template: templates.change_password,\n\n    events: {\n        \"click .btn-change\": \"submit\",\n        \"click .btn-cancel\": \"close\",\n        \"keyup input[name=password]\": \"keyUp\"\n    },\n\n    _initialize: function () {\n        this.$('input[name=jid]').val(this.model.get('jid'));\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.updateButtons, this);\n        xabber.on(\"quit\", this.onQuit, this);\n        return this;\n    },\n\n    render: function (options) {\n        options || (options = {});\n        this.is_login = options.login;\n        this.token_invalidated = options.token_invalidated;\n        this.$('.modal-header span').text(this.is_login ? xabber.getString(\"xabber_account__social_links__button_log_in\") : xabber.getString(\"button_set_pass\"));\n        this.$('.btn-cancel').text(this.is_login ? xabber.getString(\"skip\") : xabber.getString(\"cancel\"));\n        this.$('.btn-change').text(this.is_login ? xabber.getString(\"xabber_account__social_links__button_log_in\") : xabber.getString(\"set\"));\n        this.$el.openModal({\n            use_queue: true,\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        Materialize.updateTextFields();\n        this.authFeedback({});\n        this.$password_input.val('').focus();\n    },\n\n    getActionName: function () {\n        return this.is_login ? xabber.getString(\"login\") : xabber.getString(\"set\")\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let jid = this.model.get('jid'),\n            password = this.$password_input.val();\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        password = password.trim();\n        this.authFeedback({password: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\")});\n        if (this.model.connection.connected) {\n            this.model.once('deactivate', () => {\n                this.setPassword(password);\n            });\n            this.model.deactivate();\n        } else {\n            this.setPassword(password);\n        }\n    },\n\n    setPassword: function (password) {\n        this.model.last_msg_timestamp = 0;\n        this.model.save({\n            auth_type: 'password',\n            password: utils.utoa(password),\n            enabled: true\n        });\n        this.model.auth_view = this;\n        this.model.connect();\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-change').text(authentication ? xabber.getString(\"stop\") : this.getActionName());\n    },\n\n    authFeedback: function (options) {\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    successFeedback: function () {\n        this.data.set('authentication', false);\n        this.closeModal();\n    },\n\n    endAuth: function (account) {\n        this.model.save('is_new', undefined);\n        this.successFeedback(this.model)\n        this.model.auth_view = null;\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    onQuit: function () {\n        this.closeModal();\n    },\n\n    close: function () {\n        if (this.is_login)\n            this.model.save('enabled', false);\n        if (this.token_invalidated)\n            this.model.deleteAccount();\n        this.cancel();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.model.auth_view = null;\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.ChangeAccountPasswordView = xabber.BasicView.extend({\n    className: 'modal main-modal change-account-password-modal',\n    template: templates.change_account_password,\n    events: {\n        \"click .btn-change\": \"submit\",\n        \"click .btn-cancel\": \"close\",\n        \"keyup input\": \"keyUp\",\n    },\n\n    render: function (options) {\n        this.account = options.model;\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function (options) {\n        this.$('.original-state').removeClass('hidden');\n        this.$('.success-state').addClass('hidden');\n        this.$old_password_input = this.$('input[name=old_password]');\n        this.$password_input = this.$('input[name=password]');\n        this.$password_confirm_input = this.$('input[name=password_confirm]');\n        this.authFeedback({});\n        this.$password_input.val('');\n        this.$password_confirm_input.val('');\n        this.$old_password_input.val('').focus();\n        this.keyUp();\n    },\n\n    keyUp: function (ev) {\n        ev && ev.keyCode === constants.KEY_ENTER && this.submit();\n        if (this.$old_password_input.val() && this.$password_input.val() && this.$password_confirm_input.val()){\n            this.$('.btn-change').prop('disabled', false);\n        } else {\n            this.$('.btn-change').prop('disabled', true);\n        }\n        this.authFeedback({});\n    },\n\n    submit: function () {\n        this.authFeedback({});\n        let jid = this.account.get('jid'),\n            old_password = this.$old_password_input.val(),\n            password = this.$password_input.val(),\n            password_confirm = this.$password_confirm_input.val();\n        if (!old_password)\n            return this.errorFeedback({old_password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        if (password != password_confirm)\n            return this.errorFeedback({password_confirm: xabber.getString(\"settings_account__alert_passwords_do_not_match\")});\n        old_password = old_password.trim();\n        this.authFeedback({password_confirm: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\"), password_not_error: true});\n        if (!this.account.change_password_connection_manager) {\n            this.account.change_password_view = this;\n            this.account.change_password_connection_manager = new Strophe.ConnectionManager(this.account.CONNECTION_URL);\n            this.account.change_password_connection = this.account.change_password_connection_manager.connection;\n            this.account.change_password_connection.account = this.account;\n            this.account.change_password_connection.register.connect_change_password(jid, old_password, this.account.changePasswordCallback.bind(this.account))\n        }\n    },\n\n    authFeedback: function (options) {\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n        this.$old_password_input.switchClass('invalid', options.old_password)\n            .siblings('span.errors').text(options.old_password || '');\n        this.$password_confirm_input.switchClass('invalid', options.password_confirm && !options.password_not_error)\n            .siblings('span.errors').switchClass('non-error', options.password_not_error).text(options.password_confirm || '');\n        this.parent && this.parent.updateHeight();\n    },\n\n    errorFeedback: function (options) {\n        if (this.account.change_password_connection)\n            this.account.change_password_connection.disconnect()\n        this.authFeedback(options);\n    },\n\n    successFeedback: function () {\n        if (this.account.change_password_connection)\n            this.account.change_password_connection.disconnect()\n        this.$('.original-state').addClass('hidden');\n        this.$('.success-state').removeClass('hidden');\n    },\n\n    onHide: function () {\n        this.$el.detach();\n        if (this.account && this.account.unregister_account_connection_manager && this.account.unregister_account_connection) {\n            this.account.unregister_account_connection.disconnect();\n        }\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.AuthView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.updateButtons, this);\n        return this;\n    },\n\n    render: function () {\n        this.onRender();\n    },\n\n    onRender: function () {\n        this.account = null;\n        this.authFeedback({});\n        Materialize.updateTextFields();\n        this.$jid_input.val('').focus();\n        this.$password_input.val('');\n        this.updateButtons();\n        this.updateOptions && this.updateOptions();\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let jid = this.$jid_input.val(),\n            password = this.$password_input.val();\n        if (this.data.get('registration')){\n            let domain = this.$('#new_account_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-xmpp-server .property-value').text();\n            if (!constants.REGISTRATION_CUSTOM_DOMAIN && !(constants.REGISTRATION_DOMAINS.indexOf(domain) > -1))\n                return this.errorRegistrationFeedback({domain: xabber.getString(\"account_auth__error__registration_custom_domain\")});\n            jid = jid + '@' + domain\n        }\n        else if(\n            (this.$('.input-field-jid .xmpp-server-dropdown-wrap').length && !this.$('.input-field-jid .xmpp-server-dropdown-wrap').hasClass('hidden')) &&\n            (this.$('#sign_in_domain') && this.$('#sign_in_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-auth-xmpp-server .property-value').text())\n        ){\n            let domain = this.$('#sign_in_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-auth-xmpp-server .property-value').text();\n            jid = jid + '@' + domain\n        }\n        if (!jid) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n            }\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n        }\n        jid = jid.trim();\n        if (!password)  {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n            }\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        }\n        if (!this.data.get('registration') && !constants.LOGIN_CUSTOM_DOMAIN && !(constants.LOGIN_DOMAINS.indexOf(Strophe.getDomainFromJid(jid)) > -1))\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__login_custom_domain\")});\n        password = password.trim();\n        let at_idx = jid.indexOf('@');\n        if (at_idx <= 0 || at_idx === jid.length - 1) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"account_auth__error__text_wrong_username\")});\n            }\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__text_wrong_username\")});\n        }\n        jid = Strophe.getBareJidFromJid(jid).toLowerCase();\n        let account = xabber.accounts.get(jid);\n        if (account) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"settings_account__alert_account_exists\")});\n            }\n            this.errorFeedback({jid: xabber.getString(\"settings_account__alert_account_exists\")});\n        } else {\n            if (this.data.get('registration'))\n                this.registerFeedback({registration_success: true, password: xabber.getString(\"account_registration__feedback__text_registration\")});\n            else\n                this.authStepperShow();\n            this.getWebsocketURL(jid, (response) => {\n                this.account = xabber.accounts.create({\n                    jid: jid,\n                    websocket_connection_url: response || constants.CONNECTION_URL,\n                    password: utils.utoa(password),\n                    is_new: true\n                }, {auth_view: this});\n\n                if (this.data.get('registration')) {\n                    this.account.connection.register.connect(jid, this.account.registerCallback.bind(this.account))\n                }\n                else\n                    this.account.trigger('start');\n            });\n        }\n    },\n\n    getWebsocketURL: function (jid, callback) {\n        if (!constants.DISABLE_LOOKUP_WS) {\n            let domain = Strophe.getDomainFromJid(jid),\n                request = {\n                    type: 'GET',\n                    url: window.location.protocol + '//' + domain + '/.well-known/host-meta',\n                    dataType: 'xml',\n                    success: (success) => {\n                        let socket_url = $(success).find('Link').attr('href');\n                        if (socket_url)\n                            callback && callback(socket_url);\n                        else\n                            callback && callback(null);\n                    },\n                    error: () => {\n                        callback && callback(null);\n                    },\n                    timeout: 5000\n                };\n            $.ajax(request);\n        }\n        else\n            callback && callback(null);\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n        this.onRender();\n        if (this.account) {\n            this.account.destroy();\n            this.account = null;\n        }\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid)\n            .siblings('span.errors').text(options.jid || '');\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    authStepperShow: function (){\n        this.authFeedback({password: xabber.getString(\"account_auth__feedback__text_authentication\")});\n    },\n\n    endAuth: function (account) {\n        this.account.save('is_new', undefined);\n        this.successFeedback(this.account)\n        this.account.auth_view = null;\n    },\n\n    socialAuth: function (ev) {\n        let origin = window.location.href,\n            provider = $(ev.target).closest('.btn-social').data('provider');\n        if (provider == 'email')\n            xabber.body.setScreen('login', {'login_screen': 'xabber'});\n        else\n            window.location.href = constants.XABBER_ACCOUNT_URL + '/social/login/' + provider + '/?origin=' + origin + '&source=Xabber Web';\n    }\n});\n\nxabber.XmppLoginPanel = xabber.AuthView.extend({\n    className: 'login-panel',\n    template: templates.xmpp_login,\n\n    events: {\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-sign-up-instead\": \"logoutAndRegister\",\n        \"click .btn-register-form\": \"openRegisterForm\",\n        \"click .btn-login-form\": \"openLoginForm\",\n        \"click .btn-register\": \"register\",\n        \"click .btn-cancel\": \"cancel\",\n        \"click .btn-go-back-menu\": \"openButtonsMenu\",\n        \"click .btn-go-back\": \"openPreviousStep\",\n        \"click .btn-next\": \"openNextStep\",\n        \"click .btn-skip\": \"registerWithoutAvatar\",\n        \"click .btn-finish-log-in\": \"endAuth\",\n        \"keyup input[name=register_nickname]\": \"keyUpNickname\",\n        \"keyup input[name=register_jid]\": \"keyUpJid\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"keyup input[name=register_domain]\": \"keyUpDomain\",\n        \"focusout input[name=register_domain]\": \"focusoutDomain\",\n        \"keyup input[name=register_password]\": \"keyUpPassword\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-emoji-panel\": \"openEmojiPanel\",\n        \"click .btn-selfie\": \"openWebcamPanel\",\n        \"click #select-xmpp-server .property-variant\": \"changePropertyValueRegistration\",\n        \"click #select-auth-xmpp-server .property-variant\": \"changePropertyValueAuth\",\n    },\n\n    __initialize: function () {\n        this.$nickname_input = this.$('input[name=register_nickname]');\n        this.$domain_input = this.$('input[name=register_domain]');\n        this.data.on(\"change:step\", this.handleRegistrationStep, this);\n        return this;\n    },\n\n    onRender: function () {\n        this.data.set('step', 1)\n        this.account = null;\n        this.stepped_auth = true;\n        this.stepped_auth_complete = false;\n        this.authFeedback({});\n        this.registerFeedback({});\n        Materialize.updateTextFields();\n        this.$('.btn-go-back').hideIf(false);\n        this.$('.btn-skip').hideIf(true)\n        this.$nickname_input.val('');\n        this.$jid_input.val('');\n        this.$password_input.val('');\n        this.$('.circle-avatar').css({'background-image': ''});\n        this.$('.circle-avatar').css({'background-color': ''});\n        this.updateButtons();\n        this.updateDomains();\n        this.updateAuthDomains();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.property-field .select-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.avatar-wrap.dropdown-button').dropdown(dropdown_settings);\n        this.$('.btn-register-form').hideIf(!constants.REGISTRATION_BUTTON);\n        this.$('.btn-login-form').hideIf(!constants.LOGIN_CUSTOM_DOMAIN && !constants.LOGIN_DOMAINS.length);\n        this.$('.register-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.REGISTRATION_CUSTOM_DOMAIN);\n        this.$('.login-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.LOGIN_CUSTOM_DOMAIN);\n        this.updateOptions && this.updateOptions();\n        this.$('#select-xmpp-server').hideIf(xabber.url_params.rkey)\n        this.$('.select-xmpp-server .caret').hideIf(xabber.url_params.rkey)\n        if (xabber.url_params.anchor == 'signup' || xabber.url_params.rkey)\n            this.data.set('step', 2)\n        else if (xabber.url_params.anchor == 'signin')\n            this.data.set('step', 0)\n    },\n\n    openButtonsMenu: function () {\n        this.data.set('step', 1)\n    },\n\n    register: function () {\n        if (this.data.get('registration')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('registration', true);\n        this.$jid_input.prop('disabled', true);\n        this.$password_input.prop('disabled', true);\n        this.submit();\n    },\n\n    login: function () {\n        this.submit();\n    },\n\n    keyUpNickname: function (ev) {\n        if(this.$nickname_input.val()){\n            this.$('.btn-next').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-next').prop('disabled', true);\n        }\n        if (this.$nickname_input.val() && ev)\n            ev.keyCode === constants.KEY_ENTER && this.openNextStep();\n    },\n\n    keyUpJid: function (ev) {\n        clearTimeout(this._check_user_timeout);\n        if (!this.$('.btn-next').prop('disabled') && ev && ev.keyCode === constants.KEY_ENTER) {\n            this.openNextStep();\n            return;\n        }\n        if (this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.REGISTRATION_CUSTOM_DOMAIN){\n            this.setCustomDomainRegistration(this.$('.register-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'))\n            this.$domain_input.val(this.$jid_input.val().split('@')[1]);\n            this.$jid_input.val(this.$jid_input.val().split('@')[0]);\n            this.$domain_input.focus();\n            return;\n        }\n        this.$('.btn-next').prop('disabled', true);\n        if(this.$jid_input.val()){\n            let regexp_local_part = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))$/,\n                regexp_domain = /^((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                domain = this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text();\n            if (!regexp_local_part.test(this.$jid_input.val()))\n                return this.registerFeedback({jid: xabber.getString(\"account_add__alert_localpart_invalid\")});\n            else if (!(regexp_domain.test(domain)))\n                return this.registerFeedback({domain: xabber.getString(\"account_add__alert_invalid_domain\")});\n            else\n                this.registerFeedback({});\n            if (!constants.REGISTRATION_CUSTOM_DOMAIN && !(constants.REGISTRATION_DOMAINS.indexOf(domain) > -1))\n                return this.registerFeedback({domain: xabber.getString(\"account_auth__error__registration_custom_domain\")});\n            this._check_user_timeout = setTimeout(() => {\n                domain = this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text();\n                this.$('.btn-next').prop('disabled', true);\n                this._registration_username = this.$jid_input.val()\n                this._registration_domain = domain\n                if (domain) {\n                    if (this.auth_connection && this.auth_connection.domain != domain)\n                        this.auth_connection.disconnect()\n                    if (!this.auth_connection) {\n                        this.getWebsocketURL(domain, (response) => {\n                            this.CONNECTION_URL = response || constants.CONNECTION_URL;\n                            this.auth_conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL);\n                            this.auth_connection = this.auth_conn_manager.connection;\n                            this.auth_connection.register.connect_check_user(domain, this.checkUserCallback.bind(this))\n                        });\n                    }\n                    else if(this.auth_connection && this.auth_connection.connected) {\n                        this.auth_connection.register._connection._addSysHandler(this.handleRegisterStanza.bind(this.auth_connection.register),\n                            null, \"iq\", null, null);\n                        this.auth_connection.register._connection.send($iq({type: \"get\", id: uuid(), to: this.auth_connection.register.domain }).c(\"query\",\n                            {xmlns: Strophe.NS.REGISTER}).c(\"username\").t(this._registration_username.trim()).tree());\n                    }\n                }\n                else {\n                    this.registerFeedback({jid: xabber.getString(\"account_add__alert_invalid_domain\")});\n                }\n            }, 1000);\n        }\n        else\n            this.registerFeedback({});\n    },\n\n    keyUpPassword: function (ev) {\n        if(this.$password_input.val()){\n            this.$('.btn-next').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-next').prop('disabled', true);\n        }\n        if (this.$password_input.val() && ev)\n            ev.keyCode === constants.KEY_ENTER && this.openNextStep();\n    },\n\n    keyUpDomain: function () {\n    },\n\n    keyUpLogin: function (ev) {\n        if(this.$jid_input.val() && this.$password_input.val()){\n            this.$('.btn-log-in').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-log-in').prop('disabled', true);\n        }\n        this.$('.login-step-wrap').hideIf(true);\n        this.authFeedback({});\n        this.$('.input-field-jid .xmpp-server-dropdown-wrap').hideIf(this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.LOGIN_CUSTOM_DOMAIN)\n        if (this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.LOGIN_CUSTOM_DOMAIN){\n            this.$('.input-field-jid').addClass('input-field-jid-borders')\n        }else {\n            this.$('.input-field-jid').removeClass('input-field-jid-borders')\n        }\n        if (ev && this.$jid_input.val() && this.$password_input.val())\n            ev.keyCode === constants.KEY_ENTER && this.login();\n    },\n\n    focusoutDomain: function () {\n        if(this.$jid_input.val() && (this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text()))\n            this.keyUpJid();\n    },\n\n    handleRegisterStanza: function (stanza) {\n        let i, query, field, username_taken, conn = this._connection;\n        query = stanza.getElementsByTagName(\"query\");\n        if (query.length !== 1) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n            return false;\n        }\n        query = query[0];\n        for (i = 0; i < query.childNodes.length; i++) {\n            field = query.childNodes[i];\n            if (field.tagName.toLowerCase() === 'instructions') {\n                conn.register.instructions = Strophe.getText(field);\n                continue;\n            } else if (field.tagName.toLowerCase() === 'username') {\n                if (Strophe.getText(field))\n                    this._supports_check_user = true\n                continue;\n            } else if (field.tagName.toLowerCase() === 'registered') {\n                username_taken = true\n                continue;\n            } else if (field.tagName.toLowerCase() === 'x') {\n                continue;\n            }\n            conn.register.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n        }\n        if (this._supports_check_user){\n            if (username_taken)\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, null);\n            else\n                conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n        else\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"not-supported\");\n\n        return false;\n    },\n\n    checkUserCallback: function (status, condition) {\n        if (status === Strophe.Status.REGISTER || status === Strophe.Status.REGIFAIL) {\n            if (!this.$('.select-xmpp-server .property-variant[data-value=\"' + this.auth_connection.register.domain + '\"]').length && constants.REGISTRATION_CUSTOM_DOMAIN) {\n                $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                    .text(this.auth_connection.register.domain)\n                    .attr('data-value', this.auth_connection.register.domain)\n                    .insertBefore(this.$('.register-form-jid .dropdown-content .set-custom-domain'));\n            }\n            this.$('.select-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#new_account_domain').val(\"\");\n            this.$('.select-xmpp-server .xmpp-server-item-wrap .property-value').text(this.auth_connection.register.domain)\n                .removeClass('hidden').attr('data-value', this.auth_connection.register.domain);\n        }\n        if (status === Strophe.Status.REGISTER) {\n            if (this.auth_connection && this.auth_connection.connected) {\n                this.auth_connection.register._connection._addSysHandler(this.handleRegisterStanza.bind(this.auth_connection.register),\n                    null, \"iq\", null, null);\n                this.auth_connection.register._connection.send($iq({type: \"get\", id: uuid(), to: this.auth_connection.register.domain }).c(\"query\",\n                    {xmlns: Strophe.NS.REGISTER}).c(\"username\").t(this._registration_username.trim()).tree());\n            }\n        } else if (status === Strophe.Status.REGISTERED) {\n            this.registerFeedback({user_success: true, jid: xabber.getString(\"xmpp_login__registration_jid_available\")});\n            this.$('.btn-next').prop('disabled', false);\n        } else if (status === Strophe.Status.CONFLICT) {\n            this.registerFeedback({jid: xabber.getString(\"xmpp_login__registration_jid_occupied\")});\n            this.$('.btn-next').prop('disabled', true);\n        } else if (status === Strophe.Status.CONNFAIL) {\n            this.registerFeedback({jid: xabber.getString(\"CONNECTION_FAILED\") + ': ' + condition});\n            this.$('.btn-next').prop('disabled', true);\n        } else if (status === Strophe.Status.REGIFAIL) {\n            if (condition === 'not-supported'){\n                this.registerFeedback({});\n                this.$('.btn-next').prop('disabled', false);\n            }\n            else {\n                this.registerFeedback({jid: xabber.getString(\"xmpp_login__registration_jid_not_supported\")});\n                this.$('.btn-next').prop('disabled', true);\n            }\n            this.auth_connection.disconnect()\n        } else if (status === Strophe.Status.CONNECTING) {\n            clearTimeout(this._check_user_connection_timeout);\n                this._check_user_connection_timeout = setTimeout(() => {\n                    if(this.auth_connection && !this.auth_connection.connected){\n                        this.auth_connection._no_response = true\n                        this.auth_connection.disconnect()\n                    }\n                }, 10000);\n        } else if (status === Strophe.Status.DISCONNECTED) {\n            if (this.auth_connection && this.auth_connection._no_response) {\n                this.registerFeedback({jid: xabber.getString(\"account_add__alert_invalid_domain\")});\n                this.$('.btn-next').prop('disabled', true);\n            }\n            this.auth_conn_manager = undefined;\n            this.auth_connection = undefined;\n        }\n    },\n\n    openPreviousStep: function () {\n        let step = this.data.get('step')\n        if(typeof step === 'number') {\n            step--;\n            this.data.set('step', step)\n        }\n    },\n\n    openNextStep: function () {\n        let step = this.data.get('step')\n        if(typeof step === 'number') {\n            step++;\n            this.data.set('step', step)\n        }\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step')\n        if (step === -1){\n            this.$(`.server-feature .preloader-wrapper`).addClass('active').addClass('visible');\n            this.$(`.server-feature .mdi`).hideIf(true);\n            this.$(`.server-feature`).removeClass('active-feature')\n            this.$(`.server-feature .mdi`).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n            this.$('.login-form-header').text(xabber.getString(\"signin_server_features\"));\n            this.$('.login-form-server-features .register-form-step-header').text(xabber.getString(\"signin_checking_features_message\", [this.account.domain]));\n            this.$('.btn-go-back-menu').hideIf(true);\n            this.$('.login-form-jid').hideIf(true);\n            this.$('.login-form-server-features').hideIf(false);\n            this.$('.btn-log-in').hideIf(true);\n            this.checkFeaturesStepper();\n        }\n        if (step === 0){\n            this.$jid_input = this.$('input[name=jid]');\n            this.$password_input = this.$('input[name=password]');\n            this.$domain_input = this.$('input[name=sign_in_domain]');\n            this.$domain_input.val('')\n            this.$jid_input.val('')\n            this.$password_input.val('')\n            this.keyUpLogin();\n            this.$('.login-step-wrap').hideIf(true);\n            this.authFeedback({});\n            this.resetAuthStepper();\n            this.$('.login-panel-form.xmpp-login-form .buttons-wrap').removeClass('server-features-additional-button')\n            this.$('.login-form-header').text(xabber.getString(\"title_login_xabber_account\"));\n            this.$('.btn-go-back-menu').hideIf(false);\n            this.$('.login-panel-intro').hideIf(true);\n            this.$('.register-form').hideIf(true);\n            this.$('.xmpp-login-form').hideIf(false);\n            this.$('.login-form-jid').hideIf(false);\n            this.$('.login-form-server-features').hideIf(true);\n            this.$('.btn-log-in').hideIf(false);\n            this.$('.btn-finish-log-in').hideIf(true);\n            this.$('.btn-sign-up-instead').hideIf(true);\n            this.$jid_input.focus();\n        }\n        else if (step === 1){\n            this.$('.login-panel-intro').hideIf(false);\n            this.$('.register-form').hideIf(true);\n            this.$('.xmpp-login-form').hideIf(true);\n        }\n        else if (step === 2){\n            this.$jid_input = this.$('input[name=register_jid]');\n            this.$password_input = this.$('input[name=register_password]');\n            this.$domain_input = this.$('input[name=register_domain]');\n            this.keyUpNickname();\n            this.$('.login-form-header').text(xabber.getString(\"title_register_xabber_account\"));\n            this.$('.login-form-url').hideIf(false);\n            this.$('.login-panel-intro').hideIf(true);\n            this.$('.register-form').hideIf(false);\n            this.$('.xmpp-login-form').hideIf(true);\n            this.$('.register-form-nickname').hideIf(false);\n            this.$('.register-form-jid').hideIf(true);\n            this.$('.register-form-password').hideIf(true);\n            this.$('.register-form-picture').hideIf(true);\n            this.$nickname_input.focus();\n        }\n        else if (step === 3){\n            if (this.$nickname_input.val()) {\n                this.$('.login-form-header').text(xabber.getString(\"hint_username\"));\n                this.$('.register-form-nickname').hideIf(true);\n                this.$('.register-form-jid').hideIf(false);\n                this.$('.register-form-password').hideIf(true);\n                this.$('.register-form-picture').hideIf(true);\n                this.keyUpJid();\n                this.$jid_input.focus();\n                this.$password_input.val('');\n            }\n            else {\n                this.registerFeedback({nickname: xabber.getString(\"dialog_add_circle__error__text_input_name\")});\n                return this.data.set('step', 2);\n            }\n\n        }\n        else if (step === 4){\n            if (this.$jid_input.val()) {\n                this.$('.login-form-header').text(xabber.getString(\"hint_pass\"));\n                this.$('.register-form-nickname').hideIf(true);\n                this.$('.register-form-jid').hideIf(true);\n                this.$('.register-form-password').hideIf(false);\n                this.$('.register-form-picture').hideIf(true);\n                this.keyUpPassword();\n                this.$password_input.focus();\n            }\n            else {\n                this.registerFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n                return this.data.set('step', 3);\n            }\n\n        }\n        else if (step === 5){\n            if (this.$password_input.val()) {\n                this.register();\n            }\n            else {\n                this.registerFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n                return this.data.set('step', 4);\n            }\n        }\n        else if (step === 6){\n            this.$('.login-form-header').text(xabber.getString(\"xmpp_login__registration_header_avatar\"));\n            this.$('.login-form-url').hideIf(true);\n            this.$('.btn-go-back').hideIf(true);\n            this.$('.btn-skip').hideIf(false)\n            this.$('.register-form-nickname').hideIf(true);\n            this.$('.register-form-jid').hideIf(true);\n            this.$('.register-form-password').hideIf(true);\n            this.$('.register-form-picture').hideIf(false);\n            this.$('.btn-next').prop('disabled', true);\n        }\n        else if (step >= 7){\n            if(this.avatar)\n                this.account.pubAvatar(this.avatar, () => {\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            this.successRegistrationFeedback();\n        }\n    },\n\n    registerWithoutAvatar: function () {\n        this.successRegistrationFeedback();\n    },\n\n    logoutAndRegister: function () {\n        this.account.session.set('delete', true);\n        this.account.deactivate();\n        this.openRegisterForm()\n    },\n\n    openRegisterForm: function () {\n        this.data.set('step', 2)\n    },\n\n    openLoginForm: function () {\n        this.data.set('step', 0)\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-log-in').prop('disabled', authentication);\n    },\n\n    updateDomains: function () {\n        let all_servers = constants.REGISTRATION_DOMAINS;\n        if (xabber.url_params.rkey && all_servers.length){\n            for (let i = all_servers.length - 1; i >= 0; i--) {\n                if (!sha1(all_servers[i]).substr(0, 10).includes(xabber.url_params.rkey.substr(0, 10))){\n                    all_servers.splice(i, 1)\n                }\n            }\n        }\n        this.$('.register-form-jid .field-jid.property-variant').remove()\n        if (all_servers.length)\n            this.$('.register-form-jid .xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n        else\n            this.setCustomDomainRegistration(this.$('.register-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.register-form-jid .modal-content .jid-field .set-default-domain').remove();\n\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                .text(all_servers[i])\n                .attr('data-value', all_servers[i])\n                .insertBefore(this.$('.register-form-jid .dropdown-content .set-custom-domain'));\n        }\n    },\n\n    updateAuthDomains: function () {\n        let all_servers = constants.LOGIN_DOMAINS;\n\n        this.$('.login-form-jid .field-jid.property-variant').remove()\n        if (all_servers.length)\n            this.$('.login-form-jid .xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n        else\n            this.setCustomDomainAuth(this.$('.login-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.login-form-jid .modal-content .jid-field .set-default-domain').remove();\n\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                .text(all_servers[i])\n                .attr('data-value', all_servers[i])\n                .insertBefore(this.$('.login-form-jid .dropdown-content .set-custom-domain'));\n        }\n    },\n\n    setCustomDomainRegistration: function ($property_value) {\n        this.$('#new_account_domain').val(\"\");\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.select-xmpp-server .caret').addClass('hidden');\n        this.$('.select-xmpp-server .input-group-chat-domain').removeClass('hidden');\n    },\n\n    setCustomDomainAuth: function ($property_value) {\n        this.$('#sign_in_domain').val(\"\");\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.select-auth-xmpp-server .caret').addClass('hidden');\n        this.$('.select-auth-xmpp-server .input-group-chat-domain').removeClass('hidden');\n    },\n\n    changePropertyValueRegistration: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomainRegistration($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.select-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#new_account_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-xmpp-server .caret').removeClass('hidden');\n        if(this.$jid_input.val() && (this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text()))\n            this.keyUpJid();\n    },\n\n    changePropertyValueAuth: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomainAuth($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.select-auth-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#sign_in_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-auth-xmpp-server .caret').removeClass('hidden');\n    },\n\n    chooseAvatar: function () {\n        this.$('.circle-avatar input').click();\n    },\n\n    openEmojiPanel: function () {\n        let emoji_panel_view = new xabber.EmojiProfileImageView();\n        emoji_panel_view.open({model: this.account, registration: true, registration_view: this});\n    },\n\n    openWebcamPanel: function () {\n        let webcam_panel_view = new xabber.WebcamProfileImageView();\n        webcam_panel_view.open({model: this.account, registration: true, registration_view: this});\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.avatar = file;\n                this.$('.btn-next').prop('disabled', false);\n                this.$('.circle-avatar').addClass('changed');\n                this.$('.circle-avatar').setAvatar(image, this.member_details_avatar_size);\n            }\n        });\n    },\n\n    successFeedback: function () {\n        this.data.set('step', -1)\n    },\n\n    checkFeaturesStepper: function () {\n        this.$('.server-features-error').text('');\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            if (this.account.server_features.get(Strophe.NS.MAM)){\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"]`).addClass('active-feature');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n            }\n            else\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n            setTimeout(() => {\n                if (this.account.server_features.get(Strophe.NS.SYNCHRONIZATION)){\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).addClass('active-feature');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                }\n                else\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                setTimeout(() => {\n                    if (this.account.server_features.get(Strophe.NS.REWRITE)){\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"]`).addClass('active-feature');\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                    }\n                    else\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                    setTimeout(() => {\n                        if (this.account.server_features.get(Strophe.NS.AUTH_DEVICES)) {\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`).addClass('active-feature');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                        }\n                        else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');;\n                        setTimeout(() => {\n                            if (this.account.server_features.get(Strophe.NS.PUBSUB)){\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"]`).addClass('active-feature');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                            }\n                            else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                            setTimeout(() => {\n                                if (this.account.server_features.get(Strophe.NS.HTTP_UPLOAD)){\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`).addClass('active-feature');\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                }\n                                else\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                                setTimeout(() => {\n                                    if (constants.RECOMMENDED_DOMAIN && (this.$('.server-feature.active-feature').length != 6)){\n                                        this.$('.server-features-error').text(xabber.getString('signin_not_all_features', [constants.RECOMMENDED_DOMAIN]));\n                                        this.$('.login-panel-form.xmpp-login-form .buttons-wrap').addClass('server-features-additional-button');\n                                        this.$('.btn-sign-up-instead').hideIf(false);\n                                    }\n                                    if (this.$('.server-feature.active-feature').length != 6) {\n                                        this.$('.btn-finish-log-in').text(xabber.getString('signin_proceed_anyway'))\n                                        this.$('.btn-finish-log-in').addClass('btn-main').removeClass('btn-main-filled')\n                                    }\n                                    else {\n                                        this.$('.btn-finish-log-in').text(xabber.getString('xaccount_next'))\n                                        this.$('.btn-finish-log-in').removeClass('btn-main').addClass('btn-main-filled')\n                                    }\n                                    this.$('.btn-finish-log-in').hideIf(false);\n                                }, timeout_timer);\n                            }, timeout_timer);\n                        }, timeout_timer);\n                    }, timeout_timer);\n                }, timeout_timer);\n            }, timeout_timer);\n        }, timeout_timer);\n    },\n\n    endAuth: function (account) {\n        this.account.save('is_new', undefined);\n        this.data.set('registration', false);\n        this.data.set('authentication', false);\n        xabber.body.setScreen('all-chats', {right: null});\n        this.account.sendPresence();\n        this.account.trigger('ready_to_get_roster');\n        this.account.auth_view = null;\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid);\n        this.$('.login-form-jid .login-jid-error').text(options.jid || '').showIf(options.jid);\n        this.$password_input.switchClass('invalid', options.password);\n        this.$('.login-form-jid .login-password-error').text(options.password || '').showIf(options.password);\n        this.$('.login-form-jid .register-form-step-description').hideIf(options.password || options.jid);\n    },\n\n    resetAuthStepper: function (){\n        this.$(`.login-step .preloader-wrapper`).addClass('active').addClass('visible');\n        this.$(`.login-step .mdi`).hideIf(true);\n        this.$(`.login-step`).removeClass('active-feature')\n        this.$(`.login-step .mdi`).addClass('mdi-alert-circle').removeClass('mdi-checkbox-marked-circle')\n    },\n\n    authStepperShow: function (){\n        this.$('.login-step-wrap').hideIf(false);\n        this.$(`.login-step`).hideIf(true);\n    },\n\n    authStepperStart: function (){\n        this.$(`.login-step.connecting-step`).hideIf(false);\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            this.$(`.login-step.connecting-step`).addClass('active-feature');\n            this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n            this.$(`.login-step.connecting-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n            this.$(`.login-step.credentials-step`).hideIf(false);\n            setTimeout(() => {\n                this.$(`.login-step.credentials-step`).addClass('active-feature');\n                this.$(`.login-step.credentials-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.credentials-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n                setTimeout(() => {\n                    if (constants.TRUSTED_DOMAINS.indexOf(this.account.connection.domain) > -1){\n                        this.endAuth();\n                    } else {\n                        this.stepped_auth_complete = true\n                        if (this.first_features_received)\n                            this.successFeedback();\n                    }\n                },timeout_timer)\n            },timeout_timer)\n        },timeout_timer)\n    },\n\n    authStepperError: function (auth_error, options){\n        let timeout_timer = 1000;\n        this.$('.login-step-wrap').hideIf(false);\n        this.$(`.login-step.connecting-step`).hideIf(false);\n        setTimeout(() => {\n            if (auth_error){\n                this.$(`.login-step.connecting-step`).addClass('active-feature');\n                this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.connecting-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n                this.$(`.login-step.credentials-step`).hideIf(false);\n            }\n            else {\n                this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.connecting-step .mdi`).hideIf(false);\n                this.errorFeedback(options);\n                return;\n            }\n            setTimeout(() => {\n                this.$(`.login-step.credentials-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.credentials-step .mdi`).hideIf(false);\n                this.errorFeedback(options);\n            },timeout_timer)\n        },timeout_timer)\n    },\n\n    registerFeedback: function (options) {\n        if(options.user_success) {\n            this.$('.register-form-jid .register-form-step-error').addClass('available').text(options.jid || '').showIf(options.jid);\n            this.$jid_input.removeClass('invalid');\n            this.$('.register-form-jid .register-form-step-description').hideIf(options.jid);\n        }\n        else if(options.registration_success) {\n            this.$('.register-form-password .register-form-step-error').addClass('available').text(options.password || '').showIf(options.password);\n            this.$password_input.removeClass('invalid');\n            this.$('.register-form-password .register-form-step-description').hideIf(options.password);\n        }\n        else {\n            this.$nickname_input.switchClass('invalid', options.nickname);\n            this.$('.register-form-nickname.register-form-step-error').text(options.nickname || '').showIf(options.nickname);\n            this.$('.register-form-nickname .register-form-step-description').hideIf(options.nickname);\n            this.$jid_input.switchClass('invalid', options.jid);\n            this.$domain_input.switchClass('invalid', options.domain);\n            this.$('.register-form-jid .register-form-step-error').removeClass('available').text(options.jid || options.domain || '').showIf(options.jid || options.domain);\n            this.$('.register-form-jid .register-form-step-description').hideIf(options.jid || options.domain);\n            this.$password_input.switchClass('invalid', options.password);\n            this.$('.register-form-password .register-form-step-error').removeClass('available').text(options.password || '').showIf(options.password);\n            this.$('.register-form-password .register-form-step-description').hideIf(options.password);\n        }\n    },\n\n    errorRegistrationFeedback: function (options) {\n        this.registerFeedback(options);\n        this.data.set('registration', false);\n        this.data.set('authentication', false);\n        this.$jid_input.prop('disabled', false);\n        this.$password_input.prop('disabled', false);\n        if(this.account)\n            this.account.destroy();\n    },\n\n    successRegistrationFeedback: function () {\n        this.$jid_input.prop('disabled', false);\n        this.$password_input.prop('disabled', false)\n        this.account.trigger('start');\n    },\n});\n\n\nxabber.AddAccountView = xabber.XmppLoginPanel.extend({\n    className: 'modal main-modal add-account-modal',\n    template: templates.add_account,\n\n    events: {\n        \"click .login-type\": \"changeLoginType\",\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-cancel\": \"logout\",\n        \"click .btn-go-back-menu\": \"close\",\n        \"click .btn-finish-log-in\": \"endAuth\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"click .property-variant\": \"changePropertyValueAuth\"\n    },\n\n    render: function (options) {\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        this.data.set('step', 0)\n        this.account = null;\n        this.stepped_auth = true;\n        this.stepped_auth_complete = false;\n        this.authFeedback({});\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.$domain_input = this.$('input[name=sign_in_domain]');\n        this.$jid_input.val('')\n        this.$password_input.val('')\n        this.keyUpLogin();\n        this.updateAuthDomains();\n        this.$('.login-step-wrap').hideIf(true);\n        this.resetAuthStepper();\n        this.$('.login-panel-form.xmpp-login-form .buttons-wrap').removeClass('server-features-additional-button')\n        this.$('.modal-header').text(xabber.getString(\"account_add\"));\n        this.$('.login-form-jid').hideIf(false);\n        this.$('.login-form-server-features').hideIf(true);\n        this.$('.btn-log-in').hideIf(false);\n        this.$('.btn-cancel').hideIf(true);\n        this.$('.btn-finish-log-in').hideIf(true);\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.property-field .select-auth-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.login-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.LOGIN_CUSTOM_DOMAIN);\n        Materialize.updateTextFields();\n        this.updateButtons();\n        this.updateOptions && this.updateOptions();\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step')\n        if (step === -1){\n            this.$(`.server-feature .preloader-wrapper`).addClass('active').addClass('visible');\n            this.$(`.server-feature .mdi`).hideIf(true);\n            this.$(`.server-feature`).removeClass('active-feature')\n            this.$(`.server-feature .mdi`).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n            this.$('.modal-header').text(xabber.getString(\"signin_server_features\"));\n            this.$('.login-form-jid').hideIf(true);\n            this.$('.login-form-server-features').hideIf(false);\n            this.$('.btn-log-in').hideIf(true);\n            this.checkFeaturesStepper();\n        }\n    },\n\n    logout: function () {\n        this.account.session.set('delete', true);\n        this.account.deactivate();\n        this.closeModal();\n    },\n\n    endAuth: function () {\n        this.account.save('is_new', undefined);\n        this.data.set('authentication', false);\n        this.account.sendPresence();\n        this.account.trigger('ready_to_get_roster');\n        this.account.auth_view = null;\n        this.closeModal();\n    },\n\n    checkFeaturesStepper: function () {\n        this.$('.server-features-error').text('');\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            if (this.account.server_features.get(Strophe.NS.MAM)){\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"]`).addClass('active-feature');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n            }\n            else\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n            setTimeout(() => {\n                if (this.account.server_features.get(Strophe.NS.SYNCHRONIZATION)){\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).addClass('active-feature');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                }\n                else\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                setTimeout(() => {\n                    if (this.account.server_features.get(Strophe.NS.REWRITE)){\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"]`).addClass('active-feature');\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                    }\n                    else\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                    setTimeout(() => {\n                        if (this.account.server_features.get(Strophe.NS.AUTH_DEVICES)) {\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`).addClass('active-feature');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                        }\n                        else\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');;\n                        setTimeout(() => {\n                            if (this.account.server_features.get(Strophe.NS.PUBSUB)){\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"]`).addClass('active-feature');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                            }\n                            else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                            setTimeout(() => {\n                                if (this.account.server_features.get(Strophe.NS.HTTP_UPLOAD)){\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`).addClass('active-feature');\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                }\n                                else\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                                setTimeout(() => {\n                                    if (constants.RECOMMENDED_DOMAIN && (this.$('.server-feature.active-feature').length != 6)){\n                                        this.$('.server-features-error').text(xabber.getString('signin_not_all_features', [constants.RECOMMENDED_DOMAIN]));\n                                    }\n                                    if (this.$('.server-feature.active-feature').length != 6)\n                                        this.$('.btn-finish-log-in').text(xabber.getString('signin_proceed_anyway'))\n                                    else\n                                        this.$('.btn-finish-log-in').text(xabber.getString('xaccount_next'))\n                                    this.$('.btn-finish-log-in').hideIf(false);\n                                    this.$('.btn-cancel').hideIf(false);\n                                }, timeout_timer);\n                            }, timeout_timer);\n                        }, timeout_timer);\n                    }, timeout_timer);\n                }, timeout_timer);\n            }, timeout_timer);\n        }, timeout_timer);\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.cancel();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\n\nxabber.UnregisterAccountView = xabber.XmppLoginPanel.extend({\n    className: 'modal main-modal unregister-account-modal',\n    template: templates.unregister_account,\n\n    events: {\n        \"click .login-type\": \"changeLoginType\",\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-submit-unregister\": \"submitUnregister\",\n        \"click .btn-cancel\": \"close\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"change input[type=checkbox]\": \"keyUpLogin\",\n        \"click .property-variant\": \"changePropertyValueAuth\"\n    },\n\n    render: function (options) {\n        this.account = options.model;\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function (options) {\n        this.authFeedback({});\n        this.data.set('step', 0);\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.$('input[type=checkbox]').prop('checked', false);\n        this.$jid_input.val('')\n        this.$password_input.val('')\n        this.keyUpLogin();\n        Materialize.updateTextFields();\n    },\n\n    keyUpLogin: function (ev) {\n        let checked_count = this.$('input[type=checkbox]:checked').length;\n        if(this.$password_input.val() && checked_count === 2){\n            this.$('.btn-log-in').prop('disabled', false);\n        } else {\n            this.$('.btn-log-in').prop('disabled', true);\n        }\n        if(this.$jid_input.val() && this.$jid_input.val() === `delete ${this.account.get('jid')} account`){\n            this.$('.btn-submit-unregister').prop('disabled', false);\n        } else {\n            this.$('.btn-submit-unregister').prop('disabled', true);\n        }\n        this.authFeedback({});\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid);\n        this.$('.login-form-jid .login-jid-error').text(options.jid || '').showIf(options.jid);\n        this.$password_input.switchClass('invalid', options.password && !options.password_not_error);\n        this.$('.login-form-jid .login-password-error').switchClass('non-error', options.password_not_error).text(options.password || '');\n    },\n\n    unregisterAccount: function (callback, errback) {\n        let iq = $iq({\n            type: 'set',\n            to: this.connection.domain,\n            from: this.get('jid')\n        }).c('query', {xmlns:Strophe.NS.REGISTER}).c('remove');\n        this.sendIQFast(iq, (success) => {\n                callback & callback(success);\n            },\n            function (error) {\n                errback && errback(error);\n            });\n    },\n\n    login: function (callback, errback) {\n        this.submit()\n    },\n\n    submit: function () {\n        this.authFeedback({});\n        let password = this.$password_input.val();\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        this.authFeedback({password: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\"), password_not_error: true});\n        if (!this.account.unregister_account_connection_manager) {\n            this.account.unregister_account_view = this;\n            this.account.unregister_account_connection_manager = new Strophe.ConnectionManager(this.account.CONNECTION_URL);\n            this.account.unregister_account_connection = this.account.unregister_account_connection_manager.connection;\n            this.account.unregister_account_connection.account = this.account;\n            this.account.unregister_account_connection.register.connect_change_password(this.account.get('jid'), password, this.account.unregisterAccountCallback.bind(this.account))\n        }\n    },\n\n    submitUnregister: function () {\n        this.authFeedback({});\n        if (this.$jid_input.val() !== this.account.get('jid'))\n            return this.errorFeedback({jid: xabber.getString(\"settings_account__unregister_jid_mismatch\")});\n        if (this.account && this.account.unregister_account_connection_manager && this.account.unregister_account_connection) {\n            this.account.unregister_account_connection.register.submit_unregister();\n        } else {\n            this.data.set('step', 0);\n            return this.errorFeedback({password: xabber.getString(\"settings_account__connection_broken\")});\n        }\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step');\n        if (step === 0){\n            this.$('.login-form-step-wrap').removeClass('hidden');\n            this.$('.btn-log-in').removeClass('hidden');\n            this.$('.btn-submit-unregister').addClass('hidden');\n            this.$('.login-confirm-form-step-wrap').addClass('hidden');\n            this.$('.modal-header span').text(xabber.getString('settings_account__delete_account_modal_title'));\n            this.$('.modal-description-text').text(xabber.getString('settings_account__delete_account_modal_text'));\n        } else if (step === 1) {\n            this.$('.login-form-step-wrap').addClass('hidden');\n            this.$('.btn-log-in').addClass('hidden');\n            this.$('.btn-submit-unregister').removeClass('hidden');\n            this.$('.login-confirm-form-step-wrap').removeClass('hidden');\n            this.$('.modal-header span').text(xabber.getString('settings_account__confirm_delete_account_modal_title'));\n            this.$('.modal-description-text').html(xabber.getString('settings_account__confirm_delete_account_modal_text', [`<nobr>delete ${this.account.get('jid')} account</nobr>`]));\n        }\n    },\n\n    endAuth: function () {\n    },\n\n    checkFeaturesStepper: function () {\n    },\n\n    onHide: function () {\n        this.$el.detach();\n        if (this.account && this.account.unregister_account_connection_manager && this.account.unregister_account_connection) {\n            this.account.unregister_account_connection.disconnect();\n        }\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.xmpp_login_panel = xabber.login_page.addChild('xmpp_login', this.XmppLoginPanel);\n    this.account_settings_modal = xabber.main_overlay_panel.addChild('account_settings_modal',\n        this.Container, {classlist: 'account-settings-panel'});\n\n    this.accounts = new this.Accounts(null, {\n        storage_name: this.getStorageName() + '-accounts'\n    });\n    this.accounts.fetch();\n\n    this.trigger('accounts_ready');\n\n    this.toolbar_view.addChild('accounts', this.ToolbarAccountsBlockView,\n        {model: this.accounts, el: this.toolbar_view.$('.accounts')[0]});\n    this.settings_modal_view.addChild('accounts_modal', this.SettingsAccountsModalBlockView,\n        {model: this.accounts, el: this.settings_modal_view.$('.accounts-info-wrap')[0]});\n\n\n    this.on(\"add_account\", function () {\n        if (!this.add_account_view)\n            this.add_account_view = new this.AddAccountView();\n        this.add_account_view.show();\n    }, this);\n\n    this.on(\"unregister_account\", function (account) {\n        if (!this.unregister_account_view)\n            this.unregister_account_view = new this.UnregisterAccountView();\n        this.unregister_account_view.show({model: account});\n    }, this);\n\n    this.on(\"change_account_password\", function (account) {\n        if (!this.change_account_password_view)\n            this.change_account_password_view = new this.ChangeAccountPasswordView();\n        this.change_account_password_view.show({model: account});\n    }, this);\n\n    this.on(\"show_delete_files\", function (options) {\n        if (!this.delete_files_view)\n            this.delete_files_view = new this.DeleteFilesFromGalleryView();\n        this.delete_files_view.show(options);\n    }, this);\n\n    $(window).bind('beforeunload',function(){\n        xabber.current_voip_call && xabber.current_voip_call.reject();\n        return;\n    });\n\n    window.onbeforeunload = () => {\n        _.each(this.accounts.connected, function (account) {\n            account.sendPresence('offline');\n        });\n    };\n\n    this.login_page.patchTree = function (tree, options) {\n        let login_screen = options.login_screen || constants.DEFAULT_LOGIN_SCREEN;\n        return login_screen === 'xmpp' ? { xmpp_login: null } : { xabber_login: null };\n    };\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    $ = env.$,\n    _ = env._,\n    moment = env.moment,\n    Strophe = env.Strophe,\n    $iq = env.$iq;\n\nxabber.ClientFeature = Backbone.Model.extend({\n    idAttribute: 'namespace'\n});\n\nxabber.FeatureView = xabber.BasicView.extend({\n    className: 'client-feature',\n    template: function () {\n        this.$el.append('<div class=\"feature-check-icon mdi mdi-24px\"/>')\n                .append('<div class=\"feature-name one-line\"/>');\n        this.$('.feature-check-icon').append(env.templates.svg['check-circle']());\n    },\n\n    _initialize: function (options, attrs) {\n        this.render();\n        this.model.collection.account.settings_account_modal && this.$el.appendTo(this.model.collection.account.settings_account_modal.$('.capabilities'));\n        if (options.single_account && options.single_account.$('.capabilities').length){\n            this.$el.appendTo(options.single_account.$('.capabilities'));\n        }\n        this.model.on(\"change\", this.render, this);\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    render: function () {\n        let name = this.model.get('verbose_name'),\n            supports = this.model.get('supports');\n        this.$('.feature-name').text(name);\n        this.$('.feature-check-icon').showIf(supports);\n    }\n});\n\nxabber.ClientFeatures = Backbone.Collection.extend({\n    model: xabber.ClientFeature,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on('render_settings', this.render, this);\n        this.account.on('render_single_settings', this.renderSingleAccount, this);\n        this.connection = this.account.connection;\n        this.connection.disco.addIdentity(\n            'client',\n            'web',\n            constants.CLIENT_NAME,\n            'en'\n        );\n        this.addFeature(Strophe.NS.LAST, 'XEP-0012: Last Activity');\n        this.addFeature(Strophe.NS.VCARD, 'XEP-0054: vCard-temp');\n        this.addFeature(Strophe.NS.RSM, 'XEP-0059: Result Set Management');\n        this.addFeature(Strophe.NS.PUBSUB, 'XEP-0060: Publish-Subscribe');\n        this.addFeature(Strophe.NS.REGISTER, 'XEP-0077: In-Band Registration');\n        this.connection.disco.addFeature(Strophe.NS.CHATSTATES);\n        this.addFeature(Strophe.NS.BLOCKING, 'XEP-0191: Blocking Command');\n        this.addFeature(Strophe.NS.PING, 'XEP-0199: XMPP Ping');\n        this.connection.disco.addFeature(Strophe.NS.ATTENTION, 'XEP-0244: Attention');\n        this.addFeature(Strophe.NS.CARBONS, 'XEP-0280: Message carbons');\n        this.addFeature(Strophe.NS.MAM, 'XEP-0313: Message archive management');\n        this.connection.disco.addFeature(Strophe.NS.CHAT_MARKERS);\n        this.connection.disco.addFeature(Strophe.NS.PUBSUB_AVATAR_METADATA + '+notify');\n        this.addFeature(Strophe.NS.HTTP_UPLOAD, 'XEP-0363: HTTP File Upload');\n        this.addFeature(Strophe.NS.SYNCHRONIZATION, 'XEP-SYNC: Client Synchronization');\n        this.addFeature(Strophe.NS.AUTH_DEVICES, 'XEP-DEVICES: HOTP and Device Management');\n        this.addFeature(Strophe.NS.ARCHIVE, 'XEP-ARCHIVED: Archived Chats');\n        this.addFeature(Strophe.NS.DELIVERY, 'XEP-DELIVERY: Reliable message delivery');\n        this.addFeature(Strophe.NS.GROUP_CHAT, 'XEP-GROUPS: Groups');\n        this.addFeature(Strophe.NS.REWRITE, 'XEP-RETRACT: Message Delete and Rewrite');\n    },\n\n    addFeature: function (namespace, verbose_name) {\n        let feature = this.create({\n            namespace: namespace,\n            verbose_name: verbose_name\n        });\n        this.connection.disco.addFeature(namespace);\n    },\n\n    render: function () {\n        this.models.forEach((feature) => {\n            let view = new xabber.FeatureView({model: feature});\n        });\n    },\n\n    renderSingleAccount: function (single_account) {\n        single_account.$('.capabilities').html('');\n        this.models.forEach((feature) => {\n            let view = new xabber.FeatureView({model: feature, single_account: single_account});\n        });\n    },\n});\n\nxabber.ServerFeature = Backbone.Model.extend({\n    idAttribute: 'var'\n});\n\nxabber.ServerFeatures = Backbone.Collection.extend({\n    model: xabber.ServerFeature,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.connection = this.account.connection;\n        this.on(\"add\", this.onFeatureAdded, this);\n    },\n\n    request: function () {\n        this.account.cached_server_features.getAllFromCachedFeatures((res) => {\n            if (res && res.length){\n                res.forEach((item) => {\n                    this.create({\n                        'var': item.var,\n                        from: item.from\n                    });\n                });\n                this.is_cached = true;\n            } else {\n                this.connection.disco.info(this.account.domain, null, this.onInfo.bind(this));\n            }\n            this.connection.disco.items(this.account.domain, null, this.onItems.bind(this));\n        });\n    },\n\n    onItems: function (stanza) {\n        let groupchat_servers_list = [];\n        $(stanza).find('query item').each((idx, item) => {\n            let jid = $(item).attr('jid'),\n                name = $(item).attr('name'),\n                node = $(item).attr('node');\n            if (node === Strophe.NS.GROUP_CHAT) {\n                groupchat_servers_list.push(jid);\n                this.account.set('groupchat_servers_list', groupchat_servers_list);\n            }\n            this.connection.disco.addItem(jid, name, node, () => {});\n            (!this.is_cached) && this.connection.disco.info(\n                jid,\n                null,\n                this.onInfo.bind(this));\n        });\n    },\n\n    onInfo: function (stanza) {\n        let $stanza = $(stanza),\n            from = $stanza.attr('from'),\n            self = this;\n        $stanza.find('feature').each(function () {\n            let namespace = $(this).attr('var');\n            self.create({\n                'var': namespace,\n                from: from\n            });\n        });\n        $stanza.find('x').each(function () {\n            let form_type_val = $(this).find('field[var=\"FORM_TYPE\"] value');\n            if (form_type_val.length && form_type_val.text() === Strophe.NS.URLDISCO && self.account.domain === from){\n                let media_gallery_url = $(this).find('field[var=\"' + Strophe.NS.MEDIAGALLERY + '\"] value');\n                if (media_gallery_url.length && media_gallery_url.text()){\n                    self.create({\n                        'var': 'media-gallery',\n                        from: media_gallery_url.text()\n                    });\n                }\n            }\n        });\n        if (this.account.auth_view && !(constants.TRUSTED_DOMAINS.indexOf(this.account.connection.domain) > -1)){\n            this.account.auth_view.first_features_received = true\n            if (this.account.auth_view.stepped_auth_complete)\n                this.account.auth_view.successFeedback();\n        }\n    },\n\n    onFeatureAdded: function (feature) {\n        let _var = feature.get('var'),\n            client_feature = this.account.client_features.get(_var);\n        client_feature && client_feature.set('supports', true);\n        (_var != Strophe.NS.SUBSCRIPTION_PREAPPROVAL && _var != Strophe.NS.SYNCHRONIZATION) && this.account.cached_server_features.putInCachedFeatures({\n            var: _var,\n            from: feature.get('from'),\n        });\n        if (_var === 'media-gallery') {\n            this.account.set('gallery_auth', false)\n            if (!(this.account.get('gallery_token') && this.account.get('gallery_url')) || (this.account.get('gallery_url') != feature.get('from')))\n                this.account.initGalleryAuth(feature);\n        }\n    },\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.client_features = new xabber.ClientFeatures(null, {account: this});\n    this.server_features = new xabber.ServerFeatures(null, {account: this});\n});\n\nxabber.Account.addConnPlugin(function () {\n    this.last_stanza_timestamp = moment.now();\n\n    this.connection.deleteHandler(this._last_stanza_handler);\n    this._last_stanza_handler = this.connection.addHandler(() => {\n        this.last_stanza_timestamp = moment.now();\n        return true;\n    });\n\n    this.connection.deleteHandler(this._pong_handler);\n    this._pong_handler = this.connection.ping.addPingHandler((ping) => {\n        this.last_stanza_timestamp = moment.now();\n        this.connection.ping.pong(ping);\n        return true;\n    });\n\n    if (this._main_interval_worker)\n        this._main_interval_worker.terminate();\n\n    this._main_interval_worker = new Worker(new URL('./worker.js', import.meta.url));\n\n    this._main_interval_worker.onmessage = () => {\n        let downtime = (moment.now() - this.last_stanza_timestamp) / 1000;\n        if (!navigator.onLine || downtime > (constants.DOWNTIME_RECONNECTION_TIMEOUT || 15)) {\n            if (!navigator.onLine){\n                console.log('navigator: ' + navigator.onLine)\n                console.log('this.connection.connected: ' + this.connection.connected)\n                utils.callback_popup_message('this.connection.connected: ' + this.connection.connected, 2000);\n            }\n            console.log('downtime main to disconnect: ' + downtime);\n            utils.callback_popup_message('downtime main to disconnect: ' + downtime, 2000);\n            console.log(this.connection.connected);\n            if (this.connection.connected)\n                this.connection.disconnect();\n            else\n                this.connect();\n            this._main_interval_worker.terminate();\n        }\n        if (downtime > (constants.PING_SENDING_INTERVAL || 10)) {\n            console.log('downtime main to ping: ' + downtime);\n            this.connection && this.connection.ping.ping(this.get('domain'));\n        }\n    };\n\n    this._main_interval_worker.postMessage({});\n\n    this.server_features.request();\n}, true, true);\n\nxabber.Account.addFastConnPlugin(function () {\n    this.last_fast_stanza_timestamp = moment.now();\n\n    this.fast_connection.deleteHandler(this._last_fast_stanza_handler);\n    this._last_fast_stanza_handler = this.fast_connection.addHandler(() => {\n        this.last_fast_stanza_timestamp = moment.now();\n        return true;\n    });\n\n    this.fast_connection.deleteHandler(this._fast_pong_handler);\n    this._fast_pong_handler = this.fast_connection.ping.addPingHandler((ping) => {\n        this.last_fast_stanza_timestamp = moment.now();\n        this.fast_connection.ping.pong(ping);\n        return true;\n    });\n\n    if (this._fast_interval_worker)\n        this._fast_interval_worker.terminate();\n\n    this._fast_interval_worker = new Worker(new URL('./worker.js', import.meta.url));\n\n    this._fast_interval_worker.onmessage = () => {\n        let downtime = (moment.now() - this.last_fast_stanza_timestamp) / 1000;\n        if (!navigator.onLine || downtime > (constants.DOWNTIME_RECONNECTION_TIMEOUT || 15)) {\n            if (!navigator.onLine){\n                console.log('navigator: ' + navigator.onLine)\n                console.log('this.connection.connected: ' + this.fast_connection.connected)\n                utils.callback_popup_message('this.connection.connected: ' + this.fast_connection.connected, 2000);\n            }\n            console.log('downtime fast to disconnect: ' + downtime);\n            utils.callback_popup_message('downtime fast to disconnect: ' + downtime, 2000);\n            console.log(this.fast_connection.connected);\n            if (this.fast_connection.connected)\n                this.fast_connection.disconnect();\n            else\n                this.fast_connection.connect('password', this.fast_connection.jid, this.fast_connection.pass);\n            this._fast_interval_worker.terminate();\n        }\n        if (downtime > (constants.PING_SENDING_INTERVAL || 10)) {\n            console.log('downtime fast to ping: ' + downtime);\n            this.fast_connection && this.fast_connection.ping.ping(this.get('domain'));\n        }\n    };\n    this._fast_interval_worker.postMessage({});\n}, true, true);\n\nxabber.Account.addConnPlugin(function () {\n    let disco = this.connection.disco;\n    this.connection.addHandler(disco._onDiscoInfo.bind(disco),\n            Strophe.NS.DISCO_INFO, 'iq', 'get', null, null);\n    this.connection.addHandler(disco._onDiscoItems.bind(disco),\n            Strophe.NS.DISCO_ITEMS, 'iq', 'get', null, null);\n}, false, true);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.contacts,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $pres = env.$pres,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    VanillaQR = env.VanillaQR,\n    uuid = env.uuid,\n    Images = utils.images,\n    Emoji = utils.emoji,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\nxabber.Contact = Backbone.Model.extend({\n    idAttribute: 'jid',\n    defaults: {\n        status: \"offline\",\n        status_message: \"\",\n        subscription: undefined,\n        subscription_request_in: false,\n        subscription_request_out: false,\n        groups: [],\n        group_chat: false\n    },\n\n    initialize: function (_attrs, options) {\n        this.on(\"change:group_chat\", this.onChangedGroupchat, this);\n        this.account = options.account;\n        if (_attrs.avatar) {\n            _attrs.image = _attrs.avatar;\n            delete _attrs.avatar;\n        }\n        let attrs = _.clone(_attrs);\n        if (attrs.resource) {\n            attrs.full_jid = attrs.jid + '/' + attrs.resource;\n        } else if (attrs.group_chat) {\n            attrs.full_jid = attrs.jid + '/Group';\n        }\n        (this.account && this.account.domain === attrs.jid) && _.extend(attrs, {server: true, status: 'online'});\n        attrs.name = attrs.roster_name || attrs.name || attrs.jid;\n        if (!attrs.image) {\n            attrs.photo_hash = \"\";\n            attrs.image = Images.getDefaultAvatar(attrs.name);\n        }\n        if (this.account.blocklist.isBlocked(attrs.jid))\n            attrs.blocked = true;\n        this.cached_image = Images.getCachedImage(attrs.image);\n        attrs.vcard = utils.vcard.getBlank(attrs.jid);\n        this.set(attrs);\n        this.onChangedGroupchat();\n        this.domain = Strophe.getDomainFromJid(this.get('jid'));\n        !this.get('group_chat') && this.account && this.account.chat_settings && this.set('group_chat', _.contains(this.account.chat_settings.get('group_chat'), this.get('jid')));\n        this.hash_id = env.b64_sha1(this.account.get('jid') + '-' + attrs.jid);\n        this.resources = new xabber.ContactResources(null, {contact: this});\n        this.on(\"update_avatar\", this.updateAvatar, this);\n        this.on(\"change:full_jid\", this.updateCachedInfo, this);\n        this.on(\"change:name\", this.updateCachedInfo, this);\n        this.on(\"change:roster_name\", this.updateName, this);\n        this.on(\"destroy\", this.onDestroy, this);\n        this.account.dfd_presence.done(() => {\n            if (!this.get('blocked') && !this.get('vcard_updated') && !attrs.is_deleted)\n                this.getVCard();\n        });\n    },\n\n    getStatusMessage: function () {\n        let subscription = this.get('subscription'),\n            in_request = this.get('subscription_request_in'),\n            out_request = this.get('subscription_request_out'),\n            status_text = \"\";\n        if (this.get('blocked'))\n            status_text = xabber.getString(\"action_contact_blocked\");\n        else if (this.get('group_chat')) {\n            if (this.get('group_info')) {\n                if (this.get('group_info').members_num)\n                    status_text += xabber.getQuantityString(\"contact_groupchat_status_member\", this.get('group_info').members_num);\n                if (this.get('group_info').online_members_num > 0)\n                    status_text += xabber.getString(\"contact_groupchat_status_online\", [this.get('group_info').online_members_num || 0]);\n            } else if (!subscription)\n                status_text = xabber.getString(\"contact_state_no_subscriptions\");\n            else\n                status_text = this.get('status_message') || xabber.getString(this.get('status'));\n        } else {\n            if (subscription === 'from') {\n                if (out_request)\n                    status_text = xabber.getString(\"contact_state_outgoing_request\");\n                else\n                    status_text = xabber.getString(\"chat_receives_presence_updates\");\n            } else if (subscription === 'none') {\n                if (out_request)\n                    status_text = xabber.getString(\"contact_state_outgoing_request\");\n                else if (in_request)\n                    status_text = xabber.getString(\"contact_state_in_contact_list\");\n                else\n                    status_text = xabber.getString(\"contact_state_in_contact_list\");\n            }\n            else if (!subscription)\n                status_text = xabber.getString(\"contact_state_not_in_contact_list\");\n            else\n                status_text = this.get('status_message') || xabber.getString(this.get('status'));\n        }\n        return status_text;\n    },\n\n    getSubscriptionStatuses: function () {\n        let subscription = this.get('subscription'),\n            subscription_preapproved = this.get('subscription_preapproved'),\n            in_request = this.get('subscription_request_in'),\n            out_request = this.get('subscription_request_out'),\n            status_description = \"\",\n            status_out_color = \"\",\n            status_in_color = \"\",\n            status_out_text = \"\",\n            status_in_text = \"\";\n        if (this.get('blocked'))\n            status_out_text = xabber.getString(\"action_contact_blocked\");\n        if (subscription === 'both') {\n            status_out_text = xabber.getString(\"subscription_status_out_to\");\n            status_in_text = xabber.getString(\"subscription_status_in_from\");\n            status_description = xabber.getString(\"subscription_status_description_both\");\n        }\n        else if (subscription === 'from') {\n            if (out_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_from\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_from\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_from\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_from\");\n            }\n        }\n        else if (subscription === 'to') {\n            if (in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_to\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_to_in_request_incoming\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_to\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_to_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_to_in_allowed\");\n                }\n            }\n        } else if (subscription === 'none') {\n            if (out_request && in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_request_incoming\");\n            }\n            else if (out_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_request_in_allowed\");\n                }\n            }\n            else if (in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_request_incoming\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_none_in_allowed\");\n                }\n            }\n        }\n        else if (!subscription)\n            status_out_text = xabber.getString(\"contact_add\");\n\n        if (out_request)\n            status_out_color = \"request\";\n        if (in_request)\n            status_in_color = \"request\";\n        if (subscription === 'to')\n            status_out_color = \"subbed\";\n        if (subscription === 'from')\n            status_in_color = \"subbed\";\n        if (subscription === 'both') {\n            status_out_color = \"subbed\";\n            status_in_color = \"subbed\";\n        }\n        return {\n            status_out: status_out_text,\n            status_in: status_in_text,\n            status_out_color: status_out_color,\n            status_in_color: status_in_color,\n            status_description: status_description,\n        };\n    },\n\n    getIcon: function () {\n        if (this.get('blocked'))\n            return 'blocked';\n        if (this.get('invitation'))\n            return 'group-invite';\n        if (this.get('group_chat')) {\n            if (this.get('jid').includes('redmine_issue_'))\n                return 'task';\n            if (this.get('private_chat'))\n                return 'group-private';\n            if (this.get('incognito_chat'))\n                return 'group-incognito';\n            return 'group-public';\n        }\n        if (this.get('server'))\n            return 'server';\n        if (this.get('bot'))\n            return 'bot';\n        return;\n    },\n\n    updateAvatar: function () {\n        this.account.cached_roster.getFromRoster(this.get('jid'), (cached_info) => {\n            if (cached_info && this.get('photo_hash') === cached_info.photo_hash)\n                return;\n            this.getVCard();\n        });\n    },\n\n    getVCard: function (callback) {\n        let jid = this.get('jid'),\n            is_callback = _.isFunction(callback);\n        this.account.getConnectionForIQ().vcard.get(jid,\n             (vcard) => {\n                if (vcard.group_info) {\n                    let group_info = this.get('group_info') || {};\n                    group_info = _.extend(group_info, vcard.group_info);\n                    this.set({group_info});\n                    delete vcard.group_info;\n                }\n                let attrs = {\n                    vcard: vcard,\n                    vcard_updated: moment.now(),\n                    name: this.get('roster_name')\n                };\n                if (!attrs.name) {\n                    if (this.get('group_chat'))\n                        attrs.name = vcard.nickname || this.get('name');\n                    else\n                        attrs.name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || jid;\n                }\n                if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n                    if (vcard.photo.image) {\n                        attrs.avatar_priority = constants.AVATAR_PRIORITIES.VCARD_AVATAR;\n                        attrs.image = vcard.photo.image;\n                    }\n                    else\n                        attrs.image = Images.getDefaultAvatar(attrs.name);\n                    this.cached_image = Images.getCachedImage(attrs.image);\n                }\n                this.set(attrs);\n                is_callback && callback(vcard);\n            },\n            function () {\n                is_callback && callback(null);\n            }\n        );\n    },\n\n    updateCachedInfo: function () {\n        this.account.cached_roster.getFromRoster(this.get('jid'), (cached_info) => {\n            cached_info = cached_info || {};\n            let roster_info = {\n                jid: this.get('jid'),\n                in_roster: !_.isUndefined(this.get('in_roster')) ? this.get('in_roster') : cached_info.in_roster,\n                groups: this.get('groups'),\n                subscription: !_.isUndefined(this.get('subscription')) ? this.get('subscription') : cached_info.subscription,\n                roster_name: !_.isUndefined(this.get('roster_name')) ? this.get('roster_name') : cached_info.roster_name,\n                subscription_request_out: this.get('subscription_request_out'),\n                subscription_request_in: this.get('subscription_request_in'),\n                name: this.get('name'),\n                vcard_updated: this.get('vcard_updated')\n            }, full_jid = this.get('full_jid');\n            if (this.get('photo_hash') || this.get('image'))\n                _.extend(roster_info, {\n                    photo_hash: (this.get('photo_hash') || this.account.getAvatarHash(this.get('image'))),\n                    avatar_priority: this.get('avatar_priority'),\n                    avatar: this.get('image')\n                });\n            if (full_jid)\n                roster_info.resource = Strophe.getResourceFromJid(full_jid);\n            this.account.cached_roster.putInRoster(roster_info);\n        });\n    },\n\n    onChangedGroupchat: function () {\n        if (this.get('group_chat') && this.get('removed')) {\n            xabber.error(\"removed contact became groupchat\")\n        }\n        if (this.get('group_chat')) {\n            this.updateCounters();\n            this.participants = new xabber.Participants(null, {contact: this});\n        }\n    },\n\n    onDestroy: function () {\n        if (this.account && this.account.groupchat_settings && this.participants) {\n            this.participants.reset();\n            this.account.groupchat_settings.resetParticipantsList(this.get('jid'));\n        }\n    },\n\n    getBlockedParticipants: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.get('full_jid') || this.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#block'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    updateCounters: function () {\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    getLastSeen: function() {\n        if (this.get('status') == 'offline') {\n            if (!Strophe.getNodeFromJid(this.get('jid'))) {\n                this.set({status_message: 'Server'});\n                return;\n            }\n            let iq = $iq({type: 'get', to: this.get('jid') }).c('query', {xmlns: Strophe.NS.LAST});\n            this.account.sendIQFast(iq, (iq) => {\n                let last_seen = this.getLastSeenStatus(iq);\n                if (this.get('status') == 'offline')\n                    this.set({status_message: last_seen});\n                return this;\n            });\n        }\n    },\n\n    getMyInfo: function (callback) {\n        this.participants.participantsRequest({id: '', properties: true}, (response) => {\n            let $item = $($(response).find('query user')),\n                cached_avatar = this.account.chat_settings.getAvatarInfoById($item.find('id').text());\n            $item.length && this.participants && this.participants.createFromStanza($item, {my_info: true});\n            cached_avatar && (cached_avatar.avatar_hash == this.my_info.get('avatar')) && this.my_info.set('b64_avatar', cached_avatar.avatar_b64);\n            this.trigger('update_my_info');\n            this.participants.participantsRequest({id: ''}, (response) => {\n                let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                this.my_rights = data_form;\n                this.trigger('permissions_changed');\n                callback && callback();\n            });\n        });\n    },\n\n    getAvatar: function (avatar, node, callback, errback) {\n        let jid = this.get('group_chat') ? this.get('full_jid') : this.get('jid'),\n            iq_request_avatar = $iq({type: 'get', to: jid})\n            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n            .c('items', {node: node})\n            .c('item', {id: avatar});\n        this.account.sendIQFast(iq_request_avatar, (iq) => {\n            let pubsub_avatar = $(iq).find('data').text();\n            if (pubsub_avatar == \"\")\n                errback && errback(xabber.getString(\"pubsub__error__text_empty_node\"));\n            else\n                callback && callback(pubsub_avatar);\n        });\n    },\n\n    pubAvatar: function (image, node, callback, errback) {\n        let dfd = new $.Deferred();\n\n        dfd.done((data, http_avatar) => {\n            if (http_avatar) {\n                let avatar_hash = data.hash || image.hash || sha1(image.base64),\n                    iq_pub_metadata = $iq({type: 'set', to: this.get('jid') })\n                        .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                        .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA + node})\n                        .c('item', {id: avatar_hash})\n                        .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                        .c('info', {bytes: data.size, id: avatar_hash, type: data.type, url: data.file});\n                data.thumbnails && data.thumbnails.forEach((thumbnail) => {\n                    iq_pub_metadata.c('thumbnail', {\n                        xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA_THUMBNAIL,\n                        url: thumbnail.url,\n                        width: thumbnail.width,\n                        height: thumbnail.height,\n                    }).up()\n                })\n                this.account.sendIQFast(iq_pub_metadata, () => {\n                        callback && callback(avatar_hash);\n                    },\n                    function (data_error) {\n                        errback && errback(data_error);\n                    });\n            }\n            else {\n                let avatar_hash = image.hash || sha1(image.base64),\n                    iq_pub_data = $iq({type: 'set', to: this.get('jid') })\n                        .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                        .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_DATA + node})\n                        .c('item', {id: avatar_hash})\n                        .c('data', {xmlns: Strophe.NS.PUBSUB_AVATAR_DATA}).t(data),\n                    iq_pub_metadata = $iq({type: 'set', to: this.get('jid') })\n                        .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                        .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA + node})\n                        .c('item', {id: avatar_hash})\n                        .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                        .c('info', {bytes: image.size, id: avatar_hash, type: image.type});\n                this.account.sendIQFast(iq_pub_data, () => {\n                        this.account.sendIQFast(iq_pub_metadata, () => {\n                                callback && callback(avatar_hash);\n                            },\n                            function (data_error) {\n                                errback && errback(data_error);\n                            });\n                    },\n                    (data_error) => {\n                        errback && errback(data_error);\n                    });\n            }\n        });\n        if (image.uploaded){\n            dfd.resolve(image, true)\n        }\n        else if (this.account.get('gallery_token') && this.account.get('gallery_url') && !image.generated && !image.uploaded){\n            let file = image.name ? image : image.file;\n            this.account.uploadAvatar(file, (res) => {\n                if (res.thumbnails && res.thumbnails.length || res.file){\n                    res.type = file.type;\n                    dfd.resolve(res, true)\n                } else\n                    dfd.resolve(image.base64)\n            }, (res) => {\n                dfd.resolve(image.base64)\n            });\n        } else\n            dfd.resolve(image.base64)\n    },\n\n    getLastSeenStatus: function(iq) {\n        let seconds = $(iq).children('query').attr('seconds'),\n            message_time = moment.now() - 1000*seconds;\n        this.set({ last_seen: message_time });\n        return xabber.pretty_last_seen(seconds);\n    },\n\n    pres: function (type) {\n        let pres = $pres({to: this.get('jid'), type: type});\n        this.account.sendPres(pres);\n        return this;\n    },\n\n    pushInRoster: function (attrs, callback, errback) {\n        attrs || (attrs = {});\n        let name = attrs.name || this.get('roster_name'),\n            groups = attrs.groups || this.get('groups');\n        let iq = $iq({type: 'set'})\n            .c('query', {xmlns: Strophe.NS.ROSTER})\n            .c('item', {jid: this.get('jid'), name: name});\n        _.each(groups, function (group) {\n            iq.c('group').t(group).up();\n        });\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('known', true);\n        this.set('removed', false);\n        return this;\n    },\n\n    removeFromRoster: function (callback, errback) {\n        if (!this.get('removed')){\n            let iq = $iq({type: 'set'})\n                .c('query', {xmlns: Strophe.NS.ROSTER})\n                .c('item', {jid: this.get('jid'), subscription: \"remove\"});\n            this.account.cached_roster.removeFromRoster(this.get('jid'));\n            this.account.sendIQFast(iq, callback, errback);\n            this.set('known', false);\n            this.set('removed', true);\n            if (this.get('group_chat')){\n                this.set('group_chat', false);\n                this.participants.reset();\n                this.account.groupchat_settings.resetParticipantsList(this.get('jid'));\n            }\n        }\n        return this;\n    },\n\n    acceptRequest: function (callback) {\n        this.pres('subscribed');\n        callback && callback();\n    },\n\n    askRequest: function (callback) {\n        this.pres('subscribe');\n        callback && callback();\n    },\n\n    blockRequest: function (callback) {\n        this.block(callback);\n    },\n\n    declineRequest: function (callback) {\n        this.pres('unsubscribed');\n        this.removeFromRoster(callback);\n    },\n\n    declineSubscription: function () {\n        this.pres('unsubscribe');\n        this.set('subscription_request_out', false);\n    },\n\n    declineSubscribe: function () {\n        this.pres('unsubscribed');\n        !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && this.set('subscription_preapproved', false)\n    },\n\n    deleteWithDialog: function () {\n        let is_group = this.get('group_chat'),\n            header = is_group ? xabber.getString(\"group_remove\") : xabber.getString(\"remove_contact\"),\n            msg_text = is_group ? xabber.getString(\"group_remove_confirm\", [this.get('name').bold()]) : xabber.getString(\"contact_delete_confirm_short\", [this.get('name').bold()]),\n            optional_buttons = is_group ? null : [{ name: 'delete_history', checked: false, text: xabber.getString(\"delete_contact__label_delete_history\")}];\n        utils.dialogs.ask(header, msg_text, optional_buttons, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (is_group) {\n                    let domain = this.domain,\n                        localpart = Strophe.getNodeFromJid(this.get('jid')),\n                        iq = $iq({to: domain, type: 'set'})\n                            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#delete`}).t(localpart);\n                    this.account.sendIQFast(iq, () => {\n                        this.declineSubscription();\n                        let chat = this.account.chats.getChat(this);\n                        this.removeFromRoster();\n                        chat.trigger(\"close_chat\");\n                        xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n                    });\n                } else {\n                    let chat = this.account.chats.getChat(this);\n                    this.removeFromRoster();\n                    if (result.delete_history) {\n                        chat.retractAllMessages(false);\n                        chat.deleteFromSynchronization();\n                        xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n                    }\n                    xabber.trigger(\"clear_search\");\n                }\n            }\n        });\n    },\n\n    blockWithDialog: function () {\n        let is_group = this.get('group_chat'),\n            contact = this,\n            header = is_group ? xabber.getString(\"block_group__header\") : xabber.getString(\"contact_block\"),\n            buttons = { ok_button_text: xabber.getString(\"contact_bar_block\")},\n            msg_text = xabber.getString(\"block_contact_confirm_short\", [this.get('name').bold()]);\n        if (!is_group) {\n            buttons.optional_button = xabber.getString(\"contact_block_and_delete\");\n            msg_text += `\\n${xabber.getString(\"block_contact_warning\", [this.get('jid')])}`;\n        }\n        utils.dialogs.ask(header, msg_text, null, buttons).done(function (result) {\n            if (result) {\n               if (!is_group) {\n                    let chat = contact.account.chats.getChat(contact);\n                    if (result === 'block & delete') {\n                        contact.removeFromRoster();\n                        chat.retractAllMessages(false);\n                        chat.deleteFromSynchronization();\n                        chat.set('active', false);\n                    }\n                }\n                contact.blockRequest();\n                xabber.trigger(\"clear_search\");\n                if (!is_group)\n                    xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n            }\n        });\n    },\n\n    unblockWithDialog: function () {\n        let contact = this;\n        utils.dialogs.ask(xabber.getString(\"chat_settings__button_unblock_contact\"), xabber.getString(\"unblock_contact_confirm_short\", [this.get('name')]), null, { ok_button_text: xabber.getString(\"contact_bar_unblock\")}).done(function (result) {\n            if (result) {\n                contact.unblock();\n                xabber.trigger(\"clear_search\");\n            }\n        });\n    },\n\n    block: function (callback, errback) {\n        let iq = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.get('jid')});\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('blocked', true);\n        this.set('known', false);\n    },\n\n    unblock: function (callback, errback) {\n        let iq = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.get('jid')});\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('blocked', false);\n    },\n\n    setActiveStateSendInterval: function () {\n        let stanza = $msg({to: this.get('jid'), type: 'chat'}).c('active', {xmlns: Strophe.NS.CHATSTATES});\n        clearTimeout(this._sending_active_chatstate_timeout);\n        clearInterval(this._sending_active_chatstate_interval);\n        this._sending_active_chatstate_timeout = setTimeout(() => {\n            this._sending_active_chatstate_interval = setInterval(() => {\n                this.account.sendMsg(stanza);\n            }, constants.PRESENT_INTERVAL);\n        }, constants.PRESENT_INTERVAL)\n    },\n\n    handlePresence: function (presence) {\n        let $presence = $(presence),\n            type = presence.getAttribute('type'),\n            $vcard_update = $presence.find(`x[xmlns=\"${Strophe.NS.VCARD_UPDATE}\"]`);\n        if ($vcard_update.length && this.get('avatar_priority') && this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n            this.set('photo_hash', $vcard_update.find('photo').text());\n            this.trigger('update_avatar');\n        }\n        let $group_chat_info = $(presence).find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`);\n        if ($group_chat_info.length > 0 && $group_chat_info.children().length) {\n            this.set('full_jid', $presence.attr('from'));\n            if (!this.get('group_chat')) {\n                this.set('group_chat', true);\n                this.account.chat_settings.updateGroupChatsList(this.get('jid'), this.get('group_chat'));\n            }\n            let group_chat_info = this.parseGroupInfo($(presence)),\n                prev_group_info = this.get('group_info') || {};\n            _.extend(prev_group_info, group_chat_info);\n            this.set('group_info', prev_group_info);\n            if (!this.get('roster_name') && (prev_group_info.name !== this.get('name')))\n                this.set('name', prev_group_info.name);\n            this.set({status: prev_group_info.status, status_updated: moment.now(), status_message: (prev_group_info.members_num + ' members' + xabber.getString(\"contact_groupchat_status_online\", [prev_group_info.online_members_num || 0]))});\n        }\n        if (type === 'subscribe') {\n            this.set('subscription_request_in', true);\n            if (this.get('subscription_preapproved')) {\n                this.pres('subscribed');\n            } else {\n                this.trigger('presence', this, 'subscribe');\n            }\n        } else if (type === 'subscribed') {\n            if (this.get('group_chat') && (this.get('subscription_request_out') || this.get('subscription') === 'to')) {\n\n            }\n            if (this.get('subscription') === 'to') {\n                // this.pres('subscribed');\n            }\n            this.trigger('presence', this, 'subscribed');\n        } else if (type === 'unsubscribe') {\n            this.set('subscription_request_in', false);\n            if (this.get('group_chat')) {\n                let chat = this.account.chats.getChat(this),\n                    sync_deleted = this.get('sync_deleted');\n                this.removeFromRoster();\n                if (!sync_deleted){\n                    chat.deleteFromSynchronization(() => {\n                        chat.trigger(\"close_chat\");\n                    }, () => {\n                        chat.trigger(\"close_chat\");\n                    });\n                } else {\n                    chat.trigger(\"close_chat\");\n                }\n            }\n        } else if (type === 'unsubscribed') {\n            this.set('subscription_request_out', false);\n            // this.trigger('presence', this, 'unsubscribed');\n        } else {\n            let jid = presence.getAttribute('from'),\n                resource = Strophe.getResourceFromJid(jid),\n                priority = Number($presence.find('priority').text()),\n                status = $presence.find('show').text() || 'online',\n                $status_message = $presence.find('status'),\n                status_message = $status_message.text();\n            _.isNaN(priority) && (priority = 0);\n            clearTimeout(this._reset_status_timeout);\n            let resource_obj = this.resources.get(resource);\n            if (type === 'unavailable') {\n                this.set({ last_seen: moment.now() });\n                resource_obj && resource_obj.destroy();\n            } else {\n                this.set({ last_seen: undefined });\n                let attrs = {\n                    resource: resource,\n                    priority: priority,\n                    status: status\n                };\n                $status_message.length && (attrs.status_message = status_message);\n                if (!resource_obj) {\n                    resource_obj = this.resources.create(attrs);\n                } else {\n                    resource_obj.set(attrs);\n                }\n            }\n        }\n    },\n\n    parseGroupInfo: function ($presence) {\n        let jid = this.get('jid'),\n            $group_chat = $presence.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`),\n            name = $group_chat.find('name').text(),\n            $model = $group_chat.find('membership'),\n            status = $presence.children('show').text() || (($presence.attr('type') === 'unavailable') ? 'unavailable' : 'online'),\n            status_msg = $presence.children('status').text(),\n            privacy = $group_chat.find('privacy').text(),\n            $index = $group_chat.find('index'),\n            $description = $group_chat.find('description'),\n            pinned_message = Number($group_chat.find('pinned-message').text()),\n            prev_pinned_message = this.get('pinned_message') ? this.get('pinned_message').get('stanza_id') : 0,\n            private_chat = $group_chat.find('parent-chat').text() || false,\n            members_num = Number($group_chat.find('members').text()),\n            $online_members_num = $group_chat.find('present'),\n            info = {jid, name, status_msg, privacy, status, members_num};\n        $index.length && (info.searchable = $index.text());\n        $model.length && (info.model = $model.text());\n        $description.length && (info.description = $description.text());\n        $online_members_num.length && (info.online_members_num = Number($online_members_num.text()));\n        private_chat && this.set('private_chat', private_chat);\n        privacy === 'incognito' && this.set('incognito_chat', true);\n        let chat = this.account.chats.get(this.hash_id), pinned_msg_elem;\n        if ($group_chat.find('pinned-message').length) {\n            if (prev_pinned_message != pinned_message) {\n                if (chat) {\n                    if (chat.item_view && !chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    pinned_msg_elem = chat.item_view.content.$pinned_message;\n                }\n                if (pinned_msg_elem) {\n                    if (pinned_message) {\n                        this.getMessageByStanzaId(pinned_message, ($message) => {\n                            this.parsePinnedMessage($message, pinned_msg_elem);\n                        });\n                    }\n                    else {\n                        this.set('pinned_message', undefined);\n                        this.parsePinnedMessage(undefined, pinned_msg_elem);\n                    }\n                }\n            }\n        }\n        return info;\n    },\n\n    getAllRights: function (callback) {\n        let iq_get_rights = $iq({type: 'get', to: this.get('full_jid') || this.get('jid') })\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#rights` });\n        this.account.sendIQFast(iq_get_rights, (iq_all_rights) => {\n            let all_permissions = $(iq_all_rights).find('permission'),\n                all_restrictions = $(iq_all_rights).find('restriction');\n            this.all_rights = {permissions: all_permissions, restrictions: all_restrictions};\n            callback && callback();\n        });\n    },\n\n    getMessageByStanzaId: function (stanza_id, callback, options) {\n        options = options || {};\n        let queryid = uuid(),\n            account = this.account,\n            is_fast = account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n            conn = is_fast ? account.fast_connection : account.connection,\n            receiver = this.get('group_chat') ? this.get('full_jid') || this.get('jid') : this.account.get('jid'),\n            iq = $iq({type: 'set', to: receiver})\n                .c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                .c('value').t(Strophe.NS.MAM).up().up()\n                .c('field', {'var': 'ids'})\n                .c('value').t(stanza_id).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE))    {\n            iq.c('field', {'var': `conversation-type`});\n            if (options.encrypted){\n                iq.c('value').t(Strophe.NS.OMEMO).up().up();\n            } else {\n                iq.c('value').t(Strophe.NS.XABBER_CHAT).up().up();\n            }\n        }\n        let handler = conn.addHandler((message) => {\n            let $msg = $(message);\n            if ($msg.find('result').attr('queryid') === queryid)\n                callback && callback($msg);\n            return true;\n        }, Strophe.NS.MAM);\n        this.account.sendIQFast(iq, () => {\n                conn.deleteHandler(handler);\n            }, () => {\n                conn.deleteHandler(handler);\n            }\n        );\n    },\n\n    MAMRequest: function (options, callback, errback) {\n        let account = this.account,\n            is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n            conn = is_fast ? account.fast_connection : account.connection,\n            contact = this,\n            messages = [], queryid = uuid(),\n            is_groupchat = contact && contact.get('group_chat'), success = true, iq;\n        delete options.fast;\n        if (is_groupchat)\n            iq = $iq({type: 'set', to: contact.get('full_jid') || contact.get('jid')});\n        else\n            iq = $iq({type: 'set'});\n        iq.c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n            .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n            .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n            .c('value').t(Strophe.NS.MAM).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE))    {\n            iq.c('field', {'var': `conversation-type`});\n            if (options.encrypted){\n                iq.c('value').t(Strophe.NS.OMEMO).up().up();\n            } else {\n                iq.c('value').t(Strophe.NS.XABBER_CHAT).up().up();\n            }\n            iq.c('field', {'var': `with-tags`});\n            if (options.filter_image)\n                iq.c('value').t('image').up();\n            if (options.filter_video)\n                iq.c('value').t('video').up();\n            if (options.filter_voice)\n                iq.c('value').t('voice').up();\n            if (options.filter_files)\n                iq.c('value').t('document').up();\n            iq.up();\n        }\n        if (!is_groupchat)\n            iq.c('field', {'var': 'with'})\n                .c('value').t(this.get('jid')).up().up();\n        if (options.var)\n            options.var.forEach((opt_var) => {\n                iq.c('field', {'var': opt_var.var})\n                    .c('value').t(opt_var.value).up().up();\n            });\n        iq.up().cnode(new Strophe.RSM(options).toXML());\n        let deferred = new $.Deferred();\n        account.chats.onStartedMAMRequest(deferred);\n        deferred.done(function () {\n            let handler = conn.addHandler(function (message) {\n                if ((contact && is_groupchat == contact.get('group_chat'))) {\n                    let $msg = $(message);\n                    if ($msg.find('result').attr('queryid') === queryid) {\n                        messages.push(message);\n                    }\n                }\n                else {\n                    messages = [];\n                    success = false;\n                }\n                return true;\n            }, Strophe.NS.MAM);\n            let callb = function (res) {\n                    conn.deleteHandler(handler);\n                    account.chats.onCompletedMAMRequest(deferred);\n                    let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                    if ($fin.length && $fin.attr('queryid') === queryid) {\n                        let rsm = new Strophe.RSM({xml: $fin.find('set')[0]});\n                        rsm.complete = ($fin.attr('complete') === 'true') ? true : false;\n                        callback && callback(success, messages, rsm);\n                    }\n                },\n                errb = function (err) {\n                    conn.deleteHandler(handler);\n                    xabber.error(\"MAM error\");\n                    xabber.error(err);\n                    account.chats.onCompletedMAMRequest(deferred);\n                    errback && errback(err);\n                };\n            if (is_fast)\n                account.sendFast(iq, callb, errb);\n            else\n                account.sendIQ(iq, callb, errb);\n        });\n    },\n\n    getFilesFromStanza: function ($message, options) {\n        $message = options && options.cached_message? $message.find('content') : $message.find('message')\n        let references = $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n            $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`) :\n            $message.children('envelope').children('content').children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`),\n            items = [], cached_stanza_id;\n        options && options.cached_stanza_id && (cached_stanza_id = options.cached_stanza_id);\n\n        references.each((idx, reference) => {\n            let $reference = $(reference),\n                type = $reference.attr('type');\n            if (type === 'mutable') {\n                let $file_sharing = $reference.find(`file-sharing[xmlns=\"${Strophe.NS.FILES}\"]`).first();\n                if ($file_sharing.length) {\n                    let type = $file_sharing.parent(`voice-message[xmlns=\"${Strophe.NS.VOICE_MESSAGE}\"]`).length ? 'voice' : 'file',\n                        $file = $file_sharing.children('file'), file_attrs = {}, sources = [];\n                    $file_sharing.children('sources').children('uri').each((i, uri) => {sources.push($(uri).text());});\n                    file_attrs = {\n                        name: $file.children('name').text(),\n                        hash: $file.children(`hash[xmlns=\"${Strophe.NS.HASH}\"]`).text(),\n                        size: $file.children('size').text(),\n                        uniqueid: $message.attr('id') || cached_stanza_id ,\n                        id: $file.children('gallery-id').text(),\n                        created_at: $file.children('created').text(),\n                        thumbnail: $file.children('thumbnail-uri').text(),\n                        media_type: $file.children('media-type').text(),\n                        duration: $file.children('duration').text(),\n                        description: $file.children('desc').text(),\n                        height: $file.children('height').text(),\n                        width: $file.children('width').text(),\n                        voice: type === 'voice',\n                        sources: sources\n                    };\n                    if (sources[0].indexOf('aescbc') == 0) {\n                        let uri = sources[0].replace(/^aescbc/, 'https'),\n                            key = utils.fromBase64toArrayBuffer(uri.slice(uri.length - 64));\n                        uri = uri.slice(0, uri.length - 64 - 1);\n                        _.extend(file_attrs, {sources: [uri], key: key});\n                        file_attrs.has_encrypted_files = true;\n                    }\n                    items.push(file_attrs);\n                }\n            }\n        });\n        return items\n    },\n\n    parsePinnedMessage: function ($message, pinned_msg_elem) {\n        if (!$message) {\n            this.renderPinnedMessage(null, pinned_msg_elem);\n        }\n        else {\n            let $msg = $message.find('result message').first();\n            if (this.get('pinned_message'))\n                if (this.get('pinned_message').stanza_id === $msg.find('stanza-id').attr('id'))\n                    return;\n            let message = this.account.chats.receiveChatMessage($message, {pinned_message: true});\n            this.set('pinned_message', message);\n            this.renderPinnedMessage(message, pinned_msg_elem);\n        }\n    },\n\n    renderPinnedMessage: function (message, pinned_msg_elem) {\n        if (!message) {\n            pinned_msg_elem.html(\"\");\n            pinned_msg_elem.siblings('.chat-content').css({'height':'100%'});\n        }\n        else {\n            let images = message.get('images') || [],\n                files = message.get('files') || [],\n                locations = message.get('locations'),\n                fwd_message = message.get('forwarded_message'),\n                fwd_msg_author = null,\n                msg_text = _.escape(message.get('message'));\n            message.get('videos') && message.get('videos').length && (files = files.concat(message.get('videos')));\n            if (fwd_message) {\n                let user_info = fwd_message[0].get('user_info') || {};\n                if (msg_text) {\n                } else if (fwd_message.length > 1)\n                    msg_text = xabber.getQuantityString(\"forwarded_messages_count\", fwd_message.length);\n                else {\n                    msg_text = fwd_message[0].get('message') || fwd_message[0].get('forwarded_message') && xabber.getString(\"forwarded_messages_count_plural_0\", [fwd_message[0].get('forwarded_message').length]);\n                    fwd_msg_author = user_info.nickname || fwd_message[0].get('from_jid') || user_info.id;\n                }\n            }\n            if ((images && images.length) && (files && files.length))\n                msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__attachments\", [images.length + files.length])}</span>`;\n            else {\n                if (images && images.length) {\n                    if (images.length == 1)\n                        msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__images_plural_0\")}: </span>` + images[0].name;\n                    if (images.length > 1)\n                        msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__images\", images.length)}</span>`;\n                }\n                if (files && files.length) {\n                    if (files.length == 1)\n                        msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__files_plural_0\")}: </span>` + files[0].name + ' (' + files[0].size + ')';\n                    if (files.length > 1)\n                        msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__files\", files.length)}</span>`;\n                }\n            }\n            if (locations && locations.length) {\n                if (locations.length == 1)\n                    msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__locations_plural_0\")}</span>`;\n                if (locations.length > 1)\n                    msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__locations\", locations.length)}</span>`;\n            }\n            let participant_info = this.participants.get(message.get('user_info')),\n                participant_nickname = participant_info && participant_info.get('nickname') ? participant_info.get('nickname') : null;\n            let user_info = message.get('user_info') || {},\n                msg_author = participant_nickname || user_info.nickname || message.get('from_jid') || user_info.id,\n                pinned_msg = {\n                    author: msg_author,\n                    time: pretty_datetime(message.get('time')),\n                    message: msg_text,\n                    fwd_author: fwd_msg_author\n                },\n                pinned_msg_html = $(templates.group_chats.pinned_message(pinned_msg));\n            let chat_content = this.account.chats.get(this.hash_id);\n            if (chat_content && chat_content.item_view && chat_content.item_view.content){\n                chat_content = chat_content.item_view.content;\n                let is_scrolled = chat_content.isScrolledToBottom();\n                if (is_scrolled)\n                    chat_content.scrollToBottom();\n            }\n            pinned_msg_elem.html(pinned_msg_html).emojify('.chat-msg-content', {emoji_size: 18});\n            let height_pinned_msg = pinned_msg_elem.height();\n            pinned_msg_elem.siblings('.chat-content').css({\n                'height': 'calc(100% - ' + height_pinned_msg + 'px)'\n            });\n            pinned_msg_elem.attr('data-uniqueid', message.get('unique_id'));\n        }\n    },\n\n    resetStatus: function (timeout) {\n        clearTimeout(this._reset_status_timeout);\n        this._reset_status_timeout = setTimeout(() => {\n            this.set({\n                status_updated: moment.now(),\n                status: 'offline',\n                status_message: ''\n            });\n        }, timeout || 5000);\n    },\n\n    searchByParticipants: function (query, callback) {\n        if (!this.participants.version) {\n            this.participants.participantsRequest({}, () => {\n                let participants_list = this.participants.search(query);\n                callback && callback(participants_list);\n            });\n        } else {\n            let participants_list = this.participants.search(query);\n            callback && callback(participants_list);\n        }\n    },\n\n    updateName: function () {\n        if (this.get('roster_name') && this.get('name') !== this.get('roster_name'))\n            this.set('name', this.get('roster_name'));\n    },\n\n    showDetails: function (screen) {\n        if (!this.details_view)\n            this.details_view = (this.get('group_chat')) ? new xabber.GroupChatDetailsView({model: this}) : new xabber.ContactDetailsView({model: this});\n        screen || (screen = 'contacts');\n        xabber.body.setScreen(screen, {right: 'contact_details', contact: this});\n    },\n\n    showDetailsRight: function (screen, options) {\n        let chat = this.account.chats.getChat(this),\n             scrolled_top_chats_view, scrolled_top_chat;\n        if (chat)\n            if (!chat.item_view.content)\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n            scrolled_top_chat = chat.item_view.content.getScrollTop()\n        if (xabber.chats_view)\n            scrolled_top_chats_view = xabber.chats_view.getScrollTop();\n        options = options || {};\n        if (!this.details_view_right && !options.encrypted)\n            this.details_view_right = (this.get('group_chat')) ? new xabber.GroupChatDetailsViewRight({model: this}) : new xabber.ContactDetailsViewRight({model: this});\n        if (!this.details_view_right_encrypted && options.encrypted)\n            this.details_view_right_encrypted = new xabber.ContactDetailsViewRight({model: this, encrypted: true});\n        screen || (screen = 'contacts');\n        if (xabber.body.screen.get('right_contact') && options.type != 'search' && options.type != 'members' && options.type != 'participant' && !options.right_saved) {\n            this.set('search_hidden', true)\n            xabber.body.setScreen(screen, {right_contact: '', contact: this});\n        }\n        else {\n            if (options.encrypted)\n                xabber.body.setScreen(screen, {right_contact: 'contact_details_encrypted', contact: this});\n            else\n                xabber.body.setScreen(screen, {right_contact: 'contact_details', contact: this});\n            if (this.details_view_right && this.details_view_right.contact_searched_messages_view){\n                this.details_view_right.contact_searched_messages_view.hideSearch();\n                if (options.type === 'search') {\n                    this.details_view_right.contact_searched_messages_view.clearSearch();\n                    this.details_view_right.showSearchMessages();\n                }\n                if (options.type === 'members') {\n                    this.details_view_right.$('.tabs:not(.participant-tabs) .list-variant[data-value=\"participants\"]').click()\n                }\n                this.details_view_right.onScroll()\n            }\n        }\n        if (scrolled_top_chat)\n            chat.item_view.content.scrollTo(scrolled_top_chat);\n        if (scrolled_top_chats_view)\n            xabber.chats_view.scrollTo(scrolled_top_chats_view);\n    },\n});\n\nxabber.SetGroupchatStatusView = xabber.BasicView.extend({\n    className: 'modal main-modal change-status-modal',\n    template: templates.group_chats.set_status,\n\n    events: {\n        \"click .status-values li\": \"changeStatus\"\n    },\n\n    open: function (contact) {\n        this.contact = contact;\n        this.account = this.contact.account;\n        this.show();\n        this.getStatuses();\n    },\n\n    updateIcons: function () {\n        let ic_name = this.contact.getIcon();\n        this.$('.status-bulb').addClass('hidden');\n        ic_name && this.$('.status-bulb').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    highlightStatus: function (status) {\n        this.$(`.status-values li[data-value=\"${status}\"]`).addClass('active')\n            .siblings().removeClass('active');\n        this.updateIcons();\n    },\n\n    getStatuses: function () {\n        let iq_get_properties = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'get'})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#status`});\n        this.account.sendFast(iq_get_properties, (properties) => {\n            this.data_form = this.account.parseDataForm($(properties).find('x[xmlns=\"' + Strophe.NS.DATAFORM + '\"]'));\n            let status_field = this.data_form.fields.find(field => field.var == 'status'),\n                options = (this.data_form.fields.find(field => field.var == 'status') || []).options || [];\n            if (!options.length || status_field.type == 'fixed') {\n                this.closeModal();\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                return;\n            }\n            this.renderStatuses(options);\n        }, () => {\n            this.closeModal();\n            utils.dialogs.error(xabber.getString(\"set_group_status__error__service_unavailable\"));\n            return;\n        });\n    },\n\n    renderStatuses: function (options) {\n        this.$('.status-values').html(\"\");\n        options.forEach((option) => {\n            let status = option,\n                status_field = this.data_form.fields.find(f => f.var == status.value);\n            if (status_field)\n                status.show = status_field.values[0];\n            else\n                status.show = status.value;\n            let $status_item = $(templates.group_chats.status_item({status}));\n            this.$('.status-values').append($status_item);\n        });\n        this.highlightStatus(this.contact.get('status'));\n    },\n\n    changeStatus: function (ev) {\n        let status = $(ev.target).closest('li').data('value');\n        this.highlightStatus(status);\n        this.do_change();\n        this.closeModal();\n    },\n\n    do_change: function () {\n        let status = this.$('.status-values li.active').data('value');\n        this.setStatus(status);\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    setStatus: function (status) {\n        if (!this.data_form || this.contact.get('group_info').status === status)\n            return;\n        let iq_set_status = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#status`}),\n            status_field = this.data_form.fields.find(field => field.var === 'status'),\n            idx = this.data_form.fields.indexOf(status_field);\n        status_field.values = [status];\n        this.data_form.fields[idx] = status_field;\n        iq_set_status = this.account.addDataFormToStanza(iq_set_status, this.data_form);\n        this.account.sendFast(iq_set_status);\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        let value = this.$('.status-message').val();\n        if (!value)\n            this.do_change();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.ContactItemView = xabber.BasicView.extend({\n    className: 'roster-contact list-item',\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.$el.attr({'data-id': uuid(), 'data-jid': this.model.get('jid')});\n        this.$('.jid').text(this.model.get('jid'));\n        this.interval_last;\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.selectView();\n        this.updateGroupChat();\n        this.updateIcon();\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"change:subscription\", this.updateStatus, this);\n        this.model.on(\"change:subscription_preapproved\", this.updateStatus, this);\n        this.model.on(\"change:subscription_request_in\", this.updateStatus, this);\n        this.model.on(\"change:subscription_request_out\", this.updateStatus, this);\n        this.model.on(\"change:private_chat\", this.updateIcon, this);\n        this.model.on(\"change:incognito_chat\", this.updateIcon, this);\n        this.model.on(\"change:bot\", this.updateIcon, this);\n        this.model.on(\"change:blocked\", this.onBlocked, this);\n        this.model.on(\"change:status_message\", this.updateStatusMsg, this);\n        this.model.on(\"change:last_seen\", this.lastSeenUpdated, this);\n        this.model.on(\"change:group_chat\", this.updateGroupChat, this);\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.model.get('name'));\n    },\n\n    updateAvatar: function () {\n        this.$('.circle-avatar').setAvatar(this.model.cached_image, this.avatar_size);\n    },\n\n    updateStatus: function () {\n        this.$('.status').attr('data-status', this.model.get('status'));\n        this.$('.chat-icon').attr('data-status', this.model.get('status'));\n        this.$('.status-message').text(this.model.getStatusMessage());\n        if (this.model.get('status') == 'offline') {\n            if (!Strophe.getNodeFromJid(this.model.get('jid'))) {\n                this.model.set({status_message: 'Server'});\n                return;\n            }\n            if (this.model.get('last_seen')) {\n            let seconds = (moment.now() - this.model.get('last_seen'))/1000,\n                new_status = xabber.pretty_last_seen(seconds);\n            this.model.set({ status_message: new_status });\n            }\n        }\n    },\n\n    onBlocked: function () {\n        this.updateIcon();\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n\n    selectView: function () {\n        if (this.model.get('group_chat')) {\n            this.$('.private-chat').addClass('hidden');\n            this.$('.group_chat').removeClass('hidden');\n        }\n    },\n\n    lastSeenUpdated: function () {\n        if (this.model.get('status') == 'offline' && this.model.get('last_seen') && _.isUndefined(this.interval_last)) {\n            this.interval_last = setInterval(() => {\n                let seconds = (moment.now() - this.model.get('last_seen'))/1000,\n                    new_status = xabber.pretty_last_seen(seconds);\n                this.model.set({ status_message: new_status });\n            }, 60000);\n        }\n        else\n        {\n            clearInterval(this.interval_last);\n        }\n    },\n\n    updateGroupChat: function () {\n        let is_group_chat = this.model.get('group_chat');\n        this.$('.status').hideIf(is_group_chat);\n        this.updateIcon();\n    },\n\n    updateIcon: function () {\n        let ic_name = this.model.getIcon();\n        this.$('.chat-icon').addClass('hidden');\n        if (this.model.get('invitation'))\n            return;\n        ic_name && this.$('.chat-icon').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    updateStatusMsg: function() {\n        this.$('.status-message').text(this.model.getStatusMessage());\n    }\n});\n\nxabber.ContactItemRightView = xabber.ContactItemView.extend({\n    template: templates.contact_right_item,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_RIGHT_ITEM,\n\n    events: {\n        \"click\": \"clickOnItem\",\n        \"mouseover\": \"showJid\",\n        \"mouseleave\": \"hideJid\",\n    },\n\n    showJid: function () {\n        if (this.$('.name').text() !== this.model.get('jid')) {\n            this.$('.status-message').addClass('hidden');\n            this.$('.jid').removeClass('hidden');\n        }\n    },\n\n    hideJid: function () {\n        this.$('.jid').addClass('hidden');\n        this.$('.status-message').removeClass('hidden');\n    },\n\n    clickOnItem: function () {\n        this.model.trigger(\"open_chat\", this.model);\n    }\n});\n\nxabber.ContactItemLeftView = xabber.ContactItemView.extend({\n    template: templates.contact_left_item,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_LEFT_ITEM,\n\n    events: {\n        \"click\": \"clickOnItem\"\n    },\n\n    __initialize: function () {\n        this.updateDisplayStatus();\n        this.updateBlockedState();\n        this.updateMutedState();\n        this.updateGroupChat();\n        this.model.on(\"change:display\", this.updateDisplayStatus, this);\n        this.model.on(\"change:blocked\", this.updateBlockedState, this);\n        this.model.on(\"change:group_chat\", this.updateGroupChat, this);\n    },\n\n    updateDisplayStatus: function () {\n        this.$el.switchClass('active', this.model.get('display'));\n    },\n\n    updateBlockedState: function () {\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n    updateMutedState: function () {\n        this.$('.muted-icon').hide();\n    },\n\n    clickOnItem: function () {\n        let options = {};\n        (xabber.chats_view.active_chat && xabber.chats_view.active_chat.model.get('jid') === this.model.get('jid') && xabber.chats_view.active_chat.model.get('encrypted')) && (options.encrypted = true);\n        this.model.trigger(\"open_chat\", this.model, options);\n    }\n});\n\nxabber.ContactResources = xabber.Resources.extend({\n    initialize: function (models, options) {\n        this.contact = options.contact;\n        this.jid = options.contact.get('jid');\n        this.connection = options.contact.account.connection;\n        this.on(\"add change\", this.onResourceUpdated, this);\n        this.on(\"remove\", this.onResourceRemoved, this);\n    },\n\n    onResourceUpdated: function (resource) {\n        if (resource === this.first()) {\n            this.contact.set({\n                status_updated: moment.now(),\n                status: resource.get('status'),\n                status_message: resource.get('status_message')\n            });\n        }\n    },\n\n    onResourceRemoved: function () {\n        let attrs = {status_updated: moment.now()};\n        if (this.length) {\n            attrs.status = this.first().get('status');\n            attrs.status_message = this.first().get('status_message');\n        } else {\n            attrs.status = 'offline';\n            attrs.status_message = '';\n        }\n        this.contact.set(attrs);\n    }\n});\n\nxabber.ContactResourcesView = xabber.ResourcesView.extend({\n    onResourceAdded: function (resource) {\n        this.addChild(resource.get('resource'),\n            xabber.ResourceView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.$el.showIf(this.model.length);\n        this.parent.updateScrollBar();\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.$el.addClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.resources-wrap').prepend(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.ContactResourcesRightView = xabber.ResourcesView.extend({\n    className: 'modal main-modal resource-modal',\n\n    _initialize: function () {\n        this.model.on(\"remove\", this.onResourceRemoved, this);\n        this.model.on(\"reset\", this.onReset, this);\n        this.model.on(\"change:priority\", this.onPriorityChanged, this);\n    },\n\n    renderByInit: function () {\n        this.model.each((resource) => {\n            this.onResourceAdded(resource);\n        });\n    },\n\n    open: function () {\n        if (this.model.length) {\n            this.$el.openModal({\n                ready: () => {\n                    this.$el.html('<svg class=\"details-icon mdi mdi-24px \"></svg><div class=\"resources-wrap\"></div>')\n                    this.$el.find('.details-icon').html(env.templates.svg['ic-jabber']())\n                    this.renderByInit();\n                },\n                // complete: () => {\n                //     this.$el.detach();\n                //     this.data.set('visible', false);\n                // }\n            });\n        }\n    },\n\n    onResourceAdded: function (resource) {\n        this.model.requestInfo(resource);\n        this.addChild(resource.get('resource'),\n            xabber.ResourceRightView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n    },\n\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.$el.showIf(this.model.length);\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.$el.addClass('hidden');\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.resources-wrap').prepend(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.ContactVCardView = xabber.VCardView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .details-icon\": \"onClickIcon\"\n    }\n});\n\nxabber.ContactRightVCardView = xabber.VCardRightView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .info-wrap.more\": \"showVCard\",\n        \"click .btn-back\": \"hideVCard\"\n    },\n\n\n    showVCard: function (ev) {\n        this.model.set('vcard_hidden', false);\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n        });\n        this.parent.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.vcard-header').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideVCard: function (ev) {\n        this.model.set('vcard_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.scrollToTop();\n        this.onScroll();\n        this.parent.onScroll();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n});\n\nxabber.ContactDetailsViewRight = xabber.BasicView.extend({\n    className: 'details-panel-right contact-details-panel',\n    template: templates.contact_details_right,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-escape:not(.btn-top)\": \"openChat\",\n        \"click .btn-escape.btn-top\": \"scrollToTopSmooth\",\n        \"click .btn-edit\": \"showEdit\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .panel-background-clickable\": \"openChat\",\n        \"click .btn-search\": \"showSearchMessages\",\n        \"click .btn-voice-call\": \"voiceCall\",\n        \"click .btn-add\": \"addContact\",\n        \"click .btn-delete\": \"deleteContact\",\n        \"click .btn-block\": \"blockContact\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-unblock\": \"unblockContact\",\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-mute.muted\": \"unmuteChat\",\n        \"click .list-variant\": \"changeList\",\n        \"click .btn-auth-request\": \"requestAuthorization\",\n    },\n\n    _initialize: function (options) {\n        this.encrypted = options.encrypted;\n        this.ps_container = this.$('.panel-content-wrap');\n        this.account = this.model.account;\n        this.chat = this.account.chats.getChat(this.model, options.encrypted && 'encrypted');\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.name_field.$('.contact-name-input').prop('disabled', true)\n        if (!this.encrypted){\n            this.contact_edit_view = this.addChild('edit', xabber.ContactEditView,\n                {model: this.model, el: this.$('.edit-block-wrap')[0]});\n        }\n        this.contact_searched_messages_view = this.addChild('search', xabber.ContactSearchedMessagesView,\n            {model: this.account.chats.getChat(this.model), query_text: '1', el: this.$('.search-messages-block-wrap')[0]});\n        this.vcard_view = this.addChild('vcard', xabber.ContactRightVCardView,\n            {model: this.model, el: this.$('.vcard')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateButtons();\n        this.updateColorScheme();\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScroll.bind(this));\n        this.model.on(\"change\", this.update, this);\n        this.chat.on(\"change:muted\", this.updateNotifications, this);\n        xabber.on(\"change:video\", this.updateJingleButtons, this);\n        xabber.on(\"change:audio\", this.updateJingleButtons, this);\n    },\n\n    render: function (options) {\n        if (!this.model.get('vcard_updated')) {\n            this.vcard_view.refresh();\n        }\n        if (!this.model.get('saved_search_panel')) {\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        else {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.$('.btn-mute').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        if (this.encrypted){\n            this.$('.btn-search-messages').remove()\n            this.$('.btn-edit').remove()\n            this.$('.btn-qr-code').remove()\n        }\n        this.updateChilds();\n        this.updateSubscriptions();\n        this.updateJingleButtons();\n        this.updateStatusMsg();\n        this.updateName();\n        this.updateNotifications();\n        this.setButtonsWidth();\n        this.updateList('image');\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        this.onScroll();\n        this.model.resources.models.forEach((resource) => {this.model.resources.requestInfo(resource)});\n        $(window).bind(\"keydown.contact_panel\", this.keydownHandler.bind(this));\n    },\n\n    updateChilds: function () {\n        if (this.vcard_view && !this.model.get('vcard_hidden'))\n            this.vcard_view.hideVCard();\n        if (this.contact_edit_view && !this.model.get('edit_hidden'))\n            this.contact_edit_view.hideEdit();\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n\n    keydownHandler: function (ev) {\n        if (!xabber.body.$el.siblings('.mfp-ready').length && !$.magnificPopup.instance.isOpen && ev.keyCode === constants.KEY_ESCAPE && !xabber.body.$el.siblings('#modals').children('.open').length) {\n            this.model.showDetailsRight('all-chats');\n            $(window).unbind(\"keydown.contact_panel\");\n        }\n    },\n\n    openChat: function (ev) {\n        this.model.showDetailsRight('all-chats');\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.header-buttons .block-name').addClass('fade-out');\n        this.$('.btn-escape').removeClass('btn-top');\n        this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    onChangedVisibility: function () {\n        this.model.set('display', this.isVisible());\n    },\n\n    updateJingleButtons: function () {\n        this.$('.btn-voice-call').switchClass('non-active', !xabber.get('audio'));\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        if (_.has(changed, 'status_updated')) this.updateStatus();\n        if (_.has(changed, 'subscription')) this.updateSubscriptions();\n        if (_.has(changed, 'subscription_request_in')) this.updateSubscriptions();\n        if (_.has(changed, 'blocked')) this.updateStatusMsg();\n        if (_.has(changed, 'status_message')) this.updateStatusMsg();\n        if (_.has(changed, 'in_roster') || _.has(changed, 'blocked') ||\n            _.has(changed, 'subscription')) {\n            this.updateButtons();\n        }\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('roster_name') && this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n\n    onScroll: function () {\n        if (this.model.get('saved_search_panel') && !this.model.get('search_hidden')){\n            this.ps_container.perfectScrollbar('destroy');\n            return true;\n        }\n        let bottom_block_scroll;\n        if (this.$('.bottom-block:not(.edit-bottom-block)'))\n            bottom_block_scroll = this.$('.bottom-block:not(.edit-bottom-block)').get(0).getBoundingClientRect().top;\n\n        if(this.ps_container[0].scrollTop >= 250) {\n            this.$('.header-buttons').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.main-info').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n            this.$('.header-buttons .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.header-buttons').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        else{\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        if (!_.isUndefined(bottom_block_scroll) && bottom_block_scroll <= 160){\n            this.$('.btn-escape').addClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.header-buttons .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').text(this.$('.list-variant .active').text())\n        }\n        else {\n            this.$('.btn-escape').removeClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status').attr('data-status', this.model.get('status'));\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateStatusMsg: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateButtons: function () {\n        let in_roster = this.model.get('in_roster'),\n            is_blocked = this.model.get('blocked'),\n            is_server = this.model.get('server'),\n            subscription = this.model.get('subscription');\n        this.$('.btn-add').hideIf(in_roster);\n        this.$('.btn-block-wrap .contact-btn').switchClass('btn-block', !is_blocked).switchClass('btn-unblock', is_blocked);\n        this.$('.btn-block-wrap .btn-name').text(is_blocked ? xabber.getString(\"contact_bar_unblock\") : xabber.getString(\"contact_bar_block\"));\n        this.$('.buttons-wrap .button-wrap:not(.btn-block-wrap):not(.btn-search-messages)').switchClass('non-active', is_blocked);\n        this.$('.contact-mute-dropdown').hideIf(is_blocked);\n        this.$('.btn-auth-request').showIf(!is_server && in_roster && !is_blocked &&\n            subscription !== 'both' && subscription !== 'to');\n    },\n\n    updateNotifications: function () {\n        if (this.chat.isMuted()) {\n            if (this.chat.isMuted() > 4800000000)\n                this.$('.btn-mute').html(env.templates.svg['bell-off']());\n            else\n                this.$('.btn-mute').html(env.templates.svg['bell-sleep']());\n            this.$('.btn-mute').addClass('muted').addClass('active')\n        }\n        else {\n            this.$('.btn-mute').html(env.templates.svg['bell']());\n            this.$('.btn-mute').removeClass('muted')\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.chat.isMuted());\n        this.$('.btn-unmute-dropdown').hideIf(!this.chat.isMuted());\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    updateSubscriptions: function () {\n        let subscription = this.model.get('subscription'),\n            in_request = this.model.get('subscription_request_in'),\n            out_request = this.model.get('subscription_request_out'),\n            $label_outcoming = this.$('label[for=\"outcoming-subscription\"]'),\n            $label_incoming = this.$('label[for=\"incoming-subscription\"]');\n        if (subscription === 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        } else if (subscription === 'from') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        } else if (subscription === 'to') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        }\n        else if (!subscription || subscription === 'none') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        }\n        if (in_request && subscription !== 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', false);\n        }\n        if (out_request) {\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', true);\n        }\n    },\n\n    showEdit: function (ev) {\n        this.contact_edit_view.showEdit();\n    },\n\n    voiceCall: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return;\n        if (xabber.get('audio'))\n            this.initCall(ev);\n    },\n\n    initCall: function () {\n        if (xabber.current_voip_call) {\n            utils.callback_popup_message(xabber.getString(\"jingle__error__call_in_progress\"), 1000);\n            return;\n        }\n        let chat = this.account.chats.getChat(this.model);\n        if (!chat.item_view.content)\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        chat.item_view.content.initJingleMessage();\n    },\n\n    deleteContact: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    muteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n            muted_seconds;\n        if (mute_type === 'minutes15')\n            muted_seconds = 900\n        if (mute_type === 'hours1')\n            muted_seconds = 3600\n        if (mute_type === 'hours2')\n            muted_seconds = 7200\n        if (mute_type === 'day')\n            muted_seconds = 86400\n        if (mute_type === 'forever')\n            muted_seconds = 0\n        this.chat.muteChat(muted_seconds);\n    },\n\n    unmuteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        this.chat.muteChat('');\n    },\n\n    showSearchMessages: function (ev) {\n        this.scrollToTop();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.model.set('search_hidden', false);\n        this.$('.search-wrap').hideIf(this.model.get('search_hidden'));\n        this.contact_searched_messages_view.$search_form.find('input').focus();\n    },\n\n    addContact: function () {\n        xabber.add_contact_view.show({account: this.account, jid: this.model.get('jid')});\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.$('.tabs').animate({scrollLeft: $target.position().left}, 400);\n        this.ps_container.animate(\n            {scrollTop: this.$('.bottom-block:not(.edit-bottom-block)').position().top + this.ps_container.scrollTop() - 120},\n            200,\n            () => {\n                this.onScroll();\n        });\n        this.$('.header-buttons .block-name.second-text').text($target.text())\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, encrypted: this.encrypted, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    requestAuthorization: function () {\n        this.model.pres('subscribe');\n        this.model.trigger('presence', this.model, 'subscribe_from');\n        this.openChat();\n    }\n});\n\nxabber.GroupChatDetailsViewRight = xabber.BasicView.extend({\n    className: 'details-panel-right groupchat-details-panel',\n    template: templates.group_chats.group_chat_details_right,\n    ps_selector: '.panel-content-wrap',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-mute.muted\": \"unmuteChat\",\n        \"click .btn-edit\": \"showEdit\",\n        \"click .btn-search\": \"showSearchMessages\",\n        \"click .btn-clear-history-chat\": \"clearHistory\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-leave\": \"leaveGroupChat\",\n        \"click .btn-invite\": \"inviteUser\",\n        \"click .btn-delete-group\": \"deleteGroup\",\n        \"click .btn-edit-settings\": \"editProperties\",\n        \"click .btn-default-restrictions\": \"showRestrictions\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .panel-background-clickable\": \"openChat\",\n        \"click .btn-escape:not(.btn-top)\": \"openChat\",\n        \"click .btn-escape.btn-top\": \"scrollToTopSmooth\",\n        \"click .btn-clear-history\": \"retractAllMessages\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .description-edit-wrap .btn-choose-image\": \"chooseAvatar\",\n        \"click .description-edit-wrap .btn-selfie\": \"makeSelfie\",\n        \"click .description-edit-wrap .btn-emoji-panel\": \"makeEmojiAvatar\",\n        \"click .tabs:not(.participant-tabs) .list-variant\": \"changeList\",\n        \"click .edit-pictured-buttons .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.chat = this.account.chats.getChat(this.model);\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.name_field.$('.contact-name-input').prop('disabled', true)\n        this.participants = this.addChild('participants', xabber.ParticipantsViewRight, {model: this.model, el: this.$('.participants-wrap')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.contact_edit_view = this.addChild('edit', xabber.GroupEditView,\n            {model: this.model, el: this.$('.edit-block-wrap')[0]});\n        this.group_chat_properties = this.addChild('properties_view', xabber.GroupChatPropertiesViewRight, {model:this.model, el: this.$('.group-chat-properties-wrap')[0]});\n        this.group_chat_status = this.addChild('status_view', xabber.GroupChatStatusViewRight, {model:this.model, el: this.$('.status-block-wrap')[0]});\n        this.contact_searched_messages_view = this.addChild('search', xabber.ContactSearchedMessagesView,\n            {model: this.account.chats.getChat(this.model), query_text: '1', el: this.$('.search-messages-block-wrap')[0]});\n        this.group_chat_properties_edit = new xabber.GroupChatPropertiesEditView({model: this.model});\n        this.default_restrictions_edit_right = this.addChild('restrictions',\n            xabber.DefaultRestrictionsRightView,\n            {model: this.model, el: this.$('.restrictions-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.ps_container.on(\"ps-scroll-y\", this.onScroll.bind(this));\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"change\", this.update, this);\n        this.chat.on(\"change:muted\", this.updateNotifications, this);\n        this.model.on(\"permissions_changed\", this.updateButtons, this);\n        this.model.on(\"change:subscription\", this.updateButtons, this);\n    },\n\n    render: function () {\n        this.updateName();\n        this.updateButtons();\n        if (!this.model.my_rights)\n            this.model.getMyInfo(() => {\n                this.updateButtons();\n            });\n        if (!this.model.get('saved_search_panel')) {\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        else {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.$('.btn-mute').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.btn-delete').showIf(this.model.get('subscription') === \"both\");\n        this.$('.btn-join').showIf(this.model.get('subscription') !== \"both\");\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.select-users-list-wrap .dropdown-button').dropdown(dropdown_settings);\n        this.$('.circle-avatar.dropdown-button').dropdown(dropdown_settings);\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n        this.onScroll();\n        this.updateChilds();\n        this.updateNotifications();\n        this.updateList('participants');\n        this.setButtonsWidth();\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        $(window).bind(\"keydown.contact_panel\", this.keydownHandler.bind(this));\n        return this;\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs.not-edit .indicator').remove();\n        this.$('.tabs.not-edit').tabs();\n        this.$('.tabs.not-edit .indicator').addClass('ground-color-500');\n    },\n\n    updateChilds: function () {\n        if (!this.model.get('vcard_hidden'))\n            this.group_chat_properties.hideVCard();\n        if (!this.model.get('edit_hidden'))\n            this.contact_edit_view.hideEdit();\n        if (!this.model.get('restrictions_hidden'))\n            this.default_restrictions_edit_right.hideRestrictions();\n        this.model.set('participant_hidden', true);\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'))\n    },\n\n    showEdit: function (ev) {\n        this.contact_edit_view.showEdit();\n    },\n\n    showRestrictions: function (ev) {\n        this.default_restrictions_edit_right.showRestrictions();\n    },\n\n    hideRestrictions: function (ev) {\n        this.model.set('restrictions_hidden', true);\n        this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'));\n        this.showEdit();\n    },\n\n\n    keydownHandler: function (ev) {\n        if (!xabber.body.$el.siblings('.mfp-ready').length && !$.magnificPopup.instance.isOpen && ev.keyCode === constants.KEY_ESCAPE && !xabber.body.$el.siblings('#modals').children('.open').length) {\n            this.model.showDetailsRight('all-chats');\n            $(window).unbind(\"keydown.contact_panel\");\n        }\n    },\n\n    updateNotifications: function () {\n        if (this.chat.isMuted()) {\n            if (this.chat.isMuted() > 4800000000)\n                this.$('.btn-mute').html(env.templates.svg['bell-off']());\n            else\n                this.$('.btn-mute').html(env.templates.svg['bell-sleep']());\n            this.$('.btn-mute').addClass('muted').addClass('active')\n        }\n        else {\n            this.$('.btn-mute').html(env.templates.svg['bell']());\n            this.$('.btn-mute').removeClass('muted')\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.chat.isMuted());\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        // if (_.has(changed, 'muted')) this.updateNotifications();\n        if (_.has(changed, 'status_updated') || _.has(changed, 'status_message')) this.updateStatus();\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    updateButtons: function () {\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values),\n            change_group = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'change-group' && permission.values),\n            is_blocked = this.model.get('blocked');\n        this.$('.btn-settings-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-edit-settings').switchClass('hidden', !(is_owner || change_group));\n        this.$('.btn-leave-wrap').switchClass('non-active', this.model.get('subscription') != 'both');\n        this.$('.btn-invite-wrap').switchClass('non-active', this.model.get('private_chat') || this.model.get('subscription') != 'both');\n        this.$('.btn-default-restrictions-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-block').hideIf(is_blocked);\n        this.$('.btn-unblock').showIf(is_blocked);\n    },\n\n    updateName: function () {\n        this.$('.main-info .contact-name').text(this.model.get('name'));\n    },\n\n    muteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n            muted_seconds;\n        if (mute_type === 'minutes15')\n            muted_seconds = 900\n        if (mute_type === 'hours1')\n            muted_seconds = 3600\n        if (mute_type === 'hours2')\n            muted_seconds = 7200\n        if (mute_type === 'day')\n            muted_seconds = 86400\n        if (mute_type === 'forever')\n            muted_seconds = 0\n        this.chat.muteChat(muted_seconds);\n    },\n\n    unmuteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        this.chat.muteChat('');\n    },\n\n    showSearchMessages: function (ev) {\n        this.scrollToTop();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.model.set('search_hidden', false);\n        this.$('.search-wrap').hideIf(this.model.get('search_hidden'));\n        this.contact_searched_messages_view.$search_form.find('input').focus();\n    },\n\n    onScroll: function () {\n        if (this.model.get('saved_search_panel') && !this.model.get('search_hidden')){\n            this.ps_container.perfectScrollbar('destroy');\n            return true;\n        }\n        let bottom_block_scroll;\n        if (this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)'))\n            bottom_block_scroll = this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').get(0).getBoundingClientRect().top;\n\n        if(this.ps_container[0].scrollTop >= 250) {\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.main-info').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n            this.$('.header-buttons .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        else{\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        if (!_.isUndefined(bottom_block_scroll) && bottom_block_scroll <= 160) {\n            this.$('.btn-escape').addClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.header-buttons .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').text(this.$('.tabs:not(.participant-tabs) .list-variant .active').text())\n        }\n        else {\n            this.$('.btn-escape').removeClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    clearHistory: function () {\n        if (this.chat && this.chat.item_view && this.chat.item_view.content && this.chat.item_view.content.head){\n            this.chat.item_view.content.head.clearHistory()\n        }\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    editProperties: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n                let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n                    .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n                this.account.sendIQFast(iq_get_properties, (properties) => {\n                    let data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                    this.group_chat_properties_edit.open(data_form);\n                }, () => {\n                    utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n                });\n        }\n    },\n\n    leaveGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"groupchat_leave_full\"), xabber.getString(\"groupchat_leave_confirm\", [contact.get('name')]), null, { ok_button_text: xabber.getString(\"groupchat_leave\")}).done((result) => {\n            if (result) {\n                contact.declineSubscription();\n                let chat = this.account.chats.getChat(contact);\n                contact.removeFromRoster();\n                chat.deleteFromSynchronization(() => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                }, () => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                });\n            }\n        });\n    },\n\n    inviteUser: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            if (!xabber.invite_panel)\n                xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n            xabber.invite_panel.open(this.account, this.model);\n        }\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.header-buttons .block-name').addClass('fade-out');\n        this.$('.btn-escape').removeClass('btn-top');\n        this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        if (list_name != 'blocked' && list_name != 'invitations') {\n            this.$('.tabs').animate({scrollLeft: $target.position().left - 80}, 400);\n            this.ps_container.animate(\n                {scrollTop: this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').position().top + this.ps_container.scrollTop() - 120},\n                400,\n                () => {\n                    this.onScroll();\n                });\n            this.$('.header-buttons .block-name.second-text').text($target.text())\n        }\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            if (name === 'invitations' || name === 'blocked'){\n                this.$('.edit-wrap .tabs .list-variant a').removeClass('active');\n                this.$('.edit-wrap .tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            }\n            else {\n                this.$('.tabs.not-edit .list-variant a').removeClass('active');\n                this.$('.tabs.not-edit .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            }\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func, edit_view;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n            case 'blocked':\n                constructor_func = xabber.BlockedView;\n                edit_view = true;\n                break;\n            case 'invitations':\n                constructor_func = xabber.InvitationsView;\n                edit_view = true;\n                break;\n        };\n        if (constructor_func && edit_view)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-edit-wrap')[0]});\n        else if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    getInvitations: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.model.get('full_jid') || this.model.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#invite'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    deleteGroup: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    openChat: function (ev) {\n        this.model.showDetailsRight('all-chats');\n    },\n\n    chooseAvatar: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let avatar_view = new xabber.SetAvatarView();\n            avatar_view.render({model: this.account, contact: this.model, parent: this});\n        } else\n            this.$('.circle-avatar input').click();\n    },\n\n    makeSelfie: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let webcam_panel_view = new xabber.WebcamProfileImageView();\n            webcam_panel_view.open({model: this.account, contact: this.model, parent: this});\n        } else\n            this.$('.circle-avatar input').click();\n    },\n\n    makeEmojiAvatar: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let emoji_panel_view = new xabber.EmojiProfileImageView();\n            emoji_panel_view.open({model: this.account, contact: this.model, parent: this});\n        } else\n            this.$('.circle-avatar input').click();\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length) {\n            return;\n        }\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        $(field).siblings('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.model.pubAvatar(file, \"\", function () {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                }, function (error) {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                    let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                    utils.dialogs.error(error_text);\n                });\n            }\n        });\n    },\n\n    retractAllMessages: function () {\n        let group_chat = this.account.chats.getChat(this.model);\n        utils.dialogs.ask(xabber.getString(\"delete_messages__header\"), xabber.getString(\"delete_messages__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                group_chat.retractAllMessages(true);\n            }\n        });\n    }\n});\n\nxabber.GroupChatStatusView = xabber.BasicView.extend({\n    template: templates.group_chats.group_status,\n    events: {\n        \"click .status-wrap\": \"setStatus\",\n        \"click .btn-edit-status\": \"setStatus\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.render();\n        this.model.on(\"change:status\", this.render, this);\n        this.model.on(\"change:group_info\", this.render, this);\n    },\n\n    render: function () {\n        let group_info = this.model.get('group_info');\n        if (!group_info)\n            return;\n        this.$('.status').attr('data-status', group_info.status || this.model.get('status'));\n        this.$('.status-message').text(group_info.status_msg);\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.model);\n    }\n});\n\nxabber.GroupChatStatusViewRight = xabber.BasicView.extend({\n    template: templates.group_chats.group_status_right,\n    events: {\n        \"click .group-chat-status-wrap\": \"setStatus\",\n        \"click .btn-edit-status\": \"setStatus\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.render();\n        this.model.on(\"change:status\", this.render, this);\n        this.model.on(\"change:group_info\", this.render, this);\n    },\n\n    render: function () {\n        let group_info = this.model.get('group_info');\n        if (!group_info)\n            return;\n        this.updateIcon()\n        this.$('.status').attr('data-status', group_info.status || this.model.get('status'));\n        this.$('.status-message').text(group_info.status_msg);\n    },\n\n    updateIcon: function () {\n        let ic_name = this.model.getIcon();\n        this.$('.status-bulb').addClass('hidden');\n        if (this.model.get('invitation'))\n            return;\n        ic_name && this.$('.status-bulb').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.model);\n    }\n});\n\nxabber.GroupChatPropertiesView = xabber.BasicView.extend({\n    template: templates.group_chats.group_chat_properties,\n\n    events: {\n        \"click .group-chat-properties .details-icon\": \"onClickIcon\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.contact = this.model;\n        this.account = this.model.account;\n        this.model.on(\"change:group_info\", this.update, this);\n        this.model.on(\"change:vcard_updated\", this.update, this);\n    },\n\n    render: function () {\n        if (!this.model.get('vcard_updated'))\n            this.model.vcard && this.model.vcard.refresh();\n        this.update();\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {};\n        this.$('.block-name').text(this.model.get('incognito_group') ? xabber.getString(\"incognito_group_settings__header\") : xabber.getString(\"public_group_settings__header\"));\n        this.$('.jabber-id .value').text(info.jid);\n        this.$('.name .value').text(info.name);\n        this.$('.description .value').text(info.description);\n        this.$('.model .value').text(utils.pretty_name(info.model));\n        this.$('.status .value').text(utils.pretty_name(info.status));\n        this.$('.searchable .value').text((info.searchable === 'none') ? xabber.getString(\"groupchat_index_type_none\") : utils.pretty_name(info.searchable));\n        this.$('.name-info-wrap').switchClass('hidden', !info.name);\n        this.$('.description-info-wrap').switchClass('hidden', !info.description);\n        this.$('.model-info-wrap').switchClass('hidden', !info.model);\n        this.$('.status-info-wrap').switchClass('hidden', !info.status);\n        this.$('.searchable-info-wrap').switchClass('hidden', !info.searchable);\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target).closest('.info-wrap'),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            if ($target_info.hasClass('searchable-info-wrap')) {\n                let label_name = $target_info.find('.label').first().text();\n                if (value_text === xabber.getString(\"groupchat_index_type_none\"))\n                    value_text += ' ' + label_name.toLowerCase();\n            }\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    }\n});\n\nxabber.GroupChatPropertiesViewRight = xabber.BasicView.extend({\n    template: templates.group_chats.group_chat_properties_right,\n\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .btn-back\": \"hideVCard\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.contact = this.model;\n        this.account = this.model.account;\n        this.model.on(\"change:group_info\", this.update, this);\n        this.model.on(\"change:vcard_updated\", this.update, this);\n        this.ps_container = this.$('.full-vcard-content');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.set('vcard_hidden', true)\n    },\n\n    render: function () {\n        if (!this.model.get('vcard_updated'))\n            this.model.vcard && this.model.vcard.refresh();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        if (this.parent.ps_container.length) {\n            if(!this.model.get('vcard_hidden'))\n                this.parent.ps_container.perfectScrollbar('destroy')\n            else\n                this.parent.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n        }\n        this.model.updateName();\n        this.model.updateAvatar();\n        this.hideMoreDescription();\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.update();\n        });\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.vcard-header-title').addClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n        }\n        else {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        }\n\n    },\n\n    hideMoreDescription: function (ev) {\n        if (!this.$('.vcard-wrap .info.description').hasClass('short')) {\n            this.$('.vcard-wrap .info.description').addClass('short');\n            this.$('.show-vcard').hideIf(false);\n        }\n    },\n\n\n    showVCard: function (ev) {\n        this.model.set('vcard_hidden', false);\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n        });\n        this.parent.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.vcard-header').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideVCard: function (ev) {\n        this.model.set('vcard_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.scrollToTop();\n        this.onScroll();\n        this.parent.onScroll();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {};\n        this.$('.block-name').text(this.model.get('incognito_group') ? xabber.getString(\"incognito_group_settings__header\") : xabber.getString(\"public_group_settings__header\"));\n        this.$('.jabber-id .value').text(info.jid);\n        this.$('.name .value').text(info.name);\n        this.$('.description .value').text(info.description);\n        this.$('.model .value').text(utils.pretty_name(info.model));\n        this.$('.status .value').text(utils.pretty_name(info.status));\n        this.$('.searchable .value').text((info.searchable === 'none') ? xabber.getString(\"groupchat_index_type_none\") : utils.pretty_name(info.searchable));\n        this.$('.name-info-wrap').switchClass('hidden', !info.name);\n        this.$('.description-info-wrap').switchClass('hidden', !info.description);\n        this.$('.model-info-wrap').switchClass('hidden', !info.model);\n        this.$('.status-info-wrap').switchClass('hidden', !info.status);\n        this.$('.searchable-info-wrap').switchClass('hidden', !info.searchable);\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    }\n});\n\nxabber.GroupChatPropertiesEditView = xabber.BasicView.extend({\n    className: 'modal dialog-modal group-chat-properties-edit',\n\n    events: {\n        \"click .btn-save\": \"saveChanges\",\n        \"click .btn-cancel\": \"close\",\n        \"change input\": \"updateSaveButton\",\n        \"keyup .property-wrap .text-field\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model;\n        this.model.on(\"change:name\", this.updateName, this);\n    },\n\n    open: function (data_form) {\n        this.data_form = data_form;\n        let all_fixed = this.data_form.fields.filter(f => f.type == 'fixed' || f.type == 'hidden').length == this.data_form.fields.length;\n        this.$el.html(templates.group_chats.group_chat_properties_edit({all_fixed: all_fixed, fields: data_form.fields, privacy: this.contact.get('incognito_group'), jid: this.model.get('jid')}));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('height', this.$el.height() - 115).perfectScrollbar({theme: 'item-list'});\n                this.updateScrollBar();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.$('.modal-content').css('height', '100%');\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.$el.detach();\n                this.$('.modal-content').css('height', '100%');\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateName: function () {\n        this.$('.name-info-wrap').find('.name').find('.value').text(this.model.get('name'));\n    },\n\n    saveChanges: function() {\n        if (this.$('.btn-save').hasClass('non-active'))\n            return;\n\n        let has_changes = false,\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null,\n                checked_inp = this.$('.' + field.var + '-field input:checked'),\n                text_inp = this.$('.' + field.var + '-field input[type=\"text\"]'),\n                textarea = this.$('.' + field.var + '-field textarea'),\n                new_value = \"\";\n            checked_inp.length && (new_value = checked_inp[0].id);\n            text_inp.length && (new_value = text_inp.val());\n            textarea.length && (new_value = textarea.val());\n            if (value !== new_value) {\n                let field_idx = this.data_form.fields.indexOf(field);\n                field.values = [new_value];\n                this.data_form.fields[field_idx] = field;\n                has_changes = true;\n            }\n        });\n\n        if (has_changes) {\n            iq = this.account.addDataFormToStanza(iq, this.data_form);\n            this.account.sendIQFast(iq, (result) => {\n                let $result  = $(result),\n                    group_info = _.clone(this.contact.get('group_info')),\n                    attrs = {\n                        name: $result.find('field[var=\"name\"] value').text(),\n                        searchable: $result.find('field[var=\"index\"]').children('value').text(),\n                        model: $result.find('field[var=\"membership\"]').children('value').text(),\n                        description: $result.find('field[var=\"description\"] value').text(),\n                        status: $result.find('field[var=\"status\"]').children('value').text()\n                };\n                this.$('button').addClass('non-active');\n                this.close();\n                _.extend(group_info, attrs);\n                this.model.set('group_info', group_info);\n            }, (error) => {\n                this.$('button').addClass('non-active');\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        } else\n            this.$('button').removeClass('non-active');\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null,\n                checked_inp = this.$('.' + field.var + '-field input:checked'),\n                text_inp = this.$('.' + field.var + '-field input[type=\"text\"]'),\n                textarea = this.$('.' + field.var + '-field textarea'),\n                new_value = \"\";\n            checked_inp.length && (new_value = checked_inp[0].id);\n            text_inp.length && (new_value = text_inp.val());\n            textarea.length && (new_value = textarea.val());\n            (value !== new_value) && (has_changes = true);\n        });\n        this.$('.btn-save').switchClass('non-active', !has_changes);\n    }\n\n});\n\nxabber.InvitationsView = xabber.BasicView.extend({\n    events: {\n    },\n    status: 'invitations',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.contact.participants.on(\"participants_updated\", this._render, this);\n        this.contact.on(\"invitations_send\", this._render, this);\n        this.account = this.contact.account;\n        this.$error = $('<p class=\"errors\"/>');\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-edit-wrap')\n        this.$el.html($(templates.preloader()));\n        this.updateInvitations();\n    },\n\n    updateInvitations: function () {\n        this.parent.$('.block-name-panel:not(.second-text)').html(xabber.getString(\"groupchat_invitations\"))\n        this.parent.getInvitations((response) => {\n            this.$el.html(\"\");\n            $(response).find('query').find('user').each((idx, item) => {\n                let user = {jid: $(item).attr('jid'), status: this.status},\n                    $item_view = $(templates.group_chats.invited_member_item(user)),\n                    avatar = Images.getDefaultAvatar(user.jid);\n                this.$el.append($item_view);\n                $item_view.find('.circle-avatar').setAvatar(avatar, this.member_avatar_size);\n            });\n            if (!$(response).find('query').find('user').length)\n                this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.showInviteButton();\n        }, (err) => {\n\n            this.$el.html(this.$error.text($(err).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\")));\n        });\n    },\n\n    revokeInvitation: function (ev) {\n        let $member_item = $(ev.target).closest('.invitations-user'),\n            member_jid = $member_item.data('jid'),\n            iq = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('revoke', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(member_jid);\n        this.account.sendIQFast(iq, () => {\n            $member_item.remove();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.updateRemoveParticipantButton();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n        });\n    },\n\n    revokeInvitationByElement: function ($member_item) {\n        let member_jid = $member_item.data('jid'),\n            iq = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('revoke', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(member_jid);\n        this.account.sendIQFast(iq, () => {\n            $member_item.remove();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n        });\n    }\n});\n\nxabber.MediaBaseView = xabber.BasicView.extend({\n    status: 'base',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.participant = options.participant;\n        this.encrypted = options.encrypted;\n        this.account = this.contact.account;\n        this.chat = this.account.chats.getChat(this.contact, this.encrypted && 'encrypted');\n        this.temporary_items = []\n        this.parent.ps_container.on(\"ps-scroll-up.mediagallery ps-scroll-down.mediagallery\", this.onScroll.bind(this));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        xabber.on(\"update_layout\", this.onUpdatedScreen, this);\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.all_messages_loaded = false;\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({}, () => {\n                this.$el.html(\"<div class='gallery-files'></div>\");\n                this.updateMedia();\n            });\n        }\n    },\n\n    onScroll: function () {\n        if (!this.active)\n            return\n        let scrollTop = this.parent.ps_container[0].scrollTop,\n            scrollHeight = this.parent.ps_container[0].scrollHeight,\n            offsetHeight = this.parent.ps_container[0].offsetHeight,\n            persentScrolled = scrollTop / (scrollHeight - offsetHeight);\n        if (persentScrolled > 0.8 && this.last_rsm_message && !this.all_messages_loaded && !this.loading_messages){\n            this.loadMoreFiles();\n        }\n    },\n\n    onUpdatedScreen: function () {\n        let block_height = xabber.body.$el.height() - 320;\n        this.$el.css('min-height', `${block_height}px`);\n    },\n\n    updateForParticipant: function () {\n        this.delegateEvents({})\n        this.parent.ps_container.off('ps-scroll-up.mediagallery').off('ps-scroll-down.mediagallery').on(\"ps-scroll-up.mediagallery ps-scroll-down.mediagallery\", this.onScroll.bind(this));\n        this.$('.gallery-file').on('click', (ev) => {\n            this.onClickFile(ev);\n        });\n    },\n\n    getMediaFromDecryptedMessages: function () {\n\n        let dfd = new $.Deferred();\n\n        dfd.done(() => {\n            if (this.filter_type === 'filter_image')\n                this.$el.html(\"<div class='gallery-files images grid'></div>\");\n            else if (this.filter_type === 'filter_video')\n                this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n            else if (this.filter_type === 'filter_voice')\n                this.$el.html(\"<div class='gallery-files voice'></div>\");\n            else if (this.filter_type === 'filter_files')\n                this.$el.html(\"<div class='gallery-files files'></div>\");\n            else\n                this.$el.html(\"<div class='gallery-files'></div>\");\n            this.updateMedia();\n        }).fail(() => {\n            this.temporary_items = [];\n            this.$el.html(\"<div class='gallery-files'></div>\");\n            this.updateMedia()\n        });\n\n        if (this.account.omemo && this.account.omemo.cached_messages){\n\n            let cached_messages = this.account.omemo.cached_messages.getMessages(this.contact);\n\n            for (let [key, value] of Object.entries(cached_messages)) {\n                let msg_items = this.contact.getFilesFromStanza($(value.envelope), {cached_message: true, cached_stanza_id: key});\n                if (msg_items.length)\n                    this.temporary_items = this.temporary_items.concat(msg_items);\n            }\n\n            if (this.temporary_items.length){\n\n                let filtered_items = [],\n                    items_count = 0;\n\n                this.temporary_items.forEach((item, idx) => {\n                    if (this.filter_type === 'filter_image' && constants.MIME_TYPES.image.includes(item.media_type) ||\n                        this.filter_type === 'filter_video' && constants.MIME_TYPES.video.includes(item.media_type) ||\n                        this.filter_type === 'filter_voice' && constants.MIME_TYPES.audio.includes(item.media_type) ||\n                        this.filter_type === 'filter_files' &&\n                        !(\n                            constants.MIME_TYPES.image.includes(item.media_type) ||\n                            constants.MIME_TYPES.video.includes(item.media_type) ||\n                            constants.MIME_TYPES.audio.includes(item.media_type)\n                        )){\n                        if (this.filter_type === 'filter_image' && item.sources && item.sources[0]){\n                            this.chat.messages.decryptFile(item.sources[0], item.key).then((result) => {\n                                item.sources[0] = result;\n                                item.thumbnail = null;\n                                filtered_items = filtered_items.concat([item]);\n                                items_count++;\n                                if (items_count === this.temporary_items.length){\n                                    this.temporary_items = filtered_items;\n                                    dfd.resolve();\n                                }\n                            });\n\n                        } else {\n                            filtered_items = filtered_items.concat([item]);\n                            items_count++;\n                        }\n                    } else\n                        items_count++;\n                    if (items_count === this.temporary_items.length){\n                        this.temporary_items = filtered_items;\n                        dfd.resolve();\n                    }\n                });\n            } else {\n                dfd.reject();\n            }\n        } else {\n            dfd.reject();\n        }\n\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.updateMedia(true);\n        });\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items;\n    },\n\n    encryptedFilesHandler: function () {\n        let files_count = 0;\n        this.temporary_items = this.filterEncryptedFiles();\n\n        if (this.temporary_items.length)\n            this.temporary_items.forEach((item, idx) => {\n                let source = item.sources[0];\n                if (!item.key){\n                    files_count++;\n                    return;\n                }\n                this.chat.messages.decryptFile(source, item.key).then((result) => {\n                    if (!this.active)\n                        return\n                    item.sources[0] = result\n                    files_count++;\n                    if (files_count === this.temporary_items.length) {\n                        this.updateEncryptedMedia()\n                        this.loading_messages = false;\n                    }\n                });\n            });\n        else {\n            this.updateEncryptedMedia()\n            this.loading_messages = false;\n            if (!this.all_messages_loaded){\n                this.loadMoreFiles();\n            }\n        }\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files').length && this.$el.html(\"<div class='gallery-files'></div>\");\n        this.updateMedia();\n    },\n\n    updateMedia: function (is_loaded) {\n        if (!this.active)\n            return;\n        if (this.temporary_items.length){\n            this.temporary_items.reverse();\n            this.temporary_items.forEach((item) => {\n                if (this.filter_type === 'filter_voice')\n                    item.true_voice = true;\n                let $gallery_file = $(templates.media_item({file: item, is_encrypted: this.encrypted, svg_icon: utils.file_type_icon_svg(item.media_type), filesize: utils.pretty_size(item.size), duration: utils.pretty_duration(item.duration)}));\n                $gallery_file.appendTo(this.$('.gallery-files'));\n            });\n        }\n        this.temporary_items = [];\n        this.$('.gallery-files .gallery-empty').remove();\n        $(templates.media_items_empty()).appendTo(this.$('.gallery-files'));\n        if (this.filter_type === 'filter_image')\n            this.$('.gallery-files .gallery-empty-text').html(`${xabber.getString(\"no_images\")}`);\n        else if (this.filter_type === 'filter_video')\n            this.$('.gallery-files .gallery-empty-text').html(`${xabber.getString(\"no_videos\")}`);\n        else if (this.filter_type === 'filter_voice')\n            this.$('.gallery-files .gallery-empty-text').html(`${xabber.getString(\"no_voice_messages\")}`);\n        this.$('.gallery-files .preloader-wrapper').remove();\n    },\n\n    messagesFileRequest: function (query, callback) {\n        if (!this.active || this.loading_messages)\n            return;\n        let options = query || {},\n            queryid = uuid();\n        this.loading_messages = true;\n        !options.max && (options.max = xabber.settings.mam_messages_limit);\n        !options.after && !options.before && (options.before = '');\n        this.encrypted && (options.encrypted = this.encrypted)\n        this.parent.participant && (options.var = [{var: 'with', value: this.parent.participant.id}]);\n        this.contact.MAMRequest(options, (success, messages, rsm) => {\n            let messages_count = 0;\n            if (this.encrypted) {\n                if (messages.length)\n                    $(templates.preloader()).appendTo(this.$('.gallery-files'));\n                else {\n                    this.loading_messages = false;\n                    callback && callback();\n                    return;\n                }\n            }\n            $(messages).each((idx, message) => {\n                let $message = $(message),\n                    msg_items = [];\n                if (this.encrypted) {\n                    let deferred = new $.Deferred();\n                    deferred.done(($msg) => {\n                        msg_items = this.contact.getFilesFromStanza($msg);\n                        if (msg_items.length)\n                            this.temporary_items = this.temporary_items.concat(msg_items)\n                        messages_count++;\n                        if (messages_count === messages.length){\n                            this.last_rsm_message = rsm.first;\n                            this.encryptedFilesHandler();\n                        }\n                    }).fail(() => {\n                        messages_count++;\n                        if (messages_count === messages.length){\n                            this.last_rsm_message = rsm.first;\n                            this.all_messages_loaded = true;\n                            this.encryptedFilesHandler();\n                        }\n                    });\n                    this.account.omemo.receiveChatMessage($message, {\n                        searched_message: true,\n                        gallery: true,\n                        query: query\n                    }, deferred);\n                } else{\n                    msg_items = this.contact.getFilesFromStanza($message);\n                    this.account.chats.receiveChatMessage($message, {\n                        searched_message: true,\n                        query: query\n                    });\n                    if (msg_items.length)\n                        this.temporary_items = this.temporary_items.concat(msg_items)\n                }\n            });\n            if (!this.encrypted){\n                this.last_rsm_message = rsm.first;\n                if (!messages.length)\n                    this.all_messages_loaded = true;\n                this.loading_messages = false;\n                (this.filter_type === 'filter_files') && (this.temporary_items = this.temporary_items.filter(file => !(file.media_type && (file.media_type.includes('image') || (file.media_type.includes('video') && !file.has_encrypted_files)))));\n                if (!(this.temporary_items.length >= xabber.settings.mam_messages_limit) && this.filter_type === 'filter_files' && !this.all_messages_loaded) {\n                    this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, callback);\n                }else\n                    callback && callback();\n            }\n        }, () => {\n\n        });\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n        else if ($elem.hasClass('mdi-play') || $elem.children('.mdi-play').length) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n        else if ($elem.hasClass('mdi-pause') || $elem.children('.mdi-pause').length) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n        else if (!$elem.parents('.gallery-file-audio-container').length || $elem.closest('.audio-control-time').length) {\n            let $file = $elem.closest('.gallery-file');\n            this.parent.saveScrollBarOffset()\n            xabber.body.data.set('contact_details_view', this.parent)\n            this.chat.getMessageContext($file.data('uniqueid'), {searched_messages: true, encrypted: this.encrypted});\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.gallery-file');\n        $elem.addClass('voice-message-rendering').html($(templates.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, unique_id);\n\n        aud.on('ready', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('no-uploaded');\n            $msg_element.find('.gallery-file-placeholder-background').removeClass('gallery-audio-file-not-uploaded');\n            let duration = Math.round(aud.getDuration());\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n            aud.play();\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').length && $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').addClass('mdi-pause').removeClass('mdi-play');\n            $msg_element.addClass('playing');\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n        });\n\n        aud.on('finish', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createAudio: function(file_url, unique_id) {\n        let audio = WaveSurfer.create({\n            container: \"#\" + unique_id,\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n});\n\nxabber.MediaImagesView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.images .gallery-file\": \"onClickFile\",\n    },\n    status: 'image',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_image';\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image')\n                this.$el.html(\"<div class='gallery-files images grid'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image');\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.images.grid').length && this.$el.html(\"<div class='gallery-files images grid'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image')\n            this.updateMedia(true);\n        });\n    },\n\n});\n\nxabber.MediaVideosView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.videos .gallery-file\": \"onClickFile\",\n    },\n    status: 'video',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_video';\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video')\n                this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video');\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.videos.grid').length && this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video')\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.MediaFilesView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.files .gallery-file\": \"onClickFile\",\n    },\n    status: 'files',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_files';\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'))\n                this.$el.html(\"<div class='gallery-files files'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'));\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.files').length && this.$el.html(\"<div class='gallery-files files'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'))\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.MediaVoiceView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.voice .gallery-file\": \"onClickFile\",\n    },\n    status: 'files',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_voice'\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => item.voice)\n                this.$el.html(\"<div class='gallery-files voice'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => item.voice);\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.voice').length && this.$el.html(\"<div class='gallery-files voice'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => item.voice)\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.BlockedView = xabber.BasicView.extend({\n    status: 'blocked',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.account = this.contact.account;\n        this.$error = $('<p class=\"errors\"/>');\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-edit-wrap')\n        this.$el.html($(templates.preloader()));\n        this.updateBlockedParticipants();\n    },\n\n    updateBlockedParticipants: function () {\n        this.parent.$('.block-name-panel:not(.second-text)').html(xabber.getString(\"group_settings__block_list__header\"))\n        this.contact.getBlockedParticipants((response) => {\n            this.$el.html(\"\");\n            $(response).find('query').children().each((idx, item) => {\n                let jid = $(item).attr('jid') ? $(item).attr('jid') : $(item).text(),\n                    user = {jid: jid, status: this.status},\n                    $item_view = $(templates.group_chats.invited_member_item(user)),\n                    avatar = Images.getDefaultAvatar(user.jid);\n                this.$el.append($item_view);\n                $item_view.find('.circle-avatar').setAvatar(avatar, this.member_avatar_size);\n            });\n            if (!$(response).find('query').children.length)\n                this.$el.append(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.showBlockButton();\n        }, (err) => {\n\n            this.$el.html(this.$error.text($(err).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\")));\n        });\n    },\n\n    unblockUser: function (ev) {\n        let $member_item = $(ev.target).closest('.blocked-user'),\n            member_jid = $member_item.data('jid'),\n            tag = member_jid.toString().includes('@') ? 'jid' : 'domain',\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('unblock', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c(tag).t(member_jid);\n        this.account.sendFast(iq, () => {\n            $member_item.remove();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.updateRemoveParticipantButton();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n        });\n    },\n\n    unblockUserByElement: function ($member_item) {\n        let member_jid = $member_item.data('jid'),\n            tag = member_jid.toString().includes('@') ? 'jid' : 'domain',\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('unblock', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c(tag).t(member_jid);\n        this.account.sendFast(iq, () => {\n            $member_item.remove();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n        });\n    },\n\n    blockId: function () {\n        utils.dialogs.ask_enter_value(xabber.getString(\"contact_bar_block\"), xabber.getString(\"groupchat_dialog_block__text\"), {input_placeholder_value: xabber.getString(\"groupchat_dialog_block__input_placeholder\")}, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done((result) => {\n            if (result) {\n                let tag = result.includes('@') ? 'jid' : 'domain',\n                    iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                        .c('block', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                        .c(tag).t(result);\n                this.account.sendIQFast(iq, () => {\n                    this.updateBlockedParticipants()\n                }, function (err) {\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n            }\n        });\n    },\n});\n\nxabber.ParticipantsView = xabber.BasicView.extend({\n    className: 'overflow-visible',\n    ps_selector: '.members-list-wrap',\n    ps_settings: {theme: 'item-list'},\n    template: templates.group_chats.participants,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .participant-wrap\": \"showParticipantProperties\",\n        \"keyup .participants-search-form\" : \"keyUpSearch\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .btn-block\": \"blockParticipant\",\n        \"click .btn-kick\": \"kickParticipant\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.participants = this.model.participants;\n        this.participants.on(\"participants_updated\", this.onParticipantsUpdated, this);\n        this.model.on(\"change:status_updated\", this.updateParticipantsList, this);\n        this.$(this.ps_selector).perfectScrollbar(this.ps_settings);\n    },\n\n    _render: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.participant_properties_panel = new xabber.ParticipantPropertiesView({model: this.model});\n        this.updateParticipants();\n        this.$('.members-list-wrap').perfectScrollbar({theme: 'item-list'});\n        return this;\n    },\n\n    updateParticipants: function () {\n        this.model.participants.participantsRequest({version: this.participants.version }, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            if (this.participants.version > version)\n                return;\n            version && this.account.groupchat_settings.setParticipantsListVersion(this.model.get('jid'), version);\n            (this.participants.version < version) && this.participants.updateVersion();\n            this.renderParticipants();\n        }, () => {\n            this.$el.removeClass('request-waiting');\n        });\n    },\n\n    updateParticipantsList: function () {\n        this.$el.find('.members-list-wrap tbody').html('');\n        this.updateParticipants();\n    },\n\n    onParticipantsUpdated: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.renderParticipants();\n    },\n\n    renderParticipants: function () {\n        this.participants.each((participant) => {\n            this.renderMemberItem(participant);\n        });\n        this.$el.removeClass('request-waiting');\n    },\n\n    blockParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.kick(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    renderMemberItem: function (participant) {\n        if (!participant || !participant.attributes || !participant.attributes.id){\n            participant && participant.destroy();\n            participant && participant.attributes && this.account.groupchat_settings.removeParticipantFromList(this.model.get('jid'), participant.attributes.id);\n            return;\n        }\n        let attrs = _.clone(participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_me = attrs.jid == this.account.get('jid');\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        let $item_view = $(templates.group_chats.group_member_item(attrs)),\n            view = this.$('tr[data-id=\"' + attrs.id + '\"]');\n        $item_view.emojify('.badge', {emoji_size: 16});\n        if (view.length) {\n            view.hasClass('active') && $item_view.addClass('active');\n            $item_view.insertBefore(view);\n            view.detach();\n        }\n        else {\n            if (attrs.is_me) {\n                $item_view.prependTo(this.$('.members-list-wrap tbody'));\n            }\n            else\n                $item_view.appendTo(this.$('.members-list-wrap tbody'));\n        }\n        this.updateMemberAvatar(attrs);\n    },\n\n    updateMemberAvatar: function (member) {\n        let image = Images.getDefaultAvatar(member.nickname || member.jid || member.id),\n            $avatar = (member.id) ? this.$('tr[data-id=\"'+ member.id +'\"] .circle-avatar') : this.$('.list-item[data-jid=\"'+ member.jid +'\"] .circle-avatar');\n        $avatar.setAvatar(image, this.member_avatar_size);\n        if (member.avatar) {\n            let cached_avatar = this.account.chat_settings.getB64Avatar(member.id);\n            if (this.account.chat_settings.getHashAvatar(member.id) == member.avatar && cached_avatar)\n                $avatar.setAvatar(cached_avatar, this.member_avatar_size);\n            else {\n                if (member.avatar_url){\n                    this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, member.avatar_url);\n                    this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(member.avatar_url, this.member_avatar_size);\n                    if (this.account.get('jid') === member.jid) {\n                        this.model.my_info.set({avatar: member.avatar, 'b64_avatar': member.avatar_url});\n                        this.model.trigger('update_my_info');\n                    }\n                }\n                else {\n                    let node = `${Strophe.NS.PUBSUB_AVATAR_DATA}#${member.id}`;\n                    this.model.getAvatar(member.avatar, node, (avatar) => {\n                        this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, avatar);\n                        this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(avatar, this.member_avatar_size);\n                        if (this.account.get('jid') === member.jid) {\n                            this.model.my_info.set('b64_avatar', avatar);\n                            this.model.trigger('update_my_info');\n                        }\n                    });\n                }\n            }\n        }\n    },\n\n    showParticipantProperties: function (ev) {\n        let $target = $(ev.target);\n        if ($target.closest('.buttons-wrap').length)\n            return;\n        let participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    keyUpSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact'))\n            this.clearSearch(ev);\n        else\n            this.searchParticipant();\n    },\n\n    searchParticipant: function () {\n        let query = this.$('.participants-search-form input').val().toLowerCase();\n        this.$('.members-list-wrap .participant-wrap').each((idx, item) => {\n            let $this = $(item),\n                participant_id = $this.data('id'),\n                participant = this.model.participants.find(participant => participant.get('id') === participant_id),\n                jid = participant.get('jid').toLowerCase(),\n                name = participant.get('nickname').toLowerCase();\n            $this.hideIf(name.indexOf(query) < 0 && jid.indexOf(query) < 0);\n        });\n        if (query)\n            this.$('.close-search-icon').show();\n        else\n            this.$('.close-search-icon').hide();\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.searchParticipant();\n    }\n});\n\nxabber.ParticipantsViewRight = xabber.BasicView.extend({\n    className: 'overflow-visible',\n    ps_settings: {theme: 'item-list'},\n    template: templates.group_chats.participants_right_panel,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .participant-wrap\": \"showParticipantProperties\",\n        \"keyup .participants-search-form\" : \"keyUpSearch\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .btn-kick\": \"kickParticipantDialog\",\n        \"click .btn-edit-member\": \"showParticipantPropertiesEdit\",\n        \"click .btn-mute\": \"kickParticipantDialog\",\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.participants = this.model.participants;\n        this.participants.on(\"change\", this.onParticipantsChanged, this);\n        this.participants.on(\"participants_updated\", this.onParticipantsUpdated, this);\n        this.model.on(\"change:status_updated\", this.updateParticipantsList, this);\n        this.participant_properties_panel = this.addChild('participant_properties_panel', xabber.ParticipantPropertiesViewRight, {model: this.model, el: this.parent.$('.participant-view-wrap')[0], parent: this.parent});\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        xabber.on(\"update_layout\", this.onUpdatedScreen, this);\n    },\n\n    _render: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.updateParticipants();\n        return this;\n    },\n\n    onUpdatedScreen: function () {\n        let block_height = xabber.body.$el.height() - 320;\n        this.$el.css('min-height', `${block_height}px`);\n    },\n\n    updateParticipants: function () {\n        this.model.participants.participantsRequest({version: this.participants.version }, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            if (this.participants.version > version)\n                return;\n            version && this.account.groupchat_settings.setParticipantsListVersion(this.model.get('jid'), version);\n            (this.participants.version < version) && this.participants.updateVersion();\n            this.renderParticipants();\n        }, () => {\n            this.$el.removeClass('request-waiting');\n        });\n    },\n\n    updateParticipantsList: function () {\n        this.updateParticipants();\n    },\n\n    onParticipantsUpdated: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.renderParticipants();\n    },\n\n    onParticipantsChanged: function () {\n        this.updateParticipants();\n    },\n\n    renderParticipants: function () {\n        this.participants.each((participant) => {\n            this.renderMemberItem(participant);\n        });\n        if (this.$('.participants-search-form input').val())\n            this.searchParticipant();\n        this.$el.removeClass('request-waiting');\n    },\n\n    blockParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.kick(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipantDialog: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask_extended(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]), null, { ok_button_text: xabber.getString(\"groupchat_kick\"), optional_button: 'block', optional_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                if (result === 'block'){\n                    let participant = this.participants.get($target.attr('data-id'));\n                    if (participant)\n                        participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                }\n                else{\n                    let participant = this.participants.get($target.attr('data-id'));\n                    participant.kick(() => {\n                        $target.remove();\n                        this.parent.updateScrollBar();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n                }\n            }\n        });\n    },\n\n    renderMemberItem: function (participant) {\n        if (!participant || !participant.attributes || !participant.attributes.id){\n            participant && participant.destroy();\n            participant && participant.attributes && this.account.groupchat_settings.removeParticipantFromList(this.model.get('jid'), participant.attributes.id);\n            return;\n        }\n        let attrs = _.clone(participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_me = attrs.jid == this.account.get('jid');\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        let $item_view = $(templates.group_chats.group_member_item_right(attrs)),\n            view = this.$('tr[data-id=\"' + attrs.id + '\"]');\n        if (view.length) {\n            view.hasClass('active') && $item_view.addClass('active');\n            $item_view.insertBefore(view);\n            view.detach();\n        }\n        else {\n            if (attrs.is_me) {\n                $item_view.prependTo(this.$('.members-list-wrap tbody'));\n            }\n            else\n                $item_view.appendTo(this.$('.members-list-wrap tbody'));\n        }\n        this.updateMemberAvatar(attrs);\n    },\n\n    updateMemberAvatar: function (member) {\n        let image = Images.getDefaultAvatar(member.nickname || member.jid || member.id),\n            $avatar = (member.id) ? this.$('tr[data-id=\"'+ member.id +'\"] .circle-avatar') : this.$('.list-item[data-jid=\"'+ member.jid +'\"] .circle-avatar');\n        $avatar.setAvatar(image, this.member_avatar_size);\n        if (member.avatar) {\n            let cached_avatar = this.account.chat_settings.getB64Avatar(member.id);\n            if (this.account.chat_settings.getHashAvatar(member.id) == member.avatar && cached_avatar)\n                $avatar.setAvatar(cached_avatar, this.member_avatar_size);\n            else {\n                if (member.avatar_url){\n                    this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, member.avatar_url);\n                    this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(member.avatar_url, this.member_avatar_size);\n                    if (this.account.get('jid') === member.jid) {\n                        this.model.my_info.set({avatar: member.avatar, 'b64_avatar': member.avatar_url});\n                        this.model.trigger('update_my_info');\n                    }\n                }\n                else {\n                    let node = `${Strophe.NS.PUBSUB_AVATAR_DATA}#${member.id}`;\n                    this.model.getAvatar(member.avatar, node, (avatar) => {\n                        this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, avatar);\n                        this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(avatar, this.member_avatar_size);\n                        if (this.account.get('jid') === member.jid) {\n                            this.model.my_info.set('b64_avatar', avatar);\n                            this.model.trigger('update_my_info');\n                        }\n                    });\n                }\n            }\n        }\n    },\n\n    showParticipantProperties: function (ev) {\n        let $target = $(ev.target);\n        if ($target.closest('.buttons-wrap').length)\n            return;\n        let participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    showParticipantPropertiesEdit: function (ev) {\n        let $target = $(ev.target),\n            participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n            this.participant_properties_panel.showNamePanel();\n            this.participant_properties_panel.changeBackButton();\n        });\n    },\n\n    keyUpSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact'))\n            this.clearSearch(ev);\n        else\n            this.searchParticipant();\n    },\n\n    searchParticipant: function () {\n        let query = this.$('.participants-search-form input').val().toLowerCase();\n        this.$('.members-list-wrap .participant-wrap').each((idx, item) => {\n            let $this = $(item),\n                participant_id = $this.data('id'),\n                participant = this.model.participants.find(participant => participant.get('id') === participant_id),\n                jid = participant.get('jid').toLowerCase(),\n                name = participant.get('nickname').toLowerCase();\n            $this.hideIf(name.indexOf(query) < 0 && jid.indexOf(query) < 0);\n        });\n        if (query)\n            this.$('.close-search-icon').show();\n        else\n            this.$('.close-search-icon').hide();\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.searchParticipant();\n    }\n});\n\nxabber.ParticipantPropertiesView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-rights',\n    template: templates.group_chats.participant_rights,\n    member_details_avatar_size: constants.AVATAR_SIZES.PARTICIPANT_DETAILS_ITEM,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .btn-cancel-changes\": \"close\",\n        \"change .clickable-field input\": \"changeRights\",\n        \"click .btn-save-user-rights\": \"saveRights\",\n        \"click .participant-details-item:not(.unsubscribed) .nickname\": \"editNickname\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-block-participant\": \"block\",\n        \"click .btn-kick-participant\": \"kick\",\n        \"click .btn-set-badge\": \"editBadge\",\n        \"click .btn-participant-messages\": \"getMessages\",\n        \"click .btn-chat\": \"getPrivateChat\",\n        \"click .property-variant\": \"changeTimerValue\",\n        \"keydown .rich-textarea\": \"checkKeydown\",\n        \"keyup .rich-textarea\": \"checkKeyup\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.model.account;\n    },\n\n    open: function (participant, data_form) {\n        if (!participant) return;\n        this.participant = participant;\n        this.participant.on(\"change:badge\", this.onBadgeUpdated, this);\n        this.data_form = data_form;\n        this.render();\n        this.$el.openModal({\n            ready: () => {\n                this.$el.css('height', \"\");\n                if (($(window).height() * 0.1 + this.$el.height()) > $(window).height())\n                    this.$el.css('height', $(window).height() * 0.9);\n                this.$('.modal-content').css('max-height', 'calc(100% - ' + (64 + this.$('.header').height()) + 'px)');\n                this.scrollToTop();\n                this.updateSaveButton();\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                };\n                this.$('.select-timer .dropdown-button').dropdown(dropdown_settings);\n                this.$('.participant-details-item .dropdown-button').dropdown(_.extend(dropdown_settings, {alignment: 'right'}));\n            },\n            complete: () => {\n                this.render();\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.render();\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    render: function () {\n        this.new_avatar = \"\";\n        let attrs = _.clone(this.participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.blocked = attrs.blocked;\n        attrs.subscription = attrs.subscription === null ? null : 'both';\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_myself = attrs.jid === this.account.get('jid');\n        attrs.is_blocked_contact = this.account.blocklist.isBlocked(attrs.jid);\n        attrs.incognito_chat = (this.contact.get('group_info') && this.contact.get('group_info').privacy === 'incognito') ? true : false;\n        let $member_info_view;\n        if (this.contact.get('private_chat')) {\n            this.$el.addClass('edit-rights-private');\n            $member_info_view = $(templates.group_chats.private_participant_details(attrs));\n        }\n        else\n            $member_info_view = $(templates.group_chats.participant_details_item(attrs));\n        this.$('.header').html($member_info_view);\n        this.$('.buttons-wrap .button-wrap:not(.btn-chat-wrap):not(.btn-participant-messages-wrap)').switchClass('non-active', attrs.subscription === null);\n        this.$('.btn-chat-wrap').switchClass('non-active', this.participant.get('jid') === this.account.get('jid'));\n        this.updateMemberAvatar(this.participant);\n        this.participant_messages = [];\n        this.actual_rights = [];\n        if (!this.contact.get('private_chat'))\n            this.setActualRights();\n        else {\n            this.$('.modal-content').addClass('hidden');\n            this.$('.modal-footer').switchClass('hidden', this.participant.get('jid') !== this.account.get('jid'));\n        }\n        this.updateScrollBar();\n        this.$('.participant-info #edit-nickname').on(\"focusout\", () => {\n            let new_nickname = this.$('#edit-nickname').getTextFromRichTextarea().trim();\n            if (new_nickname === \"\")\n                new_nickname = this.participant.get('nickname');\n            this.$('.participant-info #edit-nickname').hide();\n            this.$('.participant-info .nickname').show();\n            this.updateNickname(new_nickname);\n        });\n        this.$('.content').perfectScrollbar({theme: 'item-list'});\n    },\n\n    updateMemberAvatar: function (member) {\n        let participant_id = member.get('id'),\n            $avatar = this.$(`.participant-details-item[data-id=\"${participant_id}\"] .circle-avatar`);\n        member.image = Images.getDefaultAvatar(member.get('nickname') || member.get('jid') || participant_id);\n        $avatar.setAvatar(member.image, this.member_details_avatar_size);\n        this.$('.participant-details-item[data-id=\"'+ member.id +'\"]').emojify('.badge', {emoji_size: 18});\n        if (member.get('avatar')) {\n            if (this.account.chat_settings.getHashAvatar(participant_id) == member.get('avatar') && (this.account.chat_settings.getB64Avatar(participant_id)))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n            else {\n                if (member.get('avatar_url')){\n                    $avatar.setAvatar(member.get('avatar_url'), this.member_details_avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + participant_id;\n                    this.contact.getAvatar(member.get('avatar'), node, (avatar) => {\n                        this.$(`.circle-avatar`).setAvatar(avatar, this.member_details_avatar_size);\n                    });\n                }\n            }\n        }\n        else {\n            if (this.account.chat_settings.getHashAvatar(participant_id))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n        }\n    },\n\n    updateRightsView: function (ev) {\n        !$(ev.target).hasClass('non-active') && this.render(this.participant);\n    },\n\n    getMessages: function (options) {\n        let chat = this.account.chats.getChat(this.contact);\n        chat.messages_view = new xabber.ParticipantMessagesView({ model: chat, contact: this.contact, participant: this.participant.attributes });\n        chat.messages_view.messagesRequest(options, () => {\n            this.close();\n            xabber.body.setScreen('all-chats', {right: 'participant_messages', model: chat});\n        });\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.new_avatar = file;\n                this.$('.circle-avatar').addClass('changed').setAvatar(image, this.member_details_avatar_size);\n                this.updateSaveButton();\n            }\n        });\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        if ($property_item.attr('data-value') !== $property_value.attr('data-value')) {\n            $property_item.closest('.right-item').addClass('changed-timer changed');\n            this.updateSaveButton();\n        }\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') === '0') {\n            $property_value.addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked')) {\n            $input_item.click();\n        }\n    },\n\n    onBadgeUpdated: function (participant) {\n        let badge = _.escape(participant.get('badge'));\n        this.updateBadge(badge);\n    },\n\n    updateBadge: function (badge) {\n        this.$('.badge').html(badge).switchClass('hidden', !badge);\n        this.$('.participant-info').emojify('.badge');\n    },\n\n    updateButtons: function (has_changes) {\n        this.$('.btn-save-user-rights').switchClass('non-active', !has_changes);\n    },\n\n    updateSaveButton: function () {\n        let has_changes = this.$('.changed').length;\n        this.updateButtons(has_changes);\n    },\n\n    updateNickname: function (nickname) {\n        let $member_item = this.$('.participant-details-item[data-id=\"' + this.participant.get('id') + '\"]'),\n            $member_item_nickname = $member_item.find('.nickname');\n        $member_item_nickname.html(Strophe.xmlescape(nickname));\n        $member_item.emojify('.nickname');\n        if (nickname !== this.participant.get('nickname'))\n            $member_item_nickname.addClass('changed');\n        else\n            $member_item_nickname.removeClass('changed');\n        this.updateSaveButton();\n    },\n\n    editNickname: function () {\n        if (this.contact.get('private_chat') && this.account.get('jid') !== this.participant.get('jid'))\n            return;\n        this.$('.participant-info .nickname').hide();\n        this.$('.participant-info #edit-nickname').text(this.$('.participant-info .nickname').text()).show().placeCaretAtEnd();\n    },\n\n    editBadge: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        this.edit_badge_panel = new xabber.EditBadgeView({model: this});\n    },\n\n    checkKeydown: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            $(document.activeElement).blur();\n        }\n    },\n\n    checkKeyup: function (ev) {\n        let $richtextarea = $(ev.target),\n            new_value = $richtextarea.getTextFromRichTextarea().trim();\n        if (ev.target.id === 'edit-nickname') {\n            let has_changes = (new_value !== this.participant.get('nickname'));\n            this.updateButtons(has_changes);\n        }\n    },\n\n    retractUserMessages: function () {\n        utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__header\", [this.participant.get('nickname') || this.participant.get('jid') || this.participant.get('id')]), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (this.participant.get('id')) {\n                    let group_chat = this.account.chats.getChat(this.contact);\n                    group_chat.retractMessagesByUser(this.participant.get('id'));\n                }\n            }\n        });\n    },\n\n    block: function () {\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                this.participant.block(() => {this.close();},\n                    function (error) {\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kick: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                this.participant.kick(() => {\n                        this.close();\n                    }, (error) => {\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    setActualRights: function () {\n        this.$('.rights-wrap').html(\"\");\n        this.data_form.fields && this.data_form.fields.forEach((field) => {\n            field = _.clone(field);\n            if (field.type  === 'list-single' || field.type  === 'fixed' && (!field.values || field.values[0] == 0)) {\n                !field.values && (field.values = []);\n                let attrs = {\n                        pretty_name: field.label,\n                        name: field.var,\n                        expires: field.values ? field.values[0] : undefined\n                    },\n                    restriction_item = $(templates.group_chats.restriction_item({name: attrs.name, pretty_name: attrs.pretty_name, type: field.type})),\n                    restriction_expire;\n                if (field.options) {\n                    restriction_expire = $(templates.group_chats.right_expire_variants({\n                        right_name: ('default-' + attrs.name),\n                        expire_options: field.options\n                    }));\n                    restriction_item.append(restriction_expire);\n                }\n                this.$('.rights-wrap').append(restriction_item);\n                if (attrs.expires) {\n                    this.actual_rights.push({name: attrs.name, expires: attrs.expires});\n                    this.$('.right-item #' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                    if (attrs.expires != 0) {\n                        let $current_restriction = this.$('.right-item.restriction-' + attrs.name);\n                        $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                            .removeClass('default-value')\n                            .text(moment(Number(attrs.expires)*1000).fromNow());\n                    }\n                }\n            } else if (field.type  === 'fixed')\n                field.values && this.$('.rights-wrap').append($('<div class=\"rights-header\"/>').text(field.values[0]));\n        });\n    },\n\n    getPrivateChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let participant_jid = this.participant.get('jid'),\n            participant_in_roster = this.account.contacts.get(participant_jid);\n        if (!participant_jid || this.contact.get('incognito_chat')) {\n            let iq = $iq({to: this.contact.domain, type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#create`})\n                .c('peer-to-peer', { jid: this.contact.get('jid'),  id: this.participant.get('id')});\n            this.account.sendIQFast(iq, (iq_response) => {\n                let group_jid = $(iq_response).find('query localpart').text() + '@' + this.contact.domain,\n                    contact = this.account.contacts.mergeContact(group_jid);\n                contact.set('group_chat', true);\n                contact.set('subscription_preapproved', true);\n                contact.pres('subscribed');\n                contact.set('known', true);\n                contact.set('removed', false);\n                setTimeout(() => {\n                    contact.pres('subscribe');\n                }, 500);\n                this.close();\n                this.account.chats.openChat(contact);\n                let chat = this.account.chats.getChat(contact);\n                chat.messages.createSystemMessage({\n                    from_jid: group_jid,\n                    message: xabber.getString(\"groupchat__private_chat__text_message_init\", [this.participant.get('nickname'), this.contact.get('jid')])\n                });\n            }, (error) => {\n                let $error = $(error),\n                    private_chat_jid = $error.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"] jid`).text();\n                if (private_chat_jid) {\n                    let contact = this.account.contacts.mergeContact(private_chat_jid),\n                        chat = this.account.chats.getChat(contact);\n                    this.close();\n                    chat && chat.trigger('open');\n                    return;\n                }\n                let err_text = $(error).find('text[lang=\"en\"]').text() || $(error).find('text').first().text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        }\n        else {\n            if (participant_in_roster)\n                if (participant_in_roster.get('in_roster')) {\n                    this.close();\n                    participant_in_roster.trigger('open_chat', participant_in_roster);\n                    return;\n                }\n            this.close();\n            xabber.add_contact_view.show({\n                account: this.account,\n                jid: participant_jid\n            });\n        }\n    },\n\n    changeRights: function (ev) {\n        let $target = $(ev.target),\n            $right_item = $target.closest('.right-item'),\n            right_name = $target.prop('id');\n        if ($target.prop('checked')) {\n            if (!this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.addClass('changed');\n                else\n                    $right_item.removeClass('changed');\n        }\n        else {\n            if (this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else {\n                $right_item.removeClass('changed');\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.find('.timer-item-wrap .property-value').addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\")).attr('data-value', \"\");\n            }\n        }\n        this.updateSaveButton();\n    },\n\n    saveRights: function (ev) {\n        if ($(ev.target).hasClass('non-active'))\n            return;\n        let $btn = $(ev.target),\n            jid = this.account.get('jid'),\n            member_id = this.participant.get('id'),\n            $participant_avatar = this.$('.participant-details-item .circle-avatar'),\n            nickname_value = this.$('.participant-info .nickname').text(),\n            changed_avatar = this.new_avatar,\n            rights_changed = false,\n            has_changes = false,\n            iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + \"#members\"})\n                .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: member_id});\n        this.$('.buttons-wrap .btn-save-user-rights').addClass('non-active');\n        changed_avatar && $participant_avatar.find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        if (nickname_value != this.participant.get('nickname')) {\n            has_changes = true;\n            iq_changes.c('nickname').t(nickname_value).up();\n        }\n        this.$('.right-item').each((idx, right_item) => {\n            if ($(right_item).hasClass('changed')) {\n                let $right_item = $(right_item),\n                    right_name = $right_item.find('.field input')[0].id;\n                if ($right_item.find('.field input:checked').val()) {\n                    let right_expire = $right_item.find('.select-timer .timer-item-wrap .property-value').attr('data-value'),\n                        field = this.data_form.fields.find(f => f.var === right_name),\n                        field_idx = this.data_form.fields.indexOf(field);\n                    field.values = [right_expire];\n                    this.data_form.fields[field_idx] = field;\n                    rights_changed = true;\n                }\n                else {\n                    let field = this.data_form.fields.find(f => f.var === right_name);\n                    if (field.values.length) {\n                        let field_idx = this.data_form.fields.indexOf(field);\n                        field.values = [];\n                        this.data_form.fields[field_idx] = field;\n                        rights_changed = true;\n                    }\n                }\n            }\n        });\n        if (changed_avatar)\n            this.contact.pubAvatar(changed_avatar, ('#' + member_id), () => {\n                this.$('.buttons-wrap button').removeClass('non-active');\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.$(`.participant-details-item[data-id=\"${member_id}\"] .circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.close();\n            }, function (error) {\n                this.$('.buttons-wrap button').removeClass('non-active');\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                !has_changes && utils.dialogs.error(error_text);\n            });\n        if (has_changes)\n            this.account.sendIQFast(iq_changes,\n                () => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.participant.set('nickname', nickname_value);\n                    this.close();\n                },\n                (error) => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.close();\n\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        if (rights_changed) {\n            let iq_rights_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#rights'});\n            iq_rights_changes = this.account.addDataFormToStanza(iq_rights_changes, this.data_form);\n            this.account.sendIQFast(iq_rights_changes, () => {\n                    this.close();\n                },\n                (error) => {\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        }\n        $btn.blur();\n    }\n});\n\nxabber.ParticipantPropertiesViewRight = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-rights',\n    template: templates.group_chats.participant_details_right,\n    member_details_avatar_size: constants.AVATAR_SIZES.PARTICIPANT_DETAILS_ITEM,\n\n    events: {\n        \"click .btn-back:not(.btn-top)\": \"close\",\n        \"click .btn-back.btn-top\": \"scrollToTopSmooth\",\n        'click .btn-edit-participant': 'showNamePanel',\n        'click .btn-back-name': 'hidePanel',\n        \"change .clickable-field input\": \"changeRights\",\n        \"click .btn-reset\": \"render\",\n        \"click .btn-reset-name\": \"resetPanel\",\n        \"click .btn-save-user-rights\": \"saveRights\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-kick-participant\": \"kickParticipantDialog\",\n        \"click .btn-set-visibility-wrap\": \"setVisibility\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .btn-set-badge\": \"editBadge\",\n        \"click .btn-participant-messages\": \"getMessages\",\n        \"click .btn-chat-participant\": \"getPrivateChat\",\n        \"click .property-variant\": \"changeTimerValue\",\n        \"click .set-groupchat-avatar-text\": \"clickAvatarInput\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-selfie\": \"makeSelfie\",\n        \"click .btn-emoji-panel\": \"makeEmojiAvatar\",\n        \"keydown .rich-textarea\": \"checkKeydown\",\n        \"keyup .rich-textarea\": \"checkKeyup\",\n        \"click .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.model.account;\n    },\n\n    open: function (participant, data_form) {\n        this.model.set('participant_hidden', false);\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'))\n        if (!participant) return;\n        this.participant = participant;\n        this.participant.on(\"change:badge\", this.onBadgeUpdated, this);\n        this.participant.on(\"change:avatar_url\", this.updateMemberAvatar, this);\n        this.data_form = data_form;\n        this.render();\n        this.updateSaveButton();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.select-timer .dropdown-button').dropdown(dropdown_settings);\n        this.$('.circle-avatar.dropdown-button').dropdown(dropdown_settings);\n        this.$('.participant-details-item .dropdown-button').dropdown(_.extend(dropdown_settings, {alignment: 'right'}));\n    },\n\n    close: function () {\n        this.model.set('participant_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n            this.parent.onScroll();\n        };\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'));\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.new_avatar = \"\";\n        let attrs = _.clone(this.participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.blocked = attrs.blocked;\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        attrs.subscription = attrs.subscription === null ? null : 'both';\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_myself = attrs.jid === this.account.get('jid');\n        attrs.is_blocked_contact = this.account.blocklist.isBlocked(attrs.jid);\n        attrs.incognito_chat = (this.contact.get('group_info') && this.contact.get('group_info').privacy === 'incognito') ? true : false;\n        let $member_info_view;\n        if (this.contact.get('private_chat')) {\n            this.$el.addClass('edit-rights-private');\n            $member_info_view = $(templates.group_chats.private_participant_details_item_right(attrs));\n        }\n        else\n            $member_info_view = $(templates.group_chats.participant_details_item_right(attrs));\n        this.$('.participant-details-info-wrap').html($member_info_view);\n        this.$('.buttons-wrap .button-wrap:not(.btn-chat-wrap):not(.btn-participant-messages-wrap)').switchClass('non-active', attrs.subscription === null);\n        this.$('.btn-chat-wrap').switchClass('non-active', this.participant.get('jid') === this.account.get('jid'));\n        this.updateMemberAvatar(this.participant);\n        this.participant_messages = [];\n        this.actual_rights = [];\n        if (!this.contact.get('private_chat'))\n            this.setActualRights();\n        else {\n            this.$('.modal-content').addClass('hidden');\n            this.$('.modal-footer').switchClass('hidden', this.participant.get('jid') !== this.account.get('jid'));\n        }\n        this.updateScrollBar();\n        this.$('.participant-info #edit-nickname').on(\"focusout\", () => {\n            let new_nickname = this.$('#edit-nickname').getTextFromRichTextarea().trim();\n            if (new_nickname === \"\")\n                new_nickname = this.participant.get('nickname');\n            this.$('.participant-info #edit-nickname').hide();\n            this.$('.participant-info .nickname').show();\n            this.updateNickname(new_nickname);\n        });\n        this.ps_container = this.$('.participant-details-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-y\", this.onScroll.bind(this));\n        this.onScroll();\n        this.participant_name_field = new xabber.ParticipantNameRightWidget({\n            el: this.$('.edit-participant-name-wrap')[0],\n            model: this.participant,\n            parent: this,\n        });\n        this.participant_badge_field = new xabber.ParticipantBadgeRightWidget({\n            el: this.$('.edit-participant-badge-wrap')[0],\n            model: this.participant,\n            parent: this,\n        });\n        this.updateList('image');\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        this.updateIndicator()\n        this.$('.participant-details-edit-wrap').hideIf(true);\n        this.$('.block-name:not(.second-text)').hideIf(true);\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n    showNamePanel: function () {\n        this.$('.participant-details-edit-wrap').hideIf(false)\n        this.$('.btn-edit-participant').hideIf(true)\n        this.$('.parent-btn').hideIf(true)\n        this.$('.child-btn').hideIf(false)\n        this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.block-name.second-text').text('');\n        this.$('.block-name:not(.second-text)').text(xabber.getString(\"groupchat_member_edit\"));\n        this.$('.block-name:not(.second-text)').hideIf(false);\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.ps_container = this.$('.participant-details-edit-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    changeBackButton: function () {\n        this.$('.parent-btn').hideIf(false)\n        this.$('.child-btn').hideIf(true)\n    },\n\n    hidePanel: function () {\n        this.$('.participant-details-edit-wrap').hideIf(true)\n        this.$('.btn-edit-participant').hideIf(false)\n        this.$('.parent-btn').hideIf(false)\n        this.$('.child-btn').hideIf(true)\n        this.$('.block-name:not(.second-text)').hideIf(true);\n        this.ps_container = this.$('.participant-details-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.onScroll();\n    },\n\n    resetPanel: function () {\n        this.participant_name_field.updateValue(true);\n        this.participant_badge_field.updateValue(true);\n        this.new_avatar = \"\";\n        this.updateMemberAvatar(this.participant);\n        this.updateSaveButton()\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.$('.tabs').animate({scrollLeft: $target.position().left}, 400);\n        this.ps_container.animate(\n            {scrollTop: this.$('.bottom-block').position().top + this.ps_container.scrollTop() - 120},\n            400,\n            () => {\n                this.onScroll();\n            });\n        this.$('.block-header .block-name.second-text').text($target.text())\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, participant: true, el: this.$('.participants-details-media-wrap')[0]});\n        else\n            return;\n    },\n\n    changeName: function (value) {\n        this.updateSaveButton()\n    },\n\n    changeBadge: function (value) {\n        this.updateSaveButton()\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.block-name.second-text').text('');\n        this.$('.block-name.second-text').addClass('fade-out');\n        this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        this.$('.btn-back').removeClass('btn-top');\n        this.$('.btn-back i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 220) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.block-name.second-text').text(this.participant.get('nickname'));\n            this.$('.block-name.second-text').removeClass('fade-out');\n            this.$('.block-name:not(.second-text)').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 1) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        else {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.block-name.second-text').text('');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        let bottom_block_scroll\n        if (this.$('.bottom-block'))\n            bottom_block_scroll = this.$('.bottom-block').get(0).getBoundingClientRect().top;\n        if (!_.isUndefined(bottom_block_scroll) && bottom_block_scroll <= 170) {\n            this.$('.btn-back').addClass('btn-top');\n            this.$('.participant-details-item .buttons-wrap').addClass('hidden2');\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.btn-edit-participant').hideIf(true);\n            this.$('.block-header .block-name.second-text').text(this.$('.tabs .list-variant .active').text())\n        }\n        else {\n            this.$('.btn-back').removeClass('btn-top');\n            this.$('.participant-details-item .buttons-wrap').removeClass('hidden2');\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n            this.$('.participant-details-edit-wrap').hasClass('hidden') && this.$('.btn-edit-participant').hideIf(false);\n        }\n    },\n\n    clickAvatarInput: function (ev) {\n        this.$('.circle-avatar input').click();\n    },\n\n    updateMemberAvatar: function (member, url_forced) {\n        let participant_id = member.get('id'),\n            $avatar = this.$(`.circle-avatar`);\n        member.image = Images.getDefaultAvatar(member.get('nickname') || member.get('jid') || participant_id);\n        $avatar.setAvatar(member.image, this.member_details_avatar_size);\n        $avatar.removeClass('changed');\n        if (member.get('avatar')) {\n            if (this.account.chat_settings.getHashAvatar(participant_id) == member.get('avatar') && (this.account.chat_settings.getB64Avatar(participant_id)) && !url_forced)\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n            else {\n                if (member.get('avatar_url')){\n                    $avatar.setAvatar(member.get('avatar_url'), this.member_details_avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + participant_id;\n                    this.contact.getAvatar(member.get('avatar'), node, (avatar) => {\n                        this.$(`.circle-avatar`).setAvatar(avatar, this.member_details_avatar_size);\n                    });\n                }\n            }\n        }\n        else {\n            if (this.account.chat_settings.getHashAvatar(participant_id))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n        }\n    },\n\n    updateRightsView: function (ev) {\n        !$(ev.target).hasClass('non-active') && this.render(this.participant);\n    },\n\n    getMessages: function (options) {\n        let chat = this.account.chats.getChat(this.contact);\n        chat.messages_view = new xabber.ParticipantMessagesView({ model: chat, contact: this.contact, participant: this.participant.attributes });\n        chat.messages_view.messagesRequest(options, () => {\n            xabber.body.setScreen('all-chats', {right: 'participant_messages', model: chat});\n            this.open(this.participant, this.data_form);\n        });\n    },\n\n    chooseAvatar: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let avatar_view = new xabber.SetAvatarView();\n            avatar_view.render({model: this.account, contact: this.contact, participant: this.participant, parent: this});\n        } else\n            this.clickAvatarInput();\n    },\n\n    makeSelfie: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let webcam_panel_view = new xabber.WebcamProfileImageView();\n            webcam_panel_view.open({model: this.account, contact: this.contact, participant: this.participant, parent: this});\n        } else\n            this.clickAvatarInput();\n    },\n\n    makeEmojiAvatar: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let emoji_panel_view = new xabber.EmojiProfileImageView();\n            emoji_panel_view.open({model: this.account, contact: this.contact, participant: this.participant, parent: this});\n        } else\n            this.clickAvatarInput();\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.new_avatar = file;\n                this.$('.participant-details-edit-wrap .circle-avatar').addClass('changed');\n                this.$('.circle-avatar').setAvatar(image, this.member_details_avatar_size);\n                this.updateSaveButton();\n            }\n        });\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        if ($property_item.attr('data-value') !== $property_value.attr('data-value')) {\n            $property_item.closest('.right-item').addClass('changed-timer changed');\n            this.updateSaveButton();\n        }\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') === '0') {\n            $property_value.addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked')) {\n            $input_item.click();\n        }\n    },\n\n    onBadgeUpdated: function (participant) {\n        let badge = _.escape(participant.get('badge'));\n        this.updateBadge(badge);\n    },\n\n    updateBadge: function (badge) {\n        this.$('.badge').html(badge).switchClass('hidden', !badge);\n        this.$('.participant-info').emojify('.badge');\n        this.$('.participant-info').emojify('.participant-edit-badge');\n    },\n\n    updateButtons: function (has_changes) {\n        this.$('.btn-save-user-rights').switchClass('non-active', !has_changes);\n        this.$('.btn-save-user-rights').switchClass('fade-out', !has_changes);\n        this.$('.btn-edit-participant').switchClass('fade-out', has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.block-header .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.block-header .details-icon.parent-btn').removeClass('btn-back').addClass('btn-reset')\n            this.$('.block-header .details-icon.child-btn').removeClass('btn-back-name').addClass('btn-reset-name')\n            this.$('.block-header .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.block-header .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.block-header .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.block-header .details-icon.parent-btn').addClass('btn-back').removeClass('btn-reset')\n            this.$('.block-header .details-icon.child-btn').addClass('btn-back-name').removeClass('btn-reset-name')\n            this.$('.block-header .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.block-header .block-name.second-text').addClass('fade-out');\n        }\n    },\n\n    updateSaveButton: function () {\n        let has_changes = this.$('.changed').length;\n        this.updateButtons(has_changes);\n    },\n\n    updateNickname: function (nickname) {\n        let $member_item = this.$('.participant-details-item[data-id=\"' + this.participant.get('id') + '\"]'),\n            $member_item_nickname = $member_item.find('.nickname');\n        $member_item_nickname.html(Strophe.xmlescape(nickname));\n        $member_item.emojify('.nickname');\n        if (nickname !== this.participant.get('nickname'))\n            $member_item_nickname.addClass('changed');\n        else\n            $member_item_nickname.removeClass('changed');\n        this.updateSaveButton();\n    },\n\n    editNickname: function () {\n        if (this.contact.get('private_chat') && this.account.get('jid') !== this.participant.get('jid'))\n            return;\n        this.$('.participant-info .nickname').hide();\n        this.$('.participant-info #edit-nickname').text(this.$('.participant-info .nickname').text()).show().placeCaretAtEnd();\n    },\n\n    editBadge: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        this.edit_badge_panel = new xabber.EditBadgeView({model: this});\n    },\n\n    checkKeydown: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            $(document.activeElement).blur();\n        }\n    },\n\n    checkKeyup: function (ev) {\n        let $richtextarea = $(ev.target),\n            new_value = $richtextarea.getTextFromRichTextarea().trim();\n        if (ev.target.id === 'edit-nickname') {\n            let has_changes = (new_value !== this.participant.get('nickname'));\n            this.updateButtons(has_changes);\n        }\n    },\n\n    retractUserMessages: function () {\n        utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__header\", [this.participant.get('nickname') || this.participant.get('jid') || this.participant.get('id')]), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (this.participant.get('id')) {\n                    let group_chat = this.account.chats.getChat(this.contact);\n                    group_chat.retractMessagesByUser(this.participant.get('id'));\n                }\n            }\n        });\n    },\n\n    block: function () {\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                this.participant.block(() => {this.close();},\n                    function (error) {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kick: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                this.participant.kick(() => {\n                        this.close();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kickParticipantDialog: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask_extended(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]), null, { ok_button_text: xabber.getString(\"groupchat_kick\"), optional_button: 'block', optional_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                if (result === 'block'){\n                    this.participant.block(() => {\n                            this.close();\n                            this.parent.participants._render();\n                        },\n                        (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                }\n                else{\n                    this.participant.kick(() => {\n                        this.close();\n                        this.parent.participants._render();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n                }\n            }\n        });\n    },\n\n    setVisibility: function (ev) {\n            utils.dialogs.error('Feature not yet implemented')\n    },\n\n    setActualRights: function () {\n        this.$('.rights-wrap').html(\"\");\n        this.data_form.fields && this.data_form.fields.forEach((field) => {\n            field = _.clone(field);\n            if (field.type  === 'list-single' || field.type  === 'fixed' && (!field.values || field.values[0] == 0 || field.values && field.label)) {\n                !field.values && (field.values = []);\n                let attrs = {\n                        pretty_name: field.label,\n                        name: field.var,\n                        expires: field.values ? field.values[0] : undefined\n                    },\n                    restriction_item = $(templates.group_chats.restriction_item({name: attrs.name, pretty_name: attrs.pretty_name, type: field.type})),\n                    restriction_expire;\n                if (field.options) {\n                    restriction_expire = $(templates.group_chats.right_expire_variants({\n                        right_name: ('default-' + attrs.name),\n                        expire_options: field.options\n                    }));\n                    restriction_item.append(restriction_expire);\n                }\n                this.$('.rights-wrap').append(restriction_item);\n                if (attrs.expires) {\n                    this.actual_rights.push({name: attrs.name, expires: attrs.expires});\n                    this.$('.right-item #' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                    if (attrs.expires != 0) {\n                        let $current_restriction = this.$('.right-item.restriction-' + attrs.name);\n                        if ($current_restriction.find('.select-timer .property-value').length)\n                            $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                                .removeClass('default-value')\n                                .text(moment(Number(attrs.expires)*1000).fromNow());\n                        else{\n                            $current_restriction.append($('<div class=\"select-timer\"/>'));\n                            $current_restriction.find('.select-timer').attr('data-value', attrs.expires)\n                                .text(moment(Number(attrs.expires)*1000).fromNow())\n                        }\n                    }\n                }\n            } else if (field.type  === 'fixed')\n                field.values && this.$('.rights-wrap').append($('<div class=\"rights-header\"/>').text(field.values[0]));\n        });\n    },\n\n    getPrivateChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let participant_jid = this.participant.get('jid'),\n            participant_in_roster = this.account.contacts.get(participant_jid);\n        if (!participant_jid || this.contact.get('incognito_chat')) {\n            let iq = $iq({to: this.contact.domain, type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#create`})\n                .c('peer-to-peer', { jid: this.contact.get('jid'),  id: this.participant.get('id')});\n            this.account.sendIQFast(iq, (iq_response) => {\n                let group_jid = $(iq_response).find('query localpart').text() + '@' + this.contact.domain,\n                    contact = this.account.contacts.mergeContact(group_jid);\n                contact.set('group_chat', true);\n                contact.set('subscription_preapproved', true);\n                contact.pres('subscribed');\n                contact.set('known', true);\n                contact.set('removed', false);\n                setTimeout(() => {\n                    contact.pres('subscribe');\n                }, 500);\n                this.close();\n                contact.set('in_roster', true);\n                contact.trigger(\"open_chat\", contact);\n                contact.trigger('remove_invite', contact);\n                let chat = this.account.chats.getChat(contact);\n                chat.messages.createSystemMessage({\n                    from_jid: group_jid,\n                    message: xabber.getString(\"groupchat__private_chat__text_message_init\", [this.participant.get('nickname'), this.contact.get('jid')])\n                });\n            }, (error) => {\n                let $error = $(error),\n                    private_chat_jid = $error.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"] jid`).text();\n                if (private_chat_jid) {\n                    let contact = this.account.contacts.mergeContact(private_chat_jid),\n                        chat = this.account.chats.getChat(contact);\n                    this.close();\n                    chat && chat.trigger('open');\n                    return;\n                }\n                let err_text = $(error).find('text[lang=\"en\"]').text() || $(error).find('text').first().text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        }\n        else {\n            if (participant_in_roster)\n                if (participant_in_roster.get('in_roster')) {\n                    this.close();\n                    participant_in_roster.trigger('open_chat', participant_in_roster);\n                    return;\n                }\n            this.close();\n            xabber.add_contact_view.show({\n                account: this.account,\n                jid: participant_jid\n            });\n        }\n    },\n\n    changeRights: function (ev) {\n        let $target = $(ev.target),\n            $right_item = $target.closest('.right-item'),\n            right_name = $target.prop('id');\n        if ($target.prop('checked')) {\n            if (this.actual_rights && !this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.addClass('changed');\n                else\n                    $right_item.removeClass('changed');\n        }\n        else {\n            if (this.actual_rights && this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else {\n                $right_item.removeClass('changed');\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.find('.timer-item-wrap .property-value').addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\")).attr('data-value', \"\");\n            }\n        }\n        this.updateSaveButton();\n    },\n\n    saveRights: function (ev) {\n        if ($(ev.target).hasClass('non-active'))\n            return;\n        let $btn = $(ev.target),\n            jid = this.account.get('jid'),\n            member_id = this.participant.get('id'),\n            $participant_avatar = this.$('.participant-details-item .circle-avatar'),\n            nickname_value = this.$('.participant-name-input').val(),\n            new_badge = this.$('.participant-badge-input').val(),\n            changed_avatar = this.new_avatar,\n            rights_changed = false,\n            has_changes = false,\n            iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + \"#members\"})\n                .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: member_id});\n        this.$('.buttons-wrap .btn-save-user-rights').addClass('non-active');\n        changed_avatar && $participant_avatar.find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        if (nickname_value != this.participant.get('nickname')) {\n            has_changes = true;\n            iq_changes.c('nickname').t(nickname_value).up();\n        }\n        if (Array.from(new_badge).length > 32)\n            utils.dialogs.error(xabber.getString(\"groupchat__set_badge__error_length\"));\n        else {\n            if (new_badge != this.participant.get('badge')) {\n                has_changes = true;\n                iq_changes.c('badge').t(new_badge).up();\n            }\n        }\n        this.$('.right-item').each((idx, right_item) => {\n            if ($(right_item).hasClass('changed')) {\n                let $right_item = $(right_item),\n                    right_name = $right_item.find('.field input')[0].id;\n                if ($right_item.find('.field input:checked').val()) {\n                    let right_expire = $right_item.find('.select-timer .timer-item-wrap .property-value').attr('data-value'),\n                        field = this.data_form.fields.find(f => f.var === right_name),\n                        field_idx = this.data_form.fields.indexOf(field);\n                    field.values = [right_expire];\n                    this.data_form.fields[field_idx] = field;\n                    rights_changed = true;\n                }\n                else {\n                    let field = this.data_form.fields.find(f => f.var === right_name);\n                    if (field.values.length) {\n                        let field_idx = this.data_form.fields.indexOf(field);\n                        field.values = [];\n                        this.data_form.fields[field_idx] = field;\n                        rights_changed = true;\n                    }\n                }\n            }\n        });\n        if (changed_avatar)\n            this.contact.pubAvatar(changed_avatar, ('#' + member_id), () => {\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                // this.$(`.participant-details-item[data-id=\"${member_id}\"] .circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.$(`.circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.close();\n            }, function (error) {\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                !has_changes && utils.dialogs.error(error_text);\n                this.close();\n            });\n        if (has_changes)\n            this.account.sendIQFast(iq_changes,\n                () => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.participant.set('nickname', nickname_value);\n                    this.close();\n                },\n                (error) => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        if (rights_changed) {\n            let iq_rights_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#rights'});\n            iq_rights_changes = this.account.addDataFormToStanza(iq_rights_changes, this.data_form);\n            this.account.sendIQFast(iq_rights_changes, () => {\n                    this.close();\n                },\n                (error) => {\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        }\n        $btn.blur();\n    }\n});\n\nxabber.EditBadgeView = xabber.BasicView.extend({\n    className: 'modal edit-badge',\n    template: templates.group_chats.badge_edit_view,\n\n    events: {\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-save\": \"saveNewBadge\",\n        \"keydown .badge-text\": \"checkKey\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.participant = this.model.participant;\n        this.$el.openModal({\n            ready: () => {\n                if (this.participant.get('badge'))\n                    this.typeEmoticon(this.participant.get('badge'));\n                else\n                    this.$('.badge-text').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            $target.length && this.typeEmoticon($target.data('emoji'));\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n        }});\n    },\n\n    saveNewBadge: function () {\n        let new_badge = this.$('.badge-text').getTextFromRichTextarea();\n        if (Array.from(new_badge).length > 32)\n            this.$('.modal-content .error').text(xabber.getString(\"groupchat__set_badge__error_length\"));\n        else {\n            if (new_badge != this.participant.get('badge')) {\n                let iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                    .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`})\n                    .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: this.participant.get('id')})\n                    .c('badge').t(new_badge);\n                this.account.sendIQFast(iq_changes, () => {\n                    this.model.updateBadge(new_badge);\n                    this.close();\n                }, () => {\n                    this.$('.modal-content .error').text(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                })\n            }\n        }\n    },\n\n    typeEmoticon: function (emoji) {\n        let emoji_node = emoji.emojify({tag_name: 'span'}),\n            $textarea = this.$('.badge-text');\n        $textarea.focus().pasteHtmlAtCaret(emoji_node);\n    },\n\n    checkKey: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            this.saveNewBadge();\n        }\n    }\n\n});\n\nxabber.DefaultRestrictionsView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-default-restrictions',\n    template: templates.group_chats.default_restrictions,\n    events: {\n        \"click .btn-default-restrictions-save\": \"saveChanges\",\n        \"click .btn-default-restrictions-cancel\": \"close\",\n        \"change #default_restriction_expires\": \"changeExpiresTime\",\n        \"click .group-info-editor .property-variant\": \"changePropertyValue\",\n        \"click .select-timer .property-variant\": \"changeTimerValue\",\n        \"click .clickable-field input\": \"changeRestriction\",\n        \"keyup .clickable-field input\": \"keyUpInput\",\n        \"change .clickable-field input\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.contact.account;\n    },\n\n    open: function () {\n        this.update(() => {\n            this.$el.openModal({\n                ready: () => {\n                    this.$('.select-timer .dropdown-button').dropdown({\n                        inDuration: 100,\n                        outDuration: 100,\n                        constrainWidth: false,\n                        hover: false,\n                        alignment: 'left'\n                    });\n                    this.updateScrollBar();\n                },\n                complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.hide.bind(this);\n            }\n        });\n    },\n\n    update: function (callback) {\n        this.$('.btn-default-restrictions-save').addClass('non-active');\n        this.default_restrictions = [];\n        this.actual_default_restrictions = [];\n        this.$('button').blur();\n        let iq_get_rights = $iq({type: 'get', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n        this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n            this.showDefaultRestrictions(iq_all_rights);\n            callback && callback();\n        }, () => {\n            utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n        });\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked'))\n                    has_changes = true;\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name))\n                    has_changes = true;\n            }\n        });\n        this.$('.btn-default-restrictions-save').switchClass('non-active', !has_changes);\n    },\n\n    changeRestriction: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.prop('checked')) {\n            $target.closest('.right-item').find('.select-timer .property-value').attr('data-value', \"\").addClass('default-value')\n                .text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        }\n    },\n\n    keyUpInput: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER)\n            $(ev.target).click();\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') == 0) {\n            $property_value.addClass('default-value');\n            $property_value.text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked'))\n            $input_item.prop('checked', true);\n        this.updateSaveButton();\n    },\n\n    showDefaultRestrictions: function (iq_all_rights) {\n        let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n        data_form && (this.default_restrictions = _.clone(data_form));\n        data_form.fields.forEach((field) => {\n            if (field.type === 'fixed' || field.type === 'hidden')\n                return;\n            let attrs = {\n                    pretty_name: field.label,\n                    name: field.var,\n                    expires: field.values ? field.values[0] : undefined\n                },\n                view = this.$('.default-restrictions-list-wrap .right-item.restriction-default-' + attrs.name),\n                restriction_item = $(templates.group_chats.restriction_item({name: ('default-' + attrs.name), pretty_name: attrs.pretty_name, type: field.type})),\n                restriction_expire = $(templates.group_chats.right_expire_variants({right_name: ('default-' + attrs.name), expire_options: field.options}));\n            if (view.length)\n                view.detach();\n            restriction_item.append(restriction_expire);\n            this.$('.default-restrictions-list-wrap').append(restriction_item);\n            if (attrs.expires) {\n                this.actual_default_restrictions.push({name: attrs.name, expires: attrs.expires});\n                this.$('.right-item #default-' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                if (attrs.expires != 0) {\n                    let $current_restriction = this.$('.right-item.restriction-default-' + attrs.name);\n                    $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                        .removeClass('default-value')\n                        .text(field.options.find(x => x.value === attrs.expires).label);\n                }\n            }\n        });\n    },\n\n    saveChanges: function () {\n        if (this.$('.btn-default-restrictions-save').hasClass('non-active'))\n            return;\n        this.$('button').blur();\n        let iq_change_default_rights = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`}),\n            has_new_default_restrictions = false,\n            data_form = _.clone(this.default_restrictions);\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked')) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [restriction_expires];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name)) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [\"\"];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n            }\n        });\n\n        if (has_new_default_restrictions) {\n            this.account.addDataFormToStanza(iq_change_default_rights, data_form);\n            this.account.sendIQFast(iq_change_default_rights, () => {\n                this.close();\n            }, (error) => {\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                utils.dialogs.error(err_text);\n                this.close();\n            });\n        }\n    },\n\n    changeExpiresTime: function (ev) {\n        let expire_time_item = $(ev.target),\n            new_expire_time = expire_time_item.val(),\n            $restriction_item = expire_time_item.prev();\n        if (expire_time_item.val() == '0')\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__indefinitely\"));\n        else\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__text_expire\", [Number(new_expire_time)]));\n        $restriction_item .find('input').removeClass().addClass(new_expire_time);\n        expire_time_item.remove();\n    }\n});\n\nxabber.DefaultRestrictionsRightView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-default-restrictions',\n    template: templates.group_chats.default_restrictions_right,\n    events: {\n        \"click .btn-default-restrictions-save\": \"saveChanges\",\n        \"click .btn-default-restrictions-cancel\": \"hideRestrictions\",\n        \"click .btn-back\": \"hideRestrictions\",\n        \"click .btn-reset\": \"showRestrictions\",\n        \"change #default_restriction_expires\": \"changeExpiresTime\",\n        \"click .group-info-editor .property-variant\": \"changePropertyValue\",\n        \"click .select-timer .property-variant\": \"changeTimerValue\",\n        \"click .clickable-field input\": \"changeRestriction\",\n        \"keyup .clickable-field input\": \"keyUpInput\",\n        \"change .clickable-field input\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.contact.account;\n        this.model.set('restrictions_hidden', true)\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'))\n    },\n\n    showRestrictions: function (ev) {\n        this.model.set('restrictions_hidden', false);\n        this.update(() => {\n            this.$('.select-timer .dropdown-button').dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'left'\n            });\n            this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'))\n            this.updateSaveButton()\n        });\n    },\n\n    hideRestrictions: function (ev) {\n        this.parent.hideRestrictions();\n    },\n\n    open: function () {\n        this.update(() => {\n            this.$el.openModal({\n                ready: () => {\n                    this.$('.select-timer .dropdown-button').dropdown({\n                        inDuration: 100,\n                        outDuration: 100,\n                        constrainWidth: false,\n                        hover: false,\n                        alignment: 'left'\n                    });\n                    this.updateScrollBar();\n                },\n                complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n        });\n    },\n\n    update: function (callback) {\n        this.$('.btn-default-restrictions-save').addClass('fade-out');\n        this.default_restrictions = [];\n        this.actual_default_restrictions = [];\n        this.$('button').blur();\n        let iq_get_rights = $iq({type: 'get', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n        this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n            this.showDefaultRestrictions(iq_all_rights);\n            callback && callback();\n        }, () => {\n\n            utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n        });\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked'))\n                    has_changes = true;\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name))\n                    has_changes = true;\n            }\n        });\n        this.$('.btn-default-restrictions-save').switchClass('fade-out', !has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.restrictions-header .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.restrictions-header .details-icon').removeClass('btn-back').addClass('btn-reset')\n            this.$('.restrictions-header .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.restrictions-header .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.restrictions-header .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.restrictions-header .details-icon').addClass('btn-back').removeClass('btn-reset')\n            this.$('.restrictions-header .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.restrictions-header .block-name.second-text').addClass('fade-out');\n        }\n    },\n\n    changeRestriction: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.prop('checked')) {\n            $target.closest('.right-item').find('.select-timer .property-value').attr('data-value', \"\").addClass('default-value')\n                .text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        }\n    },\n\n    keyUpInput: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER)\n            $(ev.target).click();\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') == 0) {\n            $property_value.addClass('default-value');\n            $property_value.text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked'))\n            $input_item.prop('checked', true);\n        this.updateSaveButton();\n    },\n\n    showDefaultRestrictions: function (iq_all_rights) {\n        let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n        data_form && (this.default_restrictions = _.clone(data_form));\n        data_form.fields.forEach((field) => {\n            if (field.type === 'fixed' || field.type === 'hidden')\n                return;\n            let attrs = {\n                    pretty_name: field.label,\n                    name: field.var,\n                    expires: field.values ? field.values[0] : undefined\n                },\n                view = this.$('.default-restrictions-list-wrap .right-item.restriction-default-' + attrs.name),\n                restriction_item = $(templates.group_chats.restriction_item({name: ('default-' + attrs.name), pretty_name: attrs.pretty_name, type: field.type})),\n                restriction_expire = $(templates.group_chats.right_expire_variants({right_name: ('default-' + attrs.name), expire_options: field.options}));\n            if (view.length)\n                view.detach();\n            restriction_item.append(restriction_expire);\n            this.$('.default-restrictions-list-wrap').append(restriction_item);\n            if (attrs.expires) {\n                this.actual_default_restrictions.push({name: attrs.name, expires: attrs.expires});\n                this.$('.right-item #default-' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                if (attrs.expires != 0) {\n                    let $current_restriction = this.$('.right-item.restriction-default-' + attrs.name);\n                    $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                        .removeClass('default-value')\n                        .text(field.options.find(x => x.value === attrs.expires).label);\n                }\n            }\n        });\n    },\n\n    saveChanges: function () {\n        if (this.$('.btn-default-restrictions-save').hasClass('fade-out'))\n            return;\n        this.$('.btn-default-restrictions-save').addClass('fade-out')\n        this.$('.edit-save-preloader.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        this.$('button').blur();\n        let iq_change_default_rights = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`}),\n            has_new_default_restrictions = false,\n            data_form = _.clone(this.default_restrictions);\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked')) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [restriction_expires];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name)) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [\"\"];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n            }\n        });\n\n        if (has_new_default_restrictions) {\n            this.account.addDataFormToStanza(iq_change_default_rights, data_form);\n            this.account.sendIQFast(iq_change_default_rights, () => {\n                this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.hideRestrictions();\n            }, (error) => {\n\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                utils.dialogs.error(err_text);\n                this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.hideRestrictions();\n            });\n        }\n    },\n\n    changeExpiresTime: function (ev) {\n        let expire_time_item = $(ev.target),\n            new_expire_time = expire_time_item.val(),\n            $restriction_item = expire_time_item.prev();\n        if (expire_time_item.val() == '0')\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__indefinitely\"));\n        else\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__text_expire\", [Number(new_expire_time)]));\n        $restriction_item .find('input').removeClass().addClass(new_expire_time);\n        expire_time_item.remove();\n    }\n});\n\nxabber.Participant = Backbone.Model.extend({\n    idAttribute: 'id',\n\n    initialize: function (_attrs, options) {\n        let attrs = _.clone(_attrs);\n        this.model = options.model;\n        this.contact = options.contact ? options.contact : this.model.contact;\n        this.account = this.contact.account;\n        this.on(\"change:avatar\", this.getBase64Avatar, this);\n        this.set(attrs);\n        this.getBase64Avatar();\n    },\n\n    getBase64Avatar: function () {\n        if (!this.get('id'))\n            return;\n        if (this.get('avatar')) {\n            let cached_info = this.account.chat_settings.getAvatarInfoById(this.get('id'));\n            if (cached_info) {\n                if (cached_info.avatar_hash == this.get('avatar')) {\n                    this.set('b64_avatar', cached_info.avatar_b64);\n                    (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n                    return;\n                }\n            }\n            if (this.get('avatar_url')){\n                this.account.chat_settings.updateCachedAvatars(this.get('id'), this.get('avatar'), this.get('avatar_url'));\n                this.set('b64_avatar', this.get('avatar_url'));\n                (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n\n            } else {\n                let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + this.get('id');\n                this.contact.getAvatar(this.get('avatar'), node, (avatar) => {\n                    this.account.chat_settings.updateCachedAvatars(this.get('id'), this.get('avatar'), avatar);\n                    this.set('b64_avatar', avatar);\n                    (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n                });\n\n            }\n        }\n    },\n\n    kick: function (callback, errback) {\n        let id = this.get('id'),\n            jid = this.get('jid'),\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('kick', {xmlns: Strophe.NS.GROUP_CHAT});\n        if (jid)\n            iq.c('jid').t(jid);\n        else\n            iq.c('id').t(id);\n        this.account.sendIQFast(iq, () => {\n            callback && callback();\n        }, (err) => {\n            errback && errback(err);\n        });\n    },\n\n    block: function (callback, errback) {\n        let id = this.get('id'),\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('block', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c('id').t(id);\n        this.account.sendIQFast(iq, () => {\n            callback && callback();\n        }, function (err) {\n            errback && errback(err);\n        });\n    }\n});\n\nxabber.Participants = Backbone.Collection.extend({\n    model: xabber.Participant,\n    comparator: 'nickname',\n\n    initialize: function (models, options) {\n        this.contact = options.contact;\n        this.account = this.contact.account;\n        this.version = this.account.groupchat_settings.getParticipantsListVersion(this.contact.get('jid'));\n        this.getCachedParticipants();\n        this.contact.on(\"update_participants\", this.updateParticipants, this);\n        this.on(\"change:nickname\", this.sort, this);\n    },\n\n    updateVersion: function () {\n        this.version = this.account.groupchat_settings.getParticipantsListVersion(this.contact.get('jid')) || this.version;\n    },\n\n    getCachedParticipants: function () {\n        this.account.groupchat_settings.getParticipantsList(this.contact.get('jid')).forEach((participant) => {\n            this.mergeParticipant(participant);\n        });\n    },\n\n    mergeParticipant: function (attrs) {\n        if (typeof attrs !== \"object\")\n            attrs = {id: attrs};\n        let participant = this.get(attrs.id);\n        if (participant)\n            participant.set(attrs);\n        else {\n            participant = this.create(attrs, {model: this});\n        }\n        return participant;\n    },\n\n    resetParticipants: function () {\n        this.version = 0;\n        _.each(_.clone(this.models), function (participant) {\n            participant.destroy();\n        });\n    },\n\n    getRights: function (rights) {\n        let pretty_rights = [];\n        $(rights).each((idx, permission) => {\n            let name = $(permission).attr('name'),\n                pretty_name = $(permission).attr('translation'),\n                issued_time = $(permission).attr('issued-at'),\n                expires_time = $(permission).attr('expires');\n            pretty_rights.push({\n                name: name,\n                pretty_name: pretty_name,\n                issued_time: issued_time,\n                expires_time: expires_time\n            });\n        });\n        return pretty_rights;\n    },\n\n        updateParticipants: function () {\n            this.participantsRequest({version: this.version}, () => {\n                this.trigger(\"participants_updated\");\n                let chat = this.account.chats.getChat(this.contact);\n                if (chat.item_view) {\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.updatePinnedMessage()\n                }\n            });\n        },\n\n    participantsRequest: function (options, callback, errback) {\n        options = options || {};\n        let participant_id = options.id,\n            version = options.version || 0,\n            iq = $iq({to: this.contact.get('full_jid'), type: 'get'});\n        if (participant_id != undefined) {\n            if (options.properties)\n                iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`, id: participant_id});\n            else\n                iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#rights`}).c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: participant_id});\n        }\n        else\n            iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`, version: version});\n        this.account.sendFast(iq, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            version && (this.version = Number(version));\n            $response.find(`query user`).each((idx, item) => {\n                let $item = $(item),\n                    subscription = $item.find('subscription').text(),\n                    id = $item.attr('id');\n                if (subscription === 'none') {\n                    this.get(id) && this.get(id).destroy();\n                    this.account.groupchat_settings.removeParticipantFromList(this.contact.get('jid'), id);\n                    this.trigger(\"participants_updated\");\n                }\n                else\n                    this.createFromStanza($item);\n            });\n            callback && callback(response);\n        }, (error) => {\n            errback && errback(error);\n        });\n    },\n\n    search: function (query) {\n        let list = [];\n        this.models.forEach((participant) => {\n            let jid = participant.get('jid');\n            if (query) {\n                query = query.toLowerCase();\n                let nickname = participant.get('nickname');\n                if (jid && jid.toLowerCase().indexOf(query) > -1 || nickname && nickname.toLowerCase().indexOf(query) > -1)\n                    list.push(participant);\n            } else\n                list.push(participant);\n        });\n        return list;\n    },\n\n    createFromStanza: function ($item, options) {\n        let jid = $item.find('jid').text(),\n            nickname = $item.find('nickname').text(),\n            id = $item.attr('id'),\n            badge = $item.find('badge').text(),\n            present = $item.find('present').text(),\n            photo = $item.find(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).find('info').attr('id'),\n            photo_url = $item.find(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).find('info').attr('url'),\n            role = $item.find('role').text();\n        !nickname.trim().length && (nickname = jid || id);\n\n        let attrs = {\n            jid: jid,\n            id: id,\n            avatar: photo,\n            avatar_url: photo_url,\n            nickname: nickname,\n            badge: badge,\n            present: present,\n            role: role\n        };\n        (this.contact.get('incognito_chat') && options && options.my_info === true) && (attrs.jid = this.account.get('jid'));\n\n        let participant = this.mergeParticipant(attrs);\n        (this.account.get('jid') === participant.get('jid')) && (this.contact.my_info = participant) && this.contact.trigger('update_my_info');\n        this.account.groupchat_settings.updateParticipant(this.contact.get('jid'), attrs);\n        return participant;\n    }\n});\n\nxabber.GroupChatSettings = Backbone.ModelWithStorage.extend({\n    defaults: {\n        participants_lists: []\n    },\n\n    getParticipantsListVersion: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            result = all_participants_lists.find(list => list.jid === jid);\n        if (result)\n            return result.version;\n        else\n            return 0;\n    },\n\n    setParticipantsListVersion: function (jid, version) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list = all_participants_lists.find(list => list.jid === jid),\n            participants_list_idx = all_participants_lists.indexOf(participants_list);\n        if (participants_list_idx != -1) {\n            all_participants_lists.splice(participants_list_idx, 1);\n        }\n        if (!participants_list) {\n            participants_list = {jid: jid, participants_list: [], version: 0};\n        }\n        else\n            participants_list.version = version;\n        all_participants_lists.push(participants_list);\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    getParticipantsList: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            result = all_participants_lists.find(list => list.jid === jid);\n        if (result && result.participants_list)\n            return result.participants_list;\n        else\n            return [];\n    },\n\n    updateParticipant: function (jid, participant_info) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            chat_participants = all_participants_lists.find(list => list.jid === jid),\n            version = chat_participants && chat_participants.version || 0,\n            participants_list = chat_participants && chat_participants.participants_list || [],\n            participants_list_idx = all_participants_lists.indexOf(chat_participants);\n        if (participants_list.length) {\n            let participant = participants_list.find(participant_item => participant_item.id === participant_info.id),\n                participant_idx = participants_list.indexOf(participant);\n            if (participant_idx != -1)\n                participants_list[participant_idx] = participant_info;\n            else\n                participants_list.push(participant_info);\n        }\n        else\n            participants_list.push(participant_info);\n        if (participants_list_idx != -1) {\n            all_participants_lists.splice(participants_list_idx, 1);\n        }\n        all_participants_lists.push({jid: jid, participants_list: participants_list, version: version});\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    setParticipantsList: function (jid, updated_participants_list) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list = all_participants_lists.find(list => list.jid === jid) || [],\n            participants_list_idx = all_participants_lists.indexOf(participants_list);\n        if (participants_list_idx != -1)\n            all_participants_lists.splice(participants_list_idx, 1);\n        all_participants_lists.push({jid: jid, participants_list: updated_participants_list, version: participants_list.version});\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    removeParticipantFromList: function (jid, participant_id) {\n        let participants_list = this.getParticipantsList(jid);\n        if (participants_list.length) {\n            let participant_idx = participants_list.indexOf(participants_list.find(participant => participant.id === participant_id));\n            if (participant_idx != -1)\n                participants_list.splice(participant_idx, 1);\n            this.setParticipantsList(jid, participants_list);\n        }\n    },\n\n    resetParticipantsList: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list_idx = all_participants_lists.indexOf(all_participants_lists.find(list => list.jid === jid));\n        if (participants_list_idx != -1)\n            all_participants_lists.splice(participants_list_idx, 1);\n        all_participants_lists.push({jid: jid, participants_list: [], version: 0});\n        this.save('participants_lists', all_participants_lists);\n    }\n});\n\nxabber.GroupchatInvitationView = xabber.BasicView.extend({\n    className: 'details-panel invitation-view',\n    template: templates.group_chats.invitation,\n    ps_selector: '.panel-content',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-join\": \"join\",\n        \"click .btn-decline\": \"reject\",\n        \"click .btn-block\": \"blockContact\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.$('.msg-text').text(options.message && options.message.get('message') ? options.message.get('message') : xabber.getString(\"groupchat__public_group__text_invitation\", [this.account.get('jid')]));\n        this.message = options.message;\n        this.model.on(\"change\", this.update, this);\n    },\n\n    render: function () {\n        this.model.set('visible', true);\n        this.updateAvatar();\n        this.updateName();\n    },\n\n    hide: function () {\n        this.trigger('before_hide', this);\n        this.data.set('visible', false);\n        this.model.set('visible', false);\n        this.onHide.apply(this, arguments);\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n    },\n\n    openChat: function () {\n        this.model.set('in_roster', true);\n        this.model.trigger(\"open_chat\", this.model);\n    },\n\n    closeChat: function () {\n        let chat = this.account.chats.getChat(this.model);\n        chat.set({'opened': false, 'display': false, 'active': false, 'is_accepted': undefined});\n        xabber.body.setScreen('all-chats', { right: undefined });\n        chat.item_view.content.readMessages();\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateName: function () {\n        this.$('.main-info  .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name-wrap') == this.model.get('jid')) {\n            this.$('.main-info .name-wrap').addClass('name-is-jid');\n            this.$('.main-info  .jid').text('');\n        }\n        else {\n            this.$('.main-info .name-wrap').removeClass('name-is-jid');\n            this.$('.main-info  .jid').text(this.model.get('jid'));\n        }\n    },\n\n    blockInvitation: function () {\n        if (this.account.connection && this.account.connection.do_synchronization)\n            return;\n        let contact_jid = this.model.get('jid'),\n            iq_get_blocking = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING}),\n            iq_unblocking = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING}),\n            iq_set_blocking = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.model.get('jid') + '/' + moment.now()});\n        this.account.sendIQFast(iq_get_blocking, (iq_blocking_items) => {\n            let items = $(iq_blocking_items).find('item');\n            if (items.length > 0) {\n                items.each(function (idx, item) {\n                    let item_jid = $(item).attr('jid');\n                    if (item_jid.indexOf(contact_jid) > -1)\n                        iq_unblocking.c('item', {jid: item_jid}).up();\n                });\n            }\n            if ($(iq_unblocking.nodeTree).find('item').length)\n                this.account.sendIQFast(iq_unblocking, () => {\n                    this.account.sendIQFast(iq_set_blocking);\n                });\n            else\n                this.account.sendIQFast(iq_set_blocking);\n        });\n    },\n\n    join: function () {\n        let contact = this.model;\n        contact.set('subscription_preapproved', true);\n        contact.pres('subscribed');\n        contact.set('known', true);\n        contact.set('removed', false);\n        setTimeout(() => {\n            contact.pres('subscribe');\n        }, 500);\n        this.blockInvitation();\n        contact.getMyInfo();\n        this.openChat();\n        contact.trigger('remove_invite', contact);\n        let chat = this.account.chats.getChat(this.model);\n    },\n\n    reject: function () {\n        let contact = this.model;\n        this.closeChat();\n        let iq = $iq({to: contact.get('full_jid') || contact.get('jid'), type: 'set'})\n            .c('decline', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`});\n        this.account.sendFast(iq, () => {}, () => {\n            contact.declineRequest();\n            this.blockInvitation();\n        });\n        contact.trigger('remove_invite', contact);\n    },\n\n    blockContact: function () {\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"contact_block\"), xabber.getString(\"block_contact_confirm\", [contact.get('name'), this.account.get('jid')]), null, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done(function (result) {\n            if (result) {\n                contact.trigger('remove_invite', contact);\n                contact.block();\n                xabber.trigger(\"clear_search\");\n            }\n        });\n        this.blockInvitation();\n        this.closeChat();\n        contact.trigger('remove_invite', contact);\n    }\n});\n\nxabber.ContactNameWidget = xabber.InputWidget.extend({\n    field_name: 'contact-name',\n    placeholder: \"\",\n    model_field: 'name',\n\n    setValue: function (value) {\n        if (name === \"\") {\n            this.model.set('roster_name', null);\n            let name = this.getDefaultName();\n            this.model.set('name', name);\n        }\n        this.model.pushInRoster({name: value});\n    },\n\n    showInput: function () {\n        if (this.$input.prop('disabled'))\n            return;\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info'))\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        else {\n            let vcard = this.model.get('vcard');\n            name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || this.model.get('jid');\n        }\n        return name;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n    }\n});\n\nxabber.ContactNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'contact-name',\n    placeholder: \"\",\n    model_field: 'name',\n    template: templates.group_chats.group_name_input_widget,\n\n    setValue: function (value) {\n        if (name === \"\") {\n            this.model.set('roster_name', null);\n            let name = this.getDefaultName();\n            this.model.set('name', name);\n        }\n        this.model.pushInRoster({name: value});\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info'))\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        else {\n            let vcard = this.model.get('vcard');\n            name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || this.model.get('jid');\n        }\n        return name;\n    },\n\n    updateValue: function () {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val()) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('roster_name'))\n                this.$input.val(this.model.get('roster_name'))\n        }\n        if (!this.model.get('roster_name'))\n            this.$value.addClass('name-is-default');\n        else\n            this.$value.removeClass('name-is-default');\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n    },\n});\n\nxabber.GroupNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'group-name',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        if (this.$input.val())\n            this.parent.changeName(value);\n        else\n            this.parent.changeName(this.getDefaultName());\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info') && this.model.get('group_info').name)\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('group_info') && this.model.get('group_info').name)\n                this.$input.val(this.model.get('group_info').name)\n            if (force_reset)\n                this.changeValue();\n        }\n    },\n\n    getValue: function () {\n        if (this.model.get('group_info'))\n            return this.model.get('group_info').name;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n        else\n            this.changeValue();\n\n    },\n});\n\nxabber.ParticipantNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'participant-name',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.updateValue();\n        if (this.$input.val())\n            this.parent.changeName(value);\n        else\n            this.parent.changeName(this.getDefaultName());\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('nickname'))\n            name = this.model.get('nickname');\n        else\n            name = this.model.get('jid');\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('nickname'))\n                this.$input.val(this.model.get('nickname'))\n            if (force_reset)\n                this.changeValue();\n        }\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        if (this.model.get('nickname'))\n            return this.model.get('nickname');\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n        else\n            this.changeValue();\n\n    },\n});\n\nxabber.ParticipantBadgeRightWidget = xabber.InputWidget.extend({\n    field_name: 'participant-badge',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue(true);\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.updateValue();\n        this.parent.changeBadge(value);\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_member_badge\"));\n        if (force_reset) {\n            this.$input.val(value);\n            this.changeValue();\n        }\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        let badge = _.escape(this.model.get('badge'));\n        return badge;\n    },\n\n    keyUp: function () {\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_member_badge\"));\n        this.changeValue();\n    },\n});\n\nxabber.GroupDescriptionRightWidget = xabber.InputWidget.extend({\n    field_name: 'group-description',\n    template: templates.group_chats.description_input_widget,\n    placeholder: \"\",\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.parent.changeDescription(value);\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info') && this.model.get('group_info').description)\n                name = this.model.get('group_info').description;\n        }\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_example_description\"));\n            if (force_reset && this.model.get('group_info'))\n                this.$input.val(this.model.get('group_info').description)\n            if (force_reset)\n                this.changeValue();\n        }\n    },\n\n    keyDown: function (ev) {\n        ev.stopPropagation();\n        let value = this.getValue();\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.$input.removeClass('changed').val(value);\n            this.data.set('input_mode', false);\n        }\n    },\n\n    getValue: function () {\n        if (this.model.get('group_info'))\n            return this.model.get('group_info').description;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_example_description\"));\n        this.changeValue();\n    },\n});\n\nxabber.ContactEditGroupsView = xabber.BasicView.extend({\n    template: templates.groups,\n    events: {\n        'click .group': 'removeGroup',\n        'click .existing-group-field': 'editGroup',\n        'change .new-group-name input': 'checkNewGroup',\n        'keyup .new-group-name input': 'checkNewGroup',\n        'click .new-group-checkbox': 'addNewGroup',\n        \"keyup #new-group-name\": \"keyupAddNewGroup\",\n        \"focusin #new-group-name\": \"focusinAddNewGroup\",\n        \"focusout #new-group-name\": \"focusoutAddNewGroup\",\n        \"keydown #new-group-name\": \"keydownAddNewGroup\",\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('groups_hidden', true)\n        this.model.on(\"change:in_roster update_groups\", this.onUpdate, this);\n    },\n\n    render: function (view, args) {\n        this.$el.html(this.template());\n        if (this.model.get('in_roster')) {\n            let groups = _.clone(this.model.get('groups')),\n                all_groups = _.map(this.account.groups.notSpecial(), function (group) {\n                    let name = group.get('name');\n                    return {name: name, checked: _.contains(groups, name), id: uuid()};\n                }),\n                all_groups_unchecked = all_groups.filter(function(group) {\n                    if (group.checked)\n                        return false;\n                    return true;\n                }).length;\n            if (all_groups_unchecked)\n                this.$('.groups-wrap').removeClass('empty-groups-wrap')\n            else\n                this.$('.groups-wrap').addClass('empty-groups-wrap')\n\n            this.$('.checkbox-list').html(templates.groups_checkbox_list({\n                groups: all_groups\n            })).appendTo(this.$('.groups-wrap'));\n            this.ps_container = this.$('.checkbox-list');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.scrollToTop();\n            if (groups.length)\n                this.$('.groups').html(templates.groups_list({\n                    groups: all_groups\n                })).appendTo(this.$('.groups-wrap-list'));\n            else\n                this.$('.groups').html('<div class=\"empty-groups\">'+ xabber.getString(\"contact_circles_empty\") + '</div>')\n            this.$('.groups').append(templates.groups_new_group());\n\n        }\n        this.$el.showIf(this.model.get('in_roster'));\n        if (args && args.on_add) {\n            this.$('.groups-wrap').hideIf(false)\n            this.$('.input-field input').focus();\n        }\n        else\n            this.$('.groups-wrap').hideIf(true)\n        this._update_template = false;\n        this.parent.updateScrollBar();\n    },\n\n    onUpdate: function (ev) {\n        if (this._update_template){\n            this.render(this, {on_add: true});\n            this.$('.new-group-name input').focus();\n        }\n        else{\n            this.render();\n        }\n\n    },\n\n    removeGroup: function (ev) {\n        let $target = $(ev.target).closest('.group'),\n            group_name = $target.attr('data-groupname'),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(group_name);\n        if (idx >= 0) {\n            groups.splice(idx, 1);\n        }\n        this._update_template = false\n        this.model.pushInRoster({groups: groups});\n    },\n\n    removeLastGroup: function (ev) {\n        let groups = _.clone(this.model.get('groups'));\n        if (groups.length) {\n            groups.pop();\n            this._update_template = true\n            this.model.pushInRoster({groups: groups});\n        }\n    },\n\n    editGroup: function (ev) {\n        clearTimeout(this._hide_timeout)\n        let $target = $(ev.target).closest('.input-field'),\n            $input = $target.find('input'),\n            checked = !$input.prop('checked'),\n            group_name = $input.attr('data-groupname'),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(group_name);\n        $input.prop('checked', checked);\n        if (checked) {\n            groups.push(group_name);\n        } else if (idx >= 0) {\n            groups.splice(idx, 1);\n        }\n        this._update_template = true\n        this.model.pushInRoster({groups: groups});\n    },\n\n    checkNewGroup: function (ev) {\n        let name = $(ev.target).val(),\n            $checkbox = this.$('.new-group-checkbox');\n        $checkbox.showIf(name && !this.account.groups.get(name));\n    },\n\n    keyupAddNewGroup: function (ev) {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val();\n        if (ev.keyCode === constants.KEY_ENTER && name) {\n            this.addNewGroup();\n        }\n    },\n\n    keydownAddNewGroup: function (ev) {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val();\n        if (ev.keyCode === constants.KEY_BACKSPACE && !name) {\n            this.removeLastGroup();\n        }\n    },\n\n    focusinAddNewGroup: function (ev) {\n        clearTimeout(this._hide_timeout)\n        this.$('.groups-wrap').hideIf(false)\n        this.$('.empty-groups').hideIf(true)\n    },\n\n    focusoutAddNewGroup: function (ev) {\n        this.$('.empty-groups').hideIf(false)\n        if (this.$('.new-group-name input').val())\n            this.addNewGroup();\n        this._hide_timeout = setTimeout(() => {\n            this.$('.groups-wrap').hideIf(true)\n            this.$('.new-group-name input').val('')\n        }, 100)\n    },\n\n    addNewGroup: function () {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val(),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(name);\n        if (idx < 0) {\n            groups.push(name);\n        }\n        this.model.pushInRoster({groups: groups});\n        this._update_template = true\n    }\n});\n\nxabber.ContactEditView = xabber.BasicView.extend({\n    template: templates.edit_contact,\n    events: {\n        'click .btn-back': 'hideEdit',\n        'click .btn-request': 'requestSubscription',\n        'click .btn-allow': 'allowSubscription',\n        'click .btn-cancel-request': 'cancelSubscriptionRequest',\n        'click .btn-allow-request': 'handleSubscriptionRequest',\n        'click .btn-disallow-request': 'cancelSubscriptionIn',\n        'click .btn-disallow-preapproved': 'cancelSubscriptionIn',\n        'click .btn-cancel-subscription-out': 'cancelSubscriptionOut',\n        'click .btn-cancel-subscription-in': 'cancelSubscriptionIn',\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('edit_hidden', true)\n        this.model.on(\"change:status_updated\", this.updateStatuses, this);\n        this.model.on(\"change:subscription\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_preapproved\", this.updateStatuses, this);\n        this.model.on(\"change:blocked\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_request_in\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_request_out\", this.updateStatuses, this);\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n        this.name_field = new xabber.ContactNameRightWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.$('.status-out.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.status-in.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.updateStatuses();\n    },\n\n    showEdit: function () {\n        this.model.set('edit_hidden', false);\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n    },\n\n    updateStatuses: function () {\n        let statuses = this.model.getSubscriptionStatuses(),\n            subscription_preapproved = this.model.get('subscription_preapproved');\n        if (statuses){\n            this.$('.status-out').addClass(statuses.status_out_class)\n            this.$('.status-out .value').text(statuses.status_out)\n            this.$('.status-out').showIf(statuses.status_out)\n            this.$('.status-in').addClass(statuses.status_in_class)\n            this.$('.status-in  .value').text(statuses.status_in)\n            this.$('.status-in').showIf(statuses.status_in)\n            this.$('.status-description .value').html(statuses.status_description)\n            this.$('.status-description').showIf(statuses.status_description)\n            this.$('.btn-delete').hideIf(!this.model.get('in_roster'));\n            if (statuses.status_out_color === 'request') {\n                this.$('.status-out').addClass('text-color-500').addClass('request').removeClass('subbed')\n                this.$('.status-out').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === 'request') {\n                this.$('.status-in').addClass('text-color-500').addClass('request').removeClass('subbed')\n                this.$('.status-in').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_out_color === 'subbed') {\n                this.$('.status-out').addClass('text-color-500').addClass('subbed').removeClass('request')\n                this.$('.status-out').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === 'subbed') {\n                this.$('.status-in').addClass('text-color-500').addClass('subbed').removeClass('request')\n                this.$('.status-in').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_out_color === '') {\n                this.$('.status-out').removeClass('text-color-500').removeClass('request').removeClass('subbed')\n                this.$('.status-out').removeClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === '') {\n                this.$('.status-in').removeClass('text-color-500').removeClass('request').removeClass('subbed')\n                this.$('.status-in').removeClass('text-decoration-color-300')\n            }\n            this.$('.btn-request').hideIf(!(statuses.status_out_color === ''))\n            this.$('.btn-allow').hideIf(!(statuses.status_in_color === '' && !subscription_preapproved))\n            this.$('.btn-disallow-preapproved').hideIf(!(statuses.status_in_color === '' && subscription_preapproved))\n            this.$('.btn-cancel-request').hideIf(!(statuses.status_out_color === 'request'))\n            this.$('.btn-allow-request').hideIf(!(statuses.status_in_color === 'request'))\n            this.$('.btn-disallow-request').hideIf(!(statuses.status_in_color === 'request'))\n            this.$('.btn-cancel-subscription-out').hideIf(!(statuses.status_out_color === 'subbed'))\n            this.$('.btn-cancel-subscription-in').hideIf(!(statuses.status_in_color === 'subbed'))\n        }\n    },\n\n    requestSubscription: function () {\n        this.model.askRequest();\n    },\n\n    allowSubscription: function () {\n        this.model.acceptRequest();\n        !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && this.set('subscription_preapproved', true)\n    },\n\n    cancelSubscriptionRequest: function () {\n        this.model.declineSubscription();\n    },\n\n    handleSubscriptionRequest: function () {\n        this.model.acceptRequest();\n    },\n\n    cancelSubscriptionOut: function () {\n        this.model.declineSubscription();\n    },\n\n    cancelSubscriptionIn: function () {\n        this.model.declineSubscribe();\n        this.model.set('subscription_request_in', false);\n    },\n\n    hideEdit: function (ev) {\n        this.model.set('edit_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        };\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'));\n    },\n});\n\nxabber.GroupEditView = xabber.BasicView.extend({\n    template: templates.edit_group,\n    events: {\n        \"click .btn-save\": \"saveChanges\",\n        'click .edit-header:not(.property-header) .btn-back': 'hideEdit',\n        'click .btn-reset': 'resetPanel',\n        'click .btn-edit': 'showDescriptionProperty',\n        'click .btn-back-panel': 'hidePanel',\n        'click .membership-field .property-radio input': 'changeMembership',\n        'click .index-field .property-radio input ': 'changeIndex',\n        'click .index-property:not(.property-disabled)': 'showIndexProperty',\n        'click .membership-property:not(.property-disabled)': 'showMembershipProperty',\n        'click .btn-back.btn-property-back': 'hideProperty',\n        \"click .list-variant\": \"showPanel\",\n        \"click .revoke-invitation\": \"revokeInvitation\",\n        \"click .btn-reset-panel\": \"deselectParticipants\",\n        \"click .btn-remove-selected\": \"actionSelectedParticipants\",\n        \"click .participants-edit-wrap .list-item\": \"selectParticipant\",\n        \"click .unblock-user\": \"unblockUser\",\n        \"click .set-groupchat-avatar-text\": \"clickAvatarInput\",\n        \"click .btn-add-block\": \"blockId\",\n        \"keydown .field-input\": \"keyDownName\",\n        \"keyup .field-input\": \"keyUp\",\n        \"focusout .field-input\": \"changeValue\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('edit_hidden', true)\n        this.model.on('change:group_info', this.update, this)\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n        this.$('.index-property-edit-wrap').hideIf(true)\n        this.$('.membership-property-edit-wrap').hideIf(true)\n        this.$('.description-edit-wrap').hideIf(true)\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.property-dropdown').dropdown(dropdown_settings);\n        this.$('.circle-avatar.dropdown-button').dropdown(dropdown_settings);\n        // this.name_field = new xabber.ContactNameRightWidget({\n        //     el: this.$('.name-wrap')[0],\n        //     model: this.model\n        // });\n        this.group_name_field = new xabber.GroupNameRightWidget({\n            el: this.$('.edit-group-name-wrap')[0],\n            model: this.model,\n            parent: this,\n        });\n        this.group_description_field = new xabber.GroupDescriptionRightWidget({\n            el: this.$('.edit-group-description-wrap')[0],\n            model: this.model,\n            parent: this,\n        });\n        this.update();\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {},\n            model, searchable, privacy;\n        if (info){\n            if (info.privacy === 'public')\n                privacy = xabber.getString(\"groupchat_public_group\");\n            if (info.privacy === 'incognito')\n                privacy = xabber.getString(\"groupchat_incognito_group\");\n            if (info.searchable === 'none') {\n                searchable = xabber.getString(\"groupchat_index_type_none\");\n                this.$('.property-wrap #none').prop(\"checked\", true);\n            }\n            if (info.searchable === 'local') {\n                searchable = xabber.getString(\"groupchat_index_type_local\");\n                this.$('.property-wrap #local').prop(\"checked\", true);\n            }\n            if (info.searchable === 'global') {\n                searchable = xabber.getString(\"groupchat_index_type_global\");\n                this.$('.property-wrap #global').prop(\"checked\", true);\n            }\n            if (info.model === 'open') {\n                model = xabber.getString(\"groupchat_membership_type_open\");\n                this.$('.property-wrap #open').prop(\"checked\", true);\n            }\n            if (info.model === 'member-only') {\n                model = xabber.getString(\"groupchat_membership_type_members_only\");\n                this.$('.property-wrap #member-only').prop(\"checked\", true);\n            }\n        }\n        this.$('.main-edit-header .block-name:not(.second-text)').text(privacy);\n        this.$('.membership-property span').text(model);\n        this.$('.index-property span').text(searchable);\n        this.$('.edit-group-name').text(info.name);\n        this.$('.edit-group-description').text(info.description);\n        this.group_name_field && this.group_name_field.updateValue(true);\n        this.group_description_field && this.group_description_field.updateValue(true);\n        this.$('.btn-save').switchClass('fade-out', true);\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values);\n        if (is_owner){\n            let iq_get_rights = $iq({type: 'get', to: this.model.get('full_jid') || this.model.get('jid')})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n            this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n                let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`)),\n                    restrictions_count = 0;\n                data_form.fields.forEach((field) => {\n                    if (field.type === 'fixed' || field.type === 'hidden')\n                        return;\n                    let expires = field.values ? field.values[0] : undefined;\n                    if (expires) {\n                        restrictions_count++;\n                    }\n                });\n                if (restrictions_count === 0)\n                    restrictions_count = '';\n                this.$('.btn-default-restrictions .edit-button-value').text(restrictions_count);\n            }, () => {\n                utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n            });\n        }\n        this.updateAvatar();\n\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    showMembershipProperty: function () {\n        this.$('.membership-property-edit-wrap').hideIf(false)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    showIndexProperty: function () {\n        this.$('.index-property-edit-wrap').hideIf(false)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    showDescriptionProperty: function () {\n        this.$('.description-edit-wrap').hideIf(false)\n        this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideProperty: function () {\n        this.$('.index-property-edit-wrap').hideIf(true)\n        this.$('.description-edit-wrap').hideIf(true)\n        this.$('.membership-property-edit-wrap').hideIf(true)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    revokeInvitation: function (ev) {\n        let $member_item = $(ev.target).closest('.invitations-user');\n        if (this.parent.children && this.parent.children.invitations)\n            this.parent.children.invitations.revokeInvitation(ev)\n    },\n\n    showBlockButton: function (ev) {\n        this.$('.edit-bottom-block .btn-add-block').hideIf(false);\n    },\n\n    showInviteButton: function (ev) {\n        this.$('.edit-bottom-block .btn-invite').hideIf(false);\n    },\n\n    unblockUser: function (ev) {\n        if (this.parent.children && this.parent.children.blocked)\n            this.parent.children.blocked.unblockUser(ev)\n    },\n\n    actionSelectedParticipants: function (ev) {\n        let selected = this.$('.list-item.selected');\n        selected.each((index, item) => {\n            if ($(item).hasClass('invitations-user') && this.parent.children && this.parent.children.invitations)\n                this.parent.children.invitations.revokeInvitationByElement($(item))\n            if ($(item).hasClass('blocked-user') && this.parent.children && this.parent.children.blocked)\n                this.parent.children.blocked.unblockUserByElement($(item))\n            if ($(item).hasClass('blocked-user') || $(item).hasClass('invitations-user'))\n                $(item).removeClass('selected')\n        });\n        this.updateRemoveParticipantButton();\n    },\n\n    blockId: function () {\n        if (this.parent.children && this.parent.children.blocked)\n            this.parent.children.blocked.blockId()\n    },\n\n    deselectParticipants: function (ev) {\n        this.$('.list-item.selected').removeClass('selected')\n        this.updateRemoveParticipantButton();\n    },\n\n    selectParticipant: function (ev) {\n        if ($(ev.target).parent().hasClass('revoke-invitation') || $(ev.target).parent().hasClass('unblock-user') ||\n            $(ev.target).hasClass('revoke-invitation') || $(ev.target).hasClass('unblock-user'))\n            return;\n        let $member_item = $(ev.target).closest('.list-item'),\n            is_selected = $member_item.hasClass('selected');\n        $member_item.switchClass('selected', !is_selected)\n        this.updateRemoveParticipantButton();\n    },\n\n    updateRemoveParticipantButton: function () {\n        let has_changes = this.$('.list-item.selected').length;\n        this.$('.block-name-panel.second-text span').html(has_changes)\n        if (has_changes) {\n            this.$('.participants-edit-back').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.participants-edit-back').removeClass('btn-back-panel').addClass('btn-reset-panel')\n            this.$('.block-name-panel:not(.second-text)').addClass('fade-out');\n            this.$('.edit-bottom-block .btn-invite').addClass('fade-out');\n            this.$('.edit-bottom-block .btn-add-block').addClass('fade-out');\n            this.$('.block-name-panel.second-text').removeClass('fade-out');\n            this.$('.btn-remove-selected').removeClass('fade-out');\n        }\n        else{\n            this.$('.participants-edit-back').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.participants-edit-back').addClass('btn-back-panel').removeClass('btn-reset-panel')\n            this.$('.block-name-panel:not(.second-text)').removeClass('fade-out');\n            this.$('.edit-bottom-block .btn-invite').removeClass('fade-out');\n            this.$('.edit-bottom-block .btn-add-block').removeClass('fade-out');\n            this.$('.block-name-panel.second-text').addClass('fade-out');\n            this.$('.btn-remove-selected').addClass('fade-out');\n        }\n    },\n\n    clickAvatarInput: function (ev) {\n        this.$('.circle-avatar input').click();\n    },\n\n    hidePanel: function () {\n        this.parent.getInvitations((response) => {\n            let inv_count = $(response).find('query').find('user').length;\n            if (inv_count === 0)\n                inv_count = '';\n            this.$('.invitations-variant .counted').html(inv_count);\n        });\n        this.model.getBlockedParticipants((response) => {\n            let blocked_count = $(response).find('query').children().length;\n            if (blocked_count === 0)\n                blocked_count = '';\n            this.$('.blocked-variant .counted').html(blocked_count);\n        });\n        this.$('.btn-back-panel').hideIf(true)\n        this.$('.block-name-panel').hideIf(true)\n        this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n        this.$('.edit-bottom-block .btn-invite').hideIf(true)\n        this.$('.btn-remove-selected').hideIf(true)\n        this.$('.participants-edit-wrap').hideIf(true)\n        // if (this.ps_container.length) {\n        //     this.ps_container.perfectScrollbar('destroy')\n        // }\n        // this.ps_container = this.$('.edit-wrap');\n        // if (this.ps_container.length) {\n        //     this.ps_container.perfectScrollbar(\n        //         _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n        //     );\n        // }\n        // this.hideEdit();\n    },\n\n    showPanel: function () {\n        this.$('.btn-back-panel').hideIf(false)\n        this.$('.block-name-panel').hideIf(false)\n        this.$('.btn-remove-selected').hideIf(false)\n        this.$('.participants-edit-wrap').hideIf(false)\n        this.updateRemoveParticipantButton();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.ps_container = this.$('.participants-edit-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    resetPanel: function () {\n        this.updateSaveButton()\n        this.showEdit()\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null;\n            if ((field.var in this.original_data_form_values) && this.original_data_form_values[field.var] != value) {\n                has_changes = true;\n            }\n        });\n        this.$('.btn-save').switchClass('fade-out', !has_changes);\n        this.$('.btn-qr-code').hideIf(has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.edit-header:not(.main-edit-header) .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.edit-header:not(.main-edit-header) .details-icon').removeClass('btn-back').addClass('btn-reset')\n            this.$('.edit-header:not(.main-edit-header) .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.edit-header:not(.main-edit-header) .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.edit-header:not(.main-edit-header) .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.edit-header:not(.main-edit-header) .details-icon').addClass('btn-back').removeClass('btn-reset')\n            this.$('.edit-header:not(.main-edit-header) .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.edit-header:not(.main-edit-header) .block-name.second-text').addClass('fade-out');\n        }\n        let info = this.model.get('group_info') || {};\n        if (info){\n            if (info.privacy === 'public')\n                this.$('.main-edit-header .block-name:not(.second-text)').html(xabber.getString(\"groupchat_public_group\"));\n            if (info.privacy === 'incognito')\n                this.$('.main-edit-header .block-name:not(.second-text)').html(xabber.getString(\"groupchat_incognito_group\"));\n        }\n    },\n\n    changeName: function (value) {\n        if (this.data_form && value){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'name')\n            if (!this.original_data_form_values.name)\n                this.original_data_form_values.name = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [value]\n            this.updateSaveButton()\n        }\n    },\n\n    changeDescription: function (value) {\n        if (this.data_form){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'description')\n            if (!this.original_data_form_values.description)\n                this.original_data_form_values.description = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [value]\n            this.updateSaveButton()\n        }\n    },\n\n    changeMembership: function (ev) {\n        let membership = $(ev.target).attr('id'),\n            membership_text;\n        if (this.data_form && membership){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'membership')\n            if (!this.original_data_form_values.membership)\n                this.original_data_form_values.membership = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [membership]\n            if (membership === 'open')\n                membership_text = xabber.getString(\"groupchat_membership_type_open\");\n            if (membership === 'member-only')\n                membership_text = xabber.getString(\"groupchat_membership_type_members_only\");\n            this.$('.membership-property span').text(membership_text);\n            this.updateSaveButton()\n        }\n    },\n\n    changeIndex: function (ev) {\n        let index = $(ev.target).attr('id'),\n            index_text;\n        if (this.data_form && index){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'index')\n            if (!this.original_data_form_values.index)\n                this.original_data_form_values.index = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [index]\n            if (index === 'none')\n                index_text = xabber.getString(\"groupchat_index_type_none\");\n            if (index === 'local')\n                index_text = xabber.getString(\"groupchat_index_type_local\");\n            if (index === 'global')\n                index_text = xabber.getString(\"groupchat_index_type_global\");\n            this.$('.index-property span').text(index_text);\n            this.updateSaveButton()\n        }\n    },\n\n\n    saveChanges: function() {\n        if (this.$('.btn-save').hasClass('fade-out'))\n            return;\n        this.$('.btn-save').addClass('fade-out')\n        this.group_name_field.$input.prop('disabled', true);\n        this.group_description_field.$input.prop('disabled', true);\n        this.$('.edit-save-preloader.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        let iq = $iq({type: 'set', to: this.model.get('full_jid') || this.model.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        iq = this.account.addDataFormToStanza(iq, this.data_form);\n        this.account.sendIQFast(iq, (result) => {\n            let $result  = $(result),\n                group_info = _.clone(this.model.get('group_info')),\n                attrs = {\n                    name: $result.find('field[var=\"name\"] value').text(),\n                    searchable: $result.find('field[var=\"index\"]').children('value').text(),\n                    model: $result.find('field[var=\"membership\"]').children('value').text(),\n                    description: $result.find('field[var=\"description\"] value').text(),\n                    status: $result.find('field[var=\"status\"]').children('value').text()\n                };\n            _.extend(group_info, attrs);\n            this.model.set('group_info', group_info);\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.hideProperty()\n            this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n            this.resetPanel()\n        }, (error) => {\n\n            let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n            utils.dialogs.error(err_text);\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.hideProperty()\n            this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n        });\n    },\n\n    showEdit: function (ev) {\n        let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        this.parent.$('.group-edit-preloader').html(env.templates.contacts.preloader())\n        this.account.sendIQFast(iq_get_properties, (properties) => {\n            this.data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.original_data_form_values = {}\n            this.model.set('edit_hidden', false);\n            this.parent.scrollToTop();\n            if (this.parent.ps_container.length) {\n                this.parent.ps_container.perfectScrollbar('destroy')\n            }\n            this.ps_container = this.$('.edit-wrap');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.update()\n            this.$('.group-property:not(.privacy-property)').removeClass('disabled')\n            this.group_name_field.$input.hideIf(false)\n            this.group_description_field.$input.hideIf(false)\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.$('.circle-avatar input').prop('disabled', false);\n            this.$('.set-groupchat-avatar-text').hideIf(false);\n            this.$('.group-property').removeClass('property-disabled');\n            this.$('.membership-property .details-icon-right').hideIf(false);\n            this.$('.index-property .details-icon-right').hideIf(false);\n            this.$('.circle-avatar .set-groupchat-avatar').hideIf(false);\n            this.$('.btn-edit').hideIf(false)\n            this.$('.edit-bottom-block').hideIf(false)\n            this.$('.btn-default-restrictions').hideIf(false)\n            this.$('.btn-delete-group').hideIf(false)\n            this.$('.btn-clear-history-chat').hideIf(false)\n            this.$('.btn-back-panel').hideIf(true)\n            this.$('.block-name-panel').hideIf(true)\n            this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n            this.$('.edit-bottom-block .btn-invite').hideIf(true)\n            this.$('.btn-remove-selected').hideIf(true)\n            this.$('.participants-edit-wrap').hideIf(true)\n            this.parent.getInvitations((response) => {\n                let inv_count = $(response).find('query').find('user').length;\n                if (inv_count === 0)\n                    inv_count = '';\n                this.$('.invitations-variant .counted').html(inv_count);\n            });\n            this.model.getBlockedParticipants((response) => {\n                let blocked_count = $(response).find('query').children().length;\n                if (blocked_count === 0)\n                    blocked_count = '';\n                this.$('.blocked-variant .counted').html(blocked_count);\n            });\n            this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n            this.parent.$('.group-edit-preloader').html('')\n            this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n            this.$('.tabs .indicator').remove();\n        }, () => {\n            this.model.set('edit_hidden', false);\n            this.parent.scrollToTop();\n            if (this.parent.ps_container.length) {\n                this.parent.ps_container.perfectScrollbar('destroy')\n            }\n            this.ps_container = this.$('.edit-wrap');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.update()\n            this.group_name_field.$input.prop('disabled', true);\n            this.group_description_field.$input.prop('disabled', true);\n            if (!this.group_description_field.$input.val())\n                this.group_description_field.$input.hideIf(true)\n            this.$('.circle-avatar input').prop('disabled', true);\n            this.$('.set-groupchat-avatar-text').hideIf(true);\n            this.$('.group-property').addClass('property-disabled');\n            this.$('.membership-property .details-icon-right').hideIf(true);\n            this.$('.index-property .details-icon-right').hideIf(true);\n            this.$('.circle-avatar .set-groupchat-avatar').hideIf(true);\n            this.$('.group-property:not(.privacy-property)').addClass('disabled')\n            this.$('.btn-edit').hideIf(true)\n            this.$('.edit-bottom-block').hideIf(true)\n            this.$('.btn-default-restrictions').hideIf(true)\n            this.$('.btn-delete-group').hideIf(true)\n            this.$('.btn-clear-history-chat').hideIf(true)\n            this.$('.btn-back-panel').hideIf(true)\n            this.$('.block-name-panel').hideIf(true)\n            this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n            this.$('.edit-bottom-block .btn-invite').hideIf(true)\n            this.$('.btn-remove-selected').hideIf(true)\n            this.$('.participants-edit-wrap').hideIf(true)\n            let info = this.model.get('group_info') || {};\n            this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n            this.parent.$('.group-edit-preloader').html('')\n            this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n            this.$('.tabs .indicator').remove();\n        });\n    },\n\n    hideEdit: function (ev) {\n        this.model.set('edit_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        };\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'));\n    },\n});\n\nxabber.ContactsBase = Backbone.Collection.extend({\n    model: xabber.Contact\n});\n\nxabber.GroupContacts = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.group = options.group;\n        this.on(\"change\", this.onContactChanged, this);\n    },\n\n    comparator: function (contact1, contact2) {\n        if (xabber.settings.roster.sorting === 'online-first') {\n            let s1 = contact1.get('status'),\n                s2 = contact2.get('status'),\n                sw1 = constants.STATUS_WEIGHTS[s1],\n                sw2 = constants.STATUS_WEIGHTS[s2],\n                sw1_offline = sw1 >= constants.STATUS_WEIGHTS.offline,\n                sw2_offline = sw2 >= constants.STATUS_WEIGHTS.offline;\n            if (sw1_offline ^ sw2_offline) {\n                return sw1_offline ? 1 : -1;\n            }\n        }\n        let name1, name2;\n        name1 = contact1.get('name').toLowerCase();\n        name2 = contact2.get('name').toLowerCase();\n        return name1 < name2 ? -1 : (name1 > name2 ? 1 : 0);\n    },\n\n    onContactChanged: function (contact) {\n        let changed = contact.changed;\n        if (_.has(changed, 'name') || _.has(changed, 'status_updated')) {\n            this.sort();\n            this.trigger('update_contact_item', contact);\n        }\n    }\n});\n\nxabber.Group = Backbone.Model.extend({\n    defaults: {\n        counter: {all: 0, online: 0}\n    },\n\n    initialize: function (attrs, options) {\n        this.account = options.account;\n        attrs.name || (attrs.name = attrs.id);\n        this.set(attrs);\n        this._settings = this.account.groups_settings.get(attrs.name);\n        if (!this._settings)\n            this._settings = this.account.groups_settings.create({name: attrs.name});\n        this.settings = this._settings.attributes;\n        this.contacts = new xabber.GroupContacts(null, {group: this});\n        this.settings_view = new xabber.GroupSettingsView({model: this});\n        this.contacts.on(\"add update_contact_item\", this.updateCounter, this);\n        this.contacts.on(\"destroy\", this.onContactRemoved, this);\n        xabber._roster_settings.on(\"change\", this.onChangedRosterSettings, this);\n    },\n\n    isSpecial: function () {\n        return _.isNumber(this.get('id'));\n    },\n\n    updateCounter: function () {\n        let all = this.contacts.length,\n            online = all - this.contacts.where({status: 'offline'}).length;\n        this.set('counter', {all: all, online: online});\n    },\n\n    renameGroup: function (new_name) {\n        let name = this.get('name'),\n            attrs = _.clone(this.settings);\n        attrs.name = new_name;\n        this._settings.destroy();\n        this._settings = this.account.groups_settings.create(attrs);\n        this.settings = this._settings.attributes;\n        this.set({id: new_name, name: new_name});\n        this.trigger('rename', this, name);\n        _.each(_.clone(this.contacts.models), function (contact) {\n            let groups = _.clone(contact.get('groups')),\n                index = groups.indexOf(name);\n            if (index >= 0) {\n                groups.splice(index, 1);\n            }\n            index = groups.indexOf(new_name);\n            if (index < 0) {\n                groups.push(new_name);\n            }\n            contact.pushInRoster({groups: groups});\n        });\n    },\n\n    deleteGroup: function () {\n        let name = this.get('name');\n        this._settings.destroy();\n        _.each(_.clone(this.contacts.models), function (contact) {\n            let groups = _.clone(contact.get('groups')),\n                index = groups.indexOf(name);\n            if (index >= 0) {\n                groups.splice(index, 1);\n            }\n            contact.pushInRoster({groups: groups});\n        });\n    },\n\n    removeContact: function (contact) {\n        if (this.contacts.get(contact)) {\n            this.contacts.remove(contact);\n            this.onContactRemoved(contact);\n        }\n    },\n\n    onContactRemoved: function (contact) {\n        this.updateCounter();\n        this.trigger('remove_contact', contact);\n        this.contacts.length || this.destroy();\n    },\n\n    onChangedRosterSettings: function () {\n        let changed = xabber._roster_settings.changed;\n        if (_.has(changed, 'show_offline')) {\n            this._settings.trigger('change:show_offline');\n        }\n        if (_.has(changed, 'sorting')) {\n            this.contacts.sort();\n            this._settings.trigger('change:sorting');\n        }\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    }\n});\n\nxabber.GroupView = xabber.BasicView.extend({\n    className: 'roster-group',\n    events: {\n        \"click .group-head\": \"toggle\",\n        \"click .group-head .group-icon\": \"showGroupSettings\",\n        \"mouseover .group-head\": \"showSettingsIcon\",\n        \"mouseleave .group-head\": \"updateGroupIcon\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.updateName();\n        this.updateGroupIcon();\n        this.updateMembersCounter();\n        this.model.contacts.on(\"add\", this.onContactAdded, this);\n        this.model.on(\"remove_contact\", this.onContactRemoved, this);\n        this.model.contacts.on(\"update_contact_item\", this.updateContactItem, this);\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:counter\", this.updateMembersCounter, this);\n        this.model._settings.on(\"change:show_offline\", this.onChangedOfflineSetting, this);\n        this.model._settings.on(\"change:sorting\", this.onChangedSortingSetting, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$el.switchClass('shrank', !expanded);\n        this.$('.arrow').switchClass('mdi-chevron-down', expanded);\n        this.$('.arrow').switchClass('mdi-chevron-right', !expanded);\n        this.$('.roster-contact').showIf(expanded);\n        this.parent.parent.onListChanged();\n    },\n\n    updateGroupIcon: function () {\n        let mdi_icon, show_offline = this.model.settings.show_offline;\n        if (show_offline === 'default') {\n            mdi_icon = 'settings';\n        } else if (show_offline === 'yes') {\n            mdi_icon = 'group-filled';\n        } else if (show_offline === 'no') {\n            mdi_icon = 'group-outline';\n        }\n        this.$('.group-icon').attr('data-mdi', mdi_icon).hideIf(mdi_icon === 'settings');\n    },\n\n    updateName: function () {\n        this.$('.group-name').text(this.model.get('name'));\n    },\n\n    updateMembersCounter: function () {\n        let counter = this.model.get('counter');\n        this.$('.participant-counter').text('('+counter.online+'/'+counter.all+')');\n    },\n\n    onContactAdded: function (contact) {\n        let view = this.addChild(contact.get('jid'), this.item_view, {model: contact});\n        this.updateContactItem(contact);\n    },\n\n    onContactRemoved: function (contact) {\n        this.removeChild(contact.get('jid'));\n        this.parent.parent.onListChanged();\n    },\n\n    updateContactItem: function (contact) {\n        let view = this.child(contact.get('jid'));\n        if (!view) return;\n        let roster_settings = xabber.settings.roster,\n            group_settings = this.model.settings,\n            is_default_show_offline = group_settings.show_offline === 'default',\n            show_offline = group_settings.show_offline === 'yes' ||\n                (is_default_show_offline && roster_settings.show_offline === 'yes'),\n            is_offline = constants.STATUS_WEIGHTS[contact.get('status')] >= 6;\n\n        view.$el.switchClass('invisible', is_offline && !show_offline).detach();\n        let index = this.model.contacts.indexOf(contact);\n        if (index === 0) {\n            this.$('.group-head').after(view.$el);\n        } else {\n            this.$('.roster-contact').eq(index - 1).after(view.$el);\n        }\n        view.$el.showIf(this.data.get('expanded'));\n        this.parent.parent.onListChanged();\n        return view;\n    },\n\n    showSettingsIcon: function () {\n        this.$('.group-icon').attr('data-mdi', 'settings').removeClass('hidden');\n    },\n\n    showGroupSettings: function (ev) {\n        ev.stopPropagation();\n        this.model.showSettings();\n    },\n\n    onChangedOfflineSetting: function () {\n        this.updateGroupIcon();\n        let roster_settings = xabber.settings.roster,\n            group_settings = this.model.settings,\n            is_default_show_offline = group_settings.show_offline === 'default',\n            show_offline = group_settings.show_offline === 'yes' ||\n                (is_default_show_offline && roster_settings.show_offline === 'yes');\n        _.each(this.children, function (view) {\n            let is_offline = constants.STATUS_WEIGHTS[view.model.get('status')] >= 6;\n            view.$el.switchClass('invisible', is_offline && !show_offline);\n        });\n        this.parent.parent.onListChanged();\n    },\n\n    onChangedSortingSetting: function () {\n        _.each(this.children, function (view) { view.$el.detach(); });\n        this.model.contacts.each((c) => { this.updateContactItem(c); });\n        this.parent.parent.onListChanged();\n    }\n});\n\nxabber.GroupRightView = xabber.GroupView.extend({\n    template: templates.group_right,\n    item_view: xabber.ContactItemRightView,\n\n    __initialize: function () {\n        this.data.set('expanded', this.model.settings.expanded);\n    },\n\n    toggle: function () {\n        let expanded = !this.data.get('expanded');\n        this.data.set('expanded', expanded);\n        this.model._settings.save('expanded', expanded);\n    }\n});\n\nxabber.GroupLeftView = xabber.GroupView.extend({\n    template: templates.group_left,\n    item_view: xabber.ContactItemLeftView,\n\n    __initialize: function () {\n        this.data.set('expanded', true);\n    },\n\n    toggle: function (ev) {\n        ev.stopPropagation();\n        this.data.set('expanded', !this.data.get('expanded'));\n    }\n});\n\nxabber.GroupSettingsView = xabber.BasicView.extend({\n    className: 'modal main-modal group-settings',\n    template: templates.group_settings,\n    ps_selector: '.modal-content',\n    avatar_size: constants.AVATAR_SIZES.GROUP_SETTINGS,\n\n    events: {\n        \"change .offline input[type=radio][name=offline]\": \"setOffline\",\n        \"click .btn-apply\": \"applySettings\",\n        \"click .btn-delete\": \"deleteGroup\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this._settings = this.model._settings;\n        let name = this.model.get('name');\n        if (this.model.isSpecial()) {\n            this.$('.group-name input').attr('readonly', true);\n            this.$('.btn-delete').addClass('hidden');\n        }\n        this.model.on(\"destroy\", this.onDestroy, this);\n    },\n\n    render: function () {\n        this.$('.group-name input').val(this.model.get('name'));\n        this.$('.group-name .errors').addClass('hidden');\n        this.$('.offline input[type=radio][name=offline][value='+\n            (this.model.settings.show_offline)+']').prop('checked', true);\n        this.$el.openModal({\n            ready: function () {\n                Materialize.updateTextFields();\n            },\n            complete: this.hide.bind(this)\n        });\n    },\n\n    setOffline: function (ev) {\n        this.model._settings.save('show_offline', ev.target.value);\n    },\n\n    validateName: function (name) {\n        if (!name) {\n            return xabber.getString(\"dialog_add_circle__error__text_input_name\");\n        }\n        if (this.model.collection.get(name)) {\n            return xabber.getString(\"dialog_add_circle__error__text_wrong_name\");\n        }\n    },\n\n    applySettings: function () {\n        let new_name = this.$('.group-name input').val();\n        if (new_name !== this.model.get('name')) {\n            let name_error = this.validateName(new_name);\n            if (name_error) {\n                this.$('.group-name .errors').text(name_error).removeClass('hidden');\n                return;\n            } else {\n                this.model.renameGroup(new_name);\n            }\n        }\n        this.close();\n    },\n\n    deleteGroup: function () {\n        let name = this.model.get('name');\n        utils.dialogs.ask(xabber.getString(\"circle_remove\"), xabber.getString(\"circle_remove_confirm\", [name]), null, { ok_button_text: xabber.getString(\"remove\")})\n            .done((result) => {\n                result && this.model.deleteGroup();\n            });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    onDestroy: function () {\n        this.$el.closeModal({ complete: this.remove.bind(this) });\n    }\n});\n\nxabber.Groups = Backbone.Collection.extend({\n    model: xabber.Group,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.on(\"change:id\", this.sort, this);\n        this.account.on('render_settings', this.render, this);\n        this.account.on('render_single_settings', this.renderSingleAccount, this);\n    },\n\n    comparator: function (a, b) {\n        if (a.isSpecial() === b.isSpecial()) {\n            return a.get('id') < b.get('id') ? -1 : 1;\n        }\n        return a.isSpecial() ? 1 : -1;\n    },\n\n    notSpecial: function () {\n        return this.filter(function (group) { return !group.isSpecial(); });\n    },\n\n    onGroupAdded: function (group) {\n        group.acc_view = new xabber.AccountGroupView({model: group});\n    },\n\n    onGroupAddedSingleAccount: function (group) {\n        group.acc_view = new xabber.AccountGroupView({model: group, single_account: this.single_account});\n    },\n\n    render: function () {\n        this.on(\"add\", this.onGroupAdded, this);\n        this.models.forEach((group) => {\n            group.acc_view = new xabber.AccountGroupView({model: group});\n        });\n    },\n\n    renderSingleAccount: function (single_account) {\n        single_account.$('.groups').html('');\n        !this.rendered_once && this.on(\"add\", this.onGroupAddedSingleAccount, this);\n        this.single_account = single_account\n        this.rendered_once = true\n        this.models.forEach((group) => {\n            group.acc_view = new xabber.AccountGroupView({model: group, single_account: single_account});\n        });\n    }\n});\n\nxabber.Contacts = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on(\"deactivate destroy\", this.removeAllContacts, this);\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    },\n\n    mergeContact: function (attrs) {\n        if (typeof attrs !== \"object\") {\n            attrs = {jid: attrs};\n        }\n        let contact = this.get(attrs.jid);\n        if (contact) {\n            if (attrs.avatar) {\n                attrs.image = attrs.avatar;\n                delete attrs.avatar;\n                contact.cached_image = Images.getCachedImage(attrs.image);\n            }\n            if (attrs.group_chat && attrs.is_deleted) {\n                delete attrs.group_chat;\n            }\n            contact.set(attrs);\n        } else {\n            contact = this.create(attrs, {account: this.account});\n        }\n        return contact;\n    },\n\n    blockContact: function (jid, callback, errback) {\n        let iq = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: jid});\n        this.account.sendIQFast(iq, callback, errback);\n    },\n\n    unblockContact: function (jid, callback, errback) {\n        let iq = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: jid});\n        this.account.sendIQFast(iq, callback, errback);\n    },\n\n    removeAllContacts: function () {\n        _.each(_.clone(this.models), function (contact) {\n            contact.destroy();\n        });\n        this.account.trigger('remove_saved_chat');\n    },\n\n    handlePresence: function (presence, jid) {\n        let contact = this.mergeContact(jid);\n        contact.handlePresence(presence);\n    }\n});\n\nxabber.BlockList = Backbone.Model.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.list = {};\n        this.contacts = this.account.contacts;\n        this.contacts.on(\"add_to_blocklist\", this.onContactAdded, this);\n        this.contacts.on(\"remove_from_blocklist\", this.onContactRemoved, this);\n    },\n\n    length: function () {\n        return Object.keys(this.list).length;\n    },\n\n    isBlocked: function (jid) {\n        return this.list.hasOwnProperty(jid);\n    },\n\n    onContactRemoved: function (jid) {\n        delete this.list[jid];\n    },\n\n    onContactAdded: function (attrs) {\n        this.list[attrs.jid] = attrs;\n    },\n\n    registerHandler: function () {\n        this.account.connection.deleteHandler(this._stanza_handler);\n        this._stanza_handler = this.account.connection.addHandler(\n            this.onBlockingIQ.bind(this),\n            Strophe.NS.BLOCKING, 'iq', \"set\", null, this.account.get('jid')\n        );\n    },\n\n    getFromServer: function () {\n        let iq = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING});\n        this.account.sendIQFast(iq, this.onBlockingIQ.bind(this));\n    },\n\n    onBlockingIQ: function (iq) {\n        let $elem = $(iq).find(`[xmlns=\"${Strophe.NS.BLOCKING}\"]`),\n            tag = $elem[0].tagName.toLowerCase(),\n            blocked = tag.startsWith('block');\n        $elem.find('item').each((idx, item) => {\n            let jid = item.getAttribute('jid'),\n                resource = Strophe.getResourceFromJid(jid),\n                domain = Strophe.getDomainFromJid(jid),\n                attrs = {jid},\n                contact = this.contacts.get(jid);\n            resource && (attrs.resource = true);\n            (domain === jid) && (attrs.domain = true);\n            if (blocked)\n                this.contacts.trigger(\"add_to_blocklist\", attrs);\n            else {\n                this.contacts.trigger(\"remove_from_blocklist\", jid);\n                contact && contact.trigger(\"remove_from_blocklist\", contact);\n            }\n            contact && contact.set('blocked', blocked);\n        });\n        return true;\n    }\n});\n\nxabber.Roster = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.roster_version = options.roster_version || 0;\n        this.groups = this.account.groups;\n        this.contacts = this.account.contacts;\n        this.contacts.on(\"add_to_roster\", this.onContactAdded, this);\n        this.contacts.on(\"change_in_roster\", this.onContactChanged, this);\n        this.contacts.on(\"remove_from_roster\", this.onContactRemoved, this);\n    },\n\n    update: function (contact, event) {\n        let contains = contact.get('in_roster') || contact.get('known');\n        if (contains) {\n            if (!this.get(contact)) {\n                this.add(contact);\n                contact.trigger(\"add_to_roster\", contact);\n            } else if (event === 'change') {\n                contact.trigger(\"change_in_roster\", contact);\n            }\n        } else if (this.get(contact)) {\n            this.remove(contact);\n            contact.trigger(\"remove_from_roster\", contact);\n        }\n    },\n\n    onContactAdded: function (contact) {\n        if (!contact.get('in_roster'))\n            return;\n        let groups = contact.get('groups');\n        if (!groups.length) {\n            this.addContactToGroup(contact, constants.GENERAL_GROUP_ID);\n        } else {\n            _.each(groups, _.bind(this.addContactToGroup, this, contact));\n        }\n    },\n\n    onContactChanged: function (contact) {\n        let changed = contact.changed,\n            known_changed = _.has(changed, 'known'),\n            in_roster_changed = _.has(changed, 'in_roster'),\n            groups_changed = _.has(changed, 'groups');\n        if (in_roster_changed || known_changed || groups_changed) {\n            let groups;\n            if (contact.get('in_roster')) {\n                groups = _.clone(contact.get('groups'));\n                if (!groups.length) {\n                    groups.push(constants.GENERAL_GROUP_ID);\n                }\n            } else if (contact.get('known')) {\n                groups = [];\n            }\n            // TODO: optimize\n            let groups_to_remove = this.groups.filter(function (group) {\n                return !_.contains(groups, group.get('id'));\n            });\n            _.each(groups_to_remove, function (group) {\n                group.removeContact(contact);\n            });\n            _.each(groups, _.bind(this.addContactToGroup, this, contact));\n            contact.trigger('update_groups');\n        }\n    },\n\n    onContactRemoved: function (contact) {\n        _.each(this.groups.filter(), function (group) {\n            group.removeContact(contact);\n        });\n    },\n\n    getGroup: function (name) {\n        let group = this.groups.get(name);\n        if (group)\n            return group;\n        let attrs = {id: name};\n        if (name === constants.GENERAL_GROUP_ID) {\n            attrs.name = xabber.settings.roster.general_group_name;\n        } else if (name === constants.NON_ROSTER_GROUP_ID) {\n            attrs.name = xabber.settings.roster.non_roster_group_name;\n        }\n        return this.groups.create(attrs, {account: this.account});\n    },\n\n    addContactToGroup: function (contact, name) {\n        let group = this.getGroup(name);\n        group.contacts.add(contact);\n    },\n\n    registerHandler: function () {\n        this.account.connection.deleteHandler(this._stanza_handler);\n        this._stanza_handler = this.account.connection.addHandler(\n            this.onRosterIQ.bind(this),\n            Strophe.NS.ROSTER, 'iq', \"set\", null, this.account.get('jid')\n        );\n    },\n\n    syncFromServer: function (options, synchronization_with_stamp, is_first_sync) {\n        options = options || {};\n        let request_attrs = {xmlns: Strophe.NS.SYNCHRONIZATION},\n            cached_conversations_exclude = options.cached_conversations_exclude || [];\n        if (options.stamp)\n            request_attrs.stamp = options.stamp;\n        delete(options.stamp);\n        delete(options.cached_conversations_exclude);\n        let iq = $iq({type: 'get'}).c('query', request_attrs).cnode(new Strophe.RSM(options).toXML());\n        this.account.sendFast(iq, (response) => {\n            this.onSyncIQ(response, request_attrs.stamp, synchronization_with_stamp, is_first_sync, options.last_version_sync, cached_conversations_exclude).then(() => {\n            });\n        });\n    },\n\n    syncCachedConversations: function (iq, request_with_stamp, is_first_sync, cached_conversations) {\n        $(cached_conversations).each((idx, item) => {\n            this.syncConversation(null, null, item.conversation, is_first_sync);\n        });\n    },\n\n    syncConversations: function (iq, request_with_stamp, is_first_sync, cached_conversations) {\n        $(iq).find('conversation').each((idx, item) => {\n            this.syncConversation(iq, request_with_stamp, item, is_first_sync, cached_conversations);\n        });\n    },\n\n    syncConversation: function (iq, request_with_stamp, item, is_first_sync, cached_conversations) {\n        if (!$(item).length){\n            return;\n        }\n        if (!iq)\n            item = $($.parseXML(item)).find('conversation')[0];\n        let $item = $(item),\n            jid = $item.attr('jid'), saved = false;\n        if (cached_conversations){\n            $(cached_conversations).each((idx, conv) => {\n                if (!(conv.account_conversation_type && conv.account_conversation_type.split))\n                    return;\n                let cached_conv_type_jid = conv.account_conversation_type.split('/')[0];\n                if ((cached_conv_type_jid === jid) && (conv.account_conversation_type !== ($(item).attr('jid') +  '/' + $(item).attr('type')))){\n                    if ($item.attr('type') === Strophe.NS.GROUP_CHAT || conv.account_conversation_type.includes(Strophe.NS.GROUP_CHAT)){\n                        this.account.cached_sync_conversations.removeFromCachedConversations(conv.account_conversation_type);\n                    }\n                };\n            });\n        }\n        if (jid === this.account.get('jid'))\n            saved = true;\n        if ($item.attr('type') === Strophe.NS.SYNCHRONIZATION_OLD_OMEMO)\n            return true;\n        let $sync_metadata = $item.children('metadata[node=\"' + Strophe.NS.SYNCHRONIZATION + '\"]'),\n            type = $item.attr('type'),\n            presence = $item.children('presence'),\n            $group_metadata = $item.children('metadata[node=\"' + Strophe.NS.GROUP_CHAT + '\"]'),\n            is_incognito =  type === Strophe.NS.GROUP_CHAT && $group_metadata.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').children('privacy').text() === 'incognito',\n            is_private = is_incognito && $group_metadata.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').children('parent').text(),\n            is_group_chat =  type === Strophe.NS.GROUP_CHAT || is_private || is_incognito,\n            encrypted = type === Strophe.NS.SYNCHRONIZATION_OMEMO,\n            contact = !saved && this.contacts.mergeContact({jid: jid, group_chat: is_group_chat, private_chat: is_private, incognito_chat: is_incognito, is_deleted: $item.attr('status') === 'deleted'}),\n            chat = saved ? this.account.chats.getSavedChat() : this.account.chats.getChat(contact, encrypted && 'encrypted', true),\n            message = $sync_metadata.children('last-message').children('message'),\n            current_call = $item.children('metadata[node=\"' + Strophe.NS.JINGLE_MSG + '\"]').children('call'),\n            $unread_messages = $sync_metadata.children('unread'),\n            chat_timestamp = Math.trunc(Number($item.attr('stamp'))/1000),\n            last_read_msg = $unread_messages.attr('after'),\n            last_delivered_msg = $sync_metadata.children('delivered').attr('id'),\n            last_displayed_msg = $sync_metadata.children('displayed').attr('id'),\n            unread_msgs_count = Number($unread_messages.attr('count')) || 0,\n            is_invite =  message.find('invite').length,\n            msg_retraction_version = $item.children('metadata[node=\"' + Strophe.NS.REWRITE + '\"]').children('retract').attr('version'),\n            msg, options = {synced_msg: true,},\n            current_chat_timestamp = chat.get('last_sync_timestamp');\n        if (current_chat_timestamp && current_chat_timestamp > chat_timestamp){\n            console.log('old_sync_conv');\n            console.log(item);\n            return;\n        }\n        chat.set('last_sync_timestamp', chat_timestamp);\n        if (message.children('stanza-id').length\n            && message.children('stanza-id').attr('id')\n            && chat.retracted_msg_id_list.includes(message.children('stanza-id').attr('id'))){\n            return;\n        };\n        chat.set('sync_type', type);\n        (iq && !($item.attr('status') === 'deleted')) && this.account.cached_sync_conversations.putInCachedConversations({\n            account_conversation_type: $(item).attr('jid') +  '/' + $(item).attr('type'),\n            conversation: item.outerHTML,\n        });\n        if (!chat.item_view.content && (is_invite || encrypted && this.account.omemo)) {\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        }\n        if ($item.attr('pinned') || $item.attr('pinned') === '0'){\n            chat.set('pinned', $item.attr('pinned'));\n        }\n        if (encrypted && this.account.omemo) {\n            chat.set('timestamp', chat_timestamp);\n            chat.set('opened', true);\n            if (!(chat.last_message && chat.last_message.get('message')))\n                chat.item_view.updateEncryptedChat();\n        }\n        if (!saved) {\n            if ($item.attr('mute') || $item.attr('mute') === '0') {\n                if ($item.attr('mute') < (Date.now() / 1000))\n                    chat.set('muted', false);\n                else\n                    chat.set('muted', $item.attr('mute'));\n                this.account.chat_settings.updateMutedList(contact.get('jid'), $item.attr('mute'));\n                if (contact.details_view_right)\n                    contact.details_view_right.updateNotifications();\n            } else {\n                chat.set('muted', false);\n            }\n        }\n        if ($item.attr('status') === 'archived')\n            chat.set('archived', true);\n        else if ($item.attr('status') === 'active' && !saved)\n            chat.set('archived', false);\n        if ($item.attr('status') === 'deleted') {\n            chat.get('display') && xabber.body.setScreen(xabber.body.screen.get('name'), {right_contact: '', right: undefined});\n            chat.set('opened', false);\n            chat.set('const_unread', 0);\n            this.account.cached_sync_conversations.removeFromCachedConversations($(item).attr('jid') +  '/' + $(item).attr('type'));\n            this.account.chat_settings.updateGroupChatsList(contact.get('jid'), false);\n            xabber.toolbar_view.recountAllMessageCounter();\n            xabber.chats_view.clearSearch();\n            contact && contact.set('sync_deleted', true);\n            if (is_group_chat) {\n                contact && contact.set('in_roster', false);\n                contact && contact.set('known', false);\n                contact && contact.set('removed', true);\n                this.account.cached_roster.removeFromRoster(jid);\n                contact.participants && contact.participants.reset();\n                this.account.groupchat_settings.resetParticipantsList(contact.get('jid'));\n            }\n        }\n        else\n            contact && contact.set('sync_deleted', false);\n        if (current_call.length) {\n            let $jingle_message = current_call.children('message'),\n                full_jid = $jingle_message.attr('from'),\n                session_id = $jingle_message.children('propose').attr('id');\n            chat.getCallingAvailability(full_jid, session_id, () => {\n                if (xabber.current_voip_call) {\n                    let reason = Strophe.getBareJidFromJid(full_jid) === Strophe.getBareJidFromJid(xabber.current_voip_call.get('contact_full_jid')) ? 'device_busy' : 'busy';\n                    chat.sendReject({session_id: session_id, reason: reason});\n                    chat.messages.createSystemMessage({\n                        from_jid: this.account.get('jid'),\n                        message: xabber.getString(\"jingle__system_message__cancelled_call\")\n                    });\n                } else {\n                    chat.initIncomingCall(full_jid, session_id);\n                }\n            });\n        }\n        chat.set('last_delivered_id', last_delivered_msg);\n        chat.set('last_displayed_id', last_displayed_msg);\n        chat.set('last_read_msg', last_read_msg);\n        chat.trigger('update_last_read_msg', {sync_update: true});\n        if (!message.length) {\n            chat.set('timestamp', chat_timestamp);\n            if (!(Number(last_delivered_msg) || Number(last_displayed_msg) || Number(last_read_msg))\n                && !chat.item_view.content && !chat.get('group_chat')){\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n            }\n            chat.item_view.updateEmptyChat();\n        }\n        if (request_with_stamp && chat.retraction_version !== 0 && chat.retraction_version < msg_retraction_version)\n            chat.trigger(\"get_retractions_list\");\n        msg_retraction_version && (chat.retraction_version = msg_retraction_version);\n        if (request_with_stamp && chat.item_view && chat.item_view.content && !is_invite) {\n            chat.trigger('get_missed_history', request_with_stamp/1000);\n        }\n        unread_msgs_count && (options.is_unread = true);\n        options.delay = message.children('time');\n        (unread_msgs_count == 0) && (options.sync_timestamp = chat_timestamp);\n        message.length && (msg = this.account.chats.receiveChatMessage(message, options));\n        if (!(encrypted && !this.account.omemo)){\n            chat.messages_unread.reset();\n            chat.set('unread', 0);\n            chat.set('const_unread', unread_msgs_count);\n        }\n        if (msg) {\n            if (!msg.get('is_unread') && $unread_messages.attr('count') > 0 && !msg.isSenderMe() && !(msg.get('type') === 'system') && ($unread_messages.attr('after') < msg.get('stanza_id') || $unread_messages.attr('after') < msg.get('contact_stanza_id')))//TODO: change to timestamp checking\n                msg.set('is_unread', true);\n            if(!(is_invite || encrypted && this.account.omemo)) {\n                if (msg.isSenderMe() && msg.get('stanza_id') == last_displayed_msg)\n                    msg.set('state', constants.MSG_DISPLAYED);\n                else if (msg.isSenderMe() && msg.get('stanza_id') == last_delivered_msg)\n                    msg.set('state', constants.MSG_DELIVERED);\n                this.account.messages.add(msg);\n                if ((chat.last_message && (msg.get('timestamp') > chat.last_message.get('timestamp'))) || !chat.last_message){\n                    chat.last_message = msg;\n                    chat.item_view.updateLastMessage(msg);\n                    msg.get('stanza_id') && chat.set('synced_msg', msg);\n                }\n            }\n            chat.set('first_archive_id', msg.get('stanza_id'));\n        }\n        if (presence.length)\n            contact && contact.handlePresence(presence[0]);\n        else {\n            contact && contact.set('subscription_request_in', false)\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    onSyncIQ: async function (iq, request_with_stamp, synchronization_with_stamp, is_first_sync, is_last_sync, cached_conversations_exclude) {\n        let sync_timestamp = Number($(iq).children(`query[xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).attr('stamp')),\n            sync_rsm_after = $(iq).find(`query set[xmlns=\"${Strophe.NS.RSM}\"]`).children('last').text();\n        this.account.last_msg_timestamp = Math.round(sync_timestamp/1000);\n        let last_chat_msg_id = $(iq).find('set last');\n        if (!request_with_stamp)\n            last_chat_msg_id.length ? (this.last_chat_msg_id = last_chat_msg_id.text()) : (this.conversations_loaded = true);\n        this.account.set('last_sync', sync_timestamp);\n        this.account.settings.update_settings({last_sync_timestamp: sync_timestamp});\n        xabber.chats_view.hideChatsFeedback();\n        if (!request_with_stamp)\n            this.account.chats.getSavedChat();\n        if (is_first_sync)\n            this.account.set('first_sync', sync_timestamp);\n        if (!$(iq).find('conversation').length || $(iq).find('conversation').length < constants.SYNCHRONIZATION_RSM_MAX ){\n            this.account.cached_sync_conversations.getAllFromCachedConversations((res) => {\n                if (!is_last_sync){\n                    cached_conversations_exclude = cached_conversations_exclude.concat($(iq).find('conversation').map(function () {\n                        return $(this).attr('jid') +  '/' + $(this).attr('type');\n                    }).toArray());\n                    res = res.filter(item => !cached_conversations_exclude.includes(item.account_conversation_type));\n                    this.syncCachedConversations(null, request_with_stamp, is_first_sync, res);\n                }\n                this.syncConversations(iq, request_with_stamp, is_first_sync, res);\n                this.account.cached_sync_conversations.putInCachedConversations({\n                    account_conversation_type: 'last_sync_timestamp',\n                    timestamp: sync_timestamp,\n                });\n                if (!is_last_sync){\n                    this.account.sendPresence();\n                    let saved_chat = this.account.chats.getSavedChat();\n                    saved_chat.set('opened', true);\n                    saved_chat.item_view.updateLastMessage();\n                    this.account.getAllMessageRetractions((result) => {\n                        let retract_version = $(result).find(`query[xmlns=\"${Strophe.NS.REWRITE}\"]`).attr('version');\n                        if (retract_version > this.account.retraction_version)\n                            this.account.retraction_version = retract_version;\n                    })\n                    this.account.get('first_sync') && this.syncFromServer({stamp: this.account.get('first_sync'), max: constants.SYNCHRONIZATION_RSM_MAX, last_version_sync: true}, true);\n                }\n            });\n        }\n        else if ($(iq).find('conversation').length) {\n            this.account.cached_sync_conversations.getAllFromCachedConversations((res) => {\n                cached_conversations_exclude = cached_conversations_exclude.concat($(iq).find('conversation').map(function () {\n                    return $(this).attr('jid') +  '/' + $(this).attr('type');\n                }).toArray());\n                this.syncConversations(iq, request_with_stamp, is_first_sync, res);\n                let sync_options = {max: constants.SYNCHRONIZATION_RSM_MAX, after: sync_rsm_after};\n                if (request_with_stamp)\n                    sync_options.stamp = request_with_stamp;\n                if (is_last_sync)\n                    sync_options.last_version_sync = true;\n                if (cached_conversations_exclude && cached_conversations_exclude.length)\n                    sync_options.cached_conversations_exclude = cached_conversations_exclude;\n                this.syncFromServer(sync_options);\n            });\n        }\n    },\n\n    getRoster: function () {\n        let request_ver = this.roster_version;\n        this.account.cached_roster.getAllFromRoster((roster_items) => {\n            // $(roster_items).each((idx, roster_item) => {\n            //     this.contacts.mergeContact(roster_item);\n            // });\n            if (!roster_items.length && request_ver != 0) {\n                this.roster_version = 0;\n            }\n            this.getFromServer();\n        });\n    },\n\n    getFromServer: function () {\n        let iq = $iq({type: 'get'}).c('query', {xmlns: Strophe.NS.ROSTER, ver: this.roster_version});\n        this.account.sendIQFast(iq, (iq) => {\n            this.onRosterIQ(iq);\n            this.account.dfd_presence.resolve();\n        });\n    },\n\n    onRosterIQ: function (iq) {\n        let new_roster_version = $(iq).children('query').attr('ver'),\n            iq_type = $(iq).attr('type');\n        $(iq).children('query').find('item').each((idx, item) => {\n            this.onRosterItem(item, iq_type);\n        });\n        if (iq.getAttribute('type') === 'set') {\n            this.account.onSetIQResult(iq);\n        }\n        else {\n            if (iq.getAttribute('type') === 'result') {\n                new_roster_version && (this.roster_version = new_roster_version);\n                this.account.cached_roster.putInRoster({\n                    jid: 'roster_version',\n                    is_version: true,\n                    version: this.roster_version\n                });\n            }\n        }\n        return true;\n    },\n\n    onRosterItem: function (item, iq_type) {\n        let jid = item.getAttribute('jid'), to_send_available;\n        if (jid === this.account.get('jid'))\n            return;\n        let contact = this.contacts.mergeContact(jid),\n            subscription = item.getAttribute(\"subscription\"),\n            subscription_preapproved = item.getAttribute(\"approved\"),\n            ask = item.getAttribute(\"ask\");\n        if (contact.get('invitation') && (subscription === 'both' || subscription === 'to')) {\n            contact.set('invitation', false);\n            contact.trigger('remove_invite');\n        }\n        if (subscription === 'remove') {\n            contact.set({\n                in_roster: false,\n                known: false,\n                name: contact.get('jid'),\n                subscription: undefined,\n                subscription_request_out: false\n            });\n            contact.set('subscription_preapproved', false)\n            this.account.cached_roster.removeFromRoster(jid);\n            return;\n        }\n        let groups = [];\n        $(item).find('group').each(function () {\n            let group = $(this).text();\n            groups.indexOf(group) < 0 && groups.push(group);\n        });\n        let attrs = {\n            subscription: subscription || 'none',\n            in_roster: true,\n            roster_name: item.getAttribute(\"name\"),\n            groups: groups\n        };\n        if (subscription === 'both') {\n            attrs.subscription_request_out = false;\n            attrs.subscription_request_in = false;\n            if (iq_type === 'set')\n                to_send_available = true;\n        }\n        if (subscription === 'from') {\n            attrs.subscription_request_in = false;\n            if (iq_type === 'set')\n                to_send_available = true;\n        }\n        if (subscription === 'to')\n            attrs.subscription_request_out = false;\n        if (ask === 'subscribe')\n            attrs.subscription_request_out = true;\n        else\n            attrs.subscription_request_out = false;\n        attrs.roster_name && (attrs.name = attrs.roster_name);\n        this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && (attrs.subscription_preapproved = subscription_preapproved ? true : subscription_preapproved);\n        contact.set(attrs);\n        contact.updateCachedInfo();\n        if (to_send_available){\n            this.account.sendPresence();\n        }\n    }\n});\n\nxabber.AccountRosterView = xabber.BasicView.extend({\n    className: 'account-roster-wrap',\n\n    events: {\n        \"click .roster-account-info-wrap .status-button\": \"openChangeStatus\",\n        \"click .roster-account-info\": \"toggle\"\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.groups = this.account.groups;\n        this.roster = this.account.roster;\n        this.contacts = this.account.contacts;\n        this.$el.attr('data-jid', this.account.get('jid'));\n        this.$el.appendTo(this.parent.$('.contact-list'));\n        this.$info = this.$('.roster-account-info-wrap');\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.account.on(\"change:name\", this.updateName, this);\n        this.account.on(\"change:image\", this.updateAvatar, this);\n        this.account.on(\"change:status_updated\", this.updateStatus, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.groups.on(\"add\", this.onGroupAdded, this);\n        this.groups.on(\"rename\", this.onGroupRenamed, this);\n        this.groups.on(\"destroy\", this.onGroupRemoved, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n        this.data.set('expanded', true);\n    },\n\n    updateName: function () {\n        this.$info.find('.name').text(this.account.get('name'));\n    },\n\n    updateStatus: function () {\n        this.$info.find('.status').attr('data-status', this.account.get('status'));\n        this.$info.find('.status-message').text(this.account.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.account.cached_image;\n        this.$info.find('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$el.switchClass('shrank', !expanded);\n        this.parent.updateScrollBar();\n    },\n\n    updateGroupPosition: function (view) {\n        view.$el.detach();\n        let index = this.groups.indexOf(view.model);\n        if (index === 0) {\n            this.$info.after(view.$el);\n        } else {\n            this.$('.roster-group').eq(index - 1).after(view.$el);\n        }\n        this.parent.updateScrollBar();\n    },\n\n    onGroupAdded: function (group) {\n        let view = this.addChild(group.get('id'), this.group_view, {model: group});\n        this.updateGroupPosition(view);\n    },\n\n    onGroupRenamed: function (group, old_name) {\n        let view = this.child(old_name);\n        delete this.children[old_name];\n        this.children[group.get('name')] = view;\n        view && this.updateGroupPosition(view);\n    },\n\n    onGroupRemoved: function (group) {\n        this.removeChild(group.get('id'));\n    },\n\n    toggle: function (ev) {\n        this.data.set('expanded', !this.data.get('expanded'));\n    },\n\n    openChangeStatus: function (ev) {\n        if (!xabber.change_status_view)\n            xabber.change_status_view = new xabber.ChangeStatusView();\n        xabber.change_status_view.open(this.account);\n    }\n});\n\nxabber.AccountRosterRightView = xabber.AccountRosterView.extend({\n    template: templates.account_roster_right,\n    group_view: xabber.GroupRightView,\n    avatar_size: constants.AVATAR_SIZES.ROSTER_RIGHT_ACCOUNT_ITEM,\n\n    __initialize: function () {\n        this.contacts.on(\"add_to_roster change_in_roster remove_from_roster\",\n            this.updateCounter, this);\n        this.contacts.on(\"add_to_roster remove_from_roster\",\n            this.updateGlobalCounter, this);\n    },\n\n    updateCounter: function () {\n        if (!this.roster)\n            this.roster = this.account.roster;\n        let all = this.roster.length,\n            online = all - this.roster.where({status: 'offline'}).length;\n        this.$info.find('.counter').text(online + '/' + all);\n    },\n\n    updateGlobalCounter: function () {\n        this.parent.updateCounter();\n    }\n});\n\nxabber.AccountRosterLeftView = xabber.AccountRosterView.extend({\n    template: templates.account_roster_left,\n    group_view: xabber.GroupLeftView,\n    avatar_size: constants.AVATAR_SIZES.ROSTER_LEFT_ACCOUNT_ITEM,\n\n    __initialize: function () {\n        this.$info.find('.jid').text(this.account.get('jid'));\n    },\n\n    search: function (query) {\n        this.$el.removeClass('shrank');\n        this.$('.group-head').addClass('hidden');\n        let count = 0, hashes = {};\n        this.$('.roster-contact').each((idx, item) => {\n            let $item = $(item),\n                jid = $item.data('jid'),\n                contact = this.roster.get(jid);\n            if (!contact) return;\n            if (hashes[contact.hash_id]) {\n                $item.addClass('hidden');\n                return;\n            }\n            hashes[contact.hash_id] = true;\n            let name = contact.get('name').toLowerCase(),\n                hide = name.indexOf(query) < 0 && jid.indexOf(query) < 0;\n            $item.hideIf(hide);\n            hide || count++;\n        });\n        this.$('.roster-account-info-wrap').showIf(count);\n    },\n\n    searchAll: function () {\n        this.$el.switchClass('shrank', !this.data.get('expanded'));\n        this.$('.roster-account-info-wrap').removeClass('hidden');\n        this.$('.group-head').removeClass('hidden');\n        this.$('.list-item').removeClass('hidden');\n    }\n});\n\nxabber.BlockListView = xabber.BasicView.extend({\n    avatar_size: constants.AVATAR_SIZES.CONTACT_BLOCKED_ITEM,\n    events: {\n        \"click .btn-reset-panel\": \"deselectParticipants\",\n        \"click .btn-remove-selected\": \"actionSelectedParticipants\",\n        \"click .blocked-contact input\": \"selectUnblock\",\n        \"click .btn-unblock-selected\": \"unblockSelected\"\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        for (let jid in this.account.blocklist.list) {\n            this.onContactAdded(this.account.blocklist.list[jid], false);\n        };\n        this.updateTabsLabel();\n        this.account.contacts.on(\"add_to_blocklist\", this.onContactAdded, this);\n        this.account.contacts.on(\"remove_from_blocklist\", this.onContactRemoved, this);\n    },\n\n    render: function (options) {\n        this.deselectBlocked();\n    },\n\n    selectUnblock: function (ev) {\n        this.updateUnblockButton();\n    },\n\n    deselectBlocked: function (ev) {\n        this.$('.blocked-contact input').prop('checked', false)\n        this.updateUnblockButton();\n    },\n\n    updateUnblockButton: function () {\n        let has_changes = this.$('.blocked-contact input:checked').length;\n        this.$('.btn-unblock-selected').hideIf(!has_changes);\n        this.$('.btn-deselect-blocked').hideIf(!has_changes);\n        this.$('.btn-block').hideIf(has_changes);\n    },\n\n    unblockSelected: function (ev) {\n        let $current_tab = this.$('.settings-block-wrap:not(.hidden)'),\n            selected = $current_tab.find('.blocked-contact input:checked').closest('.blocked-contact');\n        selected.each((index, item) => {\n            this.unblockContactByJid($(item).attr('data-jid'))\n        });\n    },\n\n    unblockContactByJid: function (jid) {\n        let contact = this.account.contacts.get(jid);\n        if (contact)\n            contact.unblock();\n        else {\n            this.account.contacts.unblockContact(jid);\n        }\n    },\n\n    hideEmptyContainers: function () {\n        let tabs = this.$('.blocked-list:empty');\n        tabs.each((idx, item) => {\n            let $tab = $(item).closest('.settings-block-wrap');\n            $tab.find('.placeholder').removeClass('hidden');\n        });\n        this.updateUnblockButton();\n    },\n\n    onContactAdded: function (attrs) {\n        let rendered;\n        this.$('.blocked-contact').each((idx, item) => { //this construction avoids being destroyed by stupid domain and jid names in blocklist\n            ($(item).attr('data-jid') === attrs.jid) && (rendered = true);\n        });\n        if (rendered)\n            return;\n        let tmp = templates.contact_blocked_item({jid: attrs.jid});\n        if (attrs.resource) {\n            this.$('.blocked-invitations').append(tmp);\n            this.$('.settings-tab[data-block-name=\"blocklist-invitations\"]').removeClass('hidden');\n            this.$('.blocked-invitations-placeholder').addClass('hidden');\n        }\n        else if (attrs.domain) {\n            this.$('.blocked-domains').append(tmp);\n            this.$('.blocked-domains-placeholder').addClass('hidden');\n        }\n        else {\n            this.$('.blocked-contacts').append(tmp);\n            this.$('.blocked-contacts-placeholder').addClass('hidden');\n        }\n        if (this.parent && this.parent.updateHeight){\n            this.parent.updateBlockedLabel();\n            this.parent.updateHeight();\n            setTimeout(() => {\n                this.parent.updateScrollBar();\n            }, 250)\n        }\n        this.updateTabsLabel();\n    },\n\n    onContactRemoved: function (jid) {\n        let $elem = this.$(`.blocked-contact[data-jid=\"${jid}\"]`);\n        $elem.detach();\n\n        if (this.parent && this.parent.updateHeight){\n            this.parent.updateBlockedLabel();\n            this.parent.updateHeight();\n            setTimeout(() => {\n                this.parent.updateScrollBar();\n            }, 250)\n        }\n        this.updateTabsLabel();\n        this.hideEmptyContainers();\n    },\n\n    updateTabsLabel: function () {\n        if (!(this.account.blocklist && this.account.blocklist.list))\n            return;\n        let contacts, domains, invitations;\n        contacts = domains = invitations = 0;\n\n        for (let jid in this.account.blocklist.list) {\n            let item = this.account.blocklist.list[jid];\n            if (item.resource)\n                invitations++;\n            else if (item.domain)\n                domains++;\n            else\n                contacts++;\n        }\n\n        let contact_label_text = contacts === 0 ? xabber.getString(\"blocked_contacts_empty\") : xabber.getQuantityString(\"blocked_contacts_number_tab_label\", contacts),\n            domains_label_text = domains === 0 ? xabber.getString(\"blocked_domains_empty\") : xabber.getQuantityString(\"blocked_domains_number\", domains),\n            invitations_label_text = invitations === 0 ? xabber.getString(\"blocked_invitations_empty\") : xabber.getQuantityString(\"blocked_invitations_number\", invitations);\n        this.$('.settings-tab[data-block-name=\"blocklist-contacts\"] .settings-block-label').text(contact_label_text);\n        this.$('.settings-tab[data-block-name=\"blocklist-domains\"] .settings-block-label').text(domains_label_text);\n        this.$('.settings-tab[data-block-name=\"blocklist-invitations\"] .settings-block-label').text(invitations_label_text);\n    },\n});\n\nxabber.RosterView = xabber.SearchPanelView.extend({\n    ps_selector: '.contact-list-wrap',\n\n    _initialize: function () {\n        this._settings = xabber._roster_settings;\n        this.model.on(\"activate\", this.updateOneRosterView, this);\n        this.model.on(\"update_order\", this.updateRosterViews, this);\n        this.model.on(\"deactivate destroy\", this.removeRosterView, this);\n        this.on(\"before_hide\", this.saveScrollBarOffset, this);\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    updateOneRosterView: function (account) {\n        let jid = account.get('jid'),\n            view = this.child(jid);\n        if (view) {\n            view.$el.detach();\n        } else if (account.isConnected()) {\n            view = this.addChild(jid, this.account_roster_view, {account: account});\n        } else {\n            return;\n        }\n        let index = this.model.connected.indexOf(account);\n        if (index === 0) {\n            this.$('.contact-list').prepend(view.$el);\n        } else {\n            this.$('.contact-list').children().eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    },\n\n    updateRosterViews: function () {\n        _.each(this.children, function (view) { view.detach(); });\n        this.model.each((account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            view && this.$('.contact-list').append(view.$el);\n        });\n        this.updateScrollBar();\n    },\n\n    removeRosterView: function (account) {\n        this.removeChild(account.get('jid'));\n        this.updateScrollBar();\n    }\n});\n\n\nxabber.RosterLeftView = xabber.RosterView.extend({\n    className: 'roster-left-container container',\n    template: templates.roster_left,\n    ps_settings: {theme: 'item-list'},\n    main_container: '.contact-list',\n    account_roster_view: xabber.AccountRosterLeftView,\n\n    __initialize: function () {\n        this.model.on(\"list_changed\", this.updateLeftIndicator, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n    },\n\n    updateLeftIndicator: function () {\n        this.$el.attr('data-indicator', this.model.connected.length > 1);\n    },\n\n    getContactForItem: function (item) {\n        let $item = $(item),\n            account_jid = $item.parent().parent().data('jid'),\n            jid = $item.data('jid'),\n            roster_view = this.child(account_jid);\n        return roster_view && roster_view.roster.get(jid);\n    },\n\n    render: function (options) {\n        (options.right !== 'chat' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search && options.right === 'chat') && this.clearSearch();\n    },\n\n    searchAll: function () {\n        _.each(this.children, function (view) {\n            view.searchAll();\n        });\n    },\n\n    selectItem: function (id, arrow) {\n        if (!id) {\n            (arrow === 'up') && (this.ps_container[0].scrollTop = 0);\n            return;\n        }\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            this.ps_container[0].scrollTop = 0;\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        if ($selection.length && arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop\n        || $selection[0].clientHeight + $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop < this.ps_container[0].scrollTop))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop;\n        if ($selection.length && arrow === 'up' && ($selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop <= this.ps_container[0].scrollTop\n        || $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop;\n        $selection.addClass('selected');\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = xabber.chats_view.child(selection.data('id'));\n                view && view.open({screen: xabber.body.screen.get('name'), clear_search: false});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.get(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')).hash_id);\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n        }\n    },\n\n    onListChanged: function () {\n        this.updateSearch();\n    }\n});\n\nxabber.RosterSettingsView = xabber.BasicView.extend({\n    className: 'roster-settings-wrap',\n    template: templates.roster_settings,\n\n    events: {\n        \"change .offline-contacts input\": \"setOfflineSetting\",\n        \"change .sorting-contacts input\": \"setSortingSetting\"\n    },\n\n    _initialize: function () {\n        this.$el.appendTo(this.parent.$('.settings-subblock-wrap.contact-list'));\n    },\n\n    render: function () {\n        this.$('.offline-contacts input[type=radio][name=offline-contacts][value='+\n            (this.model.get('show_offline'))+']').prop('checked', true);\n        this.$('.sorting-contacts input[type=radio][name=sorting-contacts][value='+\n            (this.model.get('sorting'))+']').prop('checked', true);\n    },\n\n    setOfflineSetting: function () {\n        this.model.save('show_offline',\n            this.$('.offline-contacts input[type=radio][name=offline-contacts]:checked').val());\n    },\n\n    setSortingSetting: function () {\n        this.model.save('sorting',\n            this.$('.sorting-contacts input[type=radio][name=sorting-contacts]:checked').val());\n    }\n});\n\nxabber.AccountGroupView = xabber.BasicView.extend({\n    className: 'group',\n    template: function () {\n        this.$el.append('<div class=\"group-name one-line\"/><span class=\"group-members-count\"/>');\n    },\n\n    events: {\n        \"click\": \"showGroupSettings\"\n    },\n\n    _initialize: function (options, attrs) {\n        this.$('.group-name').text(this.model.get('name'));\n        this.$('.group-members-count').text(this.model.get('counter').all);\n        let index = this.model.collection.indexOf(this.model),\n            $parent_el;\n        if (options.single_account && options.single_account.model.get('jid') != this.model.account.get('jid'))\n            return;\n        if (options.single_account)\n            $parent_el = options.single_account.$('.groups');\n        else\n            $parent_el = this.model.account.settings_account_modal.$('.groups');\n        if (index === 0) {\n            $parent_el.prepend(this.$el);\n        } else {\n            $parent_el.children().eq(index - 1).after(this.$el);\n        }\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    showGroupSettings: function () {\n        this.model.showSettings();\n    }\n});\n\nxabber.ContactPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap contact-placeholder-wrap noselect',\n    template: templates.contact_placeholder,\n\n    _initialize: function (options) {\n        xabber.on('update_placeholder',this.onPlaceholderUpdate, this);\n    },\n\n    onPlaceholderUpdate: function () {\n        if (xabber.toolbar_view.$('.toolbar-item.jingle-calls.active').length || xabber.toolbar_view.$('.toolbar-item.geolocation-chats.active').length){\n            this.$('.text').text(xabber.getString(\"message_manager_error_not_implemented\"));\n        } else {\n            this.$('.text').text(xabber.getString(\"contact_list__placeholder\"));\n        }\n    },\n});\n\nxabber.AddContactView = xabber.BasicView.extend({\n    className: 'modal main-modal add-contact-modal',\n    template: templates.add_contact,\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .dropdown-content#select-account-for-add-contact\": \"selectAccount\",\n        \"click .existing-group-field label\": \"editGroup\",\n        \"change .new-group-name input\": \"checkNewGroup\",\n        \"keyup .new-group-name input\": \"checkNewGroup\",\n        \"keyup .name-field #new_contact_username\": \"checkJid\",\n        \"focusout .name-field #new_contact_username\": \"focusoutInputField\",\n        \"focusout .new-group-name #new-group-name\": \"addNewGroup\",\n        \"click .btn-add\": \"stepForward\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.group_data = new Backbone.Model;\n        this.group_data.on(\"change\", this.updateGroups, this);\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        let accounts = options.account ? [options.account] : xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('input[name=\"username\"]').val(jid).attr('readonly', !!jid)\n            .removeClass('invalid');\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.dropdown-content#select-account-for-add-contact').empty();\n        _.each(accounts, (account) => {\n            this.$('.dropdown-content#select-account-for-add-contact').append(\n                this.renderAccountItem(account));\n        });\n        this.$('.account-dropdown-wrap').hideIf(accounts.length < 2)\n        this.bindAccount(accounts[0]);\n        this.$('span.errors').text('');\n        this.$el.openModal({\n            ready: () => {\n                Materialize.updateTextFields();\n                this.$('.account-dropdown-wrap').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                });\n                this.$('input[name=\"username\"]').focus();\n            },\n            complete: this.close.bind(this)\n        });\n        return this;\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.account-dropdown-wrap .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n        this.renderGroupsForAccount(account);\n    },\n\n    stepForward: function () {\n        let jid = this.$('input[name=username]').val().trim();\n        this.$el.append($(templates.preloader()))\n        this.$('.btn-add').addClass('hidden-disabled')\n        this.$('input[name=contact_name]').val('');\n        if (this.account.connection && this.account.connection.connected) {\n            this.account.getConnectionForIQ().vcard.get(jid, (vcard) => {\n                    let username = vcard.username ? vcard.username : vcard.fullname ? vcard.fullname : ''\n                    username && this.$('input[name=contact_name]').val(username);\n                    this.$('.preloader-wrapper').remove();\n                    this.$('.btn-add').removeClass('hidden-disabled');\n                    this.addContact()\n                },\n                (err) => {\n                    this.$('.preloader-wrapper').remove();\n                    this.$('.btn-add').removeClass('hidden-disabled');\n                    this.$('input[name=username]').addClass('invalid')\n                        .siblings('.errors').text($(err).find('error text').text());\n                });\n        }\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.add_contact_account_item({jid: account.get('jid'), name: account.get('name')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    renderGroupsForAccount: function (account) {\n        this.group_data.set({\n            selected: [],\n            groups: _.map(account.groups.notSpecial(), function (group) {\n                return group.get('name');\n            })\n        }, {silent: true});\n        this.updateGroups();\n    },\n\n    updateGroups: function () {\n        let selected = this.group_data.get('selected');\n        this.$('.groups').html(templates.groups_checkbox_list_contact({\n            groups: _.map(this.group_data.get('groups'), function (name) {\n                return { name: name, id: uuid(), checked: _.contains(selected, name) };\n            })\n        }));\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    editGroup: function (ev) {\n        ev.preventDefault();\n        let $target = $(ev.target),\n            $input = $target.siblings('input'),\n            checked = !$input.prop('checked'),\n            group_name = $input.attr('data-groupname'),\n            selected = _.clone(this.group_data.get('selected')),\n            idx = selected.indexOf(group_name);\n        $input.prop('checked', checked);\n        if (checked) {\n            idx < 0 && selected.push(group_name);\n        } else if (idx >= 0) {\n            selected.splice(idx, 1);\n        }\n        this.group_data.set('selected', selected);\n    },\n\n    checkNewGroup: function (ev) {\n        let name = $(ev.target).val(),\n            $checkbox = this.$('.new-group-checkbox #new_group_checkbox');\n        $checkbox.prop('disabled', !(name && !_.contains(this.group_data.get('groups'), name)));\n        if (ev.keyCode === constants.KEY_ENTER)\n            this.addNewGroup();\n    },\n\n    addNewGroup: function (ev) {\n        ev && ev.preventDefault();\n        if (this.$('.new-group-checkbox #new_group_checkbox').prop('disabled'))\n            return;\n        let $input = this.$('.new-group-name input'),\n            name = $input.val(),\n            groups = _.clone(this.group_data.get('groups')),\n            idx = groups.indexOf(name);\n        if (idx < 0) {\n            let selected = _.clone(this.group_data.get('selected'));\n            selected.push(name);\n            groups.push(name);\n            this.group_data.set({groups: groups, selected: selected});\n        }\n    },\n\n    focusoutInputField: function () {\n        if (!this.$('input[name=username]').val().trim()) {\n            this.$('input[name=username]').removeClass('invalid');\n            this.$('span.errors').text('').addClass('hidden');\n        }\n    },\n\n    checkJid: function (ev) {\n        let jid = this.$('input[name=username]').val().trim(),\n            error_text,\n            regexp_full_jid = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))|(([0-9]{1,3}\\.){3}[0-9]{1,3})|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!regexp_full_jid.test(jid) && jid) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_invalid_jid\");\n        }\n        if (error_text) {\n            this.$('input[name=username]').addClass('invalid')\n                .siblings('.errors').text(error_text);\n        }\n        else {\n            this.$('input[name=username]').removeClass('invalid');\n            this.$('span.errors').text('').addClass('hidden');\n            if (ev.keyCode === constants.KEY_ENTER)\n                this.stepForward();\n        }\n    },\n\n    addContact: function () {\n        this.$('span.errors').text('').addClass('hidden');\n        let jid = this.$('input[name=username]').removeClass('invalid').val().trim(),\n            name = this.$('input[name=contact_name]').removeClass('invalid').val(),\n            groups = this.group_data.get('selected'),\n            contact, error_text,\n            regexp = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (jid)\n            jid = jid.toLowerCase()\n        jid = Strophe.getBareJidFromJid(jid);\n        if (!jid) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_input_username\");\n        } else if (jid === this.account.get('jid')) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_can_not_add_youself\");\n        } else if (!regexp.test(jid)) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_invalid_jid\");\n        }\n        else {\n            contact = this.account.contacts.mergeContact(jid);\n            if (contact.get('in_roster')) {\n                error_text = xabber.getString(\"dialog_add_contact__error__text_already_in_roster\");\n            }\n        }\n        if (error_text) {\n            this.$('input[name=username]').addClass('invalid')\n                .siblings('.errors').text(error_text);\n        } else {\n            !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && contact.set('subscription_preapproved', true);\n            contact.pres('subscribed');\n            contact.set('known', true);\n            contact.set('removed', false);\n            setTimeout(() => {\n                contact.pres('subscribe');\n            }, 500);\n            contact.trigger('presence', contact, 'subscribe_from');\n            contact.trigger(\"open_chat\", contact, {right_force_close: true, force_opened_state: true});\n            this.close();\n        }\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.GroupSettings = Backbone.Model.extend({\n    idAttribute: 'name',\n    defaults: {\n        expanded: true,\n        show_offline: 'default',\n        sorting: 'default',\n        custom_notifications: false,\n        notifications: false,\n        message_preview: false\n    }\n});\n\nxabber.GroupsSettings = Backbone.CollectionWithStorage.extend({\n    model: xabber.GroupSettings,\n\n    _initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on(\"destroy\", this.clearStorage, this);\n        this.fetch();\n    }\n});\n\nxabber.RosterSettings = Backbone.ModelWithStorage.extend({\n\n    defaults: function () {\n        let general_group_name = xabber.getString(\"circles__name_general_circle\"),\n            non_roster_group_name = xabber.getString(\"circles__name_non_roster_circle\");\n        return {\n            pinned: false,\n            show_offline: 'yes',\n            sorting: 'online-first',\n            general_group_name,\n            non_roster_group_name\n        };\n    }\n});\n\nxabber.CachedRoster = Backbone.ModelWithDataBase.extend({\n    putInRoster: function (value, callback) {\n        this.database.put('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromRoster: function (value, callback) {\n        this.database.get('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromRoster: function (callback) {\n        this.database.get_all('roster_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromRoster: function (value, callback) {\n        this.database.remove('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('roster_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('roster_items');\n    }\n});\n\nxabber.CachedSyncСonversations = Backbone.ModelWithDataBase.extend({\n    putInCachedConversations: function (value, callback) {\n        this.database.put('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromCachedConversations: function (value, callback) {\n        this.database.get('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromCachedConversations: function (callback) {\n        this.database.get_all('conversation_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromCachedConversations: function (value, callback) {\n        this.database.remove('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('conversation_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('conversation_items');\n    }\n});\n\nxabber.CachedServerFeatures = Backbone.ModelWithDataBase.extend({\n    putInCachedFeatures: function (value, callback) {\n        this.database.put('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromCachedFeatures: function (value, callback) {\n        this.database.get('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromCachedFeatures: function (callback) {\n        this.database.get_all('server_features_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromCachedFeatures: function (value, callback) {\n        this.database.remove('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('server_features_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('server_features_items');\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.groups_settings = new xabber.GroupsSettings(null, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-groups-settings-' + this.get('jid')\n    });\n    this.cached_roster = new xabber.CachedRoster(null, {\n        name:'cached-roster-list-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'roster_items',\n        primKey: 'jid'\n    });\n    this.cached_sync_conversations = new xabber.CachedSyncСonversations(null, {\n        name:'cached-conversation-list-v108-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'conversation_items',\n        primKey: 'account_conversation_type'\n    });\n    this.cached_server_features = new xabber.CachedServerFeatures(null, {\n        name:'cached-features-list-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'server_features_items',\n        primKey: 'var'\n    });\n\n    this.groupchat_settings = new xabber.GroupChatSettings({id: 'group-chat-settings'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-group-chat-settings-' + this.get('jid'),\n        fetch: 'after'\n    });\n    this.groups = new xabber.Groups(null, {account: this});\n    this.contacts = new xabber.Contacts(null, {account: this});\n\n    this.cached_roster.on(\"database_open_failed\", () => {\n        this.contacts.addCollection(this.roster = new xabber.Roster(null, {account: this, roster_version: 0}));\n        this.trigger('roster_created');\n    });\n\n    this.cached_roster.on(\"database_opened\", () => {\n        this.cached_roster.getFromRoster('roster_version', (res) => {\n            let roster_version = res && res.version ? res.version : 0;\n            this.contacts.addCollection(this.roster = new xabber.Roster(null, {account: this, roster_version: roster_version}));\n            this.trigger('roster_created');\n        });\n    });\n\n    this.blocklist = new xabber.BlockList(null, {account: this});\n\n    this._added_pres_handlers.push(this.contacts.handlePresence.bind(this.contacts));\n\n    this.on(\"ready_to_get_roster\", function () {\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            this.resources.reset();\n            this.contacts.each(function (contact) {\n                contact.resources.reset();\n                contact.resetStatus();\n            });\n            this.cached_roster.getAllFromRoster((roster_items) => {\n                $(roster_items).each((idx, roster_item) => {\n                    if (roster_item.jid === 'roster_version'){\n                        return;\n                    }\n                    this.contacts.mergeContact(roster_item);\n                });\n                if (this.connection && this.connection.do_synchronization && xabber.chats_view) {\n                    let options = {};\n                    this.cached_sync_conversations.getFromCachedConversations('last_sync_timestamp', (res) => {\n                        let last_sync_timestamp = res && res.timestamp ? res.timestamp : null;\n                        !this.roster.last_chat_msg_id && (options.max = constants.SYNCHRONIZATION_RSM_MAX);\n                        last_sync_timestamp && (options.stamp = last_sync_timestamp);\n                        this.roster.syncFromServer(options, Boolean(last_sync_timestamp), true);\n                        this.roster.getRoster();\n                    });\n                }\n                else {\n                    this.roster.getRoster();\n                }\n                this.blocklist.getFromServer();\n            });\n        });\n        console.log(this.roster);\n        if (this.roster) {\n            dfd.resolve();\n        } else {\n            this.once('roster_created', () => {\n                dfd.resolve();\n            });\n        }\n    }, this);\n});\n\nxabber.Account.addConnPlugin(function () {\n    this.registerIQHandler();\n    this.registerSyncedIQHandler();\n    if (this.roster) {\n        this.roster.registerHandler();\n    } else {\n        this.once('roster_created', () => {\n            this.roster.registerHandler();\n        });\n    }\n    this.blocklist.registerHandler();\n}, true, true);\n\nxabber.once(\"start\", function () {\n    this._roster_settings = new this.RosterSettings({id: 'roster-settings'},\n        {storage_name: this.getStorageName(), fetch: 'after'});\n    this.settings.roster = this._roster_settings.attributes;\n    this.contacts_view = this.left_panel.addChild('contacts', this.RosterLeftView,\n        {model: this.accounts});\n    this.contact_container = this.right_panel.addChild('details', this.Container);\n    this.details_container = this.right_contact_panel.addChild('details', this.Container);\n    this.contact_placeholder = this.right_panel.addChild('contact_placeholder',\n        this.ContactPlaceholderView);\n    this.add_contact_view = new this.AddContactView();\n    this.on(\"add_contact\", function () {\n        this.add_contact_view.show();\n    }, this);\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.chats,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $msg = env.$msg,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    uuid = env.uuid,\n    Images = utils.images,\n    Emoji = utils.emoji,\n    pretty_date = (timestamp) => { return utils.pretty_date(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'dddd, D MMMM YYYY')},\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\nxabber.Message = Backbone.Model.extend({\n    idAttribute: 'unique_id',\n\n    defaults: function () {\n        let msgid = uuid();\n        return {\n            msgid: msgid,\n            unique_id: msgid,\n            type: 'main',\n            state: constants.MSG_PENDING\n        };\n    },\n\n    initialize: function () {\n        let time = this.get('time'), attrs = {};\n        if (time) {\n            attrs.timestamp = Number(moment(time));\n        } else {\n            attrs.timestamp = moment.now();\n            attrs.time = moment(attrs.timestamp).format();\n        }\n        if (!this.get('origin_id'))\n            (this.isSenderMe() && !this.get('synced_from_server') && !this.get('carbon_copied') && !this.get('is_archived')) && this.set('origin_id', this.get('msgid'));\n        this.updateUniqueId();\n        this.set(attrs);\n        this.on(\"change:origin_id change:stanza_id change:archived_id\", this.updateUniqueId, this);\n    },\n\n    updateUniqueId: function () {\n        this.set('unique_id',  this.get('stanza_id') || this.get('archived_id') || this.get('origin_id') || this.get('msgid'));\n    },\n\n    destroyOnEcho: function () {\n        this.set('state', constants.MSG_DELIVERED);\n        if (this.collection && this.collection.chat && this.collection.chat.item_view && this.collection.chat.item_view.content)\n            this.collection.chat.item_view.content.removeMessage(this);\n        else\n            this.destroy();\n    },\n\n    getText: function () {\n        let forwarded_message = this.get('forwarded_message');\n        if (forwarded_message && forwarded_message.length) {\n            return forwarded_message[0].get('message');\n        }\n        return this.get('message');\n    },\n\n    getState: function () {\n        return constants.MSG_STATE[this.get('state')];\n    },\n\n    getVerboseState: function () {\n        let state = xabber.getString(constants.MSG_VERBOSE_STATE[this.get('state')]);\n        if (this.account) {\n            if (!this.account.isOnline())\n                state = xabber.getString(\"account_is_offline\");\n        }\n        else if (!this.collection.account.isOnline())\n            state = xabber.getString(\"account_is_offline\");\n        return state;\n    },\n\n    isSenderMe: function () {\n        if (this.account)\n            return this.account.get('jid') === this.get('from_jid');\n        else if (this.collection && this.collection.account)\n            return this.collection.account.get('jid') === this.get('from_jid');\n        else\n            false;\n    },\n\n    handleEphemeralMessage: function () {\n        if (this.collection.account.omemo){\n            this.collection.account.omemo.cached_messages.putMessage(this.collection.chat.contact, this.get('stanza_id'), {ephemeral_removed: true});\n        }\n        if (!this.collection.chat.item_view.content)\n            this.collection.chat.item_view.content = new xabber.ChatContentView({chat_item: this.collection.chat.item_view});\n        this.collection.chat.item_view.content.removeMessage(this);\n    },\n\n    checkEphemeralTimer: function () {\n        if (this.get('ethemeral_removed') || !this.get('displayed_time'))\n            return;\n\n        let date = this.get('displayed_time');\n\n        let msgDate = new Date(date),\n            currentDate = new Date(),\n            seconds = (currentDate.getTime() - msgDate.getTime()) / 1000;\n\n        let time_difference = this.get('ephemeral_timer') - seconds;\n        clearTimeout(this.ephemeral_timeout);\n        if (time_difference <= 0){\n            this.handleEphemeralMessage();\n        } else {\n            this.ephemeral_timeout = setTimeout(() => {\n                this.handleEphemeralMessage();\n            }, (time_difference * 1000))\n        }\n    },\n});\n\nxabber.MessagesBase = Backbone.Collection.extend({\n    model: xabber.Message,\n});\n\n  xabber.SearchedMessages = xabber.MessagesBase.extend({\n      comparator: 'timestamp',\n\n      initialize: function () {\n          this.collections = [];\n          this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n          this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n      },\n\n      addCollection: function (collection) {\n          this.collections.push(collection);\n      },\n\n      updateInCollections: function (event, contact) {\n          _.each(this.collections, function (collection) {\n              collection.update(contact, event);\n          });\n      }\n  });\n\n  xabber.Messages = Backbone.Collection.extend({\n    model: xabber.Message,\n    comparator: 'timestamp',\n\n    initialize: function (models, options) {\n        this.chat = options.chat;\n        this.account = options.account;\n    },\n\n    checkEphemeralTimers: function (models, options) {\n        let displayed_time,\n            ephemeral_msgs = this.filter(msg => msg.get('ephemeral_timer'));\n        ephemeral_msgs.reverse().forEach((msg) => {\n            if (msg.get('is_unread') || (msg.isSenderMe() && msg.get('state') === constants.MSG_DELIVERED))\n                return;\n            if (msg.get('displayed_time') && !msg.get('dynamic_displayed_time'))\n                displayed_time = msg.get('displayed_time');\n            else if (displayed_time){\n                msg.set('dynamic_displayed_time', true)\n                msg.set('displayed_time', displayed_time);\n            }\n            msg.checkEphemeralTimer();\n        });\n    },\n\n    createInvitationFromStanza: function ($message, options) {\n        options = options || {};\n        let $invite_item = $message.find('invite'),\n            full_jid = $invite_item.attr('jid') || $message.attr('from'),\n            $delay = options.delay || $message.children('delay'),\n            from_jid = Strophe.getBareJidFromJid(full_jid),\n            body = $message.children('body').text(),\n            markable = $message.find('markable').length > 0,\n            msgid = $message.attr('id'),\n            archive_id = $message.children('archived').attr('id'),\n            origin_id = $message.children('origin-id').attr('id'),\n            unique_id = options.stanza_id || archive_id || origin_id || msgid,\n            message = unique_id && this.get(unique_id),\n            $group_info = $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]'),\n            is_private_invitation,\n            group_info_attributes = {};\n\n\n        if (!message && unique_id){\n            unique_id = origin_id || options.stanza_id || archive_id || msgid;\n            message = this.get(unique_id);\n        }\n\n        if (message)\n            return message;\n\n        if (!from_jid)\n            return;\n\n        let attrs = {\n            xml: options.xml || $message[0],\n            carbon_copied: options.carbon_copied && !options.is_archived,\n            markable: markable,\n            msgid: msgid,\n            is_forwarded: options.is_forwarded,\n            forwarded_message: options.forwarded_message || null,\n            from_jid: from_jid,\n            origin_id: origin_id,\n            stanza_id: options.stanza_id,\n            archive_id: archive_id,\n            contact_stanza_id: options.contact_stanza_id,\n            is_archived: options.is_archived\n        };\n\n        $delay.length && (attrs.time = $delay.attr('stamp'));\n        options.synced_msg && (attrs.synced_invitation_from_server = true);\n        body && (attrs.message = body);\n\n        let contact = this.account.contacts.mergeContact({jid: Strophe.getBareJidFromJid(from_jid), group_chat: true}),\n            chat = this.account.chats.getChat(contact);\n\n        !chat.item_view.content && (chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view}));\n\n        contact.set('in_roster', false);\n        if ($group_info.length) {\n            let name = $group_info.find('name').text(),\n                model = $group_info.find('membership').text(),\n                privacy = $group_info.find('privacy').text(),\n                searchable = $group_info.find('index').text(),\n                parent_chat = $group_info.find('parent-chat').text(),\n                description = $group_info.find('description').text();\n            name && (group_info_attributes.name = name);\n            model && (group_info_attributes.model = name);\n            privacy && (group_info_attributes.privacy = privacy);\n            searchable && (group_info_attributes.searchable = searchable);\n            description && (group_info_attributes.description = description);\n            parent_chat.length && (is_private_invitation = true);\n            is_private_invitation && contact.set('private_chat', true);\n            privacy === 'incognito' && contact.set('incognito_chat', true);\n            let prev_group_info = contact.get('group_info') || {};\n            _.extend(prev_group_info, group_info_attributes);\n            contact.set('group_info', prev_group_info);\n        }\n\n        let invite_msg = chat.messages.createSystemMessage(_.extend(attrs, {\n            from_jid: from_jid,\n            auth_request: true,\n            invite: true,\n            private_invite: is_private_invitation || false,\n            is_accepted: false,\n            silent: false,\n            message: $message.find('reason').text()\n        }));\n        return invite_msg;\n    },\n\n    createFromStanza: function ($message, options) {\n        options || (options = {});\n        let $delay = options.delay || $message.children('delay'),\n            full_jid = $message.attr('from') || options.from_jid,\n            from_jid = Strophe.getBareJidFromJid(full_jid),\n            body = $message.children('body').length ? $message.children('body').text() : $message.children('envelope').children('content').children('body').text(),\n            markable = $message.find('markable').length > 0,\n            archive_id = $message.children('archived').attr('id'),\n            origin_id = $message.children('origin-id').attr('id'),\n            msgid = $message.attr('id'),\n            unique_id = options.stanza_id || archive_id || origin_id || msgid,\n            message = unique_id && this.get(unique_id);\n\n        if (!message && unique_id){\n            unique_id = origin_id || options.stanza_id || archive_id || msgid;\n            message = this.get(unique_id);\n        }\n        if (!message){\n            message = this.findWhere({'origin_id': origin_id});\n        }\n        if (options.replaced) {\n            let conversation = $message.children('replace').attr('conversation');\n            if ($message.children('replace').children('message').children(`encrypted[xmlns=\"${Strophe.NS.SYNCHRONIZATION_OLD_OMEMO}\"]`).length)\n                return;\n            if ($message.children('replace').children('message').children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length && this.account.omemo && !options.forwarded) {\n                this.account.omemo.receiveChatMessage($message, _.extend(options, {from_jid: conversation, conversation: conversation}));\n                return;\n            }\n            $message = $message.children('replace').children('message');\n            body = $message.children('body').length ? $message.children('body').text() : $message.children('envelope').children('content').children('body').text();\n            let sid = $message.children('stanza-id').first().attr('id');\n            message = this.find(m => m.get('stanza_id') === sid || m.get('contact_stanza_id') === sid);\n            if (!message)\n                return;\n            from_jid = message.get('from_jid');\n            msgid = message.get('msgid');\n            let xml = message.get('xml');\n            xml.innerHTML = $message[0].innerHTML;\n            options.xml = xml;\n            options.forwarded_message = message.get('forwarded_message');\n        }\n\n        if (message && !options.replaced && !options.context_message && !options.is_unread_archived && !options.searched_message && !options.pinned_message && !options.participant_message && !options.echo_msg && !options.is_searched) {\n            if ($message.find('[xmlns=\"' + Strophe.NS.EPHEMERAL + '\"]').length && !$message.find('[xmlns=\"' + Strophe.NS.EPHEMERAL + '\"]').closest('system-message').length && options.encrypted){\n                message.set('ephemeral_timer', $message.find('[xmlns=\"' + Strophe.NS.EPHEMERAL + '\"]').attr('timer'));\n                options.sync_timestamp && message.set('displayed_time', options.sync_timestamp)\n                if (this.chat.contact){\n                    let cached_msg = this.account.omemo.cached_messages.getMessage(this.chat.contact, $message.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'));\n                    if (cached_msg && cached_msg.envelope && cached_msg.displayed_time){\n                        message.set('displayed_time', cached_msg.displayed_time)\n                    }\n                }\n                message.collection.checkEphemeralTimers();\n            }\n            return message;\n        }\n\n        let attrs = {\n                xml: options.xml || $message[0],\n                original_message: body,\n                carbon_copied: options.carbon_copied && !options.is_archived,\n                markable: markable,\n                msgid: msgid,\n                is_forwarded: options.is_forwarded,\n                forwarded_message: options.forwarded_message || null,\n                from_jid: from_jid,\n                contact_stanza_id: options.contact_stanza_id,\n                is_archived: options.is_archived,\n                is_unread_archived: options.is_unread_archived,\n                is_between_anchors: options.is_between_anchors,\n                not_encrypted: options.not_encrypted || null,\n                not_verified_device: options.not_verified_device || null,\n                not_verified_device_no_device: options.not_verified_device_no_device || null,\n                device_id: options.device_id || null,\n            },\n            mentions = [], blockquotes = [], markups = [], mutable_content = [], files = [], images = [], videos = [], locations = [], link_references = [];\n\n        options.encrypted && _.extend(attrs, {encrypted: true});\n        options.hasOwnProperty('is_trusted') && _.extend(attrs, {is_trusted: options.is_trusted});\n        let references = $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n            $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`) :\n            $message.children('envelope').children('content').children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`);\n\n        references.each((idx, reference) => {\n            let $reference = $(reference),\n                type = $reference.attr('type'),\n                begin = parseInt($reference.attr('begin')),\n                end = parseInt($reference.attr('end'));\n            if (type === 'decoration') {\n                if ($reference.children(`mention[xmlns=\"${Strophe.NS.MARKUP}\"]`).length) {\n                    let $mention = $reference.children(`mention[xmlns=\"${Strophe.NS.MARKUP}\"]`),\n                        target = $mention.text(),\n                        is_gc = $mention.attr('node') === Strophe.NS.GROUP_CHAT ? true : false;\n                    mentions.push({start: begin, end: end, target: target, is_gc: is_gc});\n                } else {\n                    let markup = [];\n                    $reference.children().each((i, child_ref) => {\n                        if (constants.MARKUP_TAGS.indexOf(child_ref.tagName) > -1 && $(child_ref).attr('xmlns') === Strophe.NS.MARKUP) {\n                            if (child_ref.tagName === 'link')\n                                markup.push({type: child_ref.tagName, uri: $(child_ref).text()});\n                            else if (child_ref.tagName === 'quote') {\n                                blockquotes.push({start: begin, end: end});\n                            } else\n                                markup.push(child_ref.tagName);\n                        }\n                    });\n                    markup.length && markups.push({start: begin, end: end, markup: markup});\n                }\n            } else if (type === 'mutable') {\n                let $geolocation = $reference.children(`geoloc[xmlns=\"${Strophe.NS.GEOLOC}\"]`).first(),\n                    loc_attrs = {};\n                if ($geolocation.children('lat').text() && $geolocation.children('lon').text()){\n                    loc_attrs = {\n                        lat: $geolocation.children('lat').text(),\n                        lon: $geolocation.children('lon').text()\n                    }\n                    locations.push(loc_attrs);\n                    mutable_content.push({ start: begin, end: end, type: 'geolocation'});\n                };\n                if ($reference.children(`ogp[xmlns=\"${Strophe.NS.OGP}\"]`).length) {\n                    let $ogp = $reference.children(`ogp[xmlns=\"${Strophe.NS.OGP}\"]`).first(),\n                        link_reference_attrs = {};\n                    if ($ogp.length) {\n                        link_reference_attrs = {\n                            site: $ogp.children('meta[property=\"og:site_name\"]').attr('content'),\n                            type: $ogp.children('meta[property=\"og:type\"]').attr('content'),\n                            url: $ogp.children('meta[property=\"og:url\"]').attr('content'),\n                            description: $ogp.children('meta[property=\"og:description\"]').attr('content'),\n                            title: $ogp.children('meta[property=\"og:title\"]').attr('content'),\n                            image: $ogp.children('meta[property=\"og:image\"]').attr('content'),\n                            image_width: $ogp.children('meta[property=\"og:image:width\"]').attr('content'),\n                            image_height: $ogp.children('meta[property=\"og:image:height\"]').attr('content'),\n                            video_url: $ogp.children('meta[property=\"og:video:url\"]').attr('content'),\n                            original_text: $ogp.attr('url'),\n                            start: begin,\n                            end: end,\n                        }\n                        link_references.push(link_reference_attrs);\n                        mutable_content.push({start: begin, end: end, type: 'link_reference'});\n                    };\n                }\n                let $file_sharing = $reference.find(`file-sharing[xmlns=\"${Strophe.NS.FILES}\"]`).first();\n                if ($reference.children('forwarded').length)\n                    mutable_content.push({ start: begin, end: end, type: 'forward'});\n                else if ($file_sharing.length) {\n                    let type = $file_sharing.parent(`voice-message[xmlns=\"${Strophe.NS.VOICE_MESSAGE}\"]`).length ? 'voice' : 'file',\n                        $file = $file_sharing.children('file'), file_attrs = {}, sources = [];\n                    mutable_content.push({ start: begin, end: end, type: type});\n                    $file_sharing.children('sources').children('uri').each((i, uri) => {sources.push($(uri).text());});\n                    file_attrs = {\n                        name: $file.children('name').text(),\n                        hash: $file.children(`hash[xmlns=\"${Strophe.NS.HASH}\"]`).text(),\n                        size: $file.children('size').text(),\n                        type: $file.children('media-type').text(),\n                        duration: $file.children('duration').text(),\n                        description: $file.children('desc').text(),\n                        height: $file.children('height').text(),\n                        width: $file.children('width').text(),\n                        thumbnail: $file.children('thumbnail-uri').text(),\n                        id: $file.children('gallery-id').text(),\n                        voice: type === 'voice',\n                        sources: sources\n                    };\n                    if (sources[0].indexOf('aescbc') == 0) {\n                        let uri = sources[0].replace(/^aescbc/, 'https'),\n                            key = utils.fromBase64toArrayBuffer(uri.slice(uri.length - 64));\n                        uri = uri.slice(0, uri.length - 64 - 1);\n                        _.extend(file_attrs, {sources: [uri], key: key});\n                        attrs.has_encrypted_files = true;\n                    }\n                    if (this.getFileType($file.children('media-type').text()) === 'image')\n                        images.push(file_attrs);\n                    else if (this.getFileType($file.children('media-type').text()) === 'video')\n                        videos.push(file_attrs);\n                    else\n                        files.push(file_attrs);\n                }\n            } else if (type === 'data') {}\n        });\n\n        $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').each((idx, x_elem) => {\n            let $reference = $(x_elem).children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`),\n                $user = $reference.children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).first();\n                if ($reference.length) {\n                    let begin = parseInt($reference.attr('begin')),\n                        end = parseInt($reference.attr('end'));\n                    mutable_content.push({start: begin, end: end, type: 'groupchat'});\n                    let user_id = $user.attr('id'),\n                        user_jid = $user.children('jid').text();\n                    _.extend(attrs, {\n                        user_info: {\n                            id: user_id,\n                            jid: user_jid,\n                            nickname: $user.children('nickname').text() || user_jid || user_id,\n                            role: $user.children('role').text(),\n                            avatar: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('id'),\n                            avatar_url: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('url'),\n                            badge: $user.children('badge').text()\n                        },\n                        from_jid: user_jid || user_id,\n                        groupchat_jid: Strophe.getBareJidFromJid(options.is_sender ? $message.attr('to') : $message.attr('from'))\n                    });\n                }\n        });\n\n        blockquotes.length && (attrs.blockquotes = blockquotes);\n        mentions.length && (attrs.mentions = mentions);\n        markups.length && (attrs.markups = markups);\n        images.length && (attrs.images = images);\n        videos.length && (attrs.videos = videos);\n        files.length && (attrs.files = files);\n        locations.length && (attrs.locations = locations);\n        link_references.length && (attrs.link_references = link_references);\n        attrs.mutable_content = mutable_content;\n        if (!attrs.mutable_content.length)\n            attrs.forwarded_message = null;\n\n        options.stanza_id && (attrs.stanza_id = options.stanza_id);\n        origin_id && (attrs.origin_id = origin_id);\n        archive_id && (attrs.archive_id = archive_id);\n\n        (options.replaced || mentions.length) && (attrs.mentions = mentions);\n        (options.replaced || markups.length) && (attrs.markups = markups);\n        (options.replaced || files.length) && (attrs.files = files);\n        (options.replaced || images.length) && (attrs.images = images);\n        (options.replaced || videos.length) && (attrs.videos = videos);\n        (options.replaced || link_references.length) && (attrs.link_references = link_references);\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            attrs.type = 'system';\n            attrs.participants_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n        }\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`).length &&\n            $message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`).find('field[var=\"FORM_TYPE\"][type=\"hidden\"] value').text() === Strophe.NS.WEBCHAT) {\n            let addresses = [];\n            $message.children(`addresses[xmlns=\"${Strophe.NS.ADDRESS}\"]`).children('address').each((idx, address) => {\n                let $address = $(address);\n                addresses.push({type: $address.attr('type'), jid: $address.attr('jid')});\n            });\n            attrs.data_form = _.extend(this.account.parseDataForm($message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`)), {addresses: addresses});\n        }\n\n        body && (body = utils.slice_pretty_body(body, mutable_content));\n\n        if (!attrs.forwarded_message && body.removeEmoji() === \"\")\n            attrs.only_emoji = Array.from(body).length;\n\n        attrs.message = body;\n\n        options.echo_msg && ($delay = $message.children('time'));\n        $delay.length && (attrs.time = $delay.attr('stamp'));\n        (attrs.carbon_copied || from_jid == this.account.get('jid') && (options.is_archived || options.synced_msg)) && (attrs.state = constants.MSG_SENT);\n        options.synced_msg && (attrs.synced_from_server = true);\n        options.missed_history && (attrs.missed_msg = true);\n        if (options.is_unread_archived && (attrs.type !== 'system')){\n            let last_read_msg = this.find(m => this.chat.get('last_read_msg') && (m.get('stanza_id') === this.chat.get('last_read_msg') || m.get('contact_stanza_id') === this.chat.get('last_read_msg')));\n            if (last_read_msg){\n                if (Number(moment(attrs.time)) > last_read_msg.get('timestamp'))\n                    attrs.is_unread = true\n            } else {\n                attrs.is_unread = true\n            }\n        }\n        if (options.echo_msg) {\n            attrs.state = constants.MSG_DELIVERED;\n            attrs.timestamp = Number(moment(attrs.time));\n            attrs.from_jid = this.account.get('jid');\n        }\n        (options.context_message || options.participant_message || options.searched_message || options.is_searched) && (attrs.state = constants.MSG_ARCHIVED);\n\n        if (options.carbon_copied && options.encrypted && this.chat && this.chat.item_view && !this.chat.item_view.content)\n            this.chat.item_view.content = new xabber.ChatContentView({chat_item: this.chat.item_view});\n\n        if (options.pinned_message)\n            return this.account.pinned_messages.create(attrs);\n\n        if (options.participant_message)\n            return this.account.participant_messages.create(attrs);\n\n        if (options.searched_message) {\n            options.query && (attrs.query = options.query);\n            options.searched_in_contact_messages && (attrs.searched_in_contact_messages = options.searched_in_contact_messages)\n            return this.account.searched_messages.create(attrs);\n        }\n\n        if (options.context_message)\n            return this.account.context_messages.create(attrs);\n\n        if (options.echo_msg && message) {\n            message.destroyOnEcho();\n        }\n        if ((options.replaced || options.encrypted && options.is_unread_archived) && message) {\n            message.set(attrs);\n            return;\n        }\n\n        if (options.is_searched) {\n            let msg_contact = Strophe.getBareJidFromJid($message.attr('from'));\n            (msg_contact === this.account.get('jid')) && (msg_contact = Strophe.getBareJidFromJid($message.attr('to')));\n            message = xabber.all_searched_messages.create(attrs);\n            message.contact = this.account.contacts.mergeContact(msg_contact);\n            message.account = this.account;\n            return message;\n        }\n\n        if ($message.find('[xmlns=\"' + Strophe.NS.EPHEMERAL + '\"]').length && !$message.find('[xmlns=\"' + Strophe.NS.EPHEMERAL + '\"]').closest('system-message').length && options.encrypted) {\n            attrs.ephemeral_timer = $message.find('[xmlns=\"' + Strophe.NS.EPHEMERAL + '\"]').attr('timer');\n            options.sync_timestamp && (attrs.displayed_time = options.sync_timestamp);\n            if (this.chat.contact){\n                let cached_msg = this.account.omemo.cached_messages.getMessage(this.chat.contact, $message.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'));\n                if (cached_msg && cached_msg.envelope && cached_msg.displayed_time){\n                    attrs.displayed_time = cached_msg.displayed_time;\n                }\n            }\n        }\n\n        message = this.create(attrs);\n\n        (options.encrypted && options.is_unread) && message.set('is_unread', true);\n\n        if ($message.find('[xmlns=\"' + Strophe.NS.EPHEMERAL + '\"]').length && !$message.find('[xmlns=\"' + Strophe.NS.EPHEMERAL + '\"]').closest('system-message').length && options.encrypted){\n            message.collection.checkEphemeralTimers();\n        }\n        return message;\n    },\n\n      decryptFile: async function (uri, key) {\n          return new Promise((resolve, reject) => {\n              fetch(uri).then((r) => {\n                  r.blob().then((blob) => {\n                      let filereader = new FileReader();\n                      filereader.onloadend = () => {\n                          let arrayBuffer = filereader.result,\n                              exportedMasterKey = key.slice(0, 32),\n                              HMACData = key.slice(32);\n                          utils.AES.decrypt(exportedMasterKey, HMACData, arrayBuffer).then((enc_file) => {\n                              resolve(enc_file);\n                          });\n                      };\n                      filereader.readAsArrayBuffer(blob);\n                  });\n              }).catch(() => {\n                  resolve(null)\n              });\n          });\n      },\n\n    getFilename: function (url_media) {\n        let idx = url_media.lastIndexOf(\"/\");\n        return url_media.substr(idx + 1, url_media.length - 1);\n    },\n\n    getFileType: function(full_type) {\n        let end_idx = (full_type.indexOf(\"/\") > -1) ? full_type.indexOf(\"/\") : full_type.length,\n            type = full_type.slice(0, end_idx);\n        return type;\n    },\n\n    createSystemMessage: function (attrs) {\n        return this.create(_.extend({\n            type: 'system',\n            silent: true,\n            state: constants.MSG_DISPLAYED\n        }, attrs));\n    }\n});\n\n\nxabber.EphemeralTimerSelector = xabber.BasicView.extend({\n    className: 'modal main-modal change-ephemeral-timer-modal',\n    ps_selector: '.modal-content',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    template: templates.ephemeral_timer_selector,\n\n    events: {\n        \"click .btn-set-ephemeral-timer\": \"changeTimer\",\n    },\n\n    render: function (options) {\n        this.model = options.model;\n        this.account = options.account;\n        this.updateColorScheme();\n        this.updateScrollBar();\n        if (this.model.get('chat_ephemeral_timer')){\n            this.updateSelectedTimer();\n        }\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    onRender: function (options) {\n        if (this.model.get('chat_ephemeral_timer')){\n            this.scrollToChildPlus(this.$(`.btn-set-ephemeral-timer.selected`), -45);\n        }\n\n    },\n\n    updateSelectedTimer: function () {\n        let $el = this.$(`.btn-set-ephemeral-timer[data-value=\"${this.model.get('chat_ephemeral_timer')}\"`);\n        this.$(`.btn-set-ephemeral-timer`).removeClass('selected');\n        $el.addClass('selected');\n    },\n\n    changeTimer: function (ev) {\n        let $el = $(ev.target).closest('.btn-set-ephemeral-timer');\n        this.$(`.btn-set-ephemeral-timer`).removeClass('selected');\n        $el.addClass('selected')\n        this.model.set('chat_ephemeral_timer', $el.attr('data-value'));\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\n  xabber.JingleMessage = Backbone.Model.extend({\n      defaults: {\n          duration: 0,\n          contact_full_jid: \"\",\n          session_id: 0,\n          audio: true,\n          volume_on: true,\n          video_in: false,\n          video_screen: false,\n          state: 0\n      },\n\n      initialize: function (attrs, options) {\n          attrs = attrs || {};\n          attrs.video_live = attrs.video_live || false;\n          attrs.video = attrs.video_live;\n          this.contact = options.contact;\n          this.account = this.contact.account;\n          this.registerIqHandler();\n          this.audio_notifiation = xabber.playAudio(attrs.call_initiator ? xabber.settings.sound_on_call : xabber.settings.sound_on_dialtone, true);\n          this.modal_view = new xabber.JingleMessageView({model: this});\n          this.conn = new RTCPeerConnection({\n              iceServers: [\n                  {\n                      urls: \"stun:stun.l.google.com:19302\"\n                  },\n                  {\n                      urls: \"stun:stun01.pool-01.xabber.org:3478\"\n                  },\n              ].concat(constants.TURN_SERVERS_LIST),\n              sdpSemantics: 'unified-plan'\n          });\n          this.$remote_video_el = $('<video autoplay class=\"webrtc-remote-video\"/>');\n          this.$remote_audio_el = $('<audio autoplay class=\"webrtc-remote-audio hidden\"/>');\n          this.$local_video = this.modal_view.$el.find('.webrtc-local-video');\n          this.current_timer = 0;\n          this.conn.onconnectionstatechange = this.onChangeConnectionState.bind(this);\n          this.set(attrs);\n          this.get('in') && this.updateStatus(xabber.getString(\"dialog_jingle_message__status_calling\"));\n          this.onChangedMediaType();\n          this.conn.ontrack = (ev) => {\n              this.remote_stream = ev.streams[0];\n              this.modal_view.$el.find('.webrtc-remote-audio')[0].srcObject = ev.streams[0];\n          };\n          this._waiting_timeout = setTimeout(() => {\n              (!this.get('state') && this.get('status') === 'calling' && this.get('call_initiator') === this.account.get('jid')) && this.reject();\n          }, constants.JINGLE_WAITING_TIME * 1000);\n          this.conn.onicecandidate = this.onIceCandidate.bind(this);\n          this.conn.oniceconnectionstatechange = this.onChangeIceConnectionState.bind(this);\n          this.on('change:audio', this.setEnabledAudioTrack, this);\n          this.on('change:video', this.onChangedVideoValue, this);\n          this.on('change:video_live', this.setEnabledVideoTrack, this);\n          this.on('change:video_screen', this.setEnabledScreenShareVideoTrack, this);\n          this.on('change:video_in', this.onChangedRemoteVideo, this);\n          this.on('change:volume_on', this.onChangedVolume, this);\n          this.on('destroy', this.onDestroy, this);\n      },\n\n      registerIqHandler: function () {\n          this.account.connection.deleteHandler(this.iq_handler);\n          this.iq_handler = this.account.connection.addHandler((iq) => {\n                  this.onIQ(iq);\n                  return true;\n              }, null, 'iq', 'set');\n\n      },\n\n      updateStatus: function (status) {\n          this.modal_view.updateStatusText(status);\n      },\n\n      updateTimer: function () {\n          this.updateStatus(utils.pretty_duration(++this.current_timer));\n      },\n\n      startTimer: function () {\n          this.updateTimer();\n          clearInterval(this.call_timer);\n          this.call_timer = setInterval(() => {\n              this.updateTimer();\n          }, 1000);\n      },\n\n      onConnected: function () {\n          this.get('video_live') && this.onChangedVideoValue();\n          xabber.stopAudio(this.audio_notifiation);\n          setTimeout(() => {\n              this.set('status', 'connected');\n              xabber.trigger('update_jingle_button');\n              this.updateStatus();\n              this.startTimer();\n          }, 1000);\n      },\n\n      onChangeConnectionState: function (ev) {\n          let peer_conn = ev.target,\n              conn_state = peer_conn.connectionState;\n          if (conn_state === 'connected') {\n              this.onConnected();\n          } else {\n              this.updateStatus(utils.pretty_name(conn_state) + '...');\n              if (conn_state === \"failed\") {\n                  clearTimeout(this._timeout_failed);\n                  this._timeout_failed = setTimeout(() => {\n                      if (peer_conn.connectionState === 'failed' || peer_conn.connectionState === 'disconnected') {\n                          this.set('status', conn_state);\n                          xabber.trigger('update_jingle_button');\n                          this.reject();\n                          this.destroy();\n                          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_network_error\"));\n                          xabber.current_voip_call = null;\n                      }\n                  }, 40000);\n                  peer_conn.restartIce();\n              }\n              if (conn_state === 'disconnected') {\n                  this.set('status', conn_state);\n                  xabber.trigger('update_jingle_button');\n                  this.destroy();\n                  xabber.current_voip_call = null;\n              }\n          }\n      },\n\n      onIceCandidate: function (ice) {\n          if (!ice || !ice.candidate || !ice.candidate.candidate)\n              return;\n          this.sendCandidate(ice.candidate);\n      },\n\n      onChangeIceConnectionState: function (ev) {\n          let peer_conn = ev.target,\n              conn_state = peer_conn.iceConnectionState;\n          if (conn_state === \"failed\") {\n              clearTimeout(this._timeout_failed);\n              this._timeout_failed = setTimeout(() => {\n                  if (peer_conn.iceConnectionState === 'failed' || peer_conn.connectionState === 'disconnected') {\n                      this.set('status', conn_state);\n                      xabber.trigger('update_jingle_button');\n                      this.reject();\n                      this.destroy();\n                      this.updateStatus(xabber.getString(\"dialog_jingle_message__status_network_error\"));\n                      xabber.current_voip_call = null;\n                  }\n              }, 40000);\n              peer_conn.restartIce();\n          }\n          if (conn_state === \"connected\")\n              !this.conn.connectionState && this.onConnected();\n      },\n\n      onChangedMediaType: function () {\n          this.$local_video.switchClass('hidden', !this.get('video'));\n      },\n\n      onChangedRemoteVideo: function () {\n          let incoming_video = this.get('video_in');\n          if (incoming_video) {\n              this.$remote_video_el[0].srcObject = this.remote_stream;\n              this.modal_view.$el.find('.webrtc-remote-audio').replaceWith(this.$remote_video_el);\n              this.modal_view.$el.switchClass('multiple-videos', this.get('video') && this.get('video_in'));\n          }\n          else {\n              this.$remote_audio_el[0].srcObject = this.remote_stream;\n              this.modal_view.$el.find('.webrtc-remote-video').replaceWith(this.$remote_audio_el);\n          }\n          this.modal_view.$el.find('.default-screen').switchClass('hidden', incoming_video);\n          this.onChangedVolume();\n      },\n\n      onChangedVolume: function () {\n          if (this.get('volume_on')) {\n              this.modal_view.$el.find('.webrtc-remote-audio')[0] && (this.modal_view.$el.find('.webrtc-remote-audio')[0].muted = false);\n              this.modal_view.$el.find('.webrtc-remote-video')[0] && (this.modal_view.$el.find('.webrtc-remote-video')[0].muted = false);\n          }\n          else {\n              this.modal_view.$el.find('.webrtc-remote-audio')[0] && (this.modal_view.$el.find('.webrtc-remote-audio')[0].muted = true);\n              this.modal_view.$el.find('.webrtc-remote-video')[0] && (this.modal_view.$el.find('.webrtc-remote-video')[0].muted = true);\n          }\n      },\n\n      setEnabledAudioTrack: function () {\n          this.local_stream.getAudioTracks()[0].enabled = this.get('audio');\n      },\n\n      setEnabledVideoTrack: function () {\n          let value = this.get('video_live'),\n              default_video = this.conn.getSenders().find(sender => sender.track && (sender.track.default || sender.track.screen));\n          value && this.set('video_screen', false);\n          (default_video && value) && this.createVideoStream();\n          (!default_video && this.local_stream) && (this.local_stream.getVideoTracks()[0].enabled = value);\n          this.set('video', value || this.get('video_screen'));\n      },\n\n      onDestroy: function () {\n          clearTimeout(this._waiting_timeout);\n          clearInterval(this.call_timer);\n          clearTimeout(this._timeout_failed);\n          xabber.stopAudio(this.audio_notifiation);\n          this.account.connection.deleteHandler(this.iq_handler);\n          this.stopTracks();\n          this.conn.close();\n      },\n\n      setEnabledScreenShareVideoTrack:  function () {\n          let value = this.get('video_screen'),\n              default_video = this.conn.getSenders().find(sender => sender.track && !sender.track.screen);\n          value && this.set('video_live', false);\n          (default_video && value) && this.createScreenShareVideoStream();\n          (!default_video && this.local_stream) && (this.local_stream.getVideoTracks()[0].enabled = value);\n          this.set('video', value || this.get('video_live'));\n      },\n\n      onChangedVideoValue: function () {\n          let video_state = this.get('video') ? 'enable' : 'disable';\n          this.sendVideoStreamState(video_state);\n          this.onChangedMediaType();\n      },\n\n      createScreenShareVideoStream: function () {\n          navigator.mediaDevices.getDisplayMedia({video: true}).then((media_stream) => {\n              this.$local_video[0].srcObject = media_stream;\n              media_stream.getVideoTracks().forEach((track) => {\n                  _.extend(track, {screen: true});\n                  this.local_stream.addTrack(track);\n                  this.conn.addTrack(track, this.local_stream);\n                  this.conn.getSenders().find(sender => !sender.track || sender.track && sender.track.kind === 'video').replaceTrack(track);\n              });\n          });\n      },\n\n      sendVideoStreamState: function (state) {\n          let $iq_video = $iq({to: this.get('contact_full_jid'), type: 'set'})\n              .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n              .c('video', {state: state, id: this.get('session_id')});\n          this.account.sendIQFast($iq_video);\n      },\n\n      onIQ: function (iq) {\n          let $incoming_iq = $(iq),\n              $jingle_initiate = $incoming_iq.find('jingle[action=\"session-initiate\"]'),\n              $jingle_accept = $incoming_iq.find('jingle[action=\"session-accept\"]'),\n              $jingle_info = $incoming_iq.find('jingle[action=\"session-info\"]'),\n              $jingle_video = $incoming_iq.find(`query[xmlns=\"${Strophe.NS.JINGLE_MSG}\"] video`),\n              from_jid = $incoming_iq.attr('from'),\n              $result_iq = $iq({to: from_jid, type: 'result', id: $incoming_iq.attr('id')});\n          if ($jingle_initiate.length) {\n              if ($jingle_initiate.attr('sid') !== this.get('session_id'))\n                  return;\n              let offer_sdp = $jingle_initiate.find(`description[xmlns=\"${Strophe.NS.JINGLE_RTP}\"]`).text();\n              offer_sdp && this.conn.setRemoteDescription(new RTCSessionDescription({type: 'offer', sdp: offer_sdp}));\n              this.acceptSession(offer_sdp);\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_accept.length) {\n              if ($jingle_accept.attr('sid') !== this.get('session_id'))\n                  return;\n              let answer_sdp = $jingle_accept.find(`description[xmlns=\"${Strophe.NS.JINGLE_RTP}\"]`).text();\n              answer_sdp && this.conn.setRemoteDescription(new RTCSessionDescription({type: 'answer', sdp: answer_sdp}));\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_info.length) {\n              if ($jingle_info.attr('sid') !== this.get('session_id'))\n                  return;\n              let candidate = $jingle_info.find('candidate');\n              candidate.length && this.conn.addIceCandidate(new RTCIceCandidate({candidate: candidate.text(), sdpMLineIndex: candidate.attr('sdpMLineIndex'), sdpMid: candidate.attr('sdpMid')}));\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_video.length) {\n              let session_id = $jingle_video.attr('id');\n              if (session_id === this.get('session_id')) {\n                  let video_state = $jingle_video.attr('state');\n                  if (video_state === 'enable')\n                      this.set('video_in', true);\n                  if (video_state === 'disable')\n                      this.set('video_in', false);\n              }\n              this.account.sendIQFast($result_iq);\n          }\n      },\n\n      startCall: function () {\n          this.set('call_initiator', this.account.get('jid'));\n          this.createAudioStream();\n          this.get('video_live') && this.createVideoStream();\n          this.propose();\n      },\n\n      createAudioStream: function () {\n          try {\n              navigator.mediaDevices.getUserMedia({audio: true}).then((media_stream) => {\n                  this.local_stream = media_stream;\n                  this.$local_video[0].srcObject = media_stream;\n                  let video_track = this.initVideoTrack();\n                  this.local_stream.addTrack(video_track);\n                  this.conn.addTrack(video_track, this.local_stream);\n                  media_stream.getAudioTracks().forEach(track => this.conn.addTrack(track, this.local_stream));\n              });\n          } catch (e) {\n              utils.dialogs.error(e);\n          }\n      },\n\n      createVideoStream: function () {\n          try {\n              navigator.mediaDevices.getUserMedia({video: true}).then((media_stream) => {\n                  this.$local_video[0].srcObject = media_stream;\n                  media_stream.getVideoTracks().forEach((track) => {\n                      this.local_stream.addTrack(track);\n                      this.conn.addTrack(track, this.local_stream);\n                      this.conn.getSenders().find(sender => !sender.track || sender.track && sender.track.kind === 'video').replaceTrack(track);\n                  });\n              });\n          } catch (e) {\n                  utils.dialogs.error(e);\n              }\n          },\n\n      stopTracks: function () {\n          this.local_stream && this.local_stream.getTracks().forEach((track) => {\n              track.stop();\n              this.local_stream.removeTrack(track);\n          });\n      },\n\n      propose: function () {\n          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_search\"));\n          let $propose_msg = $msg({type: 'chat', to: this.contact.get('jid')})\n              .c('propose', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')})\n              .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'}).up().up()\n              .c('no-store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('body').t(xabber.getString(\"jingle__text_body_message\")).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.account.sendMsg($propose_msg);\n      },\n\n      accept: function () {\n          let $accept_msg = $msg({type: 'chat', to: this.get('contact_full_jid') || this.contact.get('jid')})\n              .c('accept', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')}).up()\n              .c('no-store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.set('jingle_start', moment.now());\n          this.account.sendMsg($accept_msg);\n          xabber.stopAudio(this.audio_notifiation);\n          this.set('status', 'connecting');\n          xabber.trigger('update_jingle_button');\n          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_connecting\"));\n          this.audio_notifiation = xabber.playAudio(xabber.settings.sound_on_connection, true);\n      },\n\n      reject: function (reason) {\n          if (this.get('status') === 'disconnected' || this.get('status') === 'disconnecting')\n              return;\n          let $reject_msg = $msg({type: 'chat', to: this.get('contact_full_jid') || this.contact.get('jid')})\n              .c('reject', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')});\n          if (this.get('jingle_start')) {\n              let end = moment.now(),\n                  duration = Math.round((end - this.get('jingle_start'))/1000),\n                  call_attrs = {initiator: this.get('call_initiator')};\n              if (this.call_timer)\n                  _.extend(call_attrs, {start: moment(this.get('jingle_start')).format(), end: moment(end).format(), duration: duration});\n              reason && (call_attrs.reason = reason);\n              $reject_msg.c('call', call_attrs).up();\n          }\n          $reject_msg.up().c('store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.account.sendMsg($reject_msg);\n          this.createSystemMessage($reject_msg);\n          this.set('status', 'disconnected');\n          xabber.trigger('update_jingle_button');\n          this.destroy();\n          xabber.current_voip_call = null;\n      },\n\n      createSystemMessage: function (message) {\n          let $message = $(message.nodeTree),\n              chat = this.account.chats.getChat(this.contact),\n              time = $message.find('call').attr('end');\n          if (time) {\n              let duration = $message.find('call').attr('duration'),\n                  initiator = $message.find('call').attr('initiator');\n              chat.messages.createSystemMessage({\n                  from_jid: this.account.get('jid'),\n                  session_id: $message.find('reject').attr('id'),\n                  message: xabber.getString(((initiator && initiator === this.account.get('jid')) ? \"jingle__system_message__outgoing_call\" : \"jingle__system_message__incoming_call\"), [utils.pretty_duration(duration)])\n              });\n          }\n          else {\n              chat.messages.createSystemMessage({\n                  from_jid: this.account.get('jid'),\n                  session_id: $message.find('reject').attr('id'),\n                  message: xabber.getString(\"jingle__system_message__cancelled_call\")\n              });\n          }\n      },\n\n      initVideoTrack: function () {\n          let canvas = Object.assign(document.createElement(\"canvas\"), {width: 320, height: 240});\n          let ctx = canvas.getContext('2d');\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\n          let p = ctx.getImageData(0, 0, canvas.width, canvas.height);\n          requestAnimationFrame(function draw(){\n              for (let i = 0; i < p.data.length; i++)\n                  p.data[i++] = p.data[i++] = p.data[i++] = 1;\n              ctx.putImageData(p, 0, 0);\n              requestAnimationFrame(draw);\n          });\n          return _.extend(canvas.captureStream(60).getTracks()[0], {default: true});\n      },\n\n      initSession: function () {\n          navigator.mediaDevices.getUserMedia({audio: true}).then((media_stream) => {\n              this.local_stream = media_stream;\n              this.$local_video[0].srcObject = media_stream;\n              let video_track = this.initVideoTrack();\n              this.local_stream.addTrack(video_track);\n              this.conn.addTrack(video_track, this.local_stream);\n              media_stream.getAudioTracks().forEach(track => this.conn.addTrack(track, this.local_stream));\n              return this.conn.createOffer({offerToReceiveAudio:true, offerToReceiveVideo: true});\n          }).then((offer) => {\n                  this.set('session_initiator', this.account.get('jid'));\n                  this.conn.setLocalDescription(offer).then(() => {\n                      let offer_sdp = offer.sdp,\n                          $iq_offer_sdp = $iq({to: this.get('contact_full_jid'), type: 'set'})\n                          .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-initiate', initiator: this.account.get('jid'), sid: this.get('session_id')})\n                          .c('content', {creator: 'initiator', name: 'voice'})\n                          .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'})\n                          .c('sdp').t(offer_sdp).up().up()\n                          .c('security', {xmlns: Strophe.NS.JINGLE_SECURITY_STUB});\n                      this.account.sendIQFast($iq_offer_sdp);\n                  });\n          });\n      },\n\n      sendCandidate: function (candidate) {\n          let $iq_candidate = $iq({to: this.get('contact_full_jid'), type: 'set'})\n              .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-info', initiator: this.get('session_initiator'), sid: this.get('session_id')})\n              .c('content', {creator: 'initiator', name: 'voice'})\n              .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'}).up()\n              .c('transport', {xmlns: Strophe.NS.JINGLE_TRANSPORTS_ICE})\n              .c('candidate', {sdpMLineIndex: candidate.sdpMLineIndex, sdpMid: candidate.sdpMid }).t(candidate.candidate);\n          this.account.sendIQFast($iq_candidate);\n      },\n\n      acceptSession: async function () {\n          this.set('session_initiator', this.contact.get('jid'));\n          this.conn.createAnswer().then((answer) => {\n              this.conn.setLocalDescription(answer).then(() => {\n                  let answer_sdp = answer.sdp,\n                      $iq_answer_sdp = $iq({to: this.get('contact_full_jid'), type: 'set'})\n                          .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-accept', initiator: this.contact.get('jid'), sid: this.get('session_id')})\n                          .c('content', {creator: 'initiator', name: 'voice'})\n                          .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'})\n                          .c('sdp').t(answer_sdp).up().up()\n                          .c('security', {xmlns: Strophe.NS.JINGLE_SECURITY_STUB});\n                  this.account.sendIQFast($iq_answer_sdp);\n              });\n          });\n      }\n  });\n\n  xabber.Chat = Backbone.Model.extend({\n    defaults: {\n        opened: true,\n        active: false,\n        display: false,\n        displayed_sent: false,\n        last_displayed_id: 0,\n        last_delivered_id: 0,\n        unread: 0,\n        timestamp: 0,\n        const_unread: 0,\n        encrypted: false\n    },\n\n    initialize: function (attrs, options) {\n        this.contact = options.contact;\n        this.sync_created = options.sync_created;\n        this.account = this.contact ? this.contact.account : options.account;\n        let jid = this.contact ? this.contact.get('jid') : attrs.jid;\n        this.set({\n            id: attrs && attrs.id || this.contact.hash_id,\n            jid: jid\n        });\n        (attrs && attrs.type === 'encrypted') && this.set('encrypted', true);\n        if (attrs && attrs.type === 'saved') {\n            this.set('saved', true);\n            this.account.on('remove_saved_chat', this.onContactDestroyed, this);\n        }\n        this.retraction_version = 0;\n        if (this.contact) {\n            this.set('group_chat', this.contact.get('group_chat'));\n            this.contact.on(\"destroy\", this.onContactDestroyed, this);\n            this.contact.on(\"change:group_chat\", this.onChangedContact, this);\n        } else {\n            this.set({'group_chat': false, 'name': attrs.name});\n        }\n        this.messages = new xabber.Messages(null, {account: this.account, chat: this});\n        this.messages_unread = new xabber.Messages(null, {account: this.account});\n        this.item_view = new xabber.ChatItemView({model: this});\n        this.plyr_players = [];\n        this.retracted_msg_id_list = [];\n        this.on(\"get_retractions_list\", this.getAllMessageRetractions, this);\n        this.on(\"change:timestamp\", this.onChangedTimestamp, this);\n        this.on(\"update_last_read_msg\", this.onChangedLastReadMsg, this);\n    },\n\n    onChangedTimestamp: function () {\n    },\n\n    onChangedLastReadMsg: function (options) {\n        if (this.get('prev_last_read_msg') && this.get('last_read_msg') && this.get('prev_last_read_msg') !== this.get('last_read_msg')){\n            if (this.item_view && !this.item_view.content){\n                this.item_view.content = new xabber.ChatContentView({chat_item: this.item_view});\n            }\n            this.item_view.content._no_scrolling_event = true;\n            let query = {\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                is_first: true,\n                sync_update: options && options.sync_update ? true : false,\n                var: [\n                    {var: 'after-id', value: this.get('prev_last_read_msg')},\n                    {var: 'before-id', value: this.get('last_read_msg')},\n                ]\n            };\n            this.requestHistoryBetweenAnchors(query);\n\n        }\n        this.set('prev_last_read_msg', this.get('last_read_msg'));\n    },\n\n    requestHistoryBetweenAnchors: function (query) {\n        this.item_view.content.MAMRequest(query, (success, messages, rsm) => {\n            if (rsm.complete)\n                this.set('last_sync_unread_id', this.get('last_read_msg'));\n            if (query.is_first && !query.sync_update) {\n                let read_count = Number(rsm.count) + 1;\n                read_count = this.get('const_unread') - read_count;\n                (read_count < 0) && (read_count = 0);\n                this.set('const_unread', read_count);\n            }\n            if (!rsm.complete && (rsm.count > messages.length)){\n                query.after = rsm.last;\n                query.is_first = false;\n                this.requestHistoryBetweenAnchors(query);\n            }\n            _.each(messages, (message) => {\n                let message_item = this.account.chats.receiveChatMessage(message,\n                        {\n                            is_archived: true,\n                            is_between_anchors: true,\n                        }\n                    );\n                message_item && message_item.set('is_unread', false)\n            });\n            if (rsm.complete && this.get('last_read_msg')){\n                let last_read_msg = this.messages.find(m => this.get('last_read_msg') && (m.get('stanza_id') === this.get('last_read_msg') || m.get('contact_stanza_id') === this.get('last_read_msg'))),\n                    deferred = new $.Deferred();\n                deferred.done(() => {\n                    last_read_msg && last_read_msg.set('is_unread', false);\n                    if (this.item_view.content.isVisible()){\n                        this.item_view.content._long_reading_timeout = true;\n                        this.item_view.content.scrollToUnread();\n                    } else {\n                        this.set('show_new_unread', true);\n                    }\n                    this.item_view.content._no_scrolling_event = false;\n                });\n                if (!last_read_msg){\n                    this.contact.getMessageByStanzaId(this.get('last_read_msg'), ($message) => {\n                        last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                        deferred.resolve()\n                    });\n                } else {\n                    deferred.resolve()\n                }\n            }\n        }, (err) => {\n            xabber.error('error');\n        });\n    },\n\n\n    isMuted: function () {\n          if (this.get('muted') && (this.get('muted') < (Date.now() / 1000)))\n              this.set('muted', false)\n          return this.get('muted')\n    },\n\n      onChangedContact: function () {\n          let changed = this.contact.changed;\n          if (_.has(changed, 'group_chat'))\n              this.set('group_chat', this.contact.get('group_chat'));\n          if (_.has(changed, 'blocked'))\n              this.set('blocked', this.contact.get('blocked'));\n      },\n\n    recountUnread: function () {\n        this.set('unread', this.messages_unread.length);\n        if (this.contact && this.get('archived') && this.isMuted()) {\n        }\n        else {\n            xabber.toolbar_view.recountAllMessageCounter();\n        }\n    },\n\n      setEphemeralTimer: function (ev) {\n          if (!this.get('encrypted'))\n              return;\n          this.set('chat_ephemeral_timer', $(ev.target).closest('.btn-set-ephemeral-timer').attr('data-value'))\n      },\n\n    onContactDestroyed: function () {\n        this.resetUnread();\n        this.destroy();\n    },\n\n    resetUnread: function () {\n        let unread = this.get('unread');\n        if (unread > 0) {\n            this.messages_unread && this.messages_unread.reset();\n            this.set('unread', 0);\n            xabber.recountAllMessageCounter(unread);\n            xabber.toolbar_view.recountAllMessageCounter(unread);\n        }\n    },\n\n    searchMessages: function (query, callback) {\n        this.messages_view = new xabber.SearchedMessagesView({\n            query_text: query,\n            model: this\n        });\n        this.messages_view.messagesRequest({}, () => {\n            xabber.body.setScreen('all-chats', {\n                right: 'searched_messages',\n                model: this\n            });\n        });\n    },\n\n    sendDataForm: function (message, variable) {\n        let data_form = message.get('data_form');\n        if (!data_form)\n            return;\n        let msg = $msg({type: 'chat'});\n        data_form.fields.forEach((field) => {\n            if (field.type  === 'boolean') {\n                if (field.var === variable)\n                    field.values = [true];\n                else\n                    field.values = [false];\n            }\n        });\n        msg = this.account.addDataFormToStanza(msg, data_form);\n        data_form.addresses.forEach((address) => {\n            if (address.type === 'replyto')\n                $(msg.nodeTree).attr('to', address.jid);\n            this.account.sendMsg(msg);\n        });\n    },\n\n    setStanzaId: function (unique_id, stanza_id) {\n        let message = this.messages.get(unique_id),\n            origin_id = message.get('origin_id');\n        if (this.item_view && this.item_view.content && stanza_id)\n            this.item_view.content.$(`.chat-message[data-uniqueid=\"${unique_id}\"]`).data('uniqueid', stanza_id)[0].setAttribute('data-uniqueid', stanza_id);\n        message.set('stanza_id', stanza_id);\n        if (this.get('encrypted'))\n            this.account.omemo && this.account.omemo.updateMessage({stanza_id, origin_id}, this.contact);\n    },\n\n    getCallingAvailability: function (to, session_id, callback) {\n        let iq = $iq({to: to, type: 'get'})\n            .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n            .c('session', {id: session_id});\n        this.account.sendIQFast(iq, callback);\n    },\n\n    sendReject: function (options) {\n        !options && (options = {});\n        let msg_to = options.to || this.contact.get('jid'),\n            $reject_msg = $msg({\n                type: 'chat',\n                to: msg_to\n            })\n                .c('reject', {xmlns: Strophe.NS.JINGLE_MSG, id: options.session_id})\n                .c('call', {reason: options.reason}).up().up()\n                .c('store', {xmlns: Strophe.NS.HINTS}).up()\n                .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n                .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n        this.account.sendMsg($reject_msg);\n    },\n\n    initIncomingCall: function (full_jid, session_id) {\n        if (!xabber.get('audio') || !xabber.settings.jingle_calls) {\n            return;\n        }\n        xabber.current_voip_call = new xabber.JingleMessage({contact_full_jid: full_jid, session_id: session_id, call_initiator: this.contact.get('jid')}, {contact: this.contact, });\n        xabber.current_voip_call.modal_view.show({status: 'in'});\n        xabber.trigger('update_jingle_button');\n        if (xabber.body.screen.get('name') === 'all-chats' && !xabber.body.screen.get('right') && this.item_view)\n            this.item_view.open();\n    },\n\n    showEphemeralTimerSelector: function (full_jid, session_id) {\n        this.ephemeral_timer_selector = new xabber.EphemeralTimerSelector();\n        this.ephemeral_timer_selector.show({model: this, account: this.account});\n    },\n\n    endCall: function (status) {\n        status && xabber.current_voip_call.set('status', status);\n        xabber.trigger('update_jingle_button');\n        xabber.current_voip_call.destroy(status);\n        xabber.current_voip_call = null;\n        xabber.trigger('update_jingle_button');\n    },\n\n    getAllMessageRetractions: function () {\n        if (!this.contact.get('group_chat'))\n            return;\n        let retractions_query = $iq({type: 'get', to: this.contact.get('jid')})\n            .c('query', {xmlns: Strophe.NS.REWRITE, version: this.retraction_version});\n        this.account.sendIQ(retractions_query);\n    },\n\n    receiveMessage: function ($message, options) {\n        let from_bare_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            carbon_copied = options.carbon_copied;\n        // searching chat marker message\n        let $marker = $message.children(`[xmlns=\"${Strophe.NS.CHAT_MARKERS}\"]`),\n            $receipt_request = $message.children(`request[xmlns=\"${Strophe.NS.RECEIPTS}\"]`),\n            $receipt_response = $message.children(`received[xmlns=\"${Strophe.NS.RECEIPTS}\"]`),\n            $jingle_msg_propose = $message.children(`propose[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n            $jingle_msg_accept = $message.children(`accept[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n            $jingle_msg_reject = $message.children(`reject[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`);\n        if ($jingle_msg_propose.length && !options.searched_message) {\n            if (carbon_copied && (from_bare_jid == this.account.get('jid'))) {\n                return;\n            }\n            if (options.synced_msg){\n                if (this.get('saved'))\n                    return;\n                let view = xabber.chats_view.child(this.contact.hash_id);\n                $message.find('time').attr('stamp') && this.set('timestamp', $message.find('time').attr('stamp'));\n                if (!view.content)\n                    view.content = new xabber.ChatContentView({chat_item: view});\n                if (view && view.content)\n                    view.content.receiveNoTextMessage($message, carbon_copied);\n                return;\n            }\n            if (options.is_archived)\n                return;\n            else {\n                let session_id = $jingle_msg_propose.attr('id'),\n                    iq_to = $message.attr('from');\n                this.getCallingAvailability(iq_to, session_id, () => {\n                    if (xabber.current_voip_call) {\n                        let reason = from_bare_jid === Strophe.getBareJidFromJid(xabber.current_voip_call.get('contact_full_jid')) ? 'device_busy' : 'busy';\n                        this.sendReject({session_id: session_id, reason: reason});\n                        this.messages.createSystemMessage({\n                            from_jid: this.account.get('jid'),\n                            message: xabber.getString(\"jingle__system_message__cancelled_call\")\n                        });\n                        return;\n                    }\n                    this.initIncomingCall(iq_to, session_id);\n                });\n            }\n        }\n        if ($jingle_msg_accept.length) {\n            if (options.is_archived || options.synced_msg)\n                return;\n            if (xabber.current_voip_call && xabber.current_voip_call.get('session_id') === $jingle_msg_accept.attr('id')) {\n                if (carbon_copied)\n                    this.endCall('accepted_another_device');\n                else {\n                    !xabber.current_voip_call.get('state') && xabber.current_voip_call.set('state', constants.JINGLE_MSG_ACCEPT);\n                    xabber.trigger('update_jingle_button');\n                    let jingle_start = $jingle_msg_accept.find('time').attr('stamp');\n                    jingle_start = jingle_start ? Number(moment(jingle_start)) : moment.now();\n                    xabber.current_voip_call.set('jingle_start', jingle_start);\n                    !xabber.current_voip_call.get('contact_full_jid') && xabber.current_voip_call.set('contact_full_jid', $message.attr('from'));\n                    xabber.stopAudio(xabber.current_voip_call.audio_notifiation);\n                    xabber.current_voip_call.set('status', 'connecting');\n                    xabber.trigger('update_jingle_button');\n                    xabber.current_voip_call.updateStatus(xabber.getString(\"dialog_jingle_message__status_connecting\"));\n                    xabber.current_voip_call.audio_notifiation = xabber.playAudio(xabber.settings.sound_on_connection);\n                }\n            }\n        }\n        if ($jingle_msg_reject.length) {\n            if (this.messages.filter(m => m.get('session_id') === $jingle_msg_reject.attr('id')).length)\n                return;\n            let time = options.delay && options.delay.attr('stamp') || $message.find('delay').attr('stamp') || $message.find('time').attr('stamp'), message, msg_text = \"\";\n            if ($jingle_msg_reject.children('call').length) {\n                let duration = $jingle_msg_reject.children('call').attr('duration'),\n                    initiator = $jingle_msg_reject.children('call').attr('initiator');\n                if (duration && initiator)\n                    msg_text =xabber.getString(((initiator && initiator === this.account.get('jid')) ? \"jingle__system_message__outgoing_call\" : \"jingle__system_message__incoming_call\"), [utils.pretty_duration(duration)]);\n                else\n                    msg_text =  xabber.getString(\"jingle__system_message__cancelled_call\");\n            }\n            else\n                msg_text =  xabber.getString(\"jingle__system_message__cancelled_call\");\n            options.is_unread && (options.reject_contact_stanza_id = options.contact_stanza_id);\n            message = this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                time: time,\n                session_id: $jingle_msg_reject.attr('id'),\n                stanza_id: options.stanza_id,\n                contact_stanza_id: options.reject_contact_stanza_id,\n                is_unread: options.is_unread,\n                message: msg_text\n            });\n            if (options.is_archived || options.synced_msg)\n                return message;\n            if (xabber.current_voip_call && xabber.current_voip_call.get('session_id') === $jingle_msg_reject.attr('id')) {\n                xabber.stopAudio(xabber.current_voip_call.audio_notifiation);\n                let busy_audio = xabber.playAudio(xabber.settings.sound_on_call_busy);\n                setTimeout(() => {\n                    xabber.stopAudio(busy_audio);\n                }, 1500);\n                this.endCall($jingle_msg_reject.children('call').attr('reason') == 'device_busy' ? 'device_busy' : $jingle_msg_reject.children('call').attr('reason') == 'busy' ? 'busy' : 'disconnected');\n            }\n            return message;\n        }\n        if (!options.is_archived) {\n            let $stanza_id, $contact_stanza_id;\n            $message.children('stanza-id').each((idx, stanza_id) => {\n                stanza_id = $(stanza_id);\n                if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length) {\n                    if (stanza_id.attr('by') === from_bare_jid) {\n                        !$stanza_id && ($stanza_id = stanza_id);\n                        $contact_stanza_id = stanza_id;\n                    }\n                    else\n                        $stanza_id = stanza_id;\n                }\n                else {\n                    if (stanza_id.attr('by') === from_bare_jid)\n                        $contact_stanza_id = stanza_id;\n                    else\n                        $stanza_id = stanza_id;\n                }\n            });\n            (!options.stanza_id && $stanza_id) && (options.stanza_id = $stanza_id.attr('id'));\n            (!options.contact_stanza_id && $contact_stanza_id) && (options.contact_stanza_id = $contact_stanza_id.attr('id'));\n        }\n        if ($marker.length) {\n            let marker_tag = $marker[0].tagName.toLowerCase();\n            if ((marker_tag === 'markable') && !options.is_mam && !options.is_archived && !carbon_copied && (!options.synced_msg || options.synced_msg && options.is_unread)) {\n                this.sendMarker($message.attr('id'), 'received', options.stanza_id, options.contact_stanza_id);\n                this.get('saved') && this.sendMarker($message.attr('id'), 'displayed', options.stanza_id, options.contact_stanza_id);\n            }\n            if ((marker_tag !== 'markable') && !carbon_copied) {\n                this.receiveMarker($message, marker_tag, carbon_copied);\n                return;\n            }\n            if ((marker_tag === 'displayed') && carbon_copied)\n                this.receiveCarbonsMarker($marker);\n        }\n\n        if ($receipt_request.length && !options.is_mam && !options.is_archived && !carbon_copied && (!options.synced_msg || options.synced_msg && options.is_unread))\n            this.sendDeliveryReceipt($message);\n\n        if ($receipt_response.length)\n            this.receiveDeliveryReceipt($message);\n\n        if (!$message.find('body').length || $jingle_msg_propose.length || $jingle_msg_accept.length || $jingle_msg_reject.length) {\n            if (this.get('saved'))\n                return;\n            let view = xabber.chats_view.child(this.contact.hash_id);\n            if (!view.content)\n                view.content = new xabber.ChatContentView({chat_item: view});\n            if (view && view.content)\n                view.content.receiveNoTextMessage($message, carbon_copied);\n            return;\n        }\n\n        if ($message.find('invite').length) {\n            if (from_bare_jid === this.account.get('jid'))\n                return;\n            let group_jid = $message.find('invite').attr('jid') || $message.find('message').attr('from'),\n                contact = this.account.contacts.get(group_jid), chat;\n            if (contact)\n                if (contact.get('subscription') == 'both')\n                    return;\n            if (this.account.connection && this.account.connection.do_synchronization) {\n                if (options.synced_msg || !options.synced_msg && !options.is_archived)\n                    return this.messages.createInvitationFromStanza($message, options);\n            } else {\n                let iq = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING});\n                this.account.sendIQFast(iq, (iq) => {\n                        let items = $(iq).find('item'),\n                            current_timestamp = Number(moment($message.find('delay').attr('stamp') || $message.find('time').attr('stamp') || (options.delay) && Number(moment(options.delay.attr('stamp'))) || moment.now())),\n                            last_blocking_timestamp,\n                            has_blocking = false;\n                        if (items.length > 0) {\n                            items.each((idx, item) => {\n                                let $item = $(item),\n                                    item_jid = $item.attr('jid'), blocking_timestamp = \"\";\n                                if (item_jid.indexOf(group_jid) > -1) {\n                                    has_blocking = true;\n                                    blocking_timestamp = item_jid.substr(item_jid.lastIndexOf(\"/\") + 1, item_jid.length - group_jid.length);\n                                    if (!blocking_timestamp) {\n                                        last_blocking_timestamp = \"\";\n                                        return false;\n                                    } else if (!last_blocking_timestamp || last_blocking_timestamp < blocking_timestamp)\n                                        last_blocking_timestamp = blocking_timestamp;\n                                }\n                            });\n                        }\n                        if (_.isUndefined(last_blocking_timestamp) || last_blocking_timestamp && last_blocking_timestamp < current_timestamp)\n                            return this.messages.createInvitationFromStanza($message, options);\n                    }, () => {\n                        return this.messages.createInvitationFromStanza($message, options);\n                    });\n            }\n        }\n        else{\n            return this.messages.createFromStanza($message, options);\n        }\n    },\n\n    getMessageContext: function (unique_id, options) {\n        options = options || {};\n        let messages = options.mention && this.account.messages || options.searched_messages && !options.encrypted && this.account.searched_messages || options.message && xabber.all_searched_messages || this.account.messages,\n            message = messages.get(unique_id),\n            dfd = new $.Deferred;\n\n        dfd.done(() => {\n            if (message) {\n                if (options.searched_messages)\n                    message.set('searched_message', false);\n                let stanza_id = message.get('stanza_id');\n                this.messages_view = new xabber.MessageContextView({\n                    contact: this.contact,\n                    mention_context: options.mention,\n                    model: this,\n                    stanza_id_context: stanza_id,\n                    encrypted: options.encrypted\n                });\n                this.account.context_messages.add(message);\n                this.messages_view.messagesRequest({after: stanza_id}, () => {\n                    let screen = 'all-chats';\n                    if (options.mention)\n                        screen = 'mentions';\n                    else if (options.message)\n                        screen = xabber.body.screen.get('name');\n                    xabber.body.setScreen(screen, {\n                        right: 'message_context',\n                        model: this,\n                    }, {\n                        right_contact_save: true\n                    });\n                });\n            }\n\n        })\n        if (!message) {\n            message = messages.models.find(item => {\n                return item.get('origin_id') === unique_id;\n            })\n            if (!message) {\n                this.contact.getMessageByStanzaId(unique_id, ($message) => {\n                    if (options.encrypted && this.account.omemo) {\n                        let omemo_dfd = new $.Deferred;\n                        omemo_dfd.done(($msg, msg_options) => {\n                            msg_options = msg_options || {};\n                            msg_options.searched_message = true;\n                            message = this.account.chats.receiveChatMessage($msg[0], msg_options);\n                            dfd.resolve();\n                        }).fail(() => {\n                            dfd.resolve();\n                        });\n                        message = this.account.omemo.receiveChatMessage($message, {\n                            searched_message: true,\n                            gallery: true,\n                        }, omemo_dfd);\n\n                    } else {\n                        message = this.account.chats.receiveChatMessage($message, {\n                            searched_message: true,\n                        });\n                        dfd.resolve();\n                    }\n                }, {encrypted: options.encrypted});\n\n            } else {\n                dfd.resolve()\n            }\n        } else {\n            dfd.resolve()\n        }\n    },\n\n    sendDeliveryReceipt: function ($message) {\n        let $delivery_msg = $msg({\n            to: this.contact.get('jid'),\n            type: 'chat',\n            id: uuid()})\n            .c('received', { xmlns: Strophe.NS.RECEIPTS, id: $message.attr('id')});\n        this.account.sendMsg($delivery_msg);\n    },\n\n    sendMarker: function (msg_id, status, stanza_id, contact_stanza_id, is_ephemeral) {\n        status || (status = 'displayed');\n        let stanza = $msg({\n            to: this.get('jid'),\n            type: 'chat',\n            id: uuid()\n        }).c(status).attrs({\n            xmlns: Strophe.NS.CHAT_MARKERS,\n            id: msg_id || stanza_id || contact_stanza_id || \"\"\n        });\n        stanza_id && stanza.c('stanza-id', {xmlns: 'urn:xmpp:sid:0', id: stanza_id, by: this.account.get('jid')}).up();\n        (!this.get('saved') && contact_stanza_id) && stanza.c('stanza-id', {xmlns: 'urn:xmpp:sid:0', id: contact_stanza_id, by: this.contact.get('jid')}).up();\n        is_ephemeral && stanza.up().c('store', {xmlns: Strophe.NS.HINTS});\n        is_ephemeral && stanza.up().c('encryption', {xmlns: Strophe.NS.EXPLICIT_MESSAGE_ENCRYPTION, namespace: Strophe.NS.OMEMO});\n        is_ephemeral && stanza.up().c('conversation', {xmlns: Strophe.NS.SYNCHRONIZATION, type: Strophe.NS.OMEMO, jid: this.contact.get('jid')});\n        this.account.sendMsg(stanza);\n    },\n\n    receiveMarker: function ($message, tag, carbon_copied) {\n        let $displayed = $message.find('displayed'),\n            $received = $message.find('received'),\n            error = $message.attr('type') === 'error';\n        if (error || !$displayed.length && !$received.length)\n            return;\n        let marked_msg_id = $displayed.attr('id') || $received.attr('id'),\n            marked_stanza_id = $displayed.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id') || $received.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg = this.account.messages.find(m => marked_stanza_id && (m.get('stanza_id') === marked_stanza_id || m.get('contact_stanza_id') === marked_stanza_id) || m.get('msgid') === marked_msg_id);\n        if (!msg) {\n            let enc_chat =  this.account.chats.get(`${this.id}:encrypted`),\n                enc_msg = enc_chat && enc_chat.messages.find(m => marked_stanza_id && (m.get('stanza_id') === marked_stanza_id || m.get('contact_stanza_id') === marked_stanza_id) || m.get('msgid') === marked_msg_id);\n            if (!enc_msg && this.account.omemo){\n                let cached_msg = this.account.omemo.cached_messages.getMessage(this.contact, marked_stanza_id);\n                if (cached_msg && cached_msg.envelope && !cached_msg.displayed_time){\n                    cached_msg.displayed_time = $message.find('time').attr('stamp');\n                    cached_msg && this.account.omemo.cached_messages.putMessage(this.contact, marked_stanza_id, cached_msg);\n                }\n            }\n            if (enc_msg)\n                enc_chat.receiveMarker($message, tag, carbon_copied);\n            return;\n        }\n        if (msg.isSenderMe()) {\n            if ($received.length) {\n                let msg_state = msg.get('state');\n                if (msg_state === constants.MSG_ERROR){\n                    msg.set('state', constants.MSG_DELIVERED)\n                    return;\n                }\n                if (msg_state !== constants.MSG_DISPLAYED) {\n                    let delivered_time = $received.children('time').attr('stamp');\n                    if (delivered_time) {\n                        msg.set('time', pretty_datetime(delivered_time));\n                        msg.set('timestamp', Number(delivered_time));\n                    }\n                }\n                this.setMessagesDelivered(msg.get('timestamp'));\n            } else {\n                let msg_state = msg.get('state');\n                if (msg_state === constants.MSG_ERROR){\n                    msg.set('state', constants.MSG_DISPLAYED)\n                    return;\n                }\n                this.setMessagesDisplayed(msg.get('timestamp'));\n            }\n        } else {\n            msg.set('is_unread', false);\n            if ($message.find('time').length && msg.get('ephemeral_timer')) {\n                msg.set('displayed_time', $message.find('time').attr('stamp'));\n                msg.collection.checkEphemeralTimers();\n            }\n        }\n    },\n\n    setMessagesDelivered: function (timestamp) {\n        !timestamp && (timestamp = moment.now());\n        let undelivered_messages = this.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DELIVERED));\n        if (!undelivered_messages.length) {\n            let chat =  this.account.chats.get(this.id + ':encrypted');\n            chat && (undelivered_messages = chat.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DELIVERED)));\n        }\n        undelivered_messages.forEach(message => message.set('state', constants.MSG_DELIVERED));\n    },\n\n    setMessagesDisplayed: function (timestamp) {\n        !timestamp && (timestamp = moment.now());\n        let undelivered_messages = this.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DISPLAYED));\n        if (!undelivered_messages.length) {\n            let chat =  this.account.chats.get(this.id + ':encrypted');\n            chat && (undelivered_messages = chat.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DISPLAYED)));\n        }\n        undelivered_messages.forEach(message => {\n            message.set('state', constants.MSG_DISPLAYED);\n            if (message.get('ephemeral_timer')){\n                message.set('displayed_time', Date.now());\n                message.collection.checkEphemeralTimers();\n            }\n        });\n    },\n\n    receiveCarbonsMarker: function ($marker) {\n        let stanza_id = $marker.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg_id = $marker.attr('id'),\n            msg = this.messages.find(m => stanza_id && (m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id) || m.get('msgid') === msg_id), msg_idx;\n        msg && (msg_idx = this.messages.indexOf(msg));\n        if (!msg) {\n            let enc_chat =  this.account.chats.get(this.id + ':encrypted'),\n                enc_msg = enc_chat && enc_chat.messages.find(m => stanza_id && (m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id) || m.get('msgid') === msg_id);\n            if (enc_msg){\n                enc_chat.receiveCarbonsMarker($marker);\n                return;\n            }\n        }\n        if (this.get('const_unread') && this.get('last_read_msg')){\n            let last_read_msg_id = this.get('last_read_msg'),\n                last_read_msg = this.messages.find(m => stanza_id && (m.get('stanza_id') === last_read_msg_id || m.get('contact_stanza_id') === last_read_msg_id)),\n                deferred = new $.Deferred(),\n                second_deferred = new $.Deferred(),\n                new_last_read_msg = msg;\n            second_deferred.done(() => {\n                if (last_read_msg.get('timestamp') < new_last_read_msg.get('timestamp')){\n                    this.set('last_read_msg', new_last_read_msg.get('stanza_id'))\n                    this.trigger('update_last_read_msg');\n                }\n            });\n            deferred.done(() => {\n                if (!new_last_read_msg){\n                    this.contact.getMessageByStanzaId(stanza_id, ($message) => {\n                        new_last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                        second_deferred.resolve()\n                    });\n                } else {\n                    second_deferred.resolve()\n                }\n            });\n            if (!last_read_msg){\n                this.contact.getMessageByStanzaId(last_read_msg_id, ($message) => {\n                    last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                    deferred.resolve()\n                });\n            } else {\n                deferred.resolve()\n            }\n        }\n        if (msg_idx > -1) {\n            for (let i = msg_idx; i >= 0; i--) {\n                let message = this.messages.models[i];\n                message.set('is_unread', false);\n            }\n        }\n        else {\n            let unread_msg = this.messages_unread.find(m => m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id || m.get('msgid') === msg_id);\n            unread_msg && unread_msg.set('is_unread', false);\n        }\n    },\n\n    receiveDeliveryReceipt: function ($message) {\n        let $received = $message.find('received'),\n            delivered_origin_id = $received.attr('id'),\n            delivered_stanza_id = $received.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg = this.account.messages.get(delivered_origin_id || delivered_stanza_id);\n        if (!msg)\n            return;\n        msg.isSenderMe() && msg.set('state', constants.MSG_DELIVERED);\n    },\n\n    onPresence: function (type) {\n        let jid = this.get('jid');\n        if (!this.contact.get('group_chat') && !this.contact.get('in_roster')) {\n            if (type === 'subscribe') {\n                this.messages.createSystemMessage({\n                    from_jid: jid,\n                    auth_request: true,\n                    message: xabber.getString(\"action_subscription_received\")\n                });\n            }\n        }\n    },\n\n    onRosterPush: function (type) {\n        let jid = this.get('jid');\n        // not used\n        if (type === 'remove')\n            this.messages.createSystemMessage({\n                from_jid: jid,\n                silent: false,\n                message: xabber.getString(\"action_contact_deleted\")\n            });\n\n    },\n\n    retractMessages: function (msgs, group_chat, symmetric) {\n        let msgs_responses = 0, count = msgs.length, dfd = new $.Deferred();\n        dfd.done((num) => {\n            if (num === 0) {\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            }\n            else if (num !== msgs.length) {\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            }\n        });\n        $(msgs).each((idx, item) => {\n            let stanza_id = item.get('stanza_id'),\n                contact_stanza_id = item.get('contact_stanza_id');\n            if (stanza_id || contact_stanza_id) {\n                let iq_retraction = $iq({type: 'set', to: group_chat ? (this.contact.get('full_jid') || this.contact.get('jid')) : this.account.get('jid')})\n                    .c('retract-message', {\n                        id: (this.get('group_chat') && contact_stanza_id || stanza_id),\n                        xmlns: Strophe.NS.REWRITE,\n                        symmetric: symmetric,\n                        type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this),\n                        by: this.account.get('jid')\n                    });\n                this.account.sendIQFast(iq_retraction, (success) => {\n                        this.item_view.content.removeMessage(item);\n                        msgs_responses++;\n                        (msgs_responses === msgs.length) && dfd.resolve(count);\n                    }, (error) => {\n                        msgs_responses++;\n                        if ($(error).find('not-allowed').length)\n                            count--;\n                        (msgs_responses === msgs.length) && dfd.resolve(count);\n                    });\n            }\n        });\n    },\n\n    retractMessagesByUser: function (user_id) {\n        let iq_retraction = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('retract-user', {\n                id: user_id,\n                xmlns: Strophe.NS.REWRITE,\n                type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this),\n                symmetric: true\n            });\n        this.account.sendIQFast(iq_retraction, (success) => {\n            let user_msgs = this.messages.filter(msg => msg.get('user_info') && (msg.get('user_info').id == user_id));\n            $(user_msgs).each((idx, msg) => {\n                this.item_view.content.removeMessage(msg);\n            });\n        }, (error) => {\n            if ($(error).find('not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n        });\n    },\n\n    retractAllMessages: function (symmetric, callback, errback) {\n        let is_group_chat = this.get('group_chat'),\n            iq_retraction = $iq({type: 'set', to: is_group_chat ? (this.contact.get('full_jid') || this.contact.get('jid')) : this.account.get('jid')}),\n            retract_attrs = {\n                xmlns: Strophe.NS.REWRITE,\n                type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this),\n                symmetric: symmetric\n        };\n        retract_attrs.conversation = this.get('jid');\n        this.get('encrypted') && (retract_attrs.type = 'encrypted');\n        iq_retraction.c('retract-all', retract_attrs);\n        this.account.sendIQFast(iq_retraction, (iq_response) => {\n            let all_messages = this.messages.models;\n            $(all_messages).each((idx, msg) => {\n                this.item_view.content.removeMessage(msg);\n            });\n            callback && callback();\n        }, (error) => {\n            if ($(error).find('not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            errback && errback();\n        });\n    },\n\n    showBlockedRequestMessage: function () {\n        if (this.messages.length)\n            this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                message: xabber.getString(\"action_contact_blocked\"),\n                time: this.messages.last().get('time')\n            });\n    },\n\n    muteChat: function (muted_seconds) {\n        let muted = this.isMuted(),\n            is_muted = muted && muted !== '0' ? true : false,\n            muted_value = is_muted ? '' : '0';\n        if (muted_seconds || muted_seconds === '')\n            muted_value = muted_seconds;\n        let conversation_options = {\n            jid: this.contact.get('jid'),\n            mute: muted_value,\n            type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this)\n        },\n        iq = $iq({type: 'set', to: this.account.get('jid')})\n            .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n            .c('conversation', conversation_options);\n        this.account.sendIQFast(iq);\n    },\n\n    getConversationType: function (chat) {\n        if(chat.get('encrypted'))\n            return Strophe.NS.SYNCHRONIZATION_OMEMO;\n        if(chat.contact.get('group_chat'))\n            return Strophe.NS.GROUP_CHAT;\n        return Strophe.NS.SYNCHRONIZATION_REGULAR_CHAT\n    },\n\n    deleteFromSynchronization: function (callback, errback) {\n        let conversation_options = {jid: this.get('jid'), status: 'deleted', type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this) };\n        this.account.cached_sync_conversations.removeFromCachedConversations(conversation_options.jid +  '/' + conversation_options.type);\n        let iq = $iq({type: 'set', to: this.account.get('jid')})\n            .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n            .c('conversation', conversation_options);\n        this.account.sendIQFast(iq, (success) => {\n            callback && callback(success);\n        }, (error) => {\n            errback && errback(error);\n        });\n    }\n});\n\nxabber.ChatItemView = xabber.BasicView.extend({\n    className: 'chat-item list-item',\n    template: templates.chat_item,\n    avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n    events: {\n        'click': 'openByClick'\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.message_counter = 0;\n        this.$el.attr('data-id', this.model.id);\n        if (!this.model.sync_created)\n            this.content = new xabber.ChatContentView({chat_item: this});\n        this.content_placeholder = new xabber.ChatContentPlaceholderView();\n        this.updateName();\n        this.updateStatus();\n        this.updateCounter();\n        this.updateAvatar();\n        this.updateMutedState();\n        this.updatePinned();\n        this.updateArchivedState();\n        this.updateColorScheme();\n        this.updateGroupChats();\n        this.updateIcon();\n        this.updateEncrypted();\n        this.updateChatError();\n        this.model.on(\"change:active\", this.updateActiveStatus, this);\n        this.model.on(\"change:unread\", this.updateCounter, this);\n        this.model.on(\"change:encrypted\", this.updateEncrypted, this);\n        this.model.on(\"change:const_unread\", this.updateCounter, this);\n        this.model.on(\"change:pinned\", this.updatePinned, this);\n        this.model.on(\"change:archived\", this.updateArchivedState, this);\n        this.model.on(\"change:muted\", this.updateMutedState, this);\n        this.model.on(\"open\", this.open, this);\n        this.model.on(\"remove_opened_chat\", this.onClosed, this);\n        this.model.messages.on(\"add\", this.updateChatCard, this);\n        this.model.messages.on(\"destroy\", this.onMessageRemoved, this);\n        this.model.messages.on(\"change:state\", this.onChangedMessageState, this);\n        if (this.contact) {\n            this.updateIncomingSubscription();\n            this.contact.on(\"change:name\", this.updateName, this);\n            this.contact.on(\"change:invitation\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription_request_in\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription_request_out\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:status\", this.updateStatus, this);\n            this.contact.on(\"change:private_chat\", this.updateIcon, this);\n            this.contact.on(\"change:invitation\", this.updateIcon, this);\n            this.contact.on(\"change:incognito_chat\", this.updateIcon, this);\n            this.contact.on(\"change:image\", this.updateAvatar, this);\n            this.contact.on(\"change:blocked\", this.onBlocked, this);\n            this.contact.on(\"change:group_chat\", this.updateGroupChats, this);\n            this.contact.on(\"change:in_roster\", this.updateAcceptedStatus, this);\n            this.contact.on(\"remove_invite\", this.removeInvite, this);\n            this.contact.on(\"update_trusted\", this.updateEncryptedColor, this);\n        }\n        this.$el.switchClass('saved-chat', this.model.get('saved'));\n        this.$el.find('.circle-avatar').switchClass('ground-color-700', this.model.get('saved'));\n        this.model.get('saved') && this.$el.find('.circle-avatar').html(env.templates.svg['saved-messages']());\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n    },\n\n    render: function () {\n        if (this.model.get('saved') && (this.$('.chat-title').text() !== xabber.getString(\"saved_messages__header\"))) {\n            this.$('.chat-title').text(xabber.getString(\"saved_messages__header\"));\n        }\n    },\n\n    updateChatCard: function (msg) {\n        if (this.content){\n            return;\n        }\n        if (this.message_counter == 0 && !(!msg.get('synced_from_server') && msg.get('encrypted') && this.model.get('encrypted'))){\n            this.message_counter++;\n            return\n        }\n        this.content = new xabber.ChatContentView({ chat_item: this, new_message: msg });\n        this.updateLastMessage(msg);\n        return;\n    },\n\n    onChangedMessageState: function (message) {\n        if (message.get('state') === constants.MSG_DISPLAYED && this.model.get('last_displayed_id') < message.get('stanza_id')) {\n            this.model.set('last_displayed_id', message.get('stanza_id'));\n            this.model.set('last_delivered_id', message.get('stanza_id'));\n        } else if (message.get('state') === constants.MSG_DELIVERED && this.model.get('last_delivered_id') < message.get('stanza_id')) {\n            this.model.set('last_delivered_id', message.get('stanza_id'));\n        }\n        if (this.content) {\n            let $message = this.content.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`),\n                $elem = $message.find('.msg-delivering-state');\n            $elem.attr({\n                'data-state': message.getState(),\n                'title': message.getVerboseState()\n            });\n            ($elem.attr('data-state') === constants.MSG_STATE[constants.MSG_ERROR]) && $elem.dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'left'\n            });\n        }\n        if (message === this.model.last_message) {\n            this.updateLastMessage();\n        }\n        this.updateChatError();\n    },\n\n    updateName: function () {\n        if (this.model.get('saved')) {\n            this.$('.chat-title').text(xabber.getString(\"saved_messages__header\"));\n            return;\n        }\n        this.$('.chat-title').text(this.contact.get('name'));\n    },\n\n    updateStatus: function () {\n        if (this.model.get('saved'))\n            return;\n        let status = this.contact.get('status');\n        this.$('.status').attr('data-status', status);\n        this.$('.chat-icon').attr('data-status', status);\n    },\n\n    updateActiveStatus: function () {\n        this.$el.switchClass('active', this.model.get('active'));\n        this.updateLastMessage();\n    },\n\n    updateAcceptedStatus: function () {\n        let in_roster = this.contact.get('in_roster');\n        if (in_roster)\n            this.model.set('is_accepted', true);\n    },\n\n    onBlocked: function () {\n        this.updateIcon();\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n\n    updateCounter: function () {\n        let unread = this.model.get('unread') + this.model.get('const_unread');\n        this.$('.msg-counter').showIf(unread).text(unread || '');\n        this.updateTextClipping();\n    },\n\n    updateIncomingSubscription: function () {\n        this.$('.msg-incoming-subscription').showIf(this.contact.get('invitation') || (this.contact.get('subscription_request_in') && this.contact.get('subscription') != 'both'));\n        this.updateTextClipping();\n    },\n\n    updateChatError: function () {\n        let error_msgs = this.model.messages.filter(m => m.get('state') === -1)\n        this.$('.msg-chat-error').showIf(error_msgs.length);\n        this.updateTextClipping();\n    },\n\n    updateTextClipping: function () {\n        let indicators_count = this.$('.chat-item-notifications-wrap').children(':not(.hidden)').length;\n        this.$('.last-msg').switchClass('triple-indicators', indicators_count === 3)\n        this.$('.last-msg').switchClass('quad-indicators', indicators_count === 4)\n    },\n\n    updateAvatar: function () {\n        if (this.model.get('saved'))\n            return;\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateEncrypted: function () {\n        this.$el.switchClass('encrypted', this.model.get('encrypted'));\n    },\n\n    updatePinned: function () {\n        let is_pinned = this.model.get('pinned');\n        this.$('.pinned-icon').showIf(is_pinned && is_pinned !== '0');\n        if (is_pinned)\n            xabber.chats_view.updateChatPosition(this.model);\n    },\n\n    updateEncryptedColor: function (encrypted) {\n        this.$el.attr('data-trust', encrypted);\n    },\n\n    updateIcon: function () {\n        if (!this.contact)\n            return;\n        this.$('.chat-icon').addClass('hidden');\n        let ic_name = this.contact.getIcon();\n        ic_name && this.$('.chat-icon').removeClass('hidden group-invite blocked').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n    },\n\n    updateMutedState: function () {\n        if (!this.contact)\n            return;\n        this.$('.msg-counter').switchClass('muted-chat-counter', this.model.isMuted());\n        this.$('.muted-icon').switchClass('mdi-bell-off', (this.model.isMuted() > 4800000000)).switchClass('mdi-bell-sleep', (this.model.isMuted() <= 4800000000));\n        this.$('.muted-icon').showIf(this.model.isMuted());\n    },\n\n    updateArchivedState: function () {\n        if (!this.contact)\n            return;\n        let archived = this.model.get('archived');\n        if (archived || (!archived && xabber.toolbar_view.$('.active').hasClass('archive-chats')))\n            this.$el.detach();\n        if (archived && xabber.toolbar_view.$('.active').hasClass('archive-chats') || !archived && !xabber.toolbar_view.$('.active').hasClass('archive-chats'))\n            xabber.chats_view.updateChatPosition(this.model);\n    },\n\n    updateGroupChats: function () {\n        if (!this.contact)\n            return;\n        let is_group_chat = this.contact.get('group_chat');\n        this.$('.status').hideIf(is_group_chat);\n        this.$('.chat-icon').showIf(is_group_chat);\n        this.updateIcon();\n        if (is_group_chat) {\n            this.$el.addClass('group-chat');\n            this.model.set('group_chat', true);\n        }\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    onMessageRemoved: function (msg) {\n        if (this.model.last_message === msg) {\n            let last_message;\n            for (let idx = this.model.messages.length-1; idx >= 0; idx--) {\n                last_message = this.model.messages.at(idx);\n                if (!last_message.get('silent'))\n                    break;\n            }\n            this.model.last_message = last_message;\n            this.updateLastMessage();\n        }\n        this.deletePlayersFromMessage(msg);\n    },\n\n    deletePlayersFromMessage: function (message) {\n        let players = []\n        message.get('msg_player_videos') && (players = players.concat(message.get('msg_player_videos')));\n        message.get('msg_player_audios') && (players = players.concat(message.get('msg_player_audios')));\n        if (players.length){\n            if (xabber.current_plyr_player){\n                let is_current_player = xabber.current_plyr_player.is_popup ?\n                    players.includes(xabber.current_plyr_player.chat_item.model.plyr_players[xabber.current_plyr_player.player_index])\n                    : players.includes(xabber.current_plyr_player);\n\n                if (is_current_player){\n                    xabber.plyr_players.forEach((item) => {\n                        if (item.$audio_elem){\n                            if (item.$audio_elem.voice_message)\n                                item.$audio_elem.voice_message.stopTime()\n                        }\n                        else\n                            item.stop();\n                    })\n                    if (xabber.current_plyr_player.is_popup && xabber.plyr_player_popup){\n                        xabber.plyr_player_popup.closePopup();\n                    } else {\n                        xabber.current_plyr_player = null;\n                        xabber.trigger('plyr_player_updated');\n                    }\n                }\n            }\n            this.model.plyr_players = this.model.plyr_players.filter((obj) => !players.includes(obj));\n            xabber.plyr_players = xabber.plyr_players.filter((obj) => !players.includes(obj));\n            xabber.trigger('plyr_player_updated');\n        }\n    },\n\n    updateEmptyChat: function () {\n        let msg_time = this.model.get('timestamp'),\n            is_empty = Number(this.model.get('last_delivered_id')) || Number(this.model.get('last_displayed_id')) || Number(this.model.get('last_read_msg'));\n        this.$('.last-msg').html(xabber.getString(is_empty ? \"recent_chat__last_message_retracted\" : \"no_messages\").italics());\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateEncryptedChat: function () {\n        let msg_time = this.model.get('timestamp');\n        this.$('.last-msg').html(xabber.getString(\"recent_chat__decrypting_messages\").italics());\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateLastMessage: function (msg) {\n        msg || (msg = this.model.last_message);\n        if (!this.model.get('active') && this.model.item_view && this.model.item_view.content && this.model.item_view.content.bottom && this.model.item_view.content.bottom.$('.input-message .rich-textarea').getTextFromRichTextarea().trim()){\n            let draft_message = this.model.item_view.content.bottom.$('.input-message .rich-textarea').getTextFromRichTextarea();\n            this.$('.last-msg').html(draft_message).prepend($(`<span class=\"text-color-700\">${xabber.getString(\"draft\")}: </span>`));\n            this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n            msg && this.model.set({timestamp: msg.get('timestamp')});\n            return;\n        }\n        if (!msg) {\n            !this.model.messages.length && this.updateEmptyChat();\n            return;\n        }\n        let msg_time = msg.get('time'),\n            timestamp = msg.get('timestamp'), msg_from = \"\",\n            forwarded_message = msg.get('forwarded_message'),\n            msg_files = msg.get('files') || [],\n            msg_images = msg.get('images') || [],\n            msg_locations = msg.get('locations') || [],\n            msg_text = forwarded_message ? (msg.get('message') || xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText(),\n            msg_user_info = msg.get('user_info') || msg.isSenderMe() && this.contact && this.contact.my_info && this.contact.my_info.attributes || {};\n        msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n        this.model.set({timestamp: timestamp});\n        if (this.model.get('group_chat'))\n            msg_from = msg_user_info.nickname || msg_user_info.jid || (msg.isSenderMe() ? this.account.get('name') : msg.get('from_jid')) || \"\";\n        msg_from && (msg_from = $('<span class=\"text-color-700\"/>').text(msg_from + ': '));\n        if (msg_files.length || msg_images.length || msg_locations.length) {\n            let $colored_span = $('<span class=\"text-color-500\"/>');\n            if (msg.get('type') === 'file_upload') {\n                msg_images = msg_files.filter(f => f && f.type && utils.isImageType(f.type));\n                msg_files = msg_files.filter(f => f && !(f.type && utils.isImageType(f.type)));\n            }\n            if (msg_files.length && msg_images.length)\n                msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n            else {\n                if (msg_files.length == 1 && (msg_files[0].is_audio || msg_files[0].voice))\n                    msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(msg_files[0].duration));\n                else if (msg_files.length > 0) {\n                    let total_size = 0;\n                    msg_files.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_images.length > 0) {\n                    let total_size = 0;\n                    msg_images.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_locations.length > 0) {\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                }\n            }\n            this.$('.last-msg').html(\"\").append(msg_from).append(msg_text);\n        }\n        else {\n            if (msg.get('type') == 'system') {\n                msg_from = \"\";\n                if (msg.get('invite'))\n                    msg_text = xabber.getString(\"groupchat_invitation_to_group_chat\", [(this.contact && this.contact.get('incognito_chat')) ? 'incognito' : 'public']);\n                msg.get('private_invite') && (msg_text = xabber.getString(\"recent_chat__last_message__private_invitation\"));\n                if (this.model.get('group_chat'))\n                    msg_text = $('<i/>').text(msg_text);\n                else\n                    msg_text = $('<span class=text-color-500/>').text(msg_text);\n                this.$('.last-msg').html(msg_text);\n                if (msg.get('auth_request')){\n                    xabber.toolbar_view.recountAllMessageCounter();\n                }\n            }\n            else {\n                if (forwarded_message) {\n                    if (msg.get('message')) {\n                        msg_text = msg.get('message');\n                        this.$('.last-msg').text(msg_text);\n                    }\n                    else {\n                        let first_forwarded_msg = forwarded_message[0];\n                        if (first_forwarded_msg.get('message')) {\n                            let fwd_msg_files = first_forwarded_msg.get('files') || [],\n                                fwd_msg_images = first_forwarded_msg.get('images') || [],\n                                fwd_msg_locations = first_forwarded_msg.get('locations') || [];\n                            first_forwarded_msg.get('videos') && first_forwarded_msg.get('videos').length && (fwd_msg_files = fwd_msg_files.concat(first_forwarded_msg.get('videos')));\n                            if (fwd_msg_files.length || fwd_msg_images.length || fwd_msg_locations.length) {\n                                let $colored_span = $('<span class=\"text-color-500\"/>');\n                                if (msg.get('type') === 'file_upload') {\n                                    fwd_msg_images = fwd_msg_files.filter(f => f.type && utils.isImageType(f.type));\n                                    fwd_msg_files = fwd_msg_files.filter(f => !(f.type && utils.isImageType(f.type)));\n                                }\n                                if (fwd_msg_files.length && fwd_msg_images.length)\n                                    msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [fwd_msg_files.length + fwd_msg_images.length]));\n                                else {\n                                    if (fwd_msg_files.length == 1 && (fwd_msg_files[0].is_audio || fwd_msg_files[0].voice))\n                                        msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(fwd_msg_files[0].duration));\n                                    else if (fwd_msg_files.length > 0) {\n                                        let total_size = 0;\n                                        fwd_msg_files.forEach((f) => {total_size+=Number(f.size)});\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", fwd_msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                                    }\n                                    if (fwd_msg_images.length > 0) {\n                                        let total_size = 0;\n                                        fwd_msg_images.forEach((f) => {total_size+=Number(f.size)});\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", fwd_msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                                    }\n                                    if (fwd_msg_locations.length > 0) {\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", fwd_msg_locations.length));\n                                    }\n                                }\n                                if (this.model.get('group_chat')) {\n                                    this.$('.last-msg').html(\"\").append(msg_from).append('» ').append(msg_text);\n                                } else {\n                                    this.$('.last-msg').html(\"» \").append(msg_text);\n                                }\n                            } else if (this.model.get('group_chat')) {\n                                msg_text = first_forwarded_msg.get('message');\n                                msg_text = '» ' + msg_text;\n                                this.$('.last-msg').text(msg_text);\n                            } else {\n                                msg_text = first_forwarded_msg.get('message');\n                                this.$('.last-msg').text(msg_text);\n                                msg_from = '» ';\n                            }\n                        }\n                        else {\n                            if (forwarded_message.length === 1) {\n                                let fwd_msg_txt = xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).slice(2)\n                                fwd_msg_txt = fwd_msg_txt.charAt(0).toUpperCase() + fwd_msg_txt.slice(1)\n                                msg_text = $('<i/>').text(fwd_msg_txt);\n                                this.$('.last-msg').html('» ').append(msg_text);\n                            }\n                            else {\n                                msg_text = $('<i/>').text(xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length));\n                                this.$('.last-msg').html('» ').append(msg_text);\n                            }\n                        }\n                    }\n                }\n                else {\n                    msg_text = msg.getText();\n                    this.$('.last-msg').text(msg_text);\n                }\n            }\n            this.$('.last-msg').prepend(msg_from);\n        }\n        if (msg.get('not_encrypted'))\n            this.$('.last-msg').html(this.$('.last-msg').html().italics());\n        this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n        this.$('.msg-delivering-state').showIf(msg.get('type') !== 'system' && msg.isSenderMe() && (msg.get('state') !== constants.MSG_ARCHIVED))\n            .attr('data-state', msg.getState());\n    },\n\n    openByClick: function () {\n        this.open();\n    },\n\n    open: function (options) {\n        if (!this.content){\n            this.content = new xabber.ChatContentView({chat_item: this});\n        }\n        options || (options = {right_contact_save: true, clear_search: false});\n        xabber.chats_view.openChat(this, options);\n        this.content.bottom.click_counter = 0;\n        this.content.bottom.setDefaultPlaceholder();\n    },\n\n    removeInvite: function (options) {\n        if (!this.account.server_features.get(Strophe.NS.REWRITE))\n            return;\n        options || (options = {});\n        let msgs = _.clone(this.model.messages.models);\n        this.model.set({'last_archive_id': undefined, 'first_archive_id': undefined});\n        msgs.forEach((item) => {\n            if (item.get('invite')) {\n                let iq_retraction = $iq({type: 'set', to: this.account.get('jid')})\n                    .c('retract-message', {\n                        id: item.get('stanza_id'),\n                        xmlns: Strophe.NS.REWRITE,\n                        type: Strophe.NS.SYNCHRONIZATION_REGULAR_CHAT,\n                        symmetric: false,\n                    });\n                this.account.sendIQFast(iq_retraction);\n                item && this.content.removeMessage(item);\n            }\n        });\n        this.model.recountUnread();\n        delete this.contact.attributes.invitation;\n        this.updateIcon();\n    },\n\n    onClosed: function () {\n        this.parent.onChatRemoved(this.model, {soft: true});\n    }\n});\n\n  xabber.MessagesView = xabber.BasicView.extend({\n      template: templates.chat_content,\n      ps_selector: '.chat-content',\n      ps_settings: {\n          wheelPropagation: true\n      },\n      avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n\n      _initialize: function (options) {\n          this.model = options.model;\n          this.contact = options.contact;\n          this.account = this.model.account;\n          let color = this.account.settings.get('color');\n          this.$el.attr('data-color', color);\n          this.$search_form = this.$('.search-form-header');\n          this.loading_history = false;\n          this.history_loaded = false;\n          this.first_msg_id = 0;\n          this.last_msg_id = 0;\n          this._scrolltop = this.getScrollTop();\n          this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n          this.chat_content = options.chat_content || this.model.item_view.content;\n          let wheel_ev = this.defineMouseWheelEvent();\n          this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n          this.$('.back-to-bottom').click(this.backToBottom.bind(this));\n      },\n\n      defineMouseWheelEvent: function () {\n          if (!_.isUndefined(window.onwheel)) {\n              return \"wheel\";\n          } else if (!_.isUndefined(window.onmousewheel)) {\n              return \"mousewheel\";\n          } else {\n              return \"MozMousePixelScroll\";\n          }\n      },\n\n      keyupSearch: function (ev) {\n          if (ev.keyCode === constants.KEY_ENTER) {\n              let query = this.$search_form.find('input').val();\n              this.model.searchMessages(query, (messages) => {\n              });\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              this.chat_content.head.renderSearchPanel();\n          }\n      },\n\n      onMouseWheel: function (ev) {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onClickMessage:function (ev) {\n          this.chat_content.onClickMessage(ev);\n      },\n\n      onClickLink:function (ev) {\n          this.chat_content.onClickLink(ev);\n      },\n\n      onClickLocationLink:function (ev) {\n          this.chat_content.onClickLocationLink(ev);\n      },\n\n      onClickLocation:function (ev) {\n          this.chat_content.onClickLocation(ev);\n      },\n\n      onHoverLocation:function (ev) {\n          this.chat_content.onHoverLocation(ev);\n      },\n\n      onScroll: function () {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this._prev_scrolltop = this._scrolltop || this._prev_scrolltop || 0;\n          this._scrolltop = this.getScrollTop() || this._scrolltop || this._prev_scrolltop || 0;\n          if (!this.history_loaded && !this.loading_history && (this._scrolltop < this._prev_scrolltop) && (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n              this.loading_history = true;\n              this.messagesRequest({before: this.first_msg_id}, () => {\n                  this.loading_history = false;\n              });\n          }\n      },\n\n      backToBottom: function () {\n          this.openChat();\n          this.scrollToBottom();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      messagesRequest: function () {},\n\n      emptyChat: function () {\n          this.$('.chat-content').html($('<span class=\"error\"/>').text(xabber.getString(\"no_messages\")));\n      },\n\n      openChat: function () {\n          this.model.item_view.open({right_contact_save: true, clear_search: false});\n      },\n\n      addMessageHTML: function ($message, msg, index, last_index) {\n          let scrolled_from_top,\n              scrolled_from_bottom = this.getScrollBottom();\n          if (index === 0)\n              $message.prependTo(this.$('.chat-content'));\n          else\n              $message.insertAfter(this.$('.chat-message').eq(index - 1));\n          if (index === last_index)\n              scrolled_from_top = this.getScrollTop();\n          let $next_message = $message.nextAll('.chat-message').first();\n          this.chat_content.updateMessageInChat($message[0], msg);\n          if ($next_message.length) {\n              this.chat_content.updateMessageInChat($next_message[0]);\n          }\n          this.chat_content.initPopup($message);\n          if (scrolled_from_top)\n              this.scrollTo(scrolled_from_top);\n          else\n              this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - scrolled_from_bottom);\n          return $message;\n      }\n\n  });\n\n  xabber.MessageContextView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap messages-context-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          options = options || {};\n          this.stanza_id = options.stanza_id_context;\n          this.encrypted = options.encrypted;\n          this.mention_context = options.mention_context;\n          if (!this.model.item_view.content)\n              this.chat_content = new xabber.ChatContentView({chat_item: this.model.item_view});\n          this.$history_feedback = this.$('.load-history-feedback');\n          this.account.context_messages = new xabber.Messages(null, {account: this.account});\n          this.account.context_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.account.context_messages.on(\"add\", this.addMessage, this);\n          this.account.context_messages.on(\"change:is_unread\", this.onChangedReadState, this);\n          xabber.on('plyr_player_updated', this.onUpdatePlyr, this);\n      },\n\n      render: function () {\n          this.scrollToTop();\n          this.onUpdatePlyr();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this.encrypted && this.$el.attr('data-trust', true)\n      },\n\n      onMouseWheel: function (ev) {\n          if (!this.loading_history)\n              if (ev.originalEvent.deltaY < 0) {\n                  if (!this.first_history_loaded) {\n                      this.loading_history = true;\n                      this.messagesRequest({before: this.first_msg_id}, () => {\n                          this.loading_history = false;\n                      });\n                  }\n              }\n              else {\n                  if (!this.last_history_loaded) {\n                      this.loading_history = true;\n                      this.messagesRequest({after: this.last_msg_id}, () => {\n                          this.loading_history = false;\n                      });\n                  }\n              }\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onScroll: function () {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this._prev_scrolltop = this._scrolltop || this._prev_scrolltop || 0;\n          this._scrolltop = this.getScrollTop() || this._scrolltop || this._prev_scrolltop || 0;\n          this._scrollbottom = this.getScrollBottom();\n\n          if (!this.loading_history)\n              if (!this.first_history_loaded && (this._scrolltop < this._prev_scrolltop) && (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n                  this.loading_history = true;\n                  this.showHistoryFeedback();\n                  this.messagesRequest({before: this.first_msg_id}, () => {\n                      this.loading_history = false;\n                      this.hideHistoryFeedback();\n                  });\n              }\n              else {\n                  if (!this.last_history_loaded && (this._scrolltop > this._prev_scrolltop) && (this._scrollbottom < 100 || this.getPercentScrolled() > 0.9)) {\n                      this.loading_history = true;\n                      this.showHistoryFeedback();\n                      this.messagesRequest({after: this.last_msg_id}, () => {\n                          this.loading_history = false;\n                          this.hideHistoryFeedback();\n                      });\n                  }\n              }\n\n          clearTimeout(this._onscroll_read_messages_timeout);\n          this._onscroll_read_messages_timeout = setTimeout(() => {\n              this.chat_content.readVisibleMessages(true);\n          }, 100)\n      },\n\n      onChangedReadState: function (message) {\n          let is_unread = message.get('is_unread'),\n              $msg = this.$(`.chat-message[data-uniqueid=\"${message.get(\"unique_id\")}\"]`);\n          if (is_unread) {\n              $msg.addClass('unread-message');\n              $msg.addClass('unread-message-background');\n          } else {\n              $msg.removeClass('unread-message');\n              setTimeout(() => {\n                  $msg.removeClass('unread-message-background');\n              }, 1000);\n          }\n      },\n\n      showHistoryFeedback: function () {\n          this.$history_feedback.text(xabber.getString(\"loading_history\")).removeClass('hidden');\n      },\n\n      hideHistoryFeedback: function () {\n          this.$history_feedback.addClass('hidden');\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              queryid = uuid();\n          !options.max && (options.max = xabber.settings.mam_messages_limit);\n          !options.after && !options.before && (options.before = '');\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first) && (this.last_msg_id = rsm.last);\n                  if (options.after && (messages.length < options.max))\n                      this.last_history_loaded = true;\n                  if (options.before && (messages.length < options.max))\n                      this.first_history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {context_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          if (this.mention_context && (message.get('stanza_id') === this.stanza_id)) {} else message.set('is_archived', true);\n\n          let msg_item = this.model.messages.find(msg => msg.get('stanza_id') == message.get('stanza_id') || msg.get('contact_stanza_id') == message.get('stanza_id'));\n          if (msg_item) {\n              msg_item.get('is_unread') && message.set('is_unread', msg_item.get('is_unread'));\n              msg_item.get('is_unread_archived') && message.set('is_unread_archived', msg_item.get('is_unread_archived'));\n          }\n\n          let $message = this.chat_content.buildMessageHtml(message).addClass('context-message'),\n              index = this.account.context_messages.indexOf(message);\n          if (message.get('stanza_id') === this.stanza_id) {\n              $message.addClass('message-from-context');\n              setTimeout(() => {\n                  $message.removeClass('message-from-context')\n              }, 3000);\n          }\n          this.addMessageHTML($message, message, index, this.account.context_messages.findLastIndex());\n      },\n\n      onUpdatePlyr: function (ev) {\n          this.$('.plyr-video-container').removeClass('active-plyr-container');\n          if (xabber.current_plyr_player && xabber.current_plyr_player.player_item) {\n              let $message = this.$(`.chat-message[data-uniqueid=\"${xabber.current_plyr_player.message_unique_id}\"]`);\n              if ($message.length) {\n                  $message.find(`.plyr-video-container[data-message-id=\"${xabber.current_plyr_player.player_item.message_id}\"]`).addClass('active-plyr-container');\n              }\n          }\n      },\n  });\n\n  xabber.SearchedMessagesView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap searched-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"click .btn-cancel-searching\": \"openChat\",\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          this.query_text = options.query_text;\n          this.account.searched_messages = new xabber.Messages(null, {account: this.account});\n          this.account.searched_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.account.searched_messages.on(\"add\", this.addMessage, this);\n          return this;\n      },\n\n      render: function () {\n          this.$search_form.find('input').val(this.query_text);\n          this.$search_form.slideToggle(10, () => {\n              if (this.$search_form.css('display') !== 'none')\n                  this.$search_form.find('input').focus();\n              this.scrollToBottom();\n          });\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              before: query.before || '',\n              var: [{var: 'withtext', value: this.query_text}]\n          });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.searched_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {searched_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('searched-message'),\n              index = this.account.searched_messages.indexOf(message);\n          this.addMessageHTML($message, message, index);\n      }\n  });\n\n  xabber.ContactSearchedMessagesView = xabber.MessagesView.extend({\n      template: templates.chat_content_contact,\n      ps_settings: {\n          wheelPropagation: true\n      },\n      avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n      className: 'chat-content-wrap searched-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"click .btn-cancel-searching\": \"openChat\",\n          \"keyup .messages-search-form\": \"keyupSearch\",\n          \"click .close-search-icon\": \"clearSearch\",\n          'click .btn-back': 'hideSearch'\n      },\n\n      _initialize: function (options) {\n          this.model = options.model;\n          this.contact = options.contact;\n          this.account = this.model.account;\n          this.$search_form = this.$('.search-form-header');\n          this.timer = null;\n          this.loading_history = false;\n          this.history_loaded = false;\n          this.first_msg_id = 0;\n          this.last_msg_id = 0;\n          this.chat_content = options.chat_content || this.model.item_view.content;\n          this.parent.model.set('search_hidden', true)\n          return this;\n      },\n\n      render: function () {\n          if (this.account.searched_messages)\n              this.searched_messages = this.account.searched_messages\n          this.account.searched_messages = new xabber.Messages(null, {account: this.account});\n          if (this.searched_messages)\n              this.account.searched_messages.add(this.searched_messages.toJSON(), {silent : true});\n          this.account.searched_messages.on(\"add\", this.addMessage, this);\n          if (this.parent.model.get('saved_search_panel')) {\n              this.$el.html(this.parent.model.get('saved_search_panel'));\n              this.model.set('saved_search_panel', undefined);\n          }\n          else {\n              this.emptyChat();\n              this.$el.html(this.template());\n              this.emptyChat();\n              if (this.parent.model.get('search_hidden'))\n                  this.hideSearch();\n          }\n          this.ps_container = this.$('.search-messages-content-wrap');\n          if (this.ps_container.length) {\n              this.ps_container.perfectScrollbar(\n                  _.extend(this.ps_settings || {}, xabber.ps_settings)\n              );\n          }\n          this.$search_form = this.$('.search-form-header');\n          if (this.parent.model.get('saved_search_panel')) {\n              this.$search_form.find('input').focus();\n              if (this.parent.model.get('saved_search_panel_scroll'))\n                  this.scrollTo(this.parent.model.get('saved_search_panel_scroll'));\n          }\n      },\n\n      clearSearch: function () {\n          this.$search_form.find('input').val('');\n          this.emptyChat();\n      },\n\n\n      keyupSearch: function (ev) {\n          this.$('.close-search-icon').hideIf(!this.$search_form.find('input').val());\n          if (ev.keyCode === constants.KEY_ENTER) {\n              this.emptyChat();\n              let query = this.$search_form.find('input').val();\n              this.$('.preloader-wrap').hideIf(false);\n              this.loading_timestamp = Number(moment.now());\n              this.messagesRequest(query, this.loading_timestamp, undefined, [], (messages, rsm) => {\n              });\n          }\n      },\n\n      emptyChat: function () {\n          if (this.account.searched_messages)\n              this.account.searched_messages.reset();\n          this.$('.chat-content').html('');\n          this.$('.messages-count').hideIf(true);\n          this.$('.preloader-wrap').hideIf(true);\n          this.$('.search-results').hideIf(true);\n          this.$('.close-search-icon').hideIf(true);\n      },\n\n      messagesRequest: function (query, timestamp, rsm, loaded_messages, callback) {\n          if(!query || this.loading_timestamp != timestamp) {\n              this.emptyChat();\n              return true;\n          }\n          let messages = [],\n              options = {},\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              var: [{var: 'withtext', value: query}]\n          });\n          if (rsm && rsm.last)\n              _.extend(options, {\n                  after: rsm.last,\n              });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.searched_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  loaded_messages = loaded_messages.concat(messages)\n                  if (messages.length == options.max){\n                      if (this.parent &&  this.parent.data && !this.parent.data.get('visible') || this.parent.model.get('search_hidden'))\n                          return;\n                      else\n                          this.messagesRequest(query, timestamp, rsm, loaded_messages, (messages, rsm) => {});\n                  }\n                  else if (loaded_messages.length == rsm.count) {\n                      if (rsm.count != 0) {\n                          let message_count = rsm.count;\n                          this.emptyChat()\n                          // list.sort((a, b) => (a.color > b.color) ? 1 : -1)\n                          $(loaded_messages).each((idx, message) => {\n                              let $message = $(message),\n                                  $jingle_msg_propose = $message.find(`propose[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`);\n                              if ($jingle_msg_propose.length)\n                                  message_count--;\n                              this.account.chats.receiveChatMessage($message, {\n                                  searched_message: true,\n                                  searched_in_contact_messages: true,\n                                  query: query\n                              });\n                          });\n                          this.$('.messages-count').hideIf(!message_count);\n                          this.$('.close-search-icon').hideIf(!message_count);\n                          this.$('.search-results').hideIf(message_count);\n                          this.$('.messages-count').text(xabber.getQuantityString(\"searched_messages_count\", message_count));\n                      }\n                      else {\n                          this.emptyChat();\n                          this.$('.close-search-icon').hideIf(false);\n                          this.$('.search-results').hideIf(false);\n                      }\n\n                  }\n                  callback && callback(messages, rsm);\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessageHTML: function ($message, msg, index, last_index) {\n          $message.prependTo(this.$('.chat-content'));\n          if (index === last_index)\n              scrolled_from_top = this.getScrollTop();\n          let $next_message = $message.nextAll('.chat-message').first();\n          // this.chat_content.updateMessageInChat($message[0]);\n          // if ($next_message.length) {\n          //     this.chat_content.updateMessageInChat($next_message[0]);\n          // }\n          // this.chat_content.initPopup($message);\n          return $message;\n      },\n\n      addMessage: function (message) {\n          if (!this.parent.model.get('search_hidden')) {\n              if (message.get('auth_request') || !message.get('searched_in_contact_messages'))\n                  return;\n              message.set('is_archived', true);\n              message.set('searched_message', true);\n              let $message = this.chat_content.buildMessageHtml(message).addClass('searched-message'),\n                  index = this.account.searched_messages.indexOf(message);\n              this.chat_content.showMessageAuthor($message);\n              this.addMessageHTML($message, message, index);\n          }\n      },\n\n      hideSearch: function (ev) {\n          this.parent.model.set('search_hidden', true);\n          this.$('.search-input').val('')\n          this.emptyChat();\n          if (this.parent.ps_container.length) {\n              this.parent.ps_container.perfectScrollbar(\n                  _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n              );\n          }\n          this.$('.search-wrap').hideIf(this.parent.model.get('search_hidden'))\n      },\n\n      onClickMessage: function (ev) {\n          let $elem = $(ev.target),\n              $msg = $elem.closest('.chat-message');\n          this.parent.model.set('saved_search_panel_scroll', this.ps_container[0].scrollTop);\n          this.ps_container.perfectScrollbar('destroy');\n          this.parent.model.set('saved_search_panel', this.$el.clone());\n          this.model.getMessageContext($msg.data('uniqueid'), {searched_messages: true});\n      }\n  });\n\n  xabber.ParticipantMessagesView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap participant-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          'click .btn-cancel-selection' : 'openChat',\n          'click .btn-retract-messages' : 'retractMessages',\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          this.participant = options.participant;\n          this.member_jid = this.participant.jid;\n          this.member_id = this.participant.id;\n          this.member_nickname = this.participant.nickname;\n          this.account.participant_messages = new xabber.Messages(null, {account: this.account});\n          this.account.participant_messages.on(\"add\", this.addMessage, this);\n          this.account.participant_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n          return this;\n      },\n\n      render: function () {\n          this.$('.chat-content').css('height', 'calc(100% - 32px)');\n          this.$('.participant-messages-header .messages-by-header .participant-nickname').text(this.member_nickname);\n          this.$('.participant-messages-header').removeClass('hidden');\n          this.scrollToBottom();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onScrollY: function () {\n\n      },\n\n      retractMessages: function () {\n          utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__confirm\", [(this.member_nickname || this.member_jid || this.member_id)]),\n              null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n              if (result) {\n                  if (this.member_id) {\n                      this.chat_content.model.retractMessagesByUser(this.member_id, () => {\n                          this.emptyChat();\n                      });\n                  }\n              }\n          });\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              member_id = this.member_id,\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              before: query.before || '',\n              var: [{var: 'with', value: member_id}]\n          });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid) {\n                  messages.push(message);\n              }\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options,\n              (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.participant_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {participant_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('participant-message'),\n              index = this.account.participant_messages.indexOf(message);\n          this.addMessageHTML($message, message, index);\n      }\n  });\n\n  xabber.SubscriptionButtonsView = xabber.BasicView.extend({\n      template: templates.subscription_buttons,\n\n      events: {\n          \"click .btn-decline\": \"declineSubscription\",\n          \"click .btn-allow\": \"allowSubscription\",\n          \"click .btn-add\": \"addContact\",\n          \"click .btn-subscribe\": \"addContact\",\n          \"click .btn-block\": \"blockContact\"\n      },\n\n      _initialize: function (options) {\n          this.$el.html(this.template());\n          this.contact = options.contact;\n          this.contact.on(\"change:subscription\", this.render, this);\n          this.contact.on(\"change:in_roster\", this.render, this);\n          this.contact.on(\"change:blocked\", this.render, this);\n          this.contact.on(\"change:subscription_request_in\", this.render, this);\n          this.contact.on(\"change:subscription_request_out\", this.render, this);\n      },\n\n      render: function () {\n          this.$el.closest('.chat-content-wrap').children('.chat-content').removeClass('with-before');\n          if (this.contact.get('group_chat')) {\n              this.$el.addClass('hidden');\n              return;\n          }\n          let subscription = this.contact.get('subscription'),\n              in_request = this.contact.get('subscription_request_in'),\n              in_roster = this.contact.get('in_roster'),\n              out_request = this.contact.get('subscription_request_out');\n          this.$('.button').removeClass('hidden');\n          this.$('.subscription-info').text(\"\");\n          this.$el.addClass('hidden');\n          if (subscription === 'both' || this.contact.get('blocked'))\n              return;\n          else if (subscription === 'to' && in_request || (subscription === 'none' && in_request && in_roster)) {\n              this.$('.subscription-info').text(xabber.getString(\"subscription_status_in_request_incoming\"));\n              this.$('.button:not(.btn-allow)').addClass('hidden');\n          } else if (!out_request && !in_roster && !in_request && (subscription === 'from' || subscription === 'none')) {\n              this.$('.subscription-info').text(xabber.getString(\"chat_subscribe_request_outgoing\"));\n              this.$('.button:not(.btn-subscribe)').addClass('hidden');\n          } else if (subscription === undefined || subscription === 'none' && in_request) {\n              this.$('.button:not(.btn-add):not(.btn-block)').addClass('hidden');\n          } else {\n              return;\n          }\n          this.$el.removeClass('hidden');\n          this.$el.closest('.chat-content-wrap').children('.chat-content').addClass('with-before');\n      },\n\n      hideElement: function () {\n          this.$el.addClass('hidden');\n          this.$el.closest('.chat-content-wrap').children('.chat-content').removeClass('with-before');\n      },\n\n      declineSubscription: function () {\n          this.contact.declineSubscribe();\n          this.contact.set('subscription_request_in', false);\n          this.hideElement();\n      },\n\n      allowSubscription: function () {\n          this.contact.acceptRequest();\n          this.hideElement();\n      },\n\n      addContact: function () {\n          if (this.contact.get('subscription') === undefined)\n              this.contact.pushInRoster(null, () => {\n                  this.sendAndAskSubscription();\n              });\n          else\n              this.sendAndAskSubscription();\n          this.hideElement();\n      },\n\n      sendAndAskSubscription: function () {\n          this.contact.askRequest();\n          this.contact.acceptRequest();\n      },\n\n      blockContact: function () {\n          this.contact.blockRequest();\n          this.hideElement();\n      }\n  });\n\nxabber.ChatContentView = xabber.BasicView.extend({\n    className: 'chat-content-wrap',\n    template: templates.chat_content,\n    ps_selector: '.chat-content',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n\n    events: {\n        'mousedown .chat-message': 'onTouchMessage',\n        'click .chat-message': 'onClickMessage',\n        'click .chat-msg-location-content': 'onClickLocation',\n        'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n        'click .mdi-link-variant' : 'onClickLink',\n        'click .msg-copy-location' : 'onClickLocationLink',\n        'click .pinned-message' : 'showPinnedMessage',\n        \"keyup .messages-search-form\": \"keyupSearch\",\n        \"click .btn-cancel-searching\": \"cancelSearch\",\n        \"click .back-to-bottom\": \"backToBottom\",\n        \"click .back-to-unread:not(.back-to-bottom)\": \"scrollToUnreadWithButton\",\n        \"click .btn-retry-send-message\": \"retrySendMessage\",\n        \"click .btn-delete-message\": \"removeFileErrorMessage\",\n        \"click .not-decrypted-tooltip .btn-manage-devices\": \"openDevicesWindow\",\n        \"click .encryption-warning\": \"openDevicesWindow\"\n    },\n\n    _initialize: function (options) {\n        this.chat_item = options.chat_item;\n        this.current_day_indicator = null;\n        this._pending_avatars = [];\n        this.account = this.chat_item.account;\n        this.model = this.chat_item.model;\n        this.contact = this.model.contact;\n        this.head = this.model.get('saved') ? new xabber.SavedChatHeadView({content: this}) : new xabber.ChatHeadView({content: this});\n        this.bottom = new xabber.ChatBottomView({content: this});\n        this.$history_feedback = this.$('.load-history-feedback');\n        this.$pinned_message = this.$('.pinned-message');\n        this.$search_form = this.$('.search-form-header');\n        this.$el.attr('data-id', this.model.id);\n        this.updateContentColorScheme();\n        if ((this.model.sync_created && this.model.last_message) || options.new_message && !options.new_message.get('synced_from_server') && options.new_message.get('encrypted') && this.model.get('encrypted')){\n            this.model.last_message && this.onMessage(this.model.last_message);\n            if (options.new_message){\n                this.onMessage(options.new_message);\n                this.onChangedReadState(options.new_message);\n            }\n        }\n        this._scrolltop = this.getScrollTop();\n        this._is_scrolled_bottom = true;\n        this._long_reading_timeout = false;\n        let wheel_ev = this.defineMouseWheelEvent();\n        this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.model.on(\"change:active change:idle\", this.onChangedActiveStatus, this);\n        xabber.on(\"change:idle change:focused\", this.onChangedIdleStatus, this);\n        this.model.on(\"load_last_history\", this.loadLastHistory, this);\n        this.model.on(\"get_missed_history\", this.requestMissedMessages, this);\n        this.model.messages.on(\"add\", this.onMessage, this);\n        this.model.messages.on(\"change:is_unread\", this.onChangedReadState, this);\n        this.model.messages.on(\"change:timestamp\", this.onChangedMessageTimestamp, this);\n        this.model.messages.on(\"change:trusted\", this.onTrustedChanged, this);\n        this.model.messages.on(\"change:last_replace_time\", this.updateMessage, this);\n        this.model.on(\"change:unread\", this.updateCounter, this);\n        this.model.on(\"change:const_unread\", this.updateCounter, this);\n        if (this.contact) {\n            this.subscription_buttons = new xabber.SubscriptionButtonsView({contact: this.contact, el: this.$('.subscription-buttons-wrap')[0]});\n            this.contact.on(\"change:blocked\", this.updateBlockedState, this);\n            this.contact.on(\"change:subscription\", this.onSubscriptionChange, this);\n            this.contact.on(\"change:group_chat\", this.updateGroupChat, this);\n            this.contact.on(\"remove_from_blocklist\", this.loadLastHistory, this);\n            this.contact.on(\"update_trusted\", this.updateMsgsMissingDevices, this);\n            this.account.contacts.on(\"change:name\", this.updateName, this);\n            this.account.contacts.on(\"change:image\", this.updateAvatar, this);\n        }\n        this.account.on(\"change\", this.updateMyInfo, this);\n        this.account.on(\"device_trusted\", this.updateMsgsDeviceTrusting, this);\n        this.account.settings.on(\"change:color\", this.updateContentColorScheme, this);\n        xabber.on('plyr_player_updated', this.onUpdatePlyr, this);\n        this.account.dfd_presence.done(() => {\n            !this.account.connection.do_synchronization && this.loadLastHistory();\n        });\n        return this;\n    },\n\n    render: function () {\n        this.cancelSearch();\n        if (this._prev_scrolltop)\n            this.scrollTo(this._prev_scrolltop);\n        else\n            this.scrollToBottom();\n        this.onScroll();\n        this.updateCounter();\n        this.updateContactStatus();\n        this.updateWaveforms();\n        this.onUpdatePlyr();\n        if (this.contact) {\n            this.contact.get('group_chat') && this.updatePinnedMessage();\n            this.subscription_buttons.render();\n        }\n    },\n\n    openDevicesWindow: function () {\n        if (!this.account.omemo)\n            return;\n        let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n        peer.fingerprints.open();\n    },\n\n    defineMouseWheelEvent: function () {\n        if (!_.isUndefined(window.onwheel)) {\n            return \"wheel\";\n        } else if (!_.isUndefined(window.onmousewheel)) {\n            return \"mousewheel\";\n        } else {\n            return \"MozMousePixelScroll\";\n        }\n    },\n\n    updateMyInfo: function () {\n        let changed = this.account.changed;\n        if (_.has(changed, 'name')) this.updateMyName();\n        if (_.has(changed, 'status')) this.updateMyStatus();\n        if (_.has(changed, 'image')) this.updateMyAvatar();\n    },\n\n    updateMsgsDeviceTrusting: function (device_id, jid) {\n        if (!this.model.get('encrypted') || !device_id || !this.contact || this.contact.get('jid') !== jid )\n            return;\n        this.$(`.not-decrypted-icon[data-device-id=\"${device_id}\"]`).each((idx, item) => {\n            let $msg = $(item).closest('.chat-message');\n            $msg.removeClass('not-verified');\n            $msg.addClass('not-verified-previously');\n        })\n    },\n\n    updateMsgsMissingDevices: function (trust, peer) {\n        if (!this.model.get('encrypted') || !peer || !this.contact)\n            return;\n\n        this.$(`.chat-message:not(.not-existing-device)`).each((idx, item) => {\n            let $item = $(item);\n            if ($item.attr('data-device-id') && !peer.devices[$item.attr('data-device-id')] && $item.attr('data-from') != this.account.get('jid')){\n                $item.hasClass('not-verified') && $item.addClass('not-verified-previously');\n                $item.removeClass('not-verified');\n                $item.addClass('not-existing-device');\n            }\n        })\n    },\n\n    updateContentColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n        this.head.$el.attr('data-color', color);\n        this.bottom.$el.attr('data-color', color);\n    },\n\n    onTrustedChanged: function (message) {\n        let trusted = message.get('trusted'),\n            $message = this.$('.chat-message[data-uniqueid=\"' + message.get('unique_id') + '\"]');\n        (trusted === null) && (trusted = 'none');\n        $message.attr('data-trust', trusted);\n    },\n\n    updateGroupChat: function () {\n        this._loading_history = false;\n        this.model.set('history_loaded', false);\n    },\n\n    onSubscriptionChange: function () {\n        let subscription = this.contact.get('subscription');\n        if (subscription === 'both' && this.contact.get('group_chat')){\n            this.updateGroupChat();\n            this.loadPreviousHistory();\n            this.model.get('active') && this.onChangedActiveStatus();\n        }\n    },\n\n    cancelSearch: function () {\n        this.$search_form.hide().find('input').val(\"\");\n    },\n\n    updateContactStatus: function () {\n        if (this.head.$('.contact-status').attr('data-status') == 'offline' && this.contact.get('last_seen')) {\n            let seconds = (moment.now() - this.contact.get('last_seen'))/1000,\n                new_status = xabber.pretty_last_seen(seconds);\n            this.contact.set({status_message: new_status });\n        }\n    },\n\n    updateWaveforms: function () {\n        this.model.plyr_players.forEach(function(item) {\n            if (item.$audio_elem && item.$audio_elem.voice_message && item.$audio_elem.voice_message.backend && item.$audio_elem.voice_message.backend.buffer)\n                item.$audio_elem.voice_message.drawBuffer();\n        });\n    },\n\n    updatePinnedMessage: function () {\n        let $pinned_message = this.contact.get('pinned_message');\n        this.contact.renderPinnedMessage($pinned_message, this.$pinned_message);\n    },\n\n    onChangedVisibility: function () {\n        if (this.isVisible()) {\n            this.model.set({display: true, active: true});\n        } else {\n            this.model.set({display: false});\n        }\n    },\n\n    onChangedIdleStatus: function (ev) {\n        if (!this.model.get('active'))\n            return;\n        this.model.set('idle', xabber.get('idle') || !xabber.get('focused'))\n    },\n\n    onChangedActiveStatus: function () {\n        let active = this.model.get('active');\n        if (this.model.get('active') && this.model.get('idle'))\n            active = false;\n        this.sendChatState(active ? 'active' : 'inactive');\n        if (this.model.get('group_chat') && !this.contact.get('invitation')) {\n            if (active){\n                this.contact.setActiveStateSendInterval();\n            }\n            else{\n                clearTimeout(this.contact._sending_active_chatstate_timeout);\n                clearInterval(this.contact._sending_active_chatstate_interval);\n            }\n        }\n    },\n\n    updateName: function (contact) {\n        let name = contact.get('name'),\n            jid = contact.get('jid');\n        if (contact === this.contact) {\n            this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.chat-msg-author').text(name);\n            });\n        } else {\n            this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.fwd-msg-author').text(name);\n            });\n        }\n    },\n\n    updateAvatar: function (contact) {\n        let image = contact.cached_image,\n            jid = contact.get('jid');\n        if (contact === this.contact) {\n            this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.left-side .circle-avatar').setAvatar(\n                    image, this.avatar_size);\n            });\n        } else {\n            this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.fwd-left-side .circle-avatar').setAvatar(\n                    image, this.avatar_size);\n            });\n        }\n    },\n\n    updateMyStatus: function () {\n        let text;\n        if (!this.account.isOnline()) {\n            text = xabber.getString(\"connection_status__you_are_offline\");\n        }\n        this.bottom.showChatNotification(text || '', true);\n    },\n\n    updateMyName: function () {\n        let name = this.account.get('name'),\n            jid = this.account.get('jid');\n        this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.chat-msg-author').text(name);\n        });\n        this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.fwd-msg-author').text(name);\n        });\n    },\n\n    updateMyAvatar: function () {\n        let image = this.account.cached_image,\n            jid = this.account.get('jid');\n        this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.left-side .circle-avatar').setAvatar(\n                image, this.avatar_size);\n        });\n        this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.fwd-left-side .circle-avatar').setAvatar(\n                image, this.avatar_size);\n        });\n    },\n\n    updateBlockedState: function () {\n        if (this.model.get('blocked'))\n            this.model.showBlockedRequestMessage();\n        if (this.isVisible()) {\n            xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'chat', chat_item: this.chat_item, blocked: this.model.get('blocked')});\n            this.updateScrollBar();\n        }\n    },\n\n    readVisibleMessages: function (is_context) {\n        let self = is_context ? this.model.messages_view : this;\n        if (!self.isVisible())\n            return;\n        if (self.$('.chat-message.unread-message').length && xabber.get('focused') && !xabber.get('idle')){\n            let last_visible_unread_msg;\n            self.$('.chat-message.unread-message').each((idx, msg) => {\n                if ($(msg).isVisibleInContainer(self.$('.chat-content'))) {\n                    last_visible_unread_msg = msg;\n                }\n            });\n            if (last_visible_unread_msg){\n                this.readMessage(this.model.messages.get($(last_visible_unread_msg).data('uniqueid')), $(last_visible_unread_msg), is_context);\n            }\n        }\n    },\n\n    hideMessagesAfterSkipping: function () {\n        if (this.model.get('last_sync_unread_id') && this.model.get('synced_msg')){\n            let synced_message = this.model.get('synced_msg'),\n                $synced_message = this.$(`.chat-message[data-uniqueid=\"${synced_message.get('unique_id')}\"]`);\n            $synced_message.addClass('after-skip-message');\n            $synced_message.prevAll('.chat-message.after-skip-message').removeClass('after-skip-message');\n            $synced_message.nextAll('.chat-message:not(.after-skip-message)').addClass('after-skip-message');\n        } else {\n            this.$('.chat-message.after-skip-message').removeClass('after-skip-message');\n        }\n    },\n\n    readMessage: function (last_visible_msg, $last_visible_msg, is_context) {\n        clearTimeout(this._read_last_message_timeout);\n        this._read_last_message_timeout = setTimeout(() => {\n            this.model.sendMarker(last_visible_msg.get('msgid'), 'displayed', last_visible_msg.get('stanza_id'), last_visible_msg.get('contact_stanza_id'), last_visible_msg.get('encrypted') && last_visible_msg.get('ephemeral_timer'));\n            this.model.set('last_read_msg', last_visible_msg.get('stanza_id'));\n            this.model.set('prev_last_read_msg', last_visible_msg.get('stanza_id'));\n\n            if (is_context){\n                let unread_context_messages = _.clone(this.account.context_messages.models).filter(item => Boolean(item.get('is_unread')) || Boolean(item.get('is_unread_archived')));\n                _.each(unread_context_messages, (msg) => {\n                    let msg_item = this.model.messages.find(message => message.get('stanza_id') == msg.get('stanza_id') || message.get('contact_stanza_id') == msg.get('stanza_id'));\n                    if (msg_item) {\n                        msg.set('is_unread', msg_item.get('is_unread'));\n                        msg.set('is_unread_archived', msg_item.get('is_unread_archived'));\n                    }\n                });\n                setTimeout(() => {\n                    $last_visible_msg.removeClass('unread-message-background');\n                }, 1000);\n            }\n\n            xabber.toolbar_view.recountAllMessageCounter();\n        }, 1000)\n\n        if (last_visible_msg.get('is_unread_archived') || this.model.last_message && (last_visible_msg.get('unique_id') === this.model.last_message.get('unique_id')) || this.model.get('const_unread')){\n            let unread_messages = _.clone(this.model.messages.models).filter(item => Boolean(item.get('is_unread'))),\n                read_count = 0;\n\n            _.each(unread_messages, (msg) => {\n                if (msg.get('timestamp') <= last_visible_msg.get('timestamp')) {\n                    msg.set('is_unread', false);\n                    read_count++;\n                }\n            });\n            read_count = this.model.get('const_unread') - read_count;\n            (read_count < 0) && (read_count = 0);\n            this.model.set('const_unread', read_count);\n        } else {\n            let unread_messages = _.clone(this.model.messages_unread.models);\n            _.each(unread_messages, (msg) => {\n                if (msg.get('timestamp') <= last_visible_msg.get('timestamp')) {\n                    msg.set('is_unread', false);\n                }\n            });\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n\n        if (!is_context){\n            setTimeout(() => {\n                $last_visible_msg.removeClass('unread-message-background');\n            }, 1000);\n        }\n    },\n\n    readMessages: function (timestamp) {\n        let unread_messages = _.clone(this.model.messages_unread.models);\n        if (unread_messages.length) {\n            let msg = unread_messages[unread_messages.length - 1];\n            this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'), msg.get('encrypted') && msg.get('ephemeral_timer'));\n            this.model.set('last_read_msg', msg.get('stanza_id'));\n            this.model.set('prev_last_read_msg', msg.get('stanza_id'));\n        }\n        this.model.set('const_unread', 0);\n        this.model.set('show_new_unread', false);\n        _.each(unread_messages, (msg) => {\n            if (!timestamp || msg.get('timestamp') <= timestamp) {\n                msg.set('is_unread', false);\n            }\n        });\n        if (this.model.last_message && this.model.last_message.get('is_unread') && !unread_messages.length){\n            let msg = this.model.last_message;\n            this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'), msg.get('encrypted') && msg.get('ephemeral_timer'));\n            msg.set('is_unread', false);\n            msg.get('stanza_id') && this.model.set('last_read_msg', msg.get('stanza_id'));\n            msg.get('stanza_id') && this.model.set('prev_last_read_msg', msg.get('stanza_id'));\n        }\n        else if (this.model.last_message && this.model.last_message.get('auth_request') && this.model.messages.length){\n            let messages = _.clone(this.model.messages.models),\n                msg = messages[messages.length - 2];\n            if (msg && msg.get('is_unread')) {\n                this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'), msg.get('encrypted') && msg.get('ephemeral_timer'));\n                msg.set('is_unread', false);\n                msg.get('stanza_id') && this.model.set('last_read_msg', msg.get('stanza_id'));\n                msg.get('stanza_id') && this.model.set('prev_last_read_msg', msg.get('stanza_id'));\n            }\n        }\n        if (!unread_messages.length) {\n            let unread_messages = _.clone(this.model.messages.models).filter(item => Boolean(item.get('is_unread')));\n            _.each(unread_messages, (msg) => {\n                msg.set('is_unread', false);\n            });\n        }\n    },\n\n    showUnreadMarker: function () {\n        this.$('.unread-marker').remove();\n        if (this.$(`.chat-message.unread-message`).length){\n            let text = xabber.getQuantityString(\"new_chat_messages_no_number\", this.model.get('const_unread') + this.model.get('unread')),\n                $template = $(templates.unread_marker({text: text}));\n            $template.insertBefore(this.$(`.chat-message.unread-message:first`));\n        }\n    },\n\n    onMouseWheel: function (ev) {\n        if (ev.originalEvent.deltaY < 0)\n            this.loadPreviousHistory();\n        this.$('.back-to-bottom:not(.back-to-unread)').hideIf(this.isScrolledToBottom() || this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').removeClass('back-to-bottom');\n    },\n\n    keyupSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            let query = this.$search_form.find('input').val();\n            this.model.searchMessages(query, (messages) => {});\n        }\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.head.renderSearchPanel();\n        }\n    },\n\n    scrollToUnread: function () {\n        let $last_read_msg = this.$(`.chat-message.unread-message:first`);\n        $last_read_msg.length && (this.scrollTo(this.getScrollTop()\n            - (this.$el.height() * 0.2) + $last_read_msg.offset().top));\n        if (this.model.get('last_sync_unread_id')) {\n            let mam_query = {\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                after: this.model.get('last_sync_unread_id'),\n            };\n            if (this.model.get('synced_msg')) {\n                mam_query.var = [\n                    {var: 'after-id', value: this.model.get('last_sync_unread_id')},\n                    {var: 'before-id', value: this.model.get('synced_msg').get('stanza_id')},\n                ];\n            }\n            this.getMessageArchive(mam_query, {\n                unread_history: true,\n            });\n        }\n    },\n\n    scrollToUnreadWithButton: function () {\n        this.scrollToUnread();\n        this.$('.back-to-unread').addClass('back-to-bottom');\n    },\n\n    updateCounter: function () {\n        let unread = this.model.get('unread') + this.model.get('const_unread');\n        this.$('.back-to-unread-counter').text(unread || '');\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n    },\n\n    onScrollY: function () {\n        this._prev_scrolltop = this._scrolltop || this._prev_scrolltop || 0;\n        this._scrolltop = this.getScrollTop() || this._scrolltop || this._prev_scrolltop || 0;\n        this._is_scrolled_bottom = this.isScrolledToBottom();\n        if (this._scrolltop === 0 && this.$('.subscription-buttons-wrap').hasClass('hidden')) {\n            this.$('.fixed-day-indicator-wrap').css('opacity', 1);\n            this.current_day_indicator = pretty_date(parseInt(this.$('.chat-content').children().first().data('time')));\n            this.showDayIndicator(this.current_day_indicator);\n        }\n        this.$('.back-to-bottom:not(.back-to-unread)').hideIf(this.isScrolledToBottom() || this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').removeClass('back-to-bottom');\n    },\n\n    onScroll: function (ev, is_focused) {\n        if (!this.isVisible() || this._no_scrolling_event)\n            return;\n        this.$('.back-to-bottom:not(.back-to-unread)').hideIf(this.isScrolledToBottom() || this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').removeClass('back-to-bottom');\n        let $chatday_indicator = this.$('.chat-day-indicator'),\n            $messages = this.$('.chat-message'),\n            indicator_idx = undefined,\n            opacity_value;\n        if (this.$('.unread-marker').length) {\n            let marker = this.$('.unread-marker');\n            if (marker[0].offsetTop < this._scrolltop)\n                marker.remove();\n        }\n        $chatday_indicator.each((idx, indicator) => {\n            if (this.$('.subscription-buttons-wrap').hasClass('hidden')) {\n                if (this._scrolltop < this._prev_scrolltop) {\n                    if ((indicator.offsetTop <= this._scrolltop) && (indicator.offsetTop >= this._scrolltop - 30)) {\n                        indicator_idx = idx;\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop) && (indicator.offsetTop <= this._scrolltop - 30)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n                else {\n                    if ((indicator.offsetTop <= this._scrolltop + 30) && (indicator.offsetTop >= this._scrolltop)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop - 30) && (indicator.offsetTop <= this._scrolltop)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n            }\n            else if (!$(indicator).hasClass('fixed-day-indicator-wrap')) {\n                if (this._scrolltop < this._prev_scrolltop) {\n                    if ((indicator.offsetTop >= this._scrolltop + 30) && (indicator.offsetTop <= this._scrolltop + 62)) {\n                        indicator_idx = idx;\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop) && (indicator.offsetTop <= this._scrolltop + 62)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n                else {\n                    if ((indicator.offsetTop <= this._scrolltop + 62) && (indicator.offsetTop >= this._scrolltop + 30)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop - 62) && (indicator.offsetTop <= this._scrolltop + 30)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n            }\n        });\n        if (indicator_idx) {\n            this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n            this.current_day_indicator = pretty_date(parseInt($($chatday_indicator[indicator_idx]).attr('data-time')));\n        }\n        else {\n            $messages.each((idx, msg) => {\n                if ((msg.offsetTop + $(msg).height() > this._scrolltop) && (msg.offsetTop < this._scrolltop)) {\n                    indicator_idx = idx;\n                    opacity_value = 1;\n                    return false;\n                }\n            });\n            if (indicator_idx) {\n                this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n                this.current_day_indicator = pretty_date(parseInt($($messages[indicator_idx]).attr('data-time')));\n            }\n            else if (!this.$('.subscription-buttons-wrap').hasClass('hidden') && this._scrolltop == 0){\n                opacity_value = 0;\n                this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n            }\n        }\n        if (this.current_day_indicator !== null) {\n            this.showDayIndicator(this.current_day_indicator);\n        }\n        let scroll_read_timer = this._long_reading_timeout || is_focused ? 100 : 100;\n        clearTimeout(this._onscroll_read_messages_timeout);\n        this._onscroll_read_messages_timeout = setTimeout(() => {\n            this.readVisibleMessages();\n        }, scroll_read_timer)\n        this._long_reading_timeout = false;\n        if (this._scrolltop < this._prev_scrolltop &&\n            (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n            this.loadPreviousHistory();\n        }\n        this.hideMessagesAfterSkipping();\n        if (this._scrolltop > this._prev_scrolltop && this.model.get('last_sync_unread_id') && this.getPercentScrolled() > 0.2) {\n            let mam_query = {\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                after: this.model.get('last_sync_unread_id'),\n            };\n            if (this.model.get('synced_msg')) {\n                mam_query.var = [\n                    {var: 'after-id', value: this.model.get('last_sync_unread_id')},\n                    {var: 'before-id', value: this.model.get('synced_msg').get('stanza_id')},\n                ];\n            }\n            this.getMessageArchive(mam_query, {\n                unread_history: true,\n            });\n        }\n    },\n\n    backToBottom: function () {\n        this.model.set('last_sync_unread_id', undefined);\n        this.hideMessagesAfterSkipping();\n        this._no_scrolling_event = true;\n        this.removeAllMessagesExceptLast();\n        this.readMessages();\n        this.model.resetUnread();\n        this.model.set('history_loaded', false);\n        this.loadPreviousHistory();\n        this._long_reading_timeout = false;\n        this._no_scrolling_event = false;\n        this.scrollToBottom();\n    },\n\n    MAMRequest: function (options, callback, errback) {\n        let account = this.account,\n            contact = this.contact,\n            is_saved = this.model.get('saved'),\n            messages = [], queryid = uuid(),\n            is_groupchat = contact && contact.get('group_chat'), success = true, iq, _interval, handler;\n        delete options.fast;\n        if (is_groupchat)\n            iq = $iq({type: 'set', to: contact.get('full_jid') || contact.get('jid')});\n        else\n            iq = $iq({type: 'set'});\n        iq.c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n            .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n            .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n            .c('value').t(Strophe.NS.MAM).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE)) {\n            iq.c('field', {'var': `conversation-type`});\n            if (this.model.get('encrypted')){\n                iq.c('value').t(Strophe.NS.OMEMO).up().up();\n            } else {\n                iq.c('value').t(Strophe.NS.XABBER_CHAT).up().up();\n            }\n        }\n        if (!is_groupchat)\n            iq.c('field', {'var': 'with'})\n                .c('value').t(this.model.get('jid')).up().up();\n        if (options.var)\n            options.var.forEach((opt_var) => {\n                iq.c('field', {'var': opt_var.var})\n                    .c('value').t(opt_var.value).up().up();\n            });\n        iq.up().cnode(new Strophe.RSM(options).toXML());\n        let deferred = new $.Deferred();\n        account.chats.onStartedMAMRequest(deferred);\n        deferred.done(function () {\n            let sendMAMRequest = function(func_conn) {\n                handler = func_conn.addHandler(function (message) {\n                    if ((contact && is_groupchat == contact.get('group_chat')) || is_saved) {\n                        let $msg = $(message);\n                        if ($msg.find('result').attr('queryid') === queryid) {\n                            messages.push(message);\n                        }\n                    }\n                    else {\n                        messages = [];\n                        success = false;\n                    }\n                    return true;\n                }, Strophe.NS.MAM);\n                let _delete_handler_timeout = setTimeout(() => {\n                    console.log('handler deleted');\n                    func_conn.deleteHandler(handler);\n                }, 14000);\n                let callb = function (res) {\n                        func_conn.deleteHandler(handler);\n                        clearTimeout(_delete_handler_timeout);\n                        clearInterval(_interval);\n                        handler = null;\n                        account.chats.onCompletedMAMRequest(deferred);\n                        let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                        if ($fin.length && $fin.attr('queryid') === queryid) {\n                            let rsm = new Strophe.RSM({xml: $fin.find('set')[0]});\n                            rsm.complete = ($fin.attr('complete') === 'true') ? true : false;\n                            callback && callback(success, messages, rsm);\n                        }\n                    },\n                    errb = function (err) {\n                        func_conn.deleteHandler(handler);\n                        clearTimeout(_delete_handler_timeout);\n                        clearInterval(_interval);\n                        handler = null;\n                        xabber.error(\"MAM error\");\n                        xabber.error(err);\n                        account.chats.onCompletedMAMRequest(deferred);\n                        errback && errback(err);\n                    };\n                console.log('trying to send')\n                if (is_fast)\n                    account.sendFast(iq, callb, errb);\n                else\n                    account.sendIQ(iq, callb, errb);\n\n            };\n            let is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting\n                && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n                conn = is_fast ? account.fast_connection : account.connection;\n\n            if (conn.connected){\n                sendMAMRequest(conn);\n            }\n            let send_counter = 0;\n            _interval = setInterval(() => {\n                is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting\n                    && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline';\n                conn = is_fast ? account.fast_connection : account.connection;\n                conn && console.log(conn.connected);\n                if (!conn || send_counter >= 1){\n                    clearInterval(_interval);\n                    errback && errback('No connection or too many attempts');\n                    return;\n                }\n                if (conn.connected && send_counter < 1){\n                    send_counter++;\n                    sendMAMRequest(conn);\n                }\n            }, 15000);\n        });\n    },\n\n    getMessageArchive: function (query, options) {\n        if (options.previous_history || options.unread_history) {\n            if (this._loading_history || this.model.get('history_loaded')) {\n                return;\n            }\n            this._loading_history = true;\n            clearTimeout(this._load_history_timeout);\n            this._load_history_timeout = setTimeout(() => {\n                this._loading_history = false;\n            }, 60000);\n            this.showHistoryFeedback();\n        }\n        let account = this.model.account, counter = 0;\n        this.MAMRequest(query, (success, messages, rsm) => {\n            clearTimeout(this._load_history_timeout);\n            this._loading_history = false;\n            this.hideHistoryFeedback();\n            if (options.missed_history && !rsm.complete && (rsm.count > messages.length))\n                this.getMessageArchive({after: rsm.last}, {missed_history: true});\n            if (options.unread_history){\n                if (messages.length)\n                    this.model.set('last_sync_unread_id', $(messages[messages.length - 1]).find(`result[xmlns=\"${Strophe.NS.MAM}\"]`).attr('id'));\n                else {\n                    this.model.set('last_sync_unread_id', undefined);\n                    this.hideMessagesAfterSkipping();\n                }\n            }\n            if (options.unread_history_first && messages.length){\n                let first_unread_msg_stanza_id = $(messages[0]).find(`result[xmlns=\"${Strophe.NS.MAM}\"]`).attr('id')\n                this.model.set('first_unread_msg_stanza_id', first_unread_msg_stanza_id);\n                if (messages.length < query.max){\n                    this.model.set('last_sync_unread_id', undefined);\n                    this.hideMessagesAfterSkipping();\n                }\n                this.getMessageArchive({\n                    fast: true,\n                    max: xabber.settings.mam_messages_limit,\n                    before : first_unread_msg_stanza_id\n                }, {unread_history_before: true});\n            }\n            if (this.model.get('group_chat')) {\n                if (this.contact && !this.contact.my_info)\n                    this.contact.getMyInfo();\n            }\n            else {\n                if (this.contact && !this.contact.get('last_seen') && !this.contact.get('server'))\n                    this.contact.getLastSeen();\n            }\n            if (options.previous_history && (messages.length < query.max) && success) {\n                this.model.set('history_loaded', true);\n            }\n            if (options.previous_history || options.unread_history_before || !this.model.get('first_archive_id')) {\n                rsm.first && this.model.set('first_archive_id', rsm.first);\n            }\n            if (options.last_history || !this.model.get('last_archive_id')) {\n                rsm.last && this.model.set('last_archive_id', rsm.last);\n            }\n            _.each(messages, function (message) {\n                let loaded_message = account.chats.receiveChatMessage(message,\n                    _.extend({\n                        is_archived: true,\n                        is_unread_archived: options.unread_history ? true : undefined,\n                    }, options)\n                );\n                if (loaded_message) counter++;\n            });\n            if ((counter === 0) && options.last_history && !this.model.get('history_loaded')) {\n                this.getMessageArchive(_.extend(query, {\n                    max: xabber.settings.mam_messages_limit,\n                    before: this.model.get('first_archive_id') || ''\n                }), {previous_history: true});\n            }\n            if (options.unread_history_before){\n                if (this.model.get('encrypted')){\n                    //TODO: make async func to start opening chat after all messages been handled in enc chat\n                    setTimeout(() => {\n                        this.model._wait_load_unread_history.resolve();\n                    }, 1000);\n                } else{\n                    this.model._wait_load_unread_history.resolve();\n                }\n            }\n            if (options.unread_history_first && !messages.length){\n                this.loadPreviousHistory();\n                this.model.set('const_unread', 0);\n                this.model.set('unread', 0);\n                this.model._wait_load_unread_history.resolve();\n            }\n        }, (err) => {\n            if (options.previous_history) {\n                this._loading_history = false;\n                this.showHistoryFeedback(true);\n            }\n            if (options.unread_history_before || options.unread_history_first){\n                this.model._wait_load_unread_history.resolve();\n            }\n        });\n    },\n\n    requestMissedMessages: function (timestamp) {\n        if (!timestamp)\n            return;\n        let query = {};\n        query.var = [{var: 'start', value: moment(timestamp).format()}];\n        this.getMessageArchive(query, {missed_history: true});\n    },\n\n    loadLastHistory: function () {\n        if (!xabber.settings.load_history) {\n            return;\n        }\n        let last_archive_id = this.model.get('last_archive_id'),\n            query = {};\n        if (last_archive_id) {\n            query.after = last_archive_id;\n        } else {\n            query.before = '';\n            query.max = xabber.settings.mam_messages_limit_start;\n        }\n        this.getMessageArchive(query, {last_history: true});\n    },\n\n    loadPreviousHistory: function () {\n        if (this.contact) {\n            if (!xabber.settings.load_history || (!this.contact.get('subscription') || this.contact.get('subscription') !== 'both') && this.contact.get('group_chat')) {\n                return;\n            }\n        }\n        this.getMessageArchive({\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                before: this.model.get('first_archive_id') || '' },\n            {previous_history: true\n            });\n    },\n\n    loadUnreadHistory: function () {\n        if (this.contact) {\n            if (!xabber.settings.load_history || (!this.contact.get('subscription') || this.contact.get('subscription') !== 'both') && this.contact.get('group_chat')) {\n                return;\n            }\n        }\n        this.model.set('loading_unread_history', true)\n        this.getMessageArchive({\n            fast: true,\n            max: xabber.settings.mam_messages_limit,\n            after: this.model.get('last_read_msg'),\n        }, {\n            unread_history_first: true,\n            unread_history: true,\n        });\n    },\n\n    showHistoryFeedback: function (is_error) {\n        if (this._load_history_feedback_timeout) {\n            clearTimeout(this._load_history_feedback_timeout);\n            this._load_history_feedback_timeout = null;\n        }\n        let text = xabber.getString(is_error ? \"loading_archived_messages_error\" : \"loading_history\");\n        this.$history_feedback.text(text).removeClass('hidden');\n        if (is_error) {\n            this._load_history_feedback_timeout = setTimeout(\n                this.hideHistoryFeedback.bind(this), 5000);\n        }\n    },\n\n    showDayIndicator: function (text) {\n        this.$('.fixed-day-indicator').text(text);\n        this.$('.fixed-day-indicator-wrap').removeClass('hidden');\n    },\n\n    showPinnedMessage: function (ev) {\n        if ($(ev.target).hasClass('close'))\n            this.unpinMessage();\n        else {\n            let pinned_message = this.contact.get('pinned_message'),\n                participant_info = {};\n            pinned_message.get('user_info') && this.contact.participants && (participant_info = this.contact.participants.get(pinned_message.get('user_info').id));\n            participant_info && participant_info.attributes && pinned_message.set('user_info', participant_info.attributes);\n\n            let msg = this.buildMessageHtml(pinned_message),\n                pinned_msg_modal = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this, message: pinned_message, pinned: true});\n            pinned_msg_modal.$el.attr('data-color', this.account.settings.get('color'));\n            this.updateMessageInChat(msg, pinned_message);\n            this.initPopup(msg);\n            pinned_msg_modal.open(msg);\n        }\n    },\n\n    imageOnload: function ($message) {\n        let $image_container = $message.find('.img-content'),\n            $copy_link_icon = $message.find('.mdi-link-variant');\n        $image_container.css('background-image', 'none');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n    },\n\n    videoOnload: function ($message, message) {\n        let $copy_link_icon = $message.find('.mdi-link-variant');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n        this.initPlyrEmbedPlayer($message, message);\n    },\n\n    OGPLinkOnload: function ($message, message) {\n        let $copy_link_icon = $message.find('.mdi-link-variant');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n    },\n\n    locationOnload: function ($message) {\n        let $copy_location_div = $message.find('.msg-copy-location-content');\n        $copy_location_div.html(env.templates.svg['map-marker-outline']());\n        $copy_location_div.attr({\n            'data-location': 'true'\n        });\n    },\n\n    unpinMessage: function () {\n        let iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('update', {xmlns: Strophe.NS.GROUP_CHAT})\n            .c('pinned-message');\n        this.account.sendIQFast(iq, () => {}, (error) => {\n            if ($(error).find('error not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n        });\n    },\n\n    loadLocationInChat: function ($message, attrs) {\n        import('ol-local').then(ol => {\n            ol = ol.default ? ol.default : ol;\n            let $map_element = $message.find(`#${attrs.id}`);\n            if (!$map_element.length)\n                return;\n            let map = new ol.Map({\n                target: $map_element[0],\n                view: new ol.View\n                ({\tzoom: 15,\n                    center: ol.proj.transform([attrs.lon, attrs.lat], 'EPSG:4326', 'EPSG:3857')\n                }),\n                interactions: ol.interaction_defaults({\n                    altShiftDragRotate:false,\n                    doubleClickZoom:false,\n                    keyboard:false,\n                    mouseWheelZoom:false,\n                    shiftDragZoom:false,\n                    dragPan:false,\n                    pinchRotate:false,\n                    pinchZoom:false\n                }),\n                layers: [ new ol.layer.Tile({ source: new ol.source.OSM() }) ],\n            });\n\n            map.once('rendercomplete', function(event) {\n                let mapCanvas = document.createElement('canvas');\n                let size = map.getSize();\n                mapCanvas.width = size[0];\n                mapCanvas.height = size[1];\n                let mapContext = mapCanvas.getContext('2d');\n                Array.prototype.forEach.call(\n                    document.querySelectorAll(`#${attrs.id} .ol-layer canvas`),\n                    function (canvas) {\n                        if (canvas.width > 0) {\n                            let opacity = canvas.parentNode.style.opacity;\n                            mapContext.globalAlpha = opacity === '' ? 1 : Number(opacity);\n                            let transform = canvas.style.transform;\n                            // Get the transform parameters from the style's transform matrix\n                            let matrix = transform\n                                .match(/^matrix\\(([^\\(]*)\\)$/)[1]\n                                .split(',')\n                                .map(Number);\n                            // Apply the transform to the export map context\n                            CanvasRenderingContext2D.prototype.setTransform.apply(\n                                mapContext,\n                                matrix\n                            );\n                            let path = new Path2D('M 18 17.25 C 15.9289 17.25 14.25 15.5711 14.25 13.5 C 14.25 12.5054 14.6451 11.5516 15.3483 10.8483 C 16.0516 10.1451 17.0054 9.75 18 9.75 C 20.0711 9.75 21.75 11.4289 21.75 13.5 C 21.75 14.4946 21.3549 15.4484 20.6517 16.1517 C 19.9484 16.8549 18.9946 17.25 18 17.25 M 18 3 C 12.201 3 7.5 7.701 7.5 13.5 C 7.5 21.375 18 33 18 33 C 18 33 28.5 21.375 28.5 13.5 C 28.5 7.701 23.799 3 18 3 Z');\n                            mapContext.fillStyle = getComputedStyle(document.querySelector(`#${attrs.id}`)).color;\n                            mapContext.drawImage(canvas, 0, 0);\n                            mapContext.translate(157, 117);\n\n                            mapContext.fill(path);\n                        }\n                    }\n                );\n                if (navigator.msSaveBlob) {\n                    // link download attribute does not work on MS browsers\n                    navigator.msSaveBlob(mapCanvas.msToBlob(), 'map.png');\n                } else {\n                    let img = document.getElementById(`img_${attrs.id}`),\n                        dataURL = mapCanvas.toDataURL('image/png');\n                    map.setTarget(null)\n                    map = null;\n                    img.src= dataURL\n                }\n            });\n        });\n    },\n\n    hideHistoryFeedback: function () {\n        this.$history_feedback.addClass('hidden');\n    },\n\n    receiveNoTextMessage: function ($message, carbon_copied) {\n        let from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            to_jid = Strophe.getBareJidFromJid($message.attr('to')),\n            is_sender = from_jid === this.account.get('jid'),\n            $chat_state = $message.find(`[xmlns=\"${Strophe.NS.CHATSTATES}\"]`);\n        if ($chat_state.length) {\n            if (!is_sender) {\n                let $subtype = $chat_state.children('subtype');\n                if ($subtype.attr('type') == 'encrypted') {\n                    let view = xabber.chats_view.child(`${this.contact.hash_id}:encrypted`);\n                    if (view && view.content)\n                        view.content.showChatState($chat_state[0].tagName.toLowerCase());\n                } else\n                    this.showChatState($chat_state[0].tagName.toLowerCase(), $subtype.attr('type'), $subtype.attr('mime-type'));\n            }\n        }\n    },\n\n    showChatState: function (state, type, mime_type) {\n        clearTimeout(this._chatstate_show_timeout);\n        let message, name = this.contact.get('name');\n        if (state === 'composing') {\n            if (type) {\n                this._current_composing_msg = {type: type};\n                if (type === 'upload') {\n                    let file_type = mime_type ? utils.pretty_file_type_with_article(mime_type) : null;\n                    mime_type && (this._current_composing_msg.mime_type = mime_type);\n                    message = file_type ? xabber.getString(\"chat_state_composing_upload_filetype\", [file_type]) : xabber.getString(\"chat_state_composing_upload\");\n                    this._chatstate_show_timeout = setTimeout(() => {\n                        this.showChatState();\n                    }, constants.CHATSTATE_TIMEOUT_PAUSED_AUDIO);\n                } else {\n                    if (type === 'voice')\n                        message = xabber.getString(\"chat_state_composing_voice\");\n                    if (type === 'video')\n                        message = xabber.getString(\"chat_state_composing_video\");\n                    this._chatstate_show_timeout = setTimeout(() => {\n                        this.showChatState('paused', type);\n                    }, constants.CHATSTATE_TIMEOUT_PAUSED_AUDIO);\n                }\n            }\n            else {\n                this._current_composing_msg = undefined;\n                message = xabber.getString(\"chat_state_composing\");\n                this._chatstate_show_timeout = setTimeout(() => {\n                    this.showChatState();\n                }, constants.CHATSTATE_TIMEOUT_PAUSED);\n            }\n        } else if (state === 'paused') {\n            this.showChatState();\n            return;\n        } else {\n            this.bottom.showChatNotification('');\n            this.chat_item.updateLastMessage();\n            return;\n        }\n        if (message)\n            this.bottom.showChatNotification(`${this.contact.get('name')} ${message}`);\n        else\n            this.bottom.showChatNotification();\n        this.chat_item.$('.last-msg').text(message);\n        this.chat_item.$('.last-msg-date').text(utils.pretty_short_datetime())\n            .attr('title', pretty_datetime());\n        this.chat_item.$('.msg-delivering-state').addClass('hidden');\n    },\n\n    updateMentions: function (message) {\n        if (message.get('mentions')) {\n            message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\";\n                if (this.contact.get('group_chat') || message.get('groupchat_jid')) {\n                    let id = mention_target.match(/\\?id=\\w*/),\n                        jid = mention_target.match(/\\?jid=.*/);\n                    if (id && this.contact.my_info) {\n                        mention_target = id[0].slice(4);\n                        (mention_target === this.contact.my_info.get('id')) && (mention.me = true);\n                    }\n                    else if (jid) {\n                        mention_target = jid[0].slice(5);\n                        (mention_target === this.account.get('jid')) && (mention.me = true);\n                    }\n                }\n                else {\n                    mention_target = mention_target.slice(5);\n                    if (mention_target === this.account.get('jid'))\n                        mention.me = true;\n                }\n            });\n        }\n    },\n\n    onMessage: function (message) {\n        this.updateMentions(message);\n        this.account.messages.add(message);\n        let is_scrolled_to_bottom = this.isScrolledToBottom(),\n            scrolled_from_bottom = this.getScrollBottom();\n        if (!_.isUndefined(message.get('is_accepted'))) {\n            this.model.set('is_accepted', false);\n        }\n        this.model.set('opened', true);\n        if (!message.get('is_archived') && !message.get('is_unread_archived') && message.get('stanza_id'))\n            this.model.set('last_archive_id', message.get('stanza_id'));\n\n        if (message.get('participants_version')) {\n            if (this.contact.participants && this.contact.participants.version < message.get('participants_version'))\n                this.contact.trigger('update_participants');\n        }\n\n        let $message = this.addMessage(message);\n\n        if (message.get('type') === 'file_upload') {\n            if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                this.startGalleryUploadFile(message, $message);\n            else\n                this.startUploadFile(message, $message);\n        }\n\n        if (!(message.get('synced_from_server') || (message.get('is_archived') && !message.get('missed_msg')))) {\n            if (message.get('missed_msg')){\n                if (this.model.get('last_read_msg')){\n                    let last_read_msg = this.model.messages.find(m => this.model.get('last_read_msg') && (m.get('stanza_id') === this.model.get('last_read_msg') || m.get('contact_stanza_id') === this.model.get('last_read_msg'))),\n                        deferred = new $.Deferred();\n                    deferred.done(() => {\n                        if (last_read_msg && message.get('timestamp') > last_read_msg.get('timestamp')){\n                            message.set('is_unread', true);\n                            if (!xabber.get('focused')) {\n                                if (this.model.get('saved') || this.model.isMuted())\n                                    message.set('muted', true);\n                            }\n                            this.model.setMessagesDisplayed(message.get('timestamp'));\n                        }\n                    });\n                    if (!last_read_msg){\n                        this.contact.getMessageByStanzaId(this.model.get('last_read_msg'), ($message) => {\n                            last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                            deferred.resolve();\n                        });\n                    } else {\n                        deferred.resolve();\n                    }\n                }\n            } else {\n                if (!(message.isSenderMe() || message.get('silent') || ((message.get('type') === 'system') && !message.get('auth_request')))) {\n                    message.set('is_unread', true);\n                    if (message.get('is_unread') && xabber.get('focused') && !xabber.get('idle') && this.isVisible()){\n                        this.readVisibleMessages();\n                    }\n                    if (!xabber.get('focused')) {\n                        if (this.model.get('saved') || this.model.isMuted())\n                            message.set('muted', true);\n                        else if (!message.get('synced_invitation_from_server'))\n                            this.notifyMessage(message);\n                    }\n                    this.model.setMessagesDisplayed(message.get('timestamp'));\n                }\n            }\n            if (this.contact && this.model.get('archived')){\n                if (this.model.isMuted())\n                    message.set('archived', true);\n                else {\n                    this.head.archiveChat();\n                    this.model.set('archived', false);\n                }\n            }\n            if (this.model.get('saved')) {\n                message.set('muted', true);\n                message.set('state', constants.MSG_DISPLAYED);\n            }\n        }\n\n        if (this.isVisible() && (!message.get('is_unread') || is_scrolled_to_bottom) && !message.get('is_between_anchors')) {\n            let is_scrolling_needed;\n            if (is_scrolled_to_bottom){\n                if (this.$(`.chat-message.unread-message`).length){\n                    if (this.$(`.chat-message.unread-message`)[0].offsetTop > (this._scrolltop + 140)) {\n                        is_scrolling_needed = true;\n                    }\n                } else\n                    is_scrolling_needed = true;\n            }\n            if ((is_scrolled_to_bottom && is_scrolling_needed) || message.get('submitted_here')) {\n                this.scrollToBottom();\n            } else if (!is_scrolled_to_bottom) {\n                this.updateScrollBar();\n                this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - scrolled_from_bottom);\n            }\n        }\n\n        if (message.get('synced_from_server') && message.get('is_unread')) {\n            this.onChangedReadState(message);\n        }\n        if (message.get('attention')) {\n            this.attentionMessage(message);\n        }\n\n        if (message.isSenderMe()) {\n            if (!message.get('is_archived') && !message.get('missed_msg') && message.get('type') != 'system')\n                this.readMessages(message.get('timestamp'));\n            if (this.model.get('last_displayed_id') >= message.get('stanza_id') && message.get('stanza_id') !== message.get('origin_id'))\n                message.set('state', constants.MSG_DISPLAYED);\n            else if (message.get('stanza_id') !== message.get('origin_id') && (this.model.get('last_delivered_id') >= message.get('stanza_id') || message.get('is_archived')))\n                message.set('state', constants.MSG_DELIVERED);\n        }\n\n        if (message.get('private_invite') || message.get('invite')) {\n            if (!(this.contact.invitation && this.contact.invitation.message.get('timestamp') > message.get('timestamp')))\n                this.contact.invitation = new xabber.GroupchatInvitationView({model: this.contact, message: message});\n            this.model.contact.set('invitation', true);\n            this.model.get('active') && this.model.contact.trigger('open_chat', this.model.contact);\n            message.set('is_unread', false);\n        }\n\n        let last_message = this.model.last_message;\n        if (!last_message || message.get('timestamp') >= last_message.get('timestamp')) {\n            this.model.last_message = message;\n            this.chat_item.updateLastMessage();\n        }\n        if (message.get('mentions')) {\n            message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\",\n                    id = mention_target.match(/\\?id=\\w*/),\n                    jid = mention_target.match(/\\?jid=.*/);\n                if (id)\n                    mention_target = id[0].slice(4);\n                else if (jid)\n                    mention_target = jid[0].slice(5);\n                else\n                    mention_target = \"\";\n                if (this.contact.my_info)\n                    (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {message: message, contact: this.contact});\n                else if (this.contact.get('group_chat')) {\n                    if (this._pending_my_info) {\n                        this._pending_my_info.done(() => {\n                            (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {message: message, contact: this.contact});\n                            this._pending_my_info = null;\n                        });\n                    }\n                    else {\n                        this._pending_my_info = new $.Deferred();\n                        this.contact.getMyInfo(() => {\n                            (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {\n                                message: message,\n                                contact: this.contact\n                            });\n                            this._pending_my_info.resolve();\n                        });\n                    }\n                }\n                (mention_target === this.account.get('jid') || mention_target === \"\") && this.account.mentions.create(null, {message: message, contact: this.contact});\n            });\n        }\n\n        if (this.model.messages_view && xabber.body.screen.get('right') === 'message_context' && this.model.messages_view.last_history_loaded)\n            this.account.context_messages.add(message);\n\n    },\n\n\n    decryptImages: function (message, force) {\n        let scrolled_from_bottom = this.getScrollBottom();\n        if (this.model.get('encrypted') || message.get('encrypted') || force) {\n            let images = message.get('images') || [];\n            if (images.length) {\n                images.forEach((img) => {\n                    let source = img.sources[0];\n                    if (!img.key)\n                        return;\n                    this.model.messages.decryptFile(source, img.key).then((result) => {\n                        if (result === null)\n                            return;\n                        let $msg = [];\n                        if (this.model.messages_view && xabber.body.screen.get('right') === 'message_context')\n                            $msg = this.model.messages_view.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"] img[src=\"${source}\"]`);\n                        else\n                            $msg = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"] img[src=\"${source}\"]`);\n                        if ($msg.length) {\n                            $msg[0].src = result;\n                            $msg[0].onload = () => {\n                                if (!scrolled_from_bottom)\n                                    this.scrollToBottom();\n                                else\n                                    this.scrollTo(this.ps_container[0].scrollHeight - scrolled_from_bottom);\n                            };\n                            $msg.attr('data-mfp-src', result);\n                        }\n                    });\n                });\n            }\n            let fwd_msgs = message.get('forwarded_message') || [];\n            fwd_msgs.forEach((fwd_msg) => {\n                let fwd_images = fwd_msg.get('images') || [];\n                fwd_images.forEach((img) => {\n                    let source = img.sources[0];\n                    if (!img.key)\n                        return;\n                    this.model.messages.decryptFile(source, img.key).then((result) => {\n                        if (result === null)\n                            return;\n                        let $msg = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"] .fwd-message[data-uniqueid=\"${fwd_msg.get('unique_id')}\"] img[src=\"${source}\"]`);\n                        if ($msg.length) {\n                            $msg[0].src = result;\n                            $msg[0].onload = () => {\n                                if (!scrolled_from_bottom)\n                                    this.scrollToBottom();\n                                else\n                                    this.scrollTo(this.ps_container[0].scrollHeight - scrolled_from_bottom);\n                            };\n                            $msg.attr('data-mfp-src', result);\n                        }\n                    });\n                });\n            });\n        }\n    },\n\n    addMessage: function (message) {\n        let $message = this.buildMessageHtml(message),\n            index = this.model.messages.indexOf(message);\n        if (index === 0) {\n            $message.prependTo(this.$('.chat-content'));\n        } else if (this.model.messages.models.length && this.model.messages.models[index - 1]) {\n            let $prev_message = this.$(`.chat-message[data-uniqueid=\"${this.model.messages.models[index - 1].get('unique_id')}\"]`);\n            if (!$prev_message.length) {\n                $prev_message = this.addMessage(this.model.messages.models[index - 1]);\n            }\n            $message.insertAfter($prev_message);\n        }\n        let $next_message = $message.nextAll('.chat-message').first();\n        this.updateMessageInChat($message[0], message);\n        if ($next_message.length) {\n            this.updateMessageInChat($next_message[0]);\n        }\n        this.initPopup($message);\n        this.bottom.showChatNotification();\n        return $message;\n    },\n\n    initPopup: function ($message) {\n        let $one_image = $message.find('.uploaded-img'),\n            $collage_image = $message.find('.uploaded-img-for-collage');\n        if ($one_image.length) {\n            $one_image.each((idx, item) => {\n                this.initMagnificPopup($(item));\n            });\n        }\n        if ($collage_image.length) {\n            this.initZoomGallery($message);\n        }\n    },\n\n    getImagesInformation: function (msg) {\n        let images = msg.get('images'),\n            servers = [];\n        if (!images)\n            return;\n        images.forEach((img) => {\n            let server = new URL(img.sources[0]).hostname;\n            img.pretty_size = utils.pretty_size(img.size)\n            servers.push(server);\n        });\n        servers = [...new Set(servers)]\n\n        return {images, servers};\n    },\n\n    initMagnificPopup: function ($elem) {\n        let self = this;\n        $elem.length && $elem.magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + self.model.messages.getFilename(item.el.attr('src')) + '</a>' + ' ' + item.el.attr('title');\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    initZoomGallery: function ($message) {\n        let self = this;\n        $message.find('.zoom-gallery').length && $message.find('.zoom-gallery').magnificPopup({\n            delegate: 'img',\n            type: 'image',\n            closeOnContentClick: false,\n            closeBtnInside: false,\n            mainClass: 'mfp-with-zoom mfp-img-mobile',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + self.model.messages.getFilename(item.el.attr('src')) + '</a>' + ' ' + item.el.attr('title');\n                }\n            },\n            gallery: {\n                enabled: true\n            },\n            zoom: {\n                enabled: true,\n                duration: 300,\n                opener: function(element) {\n                    return element;\n                }\n            }\n        });\n    },\n\n    updateMessage: function (item) {\n        let $message, images = item.get('images'), emoji = item.get('only_emoji'), $new_message,\n            files =  item.get('files');\n        if (item instanceof xabber.Message) {\n            this.updateMentions(item);\n            $new_message = this.buildMessageHtml(item);\n            $message = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n        }\n        else\n            return;\n        $message.replaceWith($new_message)\n        $message = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n        this.updateMessageInChat($message[0], item);\n        this.initPopup($message);\n        this.bottom.showChatNotification();\n\n        if (item.get('data_form')) {\n            let data_form = utils.render_data_form(item.get('data_form'));\n            $message.find('.chat-msg-content').append(data_form);\n        }\n        let short_datetime = utils.pretty_short_datetime(item.get('last_replace_time')),\n            datetime = moment(item.get('last_replace_time')).format('D MMMM, YYYY HH:mm:ss'),\n            new_title = `${pretty_datetime(item.get('time'))} ${xabber.getString(\"edited\", [moment(item.get('timestamp')).startOf('day').isSame(moment(item.get('last_replace_time')).startOf('day')) ? short_datetime : datetime])}`;\n        $message.find('.msg-time').prop('title', new_title);\n        $message.find('.edited-info').removeClass('hidden').text(xabber.getString(\"chat_screen__message__label_edited\")).prop('title', new_title);\n    },\n\n    removeAllMessagesExceptLast: function () {\n        let messages_to_save = [];\n        if (!this.model.messages)\n            return;\n        this.model.messages.forEach((message, idx) => {\n            if (idx === (this.model.messages.length - 1)){\n                messages_to_save.push(message);\n                this.model.set('first_archive_id', message.get('stanza_id'));\n                this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`).removeClass('unread-message');\n                this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`).removeClass('unread-message-background');\n                return;\n            }\n            let $message, $message_in_chat;\n            $message_in_chat = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`);\n            (this.bottom.content_view) && ($message = this.bottom.content_view.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`));\n            $message.prev('.chat-day-indicator').remove();\n            $message.remove();\n        });\n        this.model.messages.reset(messages_to_save);\n        this.updateScrollBar();\n    },\n\n    removeMessage: function (item) {\n        let message, $message, $message_in_chat;\n        if (item instanceof xabber.Message) {\n            message = item;\n            $message_in_chat = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n            (this.bottom.content_view) && ($message = this.bottom.content_view.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`));\n        } else {\n            $message = item;\n            if (!$message.length) return;\n            message = this.model.messages.get($message.data('uniqueid'));\n        }\n        message && message.destroy();\n        if ($message_in_chat) {\n            this.removeMessageFromDOM($message_in_chat);\n        }\n        if ($message && ($message !== $message_in_chat))\n            this.removeMessageFromDOM($message);\n    },\n\n    removeMessageFromDOM: function ($message) {\n        if (($message.hasClass('with-author')) && (!$message.next().hasClass('with-author'))) {\n            let avatar = $message.find('.circle-avatar')[0];\n            $message.next().addClass('with-author');\n            $message.next().find('.circle-avatar').replaceWith(avatar);\n        }\n        $message.prev('.chat-day-indicator').remove();\n        $message.remove();\n        this.bottom.manageSelectedMessages();\n        if (!this._clearing_history) {\n            this.updateScrollBar();\n        }\n    },\n\n    clearHistory: function () {\n        let dialog_options = [],\n            dialog_message = this.contact.get('group_chat') ? xabber.getString(\"clear_group_chat_history_dialog_message\") : xabber.getString(\"clear_chat_history_dialog_message\"),\n            is_group_chat = this.contact.get('group_chat') ? true : false;\n        this._clearing_history = true;\n        if (this.account.server_features.get(Strophe.NS.REWRITE)) {\n            utils.dialogs.ask(xabber.getString(\"clear_history\"), dialog_message,\n                dialog_options, {ok_button_text: xabber.getString(\"clear_chat_history_dialog_button\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    return;\n                }\n                this.model.retractAllMessages(is_group_chat, () => {\n                    this._clearing_history = false;\n                    this.chat_item.updateLastMessage();\n                    this.updateScrollBar();\n                }, () => {\n                    this._clearing_history = false;\n                });\n            });\n        }\n        else {\n            utils.dialogs.ask(xabber.getString(\"clear_history\"), `${dialog_message}\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')})`,\n                dialog_options, {ok_button_text: xabber.getString(\"clear_chat_history_dialog_button\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    return;\n                }\n                let msgs = _.clone(this.model.messages.models);\n                msgs.forEach((item) => { this.removeMessage(item); });\n            });\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url, chat) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.link-file');\n        chat = chat || this.model;\n        $elem.addClass('voice-message-rendering').html($(templates.messages.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, $elem.find('#' + unique_id));\n\n        let hideShowCursor = () => {\n            let current_time = aud.getCurrentTime(),\n                duration = aud.getDuration();\n            if (current_time === 0 || current_time === duration)\n                $msg_element.addClass('wave-cursor-hidden');\n            else\n                $msg_element.removeClass('wave-cursor-hidden');\n        };\n\n        aud.on('ready', () => {\n            let duration = Math.round(aud.getDuration());\n            hideShowCursor();\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.addClass('playing');\n            $msg_element.removeClass('wave-cursor-hidden');\n            let is_popup;\n            xabber.current_plyr_player && (is_popup = xabber.current_plyr_player.is_popup);\n            xabber.current_plyr_player = chat.plyr_players.find(item => item.$audio_elem === $msg_element[0]);\n            xabber.current_plyr_player && (xabber.current_plyr_player.chat_item = chat.item_view);\n            xabber.current_plyr_player && (xabber.current_plyr_player.is_popup = is_popup);\n            let other_players = xabber.plyr_players.filter(other => other != xabber.current_plyr_player);\n            other_players.forEach(function(other) {\n                if (other.$audio_elem){\n                    if (other.$audio_elem.voice_message)\n                        other.$audio_elem.voice_message.stopTime();\n                }\n            });\n            (xabber.plyr_player_popup && xabber.plyr_player_popup.player) && xabber.plyr_player_popup.player.stop();\n            (!xabber.current_plyr_player && xabber.plyr_player_popup) && xabber.plyr_player_popup.closePopup();\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n            xabber.trigger('plyr_player_updated');\n        });\n\n        aud.on('finish', () => {\n            hideShowCursor();\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.removeClass('playing');\n            hideShowCursor();\n            xabber.trigger('plyr_player_updated');\n        });\n\n        aud.on('seek', () => {\n            hideShowCursor();\n        });\n\n        aud.stopTime = () => {\n            aud.stop()\n            $elem.find('.voice-msg-current-time').text(utils.pretty_duration(0));\n        };\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createImageGrid: function (attrs) {\n        let template_for_images;\n        if (attrs.images.length > 6) {\n            let tpl_name = 'template-for-6',\n                hidden_images = attrs.images.length - 5;\n            !xabber.settings.load_media && (tpl_name = 'hidden-template-for-6')\n            template_for_images = $(templates.messages[tpl_name](attrs));\n            template_for_images.find('.last-image').addClass('hidden-images');\n            template_for_images.find('.image-counter').text('+' + hidden_images);\n        }\n        else {\n            let tpl_name = 'template-for-' + attrs.images.length;\n            !xabber.settings.load_media && (tpl_name = 'hidden-template-for-' + attrs.images.length)\n            template_for_images = $(templates.messages[tpl_name](attrs));\n        }\n        if (!xabber.settings.load_media) {\n            template_for_images.find('img').removeClass('uploaded-img-for-collage popup-img').addClass('unloaded-img')\n        }\n        return template_for_images;\n    },\n\n    buildMessageHtml: function (message) {\n        let attrs = _.clone(message.attributes),\n            is_sender = (message instanceof xabber.Message) ? message.isSenderMe() : false,\n            user_info = attrs.user_info || {}, username,\n            images = attrs.images,\n            videos = attrs.videos,\n            emoji = message.get('only_emoji'),\n            files =  attrs.files,\n            locations =  attrs.locations,\n            link_references =  attrs.link_references,\n            is_video = Boolean(videos && videos.length),\n            is_image = Boolean(images && images.length),\n            is_location = locations ? true : false,\n            is_file = files ? true : false,\n            is_audio = false,\n            template_for_images,\n            avatar_id = user_info.avatar,\n            avatar_url = user_info.avatar_url,\n            role = user_info.role,\n            badge = user_info.badge,\n            from_id = user_info.id,\n            has_encrypted_files = attrs.has_encrypted_files,\n            audio_player_list = [];\n\n        username = user_info.nickname || this.model.get('saved') && this.account.get('name') || (attrs.from_jid === this.contact.get('jid') && this.contact.get('name'));\n        if (!username) {\n            if (is_sender) {\n                if (this.model.get(\"group_chat\")) {\n                    if (this.contact.my_info)\n                        username = this.contact.my_info.get('nickname');\n                    else if (this.contact)\n                        this.contact.getMyInfo(() => {\n                            username = this.contact.my_info.get('nickname');\n                            if ($message) {\n                                $message.children(\".msg-wrap\").find(\".chat-msg-author-wrap .chat-msg-author\").text(Strophe.xmlescape(username));\n                            }\n                        });\n                    else\n                        username = this.account.get('name');\n                } else\n                    username = this.account.get('name');\n            } else {\n                username = this.account.contacts.get(attrs.from_jid) ? this.account.contacts.get(attrs.from_jid).get('name') : attrs.from_jid;\n            }\n        }\n        username = Strophe.xmlescape(username || \"\");\n\n        if (is_sender && this.model.get('group_chat')) {\n            if (this.contact.my_info) {\n                role = this.contact.my_info.get('role');\n                badge = this.contact.my_info.get('badge');\n            }\n        }\n        _.extend(attrs, {\n            username: username,\n            state: (message instanceof xabber.Message) ? message.getState() : 'sent',\n            verbose_state: (message instanceof xabber.Message) ? message.getVerboseState() : 'sent',\n            time: pretty_datetime(attrs.time),\n            short_time: utils.pretty_time(attrs.time),\n            avatar_id: avatar_id,\n            avatar_url: avatar_url,\n            is_image: is_image,\n            is_video: is_video,\n            is_file: is_file,\n            is_location: is_location,\n            files: files,\n            locations: locations,\n            link_references: link_references,\n            role: utils.pretty_name(role),\n            badge: badge,\n            from_id: from_id\n        });\n        attrs.encrypted = attrs.encrypted || this.model.get('encrypted');\n        attrs.ephemeral_timer = attrs.ephemeral_timer || this.model.get('ephemeral_timer');\n        attrs.not_encrypted = attrs.not_encrypted || null;\n        attrs.not_verified_device = attrs.not_verified_device || null;\n        attrs.not_verified_device_no_device = attrs.not_verified_device_no_device || null;\n        attrs.device_id = attrs.device_id || null;\n\n        if (attrs.type === 'system') {\n            let tpl_name = attrs.invite ? 'group_request' : 'system';\n            return $(templates.messages[tpl_name](attrs));\n        }\n\n        if (is_image) {\n            if (images.length > 1) {\n                template_for_images = this.createImageGrid(attrs);\n            }\n        }\n\n        let classes = [\n            attrs.is_unread && 'unread-message',\n            attrs.is_unread && 'unread-message-background',\n            attrs.not_encrypted && 'not-decrypted',\n            attrs.not_verified_device && !attrs.not_verified_device_no_device && 'not-verified',\n            attrs.not_verified_device_no_device && 'not-existing-device',\n            attrs.forwarded_message && 'forwarding',\n            (attrs.encrypted || this.model.get('encrypted')) ? 'encrypted' : \"\"\n        ];\n\n        let markup_body = utils.markupBodyMessage(message), $message;\n        if (attrs.searched_message){\n            let myRegexp = new RegExp('(.{0,12})(' + attrs.query + ')(.{0,12})','gmius'),\n                matching_markup = myRegexp.exec(markup_body);\n            if (matching_markup) {\n                if (matching_markup[1].length == 12)\n                    matching_markup[1] = '...' + matching_markup[1].substring(1);\n                if (matching_markup[3].length == 12)\n                    matching_markup[3] = matching_markup[3].substring(0, matching_markup[3].length - 1) + '...';\n                markup_body = matching_markup[1] + '<span class=\"mention ground-color-100\">' + matching_markup[2] + '</span>' + matching_markup[3];\n                markup_body = markup_body.replace(/\\n/g, \" \");;\n            }\n        }\n\n        if (this.model.get('saved') && !markup_body.length && attrs.forwarded_message && attrs.forwarded_message.length == 1) {\n            $message = $(templates.messages.saved_main(_.extend(attrs, {\n                classlist: classes.join(' ')\n            })));\n        } else if (attrs.searched_message)\n            $message = $(templates.messages.searched(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                msg_time: utils.pretty_short_datetime_recent_chat(attrs.time),\n                classlist: classes.join(' ')\n            })));\n        else if (attrs.type === 'file_upload')\n            $message = $(templates.messages.file_upload(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                ephemeral_timer_text: utils.pretty_duration_ephemeral_timer(attrs.ephemeral_timer),\n                classlist: classes.join(' ')\n            })));\n        else\n            $message = $(templates.messages.main(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                ephemeral_timer_text: utils.pretty_duration_ephemeral_timer(attrs.ephemeral_timer),\n                classlist: classes.join(' ')\n            })));\n\n        if (attrs.hasOwnProperty('encrypted')){\n            if (attrs.hasOwnProperty('submitted_here')){\n                $message.attr('data-trust', true);\n                if (attrs.hasOwnProperty('is_contact_trusted')){\n                    $message.attr('data-trust', attrs.is_contact_trusted);\n                }\n            } else if (attrs.hasOwnProperty('is_trusted')){\n                $message.attr('data-trust', attrs.is_trusted);\n            } else {\n                $message.attr('data-trust', this.$el.attr('data-trust'));\n            }\n        }\n\n        if (is_image) {\n            if (images.length > 1) {\n                $message.find('.chat-msg-media-content').html(template_for_images);\n                !xabber.settings.load_media && $message.find('.img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n            if (images.length == 1) {\n                let $img_html = this.createImage(images[0]),\n                    img_content = this.createImageContainer(images[0]);\n                $img_html.onload = () => {\n                    this.imageOnload($message);\n                };\n                $message.find('.chat-msg-media-content').html($(img_content).html($img_html));\n                !xabber.settings.load_media && $message.find('.img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                this.updateScrollBar();\n            }\n        }\n        if (is_video) {\n            let video_content = this.createVideoContainer();\n            $message.find('.chat-msg-media-content').append(video_content);\n            videos.forEach((video, idx) => {\n                let video_el = this.createVideo(video, idx);\n                $message.find('.video-content').append(video_el);\n            });\n            this.videoOnload($message, message);\n            $message.removeClass('file-upload noselect');\n        }\n\n        if (is_file && attrs.type !== 'file_upload') {\n            if (files.length > 0) {\n                let file_attrs = _.clone(files),\n                    template_for_file_content;\n                $(file_attrs).each((idx, file) => {\n                    let copied_attrs = _.clone(file_attrs[idx]);\n                    if (file.type) {\n                        if (file.voice)\n                            is_audio = true;\n                        else\n                            is_audio = false;\n                    }\n                    ((file_attrs.length === 1) && is_audio) && (file.name = xabber.getString(\"voice_message\"));\n                    let mdi_icon_class = utils.file_type_icon(file.type);\n                    _.extend(copied_attrs, { is_audio: is_audio, duration: utils.pretty_duration(copied_attrs.duration), mdi_icon: mdi_icon_class, size: utils.pretty_size(copied_attrs.size) });\n                    template_for_file_content = is_audio ? $(templates.messages.audio_file(copied_attrs)) : $(templates.messages.file(copied_attrs));\n                    $message.find('.chat-msg-media-content').append(template_for_file_content);\n                    if (is_audio && $message.find('.link-file').length) {\n                        let audio_player = {$audio_elem : $message.find('.link-file')[0]};\n                        audio_player.msg_time = $message.attr('data-time');\n                        audio_player.author = username;\n                        audio_player.message_unique_id = $message.attr('data-uniqueid');\n                        if (attrs.from_jid === this.account.get('jid')) {\n                            if (this.model.get('group_chat')) {\n                                if (this.contact.my_info) {\n                                    audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                                    if (!audio_player.contact_avatar) {\n                                        if (this.account.cached_image)\n                                            audio_player.contact_avatar = this.account.cached_image;\n                                        !audio_player.contact_avatar && (audio_player.contact_avatar = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                                    } else\n                                        audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                                }\n                            }\n                            if (!audio_player.contact_avatar)\n                                audio_player.contact_avatar = this.account.cached_image;\n                        } else {\n                            if (this.model.get('group_chat')) {\n                                let author = $message.find('.msg-wrap .chat-msg-author').text();\n                                audio_player.contact_avatar = Images.getDefaultAvatar(author);\n                            }\n                            else {\n                                let author = this.account.contacts.get($message.data('from')) || $message.find('.msg-wrap .chat-msg-author').text() || $message.data('from');\n                                audio_player.contact_avatar = author.cached_image || Images.getDefaultAvatar(author);\n                            }\n                        }\n                        if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                            this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                            xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                            audio_player_list = audio_player_list.concat([audio_player]);\n                        } else {\n                            audio_player_list = message.get('msg_player_audios');\n                        }\n\n                        let f_url = $message.find('.link-file').find('.file-link-download').attr('href');\n                        $message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                        audio_player.$audio_elem.voice_message = this.renderVoiceMessage($message.find('.link-file').find('.file-container')[0], f_url);\n\n                        xabber.trigger('plyr_player_updated');\n                    }\n                });\n            }\n        }\n\n        if (is_file && attrs.type === 'file_upload') {\n            let images = [];\n            $(files).each((idx, file_) => {\n                file_.upload_id = idx;\n                if (utils.isImageType(file_.type)) {\n                    file_.sources = [file_.key ? file_.image_prev.src : window.URL.createObjectURL(new Blob([file_])),];\n                    images.push(file_);\n                }\n            });\n            if (images.length > 0) {\n                if (images.length > 1) {\n                    let template_for_images;\n                    if (images.length > 6) {\n                        let tpl_name = 'template-for-6',\n                            hidden_images = images.length - 5;\n                        template_for_images = $(templates.messages[tpl_name]({images}));\n                        template_for_images.find('.last-image').addClass('hidden-images');\n                        template_for_images.find('.image-counter').text('+' + hidden_images);\n                    }\n                    else {\n                        let tpl_name = 'template-for-' + images.length;\n                        template_for_images = $(templates.messages[tpl_name]({images}));\n                    }\n                    template_for_images.addClass('unuploaded-images');\n                    $(templates.messages.loading_circle()).insertAfter(template_for_images.find('img'));\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').prepend(template_for_images);\n                } else {\n                    let $img_html = this.createImage(images[0]),\n                        img_content = this.createImageContainer(images[0]),\n                        maxHeight = 400,\n                        maxWidth = (xabber.main_panel.$el.width() * 0.715 - 176) * 0.7,\n                        imgHeight = images[0].height,\n                        imgWidth = images[0].width;\n                    maxWidth = maxWidth > 400 ? 400 : maxWidth;\n                    if (imgHeight && imgWidth) {\n                        if (imgWidth > maxWidth) {\n                            imgHeight = imgHeight * (maxWidth/imgWidth);\n                            imgWidth = maxWidth;\n                        }\n                        if (imgHeight > maxHeight) {\n                            imgWidth = imgWidth * (maxHeight/imgHeight);\n                            imgHeight = maxHeight;\n                        }\n                    }\n                    imgWidth = imgWidth ? imgWidth : 200;\n                    imgHeight = imgHeight ? imgHeight : 200;\n                    $(img_content).addClass('unuploaded-images');\n                    $(img_content).attr('data-upload-file-id', images[0].upload_id);\n                    $(img_content).css({\n                        width: imgWidth,\n                        height: imgHeight,\n                        'max-height': maxHeight,\n                        'max-width': maxWidth,\n                    });\n                    $(img_content).html($img_html)\n                    $(img_content).append(templates.messages.loading_circle());\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').prepend(img_content);\n                }\n            }\n            if (files.length > 0) {\n                $(files).each((idx, item) => {\n                    if (images.includes(item))\n                        return;\n                    let file_attrs = {\n                            name: item.name,\n                            type: item.type,\n                            upload_id: item.upload_id,\n                        },\n                        template_for_file_content;\n                    _.extend(file_attrs, {size: utils.pretty_size(item.size)});\n                    template_for_file_content = $(templates.messages.file_loading(file_attrs));\n                    template_for_file_content.find('.file-loading-container').html(templates.messages.loading_circle());\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_file_content);\n                });\n            }\n        }\n        if (is_location) {\n            if (locations.length > 0) {\n                let location_attrs = _.clone(locations),\n                    template_for_location_content;\n                $(location_attrs).each((idx, location) => {\n                    let copied_attrs = _.clone(location_attrs[idx]);\n                    _.extend(copied_attrs, { id: '_' + Math.random().toString(36).substr(2, 9)});\n                    if (xabber.settings.mapping_service){\n                        template_for_location_content = $(templates.messages.location(copied_attrs));\n                        $message.find('.chat-msg-location-content').attr('lon', copied_attrs.lon);\n                        $message.find('.chat-msg-location-content').attr('lat', copied_attrs.lat);\n                        $message.find('.chat-msg-location-content').append(template_for_location_content);\n                        this.loadLocationInChat($message, copied_attrs);\n                        this.locationOnload($message);\n                    } else {\n                        $message.find('.chat-msg-content').append('<a class=\"location-link\" href=\"geo:' + copied_attrs.lat + ',' + copied_attrs.lon + '\">' + xabber.getString(\"recent_chat__last_message__locations_plural_0\") + '</a>');\n                    }\n                });\n            }\n        }\n\n        if (link_references && link_references.length > 0) {\n            let link_references_attrs = _.clone(link_references),\n                template_for_link_reference_content,\n                youtube_url_regexp = new RegExp('^((?:https?:)?\\\\/\\\\/)?((?:www|m)\\\\.)?((?:youtube(-nocookie)?\\\\.com|youtu.be))(\\\\/(?:[\\\\w\\\\-]+\\\\?v=|embed\\\\/|v\\\\/)?)([\\\\w\\\\-]+)(\\\\S+)?$', 'i'),\n                vimeo_url_regexp = /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i;\n            $(link_references_attrs).each((idx, link) => {\n                let copied_attrs = _.clone(link_references_attrs[idx]);\n                copied_attrs.domain = copied_attrs.url ? utils.getDomainFromUrl(copied_attrs.url) : copied_attrs.site_name;\n                if (copied_attrs.original_text && !/^https?:\\/\\//i.test(copied_attrs.original_text))\n                    copied_attrs.original_text = 'http://' + copied_attrs.original_text;\n                if (link_references_attrs[idx].type && link_references_attrs[idx].type.includes('video') && link_references_attrs[idx].video_url && (youtube_url_regexp.test(link_references_attrs[idx].video_url) || vimeo_url_regexp.test(link_references_attrs[idx].video_url))){\n                    copied_attrs.video_url = link_references_attrs[idx].video_url.replace(\"autoplay=1&\", \"\");\n                    copied_attrs.is_video = true;\n                    youtube_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'youtube');\n                    vimeo_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'vimeo');\n                } else\n                    copied_attrs.is_video = false;\n                template_for_link_reference_content = $(templates.messages.link_reference_chat(copied_attrs));\n                $message.find('.chat-msg-link-reference-content').append(template_for_link_reference_content);\n            });\n            this.OGPLinkOnload($message, message);\n        }\n\n        if (message.get('data_form')) {\n            let data_form = utils.render_data_form(message.get('data_form'));\n            $message.find('.chat-msg-content').append(data_form);\n        }\n\n        if (attrs.forwarded_message && !attrs.searched_message) {\n            $(attrs.forwarded_message).each((idx, fwd_msg) => {\n                is_sender = fwd_msg.isSenderMe();\n                attrs = _.clone(fwd_msg.attributes);\n                let is_image_forward = Boolean(attrs.images && attrs.images.length),\n                    images_forward = is_image_forward ? _.clone(attrs.images) : undefined,\n                    $img_html_forward,\n                    is_forward_video = Boolean(attrs.videos && attrs.videos.length),\n                    is_forward_file = Boolean(attrs.files && attrs.files.length),\n                    is_forward_location = Boolean(attrs.locations && attrs.locations.length),\n                    is_fwd_voice_message,\n                    user_info = attrs.user_info || {},\n                    avatar_id = user_info.avatar,\n                    avatar_url = user_info.avatar_url,\n                    role = utils.pretty_name(user_info.role),\n                    badge = user_info.badge,\n                    from_id = user_info.id,\n                    from_jid = attrs.from_jid;\n                !has_encrypted_files && (has_encrypted_files = attrs.has_encrypted_files);\n                if (is_sender) {\n                    username = Strophe.xmlescape(user_info.nickname || this.account.get('name'));\n                } else {\n                    username = Strophe.xmlescape(user_info.nickname || user_info.id || this.account.contacts.mergeContact({jid: from_jid}).get('name'));\n                }\n\n                let fwd_markup_body = utils.markupBodyMessage(fwd_msg);\n\n                let $f_message = $(templates.messages.forwarded(_.extend(attrs, {\n                    time: pretty_datetime(attrs.time),\n                    short_time: utils.pretty_short_month_date(attrs.time),\n                    username: username,\n                    avatar_id: avatar_id,\n                    avatar_url: avatar_url,\n                    message: fwd_markup_body,\n                    is_file: is_forward_file,\n                    is_location: is_forward_location,\n                    is_audio: is_fwd_voice_message,\n                    role: role,\n                    badge: badge,\n                    from_id: from_id\n                })));\n\n                if (this.model.get('saved') && $message.hasClass('saved-main')) {\n                    $f_message.append($message.children('.right-side').clone());\n                }\n\n                if (fwd_msg.get('forwarded_message')) {\n                    let fwd_messages_count = fwd_msg.get('forwarded_message').length,\n                        fwd_messages_link = xabber.getQuantityString(\"forwarded_messages_count\", fwd_messages_count);\n                    $f_message.children('.msg-wrap').children('.fwd-msgs-block').append($('<a/>', {class: 'collapsed-forwarded-message', 'data-uniqueid': attrs.unique_id}).text(fwd_messages_link));\n                }\n\n                if (is_image_forward) {\n                    if (images_forward.length > 1) {\n                        template_for_images = this.createImageGrid(attrs);\n                        $f_message.find('.chat-msg-media-content').html(template_for_images);\n                        !xabber.settings.load_media && $f_message.find('.img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                    }\n                    if (images_forward.length == 1) {\n                        $img_html_forward = this.createImage(images_forward[0]);\n                        $img_html_forward.onload = () => {\n                            this.imageOnload($message);\n                        };\n                        let img_content_forward = this.createImageContainer(images_forward[0]);\n                        $f_message.find('.chat-msg-media-content').html($(img_content_forward).html($img_html_forward));\n                        !xabber.settings.load_media && $f_message.find('.img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                    }\n                }\n                if (is_forward_video) {\n                    let video_content = this.createVideoContainer();\n                    $f_message.find('.chat-msg-media-content').append(video_content);\n                    attrs.videos.forEach((video, idx) => {\n                        let video_el = this.createVideo(video, idx);\n                        $f_message.find('.video-content').append(video_el);\n                    });\n                    this.videoOnload($message, message);\n                    $f_message.removeClass('file-upload noselect');\n                }\n\n                if (is_forward_file) {\n                    if (attrs.files.length > 0) {\n                        let file_attrs = _.clone(attrs.files),\n                            template_for_file_content;\n                        $(file_attrs).each((idx, file) => {\n                            let copied_attrs = _.clone(file_attrs[idx]);\n                            if (file.type) {\n                                if (file.voice)\n                                    is_audio = true;\n                                else\n                                    is_audio = false;\n                            }\n                            ((file_attrs.length === 1) && is_audio) && (file.name = xabber.getString(\"voice_message\"));\n                            let mdi_icon_class = utils.file_type_icon(file.type);\n                            _.extend(copied_attrs, { is_audio: is_audio, duration: utils.pretty_duration(copied_attrs.duration), mdi_icon: mdi_icon_class, size: utils.pretty_size(copied_attrs.size)});\n                            template_for_file_content = is_audio ? $(templates.messages.audio_file(copied_attrs)) : $(templates.messages.file(copied_attrs));\n                            $f_message.find('.chat-msg-media-content').append(template_for_file_content);\n                            if (is_audio && $f_message.find('.link-file').length) {\n                                let audio_player = {$audio_elem : $f_message.find('.link-file')[0]};\n                                audio_player.msg_time = $message.attr('data-time');\n                                audio_player.author = username;\n                                audio_player.message_unique_id = $message.attr('data-uniqueid') + '-' + $f_message.attr('data-uniqueid');\n                                if (is_sender) {\n                                    if (this.model.get('group_chat')) {\n                                        if (this.contact.my_info) {\n                                            audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                                            if (!audio_player.contact_avatar)\n                                                audio_player.contact_avatar = this.account.cached_image || Images.getDefaultAvatar(this.contact.my_info.get('nickname'));\n                                            else\n                                                audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                                        }\n                                    }\n                                    if (!audio_player.contact_avatar)\n                                        audio_player.contact_avatar = this.account.cached_image;\n                                } else if (this.account.contacts.mergeContact({jid: from_jid})) {\n                                    let contact = this.account.contacts.mergeContact({jid: from_jid})\n                                    audio_player.contact_avatar = contact.cached_image || (this.model.get('group_chat') ? Images.getDefaultAvatar($f_message.find('.msg-wrap .fwd-msg-author').text()) : Images.getDefaultAvatar(contact));\n                                }\n                                if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                                    this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                                    xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                                    audio_player_list = audio_player_list.concat([audio_player]);\n                                } else {\n                                    audio_player_list = message.get('msg_player_audios');\n                                }\n                                let f_url = $f_message.find('.link-file').find('.file-link-download').attr('href');\n                                $f_message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                                audio_player.$audio_elem.voice_message = this.renderVoiceMessage($f_message.find('.link-file').find('.file-container')[0], f_url);\n                                xabber.trigger('plyr_player_updated');\n                            }\n                        });\n                    }\n                }\n                if (is_forward_location) {\n                    if (attrs.locations.length > 0) {\n                        let location_attrs = _.clone(attrs.locations),\n                            template_for_location_content;\n                        $(location_attrs).each((idx, location) => {\n                            let copied_attrs = _.clone(location_attrs[idx]);\n                            _.extend(copied_attrs, { id: '_fwd' + Math.random().toString(36).substr(2, 9) });\n                            if (xabber.settings.mapping_service){\n                                template_for_location_content = $(templates.messages.location(copied_attrs));\n                                $f_message.find('.chat-msg-location-content').attr('lon', copied_attrs.lon);\n                                $f_message.find('.chat-msg-location-content').attr('lat', copied_attrs.lat);\n                                $f_message.find('.chat-msg-location-content').append(template_for_location_content);\n                                this.loadLocationInChat($message, copied_attrs);\n                            } else {\n                                $f_message.find('.chat-msg-content').append('<a class=\"location-link\" href=\"geo:' + copied_attrs.lat + ',' + copied_attrs.lon + '\">' + xabber.getString(\"recent_chat__last_message__locations_plural_0\") + '</a>');\n                            }\n                        });\n                    }\n                }\n                if (attrs.link_references && attrs.link_references.length > 0) {\n                    let link_references_attrs = _.clone(attrs.link_references),\n                        template_for_link_reference_content,\n                        youtube_url_regexp = new RegExp('^((?:https?:)?\\\\/\\\\/)?((?:www|m)\\\\.)?((?:youtube(-nocookie)?\\\\.com|youtu.be))(\\\\/(?:[\\\\w\\\\-]+\\\\?v=|embed\\\\/|v\\\\/)?)([\\\\w\\\\-]+)(\\\\S+)?$', 'i'),\n                        vimeo_url_regexp = /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i;\n                    $(link_references_attrs).each((idx, link) => {\n                        let copied_attrs = _.clone(link_references_attrs[idx]);\n                        copied_attrs.domain = copied_attrs.url ? utils.getDomainFromUrl(copied_attrs.url) : copied_attrs.site_name;\n                        if (copied_attrs.original_text && !/^https?:\\/\\//i.test(copied_attrs.original_text))\n                            copied_attrs.original_text = 'http://' + copied_attrs.original_text;\n                        if (link_references_attrs[idx].type && link_references_attrs[idx].type.includes('video') && link_references_attrs[idx].video_url && (youtube_url_regexp.test(link_references_attrs[idx].video_url) || vimeo_url_regexp.test(link_references_attrs[idx].video_url))){\n                            copied_attrs.video_url = link_references_attrs[idx].video_url.replace(\"autoplay=1&\", \"\");\n                            copied_attrs.is_video = true;\n                            youtube_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'youtube');\n                            vimeo_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'vimeo');\n                        } else\n                            copied_attrs.is_video = false;\n                        template_for_link_reference_content = $(templates.messages.link_reference_chat(copied_attrs));\n                        $f_message.find('.chat-msg-link-reference-content').append(template_for_link_reference_content);\n                    });\n                    this.OGPLinkOnload($message, message);\n                }\n                if (fwd_msg.get('data_form')) {\n                    let data_form = utils.render_data_form(fwd_msg.get('data_form'));\n                    $f_message.find('.chat-msg-content').append(data_form);\n                }\n                $message.children('.msg-wrap').length ? $message.children('.msg-wrap').children('.fwd-msgs-block').append($f_message) : $message.children('.fwd-msgs-block').append($f_message);\n            });\n            this.updateScrollBar();\n            if (this.model.get('saved') && $message.hasClass('saved-main')) {\n                $message.children('.right-side').remove();\n            }\n        }\n        else\n            $message.find('.fwd-msgs-block').remove();\n\n        if (attrs.encrypted || this.model.get('encrypted') || has_encrypted_files) {\n            this.decryptImages(message, has_encrypted_files);\n        }\n\n        if (attrs.searched_message) {\n            let msg_text = '';\n            msg_text = (attrs.forwarded_message) ? (xabber.getQuantityString(\"forwarded_messages_count\", attrs.forwarded_message.length)) : '';\n            if (is_file && is_image && files.length && images.length)\n                msg_text = xabber.getString(\"recent_chat__last_message__attachments\", [files.length + images.length]);\n            else {\n                if (is_file && files.length == 1 && (files[0].is_audio || files[0].voice))\n                    msg_text = `${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(files[0].duration);\n                else if (is_file && files.length > 0) {\n                    let total_size = 0;\n                    files.forEach((f) => {\n                        total_size += Number(f.size)\n                    });\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__files\", files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\");\n                }\n                if (is_image && images.length > 0) {\n                    let total_size = 0;\n                    images.forEach((f) => {\n                        total_size += Number(f.size)\n                    });\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__images\", images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\");\n                }\n                if (is_location && locations.length > 0) {\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__locations\", locations.length);\n                }\n            }\n            if (msg_text)\n                $message.find('.chat-msg-content').text(msg_text)\n        }\n        message.set('msg_player_audios', audio_player_list);\n        $message = $message.hyperlinkify({selector: '.chat-text-content', embed_video: true}).emojify('.chat-text-content', {tag_name: 'div', emoji_size: utils.emoji_size(emoji)}).emojify('.chat-msg-author-badge', {emoji_size: 16});\n        message.set('msg_el', $message);\n        return $message;\n    },\n\n    getDateIndicator: function (date) {\n        let day_date = moment(date).startOf('day');\n        return $('<div class=\"chat-day-indicator one-line noselect\"' + (this.model.get('encrypted') ? (' data-trust=\"' + (this.bottom.$el.attr('data-trust') || this.bottom.$el.attr('data-contact-trust')) + '\"') : \"\") + ' data-time=\"'+\n            day_date.format('x')+'\">'+pretty_date(day_date)+'</div>');\n    },\n\n    initPlyrEmbedPlayer: function ($msg, msg) {\n        let message = this.model.messages.get($msg.data('uniqueid')) || msg,\n            msg_players = [],\n            msg_videos = message && message.get('videos') && message.get('videos').length ? message.get('videos') : null;\n        $msg.find('.plyr-video-container:not(.no-load)').each((idx, item) => {\n            if ($(item).hasClass('no-load'))\n                return;\n            let existing_player = this.model.plyr_players.filter(obj => { return (obj.message_id === idx && obj.message_unique_id === $msg.attr('data-uniqueid'))}),\n                player;\n            if (existing_player.length){\n                player = existing_player[0]\n                msg_players = msg_players.concat([player]);\n            } else {\n                player = {video_src: $(item).attr('data-src')}\n                player.provider = $(item).attr('data-provider');\n                player.video_id = $(item).attr('data-msg-video-id');\n                player.msg_time = $msg.attr('data-time');\n                player.chat_item = this.model.item_view;\n                player.message_id = idx;\n                player.message_unique_id = $msg.attr('data-uniqueid');\n                if (msg_videos && msg_videos.length && player.video_id >= 0) {\n                    let video_file = msg_videos[player.video_id];\n                    video_file && (player.video_file = video_file);\n                }\n                this.model.plyr_players = this.model.plyr_players.concat([player]).sort((a, b) => a.msg_time - b.msg_time);\n                xabber.plyr_players = xabber.plyr_players.concat([player]);\n                msg_players = msg_players.concat([player]);\n            }\n            $(item).attr('data-message-id', player.message_id);\n            $(item).addClass('no-load');\n            if (xabber.current_plyr_player && xabber.current_plyr_player.player_item)\n                if (xabber.current_plyr_player.player_item.message_id === player.message_id && xabber.current_plyr_player.player_item.message_unique_id === player.message_unique_id)\n                    $(item).addClass('active-plyr-container');\n        });\n        msg_players.length && message && message.set('msg_player_videos', msg_players);\n        xabber.trigger('plyr_player_updated');\n    },\n\n    hideMessageAuthor: function ($msg) {\n        $msg.removeClass('with-author');\n    },\n\n    showMessageAuthor: function ($msg) {\n        if ($msg.hasClass('system'))\n            return;\n        $msg.addClass('with-author');\n        let image, $avatar = $msg.find('.left-side .circle-avatar'),\n            from_jid = $msg.data('from');\n        if (from_jid === this.account.get('jid')) {\n            if (this.model.get('group_chat')) {\n                if (this.contact.my_info) {\n                    image = this.contact.my_info.get('b64_avatar');\n                    if (!image) {\n                        if (this.account.cached_image)\n                            image = this.account.cached_image;\n                        !image && (image = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                    } else\n                        image = Images.getCachedImage(image);\n                }\n            }\n            if (!image)\n                image = this.account.cached_image;\n        } else {\n            if (this.model.get('group_chat')) {\n                let author = $msg.find('.msg-wrap .chat-msg-author').text();\n                image = Images.getDefaultAvatar(author);\n            }\n            else {\n                let author = this.account.contacts.get($msg.data('from')) || $msg.find('.msg-wrap .chat-msg-author').text() || $msg.data('from');\n                image = author.cached_image || Images.getDefaultAvatar(author);\n            }\n        }\n        $avatar.setAvatar(image, this.avatar_size);\n        if ($msg.data('avatar')) {\n            if ($msg.data('from-id')) {\n                if (this.account.chat_settings.getHashAvatar($msg.data('from-id')) == $msg.data('avatar') && (this.account.chat_settings.getB64Avatar($msg.data('from-id')))) {\n                    $avatar.setAvatar(this.account.chat_settings.getB64Avatar($msg.data('from-id')), this.avatar_size);\n                }\n                else {\n                    let pending_avatar = this._pending_avatars.find(a => a.hash == $msg.data('avatar'));\n                    if (pending_avatar) {\n                        pending_avatar.dfd.done((data_avatar) => {\n                            $avatar.setAvatar(data_avatar, this.avatar_size);\n                            let idx = this._pending_avatars.indexOf(pending_avatar);\n                            if (idx > -1)\n                                this._pending_avatars.splice(idx, 1);\n                        });\n                    } else {\n                        if($msg.data('avatar-url')){\n                            $avatar.setAvatar($msg.data('avatar-url'), this.avatar_size);\n                            this.account.chat_settings.updateCachedAvatars($msg.data('from-id'), $msg.data('avatar'), $msg.data('avatar-url'));\n                        }\n                        else\n                        {\n                            let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + $msg.data('from-id'), dfd = new $.Deferred();\n                            this._pending_avatars.push({hash: $msg.data('avatar'), dfd: dfd});\n                            this.contact.getAvatar($msg.data('avatar'), node, (data_avatar) => {\n                                $avatar.setAvatar(data_avatar, this.avatar_size);\n                                this.account.chat_settings.updateCachedAvatars($msg.data('from-id'), $msg.data('avatar'), data_avatar);\n                                dfd.resolve(data_avatar);\n                            });\n\n                        }\n                    }\n                }\n            }\n        }\n    },\n\n    hideFwdMessageAuthor: function ($msg) {\n        $msg.removeClass('with-author');\n    },\n\n    showFwdMessageAuthor: function ($fwd_message) {\n        if (!$fwd_message.length)\n            return;\n        $fwd_message.addClass('with-author');\n        let image,\n            $avatar = $fwd_message.find('.circle-avatar'),\n            from_jid = $fwd_message.data('from'),\n            is_sender = (from_jid === this.account.get('jid')),\n            contact = this.account.contacts.get(from_jid) || from_jid;\n        if (is_sender) {\n            if (this.model.get('group_chat')) {\n                if (this.contact.my_info) {\n                    image = this.contact.my_info.get('b64_avatar');\n                    if (!image)\n                        image = this.account.cached_image || Images.getDefaultAvatar(this.contact.my_info.get('nickname'));\n                    else\n                        image = Images.getCachedImage(image);\n                }\n            }\n            if (!image)\n                image = this.account.cached_image;\n        } else if (contact) {\n            image = contact.cached_image || (this.model.get('group_chat') ? Images.getDefaultAvatar($fwd_message.find('.msg-wrap .fwd-msg-author').text()) : Images.getDefaultAvatar(contact));\n        }\n        $avatar.setAvatar(image, this.avatar_size);\n        $avatar.removeClass('hidden');\n        if ($fwd_message.data('avatar')) {\n            if ($fwd_message.data('from-id')) {\n                if ((this.account.chat_settings.getHashAvatar($fwd_message.data('from-id')) == $fwd_message.data('avatar')) && (this.account.chat_settings.getB64Avatar($fwd_message.data('from-id')))) {\n                    $avatar.setAvatar(this.account.chat_settings.getB64Avatar($fwd_message.data('from-id')), this.avatar_size);\n                }\n                else {\n                    if($fwd_message.data('avatar-url')){\n                        $avatar.setAvatar($fwd_message.data('avatar-url'), this.avatar_size);\n                        this.account.chat_settings.updateCachedAvatars($fwd_message.data('from-id'), $fwd_message.data('avatar'), $fwd_message.data('avatar-url'));\n                    }\n                    else {\n                        let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + $fwd_message.data('from-id');\n                        this.contact && this.contact.getAvatar($fwd_message.data('avatar'), node, (data_avatar) => {\n                            $avatar.setAvatar(data_avatar, this.avatar_size);\n                            this.account.chat_settings.updateCachedAvatars($fwd_message.data('from-id'), $fwd_message.data('avatar'), data_avatar);\n                        });\n                    }\n                }\n            }\n        }\n    },\n\n    updateMessageInChat: function (msg_elem, msg) {\n        let $msg = $(msg_elem);\n        $msg.prev('.chat-day-indicator').remove();\n        if ($msg.find('.plyr-video-container').length) {\n            this.initPlyrEmbedPlayer($msg, msg);\n        }\n        ($msg.find('.not-decrypted-icon').length) && $msg.find('.not-decrypted-icon').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        });\n        let $prev_msg = $msg.prevAll('.chat-message').first();\n        if (!$prev_msg.length) {\n            this.getDateIndicator($msg.data('time')).insertBefore($msg);\n            this.showMessageAuthor($msg);\n            $msg.find('.fwd-message').each((idx, fwd_msg_item) => {\n                this.showFwdMessageAuthor($(fwd_msg_item));\n            });\n            return;\n        }\n        if ($msg.find('.data-form').length) {\n            this.showMessageAuthor($msg);\n            return;\n        }\n        let is_system = $prev_msg.hasClass('system'),\n            is_same_sender = ($msg.data('from') === $prev_msg.data('from')),\n            is_same_date = moment($msg.data('time')).startOf('day')\n                .isSame(moment($prev_msg.data('time')).startOf('day'));\n        if (!is_same_date) {\n            this.getDateIndicator($msg.data('time')).insertBefore($msg);\n            this.showMessageAuthor($msg);\n        } else if (is_system || !is_same_sender || $prev_msg.hasClass('saved-main')) {\n            this.showMessageAuthor($msg);\n        } else {\n            this.hideMessageAuthor($msg);\n        }\n        if ($msg.hasClass('forwarding')) {\n            let $fwd_message = $msg.find('.fwd-message');\n            $fwd_message.each((idx, fwd_msg_item) => {\n                let $fwd_msg_item = $(fwd_msg_item),\n                    $prev_fwd_message = (idx > 0) ? $fwd_msg_item.prev() : [];\n                $fwd_msg_item.switchClass('hide-date', is_same_date && $prev_fwd_message.length);\n                $fwd_msg_item.removeClass('hide-time');\n                if ($prev_fwd_message.length) {\n                    let is_same_fwded_sender = ($fwd_msg_item.data('from') === $prev_fwd_message.data('from'));\n                    if (is_same_fwded_sender) {\n                        this.hideFwdMessageAuthor($fwd_msg_item);\n                    } else {\n                        this.showFwdMessageAuthor($fwd_msg_item);\n                    }\n                } else {\n                    this.showMessageAuthor($msg);\n                    this.showFwdMessageAuthor($fwd_msg_item);\n                }\n            });\n        }\n    },\n\n    notifyMessage: function (message) {\n        if (xabber.settings.notifications && ((xabber.settings.notifications_private && !this.model.get('group_chat')) || (xabber.settings.notifications_group && this.model.get('group_chat')))) {\n            let notification_text;\n            if ((this.model.get('group_chat') && xabber.settings.message_preview_group) || (!this.model.get('group_chat') && xabber.settings.message_preview_private))\n                notification_text = message.getText();\n            else\n                notification_text = xabber.getString(\"notification__text_sent_a_message\");\n            let notification = xabber.popupNotification({\n                title: this.contact.get('name'),\n                text: notification_text,\n                icon: this.contact.cached_image.url\n            });\n            notification.onclick = () => {\n                window.focus();\n                this.model.trigger('open');\n            };\n        }\n        if (xabber.settings.group_sound && xabber.settings.notifications_group && this.model.get('group_chat')) {\n            let sound;\n            if (message.get('auth_request')) {\n                sound = xabber.settings.sound_on_auth_request;\n            } else {\n                sound = xabber.settings.sound_on_group_message;\n            }\n            xabber.playAudio(sound, false, !xabber.settings.notifications_volume_enabled ? 0 : xabber.settings.notifications_volume);\n        }\n        else if (xabber.settings.private_sound && xabber.settings.notifications_private && !this.model.get('group_chat')) {\n            let sound;\n            if (message.get('auth_request')) {\n                sound = xabber.settings.sound_on_auth_request;\n            } else {\n                sound = xabber.settings.sound_on_private_message;\n            }\n            xabber.playAudio(sound, false, !xabber.settings.notifications_volume_enabled ? 0 : xabber.settings.notifications_volume);\n        }\n        xabber.recountAllMessageCounter();\n    },\n\n    attentionMessage: function () {\n        let notification = xabber.popupNotification({\n            title: this.contact.get('name'),\n            text: xabber.getString(\"chats_attention\"),\n            icon: this.contact.cached_image.url\n        });\n        notification.onclick = () => {\n            window.focus();\n            this.model.trigger('open');\n        };\n        let sound = xabber.settings.sound_on_attention;\n        xabber.playAudio(sound);\n    },\n\n    sendMessage: function (message) {\n        let body = message.get('message'),\n            legacy_body = '',\n            mutable_content = [],\n            forwarded_message = message.get('forwarded_message'),\n            unique_id = message.get('unique_id'),\n            msg_id = message.get('msgid'),\n            link_references = message.get('link_references'),\n            stanza = $msg({\n                to: this.model.get('jid'),\n                type: 'chat',\n                id: msg_id\n            });\n\n        if (forwarded_message) {\n            legacy_body = [];\n            $(forwarded_message).each((idx, fwd_msg) => {\n                let legacy_fwd_msg = Array.from(_.escape(_.unescape(this.bottom.createTextMessage([fwd_msg], \">\"))) + ((idx === forwarded_message.length - 1 && !body.length) ? \"\" : '\\n')),\n                    idx_begin = legacy_body.length,\n                    fwd = $(fwd_msg.get('xml')).clone(),\n                    idx_end = legacy_body.concat(legacy_fwd_msg).length;\n                if (!fwd.attr('from'))\n                    fwd.attr('from', this.account.get('jid'));\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: idx_begin,\n                    end: idx_end\n                })\n                    .c('forwarded', {xmlns: 'urn:xmpp:forward:0'})\n                    .c('delay', {\n                        xmlns: 'urn:xmpp:delay',\n                        stamp: fwd_msg.get('time')\n                    }).up().cnode(fwd[0]).up().up().up();\n                legacy_body = legacy_body.concat(legacy_fwd_msg);\n                mutable_content.push({\n                    start: idx_begin,\n                    end: idx_end,\n                    type: 'forward'\n                });\n            });\n            body = _.unescape(legacy_body.join(\"\")) + body;\n        }\n\n        if (message.get('mentions') && message.get('mentions').length) {\n            message.get('mentions').forEach((mention) => {\n                let mention_attrs = {xmlns: Strophe.NS.MARKUP};\n                mention.is_gc && (mention_attrs.node = Strophe.NS.GROUP_CHAT);\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: mention.start + legacy_body.length,\n                    end: mention.end + legacy_body.length,\n                    type: 'decoration',\n                })\n                    .c('mention', mention_attrs).t(mention.target).up().up();\n            });\n        }\n\n        if (message.get('markups')) {\n            message.get('markups').forEach((markup) => {\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: markup.start + legacy_body.length,\n                    end: markup.end + legacy_body.length,\n                    type: 'decoration'\n                });\n                for (let idx in markup.markup) {\n                    stanza.c(markup.markup[idx], {xmlns: Strophe.NS.MARKUP}).up();\n                }\n                stanza.up();\n            });\n        }\n\n        if (message.get('blockquotes')) {\n            message.get('blockquotes').forEach((blockquote) => {\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: blockquote.start + legacy_body.length,\n                    end: blockquote.end + legacy_body.length,\n                    type: 'decoration'\n                })\n                    .c('quote', {xmlns: Strophe.NS.MARKUP}).up().up();\n            });\n        }\n\n        if (message.get('type') == 'file_upload') {\n            let files = message.get('files') || [],\n                images = message.get('images') || [],\n                videos = message.get('videos') || [],\n                all_files = files.concat(images);\n            all_files = all_files.concat(videos)\n            all_files.forEach((file, idx) => {\n                (idx === 0) && (body += '\\n');\n                legacy_body = file.sources[0] + ((idx != all_files.length - 1) ? '\\n' : \"\");\n                let start_idx = Array.from(_.escape(body)).length,\n                    end_idx = start_idx + legacy_body.length;\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: start_idx,\n                    end: end_idx\n                });\n                file.voice && stanza.c('voice-message', {xmlns: Strophe.NS.VOICE_MESSAGE});\n                stanza.c('file-sharing', {xmlns: Strophe.NS.FILES}).c('file');\n                file.type && stanza.c('media-type').t(file.type).up();\n                file['id'] && stanza.c('gallery-id').t(file['id']).up();\n                file.thumbnail && stanza.c('thumbnail-uri').t(file.thumbnail).up();\n                file.created && stanza.c('created').t(file.created).up();\n                file.name && stanza.c('name').t(file.name).up();\n                file.size && stanza.c('size').t(file.size).up();\n                file.height && stanza.c('height').t(file.height).up();\n                file.width && stanza.c('width').t(file.width).up();\n                file.duration && stanza.c('duration').t(file.duration).up();\n                file.description && stanza.c('desc').t(file.description).up();\n                stanza.up().c('sources');\n                file.sources.forEach((u) => {\n                    if (file.key)\n                        u = u.replace(/^(https|http)/, 'aescbc') + '#' + utils.ArrayBuffertoBase64(file.key);\n                    stanza.c('uri').t(u).up();\n                });\n                stanza.up().up().up();\n                file.voice && stanza.up();\n                body += legacy_body;\n                mutable_content.push({start: start_idx, end: end_idx});\n            });\n            message.set({type: 'main'});\n        }\n\n        if (link_references && link_references.length) {\n            link_references.forEach((link_reference, idx) => {\n                if (link_reference.start === -1) {\n                    link_reference.start = Array.from(_.escape(body)).length;\n                    body = body + '\\n' + link_reference.original_text;\n                    link_reference.end = link_reference.start + link_reference.original_text.length + 1;\n                }\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: link_reference.start,\n                    end: link_reference.end,\n                    type: 'mutable',\n                }).c('ogp', { xmlns: Strophe.NS.OGP, url: link_reference.original_text });\n                link_reference.site && stanza.c('meta', { property: 'og:site_name', content: link_reference.site}).up();\n                link_reference.type && stanza.c('meta', { property: 'og:type', content: link_reference.type}).up();\n                link_reference.title && stanza.c('meta', { property: 'og:title', content: link_reference.title}).up();\n                link_reference.url && stanza.c('meta', { property: 'og:url', content: link_reference.url}).up();\n                link_reference.description && stanza.c('meta', { property: 'og:description', content: link_reference.description}).up();\n                link_reference.image && stanza.c('meta', { property: 'og:image', content: link_reference.image}).up();\n                link_reference.image_width && stanza.c('meta', { property: 'og:image:width', content: link_reference.image_width}).up();\n                link_reference.image_height && stanza.c('meta', { property: 'og:image:height', content: link_reference.image_height}).up();\n                link_reference.video_url && stanza.c('meta', { property: 'og:video:url', content: link_reference.video_url}).up();\n                stanza.up().up();\n                mutable_content.push({start: link_reference.start, end: link_reference.end});\n            });\n        }\n\n        mutable_content.length && message.set({mutable_content: mutable_content});\n\n        this.account._pending_messages.push({chat_hash_id: this.model.id, unique_id: unique_id, timestamp: moment.now()});\n\n        message.set('original_message', body);\n        body && stanza.c('body').t(body).up();\n        stanza.c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n            .c('origin-id', {id: msg_id, xmlns: 'urn:xmpp:sid:0'}).up();\n        message.set({xml: $(stanza.tree()).clone()[0]});\n        if (message.get('state') === constants.MSG_ERROR) {\n            stanza.c('retry', {xmlns: Strophe.NS.DELIVERY}).up();\n            message.set('state', constants.MSG_PENDING);\n        }\n        if (stanza.toString().length >= constants.STANZA_MAX_SIZE) {\n            utils.dialogs.error(xabber.getString(\"message__error_big_stanza\"));\n            this.removeMessage(message);\n            return;\n        }\n        if (message.get('encrypted') && this.account.omemo) {\n            this.model.get('chat_ephemeral_timer') && stanza.c('ephemeral', {xmlns: Strophe.NS.EPHEMERAL, timer: this.model.get('chat_ephemeral_timer')}).up();\n            stanza.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n            if ($(stanza.tree()).children('body').length) {\n                stanza.cnode($(stanza.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                $(stanza.tree()).children('body').detach()\n            }\n            if ($(stanza.tree()).children('reference').length) {\n                $(stanza.tree()).children('reference').each((idx, reference) => {\n                    stanza.cnode($(stanza.tree()).children('reference')[idx]).up()\n                });\n                $(stanza.tree()).children('reference').detach()\n            }\n            stanza.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n            stanza.c('from', {jid: this.account.get('jid')}).up().up()\n            this.account.omemo.encrypt(this.contact, stanza).then((msg) => {\n                if (msg) {\n                    stanza = msg.message;\n                    message.set('trusted', msg.is_trusted);\n                    message.set({xml: $(stanza.tree()).clone()[0]});\n                }\n                let msg_sending_timestamp = moment.now();\n                this.account.sendFast(stanza, this.msgCallback.bind(this, msg_sending_timestamp, message));\n            });\n            return;\n        } else {\n            let msg_sending_timestamp = moment.now();\n            this.account.sendFast(stanza, this.msgCallback.bind(this, msg_sending_timestamp, message));\n        }\n    },\n\n    msgCallback: function (msg_sending_timestamp, message) {\n        this.bottom.click_counter = 0;\n        this.bottom.setDefaultPlaceholder();\n        if (!this.model.get('group_chat') && !this.account.server_features.get(Strophe.NS.DELIVERY)) {\n            setTimeout(() => {\n                if ((this.account.last_stanza_timestamp > msg_sending_timestamp) && (message.get('state') === constants.MSG_PENDING)) {\n                    message.set('state', constants.MSG_SENT);\n                } else {\n                    this.account.connection.ping.ping(this.account.get('jid'), () => {\n                        (message.get('state') === constants.MSG_PENDING) && message.set('state', constants.MSG_SENT);\n                    });\n                    setTimeout(() => {\n                        if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (message.get('state') === constants.MSG_PENDING))\n                            message.set('state', constants.MSG_ERROR);\n                    }, 5000);\n                }\n            }, 1000);\n        }\n        else {\n            let _pending_time = 5, was_reconnecting, has_reconnected;\n            if (!(this.account.connection.authenticated && !this.account.connection.disconnecting && this.account.session.get('connected') && this.account.session.get('ready_to_send') && this.account.get('status') !== 'offline'))\n                was_reconnecting = true;\n            if (this.account.session.get('reconnecting'))\n                was_reconnecting = true;\n            this.account.session.once('change:reconnecting', () => {\n                console.log('change reconnecting');\n                console.log(this.account.session.get('reconnecting'));\n                was_reconnecting = true;\n            });\n            this.account.session.once('change:reconnected', () => {\n                _pending_time = 5;\n                console.log('change reconnected ');\n                has_reconnected = true;\n            });\n            let _interval = setInterval(() => {\n                if (_pending_time >= 8 && message.get('state') === constants.MSG_PENDING && !was_reconnecting){\n                    console.log('ping on message pending');\n                    this.account.connection.ping.ping(this.account.get('jid'), () => {},  () => {\n                        let downtime = (moment.now() - this.account.last_stanza_timestamp) / 1000;\n                        if (downtime >= 2){\n                            console.log('message initiated reconnection');\n                            console.log(message);\n                            this.account.connection.disconnect();\n                        } else {\n                            console.log('ping was sent and got no result after 2 seconds, but didnt reconnect because last stanza time was: ' + downtime + ' sec')\n                        }\n                    }, 2000);\n                }\n                if (was_reconnecting && has_reconnected && (_pending_time > 10)){\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                if (((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 40) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 40)) && !was_reconnecting) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 3;\n            }, 3000);\n        }\n    },\n\n    initJingleMessage: function (media_type) {\n        xabber.current_voip_call && xabber.current_voip_call.destroy();\n        media_type = media_type || {};\n        media_type = media_type.video ? 'video' : 'audio';\n        let session_id = uuid();\n        xabber.current_voip_call = new xabber.JingleMessage({session_id: session_id, video_live: media_type === 'video'}, {contact: this.contact});\n        xabber.current_voip_call.startCall();\n        xabber.current_voip_call.modal_view.show({status: constants.JINGLE_MSG_PROPOSE});\n        xabber.trigger('update_jingle_button');\n    },\n\n    saveForwardedMessage: function (msg) {\n        let forwarded_message = null;\n        if ($(msg).get('forwarded_message')) {\n            forwarded_message = $(msg).get('forwarded_message');\n            if (this.account.forwarded_messages.indexOf(forwarded_message) < 0) {\n                forwarded_message = this.saveForwardedMessage(forwarded_message);\n            }\n        }\n        msg = this.account.forwarded_messages.create(_.extend({\n            is_forwarded: true,\n            forwarded_message: forwarded_message\n        }, msg.attributes));\n        return msg;\n    },\n\n    onSubmit: function (text, fwd_messages, options) {\n        // send forwarded messages before\n        options = options || {};\n        let attrs = {\n            from_jid: this.account.get('jid'),\n            message: text,\n            mentions: options.mentions,\n            blockquotes: options.blockquotes,\n            markups: options.markup_references,\n            files: options.attached_files,\n            link_references: options.link_references,\n            encrypted: this.model.get('encrypted'),\n            ephemeral_timer: this.model.get('encrypted') && this.model.get('chat_ephemeral_timer'),\n            submitted_here: true,\n            forwarded_message: null\n        }, _dfd_info = new $.Deferred();\n        _dfd_info.done(() => {\n            if (!fwd_messages.length && !(attrs.files && attrs.files.length) && !(attrs.link_references && attrs.link_references.length) && text.removeEmoji() === \"\")\n                attrs.only_emoji = Array.from(text).length;\n            if (fwd_messages.length) {\n                let new_fwd_messages = [];\n                _.each(fwd_messages, (msg) => {\n                    if (this.account.forwarded_messages.indexOf(msg) < 0) {\n                        msg = this.saveForwardedMessage(msg);\n                    }\n                    new_fwd_messages.push(msg);\n                });\n                attrs.forwarded_message = new_fwd_messages;\n                if (attrs.files && attrs.files.length) {\n                    attrs.type = 'file_upload';\n                    this.account.server_features.get(Strophe.NS.HTTP_UPLOAD) && (attrs.upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD).get('from'));\n                    this.model.messages.create(attrs);\n                } else {\n                    let message = this.model.messages.create(attrs);\n                    this.sendMessage(message);\n                }\n            } else if (attrs.files && attrs.files.length) {\n                attrs.type = 'file_upload';\n                this.account.server_features.get(Strophe.NS.HTTP_UPLOAD) && (attrs.upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD).get('from'));\n                this.model.messages.create(attrs);\n            } else if (text || (attrs.link_references && attrs.link_references.length)) {\n                let message = this.model.messages.create(attrs);\n                this.sendMessage(message);\n            }\n            if (this.contact && this.model.get('archived') && !this.model.isMuted()) {\n                message.set('muted', false);\n                this.head.archiveChat();\n                this.model.set('archived', false);\n                xabber.chats_view.updateScreenAllChats();\n            }\n            if (this.model.get('group_chat') && xabber.toolbar_view.$('.active').hasClass('chats'))\n                if (this.contact && !this.model.isMuted() && !this.model.get('archived'))\n                    xabber.chats_view.updateScreenAllChats();\n            xabber.chats_view.scrollToTop();\n            xabber.chats_view.clearSearch();\n        });\n\n        if (this.contact && this.contact.get(\"group_chat\") && !this.contact.my_info)\n            this.contact.getMyInfo(() => {\n                _dfd_info.resolve();\n            });\n        else if (this.model.get('encrypted')){\n            this.account.omemo.checkContactFingerprints(this.contact).then((obj) => {\n                attrs.is_contact_trusted = obj.trust;\n                _dfd_info.resolve();\n            });\n        } else\n            _dfd_info.resolve();\n    },\n\n    addFileMessage: function (files, is_voice) {\n        let new_files = [], file_counter = 0;\n        if (this.model.messages_view)\n            if (this.model.messages_view.data.get('visible'))\n                this.model.messages_view.openChat();\n        if (files.length > 10 && !(this.account.get('gallery_token') && this.account.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"too_many_files_at_once\"));\n            return;\n        }\n        let http_upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD);\n        if (!http_upload_service && !(this.account.get('gallery_token') && this.account.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"error_file_upload_not_support\", [this.account.domain]));\n            return;\n        }\n        let deferred_all = new $.Deferred();\n        deferred_all.done((data) => {\n            if (is_voice) {\n                this.model.messages.create({\n                    from_jid: this.account.get('jid'),\n                    type: 'file_upload',\n                    files: data,\n                    encrypted: this.model.get('encrypted'),\n                    upload_service: http_upload_service.get('from'),\n                    message: '',\n                    submitted_here: true\n                });\n            } else\n                this.bottom.addFileSnippets(data);\n        });\n        $(files).each((idx, file) => {\n            if (utils.isImageType(file.type)) {\n                let reader = new FileReader(), deferred = new $.Deferred();\n                Images.compressImage(file).done((image) => {\n                    reader.readAsDataURL(image);\n                    deferred.done((data) => {\n                        if (data) {\n                            image.height = data.height;\n                            image.width = data.width;\n                        }\n                        if (data.encrypted_file)\n                            new_files.push(data.encrypted_file);\n                        else\n                            new_files.push(image);\n                        file_counter++;\n                        if (file_counter === files.length)\n                            deferred_all.resolve(new_files);\n                    });\n                });\n                reader.onload = (e) => {\n                    if (this.model.get('encrypted')) {\n                        this.encryptFile(e.target.result).then((encrypted) => {\n                            let key = encrypted.keydata,\n                                new_file = new File([encrypted.payload], uuid().replace(/-/g, \"\"), {type: file.type});\n                            new_file.key = key;\n                            if (new_file.type === 'image/svg+xml') {\n                                deferred.resolve({encrypted_file: new_file,key: key});\n                            } else {\n                                let image_prev = new Image();\n                                image_prev.onload = function () {\n                                    let height = this.height,\n                                        width = this.width;\n                                    new_file.image_prev = image_prev;\n                                    deferred.resolve({height: height, width: width, encrypted_file: new_file, key: key});\n                                };\n                                image_prev.src = e.target.result;\n                            }\n                        });\n                    } else {\n                        if (file.type === 'image/svg+xml') {\n                            deferred.resolve({});\n                        } else {\n                            let image_prev = new Image();\n                            image_prev.onload = function () {\n                                let height = this.height,\n                                    width = this.width;\n                                deferred.resolve({height: height, width: width});\n                            };\n                            image_prev.src = e.target.result;\n                        }\n                    }\n                };\n            }\n            else {\n                if (this.model.get('encrypted')) {\n                    let reader = new FileReader();\n                    reader.onload = (e) => {\n                        this.encryptFile(e.target.result).then((encrypted) => {\n                            let key = encrypted.keydata,\n                                encrypted_file = new File([encrypted.payload], uuid().replace(/-/g, \"\"), {type: file.type});\n                            file.voice && (encrypted_file.voice = true);\n                            file.duration && (encrypted_file.duration = file.duration);\n                            encrypted_file.key = key;\n                            new_files.push(encrypted_file);\n                            file_counter++;\n                            if (file_counter === files.length)\n                                deferred_all.resolve(new_files);\n                        });\n                    };\n                    reader.readAsDataURL(file);\n                } else {\n                    new_files.push(file);\n                    file_counter++;\n                    if (file_counter === files.length)\n                        deferred_all.resolve(new_files);\n                }\n            }\n        });\n    },\n\n    startUploadFile: function (message, $message) {\n        $message.emojify('.chat-msg-author-badge', {emoji_size: 16});\n        $message.find('.repeat-upload').hide();\n        $message.find('.status').hide();\n        $message.find('.progress').show();\n        $message.find('.mdi-center-loading-indicator').removeClass('mdi-check').addClass('mdi-close');\n        $message.find('.mdi-center-loading-indicator').removeClass('hidden');\n        $message.find('.dropdown-content.retry-send-message').addClass('hidden');\n        $message.find('.msg-delivering-state').addClass('no-click');\n        let files_count = 0;\n        $(message.get('files')).each((idx, file) => {\n            let enc_file = new File([file], file.name);\n            enc_file.key && (delete enc_file.key);\n            let iq = $iq({type: 'get', to: message.get('upload_service')})\n                    .c('request', {xmlns: Strophe.NS.HTTP_UPLOAD})\n                    .c('filename').t(enc_file.name).up()\n                    .c('size').t(enc_file.size).up()\n                    .c('content-type').t(enc_file.type).up(),\n                deferred = new $.Deferred(), self = this;\n            this.account.sendIQFast(iq,\n                function (result) {\n                    let $slot = $(result).find(`slot[xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`);\n                    deferred.resolve({\n                        get_url: $slot.find('get').text(),\n                        put_url: $slot.find('put').text()\n                    });\n                },\n                function (err) {\n                    let error_text = $(err).find(`error text[xml\\\\:lang=\"${xabber._settings.get('language')}\"]`).text(),\n                        error_type = $(err).find('error').attr('type');\n                    !error_text && (error_text = $(err).find(`error text`).text());\n                    self.onFileNotUploaded(message, $message, error_text, 'xmpp');\n                }\n            );\n            let msg_sending_timestamp = moment.now(), _pending_time = 10, _interval = setInterval(() => {\n                if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 20) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 20)) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 10;\n            }, 10000);\n            deferred.done((data) => {\n                clearInterval(_interval);\n                let xhr = new XMLHttpRequest(),\n                    $bar = $message.find('.progress');\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap .mdi-close').click(() => {\n                    xhr.abort();\n                });\n                xhr.onabort = () => {\n                    this.removeMessage($message);\n                };\n                xhr.upload.onprogress = (event) => {\n                    let percentage = event.loaded / event.total;\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(parseInt((100 * percentage)) + '%');\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .preloader-path-new').css({ 'stroke-dasharray': '' + (150 * percentage) + ', 149.825'});\n                };\n                xhr.onload = xhr.onerror = function () {\n                    if (this.status === 201) {\n                        message.get('files')[idx].url = data.get_url;\n                        files_count++;\n                        if (files_count == message.get('files').length) {\n                            self.onFileUploaded(message, $message);\n                        }\n                    } else {\n                        self.onFileNotUploaded(message, $message, this.responseText, 'http');\n                    }\n                };\n                if ($message.data('cancel')) {\n                    xhr.abort();\n                } else {\n                    xhr.open(\"PUT\", data.put_url, true);\n                    xhr.send(enc_file);\n                }\n            });\n        });\n    },\n\n    startGalleryUploadFile: function (message, $message) {\n        $message.emojify('.chat-msg-author-badge', {emoji_size: 16});\n        message.set('files', message.get('files').filter((element) => { return element != null}) );\n        let files_count = 0,\n            cancelled_files_count = 0,\n            self = this,\n            is_error = false,\n            xhr_requests = [],\n            msg_files_count = message.get('files').length;\n        $message.find('.mdi-center-loading-indicator').removeClass('mdi-check').addClass('mdi-close');\n        $message.find('.uploaded-file').removeClass('uploaded-file');\n        $message.find('.mdi-center-loading-indicator').removeClass('hidden');\n        $message.find('.dropdown-content.retry-send-message').addClass('hidden');\n        $message.find('.msg-delivering-state').addClass('no-click');\n        $(message.get('files')).each((idx, file) => {\n            if (is_error)\n                return;\n            if (file.key) {\n                file = new File([file], file.name);\n                delete file.key\n            }\n            let msg_sending_timestamp = moment.now(), _pending_time = 10, _interval = setInterval(() => {\n                if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 20) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 20)) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 10;\n            }, 10000);\n\n            let formData = new FormData(),\n                metadata = {};\n            file.duration && (metadata.duration = file.duration);\n            file.width && (metadata.width = file.width);\n            file.height && (metadata.height = file.height);\n            formData.append('file', file, file.name);\n            formData.append('metadata', JSON.stringify(metadata));\n            if (file.size)\n                formData.append('size', file.size);\n            if (file.voice){\n                formData.append('media_type', file.type + '+voice');\n                formData.append('context', 'voice');\n            }\n            else\n                formData.append('media_type', file.type);\n            clearInterval(_interval);\n            message.get('files')[idx].is_errored = false;\n            let xhr = new XMLHttpRequest(),\n                $bar = $message.find('.progress');\n            xhr.formData = formData;\n            xhr_requests = xhr_requests.concat([xhr]);\n            xhr.arrayIndex = xhr_requests.indexOf(xhr);\n            $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap .mdi-close').one(\"click\",() => {\n                cancelled_files_count++;\n                if (xhr.is_uploading)\n                    xhr.abort();\n                else {\n                    if ((msg_files_count - cancelled_files_count) == 0) {\n                        message.set('files', []);\n                        if (self.model.get('encrypted')){\n                            self.bottom.setEditedMessageAttachments(message, true);\n                            self.bottom.setRedactedUploadMessage(message);\n                        }\n                        self.removeMessage($message);\n                    } else {\n                        xhr.is_cancelled = true;\n                        $message.find('.unuploaded-file[data-upload-file-id=\"' + file.upload_id + '\"]').remove();\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap').remove();\n                        message.get('files')[idx] = null;\n                    }\n                }\n            });\n            xhr.upload.onprogress = (event) => {\n                let percentage = event.loaded / event.total;\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(parseInt((100 * percentage)) + '%');\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .preloader-path-new').css({ 'stroke-dasharray': '' + (150 * percentage) + ', 149.825'});\n            };\n            xhr.oncancel = xhr.onload = xhr.onerror = xhr.onabort = function () {\n                let xhr_status = this.fakeStatus || this.status;\n                if (xhr_status >= 200 && xhr_status < 300) {\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('mdi-check').removeClass('mdi-close');\n                    let response = this.response ? JSON.parse(this.response) : this.fakeResponse;\n                    message.get('files')[idx].id = response.id;\n                    message.get('files')[idx].created_at = response.created_at;\n                    (response.thumbnail && response.thumbnail.url) && (message.get('files')[idx].thumbnail = response.thumbnail.url);\n                    message.get('files')[idx].url = response.file;\n                    files_count++;\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('uploaded-file');\n                    while (xhr_requests[files_count] && xhr_requests[files_count].is_cancelled){\n                        files_count++;\n                    }\n                    if (files_count == message.get('files').length) {\n                        self.onFileUploaded(message, $message);\n                    } else if (xhr_requests[files_count]){\n                        self.account.testGalleryTokenExpire(() => {\n                            self.account.testGalleryFileSlot(xhr_requests[files_count].formData.get('file'), (slot_response) => {\n                                if (!is_error) {\n                                    if (slot_response && slot_response.quota){\n                                        if (slot_response.file && slot_response.hash){\n                                            xhr_requests[files_count].fakeStatus = 200;\n                                            xhr_requests[files_count].fakeResponse = {\n                                                file: slot_response.file,\n                                                id: slot_response.id,\n                                                name: slot_response.name,\n                                                thumbnail: slot_response.thumbnail,\n                                                created_at: slot_response.created_at,\n                                            };\n                                            xhr_requests[files_count].oncancel();\n                                        } else {\n                                            xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                            xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'));\n                                            xhr_requests[files_count].is_uploading = true;\n                                            xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                        }\n                                    } else {\n                                        xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                        xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                        xhr_requests[files_count].oncancel();\n                                    }\n                                }\n                            });\n                        });\n                    }\n                } else {\n                    if (xhr_status === 0 && is_error)\n                        return;\n                    if ((msg_files_count - cancelled_files_count) == 0 && xhr_status === 0){\n                        message.set('files', []);\n                        if (self.model.get('encrypted')){\n                            self.bottom.setEditedMessageAttachments(message, true);\n                            self.bottom.setRedactedUploadMessage(message);\n                        }\n                        self.removeMessage($message);\n                    } else {\n                        let response_text, error_status;\n                        self.account.handleCommonGalleryErrors(this.response)\n                        if (xhr_status === 500)\n                            response_text = this.fakeResponse || this.statusText;\n                        else if (xhr_status === 400 || this.fakeStatus){\n                            response_text = this.fakeResponse || JSON.parse(this.response).error;\n                            error_status = this.fakeStatus || JSON.parse(this.response).status;\n                            if (error_status && error_status == 429){\n                                setTimeout(() => {\n                                    self.account.testGalleryTokenExpire(() => {\n                                        self.account.testGalleryFileSlot(xhr_requests[files_count].formData.get('file'), (slot_response) => {\n                                            if (!is_error) {\n                                                if (slot_response && slot_response.quota){\n                                                    if (slot_response.file && slot_response.hash){\n                                                        xhr_requests[files_count].fakeStatus = 200;\n                                                        xhr_requests[files_count].fakeResponse = {\n                                                            file: slot_response.file,\n                                                            id: slot_response.id,\n                                                            name: slot_response.name,\n                                                            thumbnail: slot_response.thumbnail,\n                                                            created_at: slot_response.created_at,\n                                                        };\n                                                        xhr_requests[files_count].oncancel();\n                                                    } else {\n                                                        xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                                        xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'));\n                                                        xhr_requests[files_count].is_uploading = true;\n                                                        xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                                    }\n                                                } else {\n                                                    xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                                    xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                                    xhr_requests[files_count].oncancel();\n                                                }\n                                            }\n                                        });\n                                    });\n                                }, 1000);\n                                return;\n                            }\n                        }\n                        else if (xhr_status === 0) {\n                            $message.find('.unuploaded-file[data-upload-file-id=\"' + file.upload_id + '\"]').remove();\n                            $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap').remove();\n                        };\n                        (xhr_status === 0) && (message.get('files')[idx] = null);\n                        if (!message.get('files').filter((element) => { return element != null}).length && !message.get('message')){\n                            if (self.model.get('encrypted')){\n                                self.bottom.setEditedMessageAttachments(message, true);\n                                self.bottom.setRedactedUploadMessage(message);\n                            }\n                            self.removeMessage($message);\n                            return;\n                        }\n                        files_count++;\n                        if (xhr_status != 0) {\n                            if (!$message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').closest('.img-content-template.hidden').length){\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(response_text);\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').removeClass('hidden');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').prop('title', response_text);\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('hidden');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('upload-error');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').css({ 'border-color': '#EF9A9A'});\n                            } else {\n                                $message.find('.hidden-images .circle-percent-text').text(response_text);\n                                $message.find('.hidden-images .mdi-alert-circle').removeClass('hidden');\n                                $message.find('.hidden-images .mdi-alert-circle').prop('title', response_text);\n                                $message.find('.hidden-images .mdi-center-loading-indicator').addClass('hidden');\n                                $message.find('.hidden-images').addClass('upload-error');\n                                $message.find('.hidden-images').css({ 'border-color': '#EF9A9A'});\n                            }\n                            message.get('files')[idx].is_errored = true;\n                            is_error = true;\n                            $(xhr_requests).each((idx, request) => {\n                                request.abort();\n                            })\n                            self.onFileNotUploaded(message, $message, response_text);\n                        }\n                        else if (files_count == msg_files_count) {\n                            self.onFileUploaded(message, $message);\n                        } else {\n                            while (xhr_requests[files_count] && xhr_requests[files_count].is_cancelled){\n                                files_count++;\n                            }\n                            if (files_count == msg_files_count) {\n                                self.onFileUploaded(message, $message);\n                            } else {\n                                self.account.testGalleryTokenExpire(() => {\n                                    self.account.testGalleryFileSlot(xhr_requests[files_count].formData.get('file'), (slot_response) => {\n                                        if (!is_error) {\n                                            if (slot_response && slot_response.quota){\n                                                if (slot_response.file && slot_response.hash){\n                                                    xhr_requests[files_count].fakeStatus = 200;\n                                                    xhr_requests[files_count].fakeResponse = {\n                                                        file: slot_response.file,\n                                                        id: slot_response.id,\n                                                        name: slot_response.name,\n                                                        thumbnail: slot_response.thumbnail,\n                                                        created_at: slot_response.created_at,\n                                                    };\n                                                    xhr_requests[files_count].oncancel();\n                                                } else {\n                                                    xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                                    xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'));\n                                                    xhr_requests[files_count].is_uploading = true;\n                                                    xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                                }\n                                            } else {\n                                                xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                                xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                                xhr_requests[files_count].oncancel();\n                                            }\n                                        }\n                                    });\n                                });\n                            }\n                        }\n                    }\n                }\n            };\n        });\n        if (xhr_requests.length){\n            if ($message.data('cancel')) {\n                xhr_requests[0].abort();\n            } else {\n                this.account.testGalleryTokenExpire(() => {\n                    this.account.testGalleryFileSlot(xhr_requests[0].formData.get('file'), (slot_response) => {\n                        if (!is_error) {\n                            if (slot_response && slot_response.quota){\n                                if (slot_response.file && slot_response.hash){\n                                    xhr_requests[0].fakeStatus = 200;\n                                    xhr_requests[0].fakeResponse = {\n                                        file: slot_response.file,\n                                        id: slot_response.id,\n                                        name: slot_response.name,\n                                        thumbnail: slot_response.thumbnail,\n                                        created_at: slot_response.created_at,\n                                    };\n                                    xhr_requests[0].oncancel();\n                                } else {\n                                    xhr_requests[0].open(\"POST\", this.account.get('gallery_url') + 'v1/files/upload/', true);\n                                    xhr_requests[0].setRequestHeader(\"Authorization\", 'Bearer ' + this.account.get('gallery_token'));\n                                    xhr_requests[0].is_uploading = true;\n                                    xhr_requests[0].send(xhr_requests[0].formData);\n                                }\n                            } else {\n                                xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                xhr_requests[0].oncancel();\n                            }\n                        }\n                    });\n                }, (err_status) => {\n                    let response_text = err_status,\n                        file;\n                    message.get('files').length && (file = message.get('files')[0])\n                    if (file && !_.isUndefined(file.upload_id)){\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(response_text);\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').removeClass('hidden');\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').prop('title', response_text);\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('hidden');\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('upload-error');\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').css({ 'border-color': '#EF9A9A'});\n                    }\n                    message.get('files').length && (message.get('files')[0].is_errored = true);\n                    is_error = true;\n                    $(xhr_requests).each((idx, request) => {\n                        request.abort();\n                    })\n                    self.onFileNotUploaded(message, $message, response_text);\n                });\n            }\n        }\n\n    },\n\n    encryptFile: async function (file) {\n        return await utils.AES.encrypt(file);\n    },\n\n    onFileUploaded: function (message, $message) {\n        $message.find('.dropdown-content.retry-send-message').removeClass('hidden');\n        $message.find('.msg-delivering-state').removeClass('no-click');\n        message.set('files', message.get('files').filter((element) => { return element != null}) );\n        let files = message.get('files'),\n            self = this, is_audio = false,\n            images = [], files_ = [], videos = [];\n        if (!files.length)\n            this.onFileNotUploaded(message, $message)\n        $(files).each((idx, file_) => {\n            let file_new_format = {\n                name: file_.name,\n                type: file_.type,\n                size: file_.size,\n                description: file_.description || '',\n                sources: [file_.url]\n            };\n            file_.key && (file_new_format.key = file_.key);\n            file_.voice && (file_new_format.voice = true);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')){\n                _.extend(file_new_format, { id: file_.id, created: file_.created_at, thumbnail: file_.thumbnail });\n            }\n            if (utils.isImageType(file_.type)) {\n                _.extend(file_new_format, { width: file_.width, height: file_.height });\n                images.push(file_new_format);\n            }\n            else if (utils.isVideoType(file_.type)) {\n                _.extend(file_new_format, { duration: file_.duration});\n                videos.push(file_new_format);\n            }\n            else {\n                _.extend(file_new_format, { duration: file_.duration});\n                files_.push(file_new_format);\n            }\n        });\n        $message.find('.unuploaded-images').remove();\n        $message.find('.unuploaded-file').remove();\n        //  loaded and send image\n        if (images.length > 0) {\n            if (images.length > 1) {\n                let template_for_images;\n                if (images.length > 6) {\n                    let tpl_name = 'template-for-6',\n                        hidden_images = images.length - 5;\n                    !xabber.settings.load_media && (tpl_name = 'hidden-template-for-6')\n                    template_for_images = $(templates.messages[tpl_name]({images}));\n                    template_for_images.find('.last-image').addClass('hidden-images');\n                    template_for_images.find('.image-counter').text('+' + hidden_images);\n                }\n                else {\n                    let tpl_name = 'template-for-' + images.length;\n                    !xabber.settings.load_media && (tpl_name = 'hidden-template-for-' + images.length)\n                    template_for_images = $(templates.messages[tpl_name]({images}));\n                }\n                if (!xabber.settings.load_media) {\n                    template_for_images.find('img').removeClass('uploaded-img-for-collage popup-img').addClass('unloaded-img')\n                }\n                $message.removeClass('file-upload noselect');\n                $message.find('.chat-msg-media-content .chat-file-info').remove();\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_images);\n                !xabber.settings.load_media && $message.find('.chat-msg-media-content.chat-main-upload-media .img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n            else {\n                let img = this.createImage(images[0]),\n                    img_content = self.createImageContainer(images[0]);\n                img.onload = () => {\n                    this.imageOnload($message);\n                };\n                $message.removeClass('file-upload noselect');\n                $message.find('.chat-msg-media-content .chat-file-info').remove();\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(img_content);\n                $message.find('.chat-msg-media-content.chat-main-upload-media .img-content').html(img);\n                !xabber.settings.load_media && $message.find('.chat-msg-media-content.chat-main-upload-media .img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n        }\n        message.set('videos', videos);\n        if (videos.length > 0) {\n            let video_content = this.createVideoContainer();\n            $message.find('.chat-msg-media-content.chat-main-upload-media').find('.chat-file-info').remove();\n            $message.find('.chat-msg-media-content.chat-main-upload-media').append(video_content);\n            videos.forEach((video, idx) => {\n                let video_el = this.createVideo(video, idx);\n                $message.find('.video-content').append(video_el);\n            });\n            this.videoOnload($message, message);\n            $message.removeClass('file-upload noselect');\n        }\n        if (files_.length > 0) {\n            $message.removeClass('file-upload noselect');\n            $(files_).each((idx, item) => {\n                if (!idx && !images.length){\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').find('.chat-file-info').remove();\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').removeClass('chat-file-content');\n                }\n                if (item.type) {\n                    if (item.voice)\n                        is_audio = true;\n                    else\n                        is_audio = false;\n                }\n                let file_attrs = {\n                        name: item.name,\n                        type: item.type,\n                        sources: item.sources\n                    },\n                    template_for_file_content,\n                    mdi_icon_class = utils.file_type_icon(item.type);\n                ((files_.length === 1) && is_audio) && (file_attrs.name = xabber.getString(\"voice_message\"));\n                _.extend(file_attrs, {size: utils.pretty_size(item.size), is_audio: is_audio, duration: utils.pretty_duration(item.duration), mdi_icon: mdi_icon_class});\n                template_for_file_content = is_audio ? $(templates.messages.audio_file(file_attrs)) : $(templates.messages.file(file_attrs));\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_file_content);\n                if (is_audio && $message.find('.link-file').length) {\n                    let audio_player = {$audio_elem : $message.find('.link-file')[0]};\n                    audio_player.msg_time = $message.attr('data-time');\n                    audio_player.author = $message.find('.chat-msg-author').text();\n                    audio_player.message_unique_id = $message.attr('data-uniqueid');\n                    if (this.model.get('group_chat')) {\n                        if (this.contact.my_info) {\n                            audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                            if (!audio_player.contact_avatar) {\n                                if (this.account.cached_image)\n                                    audio_player.contact_avatar = this.account.cached_image;\n                                !audio_player.contact_avatar && (audio_player.contact_avatar = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                            } else\n                                audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                        }\n                    }\n                    if (!audio_player.contact_avatar)\n                        audio_player.contact_avatar = this.account.cached_image;\n                    if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                        this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                        xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                    }\n\n                    let f_url = $message.find('.link-file').find('.file-link-download').attr('href');\n                    $message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                    audio_player.$audio_elem.voice_message = this.renderVoiceMessage($message.find('.link-file').find('.file-container')[0], f_url);\n\n                    message.set('msg_player_audios', [audio_player])\n                    xabber.trigger('plyr_player_updated');\n                }\n            });\n        }\n        this.initPopup($message);\n        message.set('images', images);\n        message.set('files', files_);\n        if ((message.get('encrypted') || this.model.get('encrypted')) && message.get('images').length) {\n            this.decryptImages(message);\n        }\n        this.sendMessage(message);\n        this.scrollToBottom();\n    },\n\n    createAudio: function(file_url, $elem) {\n        let audio = WaveSurfer.create({\n            container: $elem[0],\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n\n    createImage: function(image) {\n        let imgContent = new Image(),\n            maxHeight = 400,\n            maxWidth = (xabber.main_panel.$el.width() * 0.715 - 176) * 0.7;\n        if (image.height)\n            imgContent.height = image.height;\n        if (image.width)\n            imgContent.width = image.width;\n        maxWidth = maxWidth > 400 ? 400 : maxWidth;\n        if (xabber.settings.load_media) {\n            imgContent.src = image.sources[0];\n            $(imgContent).addClass('uploaded-img popup-img');\n        } else {\n            $(imgContent).addClass('unloaded-img');\n        }\n        $(imgContent).attr({'data-mfp-src': image.sources[0], title: (image.description || '')});\n        if (imgContent.height && imgContent.width) {\n            if (imgContent.width > maxWidth) {\n                imgContent.height = imgContent.height * (maxWidth/imgContent.width);\n                imgContent.width = maxWidth;\n            }\n            if (imgContent.height > maxHeight) {\n                imgContent.width = imgContent.width * (maxHeight/imgContent.height);\n                imgContent.height = maxHeight;\n            }\n        }\n        return imgContent;\n    },\n\n    createVideo: function(video, idx) {\n        video.pretty_size = utils.pretty_size(video.size)\n        let video_attrs = {video_src: video.sources[0], thumbnail: video.thumbnail, video_id: idx},\n            $video_wrap_template = $(templates.messages.video(video_attrs));\n        if (video.thumbnail){\n            setTimeout(() => {\n                $video_wrap_template.append($(`<img class=\"plyr-video-poster\" src=\"${video.thumbnail}\" onerror=\"this.style.display='none'\">`))\n            }, 1000);\n        }\n        return $video_wrap_template;\n    },\n\n    createImageContainer: function() {\n        return $('<div class=\"img-content\"/>')[0];\n    },\n\n    createVideoContainer: function() {\n        return $('<div class=\"video-content\"/>')[0];\n    },\n\n    onFileNotUploaded: function (message, $message, error_text, type, error_type) {\n        let error_message = error_text ? xabber.getString(\"file_upload__error\", [error_text]) : xabber.getString(\"file_upload__error_default\");\n        $message.find('.dropdown-content.retry-send-message').removeClass('hidden');\n        $message.find('.msg-delivering-state').removeClass('no-click');\n        $message.find('.circle-wrap .mdi-close').unbind( \"click\" );\n        message.set('state', constants.MSG_ERROR);\n        if (type == 'http' || error_type == 'wait'){\n            $message.find('.repeat-upload').one(\"click\",() => {\n                this.startUploadFile(message, $message);\n            });\n        }\n        else {\n            if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                this.bottom.deleteFilesFromMessages([message]);\n            $message.find('.edit-upload').one(\"click\",() => {\n                if (this.model.get('encrypted')){\n                    this.bottom.setEditedMessageAttachments(message, true);\n                    this.bottom.setRedactedUploadMessage(message);\n                }\n                this.removeMessage($message);\n            });\n            $message.find('.repeat-upload').one(\"click\",() => {\n                message.set('state', constants.MSG_PENDING);\n                $message.find('.upload-error .circle-percent-text').text('0%');\n                $message.find('.mdi-alert-circle').addClass('hidden');\n                $message.find('.mdi-close').removeClass('hidden');\n                $message.find('.upload-error').css({ 'border-color': ''});\n                $message.find('.upload-error').removeClass('upload-error');\n                $message.find('.preloader-path-new').css({ 'stroke-dasharray': '0, 149.825'});\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    this.startGalleryUploadFile(message, $message);\n                else\n                    this.startUploadFile(message, $message);\n            });\n        }\n    },\n\n    sendChatState: function (state, type) {\n        if (this.model.get('saved') || this.contact && this.contact.get('status') === 'offline')\n            return;\n        clearTimeout(this._chatstate_timeout);\n        clearTimeout(this._chatstate_send_timeout);\n        this.chat_state = false;\n        let stanza = $msg({to: this.model.get('jid'), type: 'chat'}).c(state, {xmlns: Strophe.NS.CHATSTATES});\n        if (this.model.get('encrypted')) {\n            if (this.account.settings.get('encrypted_chatstates'))\n                type = 'encrypted';\n            else\n                return;\n        }\n        type && stanza.c('subtype', {xmlns: Strophe.NS.EXTENDED_CHATSTATES, type: type});\n        (state === 'composing') && (this.chat_state = true);\n        this.account.sendMsg(stanza);\n        if (state === 'composing') {\n            this._chatstate_timeout = setTimeout(() => {\n                this.chat_state = false;\n            }, constants.CHATSTATE_TIMEOUT_PAUSED);\n            this._chatstate_send_timeout = setTimeout(() => {\n                (!this.chat_state && xabber.settings.typing_notifications) && this.sendChatState('paused');\n            }, constants.CHATSTATE_TIMEOUT_PAUSED*2);\n        }\n    },\n\n    onChangedMessageTimestamp: function (message) {\n        let $message = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`),\n            $next_msg = $message.next(),\n            $old_prev_msg = $message.prev();\n        $message.attr({\n            'data-time': message.get('timestamp')\n        });\n        $message.detach();\n        $message.children('.right-side').find('.msg-time').attr({title: pretty_datetime(message.get('time'))}).text(utils.pretty_time(message.get('time')));\n        message.get('user_info') && $message.attr('data-from-id', message.get('user_info').id);\n        this.model.messages.sort();\n        let index = this.model.messages.indexOf(message);\n        if (index === 0) {\n            if ($old_prev_msg.hasClass('chat-day-indicator'))\n                $old_prev_msg.after($message);\n            else\n                $message.prependTo(this.$('.chat-content'));\n        } else {\n            let $prev_msg = this.$('.chat-message').eq(index - 1),\n                is_same_sender = ($message.data('from') === $prev_msg.data('from')),\n                is_same_date = moment($message.data('time')).startOf('day')\n                    .isSame(moment($prev_msg.data('time')).startOf('day'));\n            if (($old_prev_msg.data('from') !== $message.data('from')) && ($next_msg.data('from') === $message.data('from')) && (($next_msg.children('.right-side').find('.msg-delivering-state').attr('data-state') === 'delivered') || ($next_msg.children('.right-side').find('.msg-delivering-state').attr('data-state') === 'displayed')))\n                this.showMessageAuthor($next_msg);\n            if ($prev_msg.next().hasClass('chat-day-indicator') && (moment($prev_msg.next().data('time')).format('DD.MM.YY') === moment(message.get('timestamp')).format('DD.MM.YY'))) {\n                $message.insertAfter($prev_msg.next());\n                this.showMessageAuthor($message);\n            }\n            else\n                $message.insertAfter($prev_msg);\n            if (message.get('data_form') || message.get('forwarded_message') || !is_same_date || !is_same_sender || $prev_msg.hasClass('system') || $prev_msg.hasClass('saved-main'))\n                this.showMessageAuthor($message);\n            else\n                this.hideMessageAuthor($message);\n        }\n        let last_message = this.model.last_message;\n        if (!last_message || message.get('timestamp') > last_message.get('timestamp')) {\n            this.model.last_message = message;\n            this.chat_item.updateLastMessage();\n        }\n    },\n\n    onChangedReadState: function (message) {\n        let is_unread = message.get('is_unread'),\n            is_synced = message.get('synced_from_server'),\n            is_unread_archived = message.get('is_unread_archived'),\n            is_missed_msg = message.get('missed_msg'),\n            $msg = this.$(`.chat-message[data-uniqueid=\"${message.get(\"unique_id\")}\"]`);\n        if (is_unread) {\n            if (!is_unread_archived && !is_synced && !is_missed_msg)\n                this.model.messages_unread.add(message);\n            $msg.addClass('unread-message');\n            $msg.addClass('unread-message-background');\n            this.model.recountUnread();\n        } else {\n            if ((!is_unread_archived && !is_synced && !is_missed_msg) || this.model.messages_unread.indexOf(message) > -1)\n                this.model.messages_unread.remove(message);\n            $msg.removeClass('unread-message');\n            setTimeout(() => {\n                $msg.removeClass('unread-message-background');\n            }, 1000);\n            this.model.recountUnread();\n            if (!message.get('muted')) {\n                xabber.recountAllMessageCounter();\n            }\n            if (message.get('ephemeral_timer')) {\n                message.set('displayed_time', new Date());\n                message.collection.checkEphemeralTimers();\n            }\n        }\n    },\n\n    onTouchMessage: function (ev) {\n        if (ev.which === 3)\n            return;\n        let $elem = $(ev.target), $msg;\n\n        if ($elem.hasClass('chat-message')) {\n            $msg = $elem;\n        } else {\n            $msg = $elem.parents('.chat-message');\n        }\n        if (window.getSelection() != 0) {\n            utils.clearSelection();\n            $msg.attr('data-no-select-on-mouseup', '1');\n        }\n    },\n\n    onClickLink: function (ev) {\n        let $elem = $(ev.target),\n            $message = $elem.closest('.chat-message'),\n            msg = this.model.messages.get($message.data('uniqueid'));\n        if (!msg) {\n            msg = this.account.participant_messages.get($message.data('uniqueid'));\n        }\n        let files = msg.get('files'),\n            videos = msg.get('videos'),\n            images = msg.get('images'),\n            link_references = msg.get('link_references'),\n            fwd_messages = [],\n            fwd_link_references = [],\n            files_links = '';\n        if (msg.get('forwarded_message')) {\n            msg.get('forwarded_message').forEach((message) => {\n                message.get('images') && fwd_messages.push(message.get('images'));\n                message.get('videos') && fwd_messages.push(message.get('videos'));\n                message.get('link_references') && fwd_link_references.push(message.get('link_references'));\n            });\n        }\n        $(files).each(function(idx, file) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += file.sources[0];\n        });\n        $(images).each(function(idx, image) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += image.sources[0];\n        });\n        $(videos).each(function(idx, image) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += image.sources[0];\n        });\n        $(link_references).each(function(idx, link_reference) {\n            if (files_links != \"\")\n                files_links += '\\n';\n            files_links += link_reference.url;\n        });\n        $(fwd_messages).each(function (idx, message) {\n            $(message).each(function (i, file) {\n                if (files_links != \"\")\n                    files_links += '\\n';\n                files_links += file.sources[0];\n            });\n        });\n        $(fwd_link_references).each(function (idx, message) {\n            $(message).each(function (i, link_reference) {\n                if (files_links != \"\")\n                    files_links += '\\n';\n                files_links += link_reference.url;\n            });\n        });\n        utils.copyTextToClipboard(files_links, xabber.getString(\"toast_link_copied\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n    },\n\n\n    onClickLocationLink: function (ev) {\n        ev.preventDefault()\n        let $elem = $(ev.target),\n            $message = $elem.closest('.chat-message'),\n            msg = this.model.messages.get($message.data('uniqueid'));\n        if (!msg) {\n            msg = this.account.participant_messages.get($message.data('uniqueid'));\n        }\n        let locations = msg.get('locations'),\n            fwd_messages = [],\n            location_links = '';\n        if (msg.get('forwarded_message')) {\n            msg.get('forwarded_message').forEach((message) => {\n                message.get('locations') && fwd_messages.push(message.get('locations'));\n            });\n        }\n        $(locations).each(function(idx, location) {\n            location_links += 'geo:' + location.lat + ',' + location.lon;\n        });\n        $(fwd_messages).each(function (idx, message) {\n            $(message).each(function (i, object) {\n                if (location_links != \"\")\n                    location_links += '\\n';\n                location_links += 'geo:' + object.lat + ',' + object.lon;\n            });\n        });\n\n        utils.copyTextToClipboard(location_links, xabber.getString(\"toast_location_copied\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n    },\n\n    showParticipantProperties: function (participant_id, options) {\n        options = options || {};\n        let participant = this.contact.participants.get(participant_id);\n        if (!participant) {\n            this.contact.getBlockedParticipants((response) => {\n                _.extend(options, {present: null, subscription: null});\n                if ($(response).find(`query user:contains(${participant_id})`).length)\n                    options.blocked = true;\n                else\n                    options.blocked = false;\n                participant = new xabber.Participant(options, {contact: this.contact});\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(participant, {});\n            }, (err) => {\n                _.extend(options, {present: null, subscription: null});\n                participant = new xabber.Participant(options, {contact: this.contact});\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(participant, {});\n            });\n            return;\n        }\n        (this.contact.my_info && this.contact.my_info.get('id') === participant_id) && (participant_id = '');\n        this.contact.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.contact.showDetailsRight('all-chats', {type: 'participant'});\n            this.contact.details_view_right.participants.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    onClickMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('not-decrypted-icon') || $elem.closest('.dropdown-content').length || $elem.closest('.not-decrypted-icon').length)\n            return;\n        if ($elem.hasClass('file-link-download')) {\n            ev.preventDefault();\n            let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')) || this.account.context_messages.get($elem.closest('.chat-message').data('uniqueid')),\n                uri = $elem.attr('href'),\n                file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n            if (file && file.key) {\n                this.model.messages.decryptFile(uri,file.key).then((result) => {\n                    if (result === null)\n                        return;\n                    let download = document.createElement(\"a\");\n                    download.href = result;\n                    download.download = file.name;\n                    download.click();\n                });\n                return;\n            } else\n                xabber.openWindow($elem.attr('href'));\n        }\n        if ($elem.hasClass('msg-delivering-state') ||  $elem.hasClass('not-decrypted-tooltip') || $elem.hasClass('audio-control-panel') || $elem.hasClass('voice-msg-current-time') || $elem.hasClass('voice-msg-total-time')) {\n            return;\n        }\n        if ($elem.closest(\".plyr-video-container\").length > 0) {\n            let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                $plyr = $elem.closest(\".plyr-video-container\");\n            !msg && (msg = this.account.context_messages.get($elem.closest('.chat-message').data('uniqueid')));\n            if (msg && msg.get('msg_player_videos')){\n                if (!xabber.plyr_player_popup){\n                    xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                    xabber.plyr_player_popup.show({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n                } else\n                    xabber.plyr_player_popup.showNewVideo({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n            }\n            return;\n        }\n        if (!$elem.hasClass('mdi-link-variant') && !$elem.hasClass('msg-copy-location-content') && !$elem.hasClass('btn-retry-send-message') && !$elem.hasClass('btn-delete-message') && !$elem.hasClass('file-link-download') && !$elem.is('canvas') && !$elem.hasClass('voice-message-volume')) {\n            let $msg = $elem.closest('.chat-message'), msg,\n                $fwd_message = $elem.parents('.fwd-message').first(),\n                is_forwarded = $fwd_message.length > 0,\n                no_select_message = $msg.attr('data-no-select-on-mouseup');\n            $msg.attr('data-no-select-on-mouseup', '');\n\n            if ($elem.hasClass('data-form-field')) {\n                msg = this.model.messages.get($msg.data('uniqueid'));\n                if (msg)\n                    this.model.sendDataForm(msg, $elem.attr('id'));\n                return;\n            }\n\n            if (window.getSelection() != 0) {\n                return;\n            }\n\n            if ($elem.hasClass('collapsed-forwarded-message')) {\n                let msg = this.buildMessageHtml(this.account.forwarded_messages.get($elem.data('uniqueid'))),\n                    expanded_fwd_message = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this});\n                expanded_fwd_message.$el.attr('data-color', this.account.settings.get('color'));\n                this.updateMessageInChat(msg, this.account.forwarded_messages.get($elem.data('uniqueid')));\n                this.initPopup(msg);\n                expanded_fwd_message.open(msg);\n                return;\n            }\n\n            if ($elem.hasClass('chat-msg-author') || $elem.hasClass('fwd-msg-author')) {\n                let from_jid = is_forwarded ? $fwd_message.data('from') : $msg.data('from'),\n                    from_id = is_forwarded ? $fwd_message.data('fromId') : $msg.data('fromId');\n                if (this.contact && this.contact.get('group_chat')) {\n                    this.bottom.quill.focus();\n                    let caret_position = this.bottom.quill.getSelection(),\n                        participant_attrs = {jid: from_jid, id: from_id, nickname: $elem.text()};\n                    caret_position && (caret_position = caret_position.index);\n                    participant_attrs.position = caret_position || 0;\n                    this.bottom.insertMention(participant_attrs);\n                }\n                else if (from_jid === this.account.get('jid')) {\n                    this.account.showSettings();\n                } else if (from_jid === this.model.get('jid')) {\n                    this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                } else {\n                    if (from_jid == from_id)\n                        return;\n                    let contact = this.account.contacts.mergeContact(from_jid);\n                    contact && contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                }\n                return;\n            }\n\n            if ($elem.hasClass('circle-avatar')) {\n                let from_jid = is_forwarded ? $fwd_message.data('from') : $msg.data('from');\n                if (this.model.get('group_chat')) {\n                    let member_id = (is_forwarded) ? $fwd_message.attr('data-from-id') : $msg.attr('data-from-id'),\n                        unique_id = (is_forwarded) ? $fwd_message.attr('data-uniqueid') : $msg.attr('data-uniqueid'),\n                        msg = this.model.messages.get(unique_id) || this.account.context_messages.get(unique_id) || this.account.searched_messages.get(unique_id),\n                        user_info = msg && msg.get('user_info');\n                    member_id && this.showParticipantProperties(member_id, user_info);\n                    return;\n                }\n                else if (from_jid === this.account.get('jid')) {\n                    this.account.showSettings();\n                } else if (from_jid === this.model.get('jid')) {\n                    this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                } else {\n                    let contact = this.account.contacts.mergeContact(from_jid);\n                    contact && contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                }\n                return;\n            }\n\n            if ($elem.hasClass('mention')) {\n                let member_id = $elem.data('target');\n                if (this.contact.get('group_chat')) {\n                    if (member_id && !this.contact.participants.get(member_id)) {\n                        let participant = this.contact.participants.find(p => p.get('jid') === member_id);\n                        participant && (member_id = participant.get('id'));\n                    }\n                    member_id && this.showParticipantProperties(member_id);\n                }\n                else {\n                    if (member_id === this.account.get('jid'))\n                        this.account.showSettings();\n                    else if (member_id === this.model.get('jid')) {\n                        this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                    } else {\n                        let contact = this.account.contacts.mergeContact(member_id);\n                        contact && contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                    }\n                }\n                return;\n            }\n\n            if ($elem.hasClass('voice-message-play') || $elem.hasClass('no-uploaded')) {\n                let $audio_elem = $elem.closest('.link-file'),\n                    f_url = $audio_elem.find('.file-link-download').attr('href');\n                $audio_elem.find('.mdi-play').removeClass('no-uploaded');\n                if ($elem.closest('.chat-message').hasClass('encrypted')) {\n                    let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                        uri = $elem.closest('.link-file').find('.file-link-download').attr('href'),\n                        file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n                    if (file && file.key) {\n                        this.model.messages.decryptFile(f_url, file.key).then((result) => {\n                            if (result === null)\n                                return;\n                            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.file-container')[0], result);\n                        });\n                    }\n                } else {\n                    $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.file-container')[0], f_url);\n                }\n                return;\n            }\n\n            if ($elem.hasClass('mdi-play') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n                let $audio_elem = $elem.closest('.link-file');\n                $audio_elem[0].voice_message.play();\n                return;\n            }\n\n            if ($elem.hasClass('mdi-pause') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n                let $audio_elem = $elem.closest('.link-file');\n                $audio_elem[0].voice_message.pause();\n                return;\n            }\n\n            if ($elem.hasClass('msg-hyperlink')) {\n                ev && ev.preventDefault();\n                $elem.blur();\n                let link = $elem.attr('href');\n                utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                    if (result)\n                        utils.openWindow(link);\n                });\n                return;\n            }\n\n            if ($elem.closest(\".msg-hyperlink\").length > 0) {\n                ev && ev.preventDefault();\n                $elem.blur();\n                let link = $elem.closest(\".msg-hyperlink\").attr('href');\n                utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                    if (result)\n                        utils.openWindow(link);\n                });\n                return;\n            }\n\n            if ($elem.hasClass('uploaded-img')||$elem.hasClass('img-content')||($elem.hasClass('uploaded-img-for-collage'))) {\n                $elem.hasClass('img-content') && $elem.children('img').click();\n                return;\n            }\n\n            if ($elem.hasClass('unloaded-img')) {\n                let img_information = this.getImagesInformation(this.model.messages.get($elem.closest('.chat-message').data('uniqueid')));\n                utils.dialogs.ask(xabber.getString(\"privacy_risk\"), xabber.getString(\"privacy_risk_text\"), {inverted_buttons: true, img_details: $(templates.messages.images_details({img_information: img_information}))}, { ok_button_text: xabber.getString(\"privacy_risk_btn_ok\")}).done((result) => {\n                    if (result) {\n                        $elem.attr('src',$elem.attr('data-mfp-src'));\n                        $elem.removeClass('unloaded-img');\n                        $elem.addClass('uploaded-img');\n                        this.initPopup($elem.closest('.chat-message'));\n                        $elem.closest('.chat-message').find('.img-privacy-warning').remove()\n                    }\n                });\n                return;\n            }\n\n            if ($elem.hasClass('img-content-template') && $elem.find('img').hasClass('unloaded-img')) {\n                let img_information = this.getImagesInformation(this.model.messages.get($elem.closest('.chat-message').data('uniqueid')));\n                utils.dialogs.ask(xabber.getString(\"privacy_risk\"), xabber.getString(\"privacy_risk_text\"), {inverted_buttons: true, img_details: $(templates.messages.images_details({img_information: img_information}))}, { ok_button_text: xabber.getString(\"privacy_risk_btn_ok\")}).done((result) => {\n                    if (result) {\n                        let $msg = $elem.closest('.chat-message'),\n                            $imgs = $msg.find('.img-content-template img');\n                        $imgs.each((idx, img) => {\n                            $(img).attr('src',$(img).attr('data-mfp-src'));\n                        });\n                        $imgs.removeClass('unloaded-img');\n                        $imgs.addClass('uploaded-img-for-collage');\n                        this.initPopup($msg);\n                        $elem.closest('.chat-message').find('.img-privacy-warning').remove()\n                    }\n                });\n                return;\n            }\n\n            if ($elem.hasClass('chat-msg-location-content') || $elem.hasClass('location-link') || $elem.closest(\".video-file-wrap\").length > 0 || $elem.closest(\".embed-video\").length > 0) {\n                return;\n            }\n\n            if ($elem.hasClass('last-image')) {\n                $elem.find('img').length && $elem.find('img')[0].click();\n                return;\n            }\n\n            if ($elem.hasClass('image-counter')) {\n                $elem.closest('.last-image').find('img')[0].click();\n                return;\n            }\n\n            if ($msg.hasClass('searched-message')) {\n                this.model.getMessageContext($msg.data('uniqueid'), {searched_messages: true});\n                return;\n            }\n\n            let processClick = () => {\n                let $prev_selected = $msg.hasClass('selected') ? $msg.prevAll('.chat-message.selected').last() : $msg.prevAll('.chat-message.selected').first();\n                !$prev_selected.length && ($prev_selected = $msg.hasClass('selected') ? $msg.nextAll('.chat-message.selected').last() : $msg.nextAll('.chat-message.selected').first());\n                !$prev_selected.length && ($prev_selected = $msg.hasClass('selected') ? $msg.prevAll('.chat-message.selected').first() : $msg.prevAll('.chat-message.selected').last());\n                if ((xabber.shiftctrl_pressed || xabber.shift_pressed) && $prev_selected.length) {\n                    let $all_msgs = [], is_selected = $msg.hasClass('selected');\n                    if ($prev_selected.attr('data-time') < $msg.attr('data-time'))\n                        $all_msgs = $prev_selected.nextUntil($msg, '.chat-message:not(.system)');\n                    else\n                        $all_msgs = $msg.nextUntil($prev_selected, '.chat-message:not(.system)');\n                    xabber.shift_pressed && this.$('.chat-message').removeClass('selected');\n                    $prev_selected.switchClass('selected', !is_selected);\n                    $all_msgs.switchClass('selected', !is_selected);\n                    $msg.switchClass('selected', !is_selected);\n                    ev.preventDefault();\n                    this.bottom.manageSelectedMessages();\n                    return false;\n                }\n                if (!no_select_message) {\n                    $msg.switchClass('selected', !$msg.hasClass('selected'));\n                    ev.preventDefault();\n                    this.bottom.manageSelectedMessages();\n                    return false;\n                }\n            };\n\n            if ($msg.hasClass('participant-message') || $msg.hasClass('context-message')) {\n                if ($msg.hasClass('system'))\n                    return;\n                processClick();\n                return;\n            }\n\n            msg = this.model.messages.get($msg.data('uniqueid'));\n            if (!msg) {\n                return;\n            }\n\n            let type = msg.get('type');\n            if (type === 'file_upload') {\n                return;\n            }\n\n            if (type === 'system') {\n                return;\n            } else if (is_forwarded) {\n                let fwd_message = this.account.forwarded_messages.get($fwd_message.data('uniqueid'));\n                if (!fwd_message) {\n                    return;\n                }\n                processClick();\n            } else {\n                processClick();\n            }\n        }\n    },\n\n    onClickLocation: function (ev) {\n        ev.preventDefault();\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat'),\n            location_name = $(ev.target).attr('title');\n        if (lon && lat){\n            xabber.popup_coordinates = [lon, lat];\n            xabber.location_name = location_name;\n            new xabber.ChatLocationView({content: this}).show(ev);\n        }\n    },\n\n    onHoverLocation: function (ev) {\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat');\n\n        fetch('https://nominatim.openstreetmap.org/reverse?format=json&lon=' + lon + '&lat=' + lat).then(function(response) {\n            return response.json();\n        }).then(function(json) {\n            if (!json.error) {\n                $(ev.target).attr('title', json.display_name);\n            }\n            else {\n                $(ev.target).attr('title', xabber.getString(\"location_fragment__address_error__title\"));\n            }\n            $(ev.target).removeClass('no-title')\n        })\n    },\n\n    retrySendMessage: function (ev) {\n        let $msg = $(ev.target).closest('.chat-message'),\n            msg = this.model.messages.get($msg.data('uniqueid'));\n        if (msg.get('type') === 'file_upload') {\n            msg.set('state', constants.MSG_PENDING);\n            this.startUploadFile(msg, $msg);\n        }\n        else\n            this.sendMessage(msg);\n        ev.preventDefault();\n    },\n\n    removeFileErrorMessage: function (ev) {\n        let $msg = $(ev.target).closest('.chat-message');\n        this.removeMessage($msg);\n        ev.preventDefault();\n        this.chat_item.updateChatError();\n    },\n\n    onUpdatePlyr: function (ev) {\n        this.$('.plyr-video-container').removeClass('active-plyr-container');\n        if (xabber.current_plyr_player && xabber.current_plyr_player.player_item) {\n            let $message = this.$(`.chat-message[data-uniqueid=\"${xabber.current_plyr_player.message_unique_id}\"]`);\n            if ($message.length) {\n                $message.find(`.plyr-video-container[data-message-id=\"${xabber.current_plyr_player.player_item.message_id}\"]`).addClass('active-plyr-container');\n            }\n        }\n    },\n});\n\n\nxabber.ChatContentPlaceholderView = xabber.BasicView.extend({\n    className: 'chat-body-content-placeholder-wrap',\n    template: templates.chat_content_placeholder,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        return this;\n    },\n\n    render: function () {\n    },\n});\n\nxabber.ExpandedMessagePanel = xabber.BasicView.extend({\n    className: 'modal expanded-message',\n    template: templates.group_chats.pinned_message_panel,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .collapsed-forwarded-message\": \"expandFwdMessage\",\n        \"click .chat-message\": \"onClickPinnedMessage\",\n        'click .chat-msg-location-content': 'onClickExpandedMessageLocation',\n        'click .mdi-link-variant' : 'onClickLink',\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.chat_content = options.chat_content;\n        this.message = options.message;\n    },\n\n    open: function ($message) {\n        this.$el.css('width', $message.find('.chat-text-content').text().length <= 60 ? 540 : xabber.main_panel.$el.width() * 0.715);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.modal-content').css('height', this.$el.height() - 12);\n                if ($message.find('.plyr-video-container').length) {\n                    this.chat_content.initPlyrEmbedPlayer($message, this.message);\n                }\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n        $message.find('.right-side .msg-delivering-state').remove();\n        this.$('.modal-content').html($message);\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    onClickLink:function (ev) {\n        this.chat_content.onClickLink(ev);\n    },\n\n    onClickPinnedMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('msg-hyperlink')) {\n            ev && ev.preventDefault();\n            let link = $elem.attr('href');\n            utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                if (result)\n                    utils.openWindow(link);\n            });\n            return;\n        }\n        if ($elem.closest(\".plyr-video-container\").length > 0) {\n            let msg = this.chat_content.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                $plyr = $elem.closest(\".plyr-video-container\");\n            !msg && (msg = this.account.forwarded_messages.get($elem.closest('.chat-message').data('uniqueid')));\n            if (msg && msg.get('msg_player_videos')){\n                if (!xabber.plyr_player_popup){\n                    xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                    xabber.plyr_player_popup.show({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n                } else\n                    xabber.plyr_player_popup.showNewVideo({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n            }\n            return;\n        }\n        if ($elem.hasClass('voice-message-play') || $elem.hasClass('no-uploaded')) {\n            let $audio_elem = $elem.closest('.link-file'),\n                f_url = $audio_elem.find('.file-link-download').attr('href');\n            $audio_elem.find('.mdi-play').removeClass('no-uploaded');\n            if ($elem.closest('.chat-message').hasClass('encrypted')) {\n                let msg = this.chat_content.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                    uri = $elem.closest('.link-file').find('.file-link-download').attr('href'),\n                    file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n                if (file && file.key) {\n                    this.chat_content.model.messages.decryptFile(f_url, file.key).then((result) => {\n                        if (result === null)\n                            return;\n                        $audio_elem[0].voice_message = this.chat_content.renderVoiceMessage($audio_elem.find('.file-container')[0], result);\n                    });\n                }\n            } else {\n                $audio_elem[0].voice_message = this.chat_content.renderVoiceMessage($audio_elem.find('.file-container')[0], f_url);\n            }\n            return;\n        }\n        if ($elem.hasClass('mdi-play') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n            let $audio_elem = $elem.closest('.link-file');\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n    },\n    onClickExpandedMessageLocation: function (ev) {\n        ev.preventDefault();\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat'),\n            location_name = $(ev.target).attr('title');\n        if (lon && lat){\n            xabber.popup_coordinates = [lon, lat];\n            xabber.location_name = location_name;\n            new xabber.ChatLocationView({content: this}).show(ev);\n        }\n    },\n\n    expandFwdMessage: function (ev) {\n        let $target = $(ev.target),\n            unique_id = $target.data('uniqueid'),\n            msg = this.chat_content.buildMessageHtml(this.account.forwarded_messages.get(unique_id)),\n            expanded_fwd_message = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this.chat_content});\n        expanded_fwd_message.$el.attr('data-color', this.account.settings.get('color'));\n        this.chat_content.updateMessageInChat(msg, this.account.forwarded_messages.get(unique_id));\n        this.chat_content.initPopup(msg);\n        expanded_fwd_message.open(msg);\n    }\n});\n\nxabber.ChatsBase = Backbone.Collection.extend({\n    model: xabber.Chat\n});\n\nxabber.Chats = xabber.ChatsBase.extend({\n    initialize: function (models, options) {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    },\n\n    registerQuillEmbeddedsTags: function () {\n        let Inline = Quill.import('blots/inline'),\n            Image = Quill.import('formats/image');\n\n        class Mention extends Inline {\n            static create(paramValue) {\n                let node = super.create(), data, target;\n                if (paramValue.on_format){\n                    data = paramValue.data;\n                    target = paramValue.target;\n                } else {\n                    data = JSON.parse(paramValue);\n                    target = data.jid ? ('?jid=' + data.jid) : (data.id ?  ('?id=' + data.id) : \"\");\n                    node.innerHTML = data.nickname;\n                }\n                data.is_me && node.classList.add('ground-color-100');\n                node.setAttribute('data-target', target);\n                return node;\n            }\n\n            static value(node) {\n                return node.innerHTML;\n            }\n\n            static formats(node) {\n                return {\n                    on_format: true,\n                    data: {\n                        nickname: node.innerHTML,\n                        is_me: node.classList.contains(\"ground-color-100\")\n                    },\n                    target: node.getAttribute('data-target')\n                };\n            }\n        }\n        Mention.blotName = 'mention';\n        Mention.tagName = 'mention';\n        Mention.prototype.optimize = function () {};\n\n        Quill.register(Mention);\n    }\n});\n\nxabber.OpenedChats = xabber.ChatsBase.extend({\n    comparator: function (item1, item2) {\n        let t1 = item1.get('timestamp'),\n            t2 = item2.get('timestamp');\n        return t1 > t2 ? -1 : (t1 < t2 ? 1 : 0);\n    },\n\n    initialize: function (models, options) {\n        this.on(\"change:timestamp\", this.sort, this);\n    },\n\n    update: function (chat, event) {\n        let contains = chat.get('opened');\n        if (contains) {\n            if (!this.get(chat)) {\n                this.add(chat);\n                chat.trigger(\"add_opened_chat\", chat);\n            }\n        } else if (this.get(chat)) {\n            this.remove(chat);\n            chat.trigger(\"remove_opened_chat\", chat);\n        }\n    }\n});\n\nxabber.ClosedChats = xabber.ChatsBase.extend({\n    update: function (chat, event) {\n        let contains = !chat.get('opened');\n        if (contains) {\n            if (!this.get(chat)) {\n                this.add(chat);\n                chat.trigger(\"add_closed_chat\", chat);\n            }\n        } else if (this.get(chat)) {\n            this.remove(chat);\n            chat.trigger(\"remove_closed_chat\", chat);\n        }\n    }\n});\n\nxabber.AccountChats = xabber.ChatsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.mam_requests = 0;\n        this.deferred_mam_requests = [];\n        this.account.contacts.on(\"open_chat\", this.openChat, this);\n        this.account.contacts.on(\"open_mention\", this.openMention, this);\n        this.account.contacts.on(\"presence\", this.onPresence, this);\n        this.account.contacts.on(\"roster_push\", this.onRosterPush, this);\n    },\n\n    getSavedChat: function () {\n      let jid = this.account.get('jid'),\n          attrs = {jid: jid, type: 'saved', name: xabber.getString(\"saved_messages__header\"), id: `${jid}:saved`},\n          chat = this.get(attrs.id);\n        if (!chat) {\n            chat = xabber.chats.create(attrs, {account: this.account});\n            this.add(chat);\n            chat.trigger(\"load_last_history\");\n        }\n        return chat;\n    },\n\n    getChat: function (contact, identifier, sync_created) {\n        let attrs = null,\n            id = identifier && `${contact.hash_id}:${identifier}`,\n            chat = id ? this.get(id) : this.get(contact.hash_id);\n        if (id)\n            attrs = {id};\n        if (identifier === 'encrypted')\n            attrs.type = identifier;\n        if (!chat) {\n            chat = xabber.chats.create(attrs, {contact: contact, sync_created: sync_created});\n            this.add(chat);\n            contact.set('known', true);\n        }\n        return chat;\n    },\n\n    openChat: function (contact, options) {\n        options = options || {};\n        _.isUndefined(options.clear_search) && (options.clear_search = true);\n        let chat = this.getChat(contact, options.encrypted && 'encrypted');\n        if (options && options.force_opened_state){\n            chat.set('opened', true);\n            chat.set('timestamp', Date.now());\n        }\n        chat.trigger('open', {clear_search: options.clear_search, right_force_close: options.right_force_close});\n    },\n\n    openMention: function (contact, unique_id) {\n        let chat = this.getChat(contact);\n        xabber.body.setScreen('mentions', {right: 'mentions', chat_item: chat.item_view});\n        unique_id && chat.getMessageContext(unique_id, {mention: true});\n    },\n\n    registerMessageHandler: function () {\n        this.account.connection.deleteHandler(this._msg_handler);\n        this._msg_handler = this.account.connection.addHandler((message) => {\n            this.receiveMessage(message);\n            return true;\n        }, null, 'message');\n    },\n\n    onStartedMAMRequest : function (deferred) {\n        this.deferred_mam_requests.push(deferred);\n        this.runMAMRequests();\n    },\n\n    onCompletedMAMRequest: function (deferred) {\n        this.mam_requests--;\n        this.runMAMRequests();\n    },\n\n    runMAMRequests: function () {\n        while (this.mam_requests < xabber.settings.mam_requests_limit) {\n            let deferred = this.deferred_mam_requests.shift();\n            if (!deferred) break;\n            this.mam_requests++;\n            deferred.resolve();\n        }\n    },\n\n    parsePubSubNode: function (node) {\n        if (!node)\n            return null;\n        let is_member_id = node.indexOf('#');\n        if (is_member_id !== -1)\n            return node.slice(is_member_id + 1, node.length);\n        else\n            return null;\n    },\n\n    receivePubsubMessage: function ($message) {\n        let photo_id =  $message.find('info').attr('id'),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            node = $message.find('items').attr('node');\n        if (node.indexOf(Strophe.NS.OMEMO) > -1)\n            return;\n        if (node.indexOf(Strophe.NS.PUBSUB_AVATAR_METADATA) > -1) {\n            let member_id = this.parsePubSubNode(node),\n                photo_url =  $message.find('info').attr('url'),\n                contact = this.account.contacts.get(from_jid);\n            if (contact) {\n                if (member_id) {\n                    if (contact.my_info) {\n                        if ((member_id == contact.my_info.get('id')) && (photo_id == contact.my_info.get('avatar'))) {\n                            contact.trigger('update_my_info');\n                            return;\n                        }\n                    }\n                    if (photo_id && (this.account.chat_settings.getHashAvatar(member_id) != photo_id)) {\n                        let member_node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + member_id;\n                        contact.getAvatar(photo_id, member_node, (new_avatar) => {\n                                this.account.chat_settings.updateCachedAvatars(member_id, photo_id, new_avatar);\n                                if (contact.my_info) {\n                                    if (member_id == contact.my_info.id) {\n                                        contact.my_info.set({avatar: photo_id, b64_avatar: new_avatar});\n                                        contact.trigger('update_my_info');\n                                    }\n                                }\n                                let participant = contact.participants && contact.participants.get(member_id);\n                                if (participant) {\n                                    let avatar_url = $message.find('info').attr('url');\n                                    participant.set({avatar: photo_id, b64_avatar: new_avatar});\n                                    avatar_url && participant.set('avatar_url', avatar_url);\n                                    this.account.groupchat_settings.updateParticipant(contact.get('jid'), participant.attributes);\n                                }\n                            }, () => {\n                                if (photo_url) {\n                                    this.account.chat_settings.updateCachedAvatars(member_id, photo_id, photo_url);\n                                    if (contact.my_info) {\n                                        if (member_id == contact.my_info.id) {\n                                            contact.my_info.set({avatar: photo_id, b64_avatar: photo_url});\n                                            contact.trigger('update_my_info');\n                                        }\n                                    }\n                                    let participant = contact.participants && contact.participants.get(member_id);\n                                    if (participant) {\n                                        participant.set({avatar: photo_id, b64_avatar: photo_url});\n                                        this.account.groupchat_settings.updateParticipant(contact.get('jid'), participant.attributes);\n                                    }\n                                    return;\n                                }\n                            });\n                    }\n                }\n                else if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.PUBSUB_AVATAR) {\n                    if (!photo_id) {\n                        let image = Images.getDefaultAvatar(contact.get('name'));\n                        contact.cached_image = Images.getCachedImage(image);\n                        contact.set('avatar_priority', constants.AVATAR_PRIORITIES.PUBSUB_AVATAR);\n                        contact.set('photo_hash', null);\n                        contact.set('image', image);\n                        contact.updateCachedInfo();\n                        return;\n                    }\n                    if ((photo_id !== \"\") && (contact.get('photo_hash') === photo_id)) {\n                        return;\n                    } else if (photo_url) {\n                        contact.cached_image = photo_url;\n                        contact.set({photo_hash: photo_id, image: photo_url, avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR});\n                    }\n                    contact.getAvatar(photo_id, Strophe.NS.PUBSUB_AVATAR_DATA, (data_avatar) => {\n                        contact.cached_image = Images.getCachedImage(data_avatar);\n                        contact.set('avatar_priority', constants.AVATAR_PRIORITIES.PUBSUB_AVATAR);\n                        contact.set('photo_hash', photo_id);\n                        contact.set('image', data_avatar);\n                        contact.updateCachedInfo();\n                    });\n                }\n            }\n            else if (from_jid === this.account.get('jid')) {\n                if (photo_url) {\n                    let avatar_attrs = {photo_hash: photo_id, image: photo_url, avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR};\n                    this.account.cached_image = photo_url;\n                    this.account.save(avatar_attrs);\n                    return;\n                }\n                if (!photo_id) {\n                    let image = Images.getDefaultAvatar(this.account.get('name'));\n                    this.account.cached_image = Images.getCachedImage(image);\n                    let avatar_attrs = {avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR, image: image};\n                    this.account.save(avatar_attrs);\n                    return;\n                }\n                this.account.getAvatar(photo_id, (data_avatar) => {\n                    this.account.cached_image = Images.getCachedImage(data_avatar);\n                    let avatar_attrs = {avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR, image: data_avatar};\n                    this.account.save(avatar_attrs);\n                });\n            }\n        }\n    },\n\n    receiveMessage: function (message) {\n        let $message = $(message),\n            type = $message.attr('type'),\n            $mam = $message.find(`result[xmlns=\"${Strophe.NS.MAM}\"]`);\n        if (this.account.connection.do_synchronization && Strophe.getBareJidFromJid($(message).attr('from')) !== this.account.get('jid')) {\n            let time = $message.children('time').attr('stamp') || $message.children('delay').attr('stamp'),\n                timestamp = Number(moment(time));\n            (timestamp > this.account.last_msg_timestamp) && (this.account.last_msg_timestamp = timestamp);\n        }\n        if (type === 'headline') {\n            return this.receiveHeadlineMessage(message);\n        }\n        if (type === 'chat' || (type === 'normal') || (!type && !$mam.length)) {\n            return this.receiveChatMessage(message);\n        }\n        if (type === 'error') {\n            return this.receiveErrorMessage(message);\n        }\n    },\n\n    receiveHeadlineMessage: function (message) {\n        let $message = $(message),\n            msg_from = Strophe.getBareJidFromJid($message.attr('from')),\n            $stanza_received = $message.find(`received[xmlns=\"${Strophe.NS.DELIVERY}\"]`),\n            $echo_msg = $message.children(`x[xmlns=\"${Strophe.NS.DELIVERY}\"]`).children('message');\n        if ($stanza_received.length) {\n            let stanza_id = $stanza_received.children('stanza-id').attr('id'),\n                origin_msg_id = $stanza_received.children('origin-id').first().attr('id');\n            if (origin_msg_id) {\n                let msg = this.account.messages.get(origin_msg_id || stanza_id),\n                    delivered_time = $stanza_received.children('time').attr('stamp') || moment(stanza_id/1000).format();\n                if (!msg)\n                    return;\n                let pending_message = this.account._pending_messages.find(msg => msg.unique_id == (origin_msg_id || stanza_id));\n                if (!pending_message)\n                    return;\n                let chat = this.account.chats.get(pending_message.chat_hash_id);\n                if (chat && chat.get('group_chat'))\n                    return;\n                if (!msg.get('stanza_id') && msg.get('locations'))\n                    msg.set({'stanza_id': stanza_id})\n                msg.set({'state': constants.MSG_SENT, 'time': delivered_time, 'timestamp': Number(moment(delivered_time))}); // delivery receipt, changing on server time\n                chat.setStanzaId(pending_message.unique_id, stanza_id);\n                this.account._pending_messages.splice(this.account._pending_messages.indexOf(pending_message), 1);\n            }\n            return;\n        }\n\n        if ($echo_msg.length) {\n            console.log(this.account._pending_messages);\n            console.log(this.account._pending_messages.length);\n            let origin_msg_id = $echo_msg.children('origin-id').first().attr('id'),\n                pending_message = this.account._pending_messages.find(msg => msg.unique_id == origin_msg_id);\n            if (pending_message) {\n                this.account._pending_messages.splice(this.account._pending_messages.indexOf(pending_message), 1);\n            }\n            console.log(this.account._pending_messages.length);\n            return this.receiveChatMessage($echo_msg[0], {echo_msg: true, stanza_id: $echo_msg.children('stanza-id').attr('id')});\n        }\n\n        let $token_revoke = $message.children(`revoke[xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`);\n        if ($token_revoke.length) {\n            $token_revoke.children('device').each((idx, token) => {\n                let $token = $(token),\n                    token_uid = $token.attr('id');\n                if (!token_uid)\n                    return;\n                if (this.account.get('x_token') && this.account.get('x_token').token_uid === token_uid) {\n                    this.account.deleteAccount();\n                    return;\n                }\n                if (this.account.x_tokens_list) {\n                    let token = this.account.x_tokens_list.find(token => token.token_uid == token_uid),\n                        token_idx = token ? this.account.x_tokens_list.indexOf(token) : -1;\n                    (token_idx > -1) && this.account.x_tokens_list.splice(token_idx, 1);\n                }\n            });\n            this.account.settings_right && this.account.settings_right.updateXTokens();\n            return;\n        }\n\n        if ($message.find(`event[xmlns=\"${Strophe.NS.PUBSUB}#event\"]`).length) {\n            this.receivePubsubMessage($message);\n            return;\n        }\n\n        let contact = this.account.contacts.get(msg_from), chat;\n        if (contact) {\n            contact && (chat = this.account.chats.getChat(contact));\n            if (!chat.item_view.content)\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        }\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            if (!contact)\n                return;\n            let participant_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n            if (participant_version && contact.participants && contact.participants.version < participant_version)\n                contact.trigger('update_participants');\n        }\n\n        if ($message.children(`attention[xmlns=\"${Strophe.NS.ATTENTION}\"]`).length && xabber.settings.call_attention) {\n            if (!chat)\n                return;\n            return chat.messages.createSystemMessage({from_jid: msg_from, message: xabber.getString(\"action_attention_requested\"), attention: true});\n        }\n\n        if ($message.find(`replace[xmlns=\"${Strophe.NS.REWRITE}#notify\"]`).length) {\n            !contact && (contact = this.account.contacts.get($message.find('replace').attr('conversation'))) && (chat = this.account.chats.getChat(contact));\n            if ($message.find('replace').attr('conversation') === this.account.get('jid'))\n                chat = this.getSavedChat();\n            if (!chat)\n                return;\n            let stanza_id = $message.find('replace').attr('id'),\n                msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id),\n                active_right_screen = xabber.body.screen.get('right'),\n                participant_messages = active_right_screen === 'participant_messages' && this.account.participant_messages || active_right_screen === 'message_context' && this.account.context_messages || active_right_screen === 'searched_messages' && this.account.searched_messages || [],\n                participant_msg_item = participant_messages.find(msg => msg.get('stanza_id') == stanza_id);\n            this.receiveChatMessage($message, {replaced: true});\n            if (participant_msg_item) {\n                participant_msg_item.set('last_replace_time', $message.find('replaced').last().attr('stamp'));\n            }\n            if (msg_item) {\n                msg_item.set('last_replace_time', $message.find('replaced').last().attr('stamp'));\n                if (contact && contact.get('pinned_message'))\n                    if (contact.get('pinned_message').get('unique_id') === msg_item.get('unique_id')) {\n                        contact.get('pinned_message').set('message', msg_item.get('message'));\n                        if (!chat.item_view.content)\n                            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                        chat.item_view.content.updatePinnedMessage();\n                    }\n                chat && chat.item_view.updateLastMessage(chat.last_message);\n            }\n        }\n        if ($message.find('retract-message').length) {\n            let is_encrypted = $message.find('retract-message').attr('type') == Strophe.NS.OMEMO;\n            !contact && (contact = this.account.contacts.get($message.find('retract-message').attr('conversation'))) && (chat = this.account.chats.getChat(contact,  is_encrypted && 'encrypted'));\n            if ($message.find('retract-message').attr('conversation') === this.account.get('jid'))\n                chat = this.getSavedChat();\n            if (!chat)\n                return;\n            let $retracted_msg = $message.find('retract-message'),\n                retracted_msg_id = $retracted_msg.attr('id'),\n                retract_version = $retracted_msg.attr('version'),\n                msg_item = chat.messages.find(msg => msg.get('stanza_id') == retracted_msg_id || msg.get('contact_stanza_id') == retracted_msg_id);\n            chat.retracted_msg_id_list.push(retracted_msg_id);\n            if (msg_item) {\n                msg_item.set('is_unread', false);\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.removeMessage(msg_item);\n                chat.item_view.updateLastMessage(chat.last_message);\n            }\n            if (!chat.get('group_chat') && retract_version > this.account.retraction_version) {\n                this.account.retraction_version = retract_version;\n            }\n        }\n        if ($message.find('retract-user').length) {\n            let $retracted_user_msgs = $message.find('retract-user'),\n                retracted_user_id = $retracted_user_msgs.attr('id'),\n                msg_item = chat.messages.filter(msg => msg.get('user_info') && (msg.get('user_info').id == retracted_user_id));\n            if (msg_item)\n                $(msg_item).each((idx, item) => {\n                    item.set('is_unread', false);\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.removeMessage(item);\n                });\n            chat.item_view.updateLastMessage(chat.last_message);\n        }\n        if ($message.find('retract-all').length) {\n            !contact && (contact = this.account.contacts.get($message.find('retract-all').attr('conversation'))) && (chat = this.getChat(contact, $message.find('retract-all').attr('type') == 'encrypted' && 'encrypted'));\n            if (!chat)\n                return;\n            let all_messages = chat.messages.models;\n            $(all_messages).each((idx, item) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.removeMessage(item);\n            });\n            chat.item_view.updateLastMessage();\n        }\n        return;\n    },\n\n    receiveStanzaId: function ($message, options) {\n        options.replaced && ($message = $message.children('replace').children('message'));\n        let $stanza_id, $contact_stanza_id, attrs = {},\n            from_bare_jid = options.from_bare_jid;\n            $message.children('stanza-id').each((idx, stanza_id) => {\n            stanza_id = $(stanza_id);\n            if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length && !($message.find(`invite[xmlns=\"${Strophe.NS.GROUP_CHAT_INVITE_HTTP}\"]`).length || $message.find(`invite[xmlns=\"${Strophe.NS.GROUP_CHAT_INVITE}\"]`).length)) {\n                if (stanza_id.attr('by') === from_bare_jid) {\n                    $stanza_id = stanza_id;\n                    $contact_stanza_id = stanza_id;\n                }\n                else\n                    $stanza_id = stanza_id;\n            }\n            else {\n                if (stanza_id.attr('by') === this.account.get('jid'))\n                    $stanza_id = stanza_id;\n                else\n                    $contact_stanza_id = stanza_id;\n            }\n        });\n        $stanza_id && (attrs.stanza_id = $stanza_id.attr('id'));\n        $contact_stanza_id && (attrs.contact_stanza_id = $contact_stanza_id.attr('id'));\n        return attrs;\n    },\n\n    receiveChatMessage: function (message, options) {\n        options = options || {};\n        let $message = $(message),\n            $forwarded = $message.find('forwarded'),\n            $delay = options.delay,\n            to_jid = $message.attr('to'),\n            to_bare_jid = Strophe.getBareJidFromJid(to_jid),\n            to_resource = to_jid && Strophe.getResourceFromJid(to_jid),\n            from_jid = $message.attr('from') || options.from_jid;\n\n        if ($message.children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length && !options.forwarded) {\n            if (this.account.omemo)\n                this.account.omemo.receiveChatMessage(message, options);\n            return;\n        }\n\n        if ($message.find('invite').length) {\n            if (options.forwarded)\n                return;\n        }\n\n        if (!from_jid) {\n            from_jid = this.account.get('jid');\n        }\n        let from_bare_jid = Strophe.getBareJidFromJid(from_jid),\n            is_sender = from_bare_jid === this.account.get('jid');\n\n        if (options.forwarded && (!$forwarded.length || (options.xml))) {\n            return this.account.forwarded_messages.createFromStanza($message, {\n                is_forwarded: true,\n                forwarded_message: options.forwarded_message || null,\n                delay: $delay,\n                replaced: options.replaced,\n                from_jid: from_jid,\n                xml: options.xml\n            });\n        }\n\n        if ($forwarded.length && !options.xml) {\n            let $mam = $message.find(`result[xmlns=\"${Strophe.NS.MAM}\"]`);\n            if ($mam.length) {\n                if (!Object.keys(options).length)\n                    return;\n                $forwarded = $mam.children('forwarded');\n                if ($forwarded.length) {\n                    $message = $forwarded.children('message');\n                    $delay = $forwarded.children('delay');\n                }\n                let stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid});\n                return this.receiveChatMessage($message[0], _.extend(options, {\n                    is_mam: true,\n                    delay: $delay,\n                    stanza_id: stanza_ids.stanza_id || $mam.attr('id'),\n                    contact_stanza_id: stanza_ids.contact_stanza_id\n                }));\n            }\n            let $carbons = $message.find(`[xmlns=\"${Strophe.NS.CARBONS}\"]`);\n            if (!options.carbon_copied && $carbons.length && ['received', 'sent'].includes($carbons[0].tagName)) {\n                if ($message.find('invite').length) {\n                    if ($carbons[0].tagName === 'sent')\n                        return;\n                }\n                if (!is_sender)\n                    return;\n                $forwarded = $carbons.children('forwarded');\n                if ($forwarded.length)\n                    $message = $forwarded.children('message');\n                if ($carbons.find(`request[xmlns=\"${Strophe.NS.DELIVERY}\"][to=\"${to_bare_jid}\"]`).length)\n                    return;\n                if (this.account.fast_connection && ($message.attr('from') === this.account.fast_connection.jid))\n                    return;\n                return this.receiveChatMessage($message[0], _.extend(options, {\n                    carbon_copied: true, carbon_direction: $carbons[0].tagName\n                }));\n            }\n            let forwarded_msgs = [];\n            $forwarded = $message.children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n                $message.children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).children('forwarded[xmlns=\"' + Strophe.NS.FORWARD + '\"]') :\n                $message.children('envelope').children('content').children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).children('forwarded[xmlns=\"' + Strophe.NS.FORWARD + '\"]');\n            $forwarded.each((idx, forwarded_msg) => {\n                let $forwarded_msg = $(forwarded_msg),\n                    $forwarded_message = $forwarded_msg.children('message'),\n                    $forwarded_delay = $forwarded_msg.children('delay');\n                let forwarded_message = this.receiveChatMessage($forwarded_message[0], {\n                    forwarded: true,\n                    pinned_message: options.pinned_message,\n                    participant_message: options.participant_message,\n                    searched_message: options.searched_message,\n                    is_searched: options.is_searched,\n                    context_message: options.context_message,\n                    from_jid: from_jid,\n                    delay: $forwarded_delay\n                });\n                forwarded_msgs.push(forwarded_message);\n            });\n            if (!Object.keys(options).length && !forwarded_msgs.length)\n                return;\n            return this.receiveChatMessage($message[0], _.extend({\n                forwarded_message: forwarded_msgs.length ? forwarded_msgs : null,\n                xml: $message[0]\n            }, options));\n        }\n\n        if (!options.is_mam && to_resource && to_resource !== this.account.resource) {\n            xabber.warn('Message to another resource');\n            xabber.warn(message);\n        }\n\n        let contact_jid = is_sender ? to_bare_jid : from_bare_jid;\n        options.replaced && (contact_jid = $message.children('replace').attr('conversation'));\n\n        if (contact_jid === this.account.get('jid')) {\n            if (options.carbon_copied && options.carbon_direction === 'sent' || !options.carbon_copied) {\n                let chat = this.getSavedChat(),\n                    stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid, carbon_copied: options.carbon_copied, replaced: options.replaced});\n                return chat.receiveMessage($message, _.extend(options, {is_sender: is_sender, stanza_id: stanza_ids.stanza_id, contact_stanza_id: stanza_ids.contact_stanza_id}));\n            } else {\n                xabber.warn('Message from me to me');\n                xabber.warn(message);\n                return;\n            }\n        }\n\n        let contact = this.account.contacts.mergeContact(contact_jid),\n            chat = this.account.chats.getChat(contact, (options.encrypted || options.not_encrypted) && 'encrypted'),\n            stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid, carbon_copied: options.carbon_copied, replaced: options.replaced});\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            if (!contact)\n                return;\n            let participant_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n            if (participant_version && contact.participants && contact.participants.version < participant_version){\n                if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length && chat.contact.get('pinned_message')){\n                    $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '#system-message\"]').each((idx, x_elem) => {\n                        let $user = $(x_elem).children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).first();\n                        if ($user.length) {\n                            let user_id = $user.attr('id'),\n                                user_jid = $user.children('jid').text();\n                            if (chat.contact.get('pinned_message').get('from_jid') === user_jid) {\n                                let pinned_message = chat.contact.get('pinned_message'),\n                                    user_info = {\n                                        id: user_id,\n                                        jid: user_jid,\n                                        nickname: $user.children('nickname').text() || user_jid || user_id,\n                                        role: $user.children('role').text(),\n                                        avatar: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('id'),\n                                        avatar_url: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('url'),\n                                        badge: $user.children('badge').text()\n                                    };\n                                pinned_message.set('user_info', user_info);\n                                chat.contact.set('pinned_message', pinned_message);\n                            }\n                        }\n                    });\n                }\n            }\n        }\n        if (chat.contact.get('group_chat') && options.carbon_direction === 'sent' && !$message.children(`[xmlns=\"${Strophe.NS.CHAT_MARKERS}\"]`).length)\n            return;\n\n\n        if (chat && chat.get('encrypted') && options.encrypted && !options.synced_msg && !options.is_archived){\n            if ($message.find('[xmlns=\"' + Strophe.NS.EPHEMERAL + '\"]').length){\n                chat.set('chat_ephemeral_timer', $message.find('[xmlns=\"' + Strophe.NS.EPHEMERAL + '\"]').attr('timer'));\n            } else {\n                chat.set('chat_ephemeral_timer', null);\n            }\n        }\n\n        return chat.receiveMessage($message, _.extend(options, {is_sender: is_sender, stanza_id: stanza_ids.stanza_id, contact_stanza_id: stanza_ids.contact_stanza_id}));\n    },\n\n    receiveErrorMessage: function (message) {\n        let msgid = message.getAttribute('id'),\n            origin_id = $(message).children('origin-id').attr('id');\n        if (msgid) {\n            let code = $(message).find('error').attr('code'),\n                msg = this.account.messages.get(origin_id || msgid);\n            if (msg) {\n                if (code === '405') {\n                    msg.set('state', constants.MSG_BLOCKED);\n                }\n                if (code === '406') {\n                    msg.set('state', constants.MSG_ERROR);\n                }\n            }\n        }\n    },\n\n    onPresence: function (contact, type) {\n        let chat = this.getChat(contact);\n        chat.onPresence(type);\n    },\n\n    onRosterPush: function (contact, type) {\n        let chat = this.getChat(contact);\n        chat.onRosterPush(type);\n    }\n});\n\nxabber.AddGroupChatView = xabber.SearchView.extend({\n    className: 'modal main-modal add-group-chat-modal add-contact-modal',\n    template: templates.group_chats.add_group_chat,\n    avatar_size: constants.AVATAR_SIZES.ACCOUNT_ITEM,\n    ps_selector: '.rich-textarea',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .dropdown-content#select-account-for-creating-groupchat\": \"selectAccount\",\n        \"click .btn-add\": \"addGroupChat\",\n        \"keyup .input-group-chat-name input\": \"updateGroupJid\",\n        \"keyup .rich-textarea\": \"showPlaceholder\",\n        \"keyup .input-group-chat-jid input\": \"fixJid\",\n        \"click .btn-cancel\": \"close\",\n        \"click .property-variant\": \"changePropertyValue\"\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        this.setDefaultSettings(options);\n        let accounts = options.account ? [options.account] : xabber.accounts.connected;\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.dropdown-content#select-account-for-creating-groupchat').empty();\n        _.each(accounts, (account) => {\n            this.$('.dropdown-content#select-account-for-creating-groupchat').append(\n                    this.renderAccountItem(account));\n        });\n        this.$('.account-dropdown-wrap').hideIf(accounts.length < 2)\n        this.bindAccount(accounts[0]);\n        this.$('.btn-cancel').text(this.is_login ? xabber.getString(\"skip\") : xabber.getString(\"cancel\"));\n        this.$el.openModal({\n            ready: () => {\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                };\n                Materialize.updateTextFields();\n                this.$('.account-dropdown-wrap').dropdown(dropdown_settings);\n                this.$('.property-field .dropdown-button').dropdown(dropdown_settings);\n                this.$('.property-field .select-xmpp-server .caret').dropdown(dropdown_settings);\n                this.$('.property-field .select-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n                this.$('input[name=\"chat_name\"]').focus();\n            },\n            complete: this.close.bind(this)\n        });\n\n    },\n\n    setDefaultSettings: function (options) {\n        this.$('.incognito-field .public-item-wrap').showIf(options.public);\n        this.$('.incognito-field .incognito-item-wrap').showIf(options.incognito);\n        if (options.public)\n            this.$('.modal-header span').text(xabber.getString(\"create_group\"));\n        if (options.incognito)\n            this.$('.modal-header span').text(xabber.getString(\"create_incognito_group\"));\n        this.$('input[name=chat_jid]').removeClass('fixed-jid').val(\"\");\n        this.$('#new_chat_domain').val(\"\");\n        this.$('input[name=chat_name]').val(\"\");\n        this.$('.description-field .rich-textarea').text(\"\");\n        this.$('.btn-add').addClass('non-active');\n        this.showPlaceholder();\n        this.$('span.errors').text('').addClass('hidden');\n        this.$('input').removeClass('invalid');\n        let $global_wrap = this.$('.global-dropdown-wrap'),\n            default_global_value = $global_wrap.find('.dropdown-content .default-value');\n        $global_wrap.find('.global-item-wrap .property-value').attr('data-value', default_global_value.attr('data-value')).text(default_global_value.text());\n        let $membership_wrap = this.$('.membership-dropdown-wrap'),\n            default_membership_value = $membership_wrap.find('.dropdown-content .default-value');\n        $membership_wrap.find('.membership-item-wrap .property-value').attr('data-value', default_membership_value.attr('data-value')).text(default_membership_value.text());\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.input-group-chat-domain').addClass('hidden');\n        this.$('.account-dropdown-wrap .dropdown-button .account-item-wrap')\n                .replaceWith(this.renderAccountItem(account));\n        let all_servers = this.account.get('groupchat_servers_list');\n        all_servers = all_servers.sort((x,y) => { return x == this.account.domain ? -1 : y == this.account.domain ? 1 : 0; })\n        if (all_servers.length){\n            this.$('.xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n            this.$('.select-xmpp-server .caret').removeClass('hidden')\n            this.$('.xmpp-server-item-wrap .property-value').removeClass('hidden')\n        }\n        else\n            this.setCustomDomain(this.$('.property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.modal-content .jid-field .set-default-domain').remove();\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'}).text(all_servers[i]).insertBefore(this.$('.modal-content .jid-field .set-custom-domain'));\n        }\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.add_chat_account_item({jid: account.get('jid'), name: account.get('name')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    setCustomDomain: function ($property_value) {\n        this.$('#new_chat_domain').val(\"\");\n        this.$('.select-xmpp-server .caret').addClass('hidden');\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.input-group-chat-domain').removeClass('hidden');\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomain($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.input-group-chat-domain').addClass('hidden');\n            this.$('#new_chat_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-xmpp-server .caret').removeClass('hidden')\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateGroupJid: function () {\n        let elem = this.$('input[name=chat_jid]');\n        if (!elem.hasClass('fixed-jid')) {\n            let text = slug(this.$('.input-group-chat-name input').get(0).value, {lower: true});\n            this.$(\"label[for=new_chat_jid]\").addClass('active');\n            this.$('.input-field #new_chat_jid').get(0).value = text;\n        }\n        this.$('.btn-add').switchClass('non-active', !this.$('.input-group-chat-name input').get(0).value);\n    },\n\n    showPlaceholder: function () {\n        let textarea_is_empty = (this.$('.rich-textarea ').text() !== \"\") ? false : true;\n        this.$('.rich-textarea-wrap .placeholder').hideIf(!textarea_is_empty);\n    },\n\n    fixJid: function () {\n        let elem = this.$('input[name=chat_jid]');\n        !elem.hasClass('fixed-jid') && elem.addClass('fixed-jid');\n        (elem.get(0).value == \"\") && elem.removeClass('fixed-jid');\n    },\n\n    createGroupChat: function () {\n        let name = this.$('input[name=chat_name]').val(),\n            chat_jid = this.$('input[name=chat_jid]').val() ? this.$('input[name=chat_jid]').val() : undefined,\n            privacy = this.$('.incognito-field .property-wrap:not(.hidden) .property-value').attr('data-value'),\n            domain = this.$('#new_chat_domain').val() || this.$('.xmpp-server-dropdown-wrap .property-value').text(),\n            searchable = this.$('input[name=\"group_index\"]:checked').attr('data-value'),\n            description = this.$('.description-field .rich-textarea').text() || \"\",\n            model = this.$('input[name=\"group_membership\"]:checked').attr('data-value'),\n            iq = $iq({type: 'set', to: domain}).c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#create'})\n                .c('name').t(name).up()\n                .c('privacy').t(privacy).up()\n                .c('index').t(searchable).up()\n                .c('description').t(description).up()\n                .c('membership').t(model).up();\n            if (chat_jid)\n                iq.c('localpart').t(chat_jid);\n        this.account.sendIQFast(iq, (iq) => {\n            let group_jid = $(iq).find('query localpart').text().trim() + '@' + $(iq).attr('from').trim(),\n                contact = this.account.contacts.mergeContact(group_jid);\n            contact.set('group_chat', true);\n            contact.set('subscription_preapproved', true);\n            contact.pres('subscribed');\n            contact.set('known', true);\n            contact.set('removed', false);\n            setTimeout(() => {\n                contact.pres('subscribe');\n            }, 500);\n            this.close();\n            xabber.chats_view.updateScreenAllChats();\n            contact.trigger(\"open_chat\", contact);\n            if (!(this.account.connection && this.account.connection.do_synchronization)) {\n                let iq_set_blocking = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n                    .c('item', {jid: group_jid + '/' + moment.now()});\n                this.account.sendIQFast(iq_set_blocking);\n            }\n\n        }, () => {\n            this.$('span.errors').removeClass('hidden').text(xabber.getString(\"groupchat_jid_already_exists\"));\n            this.$('input[name=\"chat_jid\"]').addClass('invalid');\n        });\n    },\n\n    addGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            $(ev.target).blur();\n            return;\n        }\n        let xmpp_server = this.$('#new_chat_domain').val() || this.$('.xmpp-server-dropdown-wrap .property-value').text(),\n            input_value = this.$('input[name=chat_jid]').val();\n        if (this.$('input[name=chat_name]').val() == \"\") {\n            this.$('span.errors').text(xabber.getString(\"group_is_empty\")).removeClass('hidden');\n            this.$('input[name=\"chat_name\"]').addClass('invalid');\n        } else {\n            if ((input_value == \"\")||((input_value.search(/[А-яЁё]/) == -1)&&(input_value.search(/\\s/) == -1)&&(input_value != \"\"))) {\n                this.$('span.errors').text('').addClass('hidden');\n                this.$('input').removeClass('invalid');\n                let iq = $iq({type: 'get', to: xmpp_server}).c('query', {xmlns: Strophe.NS.DISCO_INFO}),\n                    group_chats_support;\n                this.account.sendIQFast(iq, (iq) => {\n                    $(iq).children('query').children('feature').each((elem, item) => {\n                        if ($(item).attr('var') == Strophe.NS.GROUP_CHAT)\n                            group_chats_support = true;\n                    });\n                    if (group_chats_support)\n                        this.createGroupChat();\n                    else {\n                        this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_server_does_not_support\")}`);\n                        this.$('input[name=\"chat_domain\"]').addClass('invalid');\n                    }\n                }, (response) => {\n                    this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_invalid_domain\")}`); // !!!!!!!!!!!!!!!!!! :::::\n                    this.$('input[name=\"chat_domain\"]').addClass('invalid');\n                });\n            }\n            else {\n                this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_localpart_invalid\")}`);\n                this.$('input[name=\"chat_jid\"]').addClass('invalid');\n            }\n        }\n    }\n});\n\nxabber.ChatsView = xabber.SearchPanelView.extend({\n    className: 'recent-chats-container container',\n    ps_selector: '.chat-list-wrap',\n    ps_settings: {theme: 'item-list'},\n    main_container: '.chat-list',\n    template: templates.chats_panel,\n\n    _initialize: function () {\n        this.active_chat = null;\n        this.model.on(\"add\", this.onChatAdded, this);\n        this.model.on(\"destroy\", this.onChatRemoved, this);\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"add_opened_chat\", this.onChangedActiveStatus, this);\n        this.model.on(\"change:unread\", this.onChangedReadStatus, this);\n        this.model.on(\"change:const_unread\", this.onChangedReadStatus, this);\n        this.model.on(\"change:timestamp\", this.updateChatPosition, this);\n        xabber.accounts.on(\"list_changed\", this.updateLeftIndicator, this);\n        let wheel_ev = this.defineMouseWheelEvent();\n        this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.$('.read-all-button').click(this.readAllMessages.bind(this));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        xabber.on(\"update_layout\", this.onWindowResized, this);\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    render: function (options) {\n        if (options.right === undefined)\n            this.active_chat = null;\n        this.$('.chat-list-wrap').switchClass('with-padding', xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').length);\n        if (options.right !== 'chat' && !options.no_unread && options.right !== 'searched_messages' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search) {\n            this.clearSearch();\n            if (xabber.toolbar_view.$('.active').hasClass('all-chats') && !xabber.toolbar_view.data.get('account_filtering')) {\n                this.showAllChats();\n            }\n        }\n    },\n\n    readAllMessages: function () {\n        let chats = this.model,\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (active_toolbar.hasClass('chats')) {\n            let private_chats = chats.filter(chat => chat.get('saved') || !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            private_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        if (active_toolbar.hasClass('all-chats')) {\n            let all_chats = chats.filter(chat => chat.get('saved') || chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            all_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        if (active_toolbar.hasClass('group-chats')) {\n            let group_chats = chats.filter(chat => chat.get('saved') || chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            group_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    onUpdatedScreen: function (name) {\n        this.$('.read-all-button').switchClass('hidden', !xabber.toolbar_view.$('.toolbar-item:not(.account-item):not(.toolbar-logo).active.unread').length);\n    },\n\n    // onWindowResized: function (options) {\n    //     options.size_changed && this.onScroll();\n    // },\n\n    defineMouseWheelEvent: function () {\n        if (!_.isUndefined(window.onwheel)) {\n            return \"wheel\";\n        } else if (!_.isUndefined(window.onmousewheel)) {\n            return \"mousewheel\";\n        } else {\n            return \"MozMousePixelScroll\";\n        }\n    },\n\n    onMouseWheel: function (ev) {\n        // if (ev.originalEvent.deltaY > 0)\n        //     this.onScroll();\n    },\n\n    hideChatsFeedback: function () {\n        clearTimeout(this._load_chats_timeout);\n        this.$('.load-chats-feedback').addClass('hidden');\n        this.updateScrollBar();\n        this._load_chats_timeout = null;\n    },\n\n    // onScroll: function () {\n    //     if (this.getScrollBottom() < 12 && !this._load_chats_timeout && this.isVisible()) {\n    //         this._load_chats_timeout = setTimeout(() => {\n    //             this.hideChatsFeedback();\n    //         }, 5000);\n    //         let accounts = xabber.accounts.connected.filter(account => !account.roster.conversations_loaded && account.connection && account.connection.do_synchronization);\n    //         if (accounts.length) {\n    //             this.$('.load-chats-feedback').text(xabber.getString(\"placeholder_loading\")).removeClass('hidden');\n    //             this.updateScrollBar();\n    //         }\n    //         accounts.forEach((account) => {\n    //             let options = {max: xabber.settings.mam_messages_limit};\n    //             account.roster.last_chat_msg_id && (options.after = account.roster.last_chat_msg_id);\n    //             account.roster.syncFromServer(options);\n    //         });\n    //     }\n    // },\n\n    updateLeftIndicator: function (accounts) {\n        this.$el.attr('data-indicator', accounts.connected.length > 1);\n    },\n\n    onChatAdded: function (chat) {\n        this.addChild(chat.id, chat.item_view);\n        this.updateChatPosition(chat);\n    },\n\n    onChatRemoved: function (chat, options) {\n        if (this.active_chat === this.child(chat.id)) {\n            this.active_chat = null;\n            xabber.body.showChatPlaceholder();\n        }\n        this.removeChild(chat.id, options);\n        this.updateScrollBar();\n    },\n\n    onChangedActiveStatus: function (chat) {\n        if (chat.get('active')) {\n            let previous_chat = this.active_chat;\n            this.active_chat = this.child(chat.id);\n            previous_chat && previous_chat.model.set('active', false);\n        }\n    },\n\n    onChangedReadStatus: function (item) {\n        let view = this.child(item.id),\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (!view)\n            return;\n        if (!active_toolbar.hasClass('unread') || (active_toolbar.hasClass('unread') && (item.get('unread') || item.get('const_unread'))))\n            return;\n        view.detach();\n        if (!this.$('.chat-item').length && active_toolbar.hasClass('unread')) {\n            active_toolbar.click();\n        }\n    },\n\n    replaceChatItem: function (item, chats, pinned_chats) {\n        let view = this.child(item.id);\n        if (view && item.get('pinned') && item.get('pinned') !== '0' && pinned_chats ){\n            pinned_chats = pinned_chats.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            let index = pinned_chats.indexOf(item);\n            if (index === 0) {\n                this.$('.pinned-chat-list').prepend(view.$el);\n            } else {\n                let $chat_item = this.$('.pinned-chat-list .chat-item').eq(index - 1);\n                while (!$chat_item.length && index > 0) {\n                    index--;\n                    $chat_item = this.$('.pinned-chat-list .chat-item').eq(index - 1);\n                }\n                $chat_item.after(view.$el);\n            }\n        }\n        else if (view && (item.get('timestamp') || item.get('saved'))) {\n            view.$el.detach();\n            let index = chats.indexOf(item);\n            if (index === 0) {\n                this.$('.chat-list').prepend(view.$el);\n            } else {\n                this.$('.chat-list .chat-item').eq(index - 1).after(view.$el);\n            }\n        }\n    },\n\n    updateChatPosition: function (item) {\n        let view = this.child(item.id),\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (!view)\n            return;\n        if (active_toolbar.hasClass('unread') && !(item.get('unread') || item.get('const_unread')))\n            return;\n        if (active_toolbar.hasClass('account-item') && view.account.get('jid') !== active_toolbar.attr('data-jid')){\n            return;\n        }\n        active_toolbar.hasClass('group-chats') && (view.model.get('saved') || view.contact.get('group_chat')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || chat.contact.get('group_chat') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || chat.contact.get('group_chat') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        active_toolbar.hasClass('chats') && (view.model.get('saved') || !view.contact.get('group_chat')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || !chat.contact.get('group_chat') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || !chat.contact.get('group_chat') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        (active_toolbar.hasClass('all-chats') || active_toolbar.hasClass('settings-modal') || (xabber.accounts.enabled.length === 1 && active_toolbar.hasClass('saved-chats'))) && (view.model.get('saved') || !view.model.get('archived')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        active_toolbar.hasClass('archive-chats') && (view.model.get('saved') || view.model.get('archived')) && this.replaceChatItem(item, this.model.filter(chat => chat.get('saved') || chat.get('archived')));\n        active_toolbar.hasClass('saved-chats') && (xabber.accounts.enabled.length !== 1) && (view.model.get('saved') && this.replaceChatItem(item, this.model.filter(chat => chat.get('saved'))));\n        active_toolbar.hasClass('mentions') && (view.model.get('saved') && this.replaceChatItem(item, this.model.filter(chat => (chat.get('jid') === chat.account.domain))));\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = this.child(selection.data('id'));\n                view && view.open();\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.getChat(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')));\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            view = this.child(selection.data('id'));\n            view && view.open();\n        }\n    },\n\n    openChat: function (view, options) {\n        if (!view.content)\n            view.content = new xabber.ChatContentView({chat_item: view});\n        options = options || {};\n        this.$('.list-item.active').removeClass('active');\n        view.updateActiveStatus();\n        let scrolled_top = xabber.chats_view.getScrollTop();\n        options.clear_search && this.clearSearch();\n        if (view.contact && !view.contact.get('in_roster') && (view.model.get('is_accepted') == false || (view.model.get('is_accepted') == true && view.contact.invitation))) {\n            if (view.model.get('is_accepted') == false){\n                view.model.set('display', true);\n                view.model.set('active', true);\n                xabber.body.setScreen('all-chats', {right: 'group_invitation', contact: view.contact });\n            } else if (view.model.get('is_accepted') == true && view.contact.invitation){\n                view.contact.invitation.join();\n            }\n        }\n        else {\n            if (xabber.toolbar_view.$('.active').hasClass('contacts'))\n                this.updateScreenAllChats();\n            if (!view.model.get('history_loaded')) {\n                if (\n                    (view.model.get('const_unread') || view.model.get('unread'))\n                    && view.model.get('last_read_msg') &&\n                    (!view.content._prev_scrolltop || (view.content._prev_scrolltop && view.content._is_scrolled_bottom) || (view.model.get('show_new_unread') === true))\n                    && !view.model.get('loading_unread_history') && !options.force_bottom && xabber.body.screen.get('chat_item') !== view\n                ){\n                    view.model.set('show_new_unread', false);\n                    view.model._wait_load_unread_history = new $.Deferred();\n                    setTimeout(() => {\n                        view.model._wait_load_unread_history.resolve();\n                    }, 10000)\n                    view.content._no_scrolling_event = true;\n                    view.content.loadUnreadHistory();\n                } else if (view.model.messages.length < 20)\n                    view.content.loadPreviousHistory();\n            }\n            if (!options.right_force_close && (\n                xabber.body.screen.get('right_contact') && (xabber.body.screen.get('right') === 'chat' || xabber.body.screen.get('right') === 'message_context' )\n            )) {\n                if (view.model.get('saved'))\n                    xabber.body.setScreen((options.screen || 'all-chats'), {right_contact: ''});\n                else if(xabber.right_contact_panel_saveable)\n                    view.contact.showDetailsRight('all-chats', {right_saved: true, encrypted: view.model.get('encrypted')});\n                else\n                    view.contact.showDetailsRight('all-chats', {right_saved: false});\n            }\n            if (!view.model.get('loading_unread_history')){\n                let current_scrolling = view.content.getScrollTop() || view.content._scrolltop,\n                    scrolled_to_bottom = view.content.isScrolledToBottom();\n                xabber.body.setScreen((options.screen || 'all-chats'), {\n                    right: 'chat',\n                    clear_search: options.clear_search,\n                    chat_item: view,\n                    blocked: view.model.get('blocked')\n                },{right_contact_save: options.right_contact_save, right_force_close: options.right_force_close} );\n                !scrolled_to_bottom && view.content.scrollTo(current_scrolling);\n            } else {\n                xabber.body.setScreen((options.screen || 'all-chats'), {\n                    right: 'chat',\n                    clear_search: options.clear_search,\n                    chat_item: view,\n                    show_placeholder: true,\n                    blocked: view.model.get('blocked')\n                },{right_contact_save: options.right_contact_save, right_force_close: options.right_force_close} );\n                view.model.set('active', true);\n                view.model._wait_load_unread_history.done(() => {\n                    if (xabber.body.screen.get('chat_item') === view) {\n                        view.model.set('loading_unread_history', false)\n                        xabber.body.setScreen((options.screen || 'all-chats'), {\n                            right: 'chat',\n                            clear_search: options.clear_search,\n                            chat_item: view,\n                            blocked: view.model.get('blocked')\n                        },{right_contact_save: options.right_contact_save, right_force_close: options.right_force_close} );\n                        view.content.scrollToUnread();\n                        view.content._long_reading_timeout = true;\n                        view.content._no_scrolling_event = false;\n                        view.content.onScroll();\n                        if (options.scroll_to_chat) {\n                            xabber.chats_view.scrollToChild(view.$el);\n                        } else {\n                            xabber.chats_view.scrollTo(scrolled_top);\n                        }\n                    }\n                });\n            }\n            if (view.contact && (!view.contact.get('vcard_updated') || (view.contact.get('group_chat') && !view.contact.get('group_info')) || (view.contact.get('vcard_updated') && !moment(view.contact.get('vcard_updated')).startOf('hour').isSame(moment().startOf('hour'))))) {\n                view.contact.getVCard();\n            }\n        }\n        if (options.scroll_to_chat) {\n            xabber.chats_view.scrollToChild(view.$el);\n        } else {\n            xabber.chats_view.scrollTo(scrolled_top);\n        }\n    },\n\n    showGroupChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = xabber.toolbar_view.$('.active.unread').length,\n            group_chats = [],\n            group_chats_pinned = [];\n        if (is_unread) {\n            group_chats = chats.filter(chat => chat.contact && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            group_chats_pinned = chats.filter(chat => chat.contact && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!group_chats.length && !group_chats_pinned.length) {\n            group_chats = chats.filter(chat => !chat.get('saved') && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            group_chats_pinned = chats.filter(chat => !chat.get('saved') && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        group_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (group_chats_pinned) {\n            group_chats_pinned = group_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            group_chats_pinned.forEach((chat) => {\n                let index = group_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = xabber.toolbar_view.$('.active.unread').length,\n            private_chats = [],\n            private_chats_pinned = [];\n        if (is_unread) {\n            private_chats = chats.filter(chat => chat.contact && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            private_chats_pinned = chats.filter(chat => chat.contact && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!private_chats.length && !private_chats_pinned.length) {\n            private_chats = chats.filter(chat => !chat.get('saved') && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            private_chats_pinned = chats.filter(chat => !chat.get('saved') && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        private_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (private_chats_pinned) {\n            private_chats_pinned = private_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            private_chats_pinned.forEach((chat) => {\n                let index = private_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showChatsByAccount: function (account) {\n        xabber.body.setScreen('all-chats');\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            account_chats = chats.filter(chat => ((chat.account.get('jid') === account.get('jid')) && (chat.get('saved') || chat.get('timestamp') && !chat.get('archived'))) && (chat.get('pinned') === '0' || !chat.get('pinned'))),\n            account_chats_pinned = chats.filter(chat => ((chat.account.get('jid') === account.get('jid')) && (chat.get('saved') || chat.get('timestamp') && !chat.get('archived'))) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        this.$(`.omemo-item:not([data-id=\"${account.get('jid')}\"])`).addClass('hidden');\n        account_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (account_chats_pinned) {\n            account_chats_pinned = account_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            account_chats_pinned.forEach((chat) => {\n                let index = account_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showArchiveChats: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            archive_chats = chats.filter(chat => !chat.get('saved') && chat.get('archived'));\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (xabber.toolbar_view.data.get('account_filtering'))\n            archive_chats = archive_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')));\n        archive_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n    },\n\n    showSavedChats: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            saved_chats = chats.filter(chat => chat.get('saved'));\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (xabber.toolbar_view.data.get('account_filtering'))\n            saved_chats = saved_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')));\n        saved_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n            this.$(`.chat-list .chat-item[data-id=\"${chat.id}\"] .chat-title`).text(chat.get('jid'));\n        });\n    },\n\n    showNotifications: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            notificatons_chats = chats.filter(chat => (chat.get('jid') === chat.account.domain || chat.contact && chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both' ));\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (xabber.toolbar_view.data.get('account_filtering'))\n            notificatons_chats = notificatons_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')));\n        notificatons_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n    },\n\n    showAllChats: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = no_unread || xabber.toolbar_view.data.get('account_filtering') ? false : xabber.toolbar_view.$('.active.unread').length,\n            all_chats = [],\n            all_chats_pinned = [];\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (is_unread) {\n            all_chats = chats.filter(chat => chat.contact && chat.get('timestamp') && !chat.get('archived') && chat.last_message && ((chat.get('unread') || chat.get('const_unread')) || (chat.contact.get('invitation') || (chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both'))) && (chat.get('pinned') === '0' || !chat.get('pinned')) );\n            all_chats_pinned = chats.filter(chat => chat.contact && chat.get('timestamp') && !chat.get('archived') && chat.last_message && ((chat.get('unread') || chat.get('const_unread')) || (chat.contact.get('invitation') || (chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both'))) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!all_chats.length && !all_chats_pinned.length) {\n            all_chats = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            all_chats_pinned = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        if (xabber.toolbar_view.data.get('account_filtering')){\n            all_chats = all_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')))\n            all_chats_pinned = all_chats_pinned.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')))\n        }\n        all_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (all_chats_pinned) {\n            all_chats_pinned = all_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            all_chats_pinned.forEach((chat) => {\n                let index = all_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    updateScreenAllChats: function () {\n        xabber.toolbar_view.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active')\n            .filter('.all-chats:not(.toolbar-logo)').addClass('active');\n        this.showAllChats();\n    }\n});\n\n  xabber.MessageItemView = xabber.BasicView.extend({\n      className: 'message-item list-item',\n      template: templates.message_item,\n      avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n      events: {\n          'click': 'openByClick'\n      },\n\n      _initialize: function () {\n          this.contact = this.model.contact;\n          this.account = this.contact ? this.contact.account : this.model.account;\n          this.$el.attr('data-id', this.model.id + '-' + this.cid);\n          this.$el.attr('data-contact-jid', this.contact.get('jid'));\n          this.updateName();\n          this.updateLastMessage();\n          this.updateAvatar();\n          this.updateColorScheme();\n          this.updateGroupChats();\n          this.updateIcon();\n          this.updateStatus();\n          this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n          this.contact.on(\"change:status\", this.updateStatus, this);\n          this.contact.on(\"change:name\", this.updateName, this);\n      },\n\n      updateName: function () {\n          this.$('.chat-title').text(this.contact.get('name'));\n      },\n\n      updateAvatar: function () {\n          let image = this.contact.cached_image;\n          this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n      },\n\n      updateStatus: function () {\n          let status = this.contact.get('status'),\n              status_message = this.contact.getStatusMessage();\n          this.$('.contact-status').attr('data-status', status);\n          this.$('.chat-icon').attr('data-status', status);\n          this.model.get('blocked') ? this.$('.contact-status-message').text(xabber.getString(\"action_contact_blocked\")) : this.$('.contact-status-message').text(status_message);\n      },\n\n      updateGroupChats: function () {\n          let is_group_chat = this.contact.get('group_chat');\n          this.$('.status').hideIf(is_group_chat);\n          this.updateIcon();\n          if (is_group_chat) {\n              this.$el.addClass('group-chat');\n              this.$('.chat-title').css('color', '#424242');\n              this.model.set('group_chat', true);\n          }\n      },\n\n      updateIcon: function () {\n          this.$('.chat-icon').addClass('hidden');\n          let ic_name = this.contact.getIcon();\n          ic_name && this.$('.chat-icon').removeClass('hidden').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n      },\n\n      updateColorScheme: function () {\n          let color = this.account.settings.get('color');\n          this.$el.attr('data-color', color);\n      },\n\n      updateLastMessage: function (msg) {\n          msg || (msg = this.model);\n          if (!msg)\n              return;\n          let msg_time = msg.get('time'),\n              timestamp = msg.get('timestamp'),\n              forwarded_message = msg.get('forwarded_message'),\n              msg_files = msg.get('files') || [],\n              msg_images = msg.get('images') || [],\n              msg_locations = msg.get('locations') || [],\n              msg_text = (forwarded_message) ? (msg.get('message') || xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText(),\n              msg_user_info = msg.get('user_info') || msg.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes || {}, msg_from = \"\";\n          msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n          this.model.set({timestamp: timestamp});\n          if (this.model.get('group_chat'))\n              msg_from = msg_user_info.nickname || msg_user_info.jid || (msg.isSenderMe() ? this.account.get('name') : msg.get('from_jid')) || \"\";\n          if (msg_files.length || msg_images.length || msg_locations.length) {\n              let $colored_span = $('<span class=\"text-color-500\"/>');\n              if (msg_files.length && msg_images.length)\n                  msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n              else {\n                  if (msg_files.length == 1 && (msg_files[0].is_audio || msg_files[0].voice))\n                      msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(msg_files[0].duration));\n                  else if (msg_files.length > 0) {\n                      let total_size = 0;\n                      msg_files.forEach((f) => {total_size+=Number(f.size)});\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                  }\n                  if (msg_images.length > 0) {\n                      let total_size = 0;\n                      msg_images.forEach((f) => {total_size+=Number(f.size)});\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                  }\n                  if (msg_locations.length > 0) {\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                  }\n              }\n              this.$('.last-msg').html(\"\").append(msg_from).append(msg_text);\n          }\n          else {\n              this.$('.last-msg').text(\"\").append(msg_text);\n              if (msg_from)\n                  this.$('.last-msg').prepend($('<span class=text-color-700>' + msg_from + ': ' + '</span>'));\n          }\n          this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n          this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n              .attr('title', pretty_datetime(msg_time));\n          this.$('.msg-delivering-state').showIf(msg.isSenderMe() && (msg.get('state') !== constants.MSG_ARCHIVED))\n              .attr('data-state', msg.getState());\n      },\n\n      openByClick: function () {\n          let chat = this.account.chats.getChat(this.contact);\n          this.$el.closest('.left-panel-list-wrap').find('.list-item').removeClass('active');\n          this.$el.addClass('active');\n          xabber.chats_view.openChat(chat.item_view, {right_contact_save: true, clear_search: false});\n          xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'message_context', model: chat });\n          if (xabber.right_contact_panel_saveable && xabber.body.screen.get('right_contact') && xabber.body.screen.get('right') === 'message_context') {\n              if (xabber.right_contact_panel_saveable)\n                  chat.contact.showDetailsRight('all-chats', {right_saved: true});\n              else\n                  chat.contact.showDetailsRight('all-chats', {right_saved: false});\n          }\n          this.model.get('unique_id') && chat.getMessageContext(this.model.get('unique_id'), {message: true});\n      }\n  });\n\n\n  xabber.ForwardPanelView = xabber.SearchView.extend({\n    className: 'modal dialog-modal forward-panel-modal',\n    template: templates.forward_panel,\n    ps_selector: '.chat-list-wrap',\n    ps_settings: {theme: 'item-list'},\n      events: {\n          \"keyup .search-input\": \"keyUpOnSearch\",\n          \"focusout .search-input\": \"clearSearchSelection\",\n          \"click .close-search-icon\": \"clearSearch\",\n          \"click .list-item\": \"onClickItem\"\n      },\n\n    open: function (messages, account) {\n        this.messages = messages;\n        this.account = account;\n        this.$('.chat-list-wrap .pinned-chat-list').html(\"\");\n        this.$('.chat-list-wrap .chat-list').html(\"\");\n        this.$('.chat-list-wrap .contact-list').html(\"\");\n        this.saved_chat = false;\n        let chats = xabber.chats_view.model,\n            all_chats = [],\n            all_chats_pinned = [];\n        if (!all_chats.length && !all_chats_pinned.length) {\n            all_chats = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            all_chats_pinned = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (all_chats_pinned) {\n            all_chats_pinned = all_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            all_chats_pinned.forEach((chat) => {\n                if (chat.account.get('jid') === this.account.get('jid')) {\n                    if (chat.id == `${this.account.get('jid')}:saved`) {\n                        let $cloned_item = chat.item_view.$el.clone().removeClass('hidden');\n                        $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n                        this.saved_chat = true;\n                        this.$('.chat-list-wrap .pinned-chat-list').prepend($cloned_item);\n                    } else\n                        this.$('.chat-list-wrap .pinned-chat-list').append(chat.item_view.$el.clone().removeClass('hidden'));\n                }\n            });\n        }\n        all_chats.forEach((chat) => {\n            if (chat.account.get('jid') === this.account.get('jid')) {\n                if (chat.id == `${this.account.get('jid')}:saved`) {\n                    let $cloned_item = chat.item_view.$el.clone().removeClass('hidden');\n                    $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n                    this.saved_chat = true;\n                    this.$('.chat-list-wrap .pinned-chat-list').prepend($cloned_item);\n                } else\n                    this.$('.chat-list-wrap .chat-list').append(chat.item_view.$el.clone().removeClass('hidden'));\n            }\n        });\n        if (!this.saved_chat) {\n            let saved_chat = this.account.chats.getSavedChat(),\n                $cloned_item = saved_chat.item_view.$el.clone();\n            $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n            this.$('.chat-list-wrap .pinned-chat-list').prepend($cloned_item);\n        }\n        this.$('.chat-list-wrap .pinned-chat-list').prepend($('<div/>', { class: 'forward-panel-list-title recent-chats-title hidden'}).text(xabber.getString(\"category_recent_chats\")));\n        this.$('.chat-list-wrap .chat-list').append($('<div/>', { class: 'forward-panel-list-title contacts-title hidden'}).text(xabber.getString(\"category_title_contacts\")));\n        this.$('.chat-item').removeClass('active');\n        this.clearSearch();\n        this.data.set('visible', true);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.search-input').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n            this.$el.detach();\n            this.data.set('visible', false);\n            deferred.resolve();\n        }});\n        return deferred.promise();\n    },\n\n    onClickItem: function (ev) {\n        let $target = $(ev.target).closest('.list-item');\n        this.onEnterPressed($target);\n    },\n\n    search: function (query) {\n        let jid, name, is_match = false, has_matches_chats = false, has_matches_contacts = false;\n        query = query.toLowerCase();\n        this.$('.roster-contact.list-item').remove();\n        query && this.account.roster.forEach((contact) => {\n            let jid = contact.get('jid'),\n                chat_id = contact.hash_id,\n                name = contact.get('name').toLowerCase(),\n                is_match = (name.indexOf(query) < 0 && jid.indexOf(query) < 0) ? true : false;\n            if (!is_match) {\n                if (!this.$('.chat-list-wrap .chat-item[data-id=\"' + chat_id + '\"]').length) {\n                    let contact_list_item = xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${this.account.get('jid')}\"] .roster-contact[data-jid=\"${jid}\"]`).first().clone();\n                    contact_list_item.find('.muted-icon').hide();\n                    this.$('.chat-list-wrap .contact-list').append(contact_list_item);\n                }\n                else\n                    is_match = true;\n            }\n            !is_match && (has_matches_contacts = true);\n        });\n        this.$('.contacts-title').switchClass('hidden', !has_matches_contacts);\n        this.$('.chat-item').each((idx, item) => {\n            let chat = this.account.chats.get($(item).data('id'));\n            if (!chat) {\n                $(item).addClass('hidden');\n                return;\n            }\n            jid = chat.get('jid');\n            name = (chat.contact ? chat.contact.get('name') : chat.get('name'));\n            if (name)\n                name = name.toLowerCase();\n            is_match = (!name || name && (name.indexOf(query) < 0 && jid.indexOf(query) < 0)) ? false : true;\n            $(item).hideIf(!is_match);\n            is_match && (has_matches_chats = true);\n        });\n        this.$('.recent-chats-title').switchClass('hidden', !has_matches_chats);\n        this.$('.modal-content .error').showIf(!has_matches_contacts && !has_matches_chats);\n        this.scrollToTop();\n    },\n\n    onEmptyQuery: function () {\n        this.$('.roster-contact.list-item').remove();\n        this.$('.contacts-title').addClass('hidden');\n        this.$('.modal-content .error').addClass('hidden');\n        this.$('.recent-chats-title').addClass('hidden');\n    },\n\n    onEnterPressed: function (selection) {\n        let chat_item;\n        if (selection.hasClass('roster-contact'))\n            chat_item = this.account.chats.getChat(this.account.contacts.get(selection.data('jid'))).item_view;\n        if (selection.hasClass('chat-item'))\n            chat_item = xabber.chats_view.child(selection.data('id'));\n        chat_item && this.forwardTo(chat_item);\n    },\n\n    forwardTo: function (chat_item) {\n        if (chat_item.model.get('saved')) {\n            this.messages.forEach((message) => {\n                chat_item.content.onSubmit(\"\", [message]);\n            });\n        }\n        else {\n            if (!chat_item.content)\n                chat_item.content = new xabber.ChatContentView({chat_item: chat_item});\n            chat_item.content.bottom.setForwardedMessages(this.messages);\n        }\n        this.messages = [];\n        this.close().done(() => {\n            chat_item.open({clear_search: true});\n        });\n    }\n});\n\nxabber.InvitationPanelView = xabber.SearchView.extend({\n    className: 'modal dialog-modal add-user-group-chat',\n    template: templates.group_chats.invitation_panel_view,\n    ps_selector: '.contacts-list-wrap',\n    ps_settings: {theme: 'item-list'},\n\n    _initialize: function () {\n        this.registerClickEvents();\n    },\n\n    open: function (account, contact) {\n        this.selected_contacts = [];\n        this.account = account;\n        this.contact = contact;\n        this.clearPanel();\n        this.$(`textarea[name=\"invitation_text\"]`).val('');\n        this.$('.invitation-reason-wrap').addClass('hidden');\n        xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${this.account.get('jid')}\"] .roster-group`).each((idx, item) => {\n            let group_node = $(item).clone();\n            $(group_node).find('.list-item').each((i, list_item) => {\n                let contact_node = this.account.contacts.get($(list_item).attr('data-jid'));\n                if (contact_node.get('group_chat'))\n                        list_item.remove();\n            });\n            if (group_node.children('.list-item').length) {\n                this.$('.contacts-list-wrap').append(group_node);\n                group_node.find('.arrow').click((ev) => {\n                    this.toggleContacts(ev);\n                });\n                group_node.find('.group-head').click((ev) => {\n                    this.selectAllGroup(ev);\n                });\n            }\n        });\n        this.data.set('visible', true);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.search-input').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                this.selected_contacts = [];\n            }\n        });\n    },\n\n    addSelectedUsers: function () {\n        if (!this.selected_contacts.length) {\n            this.$('.modal-footer button').blur();\n            return;\n        }\n        let selected_users_count = this.selected_contacts.length,\n            _dfd_invitations = new $.Deferred(), invitations_count = 0;\n        _dfd_invitations.done((count) => {\n            let toast_text;\n            if (count == selected_users_count)\n                toast_text = xabber.getQuantityString(\"groupchat__toast__invitations_sent\", selected_users_count);\n            else\n                toast_text = xabber.getQuantityString(\"groupchat__toast_failed_to_sent_invitations\", selected_users_count);\n            utils.callback_popup_message(toast_text, 2000);\n            this.contact.trigger('invitations_send')\n        });\n        $(this.selected_contacts).each((idx, item) => {\n            this.sendInvite(item, () => {\n                invitations_count++;\n                if (idx == selected_users_count - 1)\n                    _dfd_invitations.resolve(invitations_count);\n            }, () => {\n                if (idx == selected_users_count - 1)\n                    _dfd_invitations.resolve(invitations_count);\n            });\n        });\n        this.close();\n    },\n\n    clearPanel: function () {\n        this.$('.modal-footer .errors').text('');\n        this.$('.counter').text('');\n        this.$('.contacts-list-wrap').empty();\n        this.clearSearch();\n    },\n\n    showReasonWrap: function () {\n        this.$('.invitation-reason-wrap').switchClass('hidden');\n        if (this.$('.invitation-reason-wrap').hasClass('hidden'))\n            this.$(`textarea[name=\"invitation_text\"]`).val('');\n    },\n\n    registerClickEvents: function () {\n        this.$('.btn-cancel').click(() => {\n            this.close();\n        });\n        this.$('.btn-add').click(() => {\n            this.addSelectedUsers();\n        });\n        this.$('.btn-invitation-reason').click(() => {\n            this.showReasonWrap();\n        });\n    },\n\n    addUser: function (ev) {\n        let $target = $(ev.target).closest('.list-item'),\n            contact_jid = $target.attr('data-jid');\n        let itemIdx = this.selected_contacts.indexOf(contact_jid);\n        if (!$target.hasClass('click-selected') && itemIdx > -1){\n            this.$(`.list-item[data-jid=\"${contact_jid}\"]`).removeClass('click-selected');\n            this.selected_contacts.splice(itemIdx, 1);\n            this.updateCounter();\n            return;\n        }\n        $target.toggleClass('click-selected');\n        if (itemIdx > -1)\n            this.selected_contacts.splice(itemIdx, 1);\n        else\n            this.selected_contacts.push(contact_jid);\n        this.updateCounter();\n    },\n\n    sendInvite: function (contact_jid, callback, errback) {\n        let reason_text = (this.contact.get('group_info').privacy === 'incognito') ? xabber.getString(\"groupchat__incognito_group__text_invitation\") : xabber.getString(\"groupchat__public_group__text_invitation\", [contact_jid]);\n        if (this.$(`textarea[name=\"invitation_text\"]`).val()){\n            reason_text = reason_text + '\\n\\n' + this.$(`textarea[name=\"invitation_text\"]`).val();\n        }\n        let iq = $iq({type: 'set', to: (this.contact.get('full_jid') || this.contact.get('jid'))})\n                .c('invite', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(contact_jid).up()\n                .c('send').t('false').up()\n                .c('reason').t(reason_text);\n        this.account.sendIQFast(iq, () => {\n            this.sendInviteMessage(contact_jid);\n            this.close();\n            callback && callback();\n        }, (iq) => {\n            this.onInviteError(iq);\n            errback && errback();\n        });\n    },\n\n    onInviteError: function (iq) {\n        let err_text;\n        if ($(iq).find('not-allowed').length > 0) {\n            err_text = $(iq).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n        }\n        if ($(iq).find('conflict').length > 0) {\n            err_text = $(iq).find('text').text() || xabber.getString(\"groupchat__invitation__error_already_invited\", [$(iq).find('invite').find('jid').text()]);\n        }\n        this.$('.modal-footer .errors').removeClass('hidden').text(err_text);\n    },\n\n    sendInviteMessage: function(jid_to) {\n        let reason_text = (this.contact.get('group_info').privacy === 'incognito') ? xabber.getString(\"groupchat__incognito_group__text_invitation\") : xabber.getString(\"groupchat__public_group__text_invitation\", [jid_to]);\n        if (this.$(`textarea[name=\"invitation_text\"]`).val()){\n            reason_text = reason_text + '\\n\\n' + this.$(`textarea[name=\"invitation_text\"]`).val();\n        }\n        let body = xabber.getString(\"groupchat_legacy_invitation_body\", [this.contact.get('jid')]),\n            stanza = $msg({\n                to: jid_to,\n                type: 'chat',\n                id: uuid()\n            }).c('invite', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`, jid: this.contact.get('jid')})\n                .c('reason').t(reason_text).up().up()\n                .c('x', {xmlns: Strophe.NS.GROUP_CHAT})\n                .c('privacy').t(this.contact.get('group_info').privacy).up().up()\n                .c('body').t(body).up();\n        this.account.sendMsg(stanza);\n    },\n\n    search: function (query) {\n        query = query.toLowerCase();\n        query && this.$('.list-item').each((idx, item) => {\n            let jid = $(item).attr('data-jid'),\n                name = this.account.contacts.get(jid).get('name').toLowerCase(),\n                hide_clone = (this.$(`.list-item[data-jid=\"${jid}\"]`).length > 1) && (!this.$(`.list-item[data-jid=\"${jid}\"]`).first().is($(item)));\n            $(item).hideIf((name.indexOf(query) < 0 && jid.indexOf(query) < 0) || hide_clone);\n        });\n        this.$('.group-head').addClass('hidden');\n        this.$('.modal-content .error').switchClass('hidden', !(this.$('.list-item').length === this.$('.list-item.hidden').length));\n        this.scrollToTop();\n    },\n\n    onEmptyQuery: function () {\n        this.$('.list-item').removeClass('hidden');\n        this.$('.group-head').removeClass('hidden');\n    },\n\n    onClickItem: function (ev) {\n        this.addUser(ev);\n    },\n\n    onEnterPressed: function (selection) {\n        let contact_jid = selection.attr('data-jid'),\n            itemIdx = this.selected_contacts.indexOf(contact_jid);\n        if (itemIdx > -1)\n            this.selected_contacts.splice(itemIdx, 1);\n        this.selected_contacts.push(contact_jid);\n        this.updateCounter();\n        this.addSelectedUsers();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    toggleContacts: function (ev) {\n        let is_visible = $(ev.target).hasClass('mdi-chevron-down');\n        if (is_visible) {\n            let group_roster = $(ev.target).closest('.roster-group');\n            group_roster.find('.list-item').each((idx, item) => {\n                $(item).addClass('hidden');\n            });\n        }\n        else\n        {\n            let group_roster = $(ev.target).closest('.roster-group');\n            group_roster.find('.list-item').each((idx, item) => {\n                $(item).removeClass('hidden');\n            });\n        }\n        $(ev.target).switchClass('mdi-chevron-right', is_visible);\n        $(ev.target).switchClass('mdi-chevron-down', !is_visible);\n        this.updateScrollBar();\n    },\n\n    selectAllGroup: function (ev) {\n        if ($(ev.target).hasClass('arrow'))\n            return;\n       let group_roster = $(ev.target).closest('.roster-group');\n       if (group_roster.hasClass('click-selected')) {\n           group_roster.removeClass('click-selected');\n           group_roster.find('.list-item').each((idx, item) => {\n               let contact_jid = $(item).attr('data-jid'),\n                   itemIdx = this.selected_contacts.indexOf(contact_jid);\n               if (itemIdx > -1) {\n                   this.selected_contacts.splice(itemIdx, 1);\n                   $(item).removeClass('click-selected');\n               }\n           });\n       }\n       else\n       {\n           group_roster.addClass('click-selected');\n           group_roster.find('.list-item').each((idx, item) => {\n               let contact_jid = $(item).attr('data-jid'),\n                   itemIdx = this.selected_contacts.indexOf(contact_jid);\n               if (itemIdx > -1)\n                   return;\n               else\n                   this.selected_contacts.push(contact_jid);\n               $(item).addClass('click-selected');\n           });\n       }\n        this.updateCounter();\n    },\n\n    updateCounter: function () {\n        let selected_counter = this.$('.list-item.click-selected').length;\n        (selected_counter) ? this.$('.counter').removeClass('hidden').text(selected_counter) : this.$('.counter').text('');\n    }\n\n});\n\n  xabber.SavedChatHeadView = xabber.BasicView.extend({\n      className: 'chat-head-wrap saved-chat',\n      template: templates.saved_chat_head,\n      events: {\n          \"click .contact-name\": \"showSettings\",\n          \"click .circle-avatar\": \"showSettings\",\n          \"click .btn-chat-pin\": \"pinSavedChat\",\n          \"click .btn-delete-chat\": \"deleteChat\",\n          \"click .btn-set-status\": \"setStatus\",\n          \"click .btn-play-pause-plyr\": \"playPausePlyr\",\n          \"click .btn-next-plyr\": \"nextPlyr\",\n          \"click .btn-previous-plyr\": \"previousPlyr\",\n          \"click .btn-stop-plyr\": \"stopPlyr\",\n          \"click .btn-popup-plyr\": \"popupPlyr\",\n          \"click .btn-jingle-message\": \"openJingleMessage\",\n          \"click .btn-search-messages\": \"renderSearchPanel\"\n      },\n\n      _initialize: function (options) {\n          this.content = options.content;\n          this.contact = this.content.contact;\n          this.model = this.content.model;\n          clearInterval(this._update_oneliner_interval);\n          this.updateOneLiner();\n          this._update_oneliner_interval = setInterval(() => {\n              this.updateOneLiner();\n          }, 1000*60*2);\n          this.account = this.model.account;\n          this.$el.find('.circle-avatar:not(.voice-message-player-avatar)').html(env.templates.svg['saved-messages']());\n          this.model.on(\"close_chat\", this.closeChat, this);\n          this.model.on(\"hide_chat\", this.hideChat, this);\n          xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n          xabber.on('update_layout', this.updatePlyrTitle, this);\n          xabber.on('plyr_player_time_updated', this.updatePlyrTime, this);\n          xabber.on(\"update_jingle_button\", this.updateJingleButton, this);\n      },\n\n      render: function () {\n          this.$('.tooltipped').tooltip({delay: 50});\n          this.$('.btn-more').dropdown({\n              inDuration: 100,\n              outDuration: 100,\n              hover: false\n          });\n          this.$('.chat-head-menu').hide();\n          this.updatePlyrControls();\n          this.updatePlyrTime();\n          this.updateJingleButton();\n          return this;\n      },\n\n      updateOneLiner: function () {\n          let rand_idx = _.random(0, xabber.getOneLiners().length - 1),\n              one_liner = xabber.getOneLiners()[rand_idx].replace(/\\\\n/, \"\");\n          if (!one_liner) {\n              this.updateOneLiner();\n              return;\n          }\n          this.$('.one-liner').text(one_liner);\n      },\n\n      closeChat: function () {\n          this.model.set({'opened': false, 'display': false, 'active': false});\n          xabber.chats_view.clearSearch();\n      },\n\n      hideChat: function () {\n          this.model.set({'active': false});\n          xabber.chats_view.clearSearch();\n      },\n\n      showSettings: function () {\n          this.account.showSettingsModal();\n      },\n\n      deleteChat: function () {\n          let rewrite_support = this.account.server_features.get(Strophe.NS.REWRITE);\n          utils.dialogs.ask(xabber.getString(\"dialog_delete_saved_messages__header\"), xabber.getString(\"dialog_delete_saved_messages__confirm\") +\n              (rewrite_support ? \"\" : (\"\\n\" + xabber.getString(\"dialog_delete_saved_messages__confirm\", [this.account.domain]).fontcolor('#E53935'))), null, { ok_button_text: rewrite_support? xabber.getString(\"delete\") : xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((result) => {\n              if (result) {\n                  if (this.account.connection && this.account.connection.do_synchronization) {\n                      this.model.deleteFromSynchronization();\n                  }\n                  if (rewrite_support) {\n                      this.model.retractAllMessages(false);\n                  }\n                  else {\n                      let all_messages = this.model.messages.models;\n                      $(all_messages).each((idx, item) => {\n                          this.content.removeMessage(item);\n                      });\n                  }\n                  this.closeChat();\n                  this.model.set('timestamp', 0);\n              }\n          });\n      },\n\n      pinSavedChat: function () {\n          let pinned = this.model.get('pinned'),\n              is_pinned = pinned && pinned !== '0' ? true : false,\n              pinned_value = is_pinned ? '0' : + new Date(),\n              conversation_options = {\n                  jid: this.account.get('jid'),\n                  pinned: pinned_value,\n                  type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n              },\n              iq = $iq({type: 'set', to: this.account.get('jid')})\n                  .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                  .c('conversation', conversation_options);\n          this.account.sendIQFast(iq);\n          this.model.set('pinned', pinned_value);\n      },\n\n      renderSearchPanel: function () {\n          let visible_view;\n          if (this.content.isVisible())\n              visible_view = this.content;\n          this.model.messages_view && this.model.messages_view.isVisible() && (visible_view = this.model.messages_view);\n          visible_view && visible_view.$search_form.slideToggle(200, () => {\n              if (visible_view.$search_form.css('display') !== 'none')\n                  visible_view.$search_form.find('input').focus();\n          });\n      },\n\n      playPausePlyr: function () {\n          if (!xabber.current_plyr_player)\n              return;\n          if (xabber.current_plyr_player.$audio_elem){\n              if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                  let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                  $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                  xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n              } else {\n                  xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n              }\n          } else\n              xabber.current_plyr_player.togglePlay();\n          xabber.trigger('plyr_player_updated');\n      },\n\n      stopPlyr: function () {\n          if (!xabber.current_plyr_player && xabber.plyr_player_popup)\n              return;\n          xabber.plyr_players.forEach((item) => {\n              if (item.$audio_elem){\n                  if (item.$audio_elem.voice_message)\n                      item.$audio_elem.voice_message.stopTime();\n              }\n          });\n          if (xabber.plyr_player_popup)\n              xabber.plyr_player_popup.closePopup();\n          else {\n              xabber.current_plyr_player = null;\n              xabber.trigger('plyr_player_updated');\n          }\n      },\n\n      popupPlyr: function () {\n          if (xabber.plyr_player_popup)\n              xabber.plyr_player_popup.minimizePopup();\n      },\n\n      nextPlyr: function () {\n          let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n          if (player_index === -1 && xabber.current_plyr_player.player_item)\n              player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n          if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n              return;\n          if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n              let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n              if (!next_item.$audio_elem.voice_message){\n                  let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                  $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                  next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n              } else {\n                  next_item.$audio_elem.voice_message.play()\n              }\n          } else{\n              if (!xabber.plyr_player_popup){\n                  xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                  xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n              } else\n                  xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n          }\n      },\n\n      previousPlyr: function () {\n          let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n          if (player_index === -1 && xabber.current_plyr_player.player_item)\n              player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n          if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n              return;\n          if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n              let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n              if (!prev_item.$audio_elem.voice_message){\n                  let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                  $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                  prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n              } else {\n                  prev_item.$audio_elem.voice_message.play()\n              }\n          } else{\n              if (!xabber.plyr_player_popup){\n                  xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                  xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n              } else\n                  xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n          }\n      },\n\n      updatePlyrControls: function () {\n          this.$('.chat-tool-player').showIf(xabber.current_plyr_player);\n          this.$el.switchClass('chat-head-player-enabled', xabber.current_plyr_player);\n          if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n              if (xabber.current_plyr_player.$audio_elem.voice_message){\n                  let voice_message = xabber.current_plyr_player.$audio_elem.voice_message;\n                  this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_voice\"))\n                  this.$('.btn-play-pause-plyr .mdi-play').hideIf(voice_message.isPlaying());\n                  this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!voice_message.isPlaying());\n                  this.$('.btn-play-pause-plyr').switchClass('active-plyr', voice_message.isPlaying());\n                  // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', voice_message.isPlaying());\n                  this.$('.btn-previous-plyr').switchClass('before-active-plyr', voice_message.isPlaying());\n                  let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n                  this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                  this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                  this.$('.mdi-player-type-icon').addClass('hidden');\n                  this.$('.player-poster').addClass('hidden');\n                  this.$('.voice-message-player-avatar').removeClass('hidden');\n                  this.$('.voice-message-player-avatar').setAvatar(xabber.current_plyr_player.contact_avatar, 32);\n                  this.updatePlyrTitle();\n                  let duration = Math.round(voice_message.getDuration());\n                  this.$('.chat-head-player-total-time').text(utils.pretty_duration(duration));\n                  let timerId = setInterval(function() {\n                      let cur_time = Math.round(voice_message.getCurrentTime());\n                      if (voice_message.isPlaying())\n                          this.$('.chat-head-player-current-time').text(utils.pretty_duration(cur_time));\n                      else\n                          clearInterval(timerId);\n                  }, 100);\n                  (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.addClass('hidden2');\n                  (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).addClass('hidden2');\n              }\n          }\n          else if (xabber.current_plyr_player) {\n              this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n              this.$('.chat-head-player-total-time').text(utils.pretty_duration(parseInt(xabber.current_plyr_player.duration)));\n              this.updatePlyrTitle();\n              let poster = xabber.current_plyr_player.poster;\n              if (poster){\n                  this.$('.mdi-player-type-icon').addClass('hidden');\n                  this.$('.player-poster').removeClass('hidden');\n                  this.$('.player-poster').attr(\"src\", poster);\n              } else {\n                  this.$('.mdi-player-type-icon').removeClass('hidden');\n                  this.$('.player-poster').addClass('hidden');\n              }\n              this.$('.voice-message-player-avatar').addClass('hidden');\n              if (xabber.current_plyr_player.provider != 'html5')\n                  this.$('.chat-head-player-type').text(xabber.current_plyr_player.provider)\n              else\n                  this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_video\"))\n              this.$('.btn-play-pause-plyr .mdi-play').hideIf(xabber.current_plyr_player.playing);\n              this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!xabber.current_plyr_player.playing);\n              this.$('.btn-play-pause-plyr').switchClass('active-plyr', xabber.current_plyr_player.playing);\n              // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', xabber.current_plyr_player.playing);\n              this.$('.btn-previous-plyr').switchClass('before-active-plyr', xabber.current_plyr_player.playing);\n              let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n              this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n              this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n              (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.removeClass('hidden2');\n              (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).removeClass('hidden2');\n          }\n      },\n\n      updatePlyrTime: function () {\n          if (xabber.current_plyr_player){\n              if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n              }\n              else if (!isNaN(xabber.current_plyr_player.currentTime))\n                  this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n          }\n      },\n\n      updatePlyrTitle: function () {\n          if (!xabber.current_plyr_player)\n              return\n          let $title_elem = this.$('.chat-head-player-title .chat-head-player-title-text'),\n              title;\n          if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n              title = xabber.current_plyr_player.author;\n          else if (xabber.current_plyr_player)\n              title = xabber.current_plyr_player.config.title ?\n                  xabber.current_plyr_player.config.title :\n                  xabber.current_plyr_player.provider === 'html5' ?\n                      xabber.current_plyr_player.source.substring(xabber.current_plyr_player.source.lastIndexOf('/')+1)\n                      : xabber.getString(\"chat_message_video\");\n          $title_elem.text(title);\n          if (this.$('.chat-head-player-title')[0] && utils.isOverflownWidth(this.$('.chat-head-player-title')[0])){\n              $title_elem.addClass('active-animation-player-title');\n              $title_elem.text(title + ' ⚫︎︎ ⚫︎︎ ⚫︎︎ ' + title);\n          } else\n              $title_elem.removeClass('active-animation-player-title');\n\n      },\n\n      updateJingleButton: function () {\n          this.$('.btn-jingle-message').switchClass('active-call', xabber.current_voip_call);\n          if (xabber.current_voip_call){\n              this.$('.btn-jingle-message').removeClass('hidden');\n              let voip_status = xabber.current_voip_call.get('status');\n              if (voip_status)\n                  this.$('.btn-jingle-message').attr('data-state', voip_status);\n              else\n                  this.$('.btn-jingle-message').attr('data-state', '');\n              if (voip_status === 'disconnected')\n                  this.$('.btn-jingle-message').removeClass('active-call');\n          } else\n              this.$('.btn-jingle-message').addClass('hidden');\n      },\n\n      openJingleMessage: function () {\n          if (xabber.current_voip_call) {\n              xabber.current_voip_call.modal_view.collapse();\n              return;\n          }\n      },\n  });\n\n  xabber.ChatHeadView = xabber.BasicView.extend({\n    className: 'chat-head-wrap',\n    template: templates.chat_head,\n    avatar_size: constants.AVATAR_SIZES.CHAT_HEAD,\n\n    events: {\n        \"click .chat-head-wrap\": \"showContactDetailsRight\",\n        \"click .chat-head-details\": \"showContactDetailsRight\",\n        \"click .contact-name\": \"showContactDetailsRight\",\n        \"click .circle-avatar\": \"showContactDetailsRight\",\n        \"click .contact-status-message.resource-hover\": \"showContactResources\",\n        \"click .contact-status-message.members-hover\": \"showMembersDetails\",\n        \"click .btn-clear-history\": \"clearHistory\",\n        \"click .btn-invite-users\": \"inviteUsers\",\n        \"click .btn-delete-chat\": \"deleteChat\",\n        \"click .btn-delete-contact\": \"deleteContact\",\n        \"click .btn-block-contact\": \"blockContact\",\n        \"click .btn-unblock-contact\": \"unblockContact\",\n        \"click .btn-export-history\": \"exportHistory\",\n        \"click .btn-show-fingerprints\": \"showFingerprints\",\n        \"click .btn-start-encryption\": \"startEncryptedChat\",\n        \"click .btn-open-encrypted-chat\": \"openEncryptedChat\",\n        \"click .btn-open-regular-chat\": \"openRegularChat\",\n        \"click .btn-chat-pin\": \"pinChat\",\n        \"click .btn-archive-chat\": \"archiveChat\",\n        \"click .btn-call-attention\": \"callAttention\",\n        \"click .btn-search-messages\": \"renderSearchPanel\",\n        \"click .btn-jingle-message\": \"sendJingleMessage\",\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-notifications.muted\": \"unmuteChat\",\n        \"click .btn-set-status\": \"setStatus\",\n        \"click .btn-play-pause-plyr\": \"playPausePlyr\",\n        \"click .btn-next-plyr\": \"nextPlyr\",\n        \"click .btn-previous-plyr\": \"previousPlyr\",\n        \"click .btn-stop-plyr\": \"stopPlyr\",\n        \"click .btn-popup-plyr\": \"popupPlyr\",\n        \"click .btn-set-ephemeral-timer\": \"setEphemeralTimer\",\n    },\n\n    _initialize: function (options) {\n        this.content = options.content;\n        this.contact = this.content.contact;\n        this.model = this.content.model;\n        this.account = this.model.account;\n        this.resources_view = new xabber.ContactResourcesRightView({model: this.contact.resources});\n        this.updateName();\n        this.updateStatus();\n        this.updateEncrypted();\n        this.updateAvatar();\n        this.updateNotifications();\n        this.updateArchived();\n        this.updatePinned();\n        this.model.on(\"change:encrypted\", this.updateEncrypted, this);\n        this.model.on(\"close_chat\", this.closeChat, this);\n        this.model.on(\"hide_chat\", this.hideChat, this);\n        this.model.on(\"pinned\", this.pinChat, this);\n        this.model.on(\"change:muted\", this.updateNotifications, this);\n        this.model.on(\"change:archived\", this.updateArchived, this);\n        this.model.on(\"change:pinned\", this.updatePinned, this);\n        this.contact.on(\"change\", this.onContactChanged, this);\n        this.contact.on(\"archive_chat\", this.archiveChat, this);\n        this.contact.on(\"change:name\", this.updateName, this);\n        this.contact.on(\"change:status\", this.updateStatus, this);\n        this.contact.on(\"change:status_updated\", this.updateStatus, this);\n        this.contact.on(\"change:image\", this.updateAvatar, this);\n        this.contact.on(\"change:blocked\", this.onChangedBlocked, this);\n        this.contact.on(\"change:group_chat\", this.updateGroupChatHead, this);\n        this.contact.on(\"change:subscription\", this.updateMenu, this);\n        this.contact.on(\"change:in_roster\", this.updateMenu, this);\n        this.contact.on(\"update_trusted\", this.updateEncryptedColor, this);\n        xabber._settings.on(\"change:jingle_calls\", this.updateGroupChatHead, this);\n        xabber.on('change:audio', this.updateGroupChatHead, this);\n        xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n        xabber.on('update_layout', this.updatePlyrTitle, this);\n        xabber.on('plyr_player_time_updated', this.updatePlyrTime, this);\n        xabber.on(\"update_jingle_button\", this.updateJingleButton, this);\n    },\n\n    render: function (options) {\n        this.$('.tooltipped').tooltip('remove');\n        this.$('.tooltipped').tooltip({delay: 50});\n        this.$('.btn-more').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.btn-notifications').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: true, // Activate on hover\n            belowOrigin: true, // Displays dropdown below the button\n        });\n        this.$('.ephemeral-timer-dropdown').switchClass('hidden', !this.model.get('encrypted'));\n        this.$('.ephemeral-timer-dropdown').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: true, // Activate on hover\n            belowOrigin: true, // Displays dropdown below the button\n        });\n        this.$('.chat-head-menu').hide();\n        this.updateStatusMsg();\n        this.updateGroupChatHead();\n        if (this.contact.get('group_chat'))\n            this.$('.contact-status-message').addClass('members-hover')\n        else\n            this.$('.contact-status-message').addClass('resource-hover')\n        this.updatePlyrControls();\n        this.updatePlyrTime();\n        this.updateJingleButton();\n        return this;\n    },\n\n    updateEncrypted: function () {\n        this.$el.switchClass('encrypted', this.model.get('encrypted'));\n    },\n\n    updateEncryptedColor: function (encrypted) {\n        this.$el.attr('data-trust', encrypted);\n    },\n\n    updateName: function () {\n        this.$('.contact-name').text(this.contact.get('name'));\n    },\n\n    updateStatus: function () {\n        let status = this.contact.get('status'),\n            status_message = this.contact.getStatusMessage();\n        this.$('.contact-status').attr('data-status', status);\n        this.$('.chat-icon').attr('data-status', status);\n        this.model.get('blocked') ? this.$('.contact-status-message').text('Contact blocked') : this.$('.contact-status-message').text(status_message);\n    },\n\n    updateStatusMsg: function () {\n        this.$('.contact-status-message').text(this.contact.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    onContactChanged: function () {\n        let changed = this.contact.changed;\n        if (_.has(changed, 'subscription_request_in') || _.has(changed, 'subscription_request_out') || _.has(changed, 'subscription') || _.has(changed, 'status_message'))\n            this.updateStatusMsg();\n        if (_.has(changed, 'private_chat') || _.has(changed, 'incognito_chat') || _.has(changed, 'invitation'))\n            this.updateIcon();\n    },\n\n    onChangedBlocked: function () {\n        this.updateMenu();\n        this.updateStatusMsg();\n        this.updateIcon();\n    },\n\n    updateMenu: function () {\n        let is_group_chat = this.contact.get('group_chat');\n        this.$('.btn-invite-users').showIf(is_group_chat && !this.contact.get('private_chat') && this.contact.get('subscription') == 'both');\n        this.$('.btn-call-attention').hideIf(is_group_chat || this.model.get('encrypted'));\n        this.$('.btn-clear-history').hideIf(is_group_chat);\n        this.$('.btn-start-encryption').showIf(!is_group_chat && this.account.omemo && !this.model.get('encrypted') && !this.account.chats.get(`${this.contact.hash_id}:encrypted`));\n        this.$('.btn-open-encrypted-chat').showIf(!is_group_chat && this.account.omemo && !this.model.get('encrypted') && this.account.chats.get(`${this.contact.hash_id}:encrypted`));\n        this.$('.btn-open-regular-chat').showIf(this.model.get('encrypted'));\n        this.$('.btn-show-fingerprints').showIf(!is_group_chat && this.account.omemo && this.model.get('encrypted'));\n        this.$('.btn-retract-own-messages').showIf(is_group_chat);\n        this.$('.btn-block-contact').hideIf(this.contact.get('blocked'));\n        this.$('.btn-unblock-contact').showIf(this.contact.get('blocked'));\n        this.$('.btn-delete-contact').showIf(this.contact.get('in_roster') && !is_group_chat);\n        this.$('.btn-notifications').hideIf(this.contact.get('blocked'));\n        this.$('.btn-jingle-message').hideIf((this.contact.get('blocked') || is_group_chat) && xabber.current_voip_call);\n        this.$('.btn-jingle-message').hideIf(!xabber.settings.jingle_calls);\n    },\n\n    renderSearchPanel: function () {\n        this.contact.showDetailsRight('all-chats', {type: 'search'});\n    },\n\n    showContactDetailsRight: function () {\n        this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n    },\n\n    showContactResources: function () {\n        this.resources_view.open();\n    },\n\n    showMembersDetails: function () {\n        this.contact.showDetailsRight('all-chats', {type: 'members'});\n    },\n\n    updatePinned: function () {\n        let pinned = this.model.get('pinned'),\n            is_pinned = pinned && pinned !== '0' ? true : false;\n        if (is_pinned)\n            this.$('.btn-chat-pin .one-line').text(xabber.getString(\"chat_action_unpin\"))\n        else\n            this.$('.btn-chat-pin .one-line').text(xabber.getString(\"chat_action_pin\"))\n    },\n\n    updateNotifications: function () {\n        if (this.model.isMuted()) {\n            this.$('.btn-notifications .one-line').text(xabber.getString(\"chat_action_unmute\"));\n            this.$('.btn-notifications').addClass('muted');\n        }\n        else {\n            this.$('.btn-notifications .one-line').text(xabber.getString(\"chat_action_mute\"));\n            this.$('.btn-notifications').removeClass('muted');\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.model.isMuted());\n        this.$('.btn-unmute-dropdown').hideIf(!this.model.isMuted());\n    },\n\n      muteChat: function (ev) {\n          if (this.contact.get('blocked'))\n              return;\n          let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n              muted_seconds;\n          if (mute_type === 'minutes15')\n              muted_seconds = 900\n          if (mute_type === 'hours1')\n              muted_seconds = 3600\n          if (mute_type === 'hours2')\n              muted_seconds = 7200\n          if (mute_type === 'day')\n              muted_seconds = 86400\n          if (mute_type === 'forever')\n              muted_seconds = 0\n          this.model.muteChat(muted_seconds);\n      },\n\n      unmuteChat: function (ev) {\n          if (this.contact.get('blocked'))\n              return;\n          this.model.muteChat('');\n      },\n\n    callAttention: function (ev) {\n        let msg = $msg({type: 'headline', to: this.contact.get('jid')})\n            .c('attention', {xmlns: Strophe.NS.ATTENTION});\n        this.account.sendMsg(msg);\n        this.model.messages.createSystemMessage({\n            from_jid: this.account.get('jid'),\n            message: xabber.getString(\"action_attention_called\")\n        });\n    },\n\n\n    updateArchived: function () {\n        let archived = !this.model.get('archived'),\n            is_archived = archived ? true : false;\n        if (!is_archived)\n            this.$('.btn-archive-chat .one-line').text(xabber.getString(\"chat_action_unarchive\"))\n        else\n            this.$('.btn-archive-chat .one-line').text(xabber.getString(\"chat_action_archive\"))\n        this.$('.btn-archive-chat .mdi').switchClass('mdi-package-up', !is_archived);\n        this.$('.btn-archive-chat .mdi').switchClass('mdi-package-down', is_archived);\n        if (this.model.item_view && archived){\n            !this.model.messages.length && this.model.item_view.updateLastMessage();\n            this.account.chat_settings.updateArchiveChatsList(this.contact.get('jid'), archived);\n            if (this.model.get('active')) {\n                xabber.chats_view.updateScreenAllChats();\n            }\n        }\n    },\n\n    archiveChat: function (ev, no_iq) {\n        let archived = !this.model.get('archived'),\n            is_archived = archived ? true : false;\n        if (!no_iq) {\n            let is_archived_status = is_archived ? 'archived' : 'active',\n                conversation_options = {\n                    jid: this.contact.get('jid'),\n                    status: is_archived_status,\n                    type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n                },\n                iq = $iq({type: 'set', to: this.account.get('jid')})\n                    .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                    .c('conversation', conversation_options);\n            this.account.sendIQFast(iq);\n            this.model.set('archived', archived);\n        }\n    },\n\n    pinChat: function () {\n        let pinned = this.model.get('pinned'),\n            is_pinned = pinned && pinned !== '0' ? true : false,\n            pinned_value = is_pinned ? '0' : + new Date(),\n            conversation_options = {\n                jid: this.contact.get('jid'),\n                pinned: pinned_value,\n                type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n            },\n            iq = $iq({type: 'set', to: this.account.get('jid')})\n                .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                .c('conversation', conversation_options);\n            this.account.sendIQFast(iq);\n            this.model.set('pinned', pinned_value);\n    },\n\n    sendJingleMessage: function () {\n        if (!xabber.settings.jingle_calls){\n            return;\n        }\n        if (xabber.current_voip_call) {\n            xabber.current_voip_call.modal_view.collapse();\n            return;\n        }\n        xabber.chats_view.scrollToTop();\n        xabber.chats_view.clearSearch();\n        !this.contact.get('group_chat') && this.content.initJingleMessage();\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.contact);\n    },\n\n    playPausePlyr: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        if (xabber.current_plyr_player.$audio_elem){\n            if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n            } else {\n                xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n            }\n        } else\n            xabber.current_plyr_player.togglePlay();\n        xabber.trigger('plyr_player_updated');\n    },\n\n    stopPlyr: function () {\n        if (!xabber.current_plyr_player && xabber.plyr_player_popup)\n            return;\n        xabber.plyr_players.forEach((item) => {\n            if (item.$audio_elem){\n                if (item.$audio_elem.voice_message)\n                    item.$audio_elem.voice_message.stopTime();\n            }\n        });\n        if (xabber.plyr_player_popup)\n            xabber.plyr_player_popup.closePopup();\n        else {\n            xabber.current_plyr_player = null;\n            xabber.trigger('plyr_player_updated');\n        }\n    },\n\n    popupPlyr: function () {\n        if (xabber.plyr_player_popup)\n            xabber.plyr_player_popup.minimizePopup();\n    },\n\n    nextPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n            let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n            if (!next_item.$audio_elem.voice_message){\n                let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                next_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n        }\n    },\n\n    previousPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n            let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n            if (!prev_item.$audio_elem.voice_message){\n                let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                prev_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n        }\n    },\n\n    updatePlyrControls: function () {\n        this.$('.chat-tool-player').showIf(xabber.current_plyr_player);\n        this.$el.switchClass('chat-head-player-enabled', xabber.current_plyr_player);\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n            if (xabber.current_plyr_player.$audio_elem.voice_message){\n                let voice_message = xabber.current_plyr_player.$audio_elem.voice_message;\n                this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_voice\"))\n                this.$('.btn-play-pause-plyr .mdi-play').hideIf(voice_message.isPlaying());\n                this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!voice_message.isPlaying());\n                this.$('.btn-play-pause-plyr').switchClass('active-plyr', voice_message.isPlaying());\n                // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', voice_message.isPlaying());\n                this.$('.btn-previous-plyr').switchClass('before-active-plyr', voice_message.isPlaying());\n                let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n                this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                this.$('.mdi-player-type-icon').addClass('hidden');\n                this.$('.player-poster').addClass('hidden');\n                this.$('.voice-message-player-avatar').removeClass('hidden');\n                this.$('.voice-message-player-avatar').setAvatar(xabber.current_plyr_player.contact_avatar, 32);\n                this.updatePlyrTitle();\n                let duration = Math.round(voice_message.getDuration());\n                this.$('.chat-head-player-total-time').text(utils.pretty_duration(duration));\n                let timerId = setInterval(function() {\n                    let cur_time = Math.round(voice_message.getCurrentTime());\n                    if (voice_message.isPlaying())\n                        this.$('.chat-head-player-current-time').text(utils.pretty_duration(cur_time));\n                    else\n                        clearInterval(timerId);\n                }, 100);\n                (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.addClass('hidden2');\n                (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).addClass('hidden2');\n            }\n        }\n        else if (xabber.current_plyr_player) {\n            this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n            this.$('.chat-head-player-total-time').text(utils.pretty_duration(parseInt(xabber.current_plyr_player.duration)));\n            this.updatePlyrTitle();\n            let poster = xabber.current_plyr_player.poster;\n            if (poster){\n                this.$('.mdi-player-type-icon').addClass('hidden');\n                this.$('.player-poster').removeClass('hidden');\n                this.$('.player-poster').attr(\"src\", poster);\n            } else {\n                this.$('.mdi-player-type-icon').removeClass('hidden');\n                this.$('.player-poster').addClass('hidden');\n            }\n            this.$('.voice-message-player-avatar').addClass('hidden');\n            if (xabber.current_plyr_player.provider != 'html5')\n                this.$('.chat-head-player-type').text(xabber.current_plyr_player.provider)\n            else\n                this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_video\"))\n            this.$('.btn-play-pause-plyr .mdi-play').hideIf(xabber.current_plyr_player.playing);\n            this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!xabber.current_plyr_player.playing);\n            this.$('.btn-play-pause-plyr').switchClass('active-plyr', xabber.current_plyr_player.playing);\n            // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', xabber.current_plyr_player.playing);\n            this.$('.btn-previous-plyr').switchClass('before-active-plyr', xabber.current_plyr_player.playing);\n            let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n            this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n            this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n            (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.removeClass('hidden2');\n            (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).removeClass('hidden2');\n        }\n    },\n\n    updatePlyrTime: function () {\n        if (xabber.current_plyr_player){\n            if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n            }\n            else if (!isNaN(xabber.current_plyr_player.currentTime))\n                this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n        }\n    },\n\n    updatePlyrTitle: function () {\n        if (!xabber.current_plyr_player)\n            return\n        let $title_elem = this.$('.chat-head-player-title .chat-head-player-title-text'),\n            title;\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            title = xabber.current_plyr_player.author;\n        else if (xabber.current_plyr_player)\n            title = xabber.current_plyr_player.config.title ?\n                xabber.current_plyr_player.config.title :\n                xabber.current_plyr_player.provider === 'html5' ?\n                    xabber.current_plyr_player.source.substring(xabber.current_plyr_player.source.lastIndexOf('/')+1)\n                    : xabber.getString(\"chat_message_video\");\n        $title_elem.text(title);\n        if (this.$('.chat-head-player-title')[0] && utils.isOverflownWidth(this.$('.chat-head-player-title')[0])){\n            $title_elem.addClass('active-animation-player-title');\n            $title_elem.text(title + ' ⚫︎︎ ⚫︎︎ ⚫︎︎ ' + title);\n        } else\n            $title_elem.removeClass('active-animation-player-title');\n\n    },\n\n    setEphemeralTimer: function (ev) {\n        this.model.setEphemeralTimer(ev);\n    },\n\n\n    updateJingleButton: function () {\n        this.$('.btn-jingle-message').switchClass('active-call', xabber.current_voip_call);\n        if (xabber.current_voip_call){\n            this.contact.get('group_chat') && this.$('.btn-jingle-message').removeClass('hidden');\n            let voip_status = xabber.current_voip_call.get('status');\n            if (voip_status)\n                this.$('.btn-jingle-message').attr('data-state', voip_status);\n            else\n                this.$('.btn-jingle-message').attr('data-state', '');\n            if (voip_status === 'disconnected')\n                this.$('.btn-jingle-message').removeClass('active-call');\n        } else if (this.contact.get('group_chat'))\n            this.$('.btn-jingle-message').addClass('hidden');\n    },\n\n    getActiveScreen: function () {\n        let active_screen = xabber.toolbar_view.$('.active');\n        this.$('.omemo-item').removeClass('hidden');\n        if (active_screen.hasClass('archive-chats')) {\n            xabber.toolbar_view.showArchive();\n            return;\n        }\n        if (active_screen.hasClass('all-chats')) {\n            xabber.toolbar_view.showAllChats();\n            return;\n        }\n        if (active_screen.hasClass('chats')) {\n            xabber.toolbar_view.showChats();\n            return;\n        }\n        if (active_screen.hasClass('group-chats')) {\n            xabber.toolbar_view.showGroupChats();\n            return;\n        }\n        if (active_screen.hasClass('account-item')) {\n            xabber.toolbar_view.showChatsByAccount();\n            return;\n        }\n    },\n\n    updateGroupChatHead: function () {\n        let is_group_chat = this.contact.get('group_chat');\n        this.updateIcon();\n        this.$('.btn-jingle-message').showIf(!is_group_chat && xabber.get('audio') || xabber.current_voip_call);\n        this.$('.btn-jingle-message').hideIf(!xabber.settings.jingle_calls);\n        this.$('.contact-status').hideIf(is_group_chat);\n        this.updateMenu();\n    },\n\n    updateIcon: function () {\n        this.$('.chat-icon').addClass('hidden');\n        let ic_name = this.contact.getIcon();\n        ic_name && this.$('.chat-icon').removeClass('hidden group-invite blocked').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n    },\n\n    inviteUsers: function () {\n        if (!xabber.invite_panel)\n            xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n        xabber.invite_panel.open(this.account, this.contact);\n    },\n\n    clearHistory: function () {\n        this.content.clearHistory();\n        xabber.chats_view.clearSearch();\n    },\n\n    leaveGroupChat: function () {\n        this.contact.declineSubscription();\n        this.contact.removeFromRoster();\n        this.contact.set('in_roster', false);\n    },\n\n    closeChat: function () {\n        this.model.set({'opened': false, 'display': false, 'active': false});\n        xabber.chats_view.clearSearch();\n    },\n\n    hideChat: function () {\n        this.model.set({'active': false});\n        xabber.chats_view.clearSearch();\n    },\n\n    deleteChat: function () {\n        if (this.contact.get('group_chat')) {\n            utils.dialogs.ask(xabber.getString(\"delete_chat\"), xabber.getString(\"dialog_group_remove__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n                if (result) {\n                    let scrolled_top = xabber.chats_view.getScrollTop() || 0;\n                    (this.account.connection && this.account.connection.do_synchronization) && this.model.deleteFromSynchronization();\n                    this.leaveGroupChat();\n                    this.closeChat();\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                    xabber.chats_view.scrollTo(scrolled_top);\n                }\n            });\n        }\n        else {\n            let rewrite_support = this.account.server_features.get(Strophe.NS.REWRITE);\n            utils.dialogs.ask(xabber.getString(\"delete_chat\"), xabber.getString(\"delete_chat_dialog_message\") +\n            (rewrite_support ? \"\" : `\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')}`), null, { ok_button_text: rewrite_support? xabber.getString(\"delete\") : xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((result) => {\n                if (result) {\n                    let scrolled_top = xabber.chats_view.getScrollTop() || 0;\n                    if (rewrite_support) {\n                        this.model.retractAllMessages(false);\n                    }\n                    if (this.account.connection && this.account.connection.do_synchronization) {\n                        this.model.deleteFromSynchronization();\n                    }\n                    else {\n                        let all_messages = this.model.messages.models;\n                        $(all_messages).each((idx, item) => {\n                            this.content.removeMessage(item);\n                        });\n                    }\n                    this.closeChat();\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                    xabber.chats_view.scrollTo(scrolled_top);\n                }\n            });\n        }\n    },\n\n    deleteContact: function () {\n        this.contact.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.contact.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.contact.unblockWithDialog();\n    },\n\n    exportHistory: function () {\n\n    },\n\n    showFingerprints: function () {\n        if (!this.account.omemo)\n            return;\n        let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n        peer.fingerprints.open();\n    },\n\n    startEncryptedChat: function () {\n        this.account.chats.openChat(this.contact, {encrypted: true});\n        let chat = this.account.chats.get(this.contact.hash_id + ':encrypted');\n        chat.set('timestamp', moment.now());\n        chat.item_view.updateLastMessage();\n    },\n\n    openEncryptedChat: function () {\n        this.model.set('opened', true);\n        this.account.chats.openChat(this.contact, {encrypted: true});\n    },\n\n    openRegularChat: function () {\n        this.model.set('opened', true);\n        this.account.chats.openChat(this.contact);\n    }\n});\n\n\n  xabber.SendMediaView = xabber.BasicView.extend({\n      className: 'modal main-modal avatar-picker background-panel',\n      template: templates.send_media,\n      ps_selector: '.modal-content',\n      ps_settings: {theme: 'item-list'},\n\n      events: {\n          \"click .menu-btn\": \"updateActiveMenu\",\n          \"click .library-wrap .image-item\": \"setActiveImage\",\n          'change input[type=\"file\"]': \"onFileInputChanged\",\n          'keyup input.url': \"onInputChanged\",\n          \"click .btn-add\": \"addMedia\",\n          \"click .btn-cancel\": \"close\"\n      },\n\n      _initialize: function () {\n          this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n      },\n\n      render: function (options) {\n          this.model = options.model;\n          this.parent = options.parent;\n          this.createLibrary();\n          this.$('.menu-btn').removeClass('active');\n          this.$('.menu-btn[data-screen-name=\"upload\"]').addClass('active');\n          this.$('.modal-header span').text(xabber.getString(\"chat_bottom__tooltip_add_media\"));\n          this.$el.openModal({\n              ready: () => {\n                  this.$('.modal-content').perfectScrollbar({theme: 'item-list'});\n              },\n              complete: this.close.bind(this)\n          });\n          let draggable = this.$('.upload-wrap');\n          draggable[0].ondragenter = function (ev) {\n              ev.preventDefault();\n              draggable.addClass('file-drop');\n          };\n          draggable[0].ondragover = function (ev) {\n              ev.preventDefault();\n          };\n          draggable[0].ondragleave = function (ev) {\n              if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                  return;\n              ev.preventDefault();\n              draggable.removeClass('file-drop');\n          };\n          draggable[0].ondrop = (ev) => {\n              ev.preventDefault();\n              ev.stopPropagation();\n              draggable.removeClass('file-drop');\n              let files = ev.dataTransfer.files || [];\n              this.parent.view.addFileMessage(files);\n              this.close();\n          };\n      },\n\n      onPaste: function (ev) {\n          let url = ev.clipboardData.getData('text').trim();\n          this.$('.image-preview img')[0].onload = () => {\n              this.$('.image-preview img').removeClass('hidden');\n              this.updateActiveButton();\n          };\n          this.$('.image-preview img').addClass('hidden')[0].src = url;\n          this.updateActiveButton();\n      },\n\n      updateActiveMenu: function (ev) {\n          let screen_name = ev.target.getAttribute('data-screen-name');\n          this.$('.menu-btn').removeClass('active');\n          this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n          this.updateScreen(screen_name);\n      },\n\n      updateScreen: function (name) {\n          this.$('.screen-wrap').addClass('hidden');\n          this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n          this.scrollToTop();\n          this.updateActiveButton();\n      },\n\n      updateActiveButton: function () {\n          let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n              non_active = true;\n          if ($active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video') {\n              $active_screen.find('div.active').length && (non_active = false);\n          } else {\n              $active_screen.find('img:not(.hidden)').length && (non_active = false);\n          }\n          this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n      },\n\n      renderFiles: function (response) {\n          this.$(`.library-wrap[data-screen=\"${response.type}\"] .preloader-wrapper`).remove()\n          if (response.items.length){\n              response.items.forEach((item) => {\n                  let img = $(`<div class=\"image-item\"/>`);\n                  img.css('background-image', `url(\"${item.thumbnail.url}\")`);\n                  img.attr('data-src', item.file);\n                  img.attr('data-name', item.name);\n                  this.$(`.library-wrap[data-screen=\"${response.type}\"]`).append(img);\n              });\n          }\n      },\n\n      createLibrary: function () {\n          this.model.testGalleryTokenExpire(() => {\n              if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n                  this.$('.library-wrap').html(env.templates.contacts.preloader())\n                  $.ajax({\n                      type: 'GET',\n                      headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                      url: this.model.get('gallery_url') + 'v1/files/',\n                      dataType: 'json',\n                      contentType: \"application/json\",\n                      data: {obj_per_page: 50, order_by: '-id', type: 'image'},\n                      success: (response) => {\n                          console.log(response)\n                          response.type = 'image'\n                          this.renderFiles(response)\n                      },\n                      error: (response) => {\n                          this.model.handleCommonGalleryErrors(response)\n                          console.log(response)\n                          this.$('.library-wrap[data-screen=\"image\"] .preloader-wrapper').remove()\n                      }\n                  });\n                  $.ajax({\n                      type: 'GET',\n                      headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                      url: this.model.get('gallery_url') + 'v1/files/',\n                      dataType: 'json',\n                      contentType: \"application/json\",\n                      data: {obj_per_page: 50, order_by: '-id', type: 'video'},\n                      success: (response) => {\n                          console.log(response)\n                          response.type = 'video'\n                          this.renderFiles(response)\n                      },\n                      error: (response) => {\n                          this.model.handleCommonGalleryErrors(response)\n                          console.log(response)\n                          this.$('.library-wrap[data-screen=\"video\"] .preloader-wrapper').remove()\n                      }\n                  });\n              }\n          });\n      },\n\n      setActiveImage: function (ev) {\n          let $target = $(ev.target),\n              $active_screen = this.$('.screen-wrap:not(.hidden)');\n          if ($target.hasClass('active'))\n              $target.removeClass('active');\n          else {\n              this.$('.library-wrap>div').removeClass('active');\n              $target.addClass('active');\n          }\n          this.updateActiveButton();\n      },\n\n      onFileInputChanged: function (ev) {\n          let target = ev.target,\n              files = [];\n          for (let i = 0; i < target.files.length; i++) {\n              files.push(target.files[i]);\n          }\n\n          if (files && files.length) {\n              this.parent.view.addFileMessage(files);\n              $(target).val('');\n              this.close();\n          }\n      },\n\n      onInputChanged: function (ev) {\n          if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n              return;\n          if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n              let url = ev.target.value.trim();\n              this.$('.image-preview img')[0].onload = () => {\n                  this.$('.image-preview img').removeClass('hidden');\n                  this.updateActiveButton();\n              };\n              this.$('.image-preview img').addClass('hidden')[0].src = url;\n              this.updateActiveButton();\n          } else {\n              this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n              this.updateActiveButton();\n          }\n      },\n\n      addMedia: function () {\n          if (this.$('.btn-add').hasClass('non-active'))\n              return;\n          let file, filename, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n          dfd.done((resolved_file) => {\n              this.parent.view.addFileMessage([resolved_file])\n              this.close();\n          });\n          this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n          this.$('.btn-add').addClass('hidden-disabled');\n          if ($active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' || $active_screen.attr('data-screen') == 'web-address') {\n              file = $active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' ?\n                  $active_screen.find('div.active').attr('data-src') :\n                  $active_screen.find('img:not(.hidden)')[0].src;\n              filename = $active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' ?\n                  $active_screen.find('div.active').attr('data-name') : '';\n\n              this.createFileFromURL(file, filename).then((file) => {\n                  dfd.resolve(file);\n              })\n          } else\n              dfd.resolve(this.current_file);\n      },\n\n      createFileFromURL: async function (url, filename) {\n          let response = await fetch(url);\n          let data = await response.blob();\n          let metadata = {\n              type: data.type\n          };\n          let file = new File([data], filename || url.split('#').shift().split('?').shift().split('/').pop() || 'file', metadata);\n          return file\n      },\n\n      close: function () {\n          this.$el.closeModal({ complete: () => {\n                  this.$el.detach();\n                  this.data.set('visible', false);\n              }\n          });\n      }\n  });\n\nxabber.ChatLocationView = xabber.BasicView.extend({\n    className: 'modal main-modal chat-location ',\n    template: templates.location_popup,\n\n    events: {\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-apply\": \"sendLocation\",\n        \"click #map canvas\": \"closeLocationName\",\n        \"click .nominatim.ol-search input\": \"initializeScrollbar\",\n        \"focusout .nominatim.ol-search input\": \"destroyScrollbar\",\n    },\n\n    _initialize: function (options) {\n        this.view = options.content;\n        this.model = this.view.model;\n        this.account = this.view.account;\n\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                this.initMap();\n                Materialize.updateTextFields();\n            },\n            complete: this.hide.bind(this)\n        });\n    },\n\n    initMap: function () {\n        import('ol-local').then(ol => {\n            ol = ol.default ? ol.default : ol;\n            this.$el.find('.modal-content').switchClass('popup', xabber.popup_coordinates);\n\n            let layers = [ new ol.layer.Tile({ source: new ol.source.OSM() }) ],\n                coordinates = xabber.popup_coordinates ? ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857') : [-9639318.435625363, 1667475.03690917],\n                zoom = xabber.popup_coordinates ? 15 : 0,\n                placemark = new ol.Overlay.Placemark ({\n                    // backgroundColor : 'yellow',\n                    contentColor: '#000',\n                    autoPan: true,\n                    html: '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"48px\" height=\"48px\" viewBox=\"0 0 24 30\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/map-marker\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"36\" height=\"36\"></rect><path d=\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\" id=\"mdi:map-marker\" fill=\"#000000\" fill-rule=\"nonzero\"></path></g></svg>',\n                    anchor: false,\n                    autoPanAnimation: { duration: 250 }\n                }),\n                placemark_my_location = new ol.Overlay.Placemark ({\n                    // backgroundColor : 'yellow',\n                    contentColor: '#000',\n                    autoPan: true,\n                    html: '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"36px\" height=\"36px\"><circle class=\"outer\" cx=\"20\" cy=\"20\" r=\"16\" stroke=\"none\" stroke-width=\"1.5\" fill=\"none\" style=\"opacity: 0.6;\"></circle><circle class=\"inner\" cx=\"20\" cy=\"20\" r=\"8\" stroke=\"white\" stroke-width=\"1.5\" fill=\"none\"></circle></svg>',\n                    anchor: false,\n                    autoPanAnimation: { duration: 250 }\n                });\n\n            let map = new ol.Map\n            ({\ttarget: 'map',\n                view: new ol.View\n                ({\tzoom: zoom,\n                    center: coordinates\n                }),\n                interactions: ol.interaction_defaults({ altShiftDragRotate:false, pinchRotate:false }),\n                layers: layers,\n                overlays: [placemark, placemark_my_location]\n            });\n\n            let getCurrentPositionControl = function (e) {\n                navigator.geolocation.getCurrentPosition(success, error, options);\n            };\n\n            let options = {\n                enableHighAccuracy: true,\n                timeout: 5000,\n                maximumAge: 0\n            };\n\n            function success(pos) {\n                let crd = pos.coords;\n                map.getView().setCenter(ol.proj.transform([crd.longitude, crd.latitude], 'EPSG:4326', 'EPSG:3857'));\n                placemark_my_location.show(ol.proj.transform([crd.longitude, crd.latitude], 'EPSG:4326', 'EPSG:3857'));\n                map.getView().setZoom(17);\n                button_geoposition.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/crosshairs-gps\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"22\" height=\"22\"></rect><path d=\"M12,8 C14.209139,8 16,9.790861 16,12 C16,14.209139 14.209139,16 12,16 C9.790861,16 8,14.209139 8,12 C8,9.790861 9.790861,8 12,8 M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\" id=\"mdi:crosshairs-gps\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n            };\n\n            function error(err) {\n                console.warn(`ERROR(${err.code}): ${err.message}`);\n            };\n\n            let button_geoposition = document.createElement('button');\n            button_geoposition.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/crosshairs-question\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"22\" height=\"22\"></rect><path d=\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13,5 5,8.13 5,12 C5,15.87 8.13,19 12,19 C15.87,19 19,15.87 19,12 C19,8.13 15.87,5 12,5 M11.13,17.25 L12.88,17.25 L12.88,15.5 L11.13,15.5 L11.13,17.25 M12,6.75 C10.07,6.75 8.5,8.32 8.5,10.25 L10.25,10.25 C10.25,9.28 11.03,8.5 12,8.5 C12.97,8.5 13.75,9.28 13.75,10.25 C13.75,12 11.13,11.78 11.13,14.63 L12.88,14.63 C12.88,12.66 15.5,12.44 15.5,10.25 C15.5,8.32 13.93,6.75 12,6.75 Z\" id=\"mdi:crosshairs-question\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n\n\n            button_geoposition.addEventListener('click', getCurrentPositionControl, false);\n\n            let custom_element_position = document.createElement('div');\n\n            if (xabber.popup_coordinates) {\n                custom_element_position.className = 'geoposition placemark-exist ol-control ol-unselectable';\n            }\n            else {\n                custom_element_position.className = 'geoposition ol-control ol-unselectable';\n            }\n            custom_element_position.appendChild(button_geoposition);\n\n            let geoposition = new ol.control.Control({\n                className: 'myControl',\n                element: custom_element_position,\n                target: document.getElementById(\"myCustomControl\")\n            });\n\n            map.addControl(geoposition);\n\n            if (xabber.popup_coordinates) {\n                placemark.show(ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857'));\n                $('.ol-zoom.ol-unselectable.ol-control').addClass('placemark-exist');\n                let getPlacemarkPositionControl = function (e) {\n                    map.getView().setCenter(ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857'));\n                    map.getView().setZoom(15);\n                    $('.ol-location').show()\n\n                };\n\n                let button_placemark_position = document.createElement('button');\n                button_placemark_position.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/map-marker\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"36\" height=\"36\"></rect><path d=\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\" id=\"mdi:map-marker\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n\n\n                button_placemark_position.addEventListener('click', getPlacemarkPositionControl, false);\n\n                let custom_element_placemark_position = document.createElement('div');\n                custom_element_placemark_position.className = 'placemark-position ol-control ol-unselectable';\n                custom_element_placemark_position.appendChild(button_placemark_position);\n\n                let placemark_position = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_placemark_position,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(placemark_position);\n\n                let custom_element_show_location_name = document.createElement('div');\n                custom_element_show_location_name.innerHTML = xabber.location_name || '';\n\n\n                custom_element_show_location_name.className = 'ol-location ol-control ol-unselectable';\n\n                let show_location_name = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_show_location_name,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(show_location_name);\n\n            }\n\n            if (!xabber.popup_coordinates) {\n\n                let send_buttom = document.createElement('button');\n                send_buttom.className = 'btn-apply mdi mdi-28px mdi-send';\n\n                let send_address_div = document.createElement('div');\n                send_address_div.setAttribute(\"id\", \"send_address\");\n                send_address_div.className = 'ol-send-address';\n\n                let send_div = document.createElement('div');\n                send_div.setAttribute(\"id\", \"send_text\");\n                send_div.className = 'ol-send-text';\n\n                let custom_element_send = document.createElement('div');\n                custom_element_send.className = 'ol-send ol-control ol-unselectable';\n                custom_element_send.appendChild(send_address_div);\n                custom_element_send.appendChild(send_div);\n                custom_element_send.appendChild(send_buttom);\n\n                let send = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_send,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(send);\n\n                let sLayer = new ol.layer.Vector({\n                    source: new ol.source.Vector(),\n                    style: new ol.style.Style({\n                        image: new ol.style.Circle({\n                            radius: 5,\n                            stroke: new ol.style.Stroke ({\n                                color: 'rgb(255,165,0)',\n                                width: 3\n                            }),\n                            fill: new ol.style.Fill({\n                                color: 'rgba(255,165,0,.3)'\n                            })\n                        }),\n                        stroke: new ol.style.Stroke ({\n                            color: 'rgb(255,165,0)',\n                            width: 3\n                        }),\n                        fill: new ol.style.Fill({\n                            color: 'rgba(255,165,0,.3)'\n                        })\n                    })\n                });\n\n                map.addLayer(sLayer);\n\n                let search = new ol.control.SearchNominatim (\n                    {\t//target: $(\".options\").get(0),\n                        polygon: $(\"#polygon\").prop(\"checked\"),\n                        reverse: true,\n                        position: true\t// Search, with priority to geo position\n                    });\n\n                map.addControl (search);\n\n                search.on('select', function(e){\n                    sLayer.getSource().clear();\n                    // Check if we get a geojson to describe the search\n                    if (e.search.geojson) {\n                        let format = new ol.format.GeoJSON();\n                        let f = format.readFeature(e.search.geojson, { dataProjection: \"EPSG:4326\", featureProjection: map.getView().getProjection() });\n                        sLayer.getSource().addFeature(f);\n                        let view = map.getView();\n                        let resolution = view.getResolutionForExtent(f.getGeometry().getExtent(), map.getSize());\n                        let zoom = view.getZoomForResolution(resolution);\n                        let center = ol.extent.getCenter(f.getGeometry().getExtent());\n                        // redraw before zoom\n                        setTimeout(function(){\n                            view.animate({\n                                center: center,\n                                zoom: Math.min (zoom, 16)\n                            });\n                        }, 100);\n                    }\n                    else {\n                        map.getView().animate({\n                            center:e.coordinate,\n                            zoom: Math.max (map.getView().getZoom(),16)\n                        });\n                    }\n                });\n\n                function reverseGeocode(json) {\n                    if (!json[0].error) {\n                        let house_number = json[0].address.house_number ? ' ' + json[0].address.house_number : '',\n                            road = json[0].address.road ? json[0].address.road + house_number + ', ' : '',\n                            state = json[0].address.state ? json[0].address.state + ', ' : '',\n                            neighbourhood = json[0].address.neighbourhood ? json[0].address.neighbourhood + ', ' : '',\n                            allotments = json[0].address.allotments ? json[0].address.allotments + ', ' : '',\n                            village = json[0].address.village ? json[0].address.village + ', ' : '',\n                            city = json[0].address.city ? json[0].address.city + ', ' : '',\n                            country = json[0].address.country ? state + json[0].address.country : '',\n                            final_text = ''\n                        if ( !road ){\n                            final_text = neighbourhood + allotments + village + city + country\n                        }\n                        else {\n                            final_text = road + neighbourhood + allotments + village + city + state.replace(', ','')\n                        }\n                        $('#send_address').text(final_text);\n                    }\n                    else {\n                        $('#send_address').text(xabber.getString(\"location_fragment__address_error__title\"));\n                    }\n                }\n\n                map.on('click', function(e) {\n                    placemark.show(e.coordinate);\n                    search.reverseGeocode(e.coordinate, reverseGeocode);\n                    let coordinates = ol.proj.transform(e.coordinate, map.getView().getProjection(), 'EPSG:4326');\n                    $('.ol-control.ol-send').show();\n                    $('#send_text').text(coordinates[1].toFixed(6) + ':' + coordinates[0].toFixed(6));\n                    $('#output').text('geo:' + coordinates[1] + ',' + coordinates[0]);\n                    $('#lat').text(coordinates[1]);\n                    $('#lon').text(coordinates[0]);\n                });\n            }\n            window.setTimeout(function () { map.updateSize(); }, 200)\n        });\n    },\n\n    sendLocation: function (e) {\n        if (this.$('#output').val()) {\n            let body = this.$('#output').val(),\n                legacy_body = '',\n                start_idx = legacy_body.length,\n                end_idx = (body + legacy_body).length,\n                lat = this.$('#lat').val(),\n                lon = this.$('#lon').val(),\n                locations = [{\n                        lat: lat,\n                        lon: lon\n                    }],\n                mutable_content = [{\n                    start: start_idx,\n                    end: end_idx,\n                    type: 'geolocation'\n                    }],\n                attrs = {\n                    from_jid: this.account.get('jid'),\n                    locations: locations,\n                    mutable_content: mutable_content,\n                    message: this.$('#output').val(),\n                    begin: start_idx,\n                    end: end_idx\n                },\n                message = this.model.messages.create(attrs),\n                msg_id = message.get('msgid'),\n                stanza = $msg({\n                    to: this.model.get('jid'),\n                    type: 'chat',\n                    id: msg_id\n                });\n            stanza.c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up();\n            stanza.c('origin-id', {id: msg_id, xmlns: 'urn:xmpp:sid:0'}).up();\n            stanza.c('reference', {\n                xmlns: Strophe.NS.REFERENCE,\n                type: 'mutable',\n                begin: start_idx,\n                end: end_idx\n            }).c('geoloc', {\n                xmlns: Strophe.NS.GEOLOC,\n            }).c('lat').t(lat).up().c('lon').t(lon).up().up().up();\n            stanza.c('body').t(body).up();\n            if (this.model.get('encrypted') && this.account.omemo) {\n                stanza.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n                if ($(stanza.tree()).children('body').length) {\n                    stanza.cnode($(stanza.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                    $(stanza.tree()).children('body').detach()\n                }\n                if ($(stanza.tree()).children('reference').length) {\n                    $(stanza.tree()).children('reference').each((idx, reference) => {\n                        stanza.cnode($(stanza.tree()).children('reference')[idx]).up()\n                    });\n                    $(stanza.tree()).children('reference').detach()\n                }\n                stanza.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n                stanza.c('from', {jid: this.account.get('jid')}).up().up()\n                message.set({xml: $(stanza.tree()).clone()[0]});\n                this.account.omemo.encrypt(this.model.contact, stanza).then((msg) => {\n                    if (msg) {\n                        stanza = msg.message;\n                        message.set('trusted', msg.is_trusted);\n                    }\n                    this.account.sendMsg(stanza);\n                });\n            } else {\n                message.set({xml: $(stanza.tree()).clone()[0]});\n                this.account.sendMsg(stanza);\n            }\n        }\n        this.close();\n    },\n\n    closeLocationName: function (e) {\n        this.$el.find('.ol-location').hide()\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    initializeScrollbar: function () {\n        this.ps_container = this.$('.nominatim.ol-search');\n        this.ps_container.perfectScrollbar(\n            _.extend(this.ps_settings || {}, xabber.ps_settings)\n        );\n    },\n\n    destroyScrollbar: function () {\n        this.ps_container = this.$('.nominatim.ol-search');\n        this.ps_container.perfectScrollbar('destroy');\n    },\n});\n\nxabber.ChatBottomView = xabber.BasicView.extend({\n    className: 'chat-bottom-wrap',\n    ps_selector: '.message-reference-preview-container',\n    template: templates.chat_bottom,\n    avatar_size: constants.AVATAR_SIZES.CHAT_BOTTOM,\n    mention_avatar_size: constants.AVATAR_SIZES.MENTION_ITEM,\n\n    events: {\n        \"click\": \"onClickBottom\",\n        \"click .ql-editor\": \"focusOnInput\",\n        \"click .my-avatar\": \"showAccountSettings\",\n        \"keyup .input-message .rich-textarea\": \"keyUp\",\n        \"keydown .input-message .rich-textarea\": \"keyDown\",\n        \"change .attach-file input\": \"onFileInputChanged\",\n        \"click .attach-location\": \"showLocationPopup\",\n        \"click .attach-media\": \"showMediaPopup\",\n        \"mouseup .message-input-panel\": \"stopWritingVoiceMessage\",\n        \"mousedown .attach-voice-message\": \"writeVoiceMessage\",\n        \"click .chat-mention\": \"onMentionButtonClick\",\n        \"click .close-forward\": \"unsetForwardedMessages\",\n        \"click .close-attachments\": \"removeAttachments\",\n        \"click .send-message\": \"submit\",\n        \"click .markup-text\": \"onShowMarkupPanel\",\n        \"click .reply-message\": \"replyMessages\",\n        \"click .forward-message\": \"forwardMessages\",\n        \"click .pin-message\": \"pinMessage\",\n        \"click .copy-message\": \"copyMessages\",\n        \"click .edit-message\": \"showEditPanel\",\n        \"click .delete-message\": \"deleteMessages\",\n        \"click .close-message-panel\": \"resetSelectedMessages\",\n        \"click .mention-item\": \"inputMention\",\n        \"click .format-text\": \"updateMarkupPanel\",\n        \"click .link-message-reference .mdi-close\": \"removeLinkReference\",\n        \"click .preview-preloader-container .preview-cancel-preloader\": \"stopLoadingLinkReference\",\n        \"click .message-reference-preview-item-file .mdi-close\": \"removeFileSnippet\",\n        \"click .btn-manage-devices\": \"openDevicesWindow\",\n        \"click .ephemeral-timer-time\": \"showEphemeralTimerSelector\",\n    },\n\n    _initialize: function (options) {\n        this.view = options.content;\n        this.model = this.view.model;\n        this.click_counter = 0;\n        let rich_textarea_wrap = this.$('.rich-textarea-wrap');\n        let bindings = {\n            enter: {\n                key: 13,\n                handler: function(range) {\n                    if (xabber.settings.hotkeys !== \"enter\")\n                        this.quill.insertText(range.index, \"\\n\");\n                }\n            },\n            arrow_up: {\n                key: constants.KEY_ARROW_UP,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none') {\n                        let active_item = this.$('.mentions-list').children('.active.mention-item');\n                        if (active_item.length)  {\n                            let $prev_elem = active_item.prev('.mention-item');\n                            active_item.removeClass('active');\n                            if (!$prev_elem.length) {\n                                $prev_elem = this.$('.mentions-list').children('.mention-item').last().addClass('active');\n                                this.$('.mentions-list')[0].scrollTop = this.$('.mentions-list')[0].scrollHeight;\n                            }\n                            $prev_elem.addClass('active');\n                            if ($prev_elem.length && ($prev_elem[0].offsetTop <= this.$('.mentions-list')[0].scrollTop))\n                                this.$('.mentions-list')[0].scrollTop = $prev_elem[0].offsetTop;\n                        }\n                        else {\n                            this.$('.mentions-list')[0].scrollTop = this.$('.mentions-list')[0].scrollHeight;\n                            this.$('.mentions-list').children('.mention-item').last().addClass('active');\n                        }\n                        return false;\n                    }\n                    else\n                        return true;\n                }\n            },\n            arrow_down: {\n                key: constants.KEY_ARROW_DOWN,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none') {\n                        let active_item = this.$('.mentions-list').children('.active.mention-item');\n                        if (active_item.length) {\n                            let $next_elem = active_item.next('.mention-item');\n                            active_item.removeClass('active');\n                            if (!$next_elem.length) {\n                                $next_elem = this.$('.mentions-list').children('.mention-item').first();\n                                this.$('.mentions-list')[0].scrollTop = 0;\n                            }\n                            $next_elem.addClass('active');\n                            if ($next_elem.length && ($next_elem[0].offsetTop + $next_elem[0].clientHeight >= this.$('.mentions-list')[0].scrollTop + this.$('.mentions-list')[0].clientHeight))\n                                this.$('.mentions-list')[0].scrollTop = $next_elem[0].offsetTop - this.$('.mentions-list')[0].clientHeight + $next_elem[0].clientHeight;\n                        }\n                        else {\n                            this.$('.mentions-list')[0].scrollTop = 0;\n                            this.$('.mentions-list').children('.mention-item').first().addClass('active');\n                        }\n                        return false;\n                    }\n                    else\n                        return true;\n                }\n            },\n            arrow_left: {\n                key: constants.KEY_ARROW_LEFT,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none')\n                        return false;\n                    else\n                        return true;\n                }\n            },\n            arrow_right: {\n                key: constants.KEY_ARROW_RIGHT,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none')\n                        return false;\n                    else\n                        return true;\n                }\n            }\n        };\n        this.quill = new Quill(rich_textarea_wrap[0], {\n            modules: {\n                keyboard: {\n                    bindings: bindings\n                },\n                toolbar: [\n                    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n                    this.model.get('group_chat') ? ['mention'] : [],\n                    ['clean']\n                ]\n            },\n            formats: ['bold', 'italic', 'underline', 'strike', 'blockquote', 'clean', 'emoji', 'mention'],\n            placeholder: xabber.getString(this.model.get('encrypted') ? \"chat_bottom__hint_default_encrypted\" : \"chat_bottom__hint_default\"),\n            scrollingContainer: '.rich-textarea',\n            theme: 'snow'\n        });\n        this.quill.container.firstChild.classList.add('rich-textarea');\n        this.$('.ql-mention').prop('disabled', true);\n        this.$('.ql-mention').append('<div class=\"chat-mention\" =\"\">@</div>');\n        this.contact = this.view.contact;\n        this.account = this.view.account;\n        this.fwd_messages = [];\n        this.edit_message = null;\n        this.stopped_loading_link_reference = false;\n        this.link_references = [];\n        this.link_reference_exempted = [];\n        this.currently_loaded_link_references = [];\n        this.attached_files = [];\n        this.loading_link_reference = false;\n        this.$('.account-jid').text(this.account.get('jid'));\n        this.updateAvatar();\n        this.quill.on(\"text-change\", this.onChangedText, this);\n        this.account.on(\"change:image\", this.updateAvatar, this);\n        this.account.on('trusting_updated', this.updateEncrypted, this);\n        if (this.contact) {\n            this.contact.on(\"change:blocked\", this.onBlockedUpdate, this);\n            this.contact.on('update_my_info', this.updateInfoInBottom, this);\n        }\n        this.model.on(\"change:chat_ephemeral_timer\", this.updateEphemeralTimer, this);\n        this.model.on(\"reply_selected_messages\", this.replyMessages, this);\n        this.model.on(\"forward_selected_messages\", this.forwardMessages, this);\n        this.model.on(\"copy_selected_messages\", this.copyMessages, this);\n        this.model.on(\"delete_selected_messages\", this.deleteMessages, this);\n        this.model.on(\"edit_selected_message\", this.showEditPanel, this);\n        this.model.on(\"pin_selected_message\", this.pinMessage, this);\n        this.model.on(\"reset_selected_messages\", this.resetSelectedMessages, this);\n        this.content_view = (this.view.data.get('visible') ? this.view : this.model.messages_view) || this.view;\n        let $rich_textarea = this.$('.input-message .rich-textarea'),\n            rich_textarea = $rich_textarea[0],\n            $rich_textarea_wrap = $rich_textarea.parent('.rich-textarea-wrap'),\n            $placeholder = $rich_textarea.siblings('.placeholder');\n        rich_textarea.onpaste = this.onPaste.bind(this);\n        rich_textarea.oncut = this.onCut.bind(this);\n        rich_textarea.ondragenter = (ev) => {\n            ev.preventDefault();\n            $placeholder.text(xabber.getString(\"chat_bottom__drag_and_drop__text_drop_files_here\"));\n            $rich_textarea_wrap.addClass('file-drop');\n        };\n        rich_textarea.ondragover = (ev) => {\n            ev.preventDefault();\n        };\n        rich_textarea.ondragleave = (ev) => {\n            if ($(ev.relatedTarget).closest('.rich-textarea').length)\n                return;\n            ev.preventDefault();\n            $placeholder.text(xabber.getString(\"chat_bottom__hint_default\"));\n            $rich_textarea_wrap.removeClass('file-drop');\n        };\n        rich_textarea.ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            $placeholder.text(xabber.getString(\"chat_bottom__hint_default\"));\n            $rich_textarea_wrap.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [];\n            this.view.addFileMessage(files);\n        };\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        let onloaded_sprites = 0,\n            i = 0,\n            all_sprites = Object.keys(Emoji.all).length;\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`);\n            $(`<div id=${emoji_list} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: emoji_list})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: emoji_list, title: xabber.getString(constants.EMOJI_LIST_NAME(emoji_list)), tag_name: 'a', emoji_size: 20}));\n        }\n        let window_onclick = function (ev) {\n            if ($(ev.target).closest('.emoticons-panel-wrap').length || $(ev.target).closest('.insert-emoticon').length)\n                return;\n            $emoji_panel_wrap.removeClass('opened');\n            window.removeEventListener(\"click\" , window_onclick);\n        };\n        $emoji_panel.perfectScrollbar(\n                _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.click((ev) => {\n            if (_timeout)\n                clearTimeout(_timeout);\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if ($emoji_panel_wrap.hasClass('opened')) {\n                $emoji_panel_wrap.removeClass('opened');\n                window.removeEventListener( \"click\" , window_onclick);\n            }\n            else {\n                $emoji_panel_wrap.addClass('opened');\n                window.addEventListener( \"click\" , window_onclick);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(() => {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout)\n                clearTimeout(_timeout);\n            if (ev.button)\n                return;\n            let $target = $(ev.target),\n                $target_emoji = $target.closest('.emoji-wrap').find('.emoji');\n            if ($target.closest('.emoji-menu').length)\n                return;\n            $target_emoji.length && this.typeEmoticon($target_emoji.data('emoji'));\n        });\n        this.renderLastEmoticons();\n    },\n\n    render: function (options) {\n        this.$('.message-input-panel').hideIf(options.blocked);\n        this.$('.blocked-msg').showIf(options.blocked);\n        this.$el.switchClass('chat-bottom-blocked-wrap', options.blocked);\n        this.updateAvatar();\n        this.updateEncrypted();\n        this.updateEphemeralTimer();\n        this.$('.ephemeral-timer-time').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        let http_upload = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD);\n        this.content_view = (this.view.data.get('visible') ? this.view : this.model.messages_view) || this.view;\n        this.messages_arr = this.content_view.$el.hasClass('participant-messages-wrap') && this.account.participant_messages || this.content_view.$el.hasClass('messages-context-wrap') && this.account.context_messages || this.model.messages;\n        this.renderLastEmoticons();\n        this.$('.edit-message-wrap').hideIf(this.model.get('encrypted'));\n        this.$('.attach-file').showIf(http_upload);\n        this.$('.attach-location').showIf(xabber.settings.mapping_service);\n        this.$('.attach-media').showIf(this.account.get('gallery_token') && this.account.get('gallery_url'));\n        this.$('.ql-toolbar.ql-snow').switchClass('ql-moved-left', !xabber.settings.mapping_service || !(this.account.get('gallery_token') && this.account.get('gallery_url')));\n        this.$('.ql-toolbar.ql-snow').switchClass('ql-moved-left-extra', !xabber.settings.mapping_service && !(this.account.get('gallery_token') && this.account.get('gallery_url')));\n        if (this.model.get('group_chat')) {\n            this.updateInfoInBottom();\n        }\n        else {\n            this.$('.account-nickname').hide();\n            this.$('.account-badge').hide();\n            this.$('.account-role').hide();\n        }\n        this.focusOnInput();\n        this.manageSelectedMessages();\n        xabber.chat_body.updateHeight();\n        return this;\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.message-actions-panel .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        (Math.max.apply(null, widths) !== 0) && this.$('.message-actions-panel .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    showEphemeralTimerSelector: function () {\n        this.model.showEphemeralTimerSelector();\n    },\n\n    updateEncrypted: function () {\n        this.$el.children('.preloader-wrapper').detach();\n        this.$el.children('.omemo-disabled').detach();\n        this.view.$el.removeClass('encrypted');\n        this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').addClass('hidden').removeClass('encryption-warning').html(\"\");\n        this.$el.attr('data-trust', null);\n        this.$el.attr('data-contact-trust', null);\n        this.$el.find('.warning-wrap').detach();\n        if (!this.model.get('encrypted'))\n            return;\n        if (this.account.omemo) {\n            this.$el.addClass('loading');\n            this.$el.prepend(env.templates.contacts.preloader());\n            this.account.omemo.checkOwnFingerprints().then((is_trusted) => {\n                if (is_trusted == 'none' || is_trusted == 'error') {\n                    let is_scrolled_bottom = this.view.isScrolledToBottom();\n                    this.$el.attr('data-trust', is_trusted);\n                    this.view.$('.chat-message:not([data-trust=untrusted])').attr('data-trust', is_trusted);\n                    this.view.$('.chat-day-indicator:not(.fixed-day-indicator-wrap)').attr('data-trust', is_trusted);\n                    this.view.$el.attr('data-trust', is_trusted);\n                    this.$el.removeClass('loading');\n                    this.$el.children('.preloader-wrapper').detach();\n                    if (is_trusted == 'none')\n                        this.$el.prepend(templates.encryption_warning({color: 'amber', message: xabber.getString(\"omemo__alert_new_device_yours__text_new_device\")}));\n                    else\n                        this.$el.prepend(templates.encryption_warning({color: 'red', message: xabber.getString(\"omemo__alert_keys_changed_yours__text_keys_changed\")}));\n                    xabber.chat_body.updateHeight();\n                    is_scrolled_bottom && this.view.scrollToBottom();\n                    this.account.omemo.checkContactFingerprints(this.contact);\n                    (this.model.get('active') && this.model.get('display')) && this.focusOnInput();\n                } else {\n                    this.account.omemo.checkContactFingerprints(this.contact).then((obj) => {\n                        let is_contact_trusted = obj.trust,\n                            unverified_counter = obj.unverified_counter;\n                        let is_scrolled_bottom = this.view.isScrolledToBottom();\n                        this.$el.removeClass('loading');\n                        this.$el.children('.preloader-wrapper').detach();\n                        if (is_contact_trusted === 'nil') {\n                            this.$el.prepend($(`<div class=\"warning-wrap no-fingerprints\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                            return;\n                        }\n                        if (is_contact_trusted === 'error') {\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                            this.$el.prepend(templates.encryption_warning({color: 'red', message: xabber.getString(\"omemo__alert_keys_changed_partner__text_keys_changed\")}));\n                        } else {\n                            if (is_contact_trusted === 'none') {\n                                this.view.$el.addClass('encrypted');\n                                this.view.$('.chat-notification').removeClass('hidden').addClass('encryption-warning').attr('data-unverified-device-count', unverified_counter).html(templates.content_encryption_warning({message: xabber.getString(\"omemo__alert_new_device_partner__text_new_device\")}));\n                            }\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                        }\n                        this.view.$el.attr('data-trust', is_contact_trusted);\n                        this.view.$('.chat-message:not([data-trust=untrusted])').attr('data-trust', is_contact_trusted);\n                        this.view.$('.chat-day-indicator:not(.fixed-day-indicator-wrap)').attr('data-trust', is_contact_trusted);\n                        xabber.chat_body.updateHeight();\n                        is_scrolled_bottom && this.view.scrollToBottom();\n                        (this.model.get('active') && this.model.get('display')) && this.focusOnInput();\n                    });\n                }\n            });\n        } else {\n            this.$el.addClass('loading');\n            this.$el.prepend($('<div class=\"omemo-disabled warning-wrap\"/>').text(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\")));\n        }\n    },\n\n    openDevicesWindow: function () {\n        if (this.account.omemo) {\n            if (this.$el.attr('data-trust') !== undefined) {\n                this.account.showSettings(null, 'devices');\n            } else if (this.$el.attr('data-contact-trust') !== undefined) {\n                let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n                peer.fingerprints.open();\n            }\n        } else\n            utils.dialogs.error(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\"));\n    },\n\n    updateEphemeralTimer: function () {\n        this.$('.ephemeral-timer-time').addClass('hidden');\n        if (!this.model.get('encrypted'))\n            return;\n        this.$('.ephemeral-timer-time').text(utils.pretty_duration_ephemeral_timer(this.model.get('chat_ephemeral_timer')));\n        utils.pretty_duration_ephemeral_timer(this.model.get('chat_ephemeral_timer')) && this.$('.ephemeral-timer-time').removeClass('hidden');\n    },\n\n    onBlockedUpdate: function () {\n        if (!this.isVisible())\n            return;\n        let is_blocked = this.model.get('blocked');\n        this.$('.message-input-panel').hideIf(is_blocked);\n        this.$('.blocked-msg').showIf(is_blocked);\n        this.$el.switchClass('chat-bottom-blocked-wrap', is_blocked);\n    },\n\n    onClickBottom: function (ev) {\n        if ($(ev.target).closest('.ql-editor.rich-textarea').length) {\n            if (!this.quill.getText().trim().length) {\n                if (++this.click_counter === 3) {\n                    this.click_counter = 0;\n                    this.setOneLiner();\n                }\n            }\n        }\n    },\n\n    updateInfoInBottom: function () {\n        if (this.contact && this.contact.my_info) {\n            let nickname = this.contact.my_info.get('nickname'),\n                badge = this.contact.my_info.get('badge'),\n                avatar = this.contact.my_info.get('b64_avatar'),\n                role = this.contact.my_info.get('role');\n            if (nickname) {\n                this.$('.account-jid').hide();\n                this.$('.account-nickname').show().text(nickname);\n            }\n            else\n                this.$('.account-nickname').hide();\n            if (badge)\n                this.$('.account-badge').show().text(badge);\n            else\n                this.$('.account-badge').hide();\n            if (role && role != 'member')\n                this.$('.account-role').show().text(utils.pretty_name(role));\n            else\n                this.$('.account-role').hide();\n            this.$('.input-toolbar').emojify('.account-badge', {emoji_size: 16});\n            if (!avatar && this.contact.my_info.get('avatar_url'))\n                avatar = this.contact.my_info.get('avatar_url');\n            if (!avatar && this.account.cached_image)\n                avatar = this.account.cached_image;\n            !avatar && (avatar = Images.getDefaultAvatar(nickname));\n            this.$('.my-avatar.circle-avatar').setAvatar(avatar, this.avatar_size);\n        }\n        else {\n            this.$('.account-jid').show();\n            this.$('.account-nickname').hide();\n            this.$('.account-badge').hide();\n            this.$('.account-role').hide();\n        }\n    },\n\n    updateAvatar: function () {\n        let image;\n        if (this.contact && this.contact.get('group_chat')) {\n            if (this.contact.my_info){\n                if (this.contact.my_info.get('b64_avatar'))\n                    image = this.contact.my_info.get('b64_avatar');\n                if (!image && this.contact.my_info.get('avatar_url'))\n                    image = this.contact.my_info.get('avatar_url');\n                if (!image && this.account.cached_image)\n                    image = this.account.cached_image;\n            }\n            !image && (image = Images.getDefaultAvatar(this.contact.my_info && this.contact.my_info.nickname || this.account.get('jid')));\n        }\n        else\n            image = this.account.cached_image;\n        this.$('.my-avatar.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    focusOnInput: function () {\n        if (!xabber.body.$el.siblings('#modals').children('.open:not(.collapsed):not(.plyr-player-popup-view)').length){\n            this.quill.enable();\n            this.quill.focus();\n        } else {\n            this.quill.blur();\n            this.quill.disable();\n        }\n        return this;\n    },\n\n    moveCursorToEnd: function () {\n        this.quill.root.focus();\n        let range = document.createRange(),\n            sel = window.getSelection(),\n            target = this.quill.root.lastElementChild\n            && this.quill.root.lastElementChild.lastChild ? this.quill.root.lastElementChild.lastChild : this.quill.root.lastElementChild;\n        range.selectNodeContents(target);\n        range.collapse(false);\n        sel.removeAllRanges();\n        sel.addRange(range);\n        range.detach(); // optimization\n        this.quill.root.scrollTop = this.quill.root.scrollHeight;\n    },\n\n    keyDown: function (ev) {\n        let $rich_textarea = this.$('.input-message .rich-textarea');\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact') ||\n                ev.keyCode === constants.KEY_BACKSPACE ||\n                ev.keyCode === constants.KEY_DELETE) {\n            return;\n        }\n        if (ev.keyCode === constants.KEY_ENTER || ev.keyCode === 10) {\n            if (this.$('.mentions-list').css('display') !== 'none') {\n                let active_item = this.$('.mentions-list').children('.active.mention-item');\n                active_item.length && active_item.click();\n                ev.preventDefault();\n                return;\n            }\n            let send_on_enter = xabber.settings.hotkeys === \"enter\";\n            if ((send_on_enter && ev.keyCode === constants.KEY_ENTER && !ev.shiftKey) ||\n                    (!send_on_enter && ev.ctrlKey)) {\n                ev.preventDefault();\n                this.submit();\n                return;\n            }\n        }\n        if ($rich_textarea.getTextFromRichTextarea().trim() && !this.view.chat_state && !this.view.edit_message && xabber.settings.typing_notifications)\n            this.view.sendChatState('composing');\n    },\n\n    displayMicrophone: function () {\n        this.$('.mdi-send').addClass('hidden');\n        this.$('.attach-voice-message').removeClass('hidden');\n    },\n\n    displaySend: function () {\n        this.$('.mdi-send').removeClass('hidden');\n        this.$('.attach-voice-message').addClass('hidden');\n    },\n\n    updateMarkupPanel: function (ev) {\n        let $ic_markup = $(ev.target).closest('.format-text');\n        $ic_markup.toggleClass('active');\n        if ($ic_markup.hasClass('active')) {\n            this.$('.ql-toolbar.ql-snow').show();\n            this.$('.last-emoticons').hide();\n        }\n        else {\n            this.$('.ql-toolbar.ql-snow').hide();\n            this.$('.last-emoticons').show();\n        }\n    },\n\n    setOneLiner: function () {\n        let rand_idx = _.random(0, xabber.getOneLiners().length - 1),\n            placeholder = xabber.getOneLiners()[rand_idx].replace(/\\\\n/, \"\");\n        if (!placeholder) {\n            this.setOneLiner();\n            return;\n        }\n        this.updatePlaceholder(placeholder);\n    },\n\n    setDefaultPlaceholder: function () {\n        let placeholder = this.model.get('encrypted') ? xabber.getString(\"chat_bottom__hint_default_encrypted\") : xabber.getString(\"chat_bottom__hint_default\");\n        this.updatePlaceholder(placeholder);\n    },\n\n    updatePlaceholder: function (placeholder) {\n        this.quill.root.setAttribute('data-placeholder', placeholder);\n    },\n\n    changeEncryption: function () {\n        this.model.set('encrypted', !this.model.get('encrypted'));\n    },\n\n    getParticipantsList: function () {\n        let list = [];\n        this.contact.participants.each((participant) => {\n            list.push(participant.get('nickname') || participant.get('jid') || participant.get('id'));\n        });\n        return list.join(', ');\n    },\n\n    onChangedText: function () {\n        let current_height = this.$el.height(),\n            quill_textarea = $(this.quill.container).find('.rich-textarea'),\n            quill_current_height = quill_textarea.prop('scrollHeight');\n        if (quill_current_height !== this.text_input_height) {\n            if (this.text_input_height < quill_current_height){\n                quill_textarea.scrollTop(quill_current_height);\n            }\n            this.text_input_height = quill_current_height;\n        }\n        let quill_content = this.quill.getContents()\n        if (quill_content && quill_content.ops && quill_content.ops.length){\n            let text = quill_content.ops[0].insert;\n            if (text && text.trimStart) {\n                let trimmed_text = text.trimStart();\n                if (text.length != trimmed_text.length){\n                    quill_content.ops[0].insert = trimmed_text;\n                    this.quill.setContents(quill_content, 'user');\n                    this.quill.disable();\n                    setTimeout(() => {\n                        this.focusOnInput();\n                        this.quill.root.focus();\n                    },1)\n                }\n            }\n        }\n\n        if (current_height !== this.bottom_height) {\n            this.bottom_height = current_height;\n            this.view.scrolled_to_bottom = this.view.isScrolledToBottom();\n        }\n        clearTimeout(this._timeout_textchange);\n        this._timeout_textchange = setTimeout(() => {\n            this.updateOpenGraphReference(this.quill.getText())\n        }, 500);\n    },\n\n    updateMentionsList: function (mention_text) {\n        mention_text = (mention_text || \"\").toLowerCase();\n        this.contact.searchByParticipants(mention_text, (participants) => {\n            if (participants.length || xabber.getString(\"chat_bottom__mentions_list__item_everyone\").toLowerCase().indexOf(mention_text) > -1 || mention_text === \"*\" || 'all'.indexOf(mention_text) > -1 || 'все'.indexOf(mention_text) > -1) {\n                this.$('.mentions-list').html(\"\").show().perfectScrollbar({theme: 'item-list'});\n                this.$('.mentions-list')[0].scrollTop = 0;\n                participants.forEach((participant) => {\n                    let attrs = _.clone(participant.attributes);\n                    if (!attrs.id)\n                        return;\n                    attrs.nickname = attrs.nickname ? Strophe.xmlescape(attrs.nickname) : attrs.id;\n                    let mention_item = $(templates.group_chats.mention_item(attrs));\n                    mention_item.find('.circle-avatar').setAvatar(participant.get('b64_avatar') || utils.images.getDefaultAvatar(participant.get('nickname') || participant.get('jid') || participant.get('id')), this.mention_avatar_size);\n                    mention_item.find('.nickname').text().replace(mention_text, mention_text.bold());\n                    this.$('.mentions-list').append(mention_item);\n                });\n                let mention_all = $(templates.group_chats.mention_item({jid: \"\", nickname: xabber.getString(\"chat_bottom__mentions_list__item_everyone\"), id: \"\"}));\n                mention_all.find('.circle-avatar').setAvatar(this.contact.cached_image, this.mention_avatar_size);\n                mention_all.find('.one-line.jid').text(this.getParticipantsList());\n                this.$('.mentions-list').append(mention_all);\n                this.$('.mentions-list').children('.mention-item').first().addClass('active');\n            } else\n                this.$('.mentions-list').html(\"\").hide();\n        });\n    },\n\n    onMentionButtonClick: function () {\n        if (this.$('.ql-mention').hasClass('ql-active')){\n            this.$('.ql-mention').prop('disabled', false);\n            this.$('.ql-mention').click();\n            this.$('.ql-mention').prop('disabled', true);\n\n            return;\n        }\n        let selection = this.quill.getSelection() ? this.quill.getSelection().index : (this.quill.getLength() - 1);\n        this.quill.insertText(selection, ' @ ', 'user')\n        this.quill.setSelection(selection + 2, 0)\n        let mention_text = \"\";\n        if (this.contact.participants.length && this.contact.participants.version > 0 && (this.contact.get('group_info') && this.contact.participants && this.contact.get('group_info').members_num == this.contact.participants.length)) {\n            this.updateMentionsList(mention_text);\n        } else {\n            this.contact.participants.participantsRequest({version: 0}, () => {\n                this.updateMentionsList(mention_text);\n            });\n        }\n\n    },\n\n    inputMention: function (ev) {\n        ev && ev.preventDefault();\n        let $rich_textarea = this.$('.rich-textarea'),\n            $participant_item = $(ev.target).closest('.mention-item'),\n            nickname = $participant_item.data('nickname'),\n            id = $participant_item.data('id') || \"\",\n            jid = !this.contact.get('incognito_chat') && $participant_item.data('jid') || \"\",\n            text = $rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\"),\n            caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n            mention_at_regexp = /(^|\\s)@(\\w+)?/g,\n            mention_plus_regexp = /(^|\\s)[+](\\w+)?/g,\n            to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replaceEmoji(),\n            mentions_at = to_caret_text && Array.from(to_caret_text.matchAll(mention_at_regexp)) || [],\n            mentions_plus = to_caret_text && Array.from(to_caret_text.matchAll(mention_plus_regexp)) || [],\n            at_position = mentions_at.length ? mentions_at.slice(-1)[0].index : -1,\n            plus_position = mentions_plus.length ? mentions_plus.slice(-1)[0].index : -1,\n            mention_position = Math.max(at_position, plus_position),\n            mention_text = Array.from(to_caret_text).slice(mention_position, caret_position).join(\"\");\n        (mention_text.length && mention_text[0].match(/\\s/)) && mention_position++;\n        mention_text = mention_text.replace(/\\s?(@|[+])/, \"\");\n        this.$('.mentions-list').hide();\n        this.quill.deleteText(mention_position, (mention_text.length + 1));\n        if (!nickname.length) {\n            if (id.length)\n                nickname = id;\n            else\n                return;\n        }\n        this.insertMention({jid: jid, id: id, nickname: nickname, position: mention_position});\n        this.focusOnInput();\n    },\n\n    insertMention: function (options) {\n        if (!options)\n            return;\n        let id = options.id, jid = options.jid, nickname = options.nickname,\n            is_me = !id && !jid || this.account.get('jid') === jid || this.contact.my_info && this.contact.my_info.get('id') === id,\n            attrs = {jid: jid, id: id, nickname: Strophe.xmlescape(nickname), is_me: is_me},\n            position = options.position;\n        this.quill.insertEmbed(position, 'mention', JSON.stringify(attrs));\n        this.quill.pasteHTML(position + nickname.length, '<text> </text>');\n        this.quill.setSelection(position + nickname.length + 1, 0);\n    },\n\n    showAccountSettings: function () {\n        if (this.contact.get('group_chat')) {\n            if (this.contact.my_info && this.contact.my_rights) {\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(this.contact.my_info, this.contact.my_rights);\n            } else\n                this.contact.getMyInfo(() => {\n                    this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                    this.contact.details_view_right.participants.participant_properties_panel.open(this.contact.my_info, this.contact.my_rights);\n                });\n        } else {\n            this.account.showSettings();\n        }\n    },\n\n    keyUp: function (ev) {\n        let $rich_textarea = $(ev.target).closest('.rich-textarea'),\n            text = $rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\");\n        if (text) {\n            this.click_counter = 0;\n            this.setDefaultPlaceholder();\n        }\n        if (ev.keyCode === constants.KEY_ARROW_UP) {\n            if (!text && !this.model.get('encrypted')) {\n                let $msg = this.view.$(`.chat-message[data-from=\"${this.account.get('jid')}\"]`).last();\n                (!$msg.length && this.contact.participants) && ($msg = this.view.$(`.chat-message[data-from=\"${this.contact.participants.find(m => m.get('jid') === this.account.get('jid')).get('id')}\"]`).last());\n                let edit_msg = this.messages_arr.get($msg.data('uniqueid'));\n                if (!edit_msg)\n                    return;\n                this.edit_message = edit_msg;\n                this.setEditedMessageAttachments(edit_msg);\n                this.setEditedMessage(edit_msg);\n            }\n        }\n        if ((!text || text == \"\\n\") && !this.edit_message && !(this.attached_files && this.attached_files.length) && !(this.link_references && this.link_references.length))\n            this.displayMicrophone();\n        else\n            this.displaySend();\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact') && !this.edit_message) {\n            ev.preventDefault();\n            if (this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0) {\n                let $elem = this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').last();\n                if ($elem.hasClass('link-message-reference')){\n                    let url = $elem.attr('data-original-url');\n                    if (url) {\n                        $elem.remove();\n                        this.removeLinkReferenceByUrl(url);\n                    }\n                } else {\n                    let id = $elem.attr('data-id');\n                    if (id) {\n                        $elem.remove();\n                        this.removeFileSnippetById(id);\n                    }\n                }\n            } else {\n                this.unsetForwardedMessages();\n            }\n        } else if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            ev.preventDefault();\n            this.unsetForwardedMessages();\n        } else {\n            if (ev.keyCode === constants.KEY_ARROW_UP || ev.keyCode === constants.KEY_ARROW_DOWN) {\n                return;\n            }\n            if ((ev.keyCode === constants.KEY_ARROW_LEFT || ev.keyCode === constants.KEY_ARROW_RIGHT) && this.$('.mentions-list').css('display') !== 'none') {\n                this.$('.mentions-list').hide();\n                return;\n            }\n            if ((ev.keyCode === constants.KEY_BACKSPACE || ev.keyCode === constants.KEY_DELETE) && !this.edit_message && !(this.attached_files && this.attached_files.length) && !(this.link_references && this.link_references.length)) {\n                if (!text || text == \"\\n\") {\n                    if (this.$('.fwd-messages-preview').hasClass('hidden'))\n                        this.displayMicrophone();\n                    else\n                        this.displaySend();\n                    $rich_textarea.flushRichTextarea();\n                }\n            }\n            if (ev.keyCode === constants.KEY_SPACE) {\n                let caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n                    to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replaceEmoji();\n                if (to_caret_text[caret_position - 2] && to_caret_text[caret_position - 2].match(/@|[+]/)) {\n                    this.$('.mentions-list').hide();\n                    return;\n                }\n            }\n            if (this.model.get('group_chat')) {\n                let caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n                    mention_at_regexp = /(^|\\s)@(\\w+)?/g,\n                    mention_plus_regexp = /(^|\\s)[+](\\w+)?/g,\n                    to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replace(/\\n$/, \"\").replaceEmoji(),\n                    mentions_at = Array.from(to_caret_text.matchAll(mention_at_regexp)),\n                    mentions_plus = Array.from(to_caret_text.matchAll(mention_plus_regexp)),\n                    at_position = mentions_at.length ? mentions_at.slice(-1)[0].index : -1,\n                    plus_position = mentions_plus.length ? mentions_plus.slice(-1)[0].index : -1,\n                    mention_position = Math.max(at_position, plus_position);\n                if (this.quill.selection.lastRange && this.quill.getLeaf(this.quill.selection.lastRange.index)[0].parent.domNode.tagName.toLowerCase() === 'mention') {\n                    this.$('.mentions-list').hide();\n                    return;\n                }\n                if (!(caret_position > -1) || mention_position === -1) {\n                    this.$('.mentions-list').hide();\n                }\n                if (mention_position > -1) {\n                    let mention_text = Array.from(to_caret_text).slice(mention_position, caret_position).join(\"\").replace(/\\s?(@|[+])/, \"\");\n                        if (this.contact.participants.length && this.contact.participants.version > 0 && (this.contact.get('group_info') && this.contact.participants && this.contact.get('group_info').members_num == this.contact.participants.length)) {\n                            this.updateMentionsList(mention_text);\n                        } else {\n                            this.contact.participants.participantsRequest({version: 0}, () => {\n                                this.updateMentionsList(mention_text);\n                            });\n                        }\n                }\n                else\n                    this.$('.mentions-list').hide();\n            }\n        }\n        $rich_textarea.updateRichTextarea();\n        this.focusOnInput();\n        xabber.chat_body.updateHeight();\n    },\n\n    onCut: function () {\n        if (this.$('.fwd-messages-preview').hasClass('hidden'))\n            this.displayMicrophone();\n        else {\n            this.displaySend();\n        }\n    },\n\n    onPaste: function (ev) {\n        let $rich_textarea = $(ev.target),\n            clipboard_data = ev.clipboardData;\n        // if (clipboard_data) {\n            if (clipboard_data && clipboard_data.files.length > 0) {\n                console.log('true');\n                ev.preventDefault();\n                let image_from_clipboard = clipboard_data.files[clipboard_data.files.length - 1],\n                    blob_image = window.URL.createObjectURL(new Blob([image_from_clipboard])),\n                    options = { blob_image_from_clipboard: blob_image};\n                this.view.addFileMessage([image_from_clipboard]);\n                this.focusOnInput();\n            }\n            else if (clipboard_data && clipboard_data.items.length > 0) {\n                let image_from_clipboard = clipboard_data.items[clipboard_data.items.length - 1];\n                if (image_from_clipboard.kind === 'file') {\n                    console.log('true');\n                    ev.preventDefault();\n                    let blob = image_from_clipboard.getAsFile(),\n                        reader = new FileReader(), deferred = new $.Deferred();\n                    reader.onload = function(event){\n                        let options = { blob_image_from_clipboard: event.target.result};\n                        deferred.resolve();\n                        this.focusOnInput();\n                    };\n                    deferred.done(() => {\n                        blob.name = 'clipboard.png';\n                        this.view.addFileMessage([blob]);\n                    });\n                    reader.readAsDataURL(blob);\n                }\n                // else {\n                //     let text = _.escape(clipboard_data.getData('text')),\n                //         arr_text = Array.from(text);\n                //     arr_text.forEach((item, idx) => {\n                //         if (item == '\\n')\n                //             arr_text.splice(idx, 1, '</p><p>');\n                //         if (item == ' ')\n                //             arr_text.splice(idx, 1, '&nbsp');\n                //     });\n                //     text = \"<p>\" + arr_text.join(\"\") + \"</p>\";\n                //     let range = window.getSelection().getRangeAt(0);\n                //     range.insertNode($('<div>' + text + '</div>')[0]);\n                // }\n            }\n            // else {\n            //     let text = _.escape(clipboard_data.getData('text')),\n            //         arr_text = Array.from(text);\n            //     arr_text.forEach((item, idx) => {\n            //         if (item == '\\n')\n            //             arr_text.splice(idx, 1, '</p><p>');\n            //         if (item == ' ')\n            //             arr_text.splice(idx, 1, '&nbsp');\n            //     });\n            //     text = \"<p>\" + arr_text.join(\"\") + \"</p>\";\n            //     let range = window.getSelection().getRangeAt(0);\n            //     range.insertNode($('<div>' + text + '</div>')[0]);\n            // }\n        // }\n        // if ($rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\") && !this.view.chat_state && !this.view.edit_message && xabber.settings.typing_notifications)\n        //     this.view.sendChatState('composing');\n        // this.focusOnInput();\n        // this.displaySend();\n        // xabber.chat_body.updateHeight();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target,\n            files = [];\n        for (let i = 0; i < target.files.length; i++) {\n            files.push(target.files[i]);\n        }\n\n        if (files && files.length) {\n            this.view.addFileMessage(files);\n            $(target).val('');\n        }\n    },\n\n    updateOpenGraphReference: function (text) {\n        if (!(this.account.get('gallery_token') && this.account.get('gallery_url')))\n            return;\n        let url_regexp = /(((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g,\n            list = text && text.match(url_regexp);\n        list = _.difference(list, this.link_reference_exempted);\n        list = _.difference(list, this.currently_loaded_link_references);\n        if (list && list.length){\n            this.stopped_loading_link_reference = false;\n            this.$('.preview-preloader-container').removeClass('hidden');\n            let request_count = 0;\n            this.link_reference_request_timestamp = Date.now();\n            let request_timestamp = this.link_reference_request_timestamp;\n            list.forEach((item, idx) => {\n                this.account.getOpenGraphData(item, (res) => {\n                    if (this.stopped_loading_link_reference || !(request_timestamp === this.link_reference_request_timestamp))\n                        return;\n                    if (this.currently_loaded_link_references.includes(item)){\n                        request_count++;\n                        if (request_count === list.length)\n                            this.$('.preview-preloader-container').addClass('hidden');\n                        return;\n                    } else {\n                        this.currently_loaded_link_references = this.currently_loaded_link_references.concat([item]);\n                    }\n                    let dfd = new $.Deferred();\n                    dfd.done(() => {\n                        request_count++;\n                        this.displaySend();\n                        this.$('.message-reference-preview').removeClass('hidden');\n                        if (request_count === list.length)\n                            this.$('.preview-preloader-container').addClass('hidden');\n                        res.original_text = item\n                        this.$('.message-reference-preview-container').append($(templates.messages.link_reference({\n                            item: res,\n                            domain: res.url ? utils.getDomainFromUrl(res.url) : res.site_name,\n                            url: null\n                        })));\n                        this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n                            type: 'image',\n                            closeOnContentClick: true,\n                            fixedContentPos: true,\n                            mainClass: 'mfp-no-margins mfp-with-zoom',\n                            image: {\n                                verticalFit: true,\n                                titleSrc: function(item) {\n                                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                                }\n                            },\n                            zoom: {\n                                enabled: true,\n                                duration: 300\n                            }\n                        });\n                        this.link_references = this.link_references.concat(res);\n                        xabber.chat_body.updateHeight();\n                        this.scrollToBottom();\n                    });\n                    if ((res.image_height && res.image_width) || !res.image){\n                        dfd.resolve()\n                    } else {\n                        let img = new Image();\n                        img.onload = (image) => {\n                            res.image_height = img.height;\n                            res.image_width = img.width;\n                            dfd.resolve()\n                        };\n                        img.onerror = img.onabort = (image) => {\n                            res.image = undefined;\n                            dfd.resolve()\n                        };\n                        img.src = res.image;\n                    }\n                }, (err) => {\n                    this.link_reference_exempted = this.link_reference_exempted.concat([item]);\n                    request_count++;\n                    if (request_count === list.length)\n                        this.$('.preview-preloader-container').addClass('hidden');\n                })\n\n            });\n        }\n    },\n\n    removeAttachments: function () {\n        this.removeAllFileSnippets();\n        this.removeAllLinkReferences();\n    },\n\n    stopLoadingLinkReference: function () {\n        this.$('.preview-preloader-container').addClass('hidden');\n        this.stopped_loading_link_reference = true;\n    },\n\n    removeLinkReference: function (ev) {\n        let $elem = $(ev.target).closest('.link-message-reference'),\n            url = $elem.attr('data-original-url');\n        $elem.remove();\n        this.removeLinkReferenceByUrl(url);\n    },\n\n    removeLinkReferenceByUrl: function (url) {\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.link_references = this.link_references.filter(item => item.original_text != url);\n        this.currently_loaded_link_references = this.currently_loaded_link_references.filter(item => item != url);\n        this.link_reference_exempted = this.link_reference_exempted.concat([url]);\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    removeAllLinkReferences: function () {\n        this.stopLoadingLinkReference();\n        this.$('.message-reference-preview-container .link-message-reference').remove();\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.link_references = [];//\n        this.currently_loaded_link_references = [];//\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    addFileSnippets: function (files) {\n        if (files && (this.attached_files.length + files.length) > 10){\n            utils.dialogs.error(xabber.getString(\"too_many_files_at_once\"));\n            return;\n        }\n        if (this.edit_message)\n            return;\n        files && files.length && this.$('.message-reference-preview').removeClass('hidden');\n        files && files.length && this.displaySend();\n        files.forEach((file) => {\n            let id = uuid();\n            file.uid = id;\n            this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                file: file,\n                uid: id,\n                blob: utils.isImageType(file.type) ? file.key ? file.image_prev.src : window.URL.createObjectURL(new Blob([file])) : null,\n                filesize: utils.pretty_size(file.size),\n                typeicon: utils.file_type_icon(file.type),\n                filetype: utils.pretty_file_type(file.type),\n            })));\n            this.attached_files = this.attached_files.concat([file]);\n            xabber.chat_body.updateHeight();\n            this.scrollToBottom();\n        });\n        files && files.length && this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    removeFileSnippet: function (ev) {\n        let $elem = $(ev.target).closest('.message-reference-preview-item-file'),\n            id = $elem.attr('data-id');\n        $elem.remove();\n        this.removeFileSnippetById(id);\n    },\n\n    removeFileSnippetById: function (id) {\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.attached_files = this.attached_files.filter(item => item.uid != id);\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    removeAllFileSnippets: function (ev) {\n        this.$('.message-reference-preview .message-reference-preview-item-file').remove();\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.attached_files = [];\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    setEditedMessageAttachments: function (edit_msg, is_upload) {\n        !is_upload && this.$('.attach-file input').attr('disabled', true);\n        this.removeAllFileSnippets();\n        this.removeAllLinkReferences();\n        let files = edit_msg.get('files') || [],\n            images = edit_msg.get('images') || [],\n            videos = edit_msg.get('videos') || [],\n            link_references = edit_msg.get('link_references') || [];\n        files = files.concat(images).concat(videos);\n        if ((link_references && link_references.length) || (files && files.length)) {\n            this.$('.message-reference-preview').removeClass('hidden');\n            this.displaySend();\n        }\n        link_references.forEach((item) => {\n            this.link_references = this.link_references.concat([item]);\n            this.currently_loaded_link_references = this.currently_loaded_link_references.concat(item.original_text);\n            this.$('.message-reference-preview-container').prepend($(templates.messages.link_reference({\n                item: item,\n                domain: item.url ? utils.getDomainFromUrl(item.url) : item.site_name,\n                url: null\n            })));\n            xabber.chat_body.updateHeight();\n        });\n        files.forEach((file) => {\n            if (!file)\n                return;\n            let id = uuid();\n            file.uid = id;\n            this.attached_files = this.attached_files.concat([file]);\n            if (is_upload){\n                this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                    file: file,\n                    uid: id,\n                    blob: utils.isImageType(file.type) ? file.key ? file.image_prev.src : window.URL.createObjectURL(new Blob([file])) : null,\n                    filesize: utils.pretty_size(file.size),\n                    typeicon: utils.file_type_icon(file.type),\n                    filetype: utils.pretty_file_type(file.type),\n                })));\n            } else{\n                this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                    file: file,\n                    uid: id,\n                    blob: file.sources.length && file.sources[0] && utils.isImageType(file.type) ? file.sources[0] : null,\n                    filesize: utils.pretty_size(file.size),\n                    typeicon: utils.file_type_icon(file.type),\n                    filetype: utils.pretty_file_type(file.type),\n                })));\n            }\n            xabber.chat_body.updateHeight();\n        });\n        ((link_references && link_references.length) || (files && files.length)) && this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    showLocationPopup: function (ev) {\n        if (!xabber.settings.mapping_service)\n            return;xabber\n        xabber.popup_coordinates = undefined;\n        xabber.location_name = undefined;\n        new xabber.ChatLocationView({content: this}).show(ev);\n    },\n\n    showMediaPopup: function (ev) {\n        if (this.edit_message)\n            return;\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let media_view = new xabber.SendMediaView();\n            media_view.render({parent: this, model: this.account});\n        }\n    },\n\n    stopWritingVoiceMessage: function (ev) {\n        let $bottom_panel = this.$('.message-input-panel');\n        if ($bottom_panel.find('.recording').length > 0) {\n            $bottom_panel.find('.recording').removeClass('recording');\n            return;\n        }\n    },\n\n    writeVoiceMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('recording'))\n            $elem.removeClass('recording');\n        else {\n            $elem.addClass('recording ground-color-50');\n            if (!this.model.get('recording_voice_message'))\n                this.initAudio();\n        }\n    },\n\n    initAudio: function() {\n        navigator.getUserMedia = (navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.webkitGetUserMedia || navigator.getUserMedia);\n        if (navigator.getUserMedia) {\n            this.model.set('recording_voice_message', true)\n            let constraints = { audio: true, channelCount: 1 },\n                chunks = [],\n                $mic = this.$('.send-area .attach-voice-message'),\n                onSuccess = (stream) => {\n                if (!$mic.is(\":hover\")) {\n                    $mic.removeClass('recording ground-color-50');\n                    this.model.set('recording_voice_message', false)\n                    return;\n                }\n                let mediaRecorder = new opusRecorder({\n                        encoderPath: opusRecorderEncoderPath,\n                        encoderSampleRate: 16000,\n                        numberOfChannels: 1\n                }),\n                    timer = 1, start_time, end_time,\n                    mic_hover = true;\n                    mediaRecorder.onstart = () => {\n                        if (xabber.settings.typing_notifications) {\n                            this.view.sendChatState('composing', 'voice');\n                            this._chatstate_send_timeout = setInterval(() => {\n                                this.view.sendChatState('composing', 'voice');\n                            }, constants.CHATSTATE_INTERVAL_COMPOSING_AUDIO);\n                        }\n                        start_time = moment.now();\n                        let $bottom_panel = this.$('.message-input-panel'),\n                            $timer_elem = this.$('.input-voice-message .timer'),\n                            $status_msg = this.$('.input-voice-message .voice-msg-status'),\n                            $voice_visualizer = this.$('.input-voice-message .voice-visualizer');\n                        $timer_elem.text('0:00');\n                        $status_msg.css('color', '#9E9E9E').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice\"));\n                        $bottom_panel.addClass('voice-message-recording');\n\n                        let timerId = setInterval(() => {\n                                if ($mic.hasClass('recording') && (timer < constants.VOICE_MSG_TIME)) {\n                                    if (timer%1 == 0)\n                                        $timer_elem.text(utils.pretty_duration(timer));\n                                    timer = (timer*10 + 2)/10;\n                                    mic_hover = $bottom_panel.is(\":hover\");\n                                    if (!mic_hover)\n                                        $status_msg.css('color', '#D32F2F').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice_short\"));\n                                    else\n                                        $status_msg.css('color', '#9E9E9E').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice\"));\n                                }\n                                else\n                                {\n                                    mic_hover = $bottom_panel.is(\":hover\");\n                                    mediaRecorder.stop();\n                                    $mic.removeClass('recording ground-color-50');\n                                    $bottom_panel.removeClass('voice-message-recording');\n                                    this.model.set('recording_voice_message', false)\n                                    clearInterval(timerId);\n                                }\n                            }, 200),\n                            flag = false,\n                            timerIdDot = setInterval(() => {\n                                if ($mic.hasClass('recording')) {\n                                    if (flag)\n                                        $voice_visualizer.css('background-color', '#FFF');\n                                    else\n                                        $voice_visualizer.css('background-color', '#D32F2F');\n                                    flag = !flag;\n                                }\n                                else\n                                    clearInterval(timerIdDot);\n                            }, 500);\n                    };\n\n                    mediaRecorder.start();\n\n                mediaRecorder.onstop = () => {\n                    clearInterval(this._chatstate_send_timeout);\n                    (xabber.settings.typing_notifications) && this.view.sendChatState('paused');\n                    end_time = moment.now();\n                    if (mic_hover && ((end_time - start_time)/1000 >= 1.5)) {\n                        let audio_name = (\"voice message \" + moment().format('YYYY-MM-DD HH:mm:ss') + '.ogg'), audio_type = 'audio/ogg; codecs=opus',\n                            blob = new Blob([chunks], { 'type' : audio_type}),\n                            file = new File([blob], audio_name, {\n                                type: audio_type,\n                            });\n                        file.voice = true;\n                        file.duration = Math.round((end_time - start_time)/1000);\n                        this.view.addFileMessage([file], true);\n                    }\n                    chunks = [];\n                };\n\n                mediaRecorder.ondataavailable = (e) => {\n                    chunks = e;\n                };\n            };\n\n            let onError = (error) => {\n                console.log(xabber.getString(\"file_upload__error\", [error]));\n                $mic.removeClass('recording ground-color-50');\n            };\n\n            window.navigator.getUserMedia(constraints, onSuccess, onError);\n        }\n    },\n\n    typeEmoticon: function (emoji) {\n        if (typeof emoji == 'number')\n            emoji = Number(emoji).toString();\n        let caret_idx = -1;\n        if (this.quill.selection.lastRange)\n            caret_idx = this.quill.selection.lastRange.index;\n        else if (this.quill.selection.savedRange)\n            caret_idx = this.quill.selection.savedRange.index;\n        this.quill.focus();\n        if (!this.edit_message)\n            this.displaySend();\n        (!this.view.chat_state && xabber.settings.typing_notifications) && this.view.sendChatState('composing');\n        this.quill.insertText(caret_idx++, emoji);\n        if (this.quill.getFormat(caret_idx, 1).mention) {\n            this.quill.formatText(caret_idx, 1, 'mention', false);\n        }\n        this.quill.setSelection(caret_idx + 1);\n        xabber.chat_body.updateHeight();\n    },\n\n    renderLastEmoticons: function () {\n        if (!this.account.chat_settings)\n            return;\n        let cached_last_emoji = this.account.chat_settings.getLastEmoji(),\n            $last_emoticons = this.$('.last-emoticons').empty(), emoji;\n        if (cached_last_emoji.length < 7) {\n            for (let idx = 0; idx < 7; idx++) {\n                emoji = Emoji.getByIndex(idx);\n                this.account.chat_settings.updateLastEmoji(emoji);\n            }\n        }\n        cached_last_emoji = this.account.chat_settings.getLastEmoji();\n        for (let idx = 0; idx < 7; idx++) {\n            $('<div class=\"emoji-wrap\"/>').html(\n                cached_last_emoji[idx] && cached_last_emoji[idx].emojify({tag_name: 'div', emoji_size: 20})\n            ).appendTo($last_emoticons);\n        }\n        $last_emoticons.find('.emoji-wrap').mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button) {\n                return;\n            }\n            let $target_text = $(ev.target).closest('.emoji-wrap').text();\n            this.typeEmoticon($target_text);\n        });\n    },\n\n    submit: function (ev, forced) {\n        let $rich_textarea = this.$('.input-message .rich-textarea'),\n            mentions = [],\n            markup_references = [],\n            blockquotes = [],\n            link_references = this.link_references,\n            attached_files = this.attached_files,\n            text = $rich_textarea.getTextFromRichTextarea(),\n            dfd = new $.Deferred();\n\n\n        if (this.model.get('encrypted') && this.view.$('.chat-notification').hasClass('encryption-warning') && !forced){\n            let unverified_counter = this.view.$('.encryption-warning').attr('data-unverified-device-count');\n            utils.dialogs.ask_extended(xabber.getQuantityString(\"dialog_unverified_devices__header\", unverified_counter || 1), xabber.getQuantityString(\"dialog_unverified_devices__text\", unverified_counter || 1),\n                {modal_class: 'modal-unverified-devices', no_dialog_options: true},\n                { ok_button_text: xabber.getString(\"omemo__alert_new_device__button_manage_devices\"), optional_button: 'send-anyway', optional_button_text: xabber.getString(\"dialog_unverified_devices__send\")})\n                .done((result) => {\n                if (result) {\n                    if (result === 'send-anyway'){\n                        this.submit(ev, true);\n                    }\n                    else{\n                        this.openDevicesWindow();\n                    }\n                }\n            });\n            return;\n        }\n\n        dfd.done(() => {\n            this.$('.mentions-list').html(\"\").hide();\n            $rich_textarea.find('.emoji').each((idx, emoji_item) => {\n                let emoji = emoji_item.innerText;\n                this.account.chat_settings.updateLastEmoji(emoji);\n            });\n            let content_concat = [];\n            if (text.length >= constants.STANZA_MAX_SIZE) {\n                utils.dialogs.error(xabber.getString(\"message__error_big_stanza\"));\n                $rich_textarea.flushRichTextarea();\n                return;\n            }\n            if (text.length) {\n                this.quill.getContents().forEach((content) => {\n                    if (content.attributes) {\n                        let content_attrs = [],\n                            start_idx = content_concat.length,\n                            end_idx = start_idx + ((content.insert && content.insert.emoji) ? 1 : _.escape(content.insert).length);\n                        for (let attr in content.attributes)\n                            (attr !== 'alt' && attr !== 'blockquote') && content_attrs.push(attr);\n                        if (content_attrs.indexOf('mention') > -1) {\n                            let mention_idx = content_attrs.indexOf('mention'),\n                                is_gc = this.contact.get('group_chat'),\n                                target = $($rich_textarea.find('mention')[mentions.length]).attr('data-target');\n                            content_attrs.splice(mention_idx, mention_idx + 1);\n                            target = is_gc ? ('xmpp:' + this.contact.get('jid') + target) : ('xmpp:' + target);\n                            mentions.push({\n                                start: start_idx,\n                                end: end_idx,\n                                target: target,\n                                is_gc: is_gc\n                            });\n                        }\n                        if (content.attributes.blockquote) {\n                            if (content_concat.length) {\n                                Array.from(content.insert).forEach((ins) => {\n                                    let quote_start_idx = (content_concat.lastIndexOf('\\n') < 0) ? 0 : (content_concat.lastIndexOf('\\n') + 1),\n                                        quote_end_idx = content_concat.length;\n                                    blockquotes.push({\n                                        marker: constants.QUOTE_MARKER,\n                                        start: quote_start_idx,\n                                        end: quote_end_idx + constants.QUOTE_MARKER.length\n                                    });\n                                    text = Array.from(_.escape(text));\n\n                                    if (quote_start_idx === quote_end_idx) {\n                                        text[quote_start_idx - 1] += constants.QUOTE_MARKER;\n                                        content_concat[quote_start_idx] = constants.QUOTE_MARKER;\n                                    }\n                                    else {\n                                        text[quote_start_idx] = constants.QUOTE_MARKER + text[quote_start_idx];\n                                        content_concat[quote_start_idx] = constants.QUOTE_MARKER + content_concat[quote_start_idx];\n                                    }\n                                    (quote_end_idx > text.length) && (quote_end_idx = text.length);\n                                    text[quote_end_idx - 1] += '\\n';\n\n                                    text = _.unescape(text.join(\"\"));\n                                    content_concat = Array.from(content_concat.join(\"\"));\n\n                                    markup_references.forEach((markup_ref) => {\n                                        if (markup_ref.start >= quote_start_idx) {\n                                            markup_ref.start += constants.QUOTE_MARKER.length;\n                                            markup_ref.end += constants.QUOTE_MARKER.length;\n                                        }\n                                    });\n\n                                    content_concat = content_concat.concat(Array.from(_.escape(ins)));\n                                })\n                            }\n                        }\n                        content_attrs.length && markup_references.push({\n                            start: start_idx,\n                            end: end_idx,\n                            markup: content_attrs\n                        });\n                    }\n                    if (content.insert && content.insert.emoji) {\n                        content_concat = content_concat.concat(Array.from($(content.insert.emoji).data('emoji')));\n                    }\n                    else if (content.attributes && content.attributes.blockquote) {\n                    }\n                    else\n                        content_concat = content_concat.concat(Array.from(_.escape(content.insert)));\n                });\n            }\n            let start_length = text.length;\n            text = text.trimStart();\n            if (start_length > text.length) {\n                let delta = start_length - text.length;\n                mentions.forEach((mention) => {\n                    mention.start -= delta;\n                    mention.end -= delta;\n                });\n                markup_references.forEach((markup_reference) => {\n                    markup_reference.start -= delta;\n                    markup_reference.end -= delta;\n                });\n                blockquotes.forEach((blockquote) => {\n                    blockquote.start -= delta;\n                    blockquote.end -= delta;\n                });\n            }\n            if (link_references && link_references.length) {\n                link_references = link_references.filter(item => item.original_text);\n                link_references.forEach((link_reference) => {\n                    if (link_reference && link_reference.original_text) {\n                        link_reference.start = text.indexOf(link_reference.original_text);\n                        if (link_reference.start != -1) {\n                            link_reference.start = 0;\n                            link_reference.end = 0;\n                        }\n                    }\n                });\n            }\n            this.removeAllLinkReferences();\n            this.link_reference_exempted = [];\n            this.removeAllFileSnippets();\n            text = text.trimEnd();\n            $rich_textarea.flushRichTextarea();\n            this.quill.focus();\n            this.displayMicrophone();\n            if (this.edit_message) {\n                this.editMessage(text, {mentions: mentions, markup_references: markup_references, link_references: link_references, attached_files: attached_files, blockquotes: blockquotes});\n                $rich_textarea.placeCaretAtEnd();\n                return;\n            }\n            if (text || this.fwd_messages.length || (attached_files && attached_files.length) || (link_references && link_references.length)) {\n                if (this.model.get('saved') && this.fwd_messages.length && !text)\n                    this.fwd_messages.forEach((message) => {\n                        this.view.onSubmit(\"\", [message]);\n                    });\n                else\n                    this.view.onSubmit(text, this.fwd_messages, {mentions: mentions, markup_references: markup_references, link_references: link_references, attached_files: attached_files, blockquotes: blockquotes});\n            }\n            this.unsetForwardedMessages();\n            xabber.chats_view.clearSearch();\n            if (this.model.messages_view)\n                if (this.model.messages_view.data.get('visible'))\n                    xabber.chats_view.openChat(this.model.item_view, {right_contact_save: true, clear_search: true, screen: xabber.body.screen.get('name')});\n            $rich_textarea.placeCaretAtEnd();\n        });\n        if (attached_files && attached_files.length) {\n            let failed_files = [],\n                files_count = 0,\n                file_check_dfd = new $.Deferred();\n            file_check_dfd.done(() => {\n                if (failed_files.length){\n                    failed_files.forEach((file) => {\n                        this.$(`.message-reference-preview-item-file[data-id=\"${file.uid}\"]`).remove();\n                        this.removeFileSnippetById(file.uid);\n                    });\n                    utils.dialogs.error(\n                        '' + _.pluck(failed_files, 'name').join(` — ${xabber.getString(\"message__file_was_deleted__file_label\")}. \\n`) + ` — ${xabber.getString(\"message__file_was_deleted__file_label\")}.`,\n                        {},\n                        xabber.getQuantityString(\"message__file_was_deleted\", failed_files.length)\n                    );\n                    dfd.reject();\n                } else {\n                    dfd.resolve();\n                }\n            });\n            if (!this.edit_message) {\n                attached_files.forEach((file) => {\n                    utils.tryReadingFile(file).then(()=> {\n                        files_count++;\n                        if (attached_files.length === files_count) {\n                            file_check_dfd.resolve();\n                        }\n                    }, ()=> {\n                        failed_files = failed_files.concat([file]);\n                        files_count++;\n                        if (attached_files.length === files_count) {\n                            file_check_dfd.resolve();\n                        }\n                    });\n                });\n            } else {\n                file_check_dfd.resolve();\n            }\n        } else {\n            dfd.resolve();\n        }\n    },\n\n    setEditedMessage: function (message) {\n        this.click_counter = 0;\n        this.setDefaultPlaceholder();\n        let msg_text = message.get('message') || \"\";\n        this.$('.fwd-messages-preview').showIf(this.edit_message);\n        this.$('.fwd-messages-preview .msg-author').text(xabber.getString(\"edit_message__header\"));\n        this.$('.fwd-messages-preview .msg-text').html(Strophe.xmlescape(msg_text));\n        this.$('.fwd-messages-preview').emojify('.msg-text', {emoji_size: 18});\n        this.displaySend();\n        xabber.chat_body.updateHeight();\n        let markup_body = utils.markupBodyMessage(message, 'mention'),\n            emoji_node = markup_body.emojify({tag_name: 'div'}),\n            arr_text = emoji_node.split('\\n');\n        arr_text.forEach((item, idx) => {\n            if (!item.includes('</blockquote>'))\n                arr_text[idx] = '<p>' + arr_text[idx] + '</p>';\n        });\n        emoji_node = arr_text.join(\"\");\n        this.quill.setText(\"\");\n        this.quill.root.innerHTML = emoji_node;\n        this.moveCursorToEnd();\n        this.focusOnInput();\n    },\n\n    setRedactedUploadMessage: function (message) {\n        this.click_counter = 0;\n        this.setDefaultPlaceholder();\n        let msg_text = message.get('message') || \"\";\n        this.displaySend();\n        xabber.chat_body.updateHeight();\n        let markup_body = utils.markupBodyMessage(message, 'mention'),\n            emoji_node = markup_body.emojify({tag_name: 'div'}),\n            arr_text = emoji_node.split('\\n');\n        arr_text.forEach((item, idx) => {\n            if (!item.includes('</blockquote>'))\n                arr_text[idx] = '<p>' + arr_text[idx] + '</p>';\n        });\n        emoji_node = arr_text.join(\"\");\n        this.quill.setText(\"\");\n        this.quill.root.innerHTML = emoji_node;\n        this.moveCursorToEnd();\n        this.focusOnInput();\n    },\n\n    setForwardedMessages: function (messages) {\n        this.fwd_messages = messages || [];\n        this.$('.fwd-messages-preview').showIf(messages.length);\n        if (messages.length) {\n            let msg = messages[0],\n                msg_author, msg_text, image_preview, $img_html_preview;\n            if (messages.length > 1) {\n                msg_text = xabber.getQuantityString(\"forwarded_messages_count\", messages.length);\n            } else {\n                if (msg.get('forwarded_message')) {\n                    msg_text = xabber.getQuantityString(\"forwarded_messages_count\", messages.length);\n                }\n                else {\n                    msg_text = (msg.get('message') || msg.get('original_message')).emojify();\n                    let fwd_images = msg.get('images') || [],\n                        fwd_files = msg.get('files') || [],\n                        fwd_locations = msg.get('locations');\n                    msg.get('videos') && msg.get('videos').length && (fwd_files = fwd_files.concat(msg.get('videos')));\n                    if ((fwd_images && fwd_images.length) && (fwd_files && fwd_files.length)) {\n                        msg_text = fwd_images.length + fwd_files.length + ' attachments';\n                    }\n                    else {\n                        if (fwd_images && fwd_images.length) {\n                            if (fwd_images.length > 1) {\n                                msg_text =xabber.getQuantityString(\"recent_chat__last_message__images\", fwd_images.length);\n                            }\n                            else {\n                                image_preview = _.clone(msg.get('images')[0]);\n                                $img_html_preview = this.createPreviewImage(image_preview);\n                            }\n                        }\n                        if (fwd_files && fwd_files.length) {\n                            if (fwd_files.length > 1) {\n                                msg_text = xabber.getQuantityString(\"recent_chat__last_message__files\", fwd_files.length);\n                            }\n                            else {\n                                let filesize = fwd_files[0].size;\n                                msg_text = filesize ? fwd_files[0].name + \",   \" + filesize : fwd_files[0].name;\n                            }\n                        }\n                        if (fwd_locations && fwd_locations.length) {\n                            if (fwd_locations.length > 1) {\n                                msg_text = xabber.getQuantityString(\"recent_chat__last_message__locations\", fwd_locations.length);\n                            }\n                            else {\n                                msg_text = xabber.getString(\"recent_chat__last_message__locations_plural_0\");\n                            }\n                        }\n                    }\n                }\n            }\n            let from_jid = msg.get('from_jid');\n            if (msg.isSenderMe()) {\n                msg_author = this.account.get('name');\n            } else {\n                msg_author = (msg.get('user_info') && msg.get('user_info').nickname) || (this.account.contacts.get(from_jid) ? this.account.contacts.get(from_jid).get('name') : from_jid);\n            }\n            this.$('.fwd-messages-preview .msg-author').text(msg_author);\n            if (_.isUndefined(image_preview)) {\n                this.$('.fwd-messages-preview .msg-text').html(msg_text);\n            }\n            else {\n                this.$('.fwd-messages-preview .msg-text').html($img_html_preview);\n            }\n        }\n        xabber.chat_body.updateHeight();\n        this.displaySend();\n    },\n\n    onShowMarkupPanel: function (ev) {\n        let $clicked_icon = $(ev.target),\n            is_panel_opened = $clicked_icon.hasClass('opened');\n        this.$('.last-emoticons').showIf(is_panel_opened);\n        this.$('.markup-panel').showIf(!is_panel_opened);\n        $clicked_icon.switchClass('opened', !is_panel_opened);\n    },\n\n    createPreviewImage: function(image) {\n        let imgContent = new Image();\n            imgContent.src = image.sources[0];\n        $(imgContent).addClass('fwd-img-preview');\n        return imgContent;\n    },\n\n    unsetForwardedMessages: function (ev) {\n        ev && ev.preventDefault && ev.preventDefault();\n        let $rich_textarea = this.$('.input-message .rich-textarea');\n        this.fwd_messages = [];\n        if (this.edit_message) {\n            this.removeAllFileSnippets();\n            this.removeAllLinkReferences();\n            this.$('.attach-file input').attr('disabled', false);\n            $rich_textarea.flushRichTextarea();\n        }\n        this.edit_message = null;\n        this.$('.fwd-messages-preview').addClass('hidden');\n        let text = $rich_textarea.getTextFromRichTextarea();\n        if (!text || text == \"\\n\")\n            this.displayMicrophone();\n        else\n            this.displaySend();\n        xabber.chat_body.updateHeight();\n        this.focusOnInput();\n    },\n\n    resetSelectedMessages: function () {\n        this.content_view.$('.chat-message.selected').removeClass('selected');\n        this.manageSelectedMessages();\n    },\n\n    manageSelectedMessages: function () {\n        let $selected_msgs = this.content_view.$('.chat-message.selected'),\n            $input_panel = this.$('.message-input-panel'),\n            $message_actions = this.$('.message-actions-panel');\n            length = $selected_msgs.length;\n        $input_panel.hideIf(this.model.get('blocked') || length);\n        $message_actions.showIf(length);\n        this.model.get('blocked') && this.$('.blocked-msg').hideIf(length);\n        if (length) {\n            this.setButtonsWidth();\n            let my_msg = false;\n            if (length === 1) {\n                if ($selected_msgs.first().data('from') === this.account.get('jid'))\n                    my_msg = true;\n                if (this.contact && this.contact.my_info)\n                    if ($selected_msgs.first().data('from') === this.contact.my_info.get('id'))\n                        my_msg = true;\n                if ($selected_msgs.first().find('.mdi-play').length)\n                    my_msg = false;\n            }\n            $message_actions.find('.pin-message-wrap').showIf(this.model.get('group_chat')).switchClass('non-active', ((length !== 1) && this.model.get('group_chat')));\n            $message_actions.find('.reply-message-wrap').switchClass('non-active', this.model.get('blocked'));\n            $message_actions.find('.forward-message-wrap').switchClass('non-active', this.model.get('encrypted'));\n            $message_actions.find('.edit-message-wrap').switchClass('non-active', !((length === 1) && my_msg) || this.content_view.$('.chat-message.saved-main.selected').length || this.model.get('blocked'));\n            !this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').removeClass('hidden').addClass('msgs-counter').text(xabber.getQuantityString(\"chat_screen__bottom_panel__selected_messages__text\", length));\n        } else {\n            !this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').addClass('hidden').removeClass('msgs-counter').text(\"\");\n            this.focusOnInput();\n        }\n    },\n\n    pinMessage: function () {\n        if (!this.model.get('active'))\n            return;\n        if (this.$('.pin-message-wrap').hasClass('non-active'))\n            return;\n        let $msg = this.content_view.$('.chat-message.selected').first(),\n            pinned_msg = this.messages_arr.get($msg.data('uniqueid')),\n            msg_id = pinned_msg.get('stanza_id');\n        this.resetSelectedMessages();\n        let iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('update', {xmlns: Strophe.NS.GROUP_CHAT})\n            .c('pinned-message').t(msg_id);\n        this.account.sendIQFast(iq, () => {},\n            (error) => {\n                if ($(error).find('not-allowed').length)\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            });\n    },\n\n    copyMessages: function () {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            msg && msgs.push(msg);\n        });\n        this.resetSelectedMessages();\n        this.pushMessagesToClipboard(msgs);\n    },\n\n    editMessage: function (text, text_markups) {\n        let original_body = Array.from(Strophe.xmlescape(this.edit_message.get('original_message') || \"\")),\n            forwarded_body = \"\",\n            mutable_refs = this.edit_message.get('mutable_content') || [],\n            groupchat_ref = mutable_refs && mutable_refs.find(item => item.type === 'groupchat'),\n            stanza_id = this.edit_message.get('stanza_id'),\n            forward_ref = mutable_refs && mutable_refs.filter(item => item.type === 'forward'),\n            markups = text_markups.markup_references || [],\n            files = text_markups.attached_files || [],\n            link_references = text_markups.link_references || [],\n            blockquotes = text_markups.blockquotes || [],\n            mentions = text_markups.mentions || [],\n            iq = $iq({type: 'set', to: (this.contact && this.contact.get('group_chat')) ? this.contact.get('jid') : this.account.get('jid')}).c('replace', {\n                xmlns: Strophe.NS.REWRITE,\n                type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model),\n                id: stanza_id\n            }),\n            $message = $build('message').attrs({xmlns: undefined});\n        forward_ref && forward_ref.forEach((fwd, idx) => {\n            let fwd_msg = this.edit_message.get('forwarded_message')[idx],\n                gc_length = groupchat_ref && (groupchat_ref.start + groupchat_ref.end);\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: (groupchat_ref ? (fwd.start - gc_length) : fwd.start), end: (groupchat_ref ? (fwd.end - gc_length) : fwd.end), type: 'mutable'})\n                .c('forwarded', {xmlns: Strophe.NS.FORWARD})\n                .c('delay', {\n                    xmlns: 'urn:xmpp:delay',\n                    stamp: fwd_msg.get('time')\n                }).up().cnode(fwd_msg.get('xml')).up().up().up();\n            forwarded_body += original_body.slice(fwd.start, fwd.end).join('');\n        });\n        markups.forEach((markup) => {\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: markup.start + Array.from(forwarded_body).length, end: markup.end + Array.from(forwarded_body).length, type: 'decoration'});\n            for (let idx in markup.markup)\n                $message.c(markup.markup[idx], {xmlns: Strophe.NS.MARKUP}).up();\n            $message.up();\n        });\n        blockquotes.forEach((blockquote) => {\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: blockquote.start + Array.from(forwarded_body).length, end: blockquote.end + Array.from(forwarded_body).length, type: 'decoration'})\n                .c('quote', {xmlns: Strophe.NS.MARKUP}).up().up();\n        });\n        mentions.forEach((mention) => {\n            let mention_attrs = {xmlns: Strophe.NS.MARKUP};\n            mention.is_gc && (mention_attrs.node = Strophe.NS.GROUP_CHAT);\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: mention.start + Array.from(forwarded_body).length, end: mention.end + Array.from(forwarded_body).length, type: 'decoration'})\n                .c('mention', mention_attrs).t(mention.target).up().up();\n        });\n\n        if (files && files.length) {\n            mutable_refs = mutable_refs.filter(item => item.type !== 'file')\n            files.forEach((file, idx) => {\n                (idx === 0) && (text += '\\n');\n                let legacy_body = file.sources[0] + ((idx != files.length - 1) ? '\\n' : \"\"),\n                    start_idx = Array.from(_.escape(text)).length + Array.from(forwarded_body).length,\n                    end_idx = start_idx + legacy_body.length;\n                $message.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: start_idx,\n                    end: end_idx\n                });\n                file.voice && $message.c('voice-message', {xmlns: Strophe.NS.VOICE_MESSAGE});\n                $message.c('file-sharing', {xmlns: Strophe.NS.FILES}).c('file');\n                file.type && $message.c('media-type').t(file.type).up();\n                file['id'] && $message.c('gallery-id').t(file['id']).up();\n                file.thumbnail && $message.c('thumbnail-uri').t(file.thumbnail).up();\n                file.created && $message.c('created').t(file.created).up();\n                file.name && $message.c('name').t(file.name).up();\n                file.size && $message.c('size').t(file.size).up();\n                file.height && $message.c('height').t(file.height).up();\n                file.width && $message.c('width').t(file.width).up();\n                file.duration && $message.c('duration').t(file.duration).up();\n                file.description && $message.c('desc').t(file.description).up();\n                $message.up().c('sources');\n                file.sources.forEach((u) => {\n                    if (file.key)\n                        u = u.replace(/^(https|http)/, 'aescbc') + '#' + utils.ArrayBuffertoBase64(file.key);\n                    $message.c('uri').t(u).up();\n                });\n                $message.up().up().up();\n                file.voice && $message.up();\n                text += legacy_body;\n                mutable_refs.push({start: start_idx, end: end_idx});\n            });\n        }\n\n        if (link_references && link_references.length) {\n            mutable_refs = mutable_refs.filter(item => item.type !== 'link_reference')\n            link_references.forEach((link_reference, idx) => {\n                if (link_reference.start === -1) {\n                    link_reference.start = Array.from(_.escape(text)).length + Array.from(forwarded_body).length;\n                    text = text + '\\n' + link_reference.original_text;\n                    link_reference.end = link_reference.start + link_reference.original_text.length + 1;\n                }\n                $message.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: link_reference.start,\n                    end: link_reference.end,\n                    type: 'mutable',\n                }).c('ogp', { xmlns: Strophe.NS.OGP, url: link_reference.original_text });\n                link_reference.site && $message.c('meta', { property: 'og:site_name', content: link_reference.site}).up();\n                link_reference.type && $message.c('meta', { property: 'og:type', content: link_reference.type}).up();\n                link_reference.title && $message.c('meta', { property: 'og:title', content: link_reference.title}).up();\n                link_reference.url && $message.c('meta', { property: 'og:url', content: link_reference.url}).up();\n                link_reference.description && $message.c('meta', { property: 'og:description', content: link_reference.description}).up();\n                link_reference.image && $message.c('meta', { property: 'og:image', content: link_reference.image}).up();\n                link_reference.image_width && $message.c('meta', { property: 'og:image:width', content: link_reference.image_width}).up();\n                link_reference.image_height && $message.c('meta', { property: 'og:image:height', content: link_reference.image_height}).up();\n                link_reference.video_url && $message.c('meta', { property: 'og:video:url', content: link_reference.video_url}).up();\n                $message.up().up();\n                mutable_refs.push({start: link_reference.start, end: link_reference.end});\n            });\n        }\n        mutable_refs && mutable_refs.length && this.edit_message.set({mutable_content: mutable_refs});\n        if (!(Strophe.xmlunescape(forwarded_body) + text)){\n            this.deleteMessages(null, [this.edit_message], true);\n            return;\n        }\n        $message.c('body').t(Strophe.xmlunescape(forwarded_body) + text).up();\n        this.unsetForwardedMessages();\n        if (this.model.get('encrypted')) {\n            let decrypted_msg = $message.tree().innerHTML;\n            $message.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n            if ($($message.tree()).children('body').length) {\n                $message.cnode($($message.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                $($message.tree()).children('body').detach()\n            }\n            if ($($message.tree()).children('reference').length) {\n                $($message.tree()).children('reference').each((idx, reference) => {\n                    $message.cnode($($message.tree()).children('reference')[idx]).up()\n                });\n                $($message.tree()).children('reference').detach()\n            }\n            $message.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n            $message.c('from', {jid: this.account.get('jid')}).up().up()\n            this.account.omemo.encrypt(this.contact, $message).then((msg) => {\n                iq.cnode(msg.message.tree());\n                this.account.omemo.cached_messages.putMessage(this.contact, stanza_id, {envelope: decrypted_msg});\n                this.account.sendIQFast(iq);\n            });\n        } else {\n            iq.cnode($message.tree());\n            this.account.sendIQFast(iq);\n        }\n    },\n\n    showEditPanel: function () {\n        if (!this.model.get('active') || this.model.get('encrypted'))\n            return;\n        if (this.$('.edit-message-wrap').hasClass('non-active'))\n            return;\n        let $msg = this.content_view.$('.chat-message.selected').first(),\n            edit_msg = this.messages_arr.get($msg.data('uniqueid'));\n        this.edit_message = edit_msg;\n        this.resetSelectedMessages();\n        this.setEditedMessageAttachments(edit_msg);\n        this.setEditedMessage(edit_msg);\n    },\n\n    deleteMessages: function (ev, messages, on_rewrite) {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [],\n            my_msgs = 0,\n            dialog_options = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            msg && msgs.push(msg);\n            msg.isSenderMe() && my_msgs++;\n        });\n        messages && messages.forEach((item, idx) => {\n            msgs.push(item);\n            item.isSenderMe() && my_msgs++;\n        });\n        if (this.account.server_features.get(Strophe.NS.REWRITE) || this.model.get('group_chat')) {\n            let dfd = new $.Deferred();\n            dfd.done(() => {\n                utils.dialogs.ask(xabber.getString(\"dialog_delete_messages__header\"), xabber.getQuantityString(\"delete_message_question\", msgs.length),\n                    dialog_options, {ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n                    if (!res) {\n                        this._clearing_history = false;\n                        messages && messages.length && this.focusOnInput();\n                        return;\n                    }\n                    let symmetric = (this.model.get('group_chat')) ? true : (res.symmetric_deletion ? true : false);\n                    this.resetSelectedMessages();\n                    if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                        this.deleteFilesFromMessages(msgs);\n                    this.model.retractMessages(msgs, this.model.get('group_chat'), symmetric);\n                    messages && messages.length && this.unsetForwardedMessages();\n                });\n            });\n            if (!this.model.get('group_chat') && !this.model.get('saved') && ((my_msgs == $msgs.length) || on_rewrite) && this.contact && this.contact.domain){\n                if (this.contact.get('server_has_rewrite')){\n                    dialog_options = [{\n                        name: 'symmetric_deletion',\n                        checked: false,\n                        text: xabber.getString(\"dialog_clear_chat_history__option_delete_for_all\")\n                    }];\n                    dfd.resolve();\n                } else {\n                    this.account.connection.disco.info(this.contact.domain, null, (iq) => {\n                        let $rewrite = $(iq).find('feature[var=\"' + Strophe.NS.REWRITE + '\"]');\n                        if ($rewrite.length) {\n                            dialog_options = [{\n                                name: 'symmetric_deletion',\n                                checked: false,\n                                text: xabber.getString(\"dialog_clear_chat_history__option_delete_for_all\")\n                            }];\n                            this.contact.set('server_has_rewrite', true);\n                            dfd.resolve();\n                        } else {\n                            dfd.resolve();\n                        }\n                    });\n                }\n            } else\n                dfd.resolve();\n        }\n        else {\n            utils.dialogs.ask(xabber.getString(\"dialog_delete_messages__header\"), `${xabber.getQuantityString(\"delete_message_question\", msgs.length)}\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')}`,\n                dialog_options, {ok_button_text: xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    messages && messages.length && this.focusOnInput();\n                    return;\n                }\n                this.resetSelectedMessages();\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    this.deleteFilesFromMessages(msgs);\n                msgs.forEach((item) => { this.view.removeMessage(item); })\n                messages && messages.length && this.unsetForwardedMessages();\n            });\n        }\n    },\n\n    deleteFilesFromMessages: function (messages) {\n        messages.forEach((item) => {\n            if (!item.isSenderMe())\n                return;\n            item.get('files') && _.isArray(item.get('files')) && item.get('files').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n            item.get('images') && _.isArray(item.get('images')) && item.get('images').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n            item.get('videos') && _.isArray(item.get('videos')) && item.get('videos').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n        });\n    },\n\n    pushMessagesToClipboard: function (messages) {\n        let fwd_msg_indicator = \"\",\n            copied_messages = this.createTextMessage(messages, fwd_msg_indicator);\n        utils.copyTextToClipboard(_.unescape(copied_messages));\n    },\n\n    createTextMessage: function (messages, fwd_msg_indicator) {\n        let text_message = \"\";\n        for (let i = 0; i < messages.length; i++) {\n            let $msg = messages[i];\n            if (this.model.get('saved') && $msg.get('forwarded_message') && $msg.get('forwarded_message').length === 1 && !$msg.get('message'))\n                $msg = $msg.get('forwarded_message')[0];\n            let current_date = moment($msg.get('timestamp')).startOf('day'),\n                prev_date = (i) ? moment(messages[i - 1].get('timestamp')).startOf('day') : moment(0),\n                msg_sender = \"\";\n                if (prev_date.format('x') != current_date.format('x')) {\n                    text_message += (fwd_msg_indicator.length ? fwd_msg_indicator + ' ' : \"\") + pretty_date(current_date) + '\\n';\n                }\n                msg_sender = $msg.isSenderMe() ? this.account.get('name') : ($msg.get('user_info') && $msg.get('user_info').nickname || (this.account.contacts.get($msg.get('from_jid')) ? this.account.contacts.get($msg.get('from_jid')).get('name') : $msg.get('from_jid')));\n                text_message += (fwd_msg_indicator.length ? fwd_msg_indicator + ' ' : \"\") + \"[\" + utils.pretty_time($msg.get('timestamp')) + \"] \" + msg_sender + \":\\n\";\n                fwd_msg_indicator.length && (text_message += fwd_msg_indicator);\n                let original_message = _.unescape(($msg.get('mutable_content') && $msg.get('mutable_content').find(ref => ref.type === 'groupchat')) ? $msg.get('original_message').slice($msg.get('mutable_content').find(ref => ref.type === 'groupchat').end) : $msg.get('original_message'));\n                fwd_msg_indicator.length && (original_message = original_message.replace(/\\n/g, '\\n&gt; '));\n                (fwd_msg_indicator.length && original_message.indexOf('&gt;') !== 0) && (text_message += ' ');\n                (original_message = _.unescape(original_message.replace(/\\n&gt; &gt;/g, '\\n&gt;&gt;')));\n                text_message += _.escape(original_message) + '\\n';\n        }\n        return text_message.trim();\n    },\n\n    replyMessages: function () {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            if (msg) {\n                if (this.model.get('saved') && msg.get('forwarded_message') && msg.get('forwarded_message').length && !msg.get('message')) {\n                    msgs = msgs.concat(msg.get('forwarded_message'));\n                } else\n                    msgs.push(msg);\n            }\n        });\n        this.resetSelectedMessages();\n        this.setForwardedMessages(msgs);\n    },\n\n    forwardMessages: function () {\n        if (!this.model.get('active') || this.model.get('encrypted'))\n            return;\n        if (this.$('.forward-message-wrap').hasClass('non-active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            if (msg) {\n                if (this.model.get('saved') && msg.get('forwarded_message') && msg.get('forwarded_message').length && !msg.get('message')) {\n                    msgs = msgs.concat(msg.get('forwarded_message'));\n                } else\n                    msgs.push(msg);\n            }\n        });\n        this.resetSelectedMessages();\n        if (!xabber.forward_panel)\n            xabber.forward_panel = new xabber.ForwardPanelView({ model: xabber.opened_chats });\n        xabber.forward_panel.open(msgs, this.account);\n    },\n\n    showChatNotification: function (message, is_colored) {\n        if (!this.view.$('.chat-notification').hasClass('msgs-counter') && !this.view.$('.chat-notification').hasClass('encryption-warning')) {\n            this.view.$('.chat-notification').switchClass('hidden', !message).text(message)\n                .switchClass('text-color-300', is_colored);\n        }\n    }\n});\n\nxabber.ChatHeadContainer = xabber.Container.extend({\n    className: 'chat-head-container panel-head noselect'\n});\n\nxabber.ChatBodyContainer = xabber.Container.extend({\n    className: 'chat-body-container',\n\n    // TODO: refactor CSS and remove this\n    updateHeight: function () {\n        let bottom_height = xabber.chat_bottom.$el.height() + parseInt(xabber.chat_bottom.$el.css('bottom'));\n        if (bottom_height) {\n            let current_bottom = parseInt(this.$el.css('bottom'));\n            this.$el.css({bottom: bottom_height});\n            if (this.view) {\n                this.view.updateScrollBar();\n                (bottom_height != current_bottom) && !this.view.isScrolledToBottom() && this.view.scrollTo(this.view.ps_container[0].scrollTop + (bottom_height - current_bottom));\n            }\n        }\n    }\n});\n\nxabber.ChatBodyPlaceholderContainer = xabber.Container.extend({\n    className: 'chat-body-placeholder-container',\n});\n\nxabber.NotificationsPlaceholder = xabber.BasicView.extend({\n    className: 'notifications-placeholder',\n    events: {\n        \"click .btn-request-notifications\": \"requestNotifications\",\n        \"click .mdi-close\": \"close\"\n    },\n\n    _initialize: function (options) {\n        this.$el.html(`${xabber.getString(\"desktop_notifications__alert_enable__text\", [constants.CLIENT_NAME])} <span class=\"btn-request-notifications\">${xabber.getString(\"desktop_notifications__alert_enable__link_text\")}</span><button class=\"btn-request-notifications btn-flat btn-dark btn-main\">${xabber.getString(\"chat_allow\")}</button>`);\n        this.$el.append($('<i/>').addClass('mdi mdi-22px mdi-close'));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n    },\n\n    requestNotifications: function () {\n        window.Notification.requestPermission((permission) => {\n            xabber._cache.save({'notifications': (permission === 'granted'), 'ignore_notifications_warning': true});\n            this.close();\n        });\n    },\n\n    onUpdatedScreen: function () {\n        if (!xabber.notifications_placeholder)\n            return;\n        this.$el.detach();\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    },\n\n    close: function () {\n        xabber._cache.save('ignore_notifications_warning', true);\n        this.remove();\n        xabber.notifications_placeholder = undefined;\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    }\n});\n\nxabber.ChatBottomContainer = xabber.Container.extend({\n    className: 'chat-bottom-container'\n});\n\nxabber.ChatPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap chat-placeholder-wrap noselect',\n    template: templates.chat_placeholder,\n\n    _initialize: function (options) {\n        xabber.on('update_placeholder',this.onPlaceholderUpdate, this);\n    },\n\n    onPlaceholderUpdate: function () {\n        if (xabber.toolbar_view.$('.toolbar-item.jingle-calls.active').length || xabber.toolbar_view.$('.toolbar-item.geolocation-chats.active').length){\n            this.$('.text').text(xabber.getString(\"message_manager_error_not_implemented\"));\n        } else {\n            this.$('.text').text(xabber.getString(\"chat_list__placeholder\"));\n        }\n    },\n});\n\nxabber.ChatSettings = Backbone.ModelWithStorage.extend({\n    defaults: {\n        last_emoji: [],\n        muted: [],\n        archived: [],\n        group_chat: [],\n        cached_avatars: [],\n        group_chat_members_lists: []\n    },\n\n    getLastEmoji: function () {\n        return _.clone(this.get('last_emoji'));\n    },\n\n    updateLastEmoji: function (emoji) {\n        let last_emoji_icons = _.clone(this.get('last_emoji'));\n        if (last_emoji_icons.length > 0) {\n            let index = last_emoji_icons.indexOf(emoji);\n            if (index != -1)\n                last_emoji_icons.splice(index, 1);\n            last_emoji_icons.push(emoji);\n            while (last_emoji_icons.length > 7)\n                last_emoji_icons.shift();\n        }\n        else\n            last_emoji_icons.push(emoji);\n        this.save('last_emoji', last_emoji_icons);\n    },\n\n    updateMutedList: function (jid, muted) {\n        let muted_list = _.clone(this.get('muted')),\n            index = muted_list.indexOf(jid);\n        if (muted && index < 0) {\n            muted_list.push(jid);\n        }\n        if (!muted && index >= 0) {\n            muted_list.splice(index, 1);\n        }\n        this.save('muted', muted_list);\n    },\n\n    updateArchiveChatsList: function (jid, archived) {\n        let archived_list = _.clone(this.get('archived')),\n            index = archived_list.indexOf(jid);\n        if (archived && index < 0) {\n            archived_list.push(jid);\n        }\n        if (!archived && index >= 0) {\n            archived_list.splice(index, 1);\n        }\n        this.save('archived', archived_list);\n    },\n\n    updateGroupChatsList: function (jid, group_chat) {\n        let group_chat_list = _.clone(this.get('group_chat')),\n            index = group_chat_list.indexOf(jid);\n        if (group_chat && index < 0) {\n            group_chat_list.push(jid);\n        }\n        if (!group_chat && index >= 0) {\n            group_chat_list.splice(index, 1);\n        }\n        this.save('group_chat', group_chat_list);\n    },\n\n    updateCachedAvatars: function (id, hash, avatar) {\n        let avatar_list = _.clone(this.get('cached_avatars')),\n            member = avatar_list.indexOf(avatar_list.find(member => member.id === id));\n        if (member != -1) {\n            avatar_list.splice(member, 1);\n        }\n        avatar_list.push({id: id, avatar_hash: hash, avatar_b64: avatar});\n        this.save('cached_avatars', avatar_list);\n    },\n\n    getAvatarInfoById: function (id) {\n        let avatar_list = _.clone(this.get('cached_avatars')),\n            result = avatar_list.find(member => member.id === id);\n        return result;\n    },\n\n    getB64Avatar: function (id) {\n        let result = this.getAvatarInfoById(id);\n        if (result)\n            return result.avatar_b64;\n        else\n            return;\n    },\n\n    getHashAvatar: function (id) {\n        let result = this.getAvatarInfoById(id);\n        if (result)\n            return result.avatar_hash;\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.chat_settings = new xabber.ChatSettings({id: 'chat-settings'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + this.get('jid'),\n        fetch: 'after'\n    });\n    this.messages = new xabber.Messages(null, {account: this});\n    this.forwarded_messages = new xabber.Messages(null, {account: this});\n    this.pinned_messages = new xabber.Messages(null, {account: this});\n\n    this.chats = new xabber.AccountChats(null, {account: this});\n});\n\nxabber.Account.addConnPlugin(function () {\n    let timestamp = this.last_msg_timestamp || this.disconnected_timestamp;\n    this.chats.registerMessageHandler();\n    this.chats.each((chat) => {\n        if (!this.connection.do_synchronization) {\n            if (chat.messages.length)\n                chat.trigger('get_missed_history', timestamp);\n            else\n                chat.trigger('load_last_history');\n        }\n    });\n\n    this.connection.deleteTimedHandler(this._get_msg_handler);\n    this._get_msg_handler = this.connection.addTimedHandler(60000, () => {\n        //readds msg handler if it somehow dissapears\n        if (this.connection && !this.connection.handlers.find(h => !h.ns && !h.options.encrypted && h.name === 'message')) {\n            let last_msg_timestamp = this.last_msg_timestamp;\n            this.chats.registerMessageHandler();\n            let options = {};\n            this.cached_sync_conversations.getFromCachedConversations('last_sync_timestamp', (res) => {\n                let last_sync_timestamp = res && res.timestamp ? res.timestamp : null;\n                !this.roster.last_chat_msg_id && (options.max = constants.SYNCHRONIZATION_RSM_MAX);\n                last_sync_timestamp && (options.stamp = last_sync_timestamp);\n                this.roster && this.roster.syncFromServer(options, Boolean(last_sync_timestamp), true);\n                this.roster && this.roster.getRoster();\n            });\n        }\n        return true;\n    });\n    if (_.isUndefined(this.settings.get('omemo')) && !this.omemo_enable_placeholder) {\n        this.omemo_enable_placeholder = new xabber.OMEMOEnablePlaceholder({account: this});\n    }\n}, true, true);\n\nxabber.Account.addFastConnPlugin(function () {\n    this.getVCard();\n    if (!(this.auth_view && this.auth_view.data.get('authentication')))\n        this.trigger('ready_to_get_roster');\n}, true, true);\n\nxabber.once(\"start\", function () {\n    [\"keydown\"].forEach((event) => {\n        window.addEventListener(event, (e) => {\n            document.onselectstart = function() {\n                return !((e.ctrlKey || e.metaKey) && e.keyCode == constants.KEY_SHIFT || e.shiftKey && e.keyCode == constants.KEY_CTRL || e.keyCode == constants.KEY_SHIFT);\n            }\n        });\n    });\n    [\"keyup\"].forEach((event) => {\n        window.addEventListener(event, (e) => {\n            document.onselectstart = function() {\n                return true;\n            }\n        });\n    });\n    this.chats = new this.Chats;\n    this.chats.addCollection(this.opened_chats = new this.OpenedChats);\n    this.chats.addCollection(this.closed_chats = new this.ClosedChats);\n    this.chats.registerQuillEmbeddedsTags();\n\n    this.chats_view = this.left_panel.addChild('chats',\n            this.ChatsView, {model: this.opened_chats});\n    this.chat_head = this.right_panel.addChild('chat_head',\n            this.ChatHeadContainer);\n    this.chat_body = this.right_panel.addChild('chat_body',\n            this.ChatBodyContainer);\n    this.chat_body_placeholder = this.right_panel.addChild('chat_body_placeholder',\n            this.ChatBodyPlaceholderContainer);\n    this.chat_bottom = this.right_panel.addChild('chat_bottom',\n            this.ChatBottomContainer);\n    this.chat_placeholder = this.right_panel.addChild('chat_placeholder',\n            this.ChatPlaceholderView);\n\n    this.on(\"add_group_chat\", function (attrs) {\n        if (!this.add_group_chat_view)\n            this.add_group_chat_view = new this.AddGroupChatView();\n        this.add_group_chat_view.show(attrs);\n    }, this);\n\n    this.on(\"change:focused\", function () {\n        if (this.get('focused')) {\n            let view = this.chats_view.active_chat;\n            if (view && view.model.get('display')) {\n                view.content.onScroll(null, true);\n                if (view.model.get('is_accepted') !== false)\n                    view.content.bottom.focusOnInput();\n            }\n        }\n    }, this);\n\n    this.on(\"change:idle\", function () {\n        if (!this.get('idle')) {\n            let view = this.chats_view.active_chat;\n            if (view && view.model.get('display')) {\n                view.content.onScroll(null, true);\n                if (view.model.get('is_accepted') !== false)\n                    view.content.bottom.focusOnInput();\n            }\n        }\n    }, this);\n\n    this.on(\"show_group_chats\", function () {\n        this.chats_view.showGroupChats();\n    }, this);\n\n    this.on(\"show_chats\", function () {\n        this.chats_view.showChats();\n    }, this);\n\n    this.on(\"show_all_chats\", function (no_unread) {\n        this.chats_view.showAllChats(no_unread);\n    }, this);\n\n    this.on(\"show_archive_chats\", function (no_unread) {\n        this.chats_view.showArchiveChats(no_unread);\n    }, this);\n\n    this.on(\"show_saved_chats\", function (no_unread) {\n        this.chats_view.showSavedChats(no_unread);\n    }, this);\n\n    this.on(\"show_notification_chats\", function (no_unread) {\n        this.chats_view.showNotifications(no_unread);\n    }, this);\n\n    this.on(\"clear_search\", function () {\n        this.contacts_view.clearSearch();\n        this.chats_view.clearSearch();\n    }, this);\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.searching,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    Strophe = env.Strophe,\n    _ = env._,\n    Images = utils.images;\n\nxabber.DiscoveringView = xabber.BasicView.extend({\n    className: 'searching-main noselect',\n    template: templates.searching_wide,\n    ps_selector: '.chats-list-wrap',\n    ps_settings: {\n        wheelPropagation: true,\n        theme: 'existing-chats-list'\n    },\n\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .account-field .dropdown-content\": \"selectAccount\",\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-search\": \"search\",\n        \"click .existing-chat-wrap\": \"getChatProperties\",\n        \"keyup .search-input\": \"keyUp\"\n    },\n\n    _initialize: function () {\n        this.data.on(\"change:color\", this.colorUpdated, this);\n        this.$('.searching-properties-field .dropdown-button').on('click', () => {\n            this.toggleProperties();\n        });\n    },\n\n    render: function (options) {\n        this.endDiscovering();\n        this.data.set('color','#9E9E9E');\n        options || (options = {});\n        let accounts = xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.account-field .dropdown-content').empty();\n        _.each(accounts, (account) => {\n            this.$('.account-field .dropdown-content').append(\n                this.renderAccountItem(account));\n        });\n        if (accounts.length)\n            this.bindAccount(accounts[0]);\n        this.$('#select-searching-properties .account-field .dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        return this;\n    },\n\n    toggleProperties: function () {\n        let is_visible = this.isPropertiesVisible();\n        this.$('#select-searching-properties').slideToggle(\"fast\");\n        this.$('.arrow').switchClass('mdi-chevron-up', !is_visible);\n        this.$('.arrow').switchClass('mdi-chevron-down', is_visible);\n    },\n\n    isPropertiesVisible: function () {\n        if (this.$('#select-searching-properties').css('display') === 'none')\n            return false;\n        else\n            return true;\n    },\n\n    discover: function () {\n        let domain = _.escape(this.$('.search-input.simple-input-field').val());\n        if (domain) {\n            if (this.isPropertiesVisible())\n                this.toggleProperties();\n            this.$('.searching-more').html(\"\");\n            let searching_title = this.$('#searching_property_title').val(),\n                searching_sort_by = this.$('#searching_property_sort_by').val();\n            this.$('.searching-result-wrap .preloader-wrapper').show();\n            this.searchExistingGroupChats(domain);\n        }\n    },\n\n    setColor: function () {\n        if (this.account) {\n            let color = this.account.settings.get('color');\n            this.data.set('color', color);\n        }\n    },\n\n    colorUpdated: function () {\n        let color = this.data.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    keyUp: function (ev) {\n        if (this.$('.search-input').val() === \"\")\n            this.$('.btn-search').addClass('none-active');\n        else\n            this.$('.btn-search').removeClass('none-active');\n        if (ev.keyCode === constants.KEY_ENTER)\n            this.discover();\n    },\n\n    searchExistingGroupChats: function (domain) {\n        this.account.connection.disco.items((domain), null, this.getGroupchatService.bind(this), this.onDiscoveringError.bind(this));\n    },\n\n    onDiscoveringError: function (error) {\n        this.endDiscovering();\n        this.$('.chats-list').html(\"\");\n        this.$('.result-string').text(xabber.getString(\"discover__no_matches\", [$(error).attr('from')]));\n    },\n\n    endDiscovering: function () {\n        this.$('.searching-result-wrap .preloader-wrapper').hide();\n    },\n\n    getGroupchatService: function (stanza) {\n        $(stanza).find('query item').each((idx, item) => {\n            if ($(item).attr('node') === Strophe.NS.GROUP_CHAT) {\n                let jid = $(item).attr('jid');\n                this.getGroupchatFeatures(jid);\n            }\n        });\n        this.endDiscovering();\n    },\n\n    getGroupchatFeatures: function (jid) {\n        let iq = $iq({type: 'get', to: jid})\n            .c('query', {xmlns: Strophe.NS.DISCO_INFO, node: Strophe.NS.GROUP_CHAT});\n        this.account.sendIQFast(iq, this.getServerInfo.bind(this), this.onDiscoveringError.bind(this));\n    },\n\n    getServerInfo: function (stanza) {\n        $(stanza).find('query identity').each((idx, item) => {\n            let $item = $(item);\n            if (($item.attr('category') === 'conference') && ($item.attr('type') === 'server')) {\n                let jid = $(stanza).attr('from');\n                this.getChatsFromSever(jid);\n            }\n        });\n    },\n\n    getChatsFromSever: function (jid) {\n        let iq = $iq({type: 'get', to: jid}).c('query', {xmlns: Strophe.NS.DISCO_ITEMS, node: Strophe.NS.GROUP_CHAT});\n        this.account.sendIQFast(iq, (stanza) => {\n            this.$('.chats-list').html(\"\");\n            $(stanza).find('query item').each((idx, item) => {\n                let $item = $(item),\n                    name = $item.attr('name'),\n                    jid = $item.attr('jid'),\n                    $chat_item_html = $(templates.existing_groupchat_item({name: name, jid: jid, color: this.account.settings.get('color')})),\n                    avatar = Images.getDefaultAvatar(name);\n                $chat_item_html.find('.circle-avatar').setAvatar(avatar, 32);\n                $chat_item_html.appendTo(this.$('.searching-result-wrap .chats-list'));\n            });\n            this.$('.result-string').text(xabber.getString(\"discover__text_discovered_groups\", [$(stanza).find('query item').length, this.account.get('jid')]));\n        });\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.account-field .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n        this.setColor();\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.searching_account_item({jid: account.get('jid')}));\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    getChatProperties: function (ev) {\n        let $target = $(ev.target).closest('.existing-chat-wrap'),\n            jid = $target.data('jid'),\n            name = $target.data('name'),\n            request_iq = $iq({type: 'get', to: jid})\n                .c('query', {xmlns: Strophe.NS.DISCO_INFO});\n        this.account.sendIQFast(request_iq, (iq_response) => {\n            let $iq_response = $(iq_response),\n                description = $iq_response.find('field[var=\"description\"] value').text(),\n                privacy = $iq_response.find('field[var=\"anonymous\"] value').text(),\n                membership = $iq_response.find('field[var=\"model\"] value').text(),\n                chat_properties = {jid: jid, name: name, privacy: privacy, description: description, membership: membership};\n            this.more_info_view = this.addChild('groupchat_properties', xabber.MoreInfoView,\n                {model: this, chat_properties: chat_properties, el: this.$('.searching-more')[0]})\n        });\n    }\n});\n\nxabber.MoreInfoView = xabber.BasicView.extend({\n    className: 'searching-main noselect',\n    template: templates.existing_groupchat_details_view,\n\n    events: {\n        \"click .btn-join-chat\": \"joinChat\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.chat_properties = options.chat_properties;\n        this.$el.html(this.template(this.chat_properties));\n    },\n\n    render: function (options) {\n\n    },\n\n    joinChat: function () {\n        let contact = this.account.contacts.mergeContact(this.chat_properties.jid);\n        contact.set('group_chat', true);\n        contact.acceptRequest();\n        contact.pushInRoster(null, () => {\n            contact.askRequest();\n            contact.getMyInfo();\n        });\n        contact.trigger(\"open_chat\", contact);\n    }\n});\n\nxabber.Searching = Backbone.Model.extend({\n\n    initialize: function (options) {\n        this.account = options.account;\n    },\n\n    getSearchingFields: function () {\n        let this_domain = 'xabber.com',//this.account.connection && this.account.connection.domain,\n            iq_get = $iq({type: 'get', to: 'index.' + this_domain}).c('query', {xmlns: Strophe.NS.INDEX + '#groupchat'});\n        this.account.sendIQFast(iq_get, this.parseSearchingFields);\n    },\n\n    parseSearchingFields: function (iq_result) {\n        let $result = $(iq_result),\n            $fields = $result.find(`x[xmlns = \"${Strophe.NS.XDATA}\"] field`),\n            supported_fields = [];\n        $fields.each((idx, field) => {\n            let $field = $(field);\n            if ($field.attr('type') !== 'hidden')\n                supported_fields.push({var: $field.attr('var'), label: $field.attr('label')});\n        });\n    },\n});\n\nxabber.LocalSearchingView = xabber.BasicView.extend({\n    className: '',\n    // template:,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n    },\n\n    render: function () {\n\n    },\n\n    search: function (query) {\n    }\n});\n\nxabber.GlobalSearchingView = xabber.BasicView.extend({\n    className: '',\n    // template:,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.indexed_chats = [];\n    },\n\n    render: function () {\n\n    },\n\n    search: function (query) {\n        this.indexed_chats = [];\n        let iq_search = $iq({to:'index.xabber.com', type: 'set'})\n            .c('query', {xmlns: Strophe.NS.INDEX + '#groupchat'})\n            .c('x', {xmlns: Strophe.NS.XDATA, type: 'form'})\n            .c('field', {var: 'FORM_TYPE', type:'hidden'})\n            .c('value').t(Strophe.NS.INDEX + '#groupchat').up().up();\n        if (query.description)\n            iq_search.c('field', {var: 'description'})\n                .c('value').t(query.description).up().up();\n        if (query.name)\n            iq_search.c('field', {var: 'name'})\n                .c('value').t(query.name).up().up();\n        if (query.model)\n            iq_search.c('field', {var: 'model'})\n                .c('value').t(query.model).up().up();\n        if (query.anywhere)\n            iq_search.c('field', {var: 'anywhere'})\n                .c('value').t(query.anywhere).up().up();\n        this.account.sendIQFast(iq_search, this.onSearched.bind(this));\n    },\n\n    onSearched: function (result) {\n        let $result = $(result),\n            $chats = $($result.find('query item groupchat'));\n        $chats.each((idx, chat) => {\n            let $chat = $(chat),\n                chat_jid = $chat.attr('jid'),\n                attrs = {jid: chat_jid},\n                $properties = $chat.children();\n            $properties.each((idx, property) => {\n                let $property = $(property),\n                    property_name = $property[0].tagName.replace(/-/g, '_'),\n                    property_value = $property.text();\n                _.extend(attrs, {[property_name]: property_value});\n            });\n            this.indexed_chats.push(attrs);\n        });\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.discovering = this.wide_panel.addChild('discovering_main',\n        this.DiscoveringView);\n    /*this.local_searching = new xabber.LocalSearching;\n    this.global_searching = new xabber.GlobalSearching;*/\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.mentions,\n    utils = env.utils,\n    $ = env.$,\n    Strophe = env.Strophe,\n    _ = env._,\n    Images = utils.images,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\n\nxabber.Mention = Backbone.Model.extend({\n    defaults: {\n        active: false,\n        display: false,\n        timestamp: 0\n    },\n\n    initialize: function (attrs, options) {\n        this.contact = options.contact;\n        this.message = options.message;\n        this.id = this.message.get('unique_id');\n        this.set('timestamp', this.message.get('timestamp'));\n        this.account = this.contact.account;\n        this.item_view = new xabber.MentionItemView({model: this});\n        this.contact.on(\"destroy\", this.destroy, this);\n        this.message.on(\"change:last_replace_time\", this.onMessageUpdated, this);\n    },\n\n    onMessageUpdated: function () {\n        if (this.message.get('mentions') && this.message.get('mentions').length) {\n            this.message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\",\n                    id = mention_target.match(/\\?id=\\w*/),\n                    jid = mention_target.match(/\\?jid=.*/);\n                if (id)\n                    mention_target = id[0].slice(4);\n                else if (jid)\n                    mention_target = jid[0].slice(5);\n                else\n                    mention_target = \"\";\n                if (id) {\n                    if (this.contact.my_info) {\n                        if (mention_target === this.contact.my_info.get('id'))\n                            this.item_view.updateLastMessage();\n                        else\n                            this.destroy();\n                    }\n                    else if (this.contact.get('group_chat')) {\n                        if (this._pending_my_info) {\n                            this._pending_my_info.done(() => {\n                                if (mention_target === this.contact.my_info.get('id'))\n                                    this.item_view.updateLastMessage();\n                                else\n                                    this.destroy();\n                                this._pending_my_info = null;\n                            });\n                        }\n                        else {\n                            this._pending_my_info = new $.Deferred();\n                            this.contact.getMyInfo(() => {\n                                if (mention_target === this.contact.my_info.get('id'))\n                                    this.item_view.updateLastMessage();\n                                else\n                                    this.destroy();\n                                this._pending_my_info.resolve();\n                            });\n                        }\n                    }\n                } else if (jid && mention_target === this.account.get('jid')) {\n                    this.item_view.updateLastMessage();\n                }\n                else\n                    this.destroy();\n            });\n        } else\n            this.destroy();\n    }\n});\n\nxabber.MentionsBase = Backbone.Collection.extend({\n    model: xabber.Mention\n});\n\nxabber.AccountMentions = xabber.MentionsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.on(\"add\", this.onMentionAdded, this)\n    },\n\n    onMentionAdded: function (mention) {\n        xabber.mentions.add(mention);\n    }\n});\n\nxabber.Mentions = xabber.MentionsBase.extend({\n    comparator: 'timestamp',\n    initialize: function () {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    }\n});\n\nxabber.MentionsView = xabber.SearchPanelView.extend({\n    className: 'mentions-container container',\n    ps_selector: '.mentions-list-wrap',\n    main_container: '.mentions-list',\n    ps_settings: {theme: 'item-list'},\n    template: templates.mentions_panel,\n\n    _initialize: function () {\n        this.active_mention = null;\n        this.keyup_timeout = null;\n        this.model.on(\"add\", this.onMentionAdded, this);\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"destroy\", this.onMentionRemoved, this);\n        xabber.accounts.on(\"list_changed\", this.updateLeftIndicator, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    render: function (options) {\n        if (!options.right && this.active_mention) {\n            this.active_mention.model.set('active', false);\n            this.active_mention = null;\n        }\n        (options.right !== 'chat' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search && options.right === 'chat') && this.clearSearch();\n    },\n\n    onMentionAdded: function (mention) {\n        this.addChild(mention.id, mention.item_view);\n        this.updateMentionPosition(mention);\n    },\n\n    onMentionRemoved: function (mention, options) {\n        options = options || {};\n        if (this.active_mention === this.child(mention.id)) {\n            this.active_mention = null;\n        }\n        this.removeChild(mention.id, options);\n        this.updateScrollBar();\n    },\n\n    selectItem: function (id) {\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        $selection.find('.mention-info-wrap').addClass('selected');\n    },\n\n    clearSearchSelection: function (ev) {\n        this.selection_id = null;\n        this.$('.list-item.selected').removeClass('selected');\n        this.$('.list-item .selected').removeClass('selected');\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = xabber.chats_view.child(selection.data('id'));\n                view && view.open({screen: xabber.body.screen.get('name'), clear_search: false});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.get(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')).hash_id);\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            selection.find('.mention-info-wrap').click();\n        }\n    },\n\n    replaceMentionItem: function (item, mentions) {\n        let view = this.child(item.id);\n        if (view && item.get('timestamp')) {\n            view.$el.detach();\n            let index = mentions.indexOf(item);\n            if (index === 0) {\n                this.$('.mentions-list').append(view.$el);\n            } else {\n                this.$('.mention-item').eq(-index).before(view.$el);\n            }\n            let $prev_el = view.$el.prev('.mention-item'),\n                $next_el = view.$el.next('.mention-item'),\n                contact_jid = view.$el.data('contact-jid');\n                if ($prev_el.length) {\n                    let prev_contact_jid = $prev_el.data('contact-jid');\n                    if (prev_contact_jid !== contact_jid)\n                        view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n                }\n                else\n                    view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n                if ($next_el.length) {\n                    let next_contact_jid = $next_el.data('contact-jid');\n                    if (next_contact_jid === contact_jid) {\n                        $next_el.find('.group-chat-title-wrap').addClass('hidden');\n                    }\n                    else\n                        $next_el.find('.group-chat-title-wrap').removeClass('hidden');\n                }\n                else\n                    view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n        }\n    },\n\n    readAllMentions: function () {\n        xabber.accounts.connected.forEach((account) => {\n            let mentions = _.clone(account.unread_mentions.models);\n            _.each(mentions, ((mention) => {\n                let msgid = mention.message.get('msgid'),\n                    archive_id = mention.message.get('archive_id'),\n                    contact_archive_id = mention.message.get('contact_archive_id'),\n                    chat = account.chats.getChat(mention.contact);\n                mention.message.set('is_unread', false);\n                chat.sendMarker(msgid, 'displayed', archive_id, contact_archive_id);\n            }));\n        });\n    },\n\n    updateLeftIndicator: function (accounts) {\n        this.$el.attr('data-indicator', accounts.connected.length > 1);\n    },\n\n    updateMentionPosition: function (item) {\n        let view = this.child(item.id);\n        if (!view)\n            return;\n        this.replaceMentionItem(item, this.model);\n    },\n\n    onChangedActiveStatus: function (mention) {\n        if (mention.get('active')) {\n            let previous_mention = this.active_mention;\n            this.active_mention = this.child(mention.id);\n            previous_mention && previous_mention.model.set('active', false);\n        }\n    }\n});\n\nxabber.MentionItemView = xabber.BasicView.extend({\n    className: 'mention-item list-item',\n    template: templates.mention_item,\n    avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n    events: {\n        'click .mention-info-wrap': 'openByClick'\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.$el.attr('data-id', this.model.id);\n        this.$el.attr('data-contact-jid', this.contact.get('jid'));\n        this.updateContactName();\n        this.updateGroupChat();\n        this.updateName();\n        this.updateLastMessage();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.updateCounter();\n        this.updateIcon();\n        this.model.on(\"change:active\", this.updateActiveStatus, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.contact.on(\"change:name\", this.updateContactName, this);\n        this.contact.on(\"change:group_chat\", this.updateGroupChat, this);\n        this.model.message.on(\"change:is_unread\", this.updateCounter, this);\n    },\n\n    updateName: function () {\n        let message = this.model.message,\n            user_info = message.get('user_info') || message.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes,\n            contact_name = this.contact.get('name');\n        if (user_info)\n            contact_name = user_info.nickname || user_info.jid || user_info.id || this.model.message.get('from_jid');\n        this.$('.chat-title').text(contact_name);\n    },\n\n    updateIcon: function () {\n        this.$('.contact-icon .group-chat-icon').hideIf(!this.contact.get('group_chat') && this.contact.get('jid') === this.account.domain);\n        this.$('.contact-icon .server-icon').hideIf(this.contact.get('jid') !== this.account.domain);\n    },\n\n    updateContactName: function () {\n        let contact_name = this.contact.get('name');\n        this.$('.group-chat-name').text(contact_name);\n        if (!this.contact.get('group_chat')) {\n            this.updateName();\n            if (!this.contact.get('photo_hash')) {\n                let default_avatar = Images.getDefaultAvatar(contact_name);\n                this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n            }\n        }\n    },\n\n    updateGroupChat: function () {\n        this.updateIcon();\n    },\n\n    updateCounter:function () {\n        let unread = this.model.message.get('is_unread');\n        this.$('.msg-counter').switchClass('hidden', !unread);\n        if (unread)\n            this.account.unread_mentions.add(this.model);\n        else\n            this.account.unread_mentions.remove(this.model);\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    updateLastMessage: function () {\n        let msg = this.model.message;\n        if (!msg)\n            return;\n        let msg_time = msg.get('time'),\n            timestamp = msg.get('timestamp'),\n            forwarded_message = msg.get('forwarded_message'),\n            msg_files = msg.get('files') || [],\n            msg_images = msg.get('images') || [],\n            msg_locations = msg.get('locations') || [],\n            msg_text = (forwarded_message) ? (msg.get('message') || xabber.getString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText();\n        msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n        this.model.set({timestamp: timestamp});\n        if (msg_files.length || msg_images.length || msg_locations.length) {\n            let $colored_span = $('<span class=\"text-color-500\"/>');\n            if (msg_files.length && msg_images.length)\n                msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n            else {\n                if (msg_files.length > 0) {\n                    let total_size = 0;\n                    msg_files.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_images.length > 0) {\n                    let total_size = 0;\n                    msg_images.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_locations.length > 0) {\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                }\n            }\n            this.$('.last-msg').text(\"\").append(msg_text);\n        }\n        else {\n            this.$('.last-msg').text(msg_text);\n        }\n        this.$el.emojify('.last-msg', {emoji_size: 16});\n        this.$('.last-msg-date').text(utils.pretty_short_datetime(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateActiveStatus: function () {\n        this.$el.find('.mention-info-wrap').switchClass('active', this.model.get('active'));\n    },\n\n    updateAvatar: function () {\n        let message = this.model.message,\n            user_info = message.get('user_info') || message.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes,\n            image;\n        if (user_info) {\n            if (user_info.avatar) {\n                image = user_info.b64_avatar || this.account.chat_settings.getB64Avatar(user_info.id);\n                if (image) {\n                    this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + user_info.id;\n                    this.contact.getAvatar(user_info.avatar, node, (data_avatar) => {\n                        image = data_avatar;\n                        this.account.chat_settings.updateCachedAvatars(user_info.id, user_info.avatar, data_avatar);\n                        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                    }, () => {\n                        let default_avatar = Images.getDefaultAvatar(user_info.nickname || user_info.jid || user_info.id);\n                        this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n                    });\n                }\n            }\n            else {\n                let default_avatar = Images.getDefaultAvatar(user_info.nickname || user_info.jid || user_info.id);\n                this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n            }\n        }\n        else {\n            image = this.contact.cached_image;\n            this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n        }\n    },\n\n    openByClick: function () {\n        let message = this.model.message,\n            chat = this.account.chats.getChat(this.contact);\n        this.model.message.set('is_unread', false);\n        chat.sendMarker(message.get('origin_id'), 'displayed', message.get('stanza_id'), message.get('contact_stanza_id'));\n        this.model.set('active', true);\n        this.contact.trigger(\"open_mention\", this.contact, message.get('unique_id'));\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    }\n\n});\n\nxabber.MentionsPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap mentions-placeholder-wrap noselect',\n    template: templates.mentions_placeholder,\n\n    _initialize: function (options) {\n        xabber.on('update_placeholder',this.onPlaceholderUpdate, this);\n    },\n\n    onPlaceholderUpdate: function () {\n        if (xabber.toolbar_view.$('.toolbar-item.jingle-calls.active').length || xabber.toolbar_view.$('.toolbar-item.geolocation-chats.active').length){\n            this.$('.text').text(xabber.getString(\"message_manager_error_not_implemented\"));\n        } else {\n            this.$('.text').text(xabber.getString(\"mentions_list__placeholder\"));\n        }\n    },\n});\n\nxabber.Account.addInitPlugin(function () {\n   this.mentions = new xabber.AccountMentions(null, {account: this});\n   this.unread_mentions = new xabber.Mentions(null, {account: this});\n});\n\nxabber.once(\"start\", function () {\n    this.mentions = new this.Mentions;\n    this.mentions_view = this.left_panel.addChild('mentions',\n        this.MentionsView, {model: this.mentions});\n    this.mentions_placeholder = this.right_panel.addChild('mentions_placeholder',\n        this.MentionsPlaceholderView);\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    $ = env.$;\n\nxabber.once(\"start\", function () {\n    $(window).on(\"keydown\", (ev) => {\n        if ((ev.ctrlKey || ev.metaKey) && ev.keyCode == constants.KEY_SHIFT || ev.shiftKey && ev.keyCode == constants.KEY_CTRL) {\n            this.shift_pressed = null;\n            this.shiftctrl_pressed = true;\n            ev.preventDefault();\n        } else if (ev.keyCode == constants.KEY_SHIFT) {\n            this.shift_pressed = true;\n            ev.preventDefault();\n        }\n        let attrs = xabber.body.screen.attributes;\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            if (xabber.body.$el.siblings('#modals').children('.open').length)\n                return;\n        }\n        if (attrs.chat_item && (attrs.name === 'mentions' || attrs.name === 'contacts' || attrs.name === 'all-chats') && (attrs.right === 'chat' || attrs.right === 'participant_messages' || attrs.right === 'message_context' || attrs.right === 'searched_messages')) {\n            if (window.$('.message-actions-panel').length && !window.$('.message-actions-panel').hasClass('hidden')) {\n                if (!ev.ctrlKey && !ev.metaKey) {\n                    switch (ev.keyCode) {\n                        case 67:\n                            attrs.chat_item.model.trigger('copy_selected_messages');\n                            break;\n                        case 68:\n                            attrs.chat_item.model.trigger('delete_selected_messages');\n                            break;\n                        case 69:\n                            attrs.chat_item.model.trigger('edit_selected_message');\n                            break;\n                        case 70:\n                            attrs.chat_item.model.trigger('forward_selected_messages');\n                            break;\n                        case 80:\n                            attrs.chat_item.model.trigger('pin_selected_message');\n                            break;\n                        case 82:\n                            attrs.chat_item.model.trigger('reply_selected_messages');\n                            break;\n                        case constants.KEY_ESCAPE:\n                            if (!xabber.body.screen.get('right_contact'))\n                                attrs.chat_item.model.trigger('reset_selected_messages');\n                            break;\n                    }\n                    ev.preventDefault();\n                }\n            }\n        }\n        });\n    $(window).on(\"keyup\", (ev) => {\n        if (!(ev.shiftKey && ev.ctrlKey))\n            this.shiftctrl_pressed = null;\n        if (ev.shiftKey && !ev.ctrlKey)\n            this.shift_pressed = true;\n        if (!ev.shiftKey)\n            this.shift_pressed = null;\n    });\n\n    this.updateLayout = function (options) {\n        options || (options = {});\n        this.updateContainersLayout();\n        xabber.trigger('update_css', options);\n        this.body.$('.ps-container').perfectScrollbar('update');\n    };\n\n    this.updateContainersLayout = function () {\n        let width = this.body.$el.width(),\n            height = this.body.$el.height(),\n            is_wide = width >= constants.WIDTH_MEDIUM,\n            is_narrow = width < constants.WIDTH_MEDIUM;\n        let panel_width,\n            left_panel_width,\n            right_panel_width,\n            right_contact_panel_width,\n            chat_bottom_panel_width,\n            toolbar_width = 64,\n            toolbar_accounts_heigth = height - 506,\n            right_contact_panel_styles = {};\n        if (is_wide || !(is_narrow)) {\n            panel_width = 1536;\n        } else if (is_narrow) {\n            panel_width = width - toolbar_width - 20 - 44;\n        } else {\n            panel_width = (width - toolbar_width - 20) * 7 / 9;\n        }\n        left_panel_width = right_contact_panel_width = 384;\n        right_panel_width = panel_width - (left_panel_width + right_contact_panel_width);\n        chat_bottom_panel_width = '100%';\n        if (is_narrow){\n            right_contact_panel_width = left_panel_width = (panel_width * 0.264) < 288 ? 288 : panel_width * 0.264;\n\n        }\n        if (right_panel_width < 512 ){\n            right_panel_width = panel_width - left_panel_width;\n            this.right_contact_panel_saveable = false;\n            right_contact_panel_styles = {\n                position : 'absolute',\n                right : 0,\n                'z-index' : 499,\n            };\n            if ((right_panel_width - 384) < 128) {\n                right_contact_panel_width = right_panel_width;\n                this.right_contact_panel.$el.removeClass('background-click')\n            }\n            else {\n                right_contact_panel_width = 384\n                this.right_contact_panel.$el.addClass('background-click')\n            }\n        }\n        else {\n            this.right_contact_panel_saveable = true;\n            right_contact_panel_styles = {\n                position : 'static',\n                'z-index' : 0,\n            };\n            this.right_contact_panel.$el.removeClass('background-click')\n\n        }\n        this.right_contact_panel_width = right_contact_panel_width;\n\n        if (!this.body.screen.get('right_contact')) {\n            right_contact_panel_width = 0;\n            right_panel_width = panel_width - left_panel_width;\n        }\n        if (right_panel_width < 768) {\n            chat_bottom_panel_width = right_panel_width;\n        }\n\n        right_contact_panel_styles.width = right_contact_panel_width;\n        this.chat_head.$el.switchClass('chat-head-ultra-narrow', right_panel_width <= 650);\n        this.chat_head.$el.switchClass('chat-head-narrow', right_panel_width < 750);\n        this.chat_head.$el.switchClass('chat-head-normal', (right_panel_width < 850 && right_panel_width >= 750));\n        this.chat_head.$el.switchClass('chat-head-normal-wide', (right_panel_width < 1000 && right_panel_width >= 850));\n        this.chat_head.$el.switchClass('chat-head-wide', right_panel_width > 1000);\n        this.main_panel.setCustomCss({\n            width: panel_width,\n        });\n        this.left_panel.setCustomCss({\n            width: left_panel_width,\n        });\n        this.right_panel.setCustomCss({\n            width: right_panel_width,\n        });\n        this.right_contact_panel.setCustomCss(right_contact_panel_styles);\n        this.chat_bottom.setCustomCss({\n            width: chat_bottom_panel_width,\n        });\n        this.toolbar_view.$el.find('.toolbar-bottom .accounts-wrap .accounts').css({\n            'max-height': toolbar_accounts_heigth,\n        });\n    };\n\n    this.on(\"update_layout\", this.updateLayout, this);\n\n    this.body.addScreen('blank', {});\n\n    this.body.addScreen('login', {\n        login: { xmpp_login: null }\n    });\n\n    this.body.addScreen('settings-modal', {\n        main_overlay: {\n            settings_modal: null,\n        },\n    });\n\n    this.body.addScreen('add_account', {\n        blur_overlay: null,\n        toolbar: null,\n        login: null\n    });\n\n    this.body.addScreen('about', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { about: null },\n            placeholders: null\n        },\n        roster: null\n    });\n\n    let path_acc_settings_modal = new this.ViewPath('account.settings_account_modal');\n\n    this.body.addScreen('account_settings_modal', {\n        main_overlay: {\n            account_settings_modal: path_acc_settings_modal\n        },\n    });\n\n\n    let path_chat_head = new this.ViewPath('chat_item.content.head'),\n        path_chat_body = new this.ViewPath('chat_item.content'),\n        path_chat_body_placeholder = new this.ViewPath('chat_item.content_placeholder'),\n        path_chat_bottom = new this.ViewPath('chat_item.content.bottom'),\n        path_group_invitation = new this.ViewPath('contact.invitation'),\n        path_enable_view = new this.ViewPath('omemo_item.account.omemo_enable_view'),\n        path_contact_details_right = new this.ViewPath('contact.details_view_right'),\n        path_contact_details_right_encrypted = new this.ViewPath('contact.details_view_right_encrypted'),\n        path_participant_messages = new this.ViewPath('model.messages_view'),\n        path_details_participants = new this.ViewPath('contact.details_view.participants');\n\n    this.body.addScreen('contacts', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { contacts: null },\n            right: { contact_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('search', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { discovering_main: null},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('mentions', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { mentions: null },\n            right: { mentions_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('all-chats', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { chats: null },\n            right: { chat_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n\n    this.right_panel.patchTree = function (tree, options) {\n        if (options.right === undefined)\n            return;\n        if (options.show_placeholder) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: null,\n                chat_body_placeholder: path_chat_body_placeholder,\n                chat_bottom: null\n            };\n        }\n        if ((options.right === 'message_context') || (options.right === 'participant_messages') || (options.right === 'searched_messages')) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: path_participant_messages,\n                chat_body_placeholder: null,\n                chat_bottom: path_chat_bottom\n            };\n        }\n        if (options.right === 'group_invitation') {\n            return { details: path_group_invitation };\n        }\n        if (options.details_content === 'participants')\n            return { details_content: path_details_participants };\n        if (options.chat_item) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: path_chat_body,\n                chat_body_placeholder: null,\n                chat_bottom: path_chat_bottom\n            };\n        }\n        if (options.right === 'enable_encryption' || options.omemo_item) {\n            return { details: path_enable_view };\n        }\n    };\n\n\n    this.right_contact_panel.patchTree = function (tree, options) {\n        if (options.right_contact === undefined)\n            return;\n        if (options.right_contact === 'contact_details') {\n            return { details: path_contact_details_right };\n        }\n        if (options.right_contact === 'contact_details_encrypted') {\n            return { details: path_contact_details_right_encrypted };\n        }\n        if (options.details_content === 'participants')\n            return { details_content: path_details_participants };\n    };\n\n    this.body.setScreen('blank');\n\n    // initial synchronization\n    if (!this.accounts.length)\n        this.body.setScreen('login');\n    else if (this.body.isScreen('blank'))\n        this.body.setScreen('all-chats');\n    xabber.trigger(\"start_accounts\");\n\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    utils = env.utils,\n    $ = env.$,\n    templates = env.templates.base,\n    Strophe = env.Strophe,\n    _ = env._,\n    KeyHelper = env.libsignal.KeyHelper,\n    SignalProtocolAddress = env.libsignal.SignalProtocolAddress,\n    SessionBuilder = env.libsignal.SessionBuilder,\n    SessionCipher = env.libsignal.SessionCipher;\n\nxabber.Peer = Backbone.Model.extend({\n    idAttribute: 'jid',\n\n    initialize: function (attrs, options) {\n        attrs = attrs || {};\n        this.account = options.account;\n        this.devices = {};\n        this.store = this.account.omemo.store;\n        this.fingerprints = new xabber.Fingerprints({model: this});\n        this.updateDevices(attrs.devices);\n        this.set({\n            jid: attrs.jid\n        });\n    },\n\n    updateDevices: function (devices) {\n        if (!devices)\n            return;\n        for (let d in this.devices) {\n            if (!devices[d]) {\n                this.account.omemo.removeSession('session' + this.devices[d].address.toString());\n                delete this.devices[d];\n            }\n        }\n        for (let d in devices) {\n            let device = this.getDevice(d),\n                label = devices[d].label;\n            label && device.set('label', label);\n        }\n    },\n\n    getDevicesNode: async function () {\n        if (!this._pending_devices) {\n            this._pending_devices = true;\n            this._dfd_devices = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                this.account.getConnectionForIQ().omemo.getDevicesNode(this.get('jid'), (cb) => {\n                    this.updateDevices(this.account.getConnectionForIQ().omemo.parseUserDevices($(cb)));\n                    this._pending_devices = false;\n                    this._dfd_devices.resolve();\n                    resolve();\n                }, () => {\n                    this._pending_devices = false;\n                    this._dfd_devices.resolve();\n                    resolve();\n                });\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_devices.done(() => {\n                    resolve();\n                });\n            });\n        }\n    },\n\n    encrypt: async function (message) {\n        let enc_promises = [],\n            aes = await utils.AES.encrypt(message),\n            is_trusted = true;\n\n        if (!_.keys(this.devices).length)\n            await this.getDevicesNode();\n        for (let device in this.devices) {\n            enc_promises.push(this.devices[device].encrypt(aes.keydata));\n        }\n\n        for (let device in this.account.omemo.own_devices) {\n            enc_promises.push(this.account.omemo.own_devices[device].encrypt(aes.keydata));\n        }\n\n        let keys = await Promise.all(enc_promises);\n\n        keys = keys.filter(key => key !== null);\n\n        for (let device_id in this.devices) {\n            let device = this.devices[device_id];\n            if (device.get('ik') === null)\n                continue;\n            if (device.get('trusted') === null)\n                is_trusted = 'error';\n            if (is_trusted && device.get('trusted') === undefined)\n                is_trusted = 'none';\n        }\n\n        return {\n            keys: keys,\n            payload: aes.payload,\n            is_trusted: is_trusted\n        };\n    },\n\n    decrypt: async function (deviceId, ciphertext, preKey) {\n        let device = this.getDevice(deviceId);\n\n        return device.decrypt(ciphertext, preKey);\n    },\n\n    getDevice: function (id) {\n        if (!this.devices[id]) {\n            this.devices[id] = new xabber.Device({jid: this.get('jid'), id: id }, { account: this.account, store: this.store});\n        }\n\n        return this.devices[id];\n    }\n});\n\nxabber.Peers = Backbone.Collection.extend({\n    model: xabber.Peer,\n\n    initialize: function (models, options) {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    }\n});\n\nxabber.Fingerprints = xabber.BasicView.extend({\n    className: 'modal main-modal fingerprints-wrap',\n    template: templates.fingerprints,\n    ps_selector: '.fingerprints-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        'click .btn-trust': \"trustDevice\",\n        'click .btn-ignore': \"ignoreDevice\",\n        'click .btn-delete': \"deleteDevice\",\n        \"click .set-label + div\": \"editLabel\",\n        'click .btn-cancel': \"close\"\n    },\n\n    _initialize: function () {\n        if (this.model.own_devices) {\n            this.account = this.model.account;\n            this.omemo = this.model;\n            this.jid = this.account.get('jid');\n            this.is_own_devices = true;\n        } else {\n            this.account = this.model.account;\n            this.omemo = this.account.omemo;\n            this.jid = this.model.get('jid');\n        }\n    },\n\n    open: function () {\n        this.omemo = this.account.omemo;\n        let name = \"\";\n        if (this.is_own_devices)\n            name = this.account.get('name');\n        else {\n            let contact = this.account.contacts.get(this.jid);\n            name = contact ? contact.get('name') : this.jid;\n        }\n        this.$('.header').text(xabber.getString('omemo__dialog_fingerprints__header', [name]));\n        this.data.set('visible', true);\n        this.show();\n        this.$('div.fingerprints-content').html(env.templates.contacts.preloader());\n        if (this.is_own_devices)\n            this.renderOwnDevices();\n        else\n            this.renderDevices();\n    },\n\n    renderDevices: function () {\n        this.model.getDevicesNode().then(() => {\n            let devices_count = _.keys(this.model.devices).length;\n            this.updateFingerprints(this.model.devices);\n        });\n        this.updateOwnFingerprint();\n    },\n\n    renderOwnDevices: function () {\n        this.omemo.getMyDevices().then(() => {\n            let devices_count = _.keys(this.model.own_devices).length;\n            this.updateFingerprints(this.model.own_devices);\n            this.updateOwnFingerprint();\n        });\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    editLabel: function () {\n        this.$('.set-label').removeClass('hidden');\n        this.$('.set-label').focus();\n        let saveLabel = (ev) => {\n            let label = ev.target.value.trim();\n            this.saveLabel(label);\n        };\n        this.$('.set-label')[0].onblur = saveLabel;\n        this.$('input.set-label')[0].onkeydown = (ev) => {\n            if (ev.keyCode == constants.KEY_ENTER)\n                saveLabel(ev);\n        };\n    },\n\n    saveLabel: function (label) {\n        this.$('.set-label').addClass('hidden');\n        if (label == this.account.settings.get('device_label_text'))\n            return;\n        this.account.settings.save('device_label_text', label);\n        this.account.getConnectionForIQ().omemo.publishDevice(this.omemo.get('device_id'), label, () => {\n            this.updateOwnFingerprint();\n        });\n    },\n\n    updateFingerprints: async function (devices) {\n        let counter = 0,\n            devices_count = _.keys(devices).length,\n            dfd = new $.Deferred(),\n            $container = this.$('div.fingerprints-content');\n        dfd.done((f_count) => {\n            if (!f_count)\n                $container.html($(`<div class=\"empty-table\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n            else\n                this.$('.dropdown-button').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    container: this.$('.fingerprints-content')[0],\n                    alignment: 'left'\n                });\n            this.jid == this.account.get('jid') && f_count++;\n            this.$('.additional-info').text(xabber.getQuantityString(\"omemo__dialog_fingerprints__text_devices_count\", f_count, [this.jid, f_count]));\n            $container.find('.preloader-wrapper').detach();\n        });\n        for (let device_id in devices) {\n            if (device_id == this.omemo.get('device_id')) {\n                counter++;\n                if (devices_count == counter)\n                    dfd.resolve($container.find('div.row').length);\n                continue;\n            }\n            let device = devices[device_id];\n            if (device.get('ik')) {\n                let options = {},\n                    f = device.generateFingerprint(),\n                    fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                    is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                counter++;\n                if (devices_count == counter)\n                    dfd.resolve($container.find('div.row').length);\n            }\n            else {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        ik = $bundle.find(`ik`).text();\n                    if (ik) {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let options = {},\n                            f = device.generateFingerprint(),\n                            fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                            is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                        is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                        $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                    }\n                    counter++;\n                    if (devices_count == counter)\n                        dfd.resolve($container.find('div.row').length);\n                }, () => {\n                    counter++;\n                    if (devices_count == counter)\n                        dfd.resolve($container.find('div.row').length);\n                });\n            }\n        }\n    },\n\n    updateOwnFingerprint: async function () {\n        this.$('.this-device-content').html(\"\");\n        let omemo = this.account.omemo;\n        if (omemo) {\n            let device = omemo.own_devices[omemo.get('device_id')];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else if (device.get('ik')) {\n                    device.set('fingerprint', device.generateFingerprint());\n                    this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else {\n                    device.getBundle().then(({pk, spk, ik}) => {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let fingerprint = device.generateFingerprint();\n                        if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                            device.set('fingerprint', fingerprint);\n                        this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                    });\n                }\n            } else {\n                omemo.store.getIdentityKeyPair().then((ik) => {\n                    let pubKey = ik.pubKey;\n                    if (pubKey.byteLength == 33)\n                        pubKey = pubKey.slice(1);\n                    let fingerprint = Array.from(new Uint8Array(pubKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n                    this.$('.this-device-content').append(this.addRow(omemo.get('device_id'), this.account.settings.get('device_label_text'), null, fingerprint));\n                });\n            }\n\n        }\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                deferred.resolve();\n            }});\n        return deferred.promise();\n    },\n\n    trustDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            fingerprint = $target.find('.fingerprint').text().replace(/ /g, \"\"),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n            device_id = Number($target.find('div.device-id').text());\n        $target.children('.buttons[data-trust]').attr('data-trust', 'trust');\n        $target.find('.trust-item-wrap').children().attr('data-value', 'trust').text(xabber.getString('omemo__dialog_fingerprints__button_trust'));\n        this.omemo.updateFingerprints(this.jid, device_id, fingerprint, true);\n        let device = this.is_own_devices ? this.account.omemo.own_devices[device_id] : this.model.devices[device_id];\n        if (device && is_trusted != 'trusted') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', true);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n            this.account.trigger('device_trusted', device.id, this.jid);\n        }\n    },\n\n    ignoreDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            fingerprint = $target.find('.fingerprint').text().replace(/ /g, \"\"),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n            device_id = Number($target.find('div.device-id').text());\n        $target.children('.buttons[data-trust]').attr('data-trust', 'ignore');\n        $target.find('.trust-item-wrap').children().attr('data-value', 'ignore').text(xabber.getString('omemo__dialog_fingerprints__button_ignore'));\n        this.omemo.updateFingerprints(this.jid, device_id, fingerprint, false);\n        let device = this.is_own_devices ? this.account.omemo.own_devices[device_id] : this.model.devices[device_id];\n        if (device && is_trusted != 'ignore') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', false);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    addRow: function (id, label, trust, fingerprint, options) {\n        options = options || {};\n        let delete_button = this.is_own_devices ? true : false,\n            edit_setting = id == this.omemo.get('device_id'),\n            old_fingerprint = options.old_fingerprint,\n            error;\n        if (fingerprint.match(/.{1,8}/g))\n            fingerprint = fingerprint.match(/.{1,8}/g).join(\" \");\n        else {\n            fingerprint = '';\n            error = xabber.getString(\"omemo__dialog_fingerprints__invalid_fingerprint\");\n            let device = this.is_own_devices ? this.account.omemo.own_devices[id] : this.model.devices[id];\n            if (device && trust != 'ignore') {\n                trust = 'ignore';\n                this.omemo.updateFingerprints(this.jid, id, fingerprint, false);\n                device.set('trusted', false);\n                device.is_session_initiated = false;\n                device.preKeys = null;\n                this.account.trigger('trusting_updated');\n            }\n        }\n        old_fingerprint && (old_fingerprint = old_fingerprint.match(/.{1,8}/g).join(\" \"));\n        let $row = templates.fingerprint_item({id,label,trust,fingerprint, delete_button, edit_setting, old_fingerprint, error});\n        return $row;\n    },\n\n    deleteDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            device_id = Number($target.find('div.device-id').text());\n        utils.dialogs.ask(xabber.getString(\"omemo__dialog_delete_device__header\"), xabber.getString(\"omemo__dialog_delete_device__text\", [device_id]), null, { ok_button_text: xabber.getString(\"omemo__dialog_delete_device__button_delete\")}).done((result) => {\n            if (result) {\n                $target.detach();\n                let f_count = this.$('div.fingerprints-content').find('div.row').length;\n                if (!f_count)\n                    this.$('div.fingerprints-content').html($(`<div class=\"empty-table\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n                this.jid == this.account.get('jid') && f_count++;\n                this.$('.additional-info').text(xabber.getQuantityString(\"omemo__dialog_fingerprints__text_devices_count\", f_count, [this.jid, f_count]));\n                delete this.model.own_devices[device_id];\n                let conn = this.account.getConnectionForIQ();\n                if (conn && conn.omemo) {\n                    delete conn.omemo.devices[device_id];\n                    conn.omemo.publishDevice(null, null, () => {\n                        $target.detach();\n                    });\n                    conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                }\n            }\n        });\n    },\n});\n\nxabber.FingerprintsOwnDevices = xabber.BasicView.extend({\n    className: 'modal main-modal fingerprints-devices-wrap',\n    template: templates.fingerprints_devices,\n\n    events: {\n        'click .btn-trust': \"trustDevice\",\n        'click .btn-ignore': \"ignoreDevice\",\n        'click .btn-cancel': \"close\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.omemo = this.model;\n        this.jid = this.account.get('jid');\n        this.is_own_devices = true;\n    },\n\n    open: function (device_id, is_own) {\n        this.omemo = this.account.omemo;\n        this.data.set('visible', true);\n        this.updateColorScheme();\n        this.show();\n        this.renderOwnDevices(device_id, is_own);\n    },\n\n    updateTrustDevice: function (device_id, $container, context, callback) {\n        this.omemo.getMyDevices().then(() => {\n            let device = this.model.own_devices[device_id];\n            if (!device)\n                return;\n            if (device.get('ik')) {\n                let f = device.generateFingerprint(),\n                    fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                    is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                this.renderTrustOnFingerprint(is_trusted, $container, context, callback);\n            }\n            else {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        ik = $bundle.find(`ik`).text();\n                    if (ik) {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let f = device.generateFingerprint(),\n                            fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                            is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                        this.renderTrustOnFingerprint(is_trusted, $container, context, callback);\n                    }\n                }, () => {\n                });\n            }\n        });\n    },\n\n    renderTrustOnFingerprint: function (is_trusted, $container, context, callback) {\n        $container.find('.device-encryption').attr('data-trust', is_trusted).addClass('active');\n        $container.attr('data-trust', is_trusted);\n        if (is_trusted === 'unknown'){\n            $container.find('.device-encryption span').text(xabber.getString(\"settings_account__unverified_device\"));\n            $container.attr('data-trust-text', xabber.getString(\"settings_account__unverified_device\"));\n        } else if (is_trusted === 'trust') {\n            $container.find('.device-encryption span').text(xabber.getString(\"settings_account__trusted_device\"));\n            $container.attr('data-trust-text', xabber.getString(\"settings_account__trusted_device\"));\n        } else if (is_trusted === 'ignore') {\n            $container.find('.device-encryption span').text(xabber.getString(\"settings_account__ignored_device\"));\n            $container.attr('data-trust-text', xabber.getString(\"settings_account__ignored_device\"));\n        }\n        if (is_trusted !== 'trust' && is_trusted !== 'ignore'){\n            let $warning_container = $container.closest('.devices-wrap').find('.device-encryption-warning'),\n                untrusted_count = parseInt($warning_container.attr('data-not-trusted-count')) + 1;\n            $warning_container.removeClass('hidden').attr('data-not-trusted-count', untrusted_count);\n            $warning_container.find('.device-encryption-warning-label').html(xabber.getString(\"settings_account__encryption_warning_text\", [untrusted_count]));\n        }\n        $container.find('.device-encryption .mdi-lock').removeClass('hidden');\n        context && context.updateHeight && context.updateHeight();\n        callback && callback();\n    },\n\n    renderOwnDevices: function (device_id, is_own) {\n        this.omemo.getMyDevices().then(() => {\n            this.device_id = device_id;\n            this.fingerprint = null;\n            if (is_own)\n                this.updateOwnFingerprint(device_id);\n            else{\n                this.updateOwnFingerprint(device_id);\n                this.updateFingerprints(device_id);\n            }\n        });\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateFingerprints: async function (device_id) {\n        let counter = 0,\n            dfd = new $.Deferred(),\n            $container = this.$('div.fingerprints-content .other-device-content'),\n            device = this.model.own_devices[device_id];\n        $container.html('');\n        dfd.done((is_error) => {\n            console.log(is_error);\n            this.$('.dropdown-button').dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                container: this.$('.fingerprints-content .other-device-content')[0],\n                alignment: 'left'\n            });\n        });\n        if (device.get('ik')) {\n            let options = {},\n                f = device.generateFingerprint(),\n                fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n            is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n            this.fingerprint = f;\n            $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n            dfd.resolve();\n        }\n        else {\n            this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                let $iq = $(iq),\n                    $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                    ik = $bundle.find(`ik`).text();\n                if (ik) {\n                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                    let options = {},\n                        f = device.generateFingerprint(),\n                        fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                        is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                    is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                    this.fingerprint = f;\n                    $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                }\n                dfd.resolve();\n            }, () => {\n                dfd.resolve(true);\n            });\n        }\n    },\n\n    updateOwnFingerprint: async function () {\n        this.$('.this-device-content').html(\"\");\n        let omemo = this.account.omemo;\n        if (omemo) {\n            let device = omemo.own_devices[omemo.get('device_id')];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    this.$('.this-device-content').html(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else if (device.get('ik')) {\n                    device.set('fingerprint', device.generateFingerprint());\n                    this.$('.this-device-content').html(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else {\n                    device.getBundle().then(({pk, spk, ik}) => {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let fingerprint = device.generateFingerprint();\n                        if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                            device.set('fingerprint', fingerprint);\n                        this.$('.this-device-content').html(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                    });\n                }\n            } else {\n                omemo.store.getIdentityKeyPair().then((ik) => {\n                    let pubKey = ik.pubKey;\n                    if (pubKey.byteLength == 33)\n                        pubKey = pubKey.slice(1);\n                    let fingerprint = Array.from(new Uint8Array(pubKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n                    this.$('.this-device-content').html(this.addRow(omemo.get('device_id'), this.account.settings.get('device_label_text'), null, fingerprint));\n                });\n            }\n\n        }\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                deferred.resolve();\n            }});\n        return deferred.promise();\n    },\n\n    trustDevice: function (ev) {\n        let $target = $(ev.target).closest('div.fingerprints-content'),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust');\n        $target.children('.buttons[data-trust]').attr('data-trust', 'trust');\n        this.omemo.updateFingerprints(this.jid, this.device_id, this.fingerprint, true);\n        let device = this.account.omemo.own_devices[this.device_id];\n        if (device && is_trusted != 'trusted') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', true);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    ignoreDevice: function (ev) {\n        let $target = $(ev.target).closest('div.fingerprints-content'),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust');\n        $target.children('.buttons[data-trust]').attr('data-trust', 'ignore');\n        this.omemo.updateFingerprints(this.jid, this.device_id, this.fingerprint, false);\n        let device = this.account.omemo.own_devices[this.device_id];\n        if (device && is_trusted != 'ignore') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', false);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    addRow: function (id, label, trust, fingerprint, options) {\n        options = options || {};\n        let edit_setting = id == this.omemo.get('device_id'),\n            old_fingerprint = options.old_fingerprint,\n            device_icons = [\n                'device-cellphone',\n                'device-console',\n                'device-desktop',\n                'device-tablet',\n                'device-web',\n            ],\n            error, svg_icon;\n        if (fingerprint.match(/.{1,4}/g))\n            fingerprint = fingerprint.match(/.{1,4}/g).join(\" \");\n        else {\n            fingerprint = '';\n            error = xabber.getString(\"omemo__dialog_fingerprints__invalid_fingerprint\");\n            let device = this.account.omemo.own_devices[id];\n            if (device && trust != 'ignore') {\n                trust = 'ignore';\n                this.omemo.updateFingerprints(this.jid, id, fingerprint, false);\n                device.set('trusted', false);\n                device.is_session_initiated = false;\n                device.preKeys = null;\n                this.account.trigger('trusting_updated');\n            }\n        }\n        old_fingerprint && (old_fingerprint = old_fingerprint.match(/.{1,4}/g).join(\" \"));\n        svg_icon = edit_setting ? 'device-web' : device_icons[Math.floor(Math.random()*device_icons.length)]\n        let $row = templates.fingerprint_devices_item({id,label,trust, svg_icon, fingerprint, edit_setting, old_fingerprint, error});\n        return $row;\n    },\n\n    deleteDevice: function (ev) {\n        let $target = $(ev.target).closest('div.fingerprints-content');\n        utils.dialogs.ask(xabber.getString(\"omemo__dialog_delete_device__header\"), xabber.getString(\"omemo__dialog_delete_device__text\", [this.device_id]), null, { ok_button_text: xabber.getString(\"omemo__dialog_delete_device__button_delete\")}).done((result) => {\n            if (result) {\n                delete this.model.own_devices[this.device_id];\n                let conn = this.account.getConnectionForIQ();\n                if (conn && conn.omemo) {\n                    delete conn.omemo.devices[this.device_id];\n                    conn.omemo.publishDevice(null, null, () => {\n                        this.account.trigger('trusting_updated');\n                        this.close();\n                    });\n                    conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, this.device_id);\n                }\n            }\n        });\n    },\n\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n        this.account.settings.once(\"change:color\", this.updateColorScheme, this);\n    },\n});\n\nxabber.Bundle = Backbone.Model.extend({\n    initialize: async function (attrs, options) {\n        this.preKeys = [];\n        this.model = options.model;\n        this.store = options.store;\n        if (this.model.get('identityKey'))\n            this.getIdentity();\n        else\n            await this.generateIdentity();\n       await this.getPreKeys();\n       if (this.model.get('resend_bundle')) {\n           this.model.publishBundle(this.model.get('device_attrs'));\n           this.model.set('resend_bundle', false);\n           this.model.set('device_attrs', null);\n       }\n    },\n\n    generateIdentity: function () {\n        return Promise.all([\n            KeyHelper.generateIdentityKeyPair(),\n            KeyHelper.generateRegistrationId(),\n        ]).then((result) => {\n            let identityKey = result[0],\n                registrationId = result[1];\n            this.store.put('identityKey', identityKey);\n            this.store.put('registrationId', registrationId);\n            this.model.account.trigger('update_omemo_devices');\n            this.cacheIdentity(identityKey, registrationId);\n        });\n    },\n\n    getIdentity: function () {\n        let identityKey = JSON.parse(this.model.get('identityKey')),\n            registrationId = this.model.get('registrationId'),\n            pubKey = utils.fromBase64toArrayBuffer(identityKey.pubKey),\n            privKey = utils.fromBase64toArrayBuffer(identityKey.privKey);\n        this.store.put('identityKey', {pubKey: pubKey, privKey: privKey});\n        this.store.put('registrationId', registrationId);\n    },\n\n    cacheIdentity: function (identityKey, registrationId) {\n        let pubKey = utils.ArrayBuffertoBase64(identityKey.pubKey),\n            privKey = utils.ArrayBuffertoBase64(identityKey.privKey);\n        this.model.save('identityKey', JSON.stringify({pubKey: pubKey, privKey: privKey}));\n        this.model.save('registrationId', registrationId);\n    },\n\n    generatePreKeys: async function () {\n        let preKeysPromises = [];\n        for (let i = 1; i <= constants.PREKEYS_COUNT; i++) {\n            preKeysPromises.push(this.generatePreKey(i));\n        }\n\n        preKeysPromises.push(this.generateSignedPreKey(1));\n\n        return await Promise.all(preKeysPromises);\n    },\n\n    getSignedPreKey: async function () {\n        let spk = this.model.get('signedPreKey');\n        if (spk) {\n            let pubKey = utils.fromBase64toArrayBuffer(spk.keyPair.pubKey),\n                privKey = utils.fromBase64toArrayBuffer(spk.keyPair.privKey),\n                signature = utils.fromBase64toArrayBuffer(spk.signature),\n                keyPair = {pubKey, privKey},\n                keyId = spk.keyId;\n            return {keyPair, keyId, signature};\n        }\n        else {\n            return await this.generateSignedPreKey(this.preKeys[0].keyId || 1);\n        }\n    },\n\n    getPreKeys: async function () {\n        let prekeys = this.model.prekeys.getAll();\n        if (Object.keys(prekeys).length >= constants.MIN_PREKEYS_COUNT) {\n            for (let p in prekeys) {\n                let pk = prekeys[p],\n                    id = pk.id,\n                    prekey = JSON.parse(pk.key),\n                    priv_pk = utils.fromBase64toArrayBuffer(prekey.privKey),\n                    pub_pk = utils.fromBase64toArrayBuffer(prekey.pubKey),\n                    key_pair = {pubKey: pub_pk, privKey: priv_pk};\n                this.preKeys.push({keyId: id, keyPair: key_pair});\n                this.store.storePreKey(id, key_pair);\n            }\n            this.getUsedPreKeys();\n            let spk = await this.getSignedPreKey();\n            this.preKeys.push(spk);\n            this.store.storeSignedPreKey(spk.keyId, spk.keyPair);\n        }\n        else {\n            await this.generatePreKeys().then((prekeys) => {\n                this.preKeys = prekeys;\n                this.getUsedPreKeys();\n            });\n        }\n    },\n\n    getUsedPreKeys: function () {\n        let prekeys = this.model.own_used_prekeys.getAll();\n        if (Object.keys(prekeys).length) {\n            for (let p in prekeys) {\n                let pk = prekeys[p],\n                    id = pk.id,\n                    prekey = JSON.parse(pk.key),\n                    privKey = utils.fromBase64toArrayBuffer(prekey.privKey),\n                    pubKey = utils.fromBase64toArrayBuffer(prekey.pubKey);\n                this.store.storePreKey(id, {pubKey, privKey});\n            }\n        }\n    },\n\n    generatePreKey: async function (id) {\n        let preKey = await KeyHelper.generatePreKey(id);\n        this.store.storePreKey(id, preKey.keyPair);\n\n        return preKey;\n    },\n\n    generateSignedPreKey: async function (id) {\n        let identity = await this.store.getIdentityKeyPair();\n        let signedPreKey = await KeyHelper.generateSignedPreKey(identity, id);\n\n        this.store.storeSignedPreKey(id, signedPreKey.keyPair);\n        this.cacheSignedPreKey(signedPreKey);\n\n        return signedPreKey;\n    },\n\n    cacheSignedPreKey: function (spk) {\n        let pubKey = utils.ArrayBuffertoBase64(spk.keyPair.pubKey),\n            privKey = utils.ArrayBuffertoBase64(spk.keyPair.privKey),\n            signature = utils.ArrayBuffertoBase64(spk.signature),\n            keyPair = {pubKey, privKey},\n            keyId = spk.keyId,\n            converted_spk = {keyPair, keyId, signature};\n        this.model.save('signedPreKey', converted_spk);\n    }\n\n});\n\nxabber.Prekeys = Backbone.Model.extend({\n    initialize: function (options) {\n        this.name = options.name;\n        this.model = options.model;\n    },\n\n    get: function (id) {\n        let prekeys = _.clone(this.model.get(this.name));\n        return prekeys[id];\n    },\n\n    put: function (prekey) {\n        if (!prekey.id)\n            return;\n        let prekeys = _.clone(this.model.get(this.name));\n        prekeys[prekey.id] = prekey;\n        this.model.save(this.name, prekeys);\n    },\n\n    getAll: function () {\n        let prekeys = _.clone(this.model.get(this.name));\n        return prekeys;\n    },\n\n    remove: function (id) {\n        if (!id)\n            return;\n        let prekeys = _.clone(this.model.get(this.name));\n        delete prekeys[id];\n        this.model.save(this.name, prekeys);\n    }\n});\n\nxabber.Device = Backbone.Model.extend({\n    initialize: function (attrs, options) {\n        this.account = options.account;\n        this.id = attrs.id;\n        this.jid = attrs.jid;\n        this.store = options.store;\n        this.preKeys = null;\n        this.address = new SignalProtocolAddress(attrs.jid, attrs.id);\n    },\n\n    generateFingerprint: function () {\n        let identityKey = this.get('ik');\n        if (!identityKey)\n            return;\n        if (identityKey.byteLength == 33)\n            identityKey = identityKey.slice(1);\n        return Array.from(new Uint8Array(identityKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n    },\n\n    closeSession: function (reason) {\n        this.account.getConnectionForIQ().omemo.sendOptOut({\n            to: this.jid,\n            reason: reason\n        }, () => {});\n    },\n\n    getBundle: async function () {\n        if (!this._pending_bundle) {\n            this._pending_bundle = true;\n            this._dfd_bundle = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: this.jid, id: this.id}, (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${this.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        $spk = $bundle.find('spk'),\n                        spk = {id: $spk.attr('id'), key: $spk.text(), signature: $bundle.find('spks').text()},\n                        ik = $bundle.find(`ik`).text();\n                    this.preKeys = [];\n                    if (!ik)\n                        this.set('ik', null);\n                    $bundle.find('prekeys pk').each((i, pk) => {\n                        let $pk = $(pk);\n                        this.preKeys.push({id: $pk.attr('id'), key: $pk.text()});\n                    });\n                    this._pending_bundle = false;\n                    let pk = this.getRandomPreKey();\n                    if (!pk) {\n                        this._dfd_bundle.reject();\n                        reject();\n                    }\n                    else {\n                        this._dfd_bundle.resolve({pk, spk, ik});\n                        resolve({pk, spk, ik});\n                    }\n                }, () => {\n                    this.set('ik', null);\n                    this.preKeys = [];\n                    this._dfd_bundle.reject();\n                    this._pending_bundle = false;\n                    reject();\n                });\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_bundle.done(({pk, spk, ik}) => {\n                    resolve({pk, spk, ik});\n                });\n                this._dfd_bundle.fail(() => {\n                    reject();\n                });\n            });\n        }\n    },\n\n    getRandomPreKey: function () {\n        let min = 0,\n            max = this.preKeys.length - 1,\n            i = Math.floor(min + Math.random() * (max + 1 - min));\n        return this.preKeys[i];\n    },\n\n    decrypt: async function (cipherText, preKey) {\n        try {\n            let sessionCipher = new SessionCipher(this.store, this.address), plainText;\n\n            if (preKey){\n                plainText = await sessionCipher.decryptPreKeyWhisperMessage(cipherText, 'binary');\n            }\n            else {\n                if (!this.store.hasSession(this.address.toString())) {\n                    let session = this.getCachedSession();\n                    if (session)\n                        await this.store.storeSession(this.address.toString(), session);\n                }\n                plainText = await sessionCipher.decryptWhisperMessage(cipherText, 'binary');\n            }\n\n            return plainText;\n        }\n        catch (e) {\n            throw e;\n        }\n    },\n\n    getPreKey: function () {\n        let pk = this.account.omemo.used_prekeys.get(String(this.id));\n        return pk;\n    },\n\n    getCachedSession: function () {\n        return this.account.omemo.getSession('session' + this.address.toString());\n    },\n\n    encrypt: async function (plainText) {\n        try {\n            if (this.get('trusted') === false && (this.id != this.account.omemo.get('device_id')))\n                return null;\n            if (!this.store.hasSession(this.address.toString()) || !this.is_session_initiated) { // this.preKeys ??\n                if (this.preKeys && !this.preKeys.length)\n                    return null;\n                this.is_session_initiated = true;\n                let s = await this.initSession();\n                if (!s)\n                    return null;\n            }\n\n            let session = this.getSession(),\n                ciphertext = await session.encrypt(plainText);\n\n            return {\n                preKey: ciphertext.type === 3,\n                ciphertext: ciphertext,\n                deviceId: this.address.getDeviceId()\n            };\n        } catch (e) {\n            console.log('Error:', e);\n            console.warn('Could not encrypt data for device with id ' + this.address.getDeviceId());\n\n            return null;\n        }\n    },\n\n    initSession: async function () {\n        let {pk, spk, ik} = await this.getBundle(),\n            cached_pk = this.getPreKey(),\n            id = this.id;\n        if (cached_pk) {\n            if (!spk || spk && JSON.stringify(spk) == JSON.stringify(cached_pk.spk) && JSON.stringify(ik) == JSON.stringify(cached_pk.ik))\n                pk = cached_pk.pk;\n            else\n                this.account.omemo.used_prekeys.put({id, pk, spk, ik});\n        }\n        else\n            this.account.omemo.used_prekeys.put({id, pk, spk, ik});\n        this.set({'pk': utils.fromBase64toArrayBuffer(pk.key), 'ik': utils.fromBase64toArrayBuffer(ik)});\n        this.fingerprint = this.generateFingerprint();\n        let trusted = this.account.omemo.isTrusted(this.jid, id, this.fingerprint);\n        this.set('trusted', trusted);\n        if ((this.id != this.account.omemo.get('device_id')) && trusted === false)\n            return false;\n        this.processPreKey({\n            registrationId: Number(id),\n            identityKey: utils.fromBase64toArrayBuffer(ik),\n            signedPreKey: {\n                keyId: Number(spk.id),\n                publicKey: utils.fromBase64toArrayBuffer(spk.key),\n                signature: utils.fromBase64toArrayBuffer(spk.signature)\n            },\n            preKey: {\n                keyId: Number(pk.id),\n                publicKey: utils.fromBase64toArrayBuffer(pk.key)\n            }\n        });\n        return true;\n    },\n\n    processPreKey: function (preKeyBundle) {\n        this.session = new SessionBuilder(this.store, this.address);\n        return this.session.processPreKey(preKeyBundle);\n    },\n\n    removeSession: function () {\n        this.store.removeSession(this.address.toString());\n        this.sessionCipher = null;\n    },\n\n    getSession: function () {\n        if (!this.sessionCipher) {\n            this.sessionCipher = new SessionCipher(this.store, this.address);\n        }\n        return this.sessionCipher;\n    }\n});\n\nxabber.Omemo = Backbone.ModelWithStorage.extend({\n    defaults: {\n        sessions: {},\n        fingerprints: {},\n        prekeys: {},\n        retract_version: 0,\n        used_prekeys: {},\n        own_used_prekeys: {},\n        device_id: \"\"\n    },\n\n    _initialize: function (attrs, options) {\n        this.on(\"change:device_id\", this.onDeviceIdUpdated, this);\n        this.on(\"destroy\", this.onOmemoDestroyed, this);\n        this.own_devices = {};\n        this.account = options.account;\n        this.peers = new xabber.Peers();\n        if (!this.get('device_id'))\n            this.set('device_id', this.generateDeviceId());\n        this.store = new xabber.SignalProtocolStore();\n        this.account.on(\"devices_updated\", this.onOwnDevicesUpdated, this);\n        this.store.on('prekey_removed', this.removePreKey, this);\n        this.store.on('session_stored', this.cacheSession, this);\n    },\n\n    storeSessions: function () {\n        let sessions = this.get('sessions');\n        for (let session_id in sessions) {\n            let session = sessions[session_id];\n            session && this.store.put(session_id, session);\n        }\n    },\n\n    onOmemoDestroyed: function () {\n        if (this.own_devices && Object.keys(this.own_devices).length != 0)\n            this.deleteOwnDevice();\n        this.cached_messages && this.cached_messages.destroy();\n        this.account.connection.deleteHandler(this._msg_handler);\n    },\n\n    deleteOwnDevice: function () {\n        let device_id = this.get('device_id');\n        delete this.own_devices[device_id];\n        let conn = this.account.getConnectionForIQ();\n        if (conn && conn.omemo) {\n            delete conn.omemo.devices[device_id];\n            conn.omemo.publishDevice(null, null, () => {});\n            conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n        }\n    },\n\n    onConnected: function () {\n        this.prekeys = new xabber.Prekeys({name: 'prekeys', model: this});\n        this.used_prekeys = new xabber.Prekeys({name: 'used_prekeys', model: this});\n        this.own_used_prekeys = new xabber.Prekeys({name: 'own_used_prekeys', model: this});\n        this.cached_messages = new xabber.DecryptedMessages({id: 'decrypted-messages'}, {\n            account: this.account,\n            storage_name: xabber.getStorageName() + '-decrypted-messages-' + this.account.get('jid'),\n            fetch: 'before'\n        });\n        this.bundle = new xabber.Bundle(null, {store: this.store, model: this});\n        this.connection = this.account.connection;\n        this.registerMessageHandler();\n        this.addDevice();\n    },\n\n    getMyDevices: async function () {\n        if (!this._pending_own_devices) {\n            this._pending_own_devices = true;\n            this._dfd_own_devices = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                let conn = this.account.getConnectionForIQ();\n                if (conn) {\n                    if (conn.omemo) {\n                        conn.omemo.getDevicesNode(null, (cb) => {\n                            conn.omemo.devices = conn.omemo.parseUserDevices($(cb));\n                            this._pending_own_devices = false;\n                            this._dfd_own_devices.resolve();\n                            resolve();\n                        }, function () {\n                            this._pending_own_devices = false;\n                            this._dfd_own_devices.resolve();\n                            resolve();\n                        });\n                    } else\n                        this._pending_own_devices = false;\n                } else\n                    this._pending_own_devices = false;\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_own_devices.done(() => {\n                    resolve();\n                });\n            });\n        }\n    },\n\n    updateFingerprints: function (contact, device_id, fingerprint, trusted) {\n        let fingerprints = _.clone(this.get('fingerprints'));\n        if (!fingerprints[contact])\n            fingerprints[contact] = {};\n        let contact_fingerprints = fingerprints[contact];\n        if (_.isArray(contact_fingerprints))\n            contact_fingerprints = {};\n        contact_fingerprints[device_id] = {fingerprint, trusted};\n        fingerprints[contact] = contact_fingerprints;\n        this.save('fingerprints', fingerprints);\n    },\n\n    isTrusted: function (jid, device_id, fingerprint) {\n        let fingerprints = _.clone(this.get('fingerprints'));\n        if (!fingerprints[jid])\n            return;\n        if (!fingerprints[jid][device_id])\n            return;\n        let fing = fingerprints[jid][device_id];\n        if (fing) {\n            if (fing.fingerprint == fingerprint) {\n                if (fing.trusted === undefined)\n                    return;\n                else\n                    return fing.trusted;\n            }\n            else\n                return null;\n        }\n    },\n\n    cacheRetractVersion: function (version) {\n        console.log('version ' + version)\n        this.save('retract_version', version);\n    },\n\n    getRetractVersion: function () {\n        return this.get('retract_version');\n    },\n\n    addDevice: function () {\n        let device_id = this.get('device_id');\n        if (this.connection) {\n            let omemo = this.account.getConnectionForIQ().omemo;\n            if (Object.keys(omemo.devices).length) {\n                let device = omemo.devices[device_id];\n                if (!device) {\n                    let label = this.account.settings.get('device_label_text') || `PC, ${utils.getOS()}, ${env.utils.getBrowser()}`;\n                    this.publishBundle({device_id: device_id, label: label, omemo: omemo});\n                }\n                else {\n                    this.publishBundle();\n                }\n            }\n            else\n                omemo.getDevicesNode(null, (cb) => {\n                    this.account.getConnectionForIQ().omemo.devices = omemo.parseUserDevices($(cb));\n                    for (let dev_id in this.account.getConnectionForIQ().omemo.devices) {\n                        if (!this.own_devices[dev_id])\n                            this.own_devices[dev_id] = new xabber.Device({jid: this.account.get('jid'), id: dev_id}, { account: this.account, store: this.store});\n                    }\n                    let device = omemo.devices[device_id];\n                    if (!device) {\n                        let label = this.account.settings.get('device_label_text') || `PC, ${utils.getOS()}, ${env.utils.getBrowser()}`;\n                        this.publishBundle({device_id: device_id, label: label, omemo: omemo});\n                    }\n                    else {\n                        this.publishBundle();\n                    }\n                });\n        }\n    },\n\n    onDeviceIdUpdated: function () {\n        this.save('device_id', this.get('device_id'));\n    },\n\n    generateDeviceId: function () {\n        if (this.account.get('x_token') && this.account.get('x_token').token_uid && this.account.get('x_token').token_uid.length >= 8 && Number(this.account.get('x_token').token_uid.slice(0,8)))\n            return Number(this.account.get('x_token').token_uid.slice(0,8));\n        let min = 1,\n            max = Math.pow(2, 31) - 1,\n            rand = min + Math.random() * (max + 1 - min);\n        return Math.floor(rand);\n    },\n\n    updateMessage: function (attrs, contact) {\n        if (!this.cached_messages)\n            return;\n        this.cached_messages.updateMessage(attrs, contact);\n    },\n\n    registerMessageHandler: function () {\n        this.account.connection.deleteHandler(this._msg_handler);\n        this._msg_handler = this.account.connection.addHandler((message) => {\n            this.receiveMessage(message);\n            return true;\n        }, null, 'message', null, null, null, {'encrypted': true});\n    },\n\n    encrypt: function (contact, message) {\n        let peer = this.getPeer(contact.get('jid')),\n            $msg = $(message.tree()),\n            origin_id = $msg.children('origin-id').attr('id'),\n            plaintext = Strophe.serialize($msg.children('envelope')[0]) || \"\";\n\n        origin_id && this.cached_messages.putMessage(contact, origin_id, {envelope: plaintext});\n\n        return peer.encrypt(plaintext).then((encryptedMessage) => {\n\n            let encryptedElement = $build('encrypted', {xmlns: Strophe.NS.OMEMO})\n                .c('header', {\n                    sid: this.get('device_id'),\n                    label: this.account.settings.get('device_label_text')\n                }),\n                myKeys = $build('keys', {jid: this.account.get('jid')});\n\n            encryptedElement.c('keys', { jid: contact.get('jid')});\n\n            for (let key of encryptedMessage.keys) {\n                let attrs = {\n                    rid: key.deviceId,\n                    kex: undefined\n                };\n                if (key.preKey) {\n                    attrs.kex = true;\n                }\n\n                if (peer.devices[key.deviceId])\n                    encryptedElement.c('key', attrs).t(btoa(key.ciphertext.body)).up();\n                else\n                    myKeys.c('key', attrs).t(btoa(key.ciphertext.body)).up();\n\n            }\n            encryptedElement.up().cnode(myKeys.tree());\n\n            encryptedElement.up().up()\n                .c('payload').t(utils.ArrayBuffertoBase64(encryptedMessage.payload));\n\n            $(message.tree()).find('envelope').remove();\n\n            message.cnode(encryptedElement.tree());\n            message.up().c('encryption', {\n                xmlns: Strophe.NS.EXPLICIT_MESSAGE_ENCRYPTION,\n                namespace: Strophe.NS.OMEMO\n            });\n            message.up().c('store', {\n                xmlns: 'urn:xmpp:hints'\n            }).up()\n                .c('body').t('This message is encrypted using OMEMO end-to-end encryption.').up();\n\n            return {message: message, is_trusted: encryptedMessage.is_trusted};\n        }).catch((msg) => {\n        });\n    },\n\n    hasChanges: function (o1, o2) {\n        let obj1 = _.clone(o1), obj2 = _.clone(o2);\n        for (let d in obj1) {\n            delete obj2[d];\n        }\n        for (let d in obj2) {\n            delete obj1[d];\n        }\n        return Object.keys(obj1).length || Object.keys(obj2).length;\n    },\n\n    receiveHeadlineMessage: function (message) {\n        if (!this.account.omemo || (this.account.omemo && this.cid != this.account.omemo.cid))\n            return;\n        let $message = $(message),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            node = $message.find('items').attr('node');\n        if ($message.find('event[xmlns=\"' + Strophe.NS.PUBSUB + '#event\"]').length) {\n            if (node == `${Strophe.NS.OMEMO}:devices`) {\n                let devices = this.account.getConnectionForIQ().omemo.parseUserDevices($message);\n                if (from_jid === this.account.get('jid')) {\n                    let has_devices = this.own_devices && Object.keys(this.own_devices).length,\n                        has_changes = this.hasChanges(this.own_devices, devices);\n                    this.account.getConnectionForIQ().omemo.devices = devices;\n                    let device_id = this.get('device_id'),\n                        device = this.account.getConnectionForIQ().omemo.devices[device_id];\n                    if (has_changes) {\n                        this.account.trigger(\"devices_updated\");\n                    }\n                    if (has_devices && has_changes) {\n                        this.account.trigger('trusting_updated');\n                    }\n                }\n                else {\n                    let peer = this.getPeer(from_jid),\n                        has_devices = peer.devices && Object.keys(peer.devices).length,\n                        has_changes = this.hasChanges(peer.devices, devices);\n                    peer.updateDevices(devices);\n                    if (has_changes) {\n                        this.account.trigger('trusting_updated');\n                    }\n                }\n                return;\n            }\n            if (node == `${Strophe.NS.OMEMO}:bundles`) {\n                let $item = $message.find('items item').first(),\n                    device_id = $item.attr('id'),\n                    $bundle = $item.children(`bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`), device;\n                if (from_jid === this.account.get('jid')) {\n                    let devices = this.account.getConnectionForIQ().omemo.devices\n                    if (devices && devices[device_id]) {\n                        if (!this.own_devices[device_id])\n                            this.own_devices[device_id] = new xabber.Device({jid: this.account.get('jid'), id: device_id}, { account: this.account, store: this.store});\n                        device = this.own_devices[device_id];\n                    }\n                } else {\n                    let peer = this.peers.get(from_jid);\n                    if (peer) {\n                        device = peer.devices[device_id];\n                    }\n                }\n                if (device) {\n                    let ik = $bundle.find(`ik`).text(),\n                        device_ik = device.get(`ik`), preKeys = [];\n                    if (!ik) {\n                        device.set('ik', null);\n                        return;\n                    }\n                    $bundle.find('prekeys pk').each((i, pk) => {\n                        let $pk = $(pk);\n                        preKeys.push({id: $pk.attr('id'), key: $pk.text()});\n                    });\n                    device.preKeys = preKeys;\n                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                    device.set('fingerprint', device.generateFingerprint());\n                    device_ik && (device_ik = utils.ArrayBuffertoBase64(device_ik));\n                    if (!_.isUndefined(device_ik) && device_ik != ik)\n                        this.account.trigger('trusting_updated');\n                }\n            }\n        }\n    },\n\n    receiveChatMessage: function (message, options, deferred) {\n        options = options || {};\n        let $message = $(message);\n        if ($message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length) {\n            if ($message.find('result[xmlns=\"' + Strophe.NS.MAM + '\"]').length)\n                _.extend(options, {\n                    is_mam: true,\n                    is_archived: true\n                });\n            if ($message.find('[xmlns=\"' + Strophe.NS.CARBONS + '\"]').length)\n                options.carbon_copied = true;\n\n            let $msg = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).parent(),\n                jid = (Strophe.getBareJidFromJid($msg.attr('from')) === this.account.get('jid') ? Strophe.getBareJidFromJid($msg.attr('to')) : Strophe.getBareJidFromJid($msg.attr('from'))) || options.from_jid,\n                contact = this.account.contacts.get(options.conversation ? options.conversation : jid),\n                stanza_id = $msg.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n                cached_msg = stanza_id && this.cached_messages && this.cached_messages.getMessage(contact, stanza_id);\n\n            if (Strophe.getBareJidFromJid($msg.attr('from')) != this.account.get('jid') && options.carbon_copied && options.carbon_direction && options.carbon_direction === 'sent')\n                return;\n\n            let device_id = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"] header`).attr('sid');\n            options.device_id = device_id;\n            if (cached_msg && cached_msg.ephemeral_removed)\n                return;\n\n            if (cached_msg && cached_msg.envelope) {\n                if (!options.replaced) {\n                    options.encrypted = true;\n                    this.getTrusted($message).then((is_trusted) => {\n                        options.is_trusted = is_trusted;\n                        $message.find('body').remove();\n                        $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(cached_msg.envelope);\n                        if ($message.find('displayed-time').length){\n                            options.displayed_time = $message.find('displayed-time').attr('stamp');\n                        }\n                        if (options.gallery && deferred)\n                            deferred.resolve($message, options);\n\n                        if (!options.not_verified_device){\n                            let peer = this.getPeer(contact.get('jid')),\n                                device = peer.devices[device_id];\n                            if (device && device.get('fingerprint')) {\n                                let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                                if (_.isUndefined(trusted)){\n                                    options.not_verified_device = device_id;\n                                    options.not_verified_device_no_device = false;\n                                }\n                            } else if (Strophe.getBareJidFromJid($msg.attr('from')) != this.account.get('jid')){\n                                options.not_verified_device = device_id;\n                                options.not_verified_device_no_device = true;\n                            }\n                        }\n                        this.account.chats.receiveChatMessage($message[0], options);\n                    });\n                    return;\n                }\n                else if (options.replaced && $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"] header`).attr('sid') == this.get('device_id')) {\n                    options.encrypted = true;\n                    $message.find('body').remove();\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(cached_msg);\n                    let chat = this.account.chats.getChat(contact, 'encrypted');\n                    chat && chat.messages.createFromStanza($message, options);\n                    let msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id);\n                    if (msg_item) {\n                        msg_item.set('last_replace_time', $message.find('replaced').attr('stamp'));\n                        chat && chat.item_view.updateLastMessage(chat.last_message);\n                    }\n                    return;\n                }\n            }\n\n            if (options.replaced) {\n                this.decrypt(message.children('replace').children('message'), options).then((decrypted_msg) => {\n                    if (decrypted_msg) {\n                        options.encrypted = true;\n                        stanza_id && this.cached_messages.putMessage(contact, stanza_id, {envelope: decrypted_msg});\n                        $message.find('body').remove();\n                        $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(decrypted_msg);\n                        let chat = this.account.chats.getChat(contact, 'encrypted');\n                        chat && chat.messages.createFromStanza($message, options);\n                        let msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id);\n                        if (msg_item) {\n                            msg_item.set('last_replace_time', $message.find('replaced').attr('stamp'));\n                            chat && chat.item_view.updateLastMessage(chat.last_message);\n                        }\n                    }\n                });\n            } else {\n                this.getTrusted($message).then((is_trusted) => {\n                    options.is_trusted = is_trusted;\n                    return this.decrypt(message);\n                }).then((decrypted_msg) => {\n                    if (decrypted_msg) {\n                        options.encrypted = true;\n                        stanza_id && this.cached_messages.putMessage(contact, stanza_id, {envelope: decrypted_msg});\n                        $message.find('body').remove();\n                    }\n                    else {\n                        if (decrypted_msg === null) {\n                            this.account.chats.getChat(contact, 'encrypted').item_view.updateLastMessage();\n                            return;\n                        }\n                        options.not_encrypted = true;\n                        delete options.is_trusted;\n                    }\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(decrypted_msg);\n                    if (options.gallery && decrypted_msg && deferred)\n                        deferred.resolve($message, options);\n                    else if (options.gallery && deferred)\n                        deferred.reject();\n\n                    if (!options.not_verified_device){\n                        let peer = this.getPeer(contact.get('jid')),\n                            device = peer.devices[device_id];\n                        if (device && device.get('fingerprint')) {\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (_.isUndefined(trusted)){\n                                options.not_verified_device = device_id;\n                                options.not_verified_device_no_device = false;\n                            }\n                        } else if (Strophe.getBareJidFromJid($msg.attr('from')) != this.account.get('jid')){\n                            options.not_verified_device = device_id;\n                            options.not_verified_device_no_device = true;\n                        }\n                    }\n                    this.account.chats.receiveChatMessage($message[0], options);\n                }).catch((e) => {\n                    if (e.name === 'MessageCounterError')//for capturing double decryption of same message\n                        return;\n                    if (options.synced_msg && !options.decryption_retry) {\n                        this.receiveChatMessage($message[0], _.extend(options, {decryption_retry: true}));\n                        return;\n                    }\n                    options.not_encrypted = true;\n                    delete options.is_trusted;\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).remove();\n                    if (options.gallery && deferred)\n                        deferred.reject();\n                    this.account.chats.receiveChatMessage($message[0], options);\n                });\n            }\n            if (options.gallery && deferred)\n                deferred.reject();\n        }\n        if (options.gallery && deferred)\n            deferred.reject();\n    },\n\n    checkOwnFingerprints: async function () {\n        return new Promise((resolve, reject) => {\n            let is_trusted = true,\n                dfd = new $.Deferred(), counter = 0;\n            dfd.done((t) => {\n                let trust = t === null ? 'error' : (t === undefined ? 'none' : t);\n                resolve(trust);\n            });\n            if (Object.keys(this.own_devices).length) {\n                counter = Object.keys(this.own_devices).length;\n                for (let device_id in this.own_devices) {\n                    let device = this.own_devices[device_id];\n                    if (device_id == this.get('device_id')) {\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                        continue;\n                    }\n                    if (device.get('fingerprint')) {\n                        let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else if (device.get('ik')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null)\n                                is_trusted = undefined;\n                            if (trusted === null)\n                                is_trusted = null;\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        });\n                    }\n                }\n            }\n            else {\n                this.getMyDevices().then(() => {\n                    this.onOwnDevicesUpdated().then(() => {\n                        counter = Object.keys(this.own_devices).length;\n                        for (let device_id in this.own_devices) {\n                            if (device_id == this.get('device_id')) {\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                                continue;\n                            }\n                            let device = this.own_devices[device_id];\n                            if (device.get('fingerprint')) {\n                                let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                                if (trusted === undefined && is_trusted !== null)\n                                    is_trusted = undefined;\n                                if (trusted === null)\n                                    is_trusted = null;\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                            } else {\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                            }\n                        }\n                    });\n                });\n            }\n        });\n    },\n\n    checkContactFingerprints: function (contact) {\n        return new Promise((resolve, reject) => {\n            let is_trusted = true,\n                peer = this.getPeer(contact.get('jid')),\n                dfd = new $.Deferred(), counter = 0, unverified_counter = 0;\n            dfd.done((t) => {\n                let trust = t === null ? 'error' : (t === undefined ? 'none' : t);\n                contact.trigger('update_trusted', trust, peer);\n                resolve({trust: trust, unverified_counter: unverified_counter});\n            });\n            if (Object.keys(peer.devices).length) {\n                counter = Object.keys(peer.devices).length;\n                for (let device_id in peer.devices) {\n                    let device = peer.devices[device_id];\n                    if (device.get('fingerprint')) {\n                        let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null){\n                            is_trusted = undefined;\n                            unverified_counter++;\n                        }\n                        if (trusted === null){\n                            is_trusted = null;\n                            unverified_counter++;\n                        }\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else if (device.get('ik')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null){\n                            is_trusted = undefined;\n                            unverified_counter++;\n                        }\n                        if (trusted === null){\n                            is_trusted = null;\n                            unverified_counter++;\n                        }\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                dfd.resolve(is_trusted);\n                            }\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null){\n                                is_trusted = undefined;\n                                unverified_counter++;\n                            }\n                            if (trusted === null){\n                                is_trusted = null;\n                                unverified_counter++;\n                            }\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                dfd.resolve(is_trusted);\n                            }\n                        });\n                    }\n                }\n            } else {\n                peer.getDevicesNode().then(() => {\n                    counter = Object.keys(peer.devices).length;\n                    !counter && dfd.resolve('nil');\n                    for (let device_id in peer.devices) {\n                        let device = peer.devices[device_id];\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null){\n                                is_trusted = undefined;\n                                unverified_counter++;\n                            }\n                            if (trusted === null) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                else{\n                                    is_trusted = null;\n                                    unverified_counter++;\n                                }\n                            }\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                dfd.resolve(is_trusted);\n                            }\n                        });\n                    }\n                });\n\n            }\n        });\n    },\n\n    getTrusted: async function ($message) {\n        let $msg = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).parent(),\n            from_jid = Strophe.getBareJidFromJid($msg.attr('from')),\n            to_jid = Strophe.getBareJidFromJid($msg.attr('to')),\n            contact = this.account.contacts.mergeContact(from_jid === this.account.get('jid') ? to_jid : from_jid);\n\n        let own_trusted = await this.checkOwnFingerprints(),\n            contact_trusted = await this.checkContactFingerprints(contact);\n        contact_trusted = contact_trusted.trust;\n        if (own_trusted === 'error' || (own_trusted === 'none' && contact_trusted !== 'error')) {\n            return own_trusted;\n        } else if (contact_trusted === 'error' || contact_trusted === 'none') {\n            return contact_trusted;\n        } else {\n            let device_id = $message.find('encrypted header').attr('sid'),\n                peer = this.getPeer(contact.get('jid')),\n                device = peer.devices[device_id];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                    if (trusted === false) {\n                        return 'untrusted';\n                    }\n                }\n            }\n            return true;\n        }\n    },\n\n    receiveMessage: function (message) {\n        let $message = $(message),\n            type = $message.attr('type');\n        if (type === 'headline') {\n            return this.receiveHeadlineMessage(message);\n        }\n    },\n\n    parseEncrypted: function ($encrypted) {\n        let $payload = $encrypted.children(`payload`),\n            $header = $encrypted.children('header'),\n            payload = utils.fromBase64toArrayBuffer($payload.text()),\n            sid = Number($header.attr('sid'));\n\n        let keys = $header.find(`key`).get().map(function(keyElement) {\n            return {\n                preKey: $(keyElement).attr('kex') === 'true' || $(keyElement).attr('kex') === '1',\n                ciphertext: utils.fromBase64toArrayBuffer($(keyElement).text()),\n                deviceId: parseInt($(keyElement).attr('rid'))\n            };\n        });\n\n        return {sid, keys, payload};\n    },\n\n    getPeer: function (jid) {\n        if (!this.peers.get(jid))\n            this.peers.create({jid}, {account:this.account});\n        return this.peers.get(jid);\n    },\n\n    decrypt: async function (message, options) {\n        let $message = $(message),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')) || options.from_jid,\n            $encrypted;\n\n        if ($message.find('result[xmlns=\"'+Strophe.NS.MAM+'\"]').length) {\n            let $m = $message.find('message').first();\n            from_jid = Strophe.getBareJidFromJid($m.attr('from'));\n            $encrypted = $message.children(`result`).children(`forwarded`).children(`message`).children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n        }\n        else if ($message.find('[xmlns=\"'+Strophe.NS.CARBONS+'\"]').length){\n            $encrypted = $message.children(`[xmlns=\"${Strophe.NS.CARBONS}\"]`).children(`forwarded`).children(`message`).children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n        }\n        else\n            $encrypted = $message.children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n\n        let encryptedData = this.parseEncrypted($encrypted),\n            deviceId = this.get('device_id'),\n            ownPreKeysArr =  encryptedData.keys.filter(preKey => preKey.deviceId == deviceId),\n            ownPreKey = ownPreKeysArr[0];\n        if (!ownPreKey)\n            return null;\n        let peer = this.getPeer(from_jid),\n            exportedKey;\n        try {\n            exportedKey = await peer.decrypt(encryptedData.sid, ownPreKey.ciphertext, ownPreKey.preKey);\n        }\n        catch (e) {\n            throw e;\n        }\n        if (!exportedKey)\n            return;\n        let exportedMasterKey = exportedKey.slice(0, 32),\n            HMACData = exportedKey.slice(32);\n\n        return utils.AES.decrypt(exportedMasterKey, HMACData, encryptedData.payload);\n    },\n\n    toBase64: function (arrayBuffer) {\n        return btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n    },\n\n    publish: function (spk, ik, pks, callback) {\n        if (!this.account.connection)\n            return;\n        let conn_omemo = this.account.getConnectionForIQ().omemo,\n            prekeys = [];\n        pks.forEach((pk) => {\n            let id = pk.keyId,\n                pubKey = utils.ArrayBuffertoBase64(pk.keyPair.pubKey),\n                privKey = utils.ArrayBuffertoBase64(pk.keyPair.privKey),\n                key = JSON.stringify({pubKey, privKey});\n            if (!pk.signature) {\n                prekeys.push({id: id, key: pubKey});\n                this.prekeys.put({id, key});\n            }\n        });\n        conn_omemo.configNode(() => {\n            conn_omemo.publishBundle({\n                spk: {id: spk.keyId, key: utils.ArrayBuffertoBase64(spk.keyPair.pubKey)},\n                spks: utils.ArrayBuffertoBase64(spk.signature),\n                ik:  utils.ArrayBuffertoBase64(ik),\n                pks: prekeys,\n                device_id: this.get('device_id')\n            }, callback);\n        });\n    },\n\n    removePreKey: async function (id) {\n        if (!this.account)\n            return;\n        let bundle = this.bundle,\n            removed_pk = this.bundle.preKeys.find(p => p && p.keyId === id && !p.signature);\n        if (!removed_pk)\n            return;\n        let pubKey = utils.ArrayBuffertoBase64(removed_pk.keyPair.pubKey),\n            privKey = utils.ArrayBuffertoBase64(removed_pk.keyPair.privKey),\n            key = JSON.stringify({pubKey, privKey}),\n            idx = this.bundle.preKeys.indexOf(removed_pk);\n        bundle.preKeys.splice(idx, 1);\n        this.own_used_prekeys.put({id, key});\n        this.prekeys.remove(id);\n\n        let prekeys_id_list = Object.keys(this.prekeys.getAll()),\n            prekeys_length = prekeys_id_list.length;\n\n        if (prekeys_length && prekeys_length < constants.MIN_PREKEYS_COUNT) {\n            let missing_keys = constants.PREKEYS_COUNT - prekeys_length,\n                last_id,\n                counter = 0,\n                used_last_id = 0;\n\n            last_id = Number(prekeys_id_list[prekeys_length - 1]);\n            if (last_id === NaN)\n                xabber.error('last_id is NaN!')\n\n            if (!_.isEmpty(this.own_used_prekeys.getAll())){\n                let used_prekeys_id_list = Object.keys(this.own_used_prekeys.getAll());\n\n                used_last_id = used_prekeys_id_list[used_prekeys_id_list.length - 1];\n                used_last_id = Number(used_last_id);\n\n                if (used_last_id && (used_last_id > last_id)){\n                    last_id = used_last_id;\n                }\n            }\n            for (let i = ++last_id; i < (last_id + missing_keys); i++){\n                xabber.error(i);\n                await this.bundle.generatePreKey(i).then((prekey) => {\n                    bundle.preKeys.push(prekey);\n                    counter++;\n                    if (counter === missing_keys)\n                        this.account.omemo.publishBundle();\n                });\n            }\n            if (missing_keys === 0)\n                this.account.omemo.publishBundle();\n        }\n        else\n            this.account.omemo.publishBundle();\n    },\n\n    cacheSession: function (attrs) {\n        let id = attrs.id,\n            session = attrs.rec,\n            sessions = _.clone(this.get('sessions'));\n        _.isArray(sessions) && (sessions = {});\n        sessions[id] = session;\n        this.save('sessions', sessions);\n    },\n\n    removeSession: function (id) {\n        let sessions = _.clone(this.get('sessions'));\n        _.isArray(sessions) && (sessions = {});\n        delete sessions[id];\n        this.save('sessions', sessions);\n    },\n\n    getSession: function (id) {\n        let sessions = _.clone(this.get('sessions'));\n        return sessions[id];\n    },\n\n    publishBundle: async function (device_attrs) {\n        if (!this.bundle)\n            return;\n        let spk = this.bundle.preKeys.find(pk => pk.signature),\n            ik = await this.store.getIdentityKeyPair(),\n            pks = this.bundle.preKeys;\n        xabber.error(pks);\n        if (!spk || !ik) {\n            this.set('resend_bundle', true);\n            this.set('device_attrs', device_attrs);\n            return;\n        }\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            if (device_attrs){\n                device_attrs.omemo.publishDevice(device_attrs.device_id, device_attrs.label);\n            }\n        });\n        this.account.getConnectionForIQ().omemo.getBundleInfo({jid: this.account.get('jid'), id: this.get('device_id')}, (res) => {\n            this.publish(spk, ik.pubKey, pks, () => {\n                dfd.resolve();\n            });\n        }, (err) => {\n            if (($(err).find('error').attr('code') == 404)){\n                this.account.getConnectionForIQ().omemo.createBundleNode(() => {\n                    this.publish(spk, ik.pubKey, pks, () => {\n                        dfd.resolve();\n                    });\n                });\n            }\n        });\n    },\n\n    onOwnDevicesUpdated: async function () {\n        return new Promise((resolve, reject) => {\n            let conn = this.account.getConnectionForIQ();\n            if (conn && conn.omemo && conn.omemo.devices) {\n                for (let d in this.own_devices) {\n                    if (!conn.omemo.devices[d]) {\n                        this.account.omemo.removeSession('session' + this.own_devices[d].address.toString());\n                        delete this.own_devices[d];\n                    }\n                }\n                let counter = Object.keys(conn.omemo.devices).length;\n                for (let device_id in conn.omemo.devices) {\n                    if (!this.own_devices[device_id])\n                        this.own_devices[device_id] = new xabber.Device({\n                            jid: this.account.get('jid'),\n                            id: device_id\n                        }, {account: this.account, store: this.store});\n                    let device = this.own_devices[device_id],\n                        label = conn.omemo.devices[device_id].label;\n                    if (!device.get('ik')) {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            !counter && resolve();\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            let fingerprint = device.generateFingerprint();\n                            if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                                device.set('fingerprint', fingerprint);\n                            counter--;\n                            !counter && resolve();\n                        }).catch(() => {\n                            counter--;\n                            !counter && resolve();\n                        });\n                    } else if (!device.get('fingerprint')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        counter--;\n                        !counter && resolve();\n                    } else {\n                        counter--;\n                        !counter && resolve();\n                    }\n                    label && device.set('label', label);\n                }\n            }\n        });\n    }\n});\n\nxabber.DecryptedMessages = Backbone.ModelWithStorage.extend({\n    defaults: {\n        messages: {}\n    },\n\n    getMessage: function (contact, stanza_id) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        return contact_messages[stanza_id];\n    },\n\n    getMessages: function (contact) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        return contact_messages;\n    },\n\n    putMessage: function (contact, stanza_id, message) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        contact_messages[stanza_id] = message;\n        messages[contact.get('jid')] = contact_messages;\n        this.save('messages', messages);\n    },\n\n    removeMessage: function (attrs, contact) {\n        let origin_id = attrs.origin_id;\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        delete contact_messages[origin_id];\n        messages[contact.get('jid')] = contact_messages;\n        this.save('messages', messages);\n    },\n\n    updateMessage: function (attrs, contact) {\n        let stanza_id = attrs.stanza_id,\n            origin_id = attrs.origin_id,\n            messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {},\n            message = contact_messages[origin_id];\n        if (origin_id)\n            this.removeMessage({origin_id}, contact);\n        if (stanza_id)\n            this.putMessage(contact, stanza_id, message);\n    }\n});\n\nxabber.SignalProtocolStore = Backbone.Model.extend({\n    initialize: function () {\n        this.Direction = {\n            SENDING: 1,\n            RECEIVING: 2\n        };\n        this.store = {};\n    },\n\n    getIdentityKeyPair: function () {\n        return Promise.resolve(this.get('identityKey'));\n    },\n\n    getLocalRegistrationId: function () {\n        return Promise.resolve(this.get('registrationId'));\n    },\n\n    put: function (key, value) {\n        if (key === undefined || value === undefined || key === null || value === null)\n            throw new Error(\"Tried to store undefined/null\");\n        this.store[key] = value;\n    },\n\n    get: function (key, defaultValue) {\n        if (key === null || key === undefined)\n            throw new Error(\"Tried to get value for undefined/null key\");\n        if (key in this.store) {\n            return this.store[key];\n        } else {\n            return defaultValue;\n        }\n    },\n\n    remove: function (key) {\n        if (key === null || key === undefined)\n            throw new Error(\"Tried to remove value for undefined/null key\");\n        delete this.store[key];\n    },\n\n    isTrustedIdentity: function (identifier, identityKey, direction) {\n        if (identifier === null || identifier === undefined) {\n            throw new Error(\"tried to check identity key for undefined/null key\");\n        }\n        if (!(identityKey instanceof ArrayBuffer)) {\n            throw new Error(\"Expected identityKey to be an ArrayBuffer\");\n        }\n        let trusted = this.get('identityKey' + identifier);\n        if (trusted === undefined) {\n            return Promise.resolve(true);\n        }\n        return Promise.resolve(util.toString(identityKey) === util.toString(trusted));\n    },\n\n    loadIdentityKey: function (identifier) {\n        if (identifier === null || identifier === undefined)\n            throw new Error(\"Tried to get identity key for undefined/null key\");\n        return Promise.resolve(this.get('identityKey' + identifier));\n    },\n\n    saveIdentity: function (identifier, identityKey) {\n        if (identifier === null || identifier === undefined)\n            throw new Error(\"Tried to put identity key for undefined/null key\");\n\n        let address = new SignalProtocolAddress.fromString(identifier);\n\n        let existing = this.get('identityKey' + address.getName());\n        this.put('identityKey' + address.getName(), identityKey);\n\n        if (existing && libsignal.toString(identityKey) !== libsignal.toString(existing)) {\n            return Promise.resolve(true);\n        } else {\n            return Promise.resolve(false);\n        }\n\n    },\n\n    /* Returns a prekeypair object or undefined */\n    loadPreKey: function (keyId) {\n        let res = this.get('25519KeypreKey' + keyId);\n        if (res !== undefined) {\n            res = {pubKey: res.pubKey, privKey: res.privKey};\n        }\n        return Promise.resolve(res);\n    },\n\n    storePreKey: function (keyId, keyPair) {\n        return Promise.resolve(this.put('25519KeypreKey' + keyId, keyPair));\n    },\n\n    removePreKey: function (keyId) {\n        this.trigger('prekey_removed', keyId);\n        // return Promise.resolve(this.remove('25519KeypreKey' + keyId));\n    },\n\n    /* Returns a signed keypair object or undefined */\n    loadSignedPreKey: function (keyId) {\n        let res = this.get('25519KeysignedKey' + keyId);\n        if (res !== undefined) {\n            res = {pubKey: res.pubKey, privKey: res.privKey};\n        }\n        return Promise.resolve(res);\n    },\n\n    storeSignedPreKey: function (keyId, keyPair) {\n        return Promise.resolve(this.put('25519KeysignedKey' + keyId, keyPair));\n    },\n\n    removeSignedPreKey: function (keyId) {\n        return Promise.resolve(this.remove('25519KeysignedKey' + keyId));\n    },\n\n    loadSession: function (identifier) {\n        return Promise.resolve(this.get('session' + identifier));\n    },\n\n    hasSession: function (identifier) {\n        return !!this.get('session' + identifier)\n    },\n\n    storeSession: function (identifier, record) {\n        this.trigger('session_stored', {id: 'session' + identifier, rec: record});\n        return Promise.resolve(this.put('session' + identifier, record));\n    },\n\n    removeSession: function (identifier) {\n        return Promise.resolve(this.remove('session' + identifier));\n    },\n\n    getAllSessions: function (identifier) {\n        let sessions = [];\n        for (let id in this.store) {\n            if (id.startsWith('session' + identifier)) {\n                sessions.push({id: id, session: this.store[id]});\n            }\n        }\n        return Promise.resolve(sessions);\n    },\n\n    removeAllSessions: function (identifier) {\n        for (let id in this.store) {\n            if (id.startsWith('session' + identifier)) {\n                delete this.store[id];\n            }\n        }\n        return Promise.resolve();\n    }\n});\n\nxabber.OMEMOEnablePlaceholder = xabber.BasicView.extend({\n    className: 'omemo-enable-placeholder',\n\n    events: {\n        'click .btn-enable': 'enableOmemo',\n        'click .btn-escape': 'closeOmemoPlaceholder'\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.updateColorScheme();\n        this.$el.html(templates.omemo_enable({jid: this.account.get('jid')}));\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        this.account.session.on(\"change:connected\", this.updateConnected, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.account.settings.on(\"change:omemo\", this.onOmemoChange, this);\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    onUpdatedScreen: function () {\n        if (!this.account.omemo_enable_placeholder || this.account.omemo_enable_placeholder.cid !== this.cid)\n            return;\n        this.$el.detach();\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    },\n\n    updateConnected: function () {\n        if (!this.account.isConnected())\n            this.close();\n    },\n\n    enableOmemo: function () {\n        this.account.settings.save('omemo', true);\n        this.close();\n        this.account.omemo = new xabber.Omemo({id: 'omemo'}, {\n            account: this.account,\n            storage_name: xabber.getStorageName() + '-omemo-settings-' + this.account.get('jid'),\n            fetch: 'before'\n        });\n        setTimeout(() => {\n            this.account.omemo.onConnected();\n        }, 2000);\n    },\n\n    closeOmemoPlaceholder: function () {\n        this.account.settings.save('omemo', false);\n        this.close();\n    },\n\n    onOmemoChange: function () {\n        if (this.account.settings.get('omemo'))\n            this.close();\n    },\n\n    close: function () {\n        this.trigger('remove') && this.remove();\n        this.account.omemo_enable_placeholder = undefined;\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    if (!this.settings.get('omemo'))\n        return;\n    this.omemo = new xabber.Omemo({id: 'omemo'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-omemo-settings-' + this.get('jid'),\n        fetch: 'before'\n    });\n});\n\nxabber.Account.addConnPlugin(function () {\n    if (!this.settings.get('omemo'))\n        return;\n    this.omemo.onConnected();\n}, true, true);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\nimport views from \"xabber-views\";\nimport api_service from \"xabber-api-service\";\nimport strophe from \"xabber-strophe\";\nimport vcard from \"xabber-vcard\";\nimport accounts from \"xabber-accounts\";\nimport discovery from \"xabber-discovery\";\nimport contacts from \"xabber-contacts\";\nimport chats from \"xabber-chats\";\nimport searching from \"xabber-searching\";\nimport mentions from \"xabber-mentions\";\nimport ui from \"xabber-ui\";\nimport omemo from \"xabber-omemo\";\n\nxabber.extendWith(views, api_service, strophe, vcard,\n    accounts, discovery, contacts, chats, searching, mentions, ui, omemo);\nglobal.xabber = xabber;\n\nexport default xabber;\n","var map = {\n\t\"./accounts/emojis.json\": 85304\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 92444;","var map = {\n\t\"./accounts/account_settings_modal.html\": 59166,\n\t\"./accounts/add_account.html\": 24109,\n\t\"./accounts/audio_file_waveform.html\": 56949,\n\t\"./accounts/avatars_gallery.html\": 47837,\n\t\"./accounts/change_account_password.html\": 15415,\n\t\"./accounts/change_password.html\": 34999,\n\t\"./accounts/change_status.html\": 33999,\n\t\"./accounts/current_token_item_modal.html\": 5766,\n\t\"./accounts/delete_files_media_gallery.html\": 72971,\n\t\"./accounts/emoji_panel.html\": 90231,\n\t\"./accounts/emoji_picker.html\": 25482,\n\t\"./accounts/emoji_picker_tabs.html\": 20458,\n\t\"./accounts/existing_groupchat_item.html\": 4870,\n\t\"./accounts/global_settings_item_modal.html\": 56001,\n\t\"./accounts/media_gallery_account.html\": 57872,\n\t\"./accounts/media_gallery_account_file.html\": 39440,\n\t\"./accounts/resource.html\": 75216,\n\t\"./accounts/resource_right.html\": 255,\n\t\"./accounts/single_account_settings_modal.html\": 86572,\n\t\"./accounts/status_message_input_widget.html\": 71326,\n\t\"./accounts/token_item_modal.html\": 84377,\n\t\"./accounts/toolbar_item.html\": 54810,\n\t\"./accounts/unregister_account.html\": 49485,\n\t\"./accounts/webcam_panel.html\": 92797,\n\t\"./accounts/xmpp_login.html\": 64630,\n\t\"./base/about.html\": 99288,\n\t\"./base/backgrounds_gallery.html\": 77428,\n\t\"./base/color_picker.html\": 51462,\n\t\"./base/color_scheme.html\": 83430,\n\t\"./base/dialog.html\": 62985,\n\t\"./base/fingerprint_devices_item.html\": 16969,\n\t\"./base/fingerprint_item.html\": 75551,\n\t\"./base/fingerprints.html\": 5822,\n\t\"./base/fingerprints_devices.html\": 26376,\n\t\"./base/input_widget.html\": 10596,\n\t\"./base/jingle_message_calling.html\": 62077,\n\t\"./base/omemo_enable.html\": 17661,\n\t\"./base/plyr_player_popup.html\": 14197,\n\t\"./base/setting_emoji_font_radio_input.html\": 73122,\n\t\"./base/setting_language_radio_input.html\": 49707,\n\t\"./base/setting_radio_input.html\": 94944,\n\t\"./base/settings.html\": 15887,\n\t\"./base/settings_modal.html\": 81012,\n\t\"./base/toolbar.html\": 45459,\n\t\"./chats/add_chat_account_item.html\": 56468,\n\t\"./chats/chat_bottom.html\": 74335,\n\t\"./chats/chat_content.html\": 10224,\n\t\"./chats/chat_content_contact.html\": 9031,\n\t\"./chats/chat_content_placeholder.html\": 36209,\n\t\"./chats/chat_head.html\": 29317,\n\t\"./chats/chat_item.html\": 95370,\n\t\"./chats/chat_placeholder.html\": 5696,\n\t\"./chats/chats_panel.html\": 80026,\n\t\"./chats/checkbox.html\": 40433,\n\t\"./chats/content_encryption_warning.html\": 96249,\n\t\"./chats/encryption_warning.html\": 53318,\n\t\"./chats/ephemeral_timer_selector.html\": 70275,\n\t\"./chats/forward_panel.html\": 83176,\n\t\"./chats/group_chats/add_group_chat.html\": 23118,\n\t\"./chats/group_chats/invitation_panel_view.html\": 1015,\n\t\"./chats/group_chats/mention_item.html\": 79011,\n\t\"./chats/group_chats/pinned_message_panel.html\": 68096,\n\t\"./chats/location_popup.html\": 21732,\n\t\"./chats/message_item.html\": 59170,\n\t\"./chats/messages/attached_file.html\": 97042,\n\t\"./chats/messages/audio_file.html\": 94382,\n\t\"./chats/messages/audio_file_waveform.html\": 74211,\n\t\"./chats/messages/auth_request.html\": 63576,\n\t\"./chats/messages/file.html\": 89256,\n\t\"./chats/messages/file_loading.html\": 83034,\n\t\"./chats/messages/file_upload.html\": 46311,\n\t\"./chats/messages/forwarded.html\": 19038,\n\t\"./chats/messages/group_request.html\": 29794,\n\t\"./chats/messages/hidden-template-for-2.html\": 15867,\n\t\"./chats/messages/hidden-template-for-3.html\": 87486,\n\t\"./chats/messages/hidden-template-for-4.html\": 19761,\n\t\"./chats/messages/hidden-template-for-5.html\": 20365,\n\t\"./chats/messages/hidden-template-for-6.html\": 57344,\n\t\"./chats/messages/images_details.html\": 13786,\n\t\"./chats/messages/link_reference.html\": 59840,\n\t\"./chats/messages/link_reference_chat.html\": 39475,\n\t\"./chats/messages/loading_circle.html\": 54301,\n\t\"./chats/messages/location.html\": 55127,\n\t\"./chats/messages/main.html\": 76510,\n\t\"./chats/messages/saved_main.html\": 18479,\n\t\"./chats/messages/searched.html\": 83228,\n\t\"./chats/messages/system.html\": 85046,\n\t\"./chats/messages/template-for-2.html\": 2861,\n\t\"./chats/messages/template-for-3.html\": 70423,\n\t\"./chats/messages/template-for-4.html\": 90719,\n\t\"./chats/messages/template-for-5.html\": 39125,\n\t\"./chats/messages/template-for-6.html\": 20129,\n\t\"./chats/messages/video.html\": 87795,\n\t\"./chats/messages/voice_message.html\": 43795,\n\t\"./chats/saved_chat_head.html\": 21385,\n\t\"./chats/send_media.html\": 34054,\n\t\"./chats/subscription_buttons.html\": 47725,\n\t\"./chats/unread_marker.html\": 98875,\n\t\"./contacts/account_roster_left.html\": 69006,\n\t\"./contacts/account_roster_right.html\": 23643,\n\t\"./contacts/add_contact.html\": 24718,\n\t\"./contacts/add_contact_account_item.html\": 31238,\n\t\"./contacts/audio_file_waveform.html\": 49820,\n\t\"./contacts/contact_blocked_item.html\": 73253,\n\t\"./contacts/contact_details_right.html\": 38624,\n\t\"./contacts/contact_left_item.html\": 24958,\n\t\"./contacts/contact_placeholder.html\": 19768,\n\t\"./contacts/contact_right_item.html\": 72055,\n\t\"./contacts/edit_contact.html\": 45078,\n\t\"./contacts/edit_group.html\": 4679,\n\t\"./contacts/group_chats/add_blocked_participant_form.html\": 37639,\n\t\"./contacts/group_chats/badge_edit_view.html\": 11868,\n\t\"./contacts/group_chats/default_restrictions.html\": 87004,\n\t\"./contacts/group_chats/default_restrictions_right.html\": 59115,\n\t\"./contacts/group_chats/description_input_widget.html\": 49080,\n\t\"./contacts/group_chats/file_item.html\": 79481,\n\t\"./contacts/group_chats/group_chat_details.html\": 69426,\n\t\"./contacts/group_chats/group_chat_details_right.html\": 18939,\n\t\"./contacts/group_chats/group_chat_properties.html\": 15159,\n\t\"./contacts/group_chats/group_chat_properties_edit.html\": 20904,\n\t\"./contacts/group_chats/group_chat_properties_right.html\": 69849,\n\t\"./contacts/group_chats/group_member_item.html\": 38114,\n\t\"./contacts/group_chats/group_member_item_right.html\": 53119,\n\t\"./contacts/group_chats/group_name_input_widget.html\": 82703,\n\t\"./contacts/group_chats/group_status.html\": 70569,\n\t\"./contacts/group_chats/group_status_right.html\": 27157,\n\t\"./contacts/group_chats/invitation.html\": 53464,\n\t\"./contacts/group_chats/invited_member_item.html\": 87824,\n\t\"./contacts/group_chats/participant_badge_input_widget.html\": 84939,\n\t\"./contacts/group_chats/participant_details_item.html\": 66493,\n\t\"./contacts/group_chats/participant_details_item_right.html\": 83326,\n\t\"./contacts/group_chats/participant_details_right.html\": 1593,\n\t\"./contacts/group_chats/participant_rights.html\": 76252,\n\t\"./contacts/group_chats/participants.html\": 93172,\n\t\"./contacts/group_chats/participants_right_panel.html\": 19295,\n\t\"./contacts/group_chats/pinned_message.html\": 54630,\n\t\"./contacts/group_chats/private_participant_details.html\": 15369,\n\t\"./contacts/group_chats/private_participant_details_item_right.html\": 79983,\n\t\"./contacts/group_chats/restriction_item.html\": 87050,\n\t\"./contacts/group_chats/right_expire_variants.html\": 54338,\n\t\"./contacts/group_chats/set_status.html\": 67065,\n\t\"./contacts/group_chats/status_item.html\": 27893,\n\t\"./contacts/group_left.html\": 57973,\n\t\"./contacts/group_right.html\": 95561,\n\t\"./contacts/group_settings.html\": 21612,\n\t\"./contacts/groups.html\": 62605,\n\t\"./contacts/groups_checkbox_list.html\": 54515,\n\t\"./contacts/groups_checkbox_list_contact.html\": 52661,\n\t\"./contacts/groups_list.html\": 58114,\n\t\"./contacts/groups_new_group.html\": 57713,\n\t\"./contacts/media_item.html\": 17905,\n\t\"./contacts/media_items_empty.html\": 23546,\n\t\"./contacts/preloader.html\": 4142,\n\t\"./contacts/roster_left.html\": 50869,\n\t\"./contacts/roster_right.html\": 22136,\n\t\"./contacts/roster_settings.html\": 54186,\n\t\"./mentions/mention_item.html\": 19253,\n\t\"./mentions/mentions_panel.html\": 50291,\n\t\"./mentions/mentions_placeholder.html\": 20103,\n\t\"./searching/existing_groupchat_details_view.html\": 31897,\n\t\"./searching/existing_groupchat_item.html\": 71655,\n\t\"./searching/searching_account_item.html\": 3103,\n\t\"./searching/searching_wide.html\": 43143,\n\t\"./svg/account-cancel.html\": 53283,\n\t\"./svg/account-outline.html\": 20865,\n\t\"./svg/account.html\": 32721,\n\t\"./svg/address-outline.html\": 66656,\n\t\"./svg/address.html\": 94429,\n\t\"./svg/alarm-bell.html\": 47158,\n\t\"./svg/alert-circle.html\": 55133,\n\t\"./svg/bell-off.html\": 14759,\n\t\"./svg/bell-sleep.html\": 11713,\n\t\"./svg/bell.html\": 55155,\n\t\"./svg/birthday-outline.html\": 23977,\n\t\"./svg/birthday.html\": 74741,\n\t\"./svg/blocked-add.html\": 89768,\n\t\"./svg/blocked.html\": 33574,\n\t\"./svg/bot-variant.html\": 94862,\n\t\"./svg/bot.html\": 29568,\n\t\"./svg/bug.html\": 89965,\n\t\"./svg/call-outline.html\": 16938,\n\t\"./svg/call.html\": 9530,\n\t\"./svg/camera-retake.html\": 25430,\n\t\"./svg/camera.html\": 26716,\n\t\"./svg/cancel.html\": 80595,\n\t\"./svg/channel.html\": 40203,\n\t\"./svg/chat.html\": 71714,\n\t\"./svg/check-circle.html\": 62633,\n\t\"./svg/check.html\": 26446,\n\t\"./svg/chevron-down.html\": 79353,\n\t\"./svg/chevron-left-variant.html\": 32011,\n\t\"./svg/chevron-right-variant.html\": 19297,\n\t\"./svg/circle-slice-1.html\": 45013,\n\t\"./svg/circle-slice-2.html\": 15460,\n\t\"./svg/circle-slice-3.html\": 56377,\n\t\"./svg/circle-slice-4.html\": 63363,\n\t\"./svg/circle-slice-5.html\": 53161,\n\t\"./svg/circle-slice-6.html\": 90100,\n\t\"./svg/circle-slice-7.html\": 47263,\n\t\"./svg/circle-slice-8.html\": 16472,\n\t\"./svg/circles-outline.html\": 47033,\n\t\"./svg/circles.html\": 61265,\n\t\"./svg/client-outline.html\": 52773,\n\t\"./svg/client.html\": 6625,\n\t\"./svg/clock-outline.html\": 93813,\n\t\"./svg/close.html\": 70874,\n\t\"./svg/cloud.html\": 55696,\n\t\"./svg/contact-add.html\": 63272,\n\t\"./svg/crosshairs-gps.html\": 57197,\n\t\"./svg/crosshairs-question.html\": 40765,\n\t\"./svg/crosshairs.html\": 82823,\n\t\"./svg/database-lock.html\": 17338,\n\t\"./svg/database.html\": 41473,\n\t\"./svg/description-outline.html\": 23373,\n\t\"./svg/description.html\": 63993,\n\t\"./svg/device-cellphone.html\": 79824,\n\t\"./svg/device-console.html\": 32111,\n\t\"./svg/device-desktop.html\": 5772,\n\t\"./svg/device-tablet.html\": 18955,\n\t\"./svg/device-web.html\": 16919,\n\t\"./svg/devices.html\": 50832,\n\t\"./svg/download.html\": 58712,\n\t\"./svg/edit-outline.html\": 96840,\n\t\"./svg/edit.html\": 22845,\n\t\"./svg/email-outline.html\": 66206,\n\t\"./svg/email.html\": 22505,\n\t\"./svg/expires.html\": 21321,\n\t\"./svg/file-audio.html\": 3643,\n\t\"./svg/file-document.html\": 88700,\n\t\"./svg/file-pdf.html\": 3468,\n\t\"./svg/file-presentation.html\": 34417,\n\t\"./svg/file-video.html\": 98587,\n\t\"./svg/file-zip.html\": 89193,\n\t\"./svg/file.html\": 34058,\n\t\"./svg/fullname-outline.html\": 16109,\n\t\"./svg/fullname.html\": 12784,\n\t\"./svg/group-incognito.html\": 49703,\n\t\"./svg/group-invite.html\": 89411,\n\t\"./svg/group-private.html\": 81044,\n\t\"./svg/group-public.html\": 56403,\n\t\"./svg/history.html\": 35726,\n\t\"./svg/ic-at.html\": 81363,\n\t\"./svg/ic-jabber.html\": 9140,\n\t\"./svg/ic-searching.html\": 46476,\n\t\"./svg/id-outline.html\": 19324,\n\t\"./svg/id.html\": 50807,\n\t\"./svg/image.html\": 90226,\n\t\"./svg/index.html\": 2612,\n\t\"./svg/information-outline.html\": 52973,\n\t\"./svg/information.html\": 66035,\n\t\"./svg/invite-outline.html\": 34289,\n\t\"./svg/invite.html\": 75917,\n\t\"./svg/job-outline.html\": 31802,\n\t\"./svg/job.html\": 97579,\n\t\"./svg/key-variant.html\": 76499,\n\t\"./svg/key.html\": 46753,\n\t\"./svg/link.html\": 16205,\n\t\"./svg/lock-alert.html\": 63234,\n\t\"./svg/lock-check.html\": 14833,\n\t\"./svg/lock-cross.html\": 8513,\n\t\"./svg/lock-open.html\": 1652,\n\t\"./svg/lock-question.html\": 67160,\n\t\"./svg/lock.html\": 6258,\n\t\"./svg/map-marker-outline.html\": 83740,\n\t\"./svg/map-marker.html\": 70776,\n\t\"./svg/membership-outline.html\": 8872,\n\t\"./svg/message-bookmark-outline.html\": 6278,\n\t\"./svg/message-group.html\": 35529,\n\t\"./svg/minus.html\": 79092,\n\t\"./svg/mobile.html\": 33767,\n\t\"./svg/palette.html\": 43710,\n\t\"./svg/pause.html\": 58080,\n\t\"./svg/picture-in-picture-bottom-right.html\": 91421,\n\t\"./svg/picture-in-picture-minimize.html\": 42173,\n\t\"./svg/picture-in-picture-top-right.html\": 74578,\n\t\"./svg/pinned-circle-small.html\": 54052,\n\t\"./svg/pinned.html\": 9443,\n\t\"./svg/play.html\": 43069,\n\t\"./svg/player-float.html\": 30030,\n\t\"./svg/player-full.html\": 60259,\n\t\"./svg/player-mini-variant.html\": 70099,\n\t\"./svg/player-mini.html\": 77531,\n\t\"./svg/plus.html\": 85123,\n\t\"./svg/plyr.html\": 10410,\n\t\"./svg/qrcode.html\": 17943,\n\t\"./svg/restrictions-outline.html\": 89701,\n\t\"./svg/rss-variant.html\": 89657,\n\t\"./svg/rss.html\": 15645,\n\t\"./svg/saved-messages.html\": 11797,\n\t\"./svg/search.html\": 11146,\n\t\"./svg/security.html\": 91467,\n\t\"./svg/server.html\": 71188,\n\t\"./svg/star-face.html\": 1866,\n\t\"./svg/status-outline.html\": 52555,\n\t\"./svg/status.html\": 5000,\n\t\"./svg/subscription-from.html\": 5414,\n\t\"./svg/subscription-to.html\": 8020,\n\t\"./svg/task.html\": 41835,\n\t\"./svg/translate.html\": 98431,\n\t\"./svg/trash.html\": 61686,\n\t\"./svg/video.html\": 98070,\n\t\"./svg/volume-high.html\": 87658,\n\t\"./svg/volume-off-variant.html\": 7962,\n\t\"./svg/volume-off.html\": 14032,\n\t\"./svg/web-cancel.html\": 26330,\n\t\"./svg/web.html\": 7094,\n\t\"./svg/xabber-offline.html\": 50033,\n\t\"./svg/xabber-online.html\": 74922,\n\t\"./svg/xmpp.html\": 92052,\n\t\"./vcard/vcard.html\": 73889,\n\t\"./vcard/vcard_edit_modal.html\": 43918,\n\t\"./vcard/vcard_modal.html\": 59265,\n\t\"./vcard/vcard_right.html\": 93047\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 89293;","let client_translation_progress = {\"en\":100,\"ar\":25,\"az\":2,\"be\":12,\"bg\":58,\"bs\":0,\"ca\":23,\"cs\":99,\"cy\":0,\"da\":0,\"de\":44,\"el\":27,\"es-ES\":31,\"es-latin\":61,\"et\":0,\"fa\":4,\"fi\":8,\"fil\":13,\"fr\":32,\"ga-IE\":0,\"he\":19,\"hi\":0,\"hr\":0,\"hu\":13,\"hy-AM\":8,\"id\":99,\"is\":0,\"it\":64,\"ja\":18,\"ka\":0,\"kmr\":0,\"ko\":1,\"ku\":2,\"ky\":5,\"la-LA\":0,\"lb\":0,\"lt\":3,\"me\":0,\"mk\":0,\"mn\":0,\"mr\":0,\"ms\":6,\"nb\":19,\"ne-NP\":0,\"nl\":18,\"no\":0,\"oc\":12,\"pa-IN\":0,\"pl\":59,\"pt-BR\":63,\"pt-PT\":13,\"qya-AA\":0,\"ro\":15,\"ru\":62,\"sat\":1,\"sco\":0,\"si-LK\":32,\"sk\":18,\"sl\":25,\"sq\":3,\"sr\":12,\"sr-Cyrl-ME\":0,\"sv-SE\":34,\"sw\":1,\"ta\":1,\"te\":0,\"tg\":0,\"tk\":0,\"tlh-AA\":0,\"tr\":61,\"uk\":25,\"uz\":0,\"vi\":12,\"yo\":0,\"zh-CN\":99,\"zh-TW\":10,\"zu\":0}; typeof define === \"function\" && define(() => { return client_translation_progress;});","var map = {\n\t\"./ar-rSA.js\": [\n\t\t53591,\n\t\t5629\n\t],\n\t\"./az-rAZ.js\": [\n\t\t81101,\n\t\t1101\n\t],\n\t\"./be-rBY.js\": [\n\t\t86953,\n\t\t6953\n\t],\n\t\"./bg-rBG.js\": [\n\t\t41428,\n\t\t1428\n\t],\n\t\"./bs-rBA.js\": [\n\t\t76101,\n\t\t6101\n\t],\n\t\"./ca-rES.js\": [\n\t\t80049,\n\t\t49\n\t],\n\t\"./cs-rCZ.js\": [\n\t\t30011,\n\t\t11\n\t],\n\t\"./cy-rGB.js\": [\n\t\t98146,\n\t\t8146\n\t],\n\t\"./da-rDK.js\": [\n\t\t22348,\n\t\t2348\n\t],\n\t\"./de-rDE.js\": [\n\t\t78961,\n\t\t8961\n\t],\n\t\"./el-rGR.js\": [\n\t\t292,\n\t\t292\n\t],\n\t\"./en.js\": [\n\t\t53832,\n\t\t3832\n\t],\n\t\"./es-rES.js\": [\n\t\t85895,\n\t\t5895\n\t],\n\t\"./es419.js\": [\n\t\t93575,\n\t\t3575\n\t],\n\t\"./et-rEE.js\": [\n\t\t14103,\n\t\t4103\n\t],\n\t\"./fa-rIR.js\": [\n\t\t15729,\n\t\t5729\n\t],\n\t\"./fi-rFI.js\": [\n\t\t35069,\n\t\t5069\n\t],\n\t\"./fil-rPH.js\": [\n\t\t43250,\n\t\t3250\n\t],\n\t\"./fr-rFR.js\": [\n\t\t52716,\n\t\t2716\n\t],\n\t\"./ga-rIE.js\": [\n\t\t17872,\n\t\t7872\n\t],\n\t\"./hi-rIN.js\": [\n\t\t11361,\n\t\t1361\n\t],\n\t\"./hr-rHR.js\": [\n\t\t42324,\n\t\t2324\n\t],\n\t\"./hu-rHU.js\": [\n\t\t70833,\n\t\t833\n\t],\n\t\"./hy-rAM.js\": [\n\t\t63000,\n\t\t3000\n\t],\n\t\"./in-rID.js\": [\n\t\t31879,\n\t\t1879\n\t],\n\t\"./is-rIS.js\": [\n\t\t55298,\n\t\t5298\n\t],\n\t\"./it-rIT.js\": [\n\t\t8182,\n\t\t8182\n\t],\n\t\"./iw-rIL.js\": [\n\t\t5945,\n\t\t5945\n\t],\n\t\"./ja-rJP.js\": [\n\t\t91587,\n\t\t1587\n\t],\n\t\"./ka-rGE.js\": [\n\t\t21337,\n\t\t1337\n\t],\n\t\"./kmr-rTR.js\": [\n\t\t57057,\n\t\t7057\n\t],\n\t\"./ko-rKR.js\": [\n\t\t88756,\n\t\t8756\n\t],\n\t\"./ku-rTR.js\": [\n\t\t33678,\n\t\t3678\n\t],\n\t\"./ky-rKG.js\": [\n\t\t28404,\n\t\t8404\n\t],\n\t\"./la-rLA.js\": [\n\t\t27089,\n\t\t7089\n\t],\n\t\"./lb-rLU.js\": [\n\t\t85752,\n\t\t5752\n\t],\n\t\"./lt-rLT.js\": [\n\t\t23097,\n\t\t3097\n\t],\n\t\"./me-rME.js\": [\n\t\t59023,\n\t\t9023\n\t],\n\t\"./mk-rMK.js\": [\n\t\t52499,\n\t\t2499\n\t],\n\t\"./mn-rMN.js\": [\n\t\t68721,\n\t\t8721\n\t],\n\t\"./mr-rIN.js\": [\n\t\t33591,\n\t\t3591\n\t],\n\t\"./ms-rMY.js\": [\n\t\t10922,\n\t\t922\n\t],\n\t\"./nb-rNO.js\": [\n\t\t54778,\n\t\t4778\n\t],\n\t\"./ne-rNP.js\": [\n\t\t4463,\n\t\t4463\n\t],\n\t\"./nl-rNL.js\": [\n\t\t36447,\n\t\t6447\n\t],\n\t\"./no-rNO.js\": [\n\t\t16813,\n\t\t6813\n\t],\n\t\"./oc-rFR.js\": [\n\t\t76102,\n\t\t6102\n\t],\n\t\"./pa-rIN.js\": [\n\t\t49081,\n\t\t9081\n\t],\n\t\"./pl-rPL.js\": [\n\t\t60419,\n\t\t419\n\t],\n\t\"./pt-rBR.js\": [\n\t\t9226,\n\t\t9226\n\t],\n\t\"./pt-rPT.js\": [\n\t\t10201,\n\t\t201\n\t],\n\t\"./qya-rAA.js\": [\n\t\t39460,\n\t\t9460\n\t],\n\t\"./ro-rRO.js\": [\n\t\t16292,\n\t\t6292\n\t],\n\t\"./ru-rRU.js\": [\n\t\t74391,\n\t\t4391\n\t],\n\t\"./sat-rIN.js\": [\n\t\t1905,\n\t\t1905\n\t],\n\t\"./sco-rGB.js\": [\n\t\t52323,\n\t\t2323\n\t],\n\t\"./si-rLK.js\": [\n\t\t79773,\n\t\t9773\n\t],\n\t\"./sk-rSK.js\": [\n\t\t51874,\n\t\t1874\n\t],\n\t\"./sl-rSI.js\": [\n\t\t97658,\n\t\t7658\n\t],\n\t\"./sq-rAL.js\": [\n\t\t80596,\n\t\t596\n\t],\n\t\"./sr-rCyrl-rME.js\": [\n\t\t33343,\n\t\t3343\n\t],\n\t\"./sr-rSP.js\": [\n\t\t75384,\n\t\t5384\n\t],\n\t\"./sv-rSE.js\": [\n\t\t50608,\n\t\t608\n\t],\n\t\"./sw-rKE.js\": [\n\t\t6802,\n\t\t6802\n\t],\n\t\"./ta-rIN.js\": [\n\t\t51796,\n\t\t1796\n\t],\n\t\"./te-rIN.js\": [\n\t\t49782,\n\t\t9782\n\t],\n\t\"./tg-rTJ.js\": [\n\t\t33689,\n\t\t3689\n\t],\n\t\"./tk-rTM.js\": [\n\t\t60130,\n\t\t130\n\t],\n\t\"./tlh-rAA.js\": [\n\t\t73739,\n\t\t3739\n\t],\n\t\"./tr-rTR.js\": [\n\t\t4961,\n\t\t4961\n\t],\n\t\"./translation_progress.js\": [\n\t\t23297\n\t],\n\t\"./uk-rUA.js\": [\n\t\t88109,\n\t\t8109\n\t],\n\t\"./uz-rUZ.js\": [\n\t\t96886,\n\t\t6886\n\t],\n\t\"./vi-rVN.js\": [\n\t\t37216,\n\t\t7216\n\t],\n\t\"./yo-rNG.js\": [\n\t\t97045,\n\t\t7045\n\t],\n\t\"./zh-rCN.js\": [\n\t\t16806,\n\t\t6806\n\t],\n\t\"./zh-rTW.js\": [\n\t\t58545,\n\t\t8545\n\t],\n\t\"./zu-rZA.js\": [\n\t\t58810,\n\t\t8810\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 8946;\nmodule.exports = webpackAsyncContext;","define(function () { return JSON.parse(\n'{\"version_number\":\"2.3.4.106\",\"version_description\":\"fixed symmetric deletion option when editing message and entering empty message input, added handling if unread msg history request send no messages\"}'\n)});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"xabber.\" + chunkId + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkxabber_web\"] = self[\"webpackChunkxabber_web\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [1216], () => (__webpack_require__(51008)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","inProgress","dataWebpackPrefix","module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","constants","ASSETS_URL_PREFIX","STORAGE_NAME","STORAGE_VERSION","CONTAINER_ELEMENT","FAVICON_DEFAULT","FAVICON_DEFAULT_GREY","FAVICON_MESSAGE","BACKGROUND_IMAGE","WIDTH_MEDIUM","WIDTH_NARROW","WIDTH_TINY","LOG_LEVEL_NONE","LOG_LEVEL_ERROR","LOG_LEVEL_WARN","LOG_LEVEL_INFO","LOG_LEVEL_DEBUG","LOG_LEVEL","KEY_BACKSPACE","KEY_TAB","KEY_ENTER","KEY_SHIFT","KEY_CTRL","KEY_ESCAPE","KEY_SPACE","KEY_ARROW_LEFT","KEY_ARROW_UP","KEY_ARROW_RIGHT","KEY_ARROW_DOWN","KEY_DELETE","KEY_FORWARD_SLASH","KEY_AT","VOICE_MSG_TIME","PASSWORD_DOT","String","fromCharCode","CONNECTION_URL","CONN_STATUSES","PREKEYS_COUNT","MIN_PREKEYS_COUNT","AES_KEY_LENGTH","AES_TAG_LENGTH","AES_EXTRACTABLE","BAD_CONN_STATUSES","RECONNECTION_TIMEOUTS","DOWNTIME_RECONNECTION_TIMEOUT","PING_SENDING_INTERVAL","IDLING_MINIMAL_TIMEOUT","IDLING_MAXIMUM_TIMEOUT","IDLING_DEFAULT_TIMEOUT","STATUS_WEIGHTS","chat","online","away","xa","dnd","offline","unavailable","PRESENT_INTERVAL","CHATSTATE_INTERVAL_COMPOSING_AUDIO","CHATSTATE_TIMEOUT_PAUSED","CHATSTATE_TIMEOUT_STOPPED","CHATSTATE_TIMEOUT_PAUSED_AUDIO","JINGLE_WAITING_TIME","SYNCHRONIZATION_RSM_MAX","REGISTRATION_DOMAINS","LOGIN_DOMAINS","TRUSTED_DOMAINS","RECOMMENDED_DOMAIN","REGISTRATION_BUTTON","REGISTRATION_CUSTOM_DOMAIN","LOGIN_CUSTOM_DOMAIN","TURN_SERVERS_LIST","urls","credential","username","JINGLE_MSG_PROPOSE","JINGLE_MSG_REJECT","JINGLE_MSG_ACCEPT","MSG_BLOCKED","MSG_ERROR","MSG_PENDING","MSG_SENT","MSG_DELIVERED","MSG_DISPLAYED","MSG_ARCHIVED","MSG_SAVED","RSM_ATTRIBUTES","MAM_ATTRIBUTES","GENERAL_GROUP_ID","NON_ROSTER_GROUP_ID","MATERIAL_COLORS","MAX_AVATAR_FILE_SIZE","AVATAR_PRIORITIES","VCARD_AVATAR","PUBSUB_AVATAR","EMAIL_FOR_JOIN_TRANSLATION","AVATAR_SIZES","TOOLBAR_ACCOUNT_ITEM","SETTINGS_ACCOUNT_ITEM","XABBER_ACCOUNT","SYNCHRONIZE_ACCOUNT_ITEM","MENTION_ITEM","ACCOUNT_SETTINGS_LEFT","ACCOUNT_VCARD_EDIT","ROSTER_RIGHT_ACCOUNT_ITEM","ROSTER_LEFT_ACCOUNT_ITEM","PARTICIPANT_DETAILS_ITEM","CONTACT_RIGHT_ITEM","GROUPCHAT_MEMBER_ITEM","CONTACT_LEFT_ITEM","CONTACT_BLOCKED_ITEM","CONTACT_DETAILS","GROUP_SETTINGS","CHAT_ITEM","CHAT_HEAD","CHAT_MESSAGE","CHAT_BOTTOM","XABBER_VOICE_CALL_VIEW","OMEMO_ENABLE_SETTING","SYNC_WAY_DATA","no","tip","icon","from_server","to_server","delete","off_local","off_remote","SYNCED_STATUS_DATA","off","yes","EMOJI_LIST_NAME","emoji_list","QUOTE_MARKER","MARKUP_TAGS","BLANK_VIDEO","OGG","MP4","WEBM","MIME_TYPES","image","audio","video","document","pdf","table","archive","presentation","languages","languages_another_locales","PERSONAL_AREA_URL","XABBER_ACCOUNT_URL","USE_SOCIAL_AUTH","USE_TAB_SIGNALS","REGISTER_XMPP_ACCOUNT","REGISTER_XMPP_ACCOUNT_URL","CHECK_VERSION","DEFAULT_LOGIN_SCREEN","GCM_SENDER_ID","GCM_API_KEY","MESSAGE_ARCHIVE_DB_NAME","STANZA_MAX_SIZE","Math","pow","BLUR_VALUE","VIGNETTING_VALUE","TRANSPARENCY_VALUE","MAIN_COLOR","CLIENT_NAME","CLIENT_RESOURCE","SHORT_CLIENT_NAME","SHORT_CLIENT_DESCRIPTION","CLIENT_LOGO","TOOLBAR_LOGO","ENABLE_XABBER_ACCOUNT","SCREEN_ABOUT","BACKGROUND_IMAGES_XML_URL","BACKGROUND_PATTERNS_XML_URL","DEVELOPER_URL","CLIENT_GITHUB_URL","PROJECT_CROWDIN_URL","CLIENT_LICENSE_GITHUB_URL","DEFAULT_EMOJI_FONT","EMOJI_FONTS_LIST","notoColor","name","value","url","hint","attribution_text","order","JINGLE_MSG_STATE","MSG_STATE","MSG_VERBOSE_STATE","$","_","moment","WaveSurfer","Plyr","plyr","Quill","libsignal","slug","sha1","idleJs","opusRecorder","opusRecorderEncoderPath","xabber_i18next","xabber_i18next_sprintf","sha256","VanillaQR","magnificPopup","backgroundImagesXml","backgroundPatternsXml","Strophe","evaluate","interpolate","templates","_addTemplate","options","path","split","tpl","join","default","tpl_name","pop","res","attr","is_svg","data","html","$html","find","each","$el","this","svg_name","removeClass","addClass","svg","insertSvg","addTemplate","addSvgTemplate","addJSONTemplate","attention_json","attention","forEach","item","attention_sound","file_name","not_selectable","push","ringtones_json","ringtones","ringtone","dialtones_json","dialtones","dialtone","notifications_json","notifications","notification","system_json","system_sound_list","system_item","system","all_sounds","concat","raw_data","x","y","getEmoji","offset","lead","trail","emoji_data","emoji","emoji_regexp","prototype","emojify","emoji_size","title","replace","removeEmoji","replaceEmoji","selector","text","length","all","get","getByIndex","idx","hasher","_image_cache","COLORS","MAX_IMG_SIZE","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","Blob","type","CachedImage","window","URL","createObjectURL","getCachedImage","isString","indexOf","isObject","getAccountColor","_name","trim","color_index","floor","getImageSize","size","max_size","width","height","fn","setAvatar","image_el","cached_image","img_size","$image_el","css","backgroundImage","backgroundSize","backgroundColor","setCss","getBlobImage","getDefaultAvatar","color","font","first_name","last_name","first_letter","second_letter","canvas","createElement","ctx","getContext","splitted_name","rect","fillStyle","fill","textAlign","textBaseline","fillText","toUpperCase","toDataURL","getAvatarFromFile","file","image_obj","Image","src","Deferred","onload","b64_image","hash","naturalWidth","naturalHeight","new_size","drawImage","revokeObjectURL","toBlob","blob","reader","FileReader","result","binary_file","bytes","bind","readAsDataURL","onerror","promise","getDefaultColor","getCachedBackground","base64","compressImage","file_type","includes","File","lastModified","Date","now","modal_queue","appendTo","Modal","modal_constructor","$modal","Function","closed","getString","params","postProcess","sprintf","extend","open","use_queue","throw","setTimeout","addEventListener","clickHandler","prop","modal_options","omit","is_default_complete","complete_data","one","ev","detach","shift","_openModal","close","complete","isUndefined","_closeModal","removeEventListener","trigger","keyCode","click","preventDefault","openModal","closeModal","modal","clear_queue","dialogs","common","header","buttons","dialog_options","flag","modal_class","dialog","isArray","ok_button","cancel_button","optional_buttons","reverse","no_dialog_options","quoted_text","append","cancel_button_main","inverted_buttons","img_details","xabber","switchClass","hasClass","blob_image_from_clipboard","appendChild","bottom_text","escape_button","input_placeholder_value","input_value","val","option","target","$options","user_value_input","$item","user_value","warning","error","ask","ok_text","cancel_text","ok_button_text","cancel_button_text","ask_extended","optional_button","optional_button_text","ask_enter_value","resend_button","resend_to","resend_button_text","notify","placeCaretAtEnd","el","focus","getSelection","createRange","body","createTextRange","textRange","moveToElementText","collapse","select","range","selectNodeContents","sel","removeAllRanges","addRange","updateRichTextarea","getTextFromRichTextarea","flushRichTextarea","pasteHtmlAtCaret","getRangeAt","rangeCount","deleteContents","innerHTML","node","lastNode","frag","createDocumentFragment","firstChild","insertNode","cloneRange","setStartAfter","selection","pasteHTML","$div","replaceWith","$this","remove","klass","condition","arguments","showIf","hideIf","isVisibleInViewport","elementTop","top","elementBottom","outerHeight","viewportTop","scrollTop","viewportBottom","isVisibleInContainer","container","eleTop","offsetTop","eleBottom","clientHeight","containerTop","containerBottom","isFullyVisibleInContainer","isBottomVisibleInContainer","getHyperLink","prot","escaped_url","encodeURI","decodeURI","escape","hyperlinkify","obj","$obj","html_concat","url_regexp","childNodes","$node","outerHTML","tagName","nodeName","list","match","from","Set","decode_uri","console","log","replaceAll","RegExp","uuid","c","r","random","toString","utoa","str","btoa","unescape","encodeURIComponent","atou","decodeURIComponent","pretty_time","timestamp","format","pretty_date","pretty_datetime","pretty_short_datetime_recent_chat","Number","startOf","isSame","subtract","pretty_short_datetime","datetime","day","year","pretty_short_month_date","isImageType","tryReadingFile","Promise","reject","getDomainFromUrl","a","test","href","hostname","isVideoType","file_type_icon","mime_type","filetype","pretty_file_type","file_type_icon_svg","pretty_file_type_with_article","pretty_size","isNaN","toFixed","pretty_duration","duration","trunc","pretty_duration_ephemeral_timer","timer","pretty_name","substr","toLowerCase","getKeyByValue","object","key","slice_string","to","isNumber","slice_pretty_body","mutable_refs","filter","m","pretty_body","ref","start","end","markupBodyMessage","message","mention_tag","attrs","clone","attributes","mentions","markups","mutable_content","blockquotes","markup_body","original_message","muted","mention","start_idx","end_idx","is_gc","jid","me","markup","start_tags","end_tags","mark_up_style","uri","quote","child_idx","getOS","platform","navigator","os","isOverflownWidth","element","scrollWidth","clientWidth","isOverflownHeight","scrollHeight","render_data_form","data_form","$data_form","fields","field","$fixed_field","label","values","$input","var","copyTextToClipboard","callback_msg","errback_msg","clipboard","writeText","then","info_msg","callback_popup_message","time","$body","$popup_msg","count","openWindow","errback","win","clearSelection","empty","getCookie","matches","cookie","undefined","isMobile","Android","userAgent","BlackBerry","iOS","Opera","Windows","any","fromBase64toArrayBuffer","b64_string","buffer","ArrayBuffertoBase64","arrayBuffer","generateHOTPKey","async","secret","counter","Crypto","crypto","subtle","counterArray","padCounter","importKey","sign","ArrayBuffer","bView","DataView","bCounter","repeat","byte","byteValue","parseInt","setUint8","DT","HS","truncate","uKey","Sbits","generateHOTP","hmacSha256","stringToArrayBuffer","string","AES","ALGO_NAME","decoder","TextDecoder","encoder","TextEncoder","decrypt","masterKey","HMACData","payload","masterObj","hkdfCtrParams","salt","info","deriveBits","encryptionKey","authenticationKey","iv","generatedHMAC","byteLength","decryptedBuffer","decode","encrypt","plaintext","getRandomValues","encrypted","generateAESencryptedMessage","keydata","encryptOptions","encodedPlaintext","encode","arrayBufferConcat","joined","set","generateAESKey","algo","generateKey","getBrowser","userAgentString","chromeAgent","IExplorerAgent","firefoxAgent","safariAgent","operaAgent","images","modals","sounds","client_translation_progress","utils","Backbone","Model","defaults","version_number","actual_version_number","client_id","substring","initialize","env","fetchURLParams","cleanUpStorage","initDefaultLanguage","detectMediaDevices","mediaDevices","ondevicechange","check_config","_settings","Settings","storage_name","getStorageName","fetch","settings","location","host","pathname","_cache","ModelWithStorage","cache","save","extendFunction","plyr_players","current_plyr_player","on","throwNewVersion","onQuit","_version_interval","setInterval","readActualVersion","msg","line","col","ononline","disconnectWhenConnecting","lang","language","loadTranslations","default_translation","translation","setLocale","translations","default_lang","_translations","use","init","lng","debug","pluralSeparator","resources","changeLanguage","locale","getFixedT","getOneLiners","exists","t","getQuantityString","services","pluralResolver","getRule","_count","compatibilityJSON","suffix","getSuffix","warn","pretty_last_seen","seconds","calendar","rawFile","XMLHttpRequest","onreadystatechange","readyState","status","json","responseText","JSON","parse","version_description","send","trimStart","trimEnd","indexedDB","databases","db","deleteDatabase","accounts","acc","cached_roster","database","cached_sync_conversations","cached_server_features","full_storage_name","localStorage","startsWith","removeItem","cacheFavicons","getMediaDevices","media_devices","callback","enumerateDevices","devices","device","kind","catch","err","done","reload","max_connection_retries","idling","idling_time","notifications_private","notifications_group","jingle_calls","notifications_volume_enabled","notifications_volume","message_preview_private","message_preview_group","private_sound","group_sound","background","side_panel","theme","blur","transparency","appearance","vignetting","main_color","emoji_font","sound_on_private_message","sound_on_group_message","call_attention","load_media","typing_notifications","mapping_service","sound_on_call","sound_on_dialtone","sound_on_connection","sound_on_attention","sound_on_auth_request","sound_on_call_busy","hotkeys","avatar_shape","load_history","mam_requests_limit","mam_messages_limit_start","mam_messages_limit","configure","config","pick","bc","log_level","PRIVACY_LOAD_MEDIA","PRIVACY_TYPING_NOTIFICATIONS","PRIVACY_MAPPING_SERVICE","BroadcastChannel","onmessage","event","disabled_client","postMessage","self","useLocalStorage","ignore_localstorage_warning","ignore","requestNotifications","granted","emoji_dfd","emoji_url","emoji_obj","loadEmojiFont","splitted_url","splitted_url_anchor","url_params","param","history","pushState","STORAGE_NAME_ENDING","Notification","permission","ignore_notifications_warning","notifications_placeholder","NotificationsPlaceholder","updateFaviconConnected","is_disconnected","account","isConnected","session","updateAllMessageCounterOnDisconnect","is_fast","connection","activate","extendWith","reduce","instance","base","applyTo","View","template","parent","vname","children","classlist","view","ps_selector","ps_container","perfectScrollbar","ps_settings","visible","onChangedVisibility","updateCSS","size_changed","windowResized","_initialize","__initialize","isVisible","show","onShow","apply","updateScrollBar","hide","onHide","render","child","addChild","constructor","removeChild","soft","removeChildren","view_id","setCustomCss","styles","removeCustomCss","removeAttr","saveScrollBarOffset","getScrollTop","scroll_top","scrollTo","scrollToTop","scrollToBottom","offsetHeight","scrollToChild","$child","prevAll","sum","scrollToChildPlus","plus_scroll","getScrollBottom","getPercentScrolled","isScrolledToTop","isScrolledToBottom","tree","close_settings","main_overlay","patchTree","has","className","isNull","new_view","events","keyUpOnSearch","stopPropagation","ids","toArray","$selection","getSelectedItem","selectNextItem","selectPreviousItem","onEnterPressed","clearSearch","updateSearch","selection_id","selectItem","arrow","clearSearchSelection","first","_update_search_timeout","query","search","onEmptyQuery","searchAll","keyUpOnSearchWithQuery","onClickItem","updateSearchWithMessages","search_messages","onScrollY","queryid","_loading_messages","_messages_loaded","query_id","first_message","searched_msgs_loaded","before","MAMRequest","query_text","messages","$message_item_view","message_from_stanza","chats","receiveChatMessage","is_searched","msg_idx","model","insertBefore","eq","onScroll","getSelectedItemWithQuery","selectNextItemWithQuery","selectPreviousItemWithQuery","selectItemWithQuery","main_container","clearTimeout","keyup_timeout","query_transliterated","saved_chat","getSavedChat","item_view","updateLastMessage","query_chats","comparator","sort","contact","searched_by","chat_item","prepend","screen","contacts","hash_id","chat_id","item_list","getChat","clear_search","searchMessages","preloader","max","iq","$iq","xmlns","NS","MAM","DATAFORM","up","cnode","RSM","toXML","handler","addHandler","sendIQFast","deleteHandler","$fin","field_type","input_widget","field_name","placeholder","$value","$btn","updateValue","input_mode","onChangedInputMode","bindModelEvents","model_field","showInput","keyDown","getValue","changeValue","keyUp","setValue","new_value","screen_map","update","onScreenMapChanged","updateBackground","updateMainColor","updateAvatarShape","insertAfter","addScreen","siblings","shape","background_settings","updateBoxShadow","updateBlur","setScreen","unbind","chat_item_view","new_attrs","stamp","uniqueId","isScreen","show_placeholder","right","right_force_close","right_contact","content","_prev_scrolltop","_scrolltop","previous_screen","changed","showChatPlaceholder","screen_changed","toolbar","state","setAttribute","getAttribute","removeAttribute","onUpdatedScreen","onChangedAllMessageCounter","onChangedGroupMessageCounter","onChangedMentionsCounter","onChangedMessageCounter","msg_counter","group_msg_counter","all_msg_counter","mentions_counter","dropdown","inDuration","outDuration","constrainWidth","hover","alignment","updateColor","contains","clickAllChats","showAllChats","no_unread","closest","is_active","showArchive","showSavedChats","right_contact_save","scroll_to_chat","once","showNotifications","showChatsByAccount","showContacts","showMentions","showSettings","account_block_name","showSettingsModal","showPlaceholder","screen_name","showAddContactView","showAddAccountView","showAddIncognitoGroupChatView","incognito","showAddPublicGroupChatView","public","setAllMessageCounter","count_msg","count_all_msg","count_group_msg","isMuted","incoming_subscriptions","unread_mentions","msgs","all_msgs","group_msgs","recountAllMessageCounter","unread_messages","jingle_message_calling","avatar_size","onDestroy","updateCallingStatus","updateButtons","updateCollapsedWindow","updateName","updateStatusText","updateAccountJid","dismissible","ready","updateAvatar","pos1","pos2","pos3","pos4","mousedown","clientX","clientY","didDrag","onmouseup","onmousemove","left","setFullScreen","fullscreenElement","exitFullscreen","requestFullscreen","cancelFullScreen","mozCancelFullScreen","mozFullScreenElement","webkitExitFullscreen","webkitCurrentFullScreenElement","msExitFullscreen","msFullscreenElement","shareScreen","isFullScreen","webkitFullscreenElement","accept","initSession","clickOnWindow","toggle","toggleClass","toggleMicrophone","status_text","videoCall","toggleVolume","cancel","plyr_player_popup","onVisibilityChange","updatePlyrControls","player","controls","youtube","disablekb","iv_load_policy","modestbranding","rel","showinfo","other","$audio_elem","voice_message","stopTime","detail","minimizePopup","showNewVideo","xPercent","innerWidth","yPercent","innerHeight","dfd","provider","updateColorScheme","player_item","message_unique_id","video_sources","video_src","source","sources","$minimize_element_float","$minimize_element_full","$show_message_element_full","play","video_file","video_decrypted","decryptFile","closePopup","visibility_state","hidePopup","floatPopup","fullPopup","nextPlyr","player_index","next_item","f_url","previousPlyr","prev_item","openMessage","showDetailsRight","right_saved","getMessageContext","togglePlay","renderVoiceMessage","toggleMute","settings_modal","updateLanguage","updateEmojiFontLabel","updateAvatarLabel","updateSoundsLabel","closeSettings","updateAccounts","updateSounds","updateLanguages","updateEmojiFonts","checked","sound_private_value","sound_group_value","updateDescription","updateBackgroundSetting","belowOrigin","updateHeight","updateSliders","block_name","$elem","jumpToBlock","settings_single_account_modal","first_account","single_account_has_rendered","forced_ps_container","single_account_modal","blur_switched","vignetting_switched","material_color","variations","v","hex","tone","weight","$tab","range_min","range_max","range_value","setting_radio_input","input_name","input_id","cid","group_element","element_no_sound","group_element_no_sound","default_element","setting_language_radio_input","progress","second_prog","second_prog_text","second_lang","second_locale","second_element","progress_text","emoji_fonts_list","system_element","setting_emoji_font_radio_input","b","item_name","current_sound","pause","backToMenu","backToSubMenu","elem_parent","goToWebNotifications","setIdling","setIdlingTimeout","$target","setNotificationsVolumeEnabled","setNotifications","requestPermission","setPrivateNotifications","setGroupNotifications","setJingleCalls","setPrivateMessagePreview","setGroupMessagePreview","setCallAttention","setLoadMedia","setTypingNotifications","setMappingService","setPrivateSound","setGroupSound","setCallSound","setDialtoneSound","setAttentionSound","setBackground","changeBackgroundImage","openColorPicker","colorPicker","chooseMainColor","changeBlur","changeNotificationsVolume","volume","sound","changeVignetting","switchVignetting","is_switched","switchBlur","setHotkeys","setAvatarShape","deleteAllAccounts","platform_text","modal_classes","changeEmojiFont","current_time","load_emoji_external_dfd","font_load_dfd","currently_loaded_font_value","response","emoji_load_date","is_outside_url","loadExternalEmojiFont","label_text","sound_private_text","sound_group_text","sound_on_attention_text","color_scheme","min","setColor","materialColors","color_picker","$color_hex","updateInputField","keyUpInput","focusoutInputField","selectColor","color_name","backgrounds_gallery","onpaste","onPaste","createLibrary","draggable","ondragenter","ondragover","ondragleave","relatedTarget","ondrop","files","dataTransfer","addFile","loadMoreImages","getImagesFromXML","patterns_library","img_library","onGetPatternsCallback","onGetImagesCallback","thumbnail","fs_img","clipboardData","getData","updateActiveButton","updateActiveMenu","updateScreen","$active_screen","non_active","current_count","img","img_sources","setActiveImage","onFileInputChanged","image_prev","onInputChanged","addBackground","request","headers","dataType","success","ajax","about","onmousedown","onMouseDown","onMouseMove","onMouseUp","which","draghandle_elem","elem","resetElem","downX","pageX","downY","pageY","avatar","abs","createAvatar","coords","getCoords","shiftX","shiftY","startDrag","style","drop_elem","findDropElem","updateDropElem","querySelector","finishDrag","box","getBoundingClientRect","pageYOffset","pageXOffset","$avatar","old","parentNode","nextSibling","position","zIndex","avatar_cursor","cursor","draghandle_elem_cursor","rollback","hidden","elementFromPoint","old_drop_elem","modal_settings","in_duration","out_duration","opacity","minScrollbarLength","suppressScrollX","wheelSpeed","startBlinkingFavicon","_blink_interval","clearInterval","$icon","favicon","favicon_gray","favicon_message","stopBlinkingFavicon","font_loaded","FontFace","load_check_interval","fonts","add","load","resetMessageCounter","onChangedFocusState","popupNotification","playAudio","loop","filename","Audio","stopAudio","registerDOMEvents","initIdleJS","stop","idle","onIdle","onActive","keepTracking","startAtIdle","focused","hasFocus","Materialize","modalSettings","drag_manager","DragManager","Body","login_page","NodeView","toolbar_view","ToolbarView","blur_overlay","main_panel","main_overlay_panel","left_panel","right_panel","right_contact_panel","wide_panel","placeholders_wrap","settings_modal_view","SettingsModalView","idAttribute","to_sync","synced","deleted","update_timestamp","update_settings","request_data","CollectionWithStorage","account_settings_list","AccountSettingsList","order_timestamp","AccountsOrderTimestamp","LogLevel","WARN","ERROR","addConnectionPlugin","_connection","conn","Status","addNamespace","REGIFAIL","REGISTER","REGISTERED","CONFLICT","NOTACCEPTABLE","disco","addFeature","addNode","items","reset","instructions","registered","connect_cb","_connect_cb","raw","_registering","_check_user","_register_cb_check_user","processed_features","_connect_cb_data","_register_cb","xmlInput","Connection","rawInput","auth_old","authenticate","matched","domain","password","authzid","getBareJidFromJid","authcid","getNodeFromJid","pass","connect_callback","connect","wait","hold","route","getDomainFromJid","connect_check_user","connect_change_password","registerSASLMechanisms","SASLAnonymous","SASLExternal","SASLMD5","SASLPlain","SASLSHA1","_callback","connected","bodyWrap","_proto","_reqToData","strip","serialize","CONNFAIL","register","getElementsByTagName","mechanisms","_no_auth_received","_changeConnectStatus","_addSysHandler","_get_register_cb","stanza","getText","submit","_submit_cb","error_text","submit_unregister","_submit_unregister_cb","SASLHOTP","SASLMechanism","onChallenge","out","len","charAt","utf16to8","hotp_pass","ConnectionManager","auth_type","registerSASLMechanism","_sasl_data","SASLXOAuth2","reconnect","_attemptSASLAuth","sortMechanismsByPriority","mechanism_found","_sasl_success_handler","_sasl_success_cb","_sasl_failure_handler","_sasl_failure_cb","_sasl_challenge_handler","_sasl_challenge_cb","_sasl_mechanism","onStart","request_auth_exchange","$build","SASL","mechanism","isClientFirst","hotp_counter","_sasl_auth1_cb","features","do_bind","do_session","namespaceURI","AUTH_DEVICES","x_token_auth","SYNCHRONIZATION","server_features","create","do_synchronization","SUBSCRIPTION_PREAPPROVAL","x_token","expire","getXToken","token","expires_at","token_uid","_send_auth_bind","AUTHFAIL","_sasl_bind_cb","resource","getResourceFromJid","BIND","old_token","uniq_id","iqtype","Websocket","_onIdle","_conn","_data","paused","rawStanza","_buildStream","xmlOutput","rawOutput","socket","_pending_stanzas","xmlunescape","reg_exp","testRegexp","replaceRegexp","vcard","xmlToObject","$vcard","nickname","fullname","middle_name","birthday","job_title","role","description","jabber_id","org","photo","phone","address","email","group_info","anonymous","searchable","status_msg","members_num","$org","unit","$photo","number","work","home","mobile","pobox","extadd","street","locality","region","pcode","country","VCARD","sendIQ","objectToXml","getBlank","updateRefreshButton","getVCard","$info","$addr_info","show_addr_block","addr","onClickIcon","$target_value","copied_text","value_text","refresh","vcard_right","vcard_edit_modal","pickadate","selectMonths","selectYears","autoOk","allowKeyboardControl","today","onClose","activeElement","weekday_display","date_display","navPrev","navNext","selected","buttonClear","buttonClose","evt","updateSaveButton","setData","updateTextFields","changePlaceholder","nickname_placeholder","setVCard","$pres","Images","enabled","status_message","priority","auto_login_xa","account_unique_id","groupchat_servers_list","_attrs","retraction_version","is_new","auth_view","is_invalid","last_msg_timestamp","collection","getLastOrder","deleteAccount","photo_hash","reconnected","ready_to_send","conn_retries","conn_feedback","_waiting_code","code_requests","gallery_code_requests","xabber_auth","onChangedConnected","websocket_connection_url","conn_manager","_added_pres_handlers","_pending_messages","dfd_presence","password_view","_init_plugins","plugin","call","xml","isOnline","getPassword","isReconnecting","sendMsg","authenticated","disconnecting","sendMsgPending","sendMsgFast","getConnectionForIQ","fast_connection","sendFast","nodeTree","is","pubAvatar","removeAvatar","http_avatar","avatar_hash","iq_pub_metadata","PUBSUB","PUBSUB_AVATAR_METADATA","thumbnails","PUBSUB_AVATAR_METADATA_THUMBNAIL","data_error","iq_pub_data","PUBSUB_AVATAR_DATA","uploaded","generated","uploadAvatar","getAvatar","iq_request_avatar","pubsub_avatar","is_iq","parseDataForm","$dataform","$field","field_var","field_label","field_value","field_options","$option","lbl","addDataFormToStanza","$stanza","field_attrs","sendPres","createFastConnection","login","token_invalidated","fast_conn_manager","disconnect","onFastConnected","reconnecting","auth_failed","restoreStatus","connectionCallback","timeout","connFeedback","reconnectionCallback","loginCallback","conn_status","conn_condition","onAuthFailed","CONNECTED","onTokenRevoked","DISCONNECTED","flush","_main_interval_worker","terminate","onConnectionConflict","max_retries","registerCallback","$nickname_input","errorRegistrationFeedback","changePasswordCallback","change_password_view","successFeedback","errorFeedback","old_password","change_password_connection","$password_input","change_password_connection_manager","unregisterAccountCallback","unregister_account_view","unregister_account_connection","unregister_account_connection_manager","CONNECTING","stepped_auth","resetAuthStepper","authStepperStart","endAuth","stepper_auth_error","CONNTIMEOUT","authStepperError","destroy","no_reconnect","deactivate","old_device_token","getAllXTokens","tokens_list","tokens","$token","client","omemo_id","last_auth","ip_address","ip","x_tokens_list","on_token_revoked","onReconnected","onConnected","onDisconnected","afterConnected","_after_connected_plugins","_after_fast_connected_plugins","_fast_interval_worker","_after_reconnected_plugins","sendPendingStanzas","sendPendingMessages","registerPresenceHandler","enableCarbons","getAllMessageRetractions","query_options","REWRITE","version","retractions_query","Builder","is_msg","msg_iq","unique_id","DELIVERY","disconnected_timestamp","last_stanza_timestamp","CARBONS","is_callback","isFunction","vcard_updated","avatar_priority","vcardPhotoUpdated","getStatusMessage","setStatus","status_updated","status_prev","sendPresence","getAvatarHash","from_avatar","decoded_raw","bin","VCARD_UPDATE","caps","createCapsNode","has_modal_settings","settings_account_modal","revokeXToken","token_num","revokeAllXTokens","show_settings","dont_change_screen","show_settings_after_delete","dont_change_screen_after_delete","omemo","groups_settings","clearStorage","groupchat_settings","chat_settings","deleteDataBase","registerIQHandler","_stanza_handler","onGetIQ","registerSyncedIQHandler","_synced_stanza_handler","onSyncedIQ","_pres_handler","presence","onPresence","onSetIQResult","roster","syncConversations","request_code","$incoming_iq","$confirm","HTTP_AUTH","$session_availability","JINGLE_MSG","from_jid","onAuthCode","$session_availability_response","session_id","testGalleryTokenExpire","currentTime","tokenExpireTime","initGalleryAuth","testGalleryFileSlot","onloadend","b64","responseJSON","gallery_feature","gallery_iq_answered","stringify","request_id","gallery_auth_errback","verifying_code","verifying_mess","handleCommonGalleryErrors","confirm_code","expires","prepareFiles","testFile","err_text","getStorageStats","uploadFile","formData","FormData","metadata","voice","processData","deleteFile","file_id","contexts","getOpenGraphData","site","ogp","image_height","image_width","video_url","createMessageFromIQ","mergeContact","$presence","bare_jid","$vcard_update","VCAD_UPDATE","resource_obj","$device","addInitPlugin","func","addConnPlugin","reconn","addFastConnPlugin","acc1","acc2","models","settings_list","getEnabledList","getConnectedList","onAdd","onUpdatedOrder","onListChanged","onAccountDisconnected","onQuitAccounts","onSettingsAdded","last","used_colors","colors","moveBefore","index2","prev_order","at","_updateOrder","moveToBottom","index","toolbar_item","updateConnected","updateAuthState","updateStatus","setActive","filterChats","updateList","updateOneInList","onAccountRemoved","after","resource_right","Collection","r1","r2","p1","p2","requestInfo","$identity","attention_supported","isFeatureSupported","ATTENTION","ns","is_supported","renderByInit","onResourceAdded","onResourceRemoved","onReset","onPriorityChanged","updatePosition","vcard_modal","showEditView","media_gallery_account","onUpdateAvatars","updateStorage","loading_files","current_page","total_pages","current_options","page","getAvatars","getFiles","after_deletion","after_avatar_update","used_storage","total","used","quota","videos","voices","filterType","sorting","order_by","onTabClick","tab_header","backToMain","showDeleteFilesView","gallery_view","sortFiles","sort_type","onClickFile","prev_audio_message","file_url","not_expanded_msg","$msg_element","audio_file_waveform","waveform_id","aud","createAudio","round","getDuration","unAll","timerId","cur_time","getCurrentTime","isPlaying","onchange","setVolume","scrollParent","barWidth","barHeight","cursorColor","autoCenter","normalize","hideScrollBar","progressColor","assign","obj_per_page","current_rendered_type","renderFiles","$gallery_file","media_gallery_account_file","svg_icon","media_type","filesize","created_at","download_only","closeOnContentClick","fixedContentPos","mainClass","verticalFit","titleSrc","zoom","deleteAvatar","enableFilesSelect","onSelectFile","disableFilesSelect","selectFile","$target_input","selected_header","selected_count","deleteSelectedFiles","openStoragePanel","wheelPropagation","delete_files_media_gallery","delete_percent","onRender","onChangeCheckbox","delete_avatars","has_files","deletePercent","percent","current_page_preview","getFilesForDeletion","traditional","renderForDeletion","is_avatar","Boolean","context","dropdown_settings","deleteFilesFiltered","account_settings_modal","status_field","updateBlocks","updateGallery","vcard_view","updateView","showConnectionStatus","updateSynchronizationBlock","updateXTokens","groups","updateGroupsLabel","updateReconnectButton","updateSyncOption","updateDelSettingsButton","updateSyncState","updateEnabled","updateOmemoDevices","updateEnabledOmemo","updateEncryptedChatstates","updateBlockedLabel","blocklist","blocked_count","jumpToBlockHandler","tabs","updateDeviceInformation","backToMenuHandler","backToSubMenuHandler","deselectBlocked","updateNameCSS","$name","wrap_width","font_size","chooseAvatar","openEmojiPanel","openWebcamPanel","changeAvatar","openChangeStatus","unregisterAccount","store","showResources","resource_id","hideResources","renderAllXTokens","devices_count","handled_devices","sortBy","pretty_token","findWhere","toJSON","is_omemo","$cur_token_html","current_token_item_modal","$token_html","token_item_modal","omemo_own_devices","omemo_device_id","updateTrustDevice","_single_account","own_devices","fing","$this_device","generateFingerprint","getBundle","pk","spk","ik","fingerprint","openFingerprint","is_own","openFingerprintDevice","groups_count","mdiclass","$sync_icon","omemo_enable_view","setEnabled","setEnabledOmemo","initOmemo","destroyOmemo","setTypingNotification","openDevicesWindow","omemo_devices","purgeKeys","device_id","bundle","preKeys","removeItemFromNode","OMEMO","showPasswordView","changeSyncSetting","deleteSettings","delete_account","changeColor","showQRCode","qrcode","noBorder","domElement","openBlockWindow","block","blockContact","unblockSelected","single_account_settings_modal","args","status_message_input_widget","global_settings_item_modal","updateNickname","onDragTo","onMoveAccount","onMoveAccountToBottom","updateHtml","change_status","highlightStatus","restoreStatusMessageInput","changeStatus","do_change","clearStatusMessageInput","verbose_status","apply_to_all","changeApplyToAll","avatars_gallery","participant","current_items","current_file","addAvatarSelecter","addNotOwnAvatar","addAvatar","img_from_gallery","createFileFromURL","participant_node","updateMemberAvatar","webcam_panel","registration","registration_view","streaming","startbutton","startupStream","srcObject","getTracks","track","getUserMedia","stream","takePicture","clearPhoto","fillRect","globalCompositeOperation","beginPath","arc","PI","closePath","saveNotOwnAvatar","saveAvatar","member_details_avatar_size","emoji_panel","emoji_panel_view","openEmojiPicker","emoji_picker","readEmojisJSON","emojis","emoji_picker_tabs","pickEmojiTab","tab","pickEmoji","change_password","is_login","authFeedback","getActionName","setPassword","authentication","change_account_password","$old_password_input","$password_confirm_input","password_confirm","password_not_error","$jid_input","updateOptions","at_idx","registerFeedback","registration_success","authStepperShow","getWebsocketURL","DISABLE_LOOKUP_WS","protocol","socket_url","socialAuth","origin","xmpp_login","$domain_input","handleRegistrationStep","stepped_auth_complete","updateDomains","updateAuthDomains","openButtonsMenu","keyUpNickname","openNextStep","keyUpJid","_check_user_timeout","setCustomDomainRegistration","regexp_local_part","regexp_domain","_registration_username","_registration_domain","auth_connection","handleRegisterStanza","auth_conn_manager","checkUserCallback","keyUpPassword","keyUpDomain","keyUpLogin","focusoutDomain","username_taken","_supports_check_user","class","user_success","_check_user_connection_timeout","_no_response","openPreviousStep","step","checkFeaturesStepper","successRegistrationFeedback","registerWithoutAvatar","logoutAndRegister","openRegisterForm","openLoginForm","all_servers","splice","setCustomDomainAuth","$property_value","changePropertyValueRegistration","$property_item","changePropertyValueAuth","timeout_timer","HTTP_UPLOAD","first_features_received","auth_error","add_account","logout","unregister_account","checked_count","submitUnregister","xmpp_login_panel","XmppLoginPanel","Container","Accounts","ToolbarAccountsBlockView","SettingsAccountsModalBlockView","add_account_view","AddAccountView","UnregisterAccountView","change_account_password_view","ChangeAccountPasswordView","delete_files_view","DeleteFilesFromGalleryView","onbeforeunload","login_screen","xabber_login","single_account","supports","renderSingleAccount","addIdentity","LAST","CHATSTATES","BLOCKING","PING","CHAT_MARKERS","ARCHIVE","GROUP_CHAT","namespace","verbose_name","feature","onFeatureAdded","getAllFromCachedFeatures","is_cached","onInfo","onItems","addItem","form_type_val","URLDISCO","media_gallery_url","MEDIAGALLERY","_var","client_feature","client_features","putInCachedFeatures","_last_stanza_handler","_pong_handler","ping","addPingHandler","pong","Worker","downtime","onLine","last_fast_stanza_timestamp","_last_fast_stanza_handler","_fast_pong_handler","_onDiscoInfo","DISCO_INFO","_onDiscoItems","DISCO_ITEMS","Emoji","subscription","subscription_request_in","subscription_request_out","group_chat","onChangedGroupchat","full_jid","server","roster_name","isBlocked","blocked","b64_sha1","updateCachedInfo","is_deleted","out_request","online_members_num","getSubscriptionStatuses","subscription_preapproved","in_request","status_description","status_out_color","status_in_color","status_out_text","status_in_text","status_out","status_in","getIcon","getFromRoster","cached_info","roster_info","in_roster","putInRoster","updateCounters","participants","resetParticipantsList","getBlockedParticipants","getLastSeen","last_seen","getLastSeenStatus","getMyInfo","participantsRequest","properties","cached_avatar","getAvatarInfoById","createFromStanza","my_info","avatar_b64","my_rights","message_time","pres","pushInRoster","ROSTER","group","removeFromRoster","acceptRequest","askRequest","blockRequest","declineRequest","declineSubscription","declineSubscribe","deleteWithDialog","is_group","msg_text","bold","localpart","delete_history","retractAllMessages","deleteFromSynchronization","blockWithDialog","unblockWithDialog","unblock","setActiveStateSendInterval","$msg","_sending_active_chatstate_timeout","_sending_active_chatstate_interval","handlePresence","$group_chat_info","updateGroupChatsList","group_chat_info","parseGroupInfo","prev_group_info","sync_deleted","$status_message","_reset_status_timeout","$group_chat","$model","privacy","$index","$description","pinned_message","prev_pinned_message","private_chat","$online_members_num","pinned_msg_elem","$pinned_message","getMessageByStanzaId","$message","parsePinnedMessage","getAllRights","iq_get_rights","iq_all_rights","all_permissions","all_restrictions","all_rights","permissions","restrictions","stanza_id","receiver","XABBER_CHAT","fast","is_groupchat","filter_image","filter_video","filter_voice","filter_files","opt_var","onStartedMAMRequest","callb","onCompletedMAMRequest","rsm","errb","getFilesFromStanza","cached_stanza_id","references","cached_message","REFERENCE","reference","$reference","$file_sharing","FILES","VOICE_MESSAGE","$file","file_attrs","HASH","uniqueid","has_encrypted_files","renderPinnedMessage","locations","fwd_message","fwd_msg_author","user_info","participant_info","participant_nickname","pinned_msg","author","fwd_author","pinned_msg_html","group_chats","chat_content","height_pinned_msg","resetStatus","searchByParticipants","participants_list","showDetails","details_view","scrolled_top_chats_view","scrolled_top_chat","details_view_right","details_view_right_encrypted","contact_searched_messages_view","hideSearch","showSearchMessages","set_status","getStatuses","updateIcons","ic_name","iq_get_properties","renderStatuses","f","$status_item","status_item","iq_set_status","interval_last","selectView","updateGroupChat","updateIcon","onBlocked","updateStatusMsg","lastSeenUpdated","new_status","is_group_chat","contact_right_item","showJid","hideJid","clickOnItem","contact_left_item","updateDisplayStatus","updateBlockedState","updateMutedState","onResourceUpdated","showVCard","hideVCard","contact_details_right","name_field","contact_edit_view","edit_groups_view","updateNotifications","updateJingleButtons","updateChilds","updateSubscriptions","setButtonsWidth","updateIndicator","keydownHandler","hideEdit","isOpen","openChat","scrollToTopSmooth","animate","widths","button","bottom_block_scroll","is_blocked","is_server","$label_outcoming","$label_incoming","prev","showEdit","voiceCall","initCall","initJingleMessage","deleteContact","unblockContact","muteChat","muted_seconds","mute_type","unmuteChat","$search_form","addContact","changeList","list_name","scrollLeft","addList","_render","constructor_func","requestAuthorization","group_chat_details_right","member_avatar_size","group_chat_properties","group_chat_status","group_chat_properties_edit","default_restrictions_edit_right","hideRestrictions","showRestrictions","is_owner","change_group","clearHistory","head","editProperties","leaveGroupChat","inviteUser","edit_view","getInvitations","deleteGroup","makeSelfie","makeEmojiAvatar","group_status","group_status_right","$target_info","label_name","group_chat_properties_right","hideMoreDescription","all_fixed","saveChanges","has_changes","checked_inp","text_inp","textarea","field_idx","$result","$error","updateInvitations","user","$item_view","invited_member_item","showInviteButton","revokeInvitation","$member_item","member_jid","updateRemoveParticipantButton","revokeInvitationByElement","temporary_items","all_messages_loaded","getMediaFromDecryptedMessages","messagesFileRequest","updateMedia","active","last_rsm_message","loading_messages","loadMoreFiles","block_height","updateForParticipant","delegateEvents","filter_type","fail","cached_messages","getMessages","entries","msg_items","envelope","filtered_items","items_count","filterEncryptedFiles","encryptedFilesHandler","files_count","updateEncryptedMedia","is_loaded","true_voice","media_item","is_encrypted","media_items_empty","messages_count","searched_message","gallery","parents","searched_messages","updateBlockedParticipants","showBlockButton","unblockUser","tag","unblockUserByElement","blockId","onParticipantsUpdated","updateParticipantsList","participant_properties_panel","updateParticipants","setParticipantsListVersion","updateVersion","renderParticipants","renderMemberItem","blockParticipant","kickParticipant","kick","removeParticipantFromList","badge","is_me","pretty_present","present","isValid","fromNow","group_member_item","prependTo","member","getB64Avatar","getHashAvatar","avatar_url","updateCachedAvatars","showParticipantProperties","participant_item","participant_id","keyUpSearch","searchParticipant","participants_right_panel","onParticipantsChanged","kickParticipantDialog","group_member_item_right","showParticipantPropertiesEdit","showNamePanel","changeBackButton","participant_rights","onBadgeUpdated","new_avatar","$member_info_view","is_myself","is_blocked_contact","incognito_chat","private_participant_details","participant_details_item","participant_messages","actual_rights","setActualRights","new_nickname","updateRightsView","messages_view","messagesRequest","changeTimerValue","$input_item","updateBadge","$member_item_nickname","xmlescape","editNickname","editBadge","edit_badge_panel","checkKeydown","checkKeyup","retractUserMessages","retractMessagesByUser","restriction_expire","restriction_item","right_expire_variants","right_name","expire_options","getPrivateChat","participant_jid","participant_in_roster","iq_response","group_jid","createSystemMessage","private_chat_jid","changeRights","$right_item","saveRights","member_id","$participant_avatar","nickname_value","changed_avatar","rights_changed","iq_changes","right_item","right_expire","iq_rights_changes","participant_details_right","private_participant_details_item_right","participant_details_item_right","participant_name_field","participant_badge_field","hidePanel","resetPanel","changeName","changeBadge","clickAvatarInput","url_forced","setVisibility","$current_restriction","new_badge","badge_edit_view","typeEmoticon","_timeout","$insert_emoticon","$emoji_panel_wrap","$emoji_panel","$emoji_list_wrap","sprite","tag_name","saveNewBadge","emoji_node","checkKey","default_restrictions","actual_default_restrictions","showDefaultRestrictions","restriction_name","restriction_expires","restriction","changeRestriction","changePropertyValue","iq_change_default_rights","has_new_default_restrictions","changeExpiresTime","expire_time_item","new_expire_time","$restriction_item","default_restrictions_right","getBase64Avatar","getParticipantsListVersion","getCachedParticipants","getParticipantsList","mergeParticipant","resetParticipants","getRights","rights","pretty_rights","issued_time","expires_time","updatePinnedMessage","$response","photo_url","updateParticipant","participants_lists","all_participants_lists","participants_list_idx","chat_participants","participant_idx","setParticipantsList","updated_participants_list","invitation","closeChat","readMessages","blockInvitation","contact_jid","iq_get_blocking","iq_unblocking","iq_set_blocking","iq_blocking_items","item_jid","getDefaultName","group_name_input_widget","force_reset","description_input_widget","changeDescription","onUpdate","all_groups","notSpecial","groups_checkbox_list","groups_list","groups_new_group","on_add","_update_template","removeGroup","group_name","removeLastGroup","editGroup","_hide_timeout","checkNewGroup","keyupAddNewGroup","addNewGroup","keydownAddNewGroup","focusinAddNewGroup","focusoutAddNewGroup","edit_contact","updateStatuses","statuses","status_out_class","status_in_class","requestSubscription","allowSubscription","cancelSubscriptionRequest","handleSubscriptionRequest","cancelSubscriptionOut","cancelSubscriptionIn","edit_group","group_name_field","group_description_field","restrictions_count","showMembershipProperty","showIndexProperty","showDescriptionProperty","hideProperty","invitations","actionSelectedParticipants","deselectParticipants","selectParticipant","is_selected","inv_count","showPanel","original_data_form_values","data_form_index","findIndex","changeMembership","membership_text","membership","changeIndex","index_text","onContactChanged","contact1","contact2","s1","s2","sw1","sw2","sw1_offline","name1","name2","settings_view","updateCounter","onContactRemoved","onChangedRosterSettings","isSpecial","where","renameGroup","new_name","removeContact","updateGroupIcon","updateMembersCounter","onContactAdded","updateContactItem","onChangedOfflineSetting","onChangedSortingSetting","updateExpanded","expanded","mdi_icon","show_offline","roster_settings","group_settings","is_default_show_offline","is_offline","showSettingsIcon","showGroupSettings","group_right","group_left","setOffline","validateName","applySettings","name_error","onGroupAdded","acc_view","onGroupAddedSingleAccount","rendered_once","removeAllContacts","collections","updateInCollections","addCollection","hasOwnProperty","registerHandler","onBlockingIQ","getFromServer","roster_version","addContactToGroup","known_changed","in_roster_changed","groups_changed","groups_to_remove","getGroup","onRosterIQ","syncFromServer","synchronization_with_stamp","is_first_sync","request_attrs","cached_conversations_exclude","onSyncIQ","last_version_sync","syncCachedConversations","request_with_stamp","cached_conversations","syncConversation","conversation","parseXML","saved","conv","account_conversation_type","removeFromCachedConversations","SYNCHRONIZATION_OLD_OMEMO","$sync_metadata","$group_metadata","is_incognito","is_private","SYNCHRONIZATION_OMEMO","current_call","$unread_messages","chat_timestamp","last_read_msg","last_delivered_msg","last_displayed_msg","unread_msgs_count","is_invite","msg_retraction_version","synced_msg","current_chat_timestamp","retracted_msg_id_list","putInCachedConversations","last_message","updateEncryptedChat","updateMutedList","$jingle_message","getCallingAvailability","reason","sendReject","initIncomingCall","sync_update","updateEmptyChat","is_unread","delay","sync_timestamp","messages_unread","isSenderMe","is_last_sync","sync_rsm_after","last_chat_msg_id","conversations_loaded","last_sync_timestamp","getAllFromCachedConversations","retract_version","sync_options","getRoster","request_ver","getAllFromRoster","roster_items","ver","new_roster_version","iq_type","onRosterItem","is_version","to_send_available","known","onGroupRenamed","onGroupRemoved","updateGroupPosition","group_view","old_name","account_roster_right","updateGlobalCounter","account_roster_left","hashes","updateTabsLabel","selectUnblock","updateUnblockButton","unblockContactByJid","hideEmptyContainers","rendered","tmp","contact_blocked_item","domains","contact_label_text","domains_label_text","invitations_label_text","updateOneRosterView","updateRosterViews","removeRosterView","account_roster_view","roster_left","updateLeftIndicator","getContactForItem","account_jid","roster_view","setOfflineSetting","setSortingSetting","$parent_el","contact_placeholder","onPlaceholderUpdate","add_contact","group_data","updateGroups","renderAccountItem","bindAccount","renderGroupsForAccount","stepForward","add_contact_account_item","silent","groups_checkbox_list_contact","selectAccount","checkJid","force_opened_state","custom_notifications","message_preview","pinned","general_group_name","non_roster_group_name","ModelWithDataBase","put","response_value","get_all","clearDataBase","clear_database","delete_database","getFromCachedConversations","getFromCachedFeatures","removeFromCachedFeatures","objStoreName","primKey","roster_item","_roster_settings","RosterSettings","contacts_view","RosterLeftView","contact_container","details_container","ContactPlaceholderView","add_contact_view","AddContactView","msgid","updateUniqueId","destroyOnEcho","removeMessage","forwarded_message","getState","getVerboseState","handleEphemeralMessage","putMessage","ephemeral_removed","checkEphemeralTimer","date","msgDate","getTime","time_difference","ephemeral_timeout","checkEphemeralTimers","displayed_time","createInvitationFromStanza","is_private_invitation","$delay","markable","archive_id","origin_id","$group_info","group_info_attributes","carbon_copied","is_archived","is_forwarded","contact_stanza_id","synced_invitation_from_server","parent_chat","auth_request","invite","private_invite","is_accepted","replaced","forwarded","sid","context_message","is_unread_archived","participant_message","echo_msg","EPHEMERAL","cached_msg","getMessage","is_between_anchors","not_encrypted","not_verified_device","not_verified_device_no_device","link_references","is_trusted","begin","MARKUP","$mention","child_ref","$geolocation","GEOLOC","loc_attrs","lat","lon","OGP","$ogp","link_reference_attrs","original_text","getFileType","x_elem","$user","user_id","user_jid","groupchat_jid","is_sender","participants_version","WEBCHAT","addresses","ADDRESS","$address","only_emoji","synced_from_server","missed_history","missed_msg","pinned_messages","searched_in_contact_messages","context_messages","msg_contact","ephemeral_timer","filereader","exportedMasterKey","enc_file","readAsArrayBuffer","getFilename","url_media","lastIndexOf","full_type","ephemeral_timer_selector","updateSelectedTimer","changeTimer","contact_full_jid","volume_on","video_in","video_screen","video_live","registerIqHandler","audio_notifiation","call_initiator","modal_view","RTCPeerConnection","iceServers","sdpSemantics","$remote_video_el","$remote_audio_el","$local_video","current_timer","onconnectionstatechange","onChangeConnectionState","onChangedMediaType","ontrack","remote_stream","streams","_waiting_timeout","onicecandidate","onIceCandidate","oniceconnectionstatechange","onChangeIceConnectionState","setEnabledAudioTrack","onChangedVideoValue","setEnabledVideoTrack","setEnabledScreenShareVideoTrack","onChangedRemoteVideo","onChangedVolume","iq_handler","onIQ","updateTimer","startTimer","call_timer","peer_conn","conn_state","connectionState","_timeout_failed","restartIce","ice","candidate","sendCandidate","iceConnectionState","incoming_video","local_stream","getAudioTracks","default_video","getSenders","sender","createVideoStream","getVideoTracks","stopTracks","createScreenShareVideoStream","video_state","sendVideoStreamState","getDisplayMedia","media_stream","addTrack","replaceTrack","$iq_video","$jingle_initiate","$jingle_accept","$jingle_info","$jingle_video","$result_iq","offer_sdp","JINGLE_RTP","setRemoteDescription","RTCSessionDescription","sdp","acceptSession","answer_sdp","addIceCandidate","RTCIceCandidate","sdpMLineIndex","sdpMid","startCall","createAudioStream","propose","video_track","initVideoTrack","removeTrack","$propose_msg","media","HINTS","$accept_msg","$reject_msg","call_attrs","initiator","p","getImageData","requestAnimationFrame","draw","putImageData","captureStream","createOffer","offerToReceiveAudio","offerToReceiveVideo","offer","setLocalDescription","$iq_offer_sdp","JINGLE","action","creator","JINGLE_SECURITY_STUB","$iq_candidate","JINGLE_TRANSPORTS_ICE","createAnswer","answer","$iq_answer_sdp","opened","display","displayed_sent","last_displayed_id","last_delivered_id","unread","const_unread","sync_created","onContactDestroyed","onChangedContact","onChangedTimestamp","onChangedLastReadMsg","_no_scrolling_event","is_first","requestHistoryBetweenAnchors","read_count","message_item","_long_reading_timeout","scrollToUnread","recountUnread","setEphemeralTimer","resetUnread","sendDataForm","variable","setStanzaId","updateMessage","msg_to","showEphemeralTimerSelector","endCall","receiveMessage","from_bare_jid","$marker","$receipt_request","RECEIPTS","$receipt_response","$jingle_msg_propose","$jingle_msg_accept","$jingle_msg_reject","receiveNoTextMessage","iq_to","jingle_start","reject_contact_stanza_id","busy_audio","$stanza_id","$contact_stanza_id","marker_tag","is_mam","sendMarker","receiveMarker","receiveCarbonsMarker","sendDeliveryReceipt","receiveDeliveryReceipt","last_blocking_timestamp","current_timestamp","has_blocking","blocking_timestamp","mention_context","stanza_id_context","omemo_dfd","msg_options","$delivery_msg","msg_id","is_ephemeral","by","EXPLICIT_MESSAGE_ENCRYPTION","$displayed","$received","marked_msg_id","marked_stanza_id","msg_state","delivered_time","setMessagesDelivered","setMessagesDisplayed","enc_chat","enc_msg","undelivered_messages","last_read_msg_id","second_deferred","new_last_read_msg","unread_msg","delivered_origin_id","delivered_stanza_id","onRosterPush","retractMessages","symmetric","msgs_responses","num","iq_retraction","getConversationType","user_msgs","retract_attrs","all_messages","showBlockedRequestMessage","muted_value","conversation_options","mute","SYNCHRONIZATION_REGULAR_CHAT","message_counter","content_placeholder","updatePinned","updateArchivedState","updateGroupChats","updateEncrypted","updateChatError","updateActiveStatus","onClosed","updateChatCard","onMessageRemoved","onChangedMessageState","updateIncomingSubscription","updateAcceptedStatus","removeInvite","updateEncryptedColor","new_message","updateTextClipping","error_msgs","indicators_count","is_pinned","archived","deletePlayersFromMessage","players","msg_time","is_empty","italics","bottom","draft_message","msg_from","msg_files","msg_images","msg_locations","msg_user_info","$colored_span","is_audio","total_size","first_forwarded_msg","fwd_msg_files","fwd_msg_images","fwd_msg_locations","fwd_msg_txt","openByClick","click_counter","setDefaultPlaceholder","onChatRemoved","loading_history","history_loaded","first_msg_id","last_msg_id","wheel_ev","defineMouseWheelEvent","onMouseWheel","backToBottom","onwheel","onmousewheel","keyupSearch","renderSearchPanel","onClickMessage","onClickLink","onClickLocationLink","onClickLocation","onHoverLocation","emptyChat","addMessageHTML","last_index","scrolled_from_top","scrolled_from_bottom","$next_message","nextAll","updateMessageInChat","initPopup","$history_feedback","addMessage","onChangedReadState","onUpdatePlyr","originalEvent","deltaY","first_history_loaded","last_history_loaded","_scrollbottom","showHistoryFeedback","hideHistoryFeedback","_onscroll_read_messages_timeout","readVisibleMessages","msg_item","buildMessageHtml","findLastIndex","slideToggle","chat_content_contact","loading_timestamp","loaded_messages","message_count","showMessageAuthor","member_nickname","subscription_buttons","hideElement","sendAndAskSubscription","current_day_indicator","_pending_avatars","updateContentColorScheme","onMessage","_is_scrolled_bottom","onChangedActiveStatus","onChangedIdleStatus","loadLastHistory","requestMissedMessages","onChangedMessageTimestamp","onTrustedChanged","onSubscriptionChange","updateMsgsMissingDevices","updateMyInfo","updateMsgsDeviceTrusting","cancelSearch","updateContactStatus","updateWaveforms","getPeer","fingerprints","updateMyName","updateMyStatus","updateMyAvatar","trust","peer","trusted","_loading_history","loadPreviousHistory","backend","drawBuffer","sendChatState","showChatNotification","is_context","last_visible_unread_msg","readMessage","hideMessagesAfterSkipping","synced_message","$synced_message","last_visible_msg","$last_visible_msg","_read_last_message_timeout","unread_context_messages","showUnreadMarker","unread_marker","$last_read_msg","mam_query","getMessageArchive","unread_history","scrollToUnreadWithButton","showDayIndicator","is_focused","indicator_idx","opacity_value","$chatday_indicator","$messages","marker","indicator","scroll_read_timer","removeAllMessagesExceptLast","_interval","is_saved","sendMAMRequest","func_conn","_delete_handler_timeout","send_counter","previous_history","_load_history_timeout","unread_history_first","first_unread_msg_stanza_id","unread_history_before","last_history","_wait_load_unread_history","last_archive_id","loadUnreadHistory","is_error","_load_history_feedback_timeout","showPinnedMessage","unpinMessage","pinned_msg_modal","imageOnload","$image_container","$copy_link_icon","videoOnload","initPlyrEmbedPlayer","OGPLinkOnload","locationOnload","$copy_location_div","loadLocationInChat","ol","$map_element","Map","center","proj","transform","interactions","interaction_defaults","altShiftDragRotate","doubleClickZoom","keyboard","mouseWheelZoom","shiftDragZoom","dragPan","pinchRotate","pinchZoom","layers","layer","Tile","OSM","mapCanvas","getSize","mapContext","querySelectorAll","globalAlpha","matrix","CanvasRenderingContext2D","setTransform","Path2D","getComputedStyle","translate","msSaveBlob","msToBlob","getElementById","dataURL","setTarget","$chat_state","$subtype","showChatState","_chatstate_show_timeout","_current_composing_msg","updateMentions","mention_target","is_scrolled_to_bottom","startGalleryUploadFile","startUploadFile","notifyMessage","archiveChat","is_scrolling_needed","attentionMessage","_pending_my_info","decryptImages","force","fwd_msg","$prev_message","$one_image","$collage_image","initMagnificPopup","initZoomGallery","getImagesInformation","servers","delegate","closeBtnInside","opener","$new_message","short_datetime","new_title","messages_to_save","$message_in_chat","content_view","removeMessageFromDOM","next","manageSelectedMessages","_clearing_history","dialog_message","fontcolor","hideShowCursor","is_popup","createImageGrid","template_for_images","hidden_images","is_video","is_image","is_location","is_file","avatar_id","from_id","audio_player_list","verbose_state","short_time","classes","matching_markup","exec","saved_main","searched","file_upload","ephemeral_timer_text","main","is_contact_trusted","$img_html","createImage","img_content","createImageContainer","video_content","createVideoContainer","video_el","createVideo","template_for_file_content","copied_attrs","mdi_icon_class","audio_file","audio_player","contact_avatar","file_","upload_id","loading_circle","maxHeight","maxWidth","imgHeight","imgWidth","file_loading","template_for_location_content","location_attrs","template_for_link_reference_content","link_references_attrs","youtube_url_regexp","vimeo_url_regexp","link","site_name","link_reference_chat","$img_html_forward","is_image_forward","images_forward","is_forward_video","is_forward_file","is_forward_location","fwd_markup_body","$f_message","is_fwd_voice_message","fwd_messages_count","fwd_messages_link","img_content_forward","embed_video","getDateIndicator","day_date","msg_players","msg_videos","existing_player","message_id","video_id","hideMessageAuthor","pending_avatar","data_avatar","hideFwdMessageAuthor","showFwdMessageAuthor","$fwd_message","msg_elem","$prev_msg","fwd_msg_item","is_system","is_same_sender","is_same_date","$fwd_msg_item","$prev_fwd_message","notification_text","onclick","sendMessage","legacy_body","legacy_fwd_msg","createTextMessage","idx_begin","fwd","idx_end","mention_attrs","blockquote","all_files","created","u","link_reference","property","chat_hash_id","SCE","CLIENT","msg_sending_timestamp","msgCallback","was_reconnecting","has_reconnected","_pending_time","saveForwardedMessage","forwarded_messages","onSubmit","fwd_messages","markup_references","attached_files","submitted_here","_dfd_info","new_fwd_messages","upload_service","checkContactFingerprints","addFileMessage","is_voice","new_files","file_counter","http_upload_service","deferred_all","addFileSnippets","encrypted_file","encryptFile","new_file","$slot","get_url","put_url","onFileNotUploaded","xhr","abort","onabort","upload","onprogress","percentage","loaded","onFileUploaded","cancelled_files_count","xhr_requests","msg_files_count","is_errored","arrayIndex","is_uploading","setEditedMessageAttachments","setRedactedUploadMessage","is_cancelled","oncancel","xhr_status","fakeStatus","fakeResponse","slot_response","setRequestHeader","response_text","error_status","statusText","err_status","files_","file_new_format","imgContent","video_attrs","$video_wrap_template","error_type","deleteFilesFromMessages","_chatstate_timeout","_chatstate_send_timeout","chat_state","EXTENDED_CHATSTATES","$next_msg","$old_prev_msg","is_synced","is_missed_msg","onTouchMessage","fwd_link_references","files_links","location_links","download","$plyr","no_select_message","expanded_fwd_message","quill","caret_position","participant_attrs","insertMention","img_information","images_details","$imgs","processClick","$prev_selected","$all_msgs","nextUntil","location_name","display_name","retrySendMessage","removeFileErrorMessage","chat_content_placeholder","pinned_message_panel","onClickPinnedMessage","onClickExpandedMessageLocation","expandFwdMessage","registerQuillEmbeddedsTags","Inline","import","Mention","static","paramValue","super","on_format","classList","blotName","optimize","item1","item2","t1","t2","mam_requests","deferred_mam_requests","openMention","identifier","registerMessageHandler","_msg_handler","runMAMRequests","parsePubSubNode","is_member_id","receivePubsubMessage","photo_id","member_node","b64_avatar","avatar_attrs","$mam","receiveHeadlineMessage","receiveErrorMessage","$stanza_received","$echo_msg","origin_msg_id","pending_message","$token_revoke","token_idx","settings_right","participant_version","active_right_screen","participant_msg_item","$retracted_msg","retracted_msg_id","retracted_user_id","receiveStanzaId","GROUP_CHAT_INVITE_HTTP","GROUP_CHAT_INVITE","$forwarded","to_jid","to_bare_jid","to_resource","stanza_ids","$carbons","carbon_direction","forwarded_msgs","FORWARD","forwarded_msg","$forwarded_msg","$forwarded_message","$forwarded_delay","add_group_chat","ACCOUNT_ITEM","setDefaultSettings","$global_wrap","default_global_value","$membership_wrap","default_membership_value","setCustomDomain","add_chat_account_item","updateGroupJid","lower","textarea_is_empty","fixJid","createGroupChat","chat_jid","addGroupChat","xmpp_server","group_chats_support","chats_panel","active_chat","onChatAdded","onChangedReadStatus","updateChatPosition","readAllMessages","onWindowResized","active_toolbar","hideChatsFeedback","_load_chats_timeout","previous_chat","replaceChatItem","pinned_chats","$chat_item","scrolled_top","updateScreenAllChats","force_bottom","current_scrolling","scrolled_to_bottom","showGroupChats","group_chats_pinned","showChats","private_chats","private_chats_pinned","account_chats","account_chats_pinned","showArchiveChats","archive_chats","saved_chats","notificatons_chats","all_chats","all_chats_pinned","forward_panel","$cloned_item","is_match","has_matches_chats","has_matches_contacts","contact_list_item","forwardTo","setForwardedMessages","invitation_panel_view","registerClickEvents","selected_contacts","clearPanel","group_node","list_item","toggleContacts","selectAllGroup","addSelectedUsers","selected_users_count","_dfd_invitations","invitations_count","toast_text","sendInvite","showReasonWrap","addUser","itemIdx","reason_text","sendInviteMessage","onInviteError","jid_to","hide_clone","is_visible","group_roster","selected_counter","saved_chat_head","_update_oneliner_interval","updateOneLiner","hideChat","updatePlyrTitle","updatePlyrTime","updateJingleButton","tooltip","rand_idx","one_liner","deleteChat","rewrite_support","pinSavedChat","pinned_value","visible_view","playPausePlyr","stopPlyr","popupPlyr","poster","$title_elem","voip_status","openJingleMessage","chat_head","resources_view","updateArchived","pinChat","onChangedBlocked","updateGroupChatHead","updateMenu","showContactDetailsRight","showContactResources","showMembersDetails","callAttention","updateArchiveChatsList","no_iq","is_archived_status","sendJingleMessage","getActiveScreen","active_screen","inviteUsers","exportHistory","showFingerprints","startEncryptedChat","openEncryptedChat","openRegularChat","send_media","addMedia","resolved_file","location_popup","initMap","coordinates","placemark","Overlay","Placemark","contentColor","autoPan","anchor","autoPanAnimation","placemark_my_location","overlays","enableHighAccuracy","maximumAge","pos","crd","getView","setCenter","longitude","latitude","setZoom","button_geoposition","geolocation","getCurrentPosition","custom_element_position","geoposition","control","Control","addControl","getPlacemarkPositionControl","button_placemark_position","custom_element_placemark_position","placemark_position","custom_element_show_location_name","show_location_name","send_buttom","send_address_div","send_div","custom_element_send","sLayer","Vector","Style","Circle","radius","stroke","Stroke","Fill","addLayer","SearchNominatim","polygon","reverseGeocode","house_number","road","neighbourhood","allotments","village","city","final_text","getSource","clear","geojson","GeoJSON","readFeature","dataProjection","featureProjection","getProjection","resolution","getResolutionForExtent","getGeometry","getExtent","getZoomForResolution","extent","getCenter","coordinate","getZoom","updateSize","sendLocation","closeLocationName","initializeScrollbar","destroyScrollbar","chat_bottom","mention_avatar_size","rich_textarea_wrap","bindings","enter","insertText","arrow_up","active_item","$prev_elem","arrow_down","$next_elem","arrow_left","arrow_right","modules","formats","scrollingContainer","edit_message","stopped_loading_link_reference","link_reference_exempted","currently_loaded_link_references","loading_link_reference","onChangedText","onBlockedUpdate","updateInfoInBottom","updateEphemeralTimer","replyMessages","forwardMessages","copyMessages","deleteMessages","showEditPanel","pinMessage","resetSelectedMessages","$rich_textarea","rich_textarea","$rich_textarea_wrap","$placeholder","oncut","onCut","window_onclick","$target_emoji","renderLastEmoticons","http_upload","messages_arr","focusOnInput","checkOwnFingerprints","is_scrolled_bottom","encryption_warning","unverified_counter","content_encryption_warning","onClickBottom","setOneLiner","disable","enable","moveCursorToEnd","root","lastElementChild","lastChild","send_on_enter","shiftKey","ctrlKey","displayMicrophone","displaySend","updateMarkupPanel","$ic_markup","updatePlaceholder","changeEncryption","current_height","quill_textarea","quill_current_height","text_input_height","quill_content","getContents","ops","insert","trimmed_text","setContents","bottom_height","_timeout_textchange","updateOpenGraphReference","updateMentionsList","mention_text","mention_item","mention_all","onMentionButtonClick","getLength","setSelection","inputMention","$participant_item","lastRange","to_caret_text","mentions_at","matchAll","mentions_plus","at_position","plus_position","mention_position","deleteText","insertEmbed","showAccountSettings","edit_msg","setEditedMessage","mention_at_regexp","mention_plus_regexp","getLeaf","domNode","unsetForwardedMessages","removeLinkReferenceByUrl","removeFileSnippetById","clipboard_data","image_from_clipboard","getAsFile","difference","request_count","link_reference_request_timestamp","request_timestamp","removeAttachments","removeAllFileSnippets","removeAllLinkReferences","stopLoadingLinkReference","removeLinkReference","uid","attached_file","typeicon","removeFileSnippet","is_upload","showLocationPopup","showMediaPopup","stopWritingVoiceMessage","$bottom_panel","writeVoiceMessage","initAudio","mozGetUserMedia","msGetUserMedia","webkitGetUserMedia","constraints","channelCount","chunks","$mic","onSuccess","start_time","end_time","mediaRecorder","encoderPath","encoderSampleRate","numberOfChannels","mic_hover","onstart","$timer_elem","$status_msg","$voice_visualizer","timerIdDot","onstop","audio_name","audio_type","ondataavailable","onError","caret_idx","savedRange","getFormat","formatText","cached_last_emoji","getLastEmoji","$last_emoticons","updateLastEmoji","$target_text","forced","emoji_item","innerText","content_concat","content_attrs","mention_idx","ins","quote_start_idx","quote_end_idx","markup_ref","start_length","delta","markup_reference","editMessage","failed_files","file_check_dfd","pluck","arr_text","setText","msg_author","image_preview","$img_html_preview","fwd_images","fwd_files","fwd_locations","createPreviewImage","onShowMarkupPanel","$clicked_icon","is_panel_opened","$selected_msgs","$input_panel","$message_actions","my_msg","$msgs","dataset","pushMessagesToClipboard","text_markups","original_body","forwarded_body","groupchat_ref","forward_ref","gc_length","decrypted_msg","on_rewrite","my_msgs","symmetric_deletion","copied_messages","fwd_msg_indicator","text_message","current_date","msg_sender","is_colored","current_bottom","chat_placeholder","last_emoji","cached_avatars","group_chat_members_lists","last_emoji_icons","muted_list","archived_list","group_chat_list","avatar_list","deleteTimedHandler","_get_msg_handler","addTimedHandler","handlers","h","omemo_enable_placeholder","onselectstart","metaKey","Chats","opened_chats","OpenedChats","closed_chats","ClosedChats","chats_view","ChatsView","ChatHeadContainer","chat_body","ChatBodyContainer","chat_body_placeholder","ChatBodyPlaceholderContainer","ChatBottomContainer","ChatPlaceholderView","add_group_chat_view","AddGroupChatView","searching","searching_wide","colorUpdated","toggleProperties","endDiscovering","isPropertiesVisible","discover","searchExistingGroupChats","getGroupchatService","onDiscoveringError","getGroupchatFeatures","getServerInfo","getChatsFromSever","$chat_item_html","existing_groupchat_item","searching_account_item","getChatProperties","request_iq","$iq_response","chat_properties","more_info_view","existing_groupchat_details_view","joinChat","getSearchingFields","iq_get","INDEX","parseSearchingFields","iq_result","$fields","XDATA","supported_fields","indexed_chats","iq_search","anywhere","onSearched","$chat","$property","property_name","property_value","discovering","DiscoveringView","onMessageUpdated","onMentionAdded","mentions_panel","active_mention","onMentionRemoved","updateMentionPosition","replaceMentionItem","$prev_el","$next_el","readAllMentions","contact_archive_id","previous_mention","updateContactName","contact_name","default_avatar","mentions_placeholder","Mentions","mentions_view","MentionsView","MentionsPlaceholderView","shift_pressed","shiftctrl_pressed","updateLayout","updateContainersLayout","panel_width","left_panel_width","right_panel_width","right_contact_panel_width","chat_bottom_panel_width","is_wide","is_narrow","toolbar_accounts_heigth","right_contact_panel_styles","right_contact_panel_saveable","wide","placeholders","path_acc_settings_modal","ViewPath","path_chat_head","path_chat_body","path_chat_body_placeholder","path_chat_bottom","path_group_invitation","path_enable_view","path_contact_details_right","path_contact_details_right_encrypted","path_participant_messages","path_details_participants","discovering_main","details","details_content","omemo_item","KeyHelper","SignalProtocolAddress","SessionBuilder","SessionCipher","updateDevices","d","removeSession","getDevice","getDevicesNode","_pending_devices","_dfd_devices","cb","parseUserDevices","enc_promises","aes","deviceId","ciphertext","preKey","is_own_devices","renderOwnDevices","renderDevices","updateFingerprints","updateOwnFingerprint","getMyDevices","editLabel","saveLabel","onblur","onkeydown","publishDevice","$container","f_count","old_fingerprint","addRow","getBundleInfo","getIdentityKeyPair","pubKey","padStart","trustDevice","is_session_initiated","ignoreDevice","delete_button","edit_setting","fingerprint_item","deleteDevice","fingerprints_devices","renderTrustOnFingerprint","$warning_container","untrusted_count","device_icons","fingerprint_devices_item","getIdentity","generateIdentity","getPreKeys","publishBundle","generateIdentityKeyPair","generateRegistrationId","identityKey","registrationId","cacheIdentity","privKey","generatePreKeys","preKeysPromises","generatePreKey","generateSignedPreKey","getSignedPreKey","keyPair","signature","keyId","prekeys","getAll","prekey","priv_pk","key_pair","storePreKey","getUsedPreKeys","storeSignedPreKey","own_used_prekeys","identity","signedPreKey","cacheSignedPreKey","converted_spk","closeSession","sendOptOut","_pending_bundle","_dfd_bundle","$bundle","$spk","$pk","getRandomPreKey","cipherText","plainText","sessionCipher","decryptPreKeyWhisperMessage","hasSession","getCachedSession","storeSession","decryptWhisperMessage","getPreKey","used_prekeys","getSession","getDeviceId","cached_pk","isTrusted","processPreKey","publicKey","preKeyBundle","sessions","onDeviceIdUpdated","onOmemoDestroyed","peers","generateDeviceId","onOwnDevicesUpdated","removePreKey","cacheSession","storeSessions","deleteOwnDevice","addDevice","_pending_own_devices","_dfd_own_devices","contact_fingerprints","cacheRetractVersion","getRetractVersion","dev_id","rand","encryptedMessage","encryptedElement","myKeys","rid","kex","hasChanges","o1","o2","obj1","obj2","has_devices","device_ik","getTrusted","decryption_retry","own_trusted","contact_trusted","parseEncrypted","$encrypted","$payload","$header","keyElement","$m","encryptedData","ownPreKey","exportedKey","toBase64","publish","pks","conn_omemo","configNode","spks","removed_pk","prekeys_id_list","prekeys_length","last_id","missing_keys","used_last_id","NaN","isEmpty","used_prekeys_id_list","rec","device_attrs","createBundleNode","contact_messages","Direction","SENDING","RECEIVING","getLocalRegistrationId","defaultValue","isTrustedIdentity","direction","util","loadIdentityKey","saveIdentity","fromString","existing","getName","loadPreKey","loadSignedPreKey","removeSignedPreKey","loadSession","record","getAllSessions","removeAllSessions","omemo_enable","onOmemoChange","enableOmemo","closeOmemoPlaceholder","views","api_service","discovery","ui","g","webpackAsyncContext","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","amdO","O","chunkIds","notFulfilled","Infinity","fulfilled","j","every","n","getter","__esModule","getPrototypeOf","mode","def","current","getOwnPropertyNames","definition","defineProperty","enumerable","chunkId","promises","miniCssF","globalThis","hmd","l","script","needAttach","scripts","s","charset","nc","onScriptComplete","doneFns","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","currentScript","baseURI","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}