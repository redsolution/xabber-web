{"version":3,"file":"xabber.main.js","mappings":"UAAIA,ECCAC,EADAC,ECAAC,EACAC,E,8DCDJ,kq2C,6DCAA,muZ,6DCAA,oR,6DCAA,25D,6DCAA,wsE,6DCAA,igC,6DCAA,kqE,4DCAA,moB,6DCAA,uxH,6DCAA,2jF,6DCAA,iT,6DCAA,kuB,4DCAA,iY,6DCAA,ulB,6DCAA,owK,6DCAA,w4F,6DCAA,k6B,2DCAA,o2B,6DCAA,s9uC,6DCAA,yP,6DCAA,m7B,6DCAA,6iB,6DCAA,45E,6DCAA,0sC,6DCAA,m7lB,6DCAA,8qJ,6DCAA,62D,6DCAA,i2C,6DCAA,gwI,6DCAA,y5C,6DCAA,q9E,6DCAA,0pE,4DCAA,w9B,6DCAA,ue,6DCAA,4a,6DCAA,g6E,6DCAA,we,6DCAA,quC,6DCAA,8S,6DCAA,2K,6DCAA,47pD,6DCAA,47uC,6DCAA,s1I,6DCAA,uS,6DCAA,2pO,6DCAA,u6C,4DCAA,6hD,6DCAA,8H,6DCAA,qvM,6DCAA,06D,4DCAA,yF,6DCAA,oxD,6DCAA,8K,6DCAA,6S,6DCAA,kT,6DCAA,24B,6DCAA,ijM,4DCAA,2+B,6DCAA,8T,6DCAA,iE,6DCAA,sgB,6DCAA,6V,6DCAA,ivC,6DCAA,mkB,6DCAA,oR,6DCAA,mwB,6DCAA,of,6DCAA,oZ,6DCAA,28E,6DCAA,muC,6DCAA,2xB,6DCAA,+Z,6DCAA,kpB,6DCAA,20B,6DCAA,6jC,6DCAA,2jD,6DCAA,w8B,6DCAA,u/C,6DCAA,0qE,6DCAA,6e,6DCAA,0J,6DCAA,8yF,6DCAA,4hB,6DCAA,uhC,6DCAA,oY,4DCAA,yjB,6DCAA,y3B,6DCAA,+nC,6DCAA,87C,6DCAA,slE,6DCAA,woB,6DCAA,iE,6DCAA,qzG,6DCAA,ghE,6DCAA,8hB,6DCAA,8H,6DCAA,myB,6DCAA,6yB,6DCAA,q1E,6DCAA,yS,6DCAA,8U,6DCAA,iR,6DCAA,0/I,6DCAA,2R,6DCAA,4F,6DCAA,oS,6DCAA,y3H,4DCAA,guU,6DCAA,kX,6DCAA,6zB,6DCAA,yrB,6DCAA,g3C,6DCAA,0Q,6DCAA,0C,6DCAA,qjK,6DCAA,o0L,6DCAA,q4F,6DCAA,qoG,6DCAA,+tK,6DCAA,oxD,6DCAA,0xE,6DCAA,wmB,6DCAA,ga,6DCAA,6pB,6DCAA,y2B,6DCAA,0kB,6DCAA,8iB,6DCAA,q1I,6DCAA,8kO,4DCAA,ysF,6DCAA,wH,6DCAA,ulD,6DCAA,06C,6DCAA,u9B,6DCAA,4uD,6DCAA,mvE,6DCAA,iY,6DCAA,8jB,6DCAA,i0B,6DCAA,yL,6DCAA,qV,6DCAA,6R,6DCAA,q6E,6DCAA,0T,6DCAA,2d,6DCAA,46B,6DCAA,4X,6DCAA,+e,6DCAA,gsD,6DCAA,oQ,4DCAA,4Z,6DCAA,ygD,6DCAA,4mB,6DCAA,u6D,6DCAA,slB,6DCAA,sgD,6DCAA,2F,6DCAA,+hE,6DCAA,kX,4DCAA,kH,6DCAA,ouG,6DCAA,+mC,6DCAA,g7B,6DCAA,u0B,6DCAA,ggC,6DCAA,+3B,6DCAA,iuC,6DCAA,o3B,6DCAA,ogC,6DCAA,88B,6DCAA,g3B,6DCAA,soC,6DCAA,ytC,6DCAA,0pC,6DCAA,k8B,6DCAA,qpC,6DCAA,qnD,6DCAA,qiC,6DCAA,m9B,4DCAA,s6B,6DCAA,koC,6DCAA,s7B,6DCAA,ioC,6DCAA,o3B,6DCAA,qrB,6DCAA,uoB,6DCAA,2hB,6DCAA,2iB,6DCAA,2nB,6DCAA,yjB,6DCAA,6sB,6DCAA,qsB,6DCAA,uuB,6DCAA,utB,6DCAA,8vB,6DCAA,ovB,6DCAA,ixB,6DCAA,2vB,6DCAA,gwC,6DCAA,i8B,6DCAA,w0B,4DCAA,izB,6DCAA,o3B,6DCAA,klB,6DCAA,0uB,6DCAA,yxB,6DCAA,k+B,6DCAA,6lC,6DCAA,01B,6DCAA,6tC,6DCAA,wyB,6DCAA,2uB,6DCAA,isB,6DCAA,mqB,6DCAA,q/B,4DCAA,ktB,6DCAA,6pB,6DCAA,8/B,6DCAA,84B,6DCAA,ovB,6DCAA,woB,6DCAA,iqB,6DCAA,kpB,6DCAA,k0B,4DCAA,ynB,6DCAA,4sB,4DCAA,wwC,6DCAA,22B,6DCAA,gwB,6DCAA,ixB,6DCAA,knB,6DCAA,wiC,6DCAA,igC,6DCAA,kiD,6DCAA,+xB,6DCAA,64E,6DCAA,0hC,6DCAA,+3B,6DCAA,s8B,4DCAA,w0F,6DCAA,0gB,6DCAA,+8B,6DCAA,myB,6DCAA,kqB,4DCAA,krD,6DCAA,s2B,6DCAA,8uB,6DCAA,+oC,6DCAA,0zB,6DCAA,y5B,6DCAA,wtB,6DCAA,w2B,6DCAA,yzB,6DCAA,i2B,6DCAA,m3B,6DCAA,u7B,4DCAA,wgC,4DCAA,24B,6DCAA,+9C,4DCAA,y+B,6DCAA,mgC,6DCAA,k4B,4DCAA,i4C,4DCAA,8rB,6DCAA,svB,6DCAA,ogB,6DCAA,yoB,6DCAA,61C,6DCAA,6hB,6DCAA,qvB,6DCAA,07B,6DCAA,gvB,6DCAA,i8B,4DCAA,k6B,6DCAA,2f,6DCAA,+4B,6DCAA,ikC,6DCAA,qpB,6DCAA,wuB,6DCAA,gmB,6DCAA,6xL,6DCAA,68B,6DCAA,o8C,6DCAA,o4B,6DCAA,wtC,6DCAA,ktC,6DCAA,y9B,6DCAA,2oB,6DCAA,uwB,4DCAA,2kC,6DCAA,m6B,2DCAA,0uB,4DCAA,inC,4DCAA,q7B,6DCAA,2tB,6DCAA,k5B,6DCAA,0nB,6DCAA,6qB,6DCAA,4uB,4DCAA,4hB,6DCAA,u6B,6DCAA,g3D,4DCAA,6mD,6DCAA,y4C,6DCAA,6lC,6DCAA,8wB,6DCAA,86Q,6DCAA,07V,6DCAA,uN,6DCAA,2hf,YCAAC,EAAOC,QAAU,CAAC,oBAAoB,CAAC,MAAQ,CAAC,CAAC,UAAY,CAAC,6GAA6G,mBAAmB,CAAC,6HAA6H,CAAC,UAAY,CAAC,0GAA0G,mBAAmB,CAAC,wHAAwH,CAAC,UAAY,CAAC,wHAAwH,mBAAmB,CAAC,sIAAsI,CAAC,UAAY,CAAC,gIAAgI,mBAAmB,CAAC,oJAAoJ,CAAC,UAAY,CAAC,4HAA4H,mBAAmB,CAAC,0IAA0I,CAAC,UAAY,CAAC,8GAA8G,mBAAmB,CAAC,sIAAsI,CAAC,UAAY,CAAC,mHAAmH,mBAAmB,CAAC,iIAAiI,CAAC,UAAY,CAAC,6GAA6G,mBAAmB,CAAC,2HAA2H,CAAC,UAAY,CAAC,6HAA6H,mBAAmB,CAAC,2IAA2I,CAAC,UAAY,CAAC,uGAAuG,mBAAmB,CAAC,qHAAqH,CAAC,UAAY,CAAC,2GAA2G,mBAAmB,CAAC,yHAAyH,CAAC,UAAY,CAAC,0GAA0G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C,YAAa,CACTC,IAAK,kwUACLC,IAAK,s6JACLC,KAAM,wyOAGVC,WAAY,CACRC,MAAO,CACH,YACA,aACA,cACA,YACA,gBACA,aACA,2BACA,qBACA,cAEJC,MAAO,CACH,cACA,YACA,YACA,YACA,aACA,YACA,yBACA,+BACA,eACA,iBACA,iBACA,yBACA,iBACA,aACA,eAEJC,MAAO,CACH,aACA,YACA,YACA,kBACA,aACA,iBACA,cACA,aACA,eAEJC,SAAU,CACN,WACA,WACA,WACA,YACA,6BACA,aACA,WACA,WACA,gBACA,sCACA,kBACA,0CACA,8CACA,sBAEJC,IAAK,CACD,mBAEJC,MAAO,CACH,iDACA,4BAEJC,QAAS,CACL,kBACA,mBACA,+BACA,oBACA,+BAEJC,aAAc,CACV,gCACA,oDAIRC,UAAW,CACP,GAAM,UACN,QAAS,UACT,QAAS,eACT,QAAS,aACT,QAAS,YACT,QAAS,WACT,QAAS,SACT,QAAS,UACT,QAAS,UACT,QAAS,QACT,QAAS,UACT,QAAS,WACT,MAAS,wBACT,QAAS,UACT,QAAS,QACT,QAAS,QACT,QAAS,QACT,SAAU,WACV,QAAS,WACT,QAAS,UACT,GAAM,QACN,QAAS,SACT,QAAS,WACT,QAAS,SACT,QAAS,UACT,QAAS,mBACT,QAAS,WACT,QAAS,WACT,QAAS,MACT,QAAS,UACT,SAAU,mBACV,QAAS,MACT,QAAS,QACT,QAAS,WACT,QAAS,SACT,QAAS,gBACT,QAAS,WACT,QAAS,aACT,QAAS,SACT,QAAS,QACT,QAAS,gBACT,QAAS,iBACT,QAAS,SACT,QAAS,aACT,QAAS,kBACT,QAAS,UACT,QAAS,mBACT,QAAS,SACT,QAAS,wBACT,QAAS,YACT,SAAU,SACV,QAAS,SACT,QAAS,UACT,SAAU,QACV,QAAS,QACT,QAAS,aACT,QAAS,cACT,QAAS,QACT,aAAc,yBACd,QAAS,kBACT,QAAS,UACT,QAAS,YACT,QAAS,QACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,SAAU,UACV,QAAS,SACT,QAAS,aACT,QAAS,sBACT,QAAS,aACT,QAAS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AE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAC5+I,iBAAoB,CAAC,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,MAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,MAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IACtkF,mBAAsB,CAAC,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,MAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IACzzF,gBAAmB,CAAC,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IACp7E,kBAAqB,CAAC,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,MAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,MAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAC5tJ,OAAU,CAAC,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,MAAOwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAA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AE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,MAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EA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AK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,KAAOwQ,EAAE,EAAEC,EAAE,IAAI,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,GAAGC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KAAK,OAAQwQ,EAAE,EAAEC,EAAE,GAAG,CAACzQ,KA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Cb,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,KAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,MACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,KAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,KACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,oBAAqB,CACpB,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,KACA,MAED,4BAA6B,CAC5B,OAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,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","sources":["webpack://xabber.web/webpack/runtime/chunk loaded","webpack://xabber.web/webpack/runtime/create fake namespace object","webpack://xabber.web/webpack/runtime/load script","webpack://xabber.web/./templates/accounts/account_settings_modal.html","webpack://xabber.web/./templates/accounts/add_account.html","webpack://xabber.web/./templates/accounts/audio_file_waveform.html","webpack://xabber.web/./templates/accounts/avatars_gallery.html","webpack://xabber.web/./templates/accounts/change_account_password.html","webpack://xabber.web/./templates/accounts/change_password.html","webpack://xabber.web/./templates/accounts/change_status.html","webpack://xabber.web/./templates/accounts/current_token_item_modal.html","webpack://xabber.web/./templates/accounts/delete_files_media_gallery.html","webpack://xabber.web/./templates/accounts/emoji_panel.html","webpack://xabber.web/./templates/accounts/emoji_picker.html","webpack://xabber.web/./templates/accounts/emoji_picker_tabs.html","webpack://xabber.web/./templates/accounts/existing_groupchat_item.html","webpack://xabber.web/./templates/accounts/global_settings_item_modal.html","webpack://xabber.web/./templates/accounts/media_gallery_account.html","webpack://xabber.web/./templates/accounts/media_gallery_account_file.html","webpack://xabber.web/./templates/accounts/resource.html","webpack://xabber.web/./templates/accounts/resource_right.html","webpack://xabber.web/./templates/accounts/single_account_settings_modal.html","webpack://xabber.web/./templates/accounts/status_message_input_widget.html","webpack://xabber.web/./templates/accounts/token_item_modal.html","webpack://xabber.web/./templates/accounts/toolbar_item.html","webpack://xabber.web/./templates/accounts/unregister_account.html","webpack://xabber.web/./templates/accounts/webcam_panel.html","webpack://xabber.web/./templates/accounts/xmpp_login.html","webpack://xabber.web/./templates/base/about.html","webpack://xabber.web/./templates/base/backgrounds_gallery.html","webpack://xabber.web/./templates/base/color_picker.html","webpack://xabber.web/./templates/base/color_scheme.html","webpack://xabber.web/./templates/base/dialog.html","webpack://xabber.web/./templates/base/fingerprint_devices_item.html","webpack://xabber.web/./templates/base/fingerprint_item.html","webpack://xabber.web/./templates/base/fingerprints.html","webpack://xabber.web/./templates/base/fingerprints_devices.html","webpack://xabber.web/./templates/base/input_widget.html","webpack://xabber.web/./templates/base/jingle_message_calling.html","webpack://xabber.web/./templates/base/omemo_enable.html","webpack://xabber.web/./templates/base/plyr_player_popup.html","webpack://xabber.web/./templates/base/setting_language_radio_input.html","webpack://xabber.web/./templates/base/setting_radio_input.html","webpack://xabber.web/./templates/base/settings.html","webpack://xabber.web/./templates/base/settings_modal.html","webpack://xabber.web/./templates/base/toolbar.html","webpack://xabber.web/./templates/chats/add_chat_account_item.html","webpack://xabber.web/./templates/chats/chat_bottom.html","webpack://xabber.web/./templates/chats/chat_content.html","webpack://xabber.web/./templates/chats/chat_content_contact.html","webpack://xabber.web/./templates/chats/chat_content_placeholder.html","webpack://xabber.web/./templates/chats/chat_head.html","webpack://xabber.web/./templates/chats/chat_item.html","webpack://xabber.web/./templates/chats/chat_placeholder.html","webpack://xabber.web/./templates/chats/chats_panel.html","webpack://xabber.web/./templates/chats/checkbox.html","webpack://xabber.web/./templates/chats/content_encryption_warning.html","webpack://xabber.web/./templates/chats/encryption_warning.html","webpack://xabber.web/./templates/chats/forward_panel.html","webpack://xabber.web/./templates/chats/group_chats/add_group_chat.html","webpack://xabber.web/./templates/chats/group_chats/invitation_panel_view.html","webpack://xabber.web/./templates/chats/group_chats/mention_item.html","webpack://xabber.web/./templates/chats/group_chats/pinned_message_panel.html","webpack://xabber.web/./templates/chats/location_popup.html","webpack://xabber.web/./templates/chats/message_item.html","webpack://xabber.web/./templates/chats/messages/attached_file.html","webpack://xabber.web/./templates/chats/messages/audio_file.html","webpack://xabber.web/./templates/chats/messages/audio_file_waveform.html","webpack://xabber.web/./templates/chats/messages/auth_request.html","webpack://xabber.web/./templates/chats/messages/file.html","webpack://xabber.web/./templates/chats/messages/file_loading.html","webpack://xabber.web/./templates/chats/messages/file_upload.html","webpack://xabber.web/./templates/chats/messages/forwarded.html","webpack://xabber.web/./templates/chats/messages/group_request.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-2.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-3.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-4.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-5.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-6.html","webpack://xabber.web/./templates/chats/messages/images_details.html","webpack://xabber.web/./templates/chats/messages/link_reference.html","webpack://xabber.web/./templates/chats/messages/link_reference_chat.html","webpack://xabber.web/./templates/chats/messages/loading_circle.html","webpack://xabber.web/./templates/chats/messages/location.html","webpack://xabber.web/./templates/chats/messages/main.html","webpack://xabber.web/./templates/chats/messages/saved_main.html","webpack://xabber.web/./templates/chats/messages/searched.html","webpack://xabber.web/./templates/chats/messages/system.html","webpack://xabber.web/./templates/chats/messages/template-for-2.html","webpack://xabber.web/./templates/chats/messages/template-for-3.html","webpack://xabber.web/./templates/chats/messages/template-for-4.html","webpack://xabber.web/./templates/chats/messages/template-for-5.html","webpack://xabber.web/./templates/chats/messages/template-for-6.html","webpack://xabber.web/./templates/chats/messages/video.html","webpack://xabber.web/./templates/chats/messages/voice_message.html","webpack://xabber.web/./templates/chats/saved_chat_head.html","webpack://xabber.web/./templates/chats/send_media.html","webpack://xabber.web/./templates/chats/subscription_buttons.html","webpack://xabber.web/./templates/chats/unread_marker.html","webpack://xabber.web/./templates/contacts/account_roster_left.html","webpack://xabber.web/./templates/contacts/account_roster_right.html","webpack://xabber.web/./templates/contacts/add_contact.html","webpack://xabber.web/./templates/contacts/add_contact_account_item.html","webpack://xabber.web/./templates/contacts/audio_file_waveform.html","webpack://xabber.web/./templates/contacts/contact_blocked_item.html","webpack://xabber.web/./templates/contacts/contact_details_right.html","webpack://xabber.web/./templates/contacts/contact_left_item.html","webpack://xabber.web/./templates/contacts/contact_placeholder.html","webpack://xabber.web/./templates/contacts/contact_right_item.html","webpack://xabber.web/./templates/contacts/edit_contact.html","webpack://xabber.web/./templates/contacts/edit_group.html","webpack://xabber.web/./templates/contacts/group_chats/add_blocked_participant_form.html","webpack://xabber.web/./templates/contacts/group_chats/badge_edit_view.html","webpack://xabber.web/./templates/contacts/group_chats/default_restrictions.html","webpack://xabber.web/./templates/contacts/group_chats/default_restrictions_right.html","webpack://xabber.web/./templates/contacts/group_chats/description_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/file_item.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_details.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_details_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties_edit.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_member_item.html","webpack://xabber.web/./templates/contacts/group_chats/group_member_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_name_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/group_status.html","webpack://xabber.web/./templates/contacts/group_chats/group_status_right.html","webpack://xabber.web/./templates/contacts/group_chats/invitation.html","webpack://xabber.web/./templates/contacts/group_chats/invited_member_item.html","webpack://xabber.web/./templates/contacts/group_chats/participant_badge_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_item.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_right.html","webpack://xabber.web/./templates/contacts/group_chats/participant_rights.html","webpack://xabber.web/./templates/contacts/group_chats/participants.html","webpack://xabber.web/./templates/contacts/group_chats/participants_right_panel.html","webpack://xabber.web/./templates/contacts/group_chats/pinned_message.html","webpack://xabber.web/./templates/contacts/group_chats/private_participant_details.html","webpack://xabber.web/./templates/contacts/group_chats/private_participant_details_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/restriction_item.html","webpack://xabber.web/./templates/contacts/group_chats/right_expire_variants.html","webpack://xabber.web/./templates/contacts/group_chats/set_status.html","webpack://xabber.web/./templates/contacts/group_chats/status_item.html","webpack://xabber.web/./templates/contacts/group_left.html","webpack://xabber.web/./templates/contacts/group_right.html","webpack://xabber.web/./templates/contacts/group_settings.html","webpack://xabber.web/./templates/contacts/groups.html","webpack://xabber.web/./templates/contacts/groups_checkbox_list.html","webpack://xabber.web/./templates/contacts/groups_checkbox_list_contact.html","webpack://xabber.web/./templates/contacts/groups_list.html","webpack://xabber.web/./templates/contacts/groups_new_group.html","webpack://xabber.web/./templates/contacts/media_item.html","webpack://xabber.web/./templates/contacts/media_items_empty.html","webpack://xabber.web/./templates/contacts/preloader.html","webpack://xabber.web/./templates/contacts/roster_left.html","webpack://xabber.web/./templates/contacts/roster_right.html","webpack://xabber.web/./templates/contacts/roster_settings.html","webpack://xabber.web/./templates/mentions/mention_item.html","webpack://xabber.web/./templates/mentions/mentions_panel.html","webpack://xabber.web/./templates/mentions/mentions_placeholder.html","webpack://xabber.web/./templates/searching/existing_groupchat_details_view.html","webpack://xabber.web/./templates/searching/existing_groupchat_item.html","webpack://xabber.web/./templates/searching/searching_account_item.html","webpack://xabber.web/./templates/searching/searching_wide.html","webpack://xabber.web/./templates/svg/account-cancel.html","webpack://xabber.web/./templates/svg/account-outline.html","webpack://xabber.web/./templates/svg/account.html","webpack://xabber.web/./templates/svg/address-outline.html","webpack://xabber.web/./templates/svg/address.html","webpack://xabber.web/./templates/svg/alarm-bell.html","webpack://xabber.web/./templates/svg/alert-circle.html","webpack://xabber.web/./templates/svg/bell-off.html","webpack://xabber.web/./templates/svg/bell-sleep.html","webpack://xabber.web/./templates/svg/bell.html","webpack://xabber.web/./templates/svg/birthday-outline.html","webpack://xabber.web/./templates/svg/birthday.html","webpack://xabber.web/./templates/svg/blocked-add.html","webpack://xabber.web/./templates/svg/blocked.html","webpack://xabber.web/./templates/svg/bot-variant.html","webpack://xabber.web/./templates/svg/bot.html","webpack://xabber.web/./templates/svg/bug.html","webpack://xabber.web/./templates/svg/call-outline.html","webpack://xabber.web/./templates/svg/call.html","webpack://xabber.web/./templates/svg/camera-retake.html","webpack://xabber.web/./templates/svg/camera.html","webpack://xabber.web/./templates/svg/cancel.html","webpack://xabber.web/./templates/svg/channel.html","webpack://xabber.web/./templates/svg/chat.html","webpack://xabber.web/./templates/svg/check-circle.html","webpack://xabber.web/./templates/svg/check.html","webpack://xabber.web/./templates/svg/chevron-down.html","webpack://xabber.web/./templates/svg/chevron-left-variant.html","webpack://xabber.web/./templates/svg/chevron-right-variant.html","webpack://xabber.web/./templates/svg/circle-slice-1.html","webpack://xabber.web/./templates/svg/circle-slice-2.html","webpack://xabber.web/./templates/svg/circle-slice-3.html","webpack://xabber.web/./templates/svg/circle-slice-4.html","webpack://xabber.web/./templates/svg/circle-slice-5.html","webpack://xabber.web/./templates/svg/circle-slice-6.html","webpack://xabber.web/./templates/svg/circle-slice-7.html","webpack://xabber.web/./templates/svg/circle-slice-8.html","webpack://xabber.web/./templates/svg/circles-outline.html","webpack://xabber.web/./templates/svg/circles.html","webpack://xabber.web/./templates/svg/client-outline.html","webpack://xabber.web/./templates/svg/client.html","webpack://xabber.web/./templates/svg/clock-outline.html","webpack://xabber.web/./templates/svg/close.html","webpack://xabber.web/./templates/svg/cloud.html","webpack://xabber.web/./templates/svg/contact-add.html","webpack://xabber.web/./templates/svg/crosshairs-gps.html","webpack://xabber.web/./templates/svg/crosshairs-question.html","webpack://xabber.web/./templates/svg/crosshairs.html","webpack://xabber.web/./templates/svg/database-lock.html","webpack://xabber.web/./templates/svg/database.html","webpack://xabber.web/./templates/svg/description-outline.html","webpack://xabber.web/./templates/svg/description.html","webpack://xabber.web/./templates/svg/device-cellphone.html","webpack://xabber.web/./templates/svg/device-console.html","webpack://xabber.web/./templates/svg/device-desktop.html","webpack://xabber.web/./templates/svg/device-tablet.html","webpack://xabber.web/./templates/svg/device-web.html","webpack://xabber.web/./templates/svg/devices.html","webpack://xabber.web/./templates/svg/edit-outline.html","webpack://xabber.web/./templates/svg/edit.html","webpack://xabber.web/./templates/svg/email-outline.html","webpack://xabber.web/./templates/svg/email.html","webpack://xabber.web/./templates/svg/expires.html","webpack://xabber.web/./templates/svg/file-audio.html","webpack://xabber.web/./templates/svg/file-document.html","webpack://xabber.web/./templates/svg/file-pdf.html","webpack://xabber.web/./templates/svg/file-presentation.html","webpack://xabber.web/./templates/svg/file-video.html","webpack://xabber.web/./templates/svg/file-zip.html","webpack://xabber.web/./templates/svg/file.html","webpack://xabber.web/./templates/svg/fullname-outline.html","webpack://xabber.web/./templates/svg/fullname.html","webpack://xabber.web/./templates/svg/group-incognito.html","webpack://xabber.web/./templates/svg/group-invite.html","webpack://xabber.web/./templates/svg/group-private.html","webpack://xabber.web/./templates/svg/group-public.html","webpack://xabber.web/./templates/svg/history.html","webpack://xabber.web/./templates/svg/ic-at.html","webpack://xabber.web/./templates/svg/ic-jabber.html","webpack://xabber.web/./templates/svg/ic-searching.html","webpack://xabber.web/./templates/svg/id-outline.html","webpack://xabber.web/./templates/svg/id.html","webpack://xabber.web/./templates/svg/image.html","webpack://xabber.web/./templates/svg/index.html","webpack://xabber.web/./templates/svg/information-outline.html","webpack://xabber.web/./templates/svg/information.html","webpack://xabber.web/./templates/svg/invite-outline.html","webpack://xabber.web/./templates/svg/invite.html","webpack://xabber.web/./templates/svg/job-outline.html","webpack://xabber.web/./templates/svg/job.html","webpack://xabber.web/./templates/svg/key-variant.html","webpack://xabber.web/./templates/svg/key.html","webpack://xabber.web/./templates/svg/link.html","webpack://xabber.web/./templates/svg/lock-alert.html","webpack://xabber.web/./templates/svg/lock-check.html","webpack://xabber.web/./templates/svg/lock-cross.html","webpack://xabber.web/./templates/svg/lock-open.html","webpack://xabber.web/./templates/svg/lock-question.html","webpack://xabber.web/./templates/svg/lock.html","webpack://xabber.web/./templates/svg/map-marker-outline.html","webpack://xabber.web/./templates/svg/map-marker.html","webpack://xabber.web/./templates/svg/membership-outline.html","webpack://xabber.web/./templates/svg/message-bookmark-outline.html","webpack://xabber.web/./templates/svg/message-group.html","webpack://xabber.web/./templates/svg/minus.html","webpack://xabber.web/./templates/svg/mobile.html","webpack://xabber.web/./templates/svg/palette.html","webpack://xabber.web/./templates/svg/pause.html","webpack://xabber.web/./templates/svg/picture-in-picture-bottom-right.html","webpack://xabber.web/./templates/svg/picture-in-picture-minimize.html","webpack://xabber.web/./templates/svg/picture-in-picture-top-right.html","webpack://xabber.web/./templates/svg/pinned-circle-small.html","webpack://xabber.web/./templates/svg/pinned.html","webpack://xabber.web/./templates/svg/play.html","webpack://xabber.web/./templates/svg/player-float.html","webpack://xabber.web/./templates/svg/player-full.html","webpack://xabber.web/./templates/svg/player-mini-variant.html","webpack://xabber.web/./templates/svg/player-mini.html","webpack://xabber.web/./templates/svg/plus.html","webpack://xabber.web/./templates/svg/plyr.html","webpack://xabber.web/./templates/svg/qrcode.html","webpack://xabber.web/./templates/svg/restrictions-outline.html","webpack://xabber.web/./templates/svg/rss-variant.html","webpack://xabber.web/./templates/svg/rss.html","webpack://xabber.web/./templates/svg/saved-messages.html","webpack://xabber.web/./templates/svg/search.html","webpack://xabber.web/./templates/svg/security.html","webpack://xabber.web/./templates/svg/server.html","webpack://xabber.web/./templates/svg/star-face.html","webpack://xabber.web/./templates/svg/status-outline.html","webpack://xabber.web/./templates/svg/status.html","webpack://xabber.web/./templates/svg/subscription-from.html","webpack://xabber.web/./templates/svg/subscription-to.html","webpack://xabber.web/./templates/svg/task.html","webpack://xabber.web/./templates/svg/translate.html","webpack://xabber.web/./templates/svg/trash.html","webpack://xabber.web/./templates/svg/video.html","webpack://xabber.web/./templates/svg/volume-high.html","webpack://xabber.web/./templates/svg/volume-off-variant.html","webpack://xabber.web/./templates/svg/volume-off.html","webpack://xabber.web/./templates/svg/web-cancel.html","webpack://xabber.web/./templates/svg/web.html","webpack://xabber.web/./templates/svg/xabber-offline.html","webpack://xabber.web/./templates/svg/xabber-online.html","webpack://xabber.web/./templates/svg/xmpp.html","webpack://xabber.web/./templates/vcard/vcard.html","webpack://xabber.web/./templates/vcard/vcard_edit_modal.html","webpack://xabber.web/./templates/vcard/vcard_modal.html","webpack://xabber.web/./templates/vcard/vcard_right.html","webpack://xabber.web/./xmls/background-images.xml","webpack://xabber.web/./xmls/background-patterns.xml","webpack://xabber.web/./sounds/attention/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./sounds/dialtones/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./sounds/interface/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./sounds/notifications/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./sounds/ringtones/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./src/constants.js","webpack://xabber.web/./src/dependencies.js","webpack://xabber.web/./src/templates.js","webpack://xabber.web/./src/sounds.js","webpack://xabber.web/./src/utils/emoji.js","webpack://xabber.web/./src/utils/images.js","webpack://xabber.web/./src/utils/modals.js","webpack://xabber.web/./src/utils/textarea.js","webpack://xabber.web/./src/utils/utils.js","webpack://xabber.web/./src/environment.js","webpack://xabber.web/./src/core.js","webpack://xabber.web/./src/views.js","webpack://xabber.web/./src/api-service.js","webpack://xabber.web/./src/strophe.js","webpack://xabber.web/./src/vcard.js","webpack://xabber.web/./src/accounts.js","webpack://xabber.web/./src/discovery.js","webpack://xabber.web/./src/contacts.js","webpack://xabber.web/./src/chats.js","webpack://xabber.web/./src/searching.js","webpack://xabber.web/./src/mentions.js","webpack://xabber.web/./src/ui.js","webpack://xabber.web/./src/omemo.js","webpack://xabber.web/./src/xabber.js","webpack://xabber.web/./templates/ sync ^\\.\\/.*\\.json$","webpack://xabber.web/ ^\\.\\/.*\\.html$","webpack://xabber.web/./translations/translation_progress.js","webpack://xabber.web/./translations/ lazy ^\\.\\/.*\\.js$ namespace object","webpack://xabber.web/./version.js","webpack://xabber.web/webpack/bootstrap","webpack://xabber.web/webpack/runtime/amd options","webpack://xabber.web/webpack/runtime/compat get default export","webpack://xabber.web/webpack/runtime/define property getters","webpack://xabber.web/webpack/runtime/ensure chunk","webpack://xabber.web/webpack/runtime/get javascript chunk filename","webpack://xabber.web/webpack/runtime/get mini-css chunk filename","webpack://xabber.web/webpack/runtime/global","webpack://xabber.web/webpack/runtime/harmony module decorator","webpack://xabber.web/webpack/runtime/hasOwnProperty shorthand","webpack://xabber.web/webpack/runtime/make namespace object","webpack://xabber.web/webpack/runtime/node module decorator","webpack://xabber.web/webpack/runtime/publicPath","webpack://xabber.web/webpack/runtime/jsonp chunk loading","webpack://xabber.web/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"xabber.web:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t};\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","export default \"<div class=\\\"background-overlay\\\"></div>\\n<div class=\\\"settings-panel\\\">\\n    <div class=\\\"settings-transition-wrap\\\">\\n        <div class=\\\"left-column settings-column noselect\\\">\\n            <div class=\\\"settings-account-head\\\">\\n                <i class=\\\"btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <div class=\\\"name one-line\\\"></div>\\n                <svg class=\\\"btn-color-picker dropdown-button mdi mdi-24px mdi-svg-template\\\" data-activates=\\\"color-picker-dropdown\\\" data-svgname=\\\"palette\\\"></svg>\\n                <ul id=\\\"color-picker-dropdown\\\" class=\\\"dropdown-content color-picker-dropdown bootstrap-dropdown noselect\\\">\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"red\\\">\\n                        <span class=\\\"one-line text-color-red-700\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"pink\\\">\\n                        <span class=\\\"one-line text-color-pink-700\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"purple\\\">\\n                        <span class=\\\"one-line text-color-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"deep-purple\\\">\\n                        <span class=\\\"one-line text-color-deep-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"indigo\\\">\\n                        <span class=\\\"one-line text-color-indigo-700\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"blue\\\">\\n                        <span class=\\\"one-line text-color-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"light-blue\\\">\\n                        <span class=\\\"one-line text-color-light-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"cyan\\\">\\n                        <span class=\\\"one-line text-color-cyan-700\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"teal\\\">\\n                        <span class=\\\"one-line text-color-teal-700\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"green\\\">\\n                        <span class=\\\"one-line text-color-green-700\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"light-green\\\">\\n                        <span class=\\\"one-line text-color-light-green-700\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"lime\\\">\\n                        <span class=\\\"one-line text-color-lime-700\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"amber\\\">\\n                        <span class=\\\"one-line text-color-amber-700\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"orange\\\">\\n                        <span class=\\\"one-line text-color-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"deep-orange\\\">\\n                        <span class=\\\"one-line text-color-deep-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"brown\\\">\\n                        <span class=\\\"one-line text-color-brown-700\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"blue-grey\\\">\\n                        <span class=\\\"one-line text-color-blue-grey-700\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                </ul>\\n                <svg class=\\\"btn-qr-code mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n                <div class=\\\"field clickable-field enabled-state switch normal\\\">\\n                    <label class=\\\"field-value\\\">\\n                        <input type=\\\"checkbox\\\">\\n                        <span class=\\\"lever\\\"></span>\\n                    </label>\\n                </div>\\n            </div>\\n            <div class=\\\"main-info-wrap account-main-info-wrap\\\">\\n                <div class=\\\"picture-wrap\\\">\\n                    <div class=\\\"avatar-wrap\\\">\\n                        <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                            <img/>\\n                            <input type=\\\"file\\\"/>\\n                            <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown dropdown-content noselect\\\">\\n                                <div class=\\\"btn-emoji-panel property-variant\\\">\\n                                    {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                                </div>\\n                                <div class=\\\"btn-selfie property-variant\\\">\\n                                    {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                                </div>\\n                                <div class=\\\"btn-choose-image property-variant\\\">\\n                                    {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                                </div>\\n                            </ul>\\n                            <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                                <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                            </svg>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"name one-line\\\"></div>\\n                <div class=\\\"jid one-line\\\"></div>\\n            </div>\\n            <div class=\\\"settings-tabs-wrap\\\">\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"profile\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__profile_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"media-gallery\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cloud\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"encryption\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption\\\"))]}</div>\\n                    <div class=\\\"settings-block-label hidden label-encryption-enabled one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_enabled_label\\\"))]}</div>\\n                    <div class=\\\"settings-block-label label-encryption-disabled one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_disabled_label\\\"))]}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"devices-wrap hidden\\\">\\n                <div class=\\\"device-encryption-warning hidden\\\" data-not-trusted-count=\\\"0\\\">\\n                    <svg class=\\\"device-encryption-icon mdi mdi-40px mdi-svg-template\\\" data-svgname=\\\"alert-circle\\\"></svg>\\n                    <div class=\\\"device-encryption-warning-name one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_warning_header\\\"))]}</div>\\n                    <div class=\\\"device-encryption-warning-label\\\"></div>\\n                </div>\\n                <div class=\\\"tokens-wrap\\\">\\n                    <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings_account__label_this_device\\\"))]}</div>\\n                    <div class=\\\"current-token-wrap\\\">\\n                        <div class=\\\"sessions-wrap current-session selectable-text\\\"></div>\\n                        <div class=\\\"btn-revoke-all-tokens settings-button-devices\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"restrictions-outline\\\"></svg>\\n                            <div class=\\\"settings-button-devices-label\\\">{[print(xabber.getString(\\\"account_terminate_all_sessions\\\"))]}</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-panel-label active-sessions-label\\\">{[print(xabber.getString(\\\"settings_account__label_active_sessions\\\"))]}</div>\\n                    <div class=\\\"all-sessions-wrap\\\">\\n                        <div class=\\\"sessions-wrap all-sessions selectable-text\\\"></div>\\n                    </div>\\n                    <div class=\\\"orphaned-fingerprints hidden\\\">\\n                        <div class=\\\"orphaned-fingerprints-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__legacy_encryption_label\\\"))]}</div>\\n                        <div class=\\\"orphaned-fingerprints-wrap selectable-text\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"settings-tabs-wrap\\\">\\n                <div class=\\\"settings-tab settings-deletion-button delete-account\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                    </div>\\n                    <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings_account__button_quit_account\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"right-column settings-column noselect\\\">\\n            <div class=\\\"settings-panel-head\\\">\\n                <i class=\\\"btn-back-settings mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <i class=\\\"btn-back-subsettings-account mdi mdi-24px mdi-arrow-left hidden\\\"></i>\\n                <span class=\\\"settings-panel-head-title\\\">{[print(xabber.getString(\\\"account_editor\\\"))]}</span>\\n                <i class=\\\"btn-sorting dropdown-button mdi mdi-24px mdi-sort hidden\\\" data-activates=\\\"storage-file-sorting\\\"></i>\\n                <ul id=\\\"storage-file-sorting\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n                    <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-id\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_new\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-size\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_size\\\"))]}</span>\\n                    </div>\\n                </ul>\\n                <div class=\\\"btn-more media-gallery-button dropdown-button hidden\\\" data-activates=\\\"storage-actions\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n                </div>\\n                <ul id=\\\"storage-actions\\\" class=\\\"dropdown-content noselect\\\">\\n                    <div class=\\\"property-variant btn-select-files hidden\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_select_files\\\"))]}</span>\\n                    </div>\\n                </ul>\\n            </div>\\n\\n            <div class=\\\"panel-content-wrap\\\">\\n                <div class=\\\"panel-content details-panel\\\">\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}' class=\\\"settings-block-wrap profile\\\">\\n                        <div class=\\\"settings-tabs-wrap\\\">\\n                            <div class=\\\"settings-tab settings-non-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"status\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"status\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__status_subheader\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"vcard-tab\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__edit_profile\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__edit_profile_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"password\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__password_subheader\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__password_subheader_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"blocklist\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"block_list\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"circles-groups\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles-outline\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"capabitilies\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__capabilities_subheader\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__capabilities_subheader_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab unregister-account settings-deletion-button settings-non-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"delete-account\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name settings-block-name-single one-line\\\">{[print(xabber.getString(\\\"settings_account__delete_account_subheader\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__status_subheader\\\"))]}' class=\\\"settings-block-wrap status\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"status-wrap setting\\\"></div>\\n                            <div class=\\\"status\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__edit_profile\\\"))]}' class=\\\"settings-block-wrap vcard-tab\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"vcard\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"block-list-view-wrap\\\">\\n                        <div data-header='{[print(xabber.getString(\\\"block_list\\\"))]}' data-parent-block=\\\"profile\\\" class=\\\"settings-block-wrap blocklist\\\">\\n                            <div class=\\\"settings-subblock-wrap\\\">\\n                                <div class=\\\"blocklist-info\\\">\\n                                    <div class=\\\"blocklist-wrap\\\">\\n                                        <div class=\\\"buttons-wrap\\\">\\n                                            <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tabs-wrap\\\">\\n                                <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-contacts\\\">\\n                                    <div class=\\\"setting-icon-background\\\">\\n                                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-cancel\\\"></svg>\\n                                    </div>\\n                                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_contacts\\\"))]}</div>\\n                                    <div class=\\\"settings-block-label one-line\\\"></div>\\n                                </div>\\n                                <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-domains\\\">\\n                                    <div class=\\\"setting-icon-background\\\">\\n                                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"web-cancel\\\"></svg>\\n                                    </div>\\n                                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_domains\\\"))]}</div>\\n                                    <div class=\\\"settings-block-label one-line\\\"></div>\\n                                </div>\\n                                <div class=\\\"settings-tab hidden\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-invitations\\\">\\n                                    <div class=\\\"setting-icon-background\\\">\\n                                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"invite\\\"></svg>\\n                                    </div>\\n                                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_invitations\\\"))]}</div>\\n                                    <div class=\\\"settings-block-label one-line\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_contacts\\\"))]}' data-block-name=\\\"blocklist-contacts\\\" class=\\\"settings-block-wrap blocklist-contacts\\\">\\n                            <div class=\\\"settings-subblock-wrap\\\">\\n                                <div class=\\\"blocklist-info\\\">\\n                                    <div class=\\\"blocklist-wrap\\\">\\n                                        <div class=\\\"buttons-wrap\\\">\\n                                            <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                            <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                            <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                        </div>\\n                                        <div class=\\\"blocked-items\\\">\\n                                            <div class=\\\"blocked-contacts-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_contacts_empty\\\"))]}</div>\\n                                            <div class=\\\"blocked-items-container blocked-contacts-wrap\\\" data-tab-name=\\\"contacts-item\\\">\\n                                                <div class=\\\"blocked-contacts blocked-list\\\"></div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_domains\\\"))]}' data-block-name=\\\"blocklist-domains\\\" class=\\\"settings-block-wrap blocklist-domains\\\">\\n                            <div class=\\\"settings-subblock-wrap\\\">\\n                                <div class=\\\"blocklist-info\\\">\\n                                    <div class=\\\"blocklist-wrap\\\">\\n                                        <div class=\\\"buttons-wrap\\\">\\n                                            <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                            <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                            <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                        </div>\\n                                        <div class=\\\"blocked-items\\\">\\n                                            <div class=\\\"blocked-domains-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_domains_empty\\\"))]}</div></div>\\n                                        <div class=\\\"blocked-items-container blocked-domains-wrap\\\" data-tab-name=\\\"domains-item\\\">\\n                                            <div class=\\\"blocked-domains blocked-list\\\"></div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_invitations\\\"))]}' data-block-name=\\\"blocklist-invitations\\\" class=\\\"settings-block-wrap blocklist-invitations\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"blocklist-info\\\">\\n                                <div class=\\\"blocklist-wrap\\\">\\n                                    <div class=\\\"buttons-wrap\\\">\\n                                        <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                        <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                        <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                    </div>\\n                                    <div class=\\\"blocked-items\\\">\\n                                        <div class=\\\"blocked-invitations-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_invitations_empty\\\"))]}</div>\\n                                        <div class=\\\"blocked-items-container blocked-invitations-wrap\\\" data-tab-name=\\\"invitations-item\\\">\\n                                            <div class=\\\"blocked-invitations blocked-list\\\"></div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}' class=\\\"settings-block-wrap circles-groups\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"groups-info\\\">\\n                                <div class=\\\"groups-wrap\\\">\\n                                    <div class=\\\"groups\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__capabilities_subheader\\\"))]}' class=\\\"settings-block-wrap capabitilies\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"server-info\\\">\\n                                <div class=\\\"capabilities-wrap\\\">\\n                                    <div class=\\\"capabilities\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"color\\\"))]}' class=\\\"settings-block-wrap color-scheme\\\">\\n                        <div class=\\\"color-scheme-wrap\\\">\\n                            <div class=\\\"account-color\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"red\\\" type=\\\"radio\\\" id=\\\"color-red\\\" />\\n                                            <label class=\\\"text-color-red-700\\\" for=\\\"color-red\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"pink\\\" type=\\\"radio\\\" id=\\\"color-pink\\\" />\\n                                            <label class=\\\"text-color-pink-700\\\" for=\\\"color-pink\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"purple\\\" type=\\\"radio\\\" id=\\\"color-purple\\\" />\\n                                            <label class=\\\"text-color-purple-700\\\" for=\\\"color-purple\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-purple\\\" type=\\\"radio\\\" id=\\\"color-deep-purple\\\" />\\n                                            <label class=\\\"text-color-deep-purple-700\\\" for=\\\"color-deep-purple\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"indigo\\\" type=\\\"radio\\\" id=\\\"color-indigo\\\" />\\n                                            <label class=\\\"text-color-indigo-700\\\" for=\\\"color-indigo\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue\\\" type=\\\"radio\\\" id=\\\"color-blue\\\" />\\n                                            <label class=\\\"text-color-blue-700\\\" for=\\\"color-blue\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-blue\\\" type=\\\"radio\\\" id=\\\"color-light-blue\\\" />\\n                                            <label class=\\\"text-color-light-blue-700\\\" for=\\\"color-light-blue\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"cyan\\\" type=\\\"radio\\\" id=\\\"color-cyan\\\" />\\n                                            <label class=\\\"text-color-cyan-700\\\" for=\\\"color-cyan\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"teal\\\" type=\\\"radio\\\" id=\\\"color-teal\\\" />\\n                                            <label class=\\\"text-color-teal-700\\\" for=\\\"color-teal\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"green\\\" type=\\\"radio\\\" id=\\\"color-green\\\" />\\n                                            <label class=\\\"text-color-green-700\\\" for=\\\"color-green\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-green\\\" type=\\\"radio\\\" id=\\\"color-light-green\\\" />\\n                                            <label class=\\\"text-color-light-green-700\\\" for=\\\"color-light-green\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"lime\\\" type=\\\"radio\\\" id=\\\"color-lime\\\" />\\n                                            <label class=\\\"text-color-lime-700\\\" for=\\\"color-lime\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"amber\\\" type=\\\"radio\\\" id=\\\"color-amber\\\" />\\n                                            <label class=\\\"text-color-amber-700\\\" for=\\\"color-amber\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"orange\\\" type=\\\"radio\\\" id=\\\"color-orange\\\" />\\n                                            <label class=\\\"text-color-orange-700\\\" for=\\\"color-orange\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-orange\\\" type=\\\"radio\\\" id=\\\"color-deep-orange\\\" />\\n                                            <label class=\\\"text-color-deep-orange-700\\\" for=\\\"color-deep-orange\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"brown\\\" type=\\\"radio\\\" id=\\\"color-brown\\\" />\\n                                            <label class=\\\"text-color-brown-700\\\" for=\\\"color-brown\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue-grey\\\" type=\\\"radio\\\" id=\\\"color-blue-grey\\\" />\\n                                            <label class=\\\"text-color-blue-grey-700\\\" for=\\\"color-blue-grey\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__encryption\\\"))]}' class=\\\"settings-block-wrap encryption\\\">\\n                        <div class=\\\"btn-more device-more-button dropdown-button\\\" data-activates=\\\"device-omemo-actions\\\">\\n                            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n                        </div>\\n                        <ul id=\\\"device-omemo-actions\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n                            <div class=\\\"property-variant btn-manage-devices\\\">\\n                                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_manage_devices\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"property-variant btn-purge-keys\\\">\\n                                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_purge_keys\\\"))]}</span>\\n                            </div>\\n                        </ul>\\n                        <div class=\\\"omemo-settings-wrap\\\">\\n                            <div class=\\\"settings\\\">\\n                                <div class=\\\"setting-wrap omemo-enable\\\">\\n                                    <span>{[print(xabber.getString(\\\"omemo__settings__toggle_enable_encryption\\\"))]}</span>\\n                                    <div class=\\\"field setting-use-omemo switch normal\\\">\\n                                        <label class=\\\"field-value\\\">\\n                                            <input type=\\\"checkbox\\\">\\n                                            <span class=\\\"lever\\\"></span>\\n                                        </label>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"setting-wrap send-chat-states\\\">\\n                                    <span>{[print(xabber.getString(\\\"omemo__settings__toggle_send_typing_notifications\\\"))]}</span>\\n                                    <div class=\\\"field setting-send-chat-states switch normal\\\">\\n                                        <label class=\\\"field-value\\\">\\n                                            <input type=\\\"checkbox\\\">\\n                                            <span class=\\\"lever\\\"></span>\\n                                        </label>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}' class=\\\"settings-block-wrap media-gallery\\\">\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__device_information\\\"))]}' class=\\\"settings-block-wrap device-information hidden\\\">\\n                        <div class=\\\"device-information-trust-text-wrap\\\">\\n                            <div class=\\\"device-information-trust-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-wrap\\\">\\n                            <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings_account__device_information\\\"))]}</div>\\n                            <div class=\\\"device-information-items-wrap device-information-basic\\\">\\n                                <div class=\\\"device-information-item device-information-status\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"status\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__status__label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-last-seen\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"history\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__status__label_last_seen\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-client\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"id\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__client__label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-ip\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__ip__label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-expires\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"expires\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__expire__label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-panel-label device-information-security-label\\\">{[print(xabber.getString(\\\"settings__menu_item__security\\\"))]}</div>\\n                            <div class=\\\"device-information-items-wrap device-information-encryption\\\">\\n                                <div class=\\\"device-information-item device-information-device-id\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"settings_account__device_information_device_id\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-fingerprint hidden\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"lock\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__fingerprint_label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text device-information-fingerprint-text\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab device-information-trust settings-deletion-button\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-alert\\\" data-svgname=\\\"lock-alert\\\"></svg>\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-check\\\" data-svgname=\\\"lock-check\\\"></svg>\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-cross\\\" data-svgname=\\\"lock-cross\\\"></svg>\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-question\\\" data-svgname=\\\"lock-question\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings_account__identity_verification\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab btn-revoke-token settings-deletion-button\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"device__info__terminate_session__button\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_add\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content login-panel-form\\\">\\n\\n        <div class=\\\"login-form-jid\\\">\\n            <div class=\\\"login-form-step-wrap\\\">\\n                <div class=\\\"input-field-wrap\\\">\\n                    <div class=\\\"input-field input-field-jid\\\">\\n                        <input id=\\\"jid\\\" placeholder='{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}' type=\\\"text\\\" name=\\\"jid\\\">\\n                        <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                            <div class=\\\"select-auth-xmpp-server\\\">\\n                                <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                                <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                                    <input id=\\\"sign_in_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"sign_in_domain\\\">\\n                                </div>\\n                                <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"caret\\\">\\n                                    <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                                    <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                                </div>\\n                            </div>\\n                            <div id=\\\"select-auth-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                                <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"input-field\\\">\\n                        <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"login-form-step-error login-jid-error hidden\\\"></div>\\n                <div class=\\\"login-form-step-error login-password-error hidden\\\"></div>\\n                <div class=\\\"login-form-step-description\\\"></div>\\n                <div class=\\\"login-step-wrap hidden\\\">\\n                    <div class=\\\"login-step connecting-step\\\">\\n                        <div class=\\\"login-step-text\\\">\\n                            {[print(xabber.getString(\\\"dialog_jingle_message__status_communicating\\\"))]}\\n                        </div>\\n                        <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                    </div>\\n                    <div class=\\\"login-step credentials-step\\\">\\n                        <div class=\\\"login-step-text\\\">\\n                            {[print(xabber.getString(\\\"dialog_jingle_message__status_checking_credentials\\\"))]}\\n                        </div>\\n                        <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"login-form-server-features hidden\\\">\\n            <div class=\\\"register-form-step-wrap\\\">\\n                <div class=\\\"register-form-step-header\\\"></div>\\n            </div>\\n            <div class=\\\"login-server-features-wrap\\\">\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.MAM)]}\\\" >\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_message_archive\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_archive_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.SYNCHRONIZATION)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_synchronization\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_quick_synchronization_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.REWRITE)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_message_editing\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_editing_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.AUTH_DEVICES)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_device_management\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_tokens_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.PUBSUB)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_publish_subscribe\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_pubsub_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.HTTP_UPLOAD)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_file_upload\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_file_upload_error'))]}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"server-features-error\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button disabled class=\\\"btn-flat btn-main btn-log-in\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main one-line hidden btn-finish-log-in\\\"></button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"library\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_library\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"library\\\" class=\\\"screen-wrap library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"hidden screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__text\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__button_upload\\\"))]}</button>\\n                <input type=\\\"file\\\">\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <div class=\\\"modal-preloader-wrap\\\"></div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span class=\\\"original-state\\\">{[print(xabber.getString(\\\"button_change_pass\\\"))]}</span>\\n        <span class=\\\"success-state hidden\\\">{[print(xabber.getString(\\\"password_changed_success\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content original-state\\\">\\n        <div class=\\\"change-password-fields\\\">\\n            <div class=\\\"block-subheader\\\">\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"hint_old_pass\\\"))]}</span>\\n            </div>\\n            <div class=\\\"change-password-field\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                <input class=\\\"input-glow account-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_old_pass\\\"))]}' id=\\\"old_password\\\" type=\\\"password\\\" name=\\\"old_password\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n            <div class=\\\"block-subheader\\\">\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"hint_new_pass\\\"))]}</span>\\n            </div>\\n            <div class=\\\"change-password-field\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key-variant\\\"></svg>\\n                <input class=\\\"input-glow account-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_new_pass\\\"))]}' id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n            <div class=\\\"change-password-field\\\">\\n                <input class=\\\"input-glow account-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_confirm_pass\\\"))]}' id=\\\"password_confirm\\\" type=\\\"password\\\" name=\\\"password_confirm\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-change btn-flat btn-main original-state\\\" disabled>{[print(xabber.getString(\\\"button_change_pass\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel btn-finish-change success-state hidden\\\">{[print(xabber.getString(\\\"ok\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel original-state\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"settings_account__dialog_change_password__header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row login-form-field\\\">\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"jid\\\" type=\\\"text\\\" class=\\\"input-glow\\\" name=\\\"jid\\\" disabled readonly>\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"password\\\" type=\\\"password\\\" class=\\\"input-glow\\\" placeholder=\\\"{[print(xabber.getString('account_password'))]}\\\" name=\\\"password\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-change\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"status_editor\\\"))]}</span>\\n    </div>\\n    <ul class=\\\"status-values noselect\\\">\\n        <li data-value=\\\"chat\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"chat\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"chat\\\"></span>\\n        </li>\\n        <li data-value=\\\"online\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"online\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"online\\\"></span>\\n        </li>\\n        <li data-value=\\\"away\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"away\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"away\\\"></span>\\n        </li>\\n        <li data-value=\\\"xa\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"xa\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"xa\\\"></span>\\n        </li>\\n        <li data-value=\\\"dnd\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"dnd\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"dnd\\\"></span>\\n        </li>\\n        <li data-value=\\\"offline\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"unavailable\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"offline\\\"></span>\\n        </li>\\n    </ul>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"input-field status-message-wrap\\\">\\n                <span class=\\\"static-label\\\">{[print(xabber.getString(\\\"dialog_status_editor__label_custom_status\\\"))]}</span>\\n                <input type=\\\"text\\\" class=\\\"status-message input-glow\\\">\\n                <i class=\\\"clear-input mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n            <div class=\\\"input-field checkbox-field no-padding\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"filled-in apply-to-all\\\" id=\\\"{{view.cid}}_apply_to_all\\\"/>\\n                <label for=\\\"{{view.cid}}_apply_to_all\\\">{[print(xabber.getString(\\\"dialog_status_editor__label_apply_to_all\\\"))]}</label>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"token-wrap settings-tab\\\" data-subblock-parent-name=\\\"devices\\\" data-block-name=\\\"device-information\\\" data-token-uid=\\\"{{token_uid}}\\\">\\n    <div class=\\\"token-icon-wrap\\\">\\n        <svg class=\\\"mdi token-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"device-web\\\"></svg>\\n    </div>\\n    <div class=\\\"token-client-wrap\\\">\\n        <div class=\\\"device one-line\\\">{{device}}</div>\\n        <div class=\\\"ip-address\\\">{{ip}}</div>\\n    </div>\\n    {[if (is_omemo) {]}\\n    <div class=\\\"device-encryption one-line active is-own\\\">\\n        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"security\\\"></svg>\\n    </div>\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"media_gallery_delete_files_header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"deletion-variants no-select\\\">\\n            <div class=\\\"delete-files-text-info\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_info_text\\\"))]}</div>\\n            <div class=\\\"property-variant btn-delete-files-percent\\\" data-value=\\\"15\\\">\\n                <svg class=\\\"percent-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circle-slice-1\\\"></svg>\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_button_15_percent\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files-percent\\\" data-value=\\\"25\\\">\\n                <svg class=\\\"percent-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circle-slice-2\\\"></svg>\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_button_25_percent\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files-percent\\\" data-value=\\\"50\\\">\\n                <svg class=\\\"percent-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circle-slice-4\\\"></svg>\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_button_50_percent\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files-percent\\\" data-value=\\\"100\\\">\\n                <svg class=\\\"percent-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circle-slice-8\\\"></svg>\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_button_100_percent\\\"))]}</span>\\n            </div>\\n        </div>\\n        <div class=\\\"media-gallery-delete-items-wrap hidden\\\">\\n            <div class=\\\"delete-files-preview-wrap media-gallery-items-wrap\\\">\\n                <div class=\\\"delete-files-text no-select\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_preview_text\\\"))]}</div>\\n                <div data-value=\\\"image\\\" class=\\\"setting-name header-setting no-select delete-files-images\\\">\\n                    {[print(xabber.getString(\\\"images\\\"))]}\\n                </div>\\n                <div class=\\\"gallery-files gallery-preview-image hidden grid delete-files-images delete-files-preview-container zoom-gallery\\\">\\n                </div>\\n                <div data-value=\\\"video\\\" class=\\\"setting-name header-setting no-select delete-files-videos\\\">\\n                    {[print(xabber.getString(\\\"videos\\\"))]}\\n                </div>\\n                <div class=\\\"gallery-files gallery-preview-video hidden grid delete-files-videos delete-files-preview-container zoom-gallery\\\">\\n                </div>\\n                <div data-value=\\\"voice\\\" class=\\\"setting-name header-setting no-select delete-files-voices\\\">\\n                    {[print(xabber.getString(\\\"vcard_type_voice\\\"))]}\\n                </div>\\n                <div class=\\\"gallery-files gallery-preview-file hidden voice delete-files-voices delete-files-preview-container zoom-gallery\\\">\\n                </div>\\n                <div data-value=\\\"file\\\" class=\\\"setting-name header-setting no-select delete-files-files\\\">\\n                    {[print(xabber.getString(\\\"files\\\"))]}\\n                </div>\\n                <div class=\\\"gallery-files gallery-preview-voice hidden file delete-files-files delete-files-preview-container zoom-gallery\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"no-files hidden\\\">{[print(xabber.getString(\\\"no_files\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-confirm btn-flat btn-main\\\">{[print(xabber.getString(\\\"delete\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_emoji_profile_image_header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"dialog-text\\\">{[print(xabber.getString(\\\"account_emoji_profile_image_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"emoji-profile-image\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar ground-color-green-100\\\" data-value=\\\"green\\\">\\n                <div class=\\\"chosen-emoji\\\" data-value=\\\"🐈\\\">🐈</div>\\n            </div>\\n            <div class=\\\"circle-icon\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n            </div>\\n        </div>\\n\\n    </div>\\n    <div class=\\\"emoji-profile-colors\\\">\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-green-500 outline-color-green-500 chosen-background-color\\\" data-value=\\\"green\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-deep-orange-500 outline-color-deep-orange-500\\\" data-value=\\\"deep-orange\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-red-500 outline-color-red-500\\\" data-value=\\\"red\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-light-blue-500 outline-color-light-blue-500\\\" data-value=\\\"light-blue\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-blue-500 outline-color-blue-500\\\" data-value=\\\"blue\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-purple-500 outline-color-purple-500\\\" data-value=\\\"purple\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-lime-500 outline-color-lime-500\\\" data-value=\\\"lime\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-pink-500 outline-color-pink-500\\\" data-value=\\\"pink\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-orange-500 outline-color-orange-500\\\" data-value=\\\"orange\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-save\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        <div class=\\\"modal-preloader-wrap\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_emoji_profile_image_header\\\"))]}</span>\\n        <i class=\\\"close-modal mdi mdi-close mdi-24px\\\"></i>\\n    </div>\\n    <div class=\\\"emoji-picker-wrap no-select\\\">\\n\\n    </div>\\n</div>\\n\";","export default \"\\n{[ for (var i = 0; i < emojis.length; i++) { var tab = emojis[i] ]}\\n    <div class=\\\"emojis-tab{[if (i === 0){]} chosen-emoji-tab{[} else {]} hidden{[}]}\\\" data-value=\\\"{{tab.type}}\\\">\\n        {[ for (var y = 0; y < tab.emojis.length; y++) { var emoji = tab.emojis[y] ]}\\n            <div class=\\\"emoji-picker-emoji\\\" data-value=\\\"{{emoji[0]}}\\\">\\n                <div>{{emoji[0]}}</div>\\n            </div>\\n        {[ } ]}\\n    </div>\\n{[ } ]}\\n<div class=\\\"emoji-picker-tabs\\\">\\n    {[ for (var i = 0; i < emojis.length; i++) { var tab = emojis[i] ]}\\n    <div class=\\\"emojis-bottom-tab-selector{[if (i === 0){]} chosen-emoji-selector{[}]}\\\" data-value=\\\"{{tab.type}}\\\">\\n        {{tab.emojis[0][0]}}\\n    </div>\\n    {[ } ]}\\n</div>\\n\";","export default \"<div class=\\\"existing-chat-wrap\\\" data-name=\\\"{{name}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"existing-chat-item\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n    <button class=\\\"btn-join-existing-chat btn-flat btn-dark btn-main\\\">join</button>\\n</div>\";","export default \"<div class=\\\"account-info-wrap\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <!--<div class=\\\"status\\\"></div>-->\\n    <div class=\\\"text-info-wrap\\\">\\n        <div class=\\\"nickname-wrap\\\">\\n            <div class=\\\"nickname one-line\\\"></div>\\n        </div>\\n        <div class=\\\"jid-wrap\\\">\\n            <div class=\\\"jid one-line\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"field clickable-field enabled-state switch normal\\\">\\n    <label class=\\\"field-value\\\">\\n        <input type=\\\"checkbox\\\">\\n        <span class=\\\"lever\\\"></span>\\n    </label>\\n</div>\\n\";","export default \"<div class=\\\"gallery-wrap\\\">\\n    <!--<svg class=\\\"details-icon btn-go-back mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>-->\\n    <div class=\\\"gallery-storage-wrap\\\">\\n        <div class=\\\"storage-usage\\\"></div>\\n        <div class=\\\"storage-progress-bar\\\">\\n            <div class=\\\"storage-progress-images\\\"></div>\\n            <div class=\\\"storage-progress-videos\\\"></div>\\n            <div class=\\\"storage-progress-voices\\\"></div>\\n            <div class=\\\"storage-progress-files\\\"></div>\\n        </div>\\n        <div class=\\\"storage-labels\\\">\\n            <div class=\\\"storage-label storage-label-images\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"images\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-videos\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-voices\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-files\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"files\\\"))]}</div></div>\\n        </div>\\n    </div>\\n    <div class=\\\"storage-usages\\\">\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-images\\\" data-media-type=\\\"image\\\" data-header-text='{[print(xabber.getString(\\\"images\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"image\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"images\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_images_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-videos\\\" data-media-type=\\\"video\\\" data-header-text='{[print(xabber.getString(\\\"videos\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"file-video\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_videos_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-voices\\\" data-media-type=\\\"voice\\\" data-header-text='{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"file-audio\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_voice_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-files\\\" data-media-type=\\\"file\\\" data-header-text='{[print(xabber.getString(\\\"files\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"file\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"files\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_files_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-avatars\\\" data-media-type=\\\"avatars\\\" data-header-text='{[print(xabber.getString(\\\"avatars\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"camera\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_avatars_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab show-deletion settings-deletion-button\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"media-gallery-items-wrap hidden\\\">\\n    <div class=\\\"gallery-sticky-buttons\\\">\\n        <i class=\\\"btn-back-gallery sticky-item mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <i class=\\\"btn-close-selection sticky-item mdi mdi-24px mdi-close\\\"></i>\\n        <div class=\\\"sticky-item gallery-selection-head\\\"></div>\\n        <i class=\\\"btn-delete-selection sticky-item mdi mdi-24px mdi-delete\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-files zoom-gallery\\\">\\n    </div>\\n</div>\\n\\n\";","export default \"<div class=\\\"gallery-file{[if (file.is_avatar === 'True'){]} gallery-avatar{[}]}\\\" title=\\\"{{file.name}}\\\" data-id=\\\"{{file.id}}\\\" data-file=\\\"{{file.file}}\\\" data-name=\\\"{{file.name}}\\\" data-size=\\\"{{file.size}}\\\" data-width=\\\"{{file.width}}\\\" data-height=\\\"{{file.height}}\\\" data-media-type=\\\"{{file.media_type}}\\\" >\\n    {[if (file.media_type && (file.media_type.includes('image') || file.media_type.includes('video'))){]}\\n        <img class=\\\"{[if (file.media_type.includes('video')){]}uploaded-video{[} else {]}uploaded-img popup-img{[}]}\\\" data-mfp-src=\\\"{{file.file}}\\\" src=\\\"{{file.thumbnail}}\\\" {[if (file.media_type && file.media_type.includes('image')){]}onerror=\\\"this.src = '{{file.file}}'; this.onerror = null;\\\" {[}]}>\\n    {[} else {]}\\n        {[if (svg_icon == 'file-audio' && file.media_type.includes('+voice')){]}\\n            <div class=\\\"gallery-file-placeholder-background gallery-audio-file-not-uploaded\\\">\\n                <i class=\\\"details-icon mdi mdi-play no-uploaded\\\"></i>\\n            </div>\\n            <div class=\\\"gallery-file-audio-container\\\">\\n            </div>\\n        {[} else {]}\\n            <div class=\\\"gallery-file-placeholder-background\\\">\\n                <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n                <div class=\\\"gallery-file-title-grid\\\">{{filesize}}</div>\\n            </div>\\n        {[}]}\\n        <div class=\\\"gallery-file-title one-line\\\">\\n            {{file.name}},  <span class=\\\"gallery-file-size\\\">{{filesize}}</span> <span class=\\\"gallery-file-date\\\">{{created_at}}</span>\\n        </div>\\n        {[if (duration && file.media_type.includes('+voice')){]}\\n            <div class=\\\"gallery-voice-file-duration\\\">\\n                0:00 / <span class=\\\"gallery-voice-file-total-duration\\\">{{duration}}</span>\\n            </div>\\n        {[}]}\\n    {[}]}\\n    <div class=\\\"input-field checkbox-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\"/>\\n        <label></label>\\n    </div>\\n    {[if (download_only){]}\\n        <div class=\\\"btn-download btn-more\\\">\\n            <a class=\\\"one-line\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{file.file}}\\\" download>\\n                <i class=\\\"mdi mdi-24px mdi-download\\\"></i>\\n            </a>\\n        </div>\\n    {[} else {]}\\n    <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{file.id}}-more\\\">\\n        <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n    </div>\\n    <ul id=\\\"{{file.id}}-more\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n        <a class=\\\"one-line\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{file.file}}\\\" download>\\n            <div class=\\\"property-variant btn-download\\\">\\n                {[print(xabber.getString(\\\"action_download\\\"))]}\\n            </div>\\n        </a>\\n        <div class=\\\"property-variant btn-delete\\\">\\n            <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete\\\"))]}</span>\\n        </div>\\n    </ul>\\n    {[}]}\\n</div>\";","export default \"<svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"ic-jabber\\\"></svg>\\n<table>\\n    <tbody>\\n    <tr class=\\\"info status-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n        <td>\\n            <div class=\\\"value status-message\\\"></div>\\n            <div class=\\\"status\\\"></div>\\n        </td>\\n    </tr>\\n    <tr class=\\\"info client-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_client\\\"))]}:</td>\\n        <td class=\\\"value client\\\"></td>\\n    </tr>\\n    <tr class=\\\"info resource-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n        <td class=\\\"value resource\\\"></td>\\n    </tr>\\n    <tr class=\\\"info priority-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n        <td class=\\\"value priority\\\"></td>\\n    </tr>\\n    </tbody>\\n</table>\";","export default \"<table>\\n    <tbody>\\n    <tr class=\\\"info status-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n        <td>\\n            <div class=\\\"value status-message one-line\\\"></div>\\n            <div class=\\\"status\\\"></div>\\n        </td>\\n    </tr>\\n    <tr class=\\\"info client-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_client\\\"))]}:</td>\\n        <td class=\\\"value client one-line\\\"></td>\\n    </tr>\\n    <tr class=\\\"info resource-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n        <td class=\\\"value resource one-line\\\"></td>\\n    </tr>\\n    <tr class=\\\"info priority-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n        <td class=\\\"value priority\\\"></td>\\n    </tr>\\n    </tbody>\\n</table>\";","export default \"\\n<div class=\\\"left-column settings-column noselect\\\">\\n    <div class=\\\"settings-account-head\\\">\\n        <svg class=\\\"btn-add-account mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"contact-add\\\"></svg>\\n        <div class=\\\"name one-line\\\"></div>\\n        <svg class=\\\"btn-color-picker dropdown-button mdi mdi-24px mdi-svg-template\\\" data-activates=\\\"color-picker-dropdown\\\" data-svgname=\\\"palette\\\"></svg>\\n        <ul id=\\\"color-picker-dropdown\\\" class=\\\"dropdown-content color-picker-dropdown bootstrap-dropdown noselect\\\">\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"red\\\">\\n                <span class=\\\"one-line text-color-red-700\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"pink\\\">\\n                <span class=\\\"one-line text-color-pink-700\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"purple\\\">\\n                <span class=\\\"one-line text-color-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"deep-purple\\\">\\n                <span class=\\\"one-line text-color-deep-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"indigo\\\">\\n                <span class=\\\"one-line text-color-indigo-700\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"blue\\\">\\n                <span class=\\\"one-line text-color-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"light-blue\\\">\\n                <span class=\\\"one-line text-color-light-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"cyan\\\">\\n                <span class=\\\"one-line text-color-cyan-700\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"teal\\\">\\n                <span class=\\\"one-line text-color-teal-700\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"green\\\">\\n                <span class=\\\"one-line text-color-green-700\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"light-green\\\">\\n                <span class=\\\"one-line text-color-light-green-700\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"lime\\\">\\n                <span class=\\\"one-line text-color-lime-700\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"amber\\\">\\n                <span class=\\\"one-line text-color-amber-700\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"orange\\\">\\n                <span class=\\\"one-line text-color-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"deep-orange\\\">\\n                <span class=\\\"one-line text-color-deep-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"brown\\\">\\n                <span class=\\\"one-line text-color-brown-700\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"blue-grey\\\">\\n                <span class=\\\"one-line text-color-blue-grey-700\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n        </ul>\\n        <svg class=\\\"btn-qr-code mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n        <div class=\\\"field clickable-field enabled-state switch normal\\\">\\n            <label class=\\\"field-value\\\">\\n                <input type=\\\"checkbox\\\">\\n                <span class=\\\"lever\\\"></span>\\n            </label>\\n        </div>\\n    </div>\\n    <div class=\\\"main-info-wrap account-main-info-wrap\\\">\\n        <div class=\\\"picture-wrap\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                    <img/>\\n                    <input type=\\\"file\\\"/>\\n                    <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown bootstrap-dropdown dropdown-content noselect\\\">\\n                        <div class=\\\"btn-emoji-panel property-variant\\\">\\n                            {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                        </div>\\n                        <div class=\\\"btn-selfie property-variant\\\">\\n                            {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                        </div>\\n                        <div class=\\\"btn-choose-image property-variant\\\">\\n                            {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                        </div>\\n                    </ul>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"name one-line\\\"></div>\\n        <div class=\\\"jid one-line\\\"></div>\\n    </div>\\n    <div class=\\\"settings-tabs-wrap\\\">\\n        <div class=\\\"settings-tab\\\" data-block-name=\\\"profile\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__profile_label\\\"))]}</div>\\n        </div>\\n        <div class=\\\"settings-tab\\\" data-block-name=\\\"media-gallery\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cloud\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n        </div>\\n        <div class=\\\"settings-tab\\\" data-block-name=\\\"encryption\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption\\\"))]}</div>\\n            <div class=\\\"settings-block-label hidden label-encryption-enabled one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_enabled_label\\\"))]}</div>\\n            <div class=\\\"settings-block-label label-encryption-disabled one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_disabled_label\\\"))]}</div>\\n        </div>\\n        <div class=\\\"settings-tab\\\" data-block-name=\\\"devices\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"devices\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__devices_subheader\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"right-column settings-column noselect\\\">\\n    <div class=\\\"settings-panel-head\\\">\\n        <i class=\\\"btn-back-settings mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <i class=\\\"btn-back-subsettings-account mdi mdi-24px mdi-arrow-left hidden\\\"></i>\\n        <span class=\\\"settings-panel-head-title\\\">{[print(xabber.getString(\\\"account_editor\\\"))]}</span>\\n        <i class=\\\"btn-sorting dropdown-button mdi mdi-24px mdi-sort hidden\\\" data-activates=\\\"storage-file-sorting\\\"></i>\\n        <ul id=\\\"storage-file-sorting\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n            <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-id\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_new\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-size\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_size\\\"))]}</span>\\n            </div>\\n        </ul>\\n        <div class=\\\"btn-more media-gallery-button dropdown-button hidden\\\" data-activates=\\\"storage-actions\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"storage-actions\\\" class=\\\"dropdown-content noselect\\\">\\n            <div class=\\\"property-variant btn-select-files hidden\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_select_files\\\"))]}</span>\\n            </div>\\n        </ul>\\n    </div>\\n\\n    <div class=\\\"panel-content-wrap\\\">\\n        <div class=\\\"panel-content details-panel\\\">\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__devices_subheader\\\"))]}' class=\\\"settings-block-wrap devices\\\">\\n                <div class=\\\"devices-wrap hidden\\\">\\n                    <div class=\\\"device-encryption-warning hidden\\\" data-not-trusted-count=\\\"0\\\">\\n                        <svg class=\\\"device-encryption-icon mdi mdi-40px mdi-svg-template\\\" data-svgname=\\\"alert-circle\\\"></svg>\\n                        <div class=\\\"device-encryption-warning-name one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_warning_header\\\"))]}</div>\\n                        <div class=\\\"device-encryption-warning-label\\\"></div>\\n                    </div>\\n                    <div class=\\\"tokens-wrap\\\">\\n                        <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings_account__label_this_device\\\"))]}</div>\\n                        <div class=\\\"current-token-wrap\\\">\\n                            <div class=\\\"sessions-wrap current-session selectable-text\\\"></div>\\n                            <div class=\\\"btn-revoke-all-tokens settings-button-devices\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"restrictions-outline\\\"></svg>\\n                                <div class=\\\"settings-button-devices-label\\\">{[print(xabber.getString(\\\"account_terminate_all_sessions\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-panel-label active-sessions-label\\\">{[print(xabber.getString(\\\"settings_account__label_active_sessions\\\"))]}</div>\\n                        <div class=\\\"all-sessions-wrap\\\">\\n                            <div class=\\\"sessions-wrap all-sessions selectable-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"orphaned-fingerprints hidden\\\">\\n                            <div class=\\\"orphaned-fingerprints-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__legacy_encryption_label\\\"))]}</div>\\n                            <div class=\\\"orphaned-fingerprints-wrap selectable-text\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}' class=\\\"settings-block-wrap profile\\\">\\n                <div class=\\\"settings-tabs-wrap\\\">\\n                    <div class=\\\"settings-tab settings-non-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"status\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"status\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__status_subheader\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\"></div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"vcard-tab\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__edit_profile\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__edit_profile_label\\\"))]}</div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"password\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__password_subheader\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__password_subheader_label\\\"))]}</div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"blocklist\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"block_list\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\"></div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"circles-groups\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles-outline\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\"></div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"capabitilies\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__capabilities_subheader\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__capabilities_subheader_label\\\"))]}</div>\\n                    </div>\\n                    <div class=\\\"settings-tab unregister-account settings-deletion-button settings-non-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"delete-account\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name settings-block-name-single one-line\\\">{[print(xabber.getString(\\\"settings_account__delete_account_subheader\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__status_subheader\\\"))]}' class=\\\"settings-block-wrap status\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"status-wrap setting\\\"></div>\\n                    <div class=\\\"status\\\"></div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__edit_profile\\\"))]}' class=\\\"settings-block-wrap vcard-tab\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"vcard\\\">\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"block-list-view-wrap\\\">\\n                <div data-header='{[print(xabber.getString(\\\"block_list\\\"))]}' data-parent-block=\\\"profile\\\" class=\\\"settings-block-wrap blocklist\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"blocklist-info\\\">\\n                            <div class=\\\"blocklist-wrap\\\">\\n                                <div class=\\\"buttons-wrap\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-tabs-wrap\\\">\\n                        <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-contacts\\\">\\n                            <div class=\\\"setting-icon-background\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-cancel\\\"></svg>\\n                            </div>\\n                            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_contacts\\\"))]}</div>\\n                            <div class=\\\"settings-block-label one-line\\\"></div>\\n                        </div>\\n                        <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-domains\\\">\\n                            <div class=\\\"setting-icon-background\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"web-cancel\\\"></svg>\\n                            </div>\\n                            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_domains\\\"))]}</div>\\n                            <div class=\\\"settings-block-label one-line\\\"></div>\\n                        </div>\\n                        <div class=\\\"settings-tab hidden\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-invitations\\\">\\n                            <div class=\\\"setting-icon-background\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"invite\\\"></svg>\\n                            </div>\\n                            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_invitations\\\"))]}</div>\\n                            <div class=\\\"settings-block-label one-line\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_contacts\\\"))]}' data-block-name=\\\"blocklist-contacts\\\" class=\\\"settings-block-wrap blocklist-contacts\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"blocklist-info\\\">\\n                            <div class=\\\"blocklist-wrap\\\">\\n                                <div class=\\\"buttons-wrap\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                    <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                    <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                </div>\\n                                <div class=\\\"blocked-items\\\">\\n                                    <div class=\\\"blocked-contacts-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_contacts_empty\\\"))]}</div>\\n                                    <div class=\\\"blocked-items-container blocked-contacts-wrap\\\" data-tab-name=\\\"contacts-item\\\">\\n                                        <div class=\\\"blocked-contacts blocked-list\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_domains\\\"))]}' data-block-name=\\\"blocklist-domains\\\" class=\\\"settings-block-wrap blocklist-domains\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"blocklist-info\\\">\\n                            <div class=\\\"blocklist-wrap\\\">\\n                                <div class=\\\"buttons-wrap\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                    <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                    <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                </div>\\n                                <div class=\\\"blocked-items\\\">\\n                                    <div class=\\\"blocked-domains-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_domains_empty\\\"))]}</div></div>\\n                                <div class=\\\"blocked-items-container blocked-domains-wrap\\\" data-tab-name=\\\"domains-item\\\">\\n                                    <div class=\\\"blocked-domains blocked-list\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_invitations\\\"))]}' data-block-name=\\\"blocklist-invitations\\\" class=\\\"settings-block-wrap blocklist-invitations\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"blocklist-info\\\">\\n                        <div class=\\\"blocklist-wrap\\\">\\n                            <div class=\\\"buttons-wrap\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                            </div>\\n                            <div class=\\\"blocked-items\\\">\\n                                <div class=\\\"blocked-invitations-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_invitations_empty\\\"))]}</div>\\n                                <div class=\\\"blocked-items-container blocked-invitations-wrap\\\" data-tab-name=\\\"invitations-item\\\">\\n                                    <div class=\\\"blocked-invitations blocked-list\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}' class=\\\"settings-block-wrap circles-groups\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"groups-info\\\">\\n                        <div class=\\\"groups-wrap\\\">\\n                            <div class=\\\"groups\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__capabilities_subheader\\\"))]}' class=\\\"settings-block-wrap capabitilies\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"server-info\\\">\\n                        <div class=\\\"capabilities-wrap\\\">\\n                            <div class=\\\"capabilities\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"color\\\"))]}' class=\\\"settings-block-wrap color-scheme\\\">\\n                <div class=\\\"color-scheme-wrap\\\">\\n                    <div class=\\\"account-color\\\">\\n                        <div class=\\\"field radio-field clickable-field\\\">\\n                            <form action=\\\"#\\\">\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"red\\\" type=\\\"radio\\\" id=\\\"color-red\\\" />\\n                                    <label class=\\\"text-color-red-700\\\" for=\\\"color-red\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"pink\\\" type=\\\"radio\\\" id=\\\"color-pink\\\" />\\n                                    <label class=\\\"text-color-pink-700\\\" for=\\\"color-pink\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"purple\\\" type=\\\"radio\\\" id=\\\"color-purple\\\" />\\n                                    <label class=\\\"text-color-purple-700\\\" for=\\\"color-purple\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-purple\\\" type=\\\"radio\\\" id=\\\"color-deep-purple\\\" />\\n                                    <label class=\\\"text-color-deep-purple-700\\\" for=\\\"color-deep-purple\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"indigo\\\" type=\\\"radio\\\" id=\\\"color-indigo\\\" />\\n                                    <label class=\\\"text-color-indigo-700\\\" for=\\\"color-indigo\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue\\\" type=\\\"radio\\\" id=\\\"color-blue\\\" />\\n                                    <label class=\\\"text-color-blue-700\\\" for=\\\"color-blue\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-blue\\\" type=\\\"radio\\\" id=\\\"color-light-blue\\\" />\\n                                    <label class=\\\"text-color-light-blue-700\\\" for=\\\"color-light-blue\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"cyan\\\" type=\\\"radio\\\" id=\\\"color-cyan\\\" />\\n                                    <label class=\\\"text-color-cyan-700\\\" for=\\\"color-cyan\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"teal\\\" type=\\\"radio\\\" id=\\\"color-teal\\\" />\\n                                    <label class=\\\"text-color-teal-700\\\" for=\\\"color-teal\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"green\\\" type=\\\"radio\\\" id=\\\"color-green\\\" />\\n                                    <label class=\\\"text-color-green-700\\\" for=\\\"color-green\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-green\\\" type=\\\"radio\\\" id=\\\"color-light-green\\\" />\\n                                    <label class=\\\"text-color-light-green-700\\\" for=\\\"color-light-green\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"lime\\\" type=\\\"radio\\\" id=\\\"color-lime\\\" />\\n                                    <label class=\\\"text-color-lime-700\\\" for=\\\"color-lime\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"amber\\\" type=\\\"radio\\\" id=\\\"color-amber\\\" />\\n                                    <label class=\\\"text-color-amber-700\\\" for=\\\"color-amber\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"orange\\\" type=\\\"radio\\\" id=\\\"color-orange\\\" />\\n                                    <label class=\\\"text-color-orange-700\\\" for=\\\"color-orange\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-orange\\\" type=\\\"radio\\\" id=\\\"color-deep-orange\\\" />\\n                                    <label class=\\\"text-color-deep-orange-700\\\" for=\\\"color-deep-orange\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"brown\\\" type=\\\"radio\\\" id=\\\"color-brown\\\" />\\n                                    <label class=\\\"text-color-brown-700\\\" for=\\\"color-brown\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue-grey\\\" type=\\\"radio\\\" id=\\\"color-blue-grey\\\" />\\n                                    <label class=\\\"text-color-blue-grey-700\\\" for=\\\"color-blue-grey\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__encryption\\\"))]}' class=\\\"settings-block-wrap encryption\\\">\\n                <div class=\\\"btn-more device-more-button dropdown-button\\\" data-activates=\\\"device-omemo-actions\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n                </div>\\n                <ul id=\\\"device-omemo-actions\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n                    <div class=\\\"property-variant btn-manage-devices\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_manage_devices\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant btn-purge-keys\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_purge_keys\\\"))]}</span>\\n                    </div>\\n                </ul>\\n                <div class=\\\"omemo-settings-wrap\\\">\\n                    <div class=\\\"settings\\\">\\n                        <div class=\\\"setting-wrap omemo-enable\\\">\\n                            <span>{[print(xabber.getString(\\\"omemo__settings__toggle_enable_encryption\\\"))]}</span>\\n                            <div class=\\\"field setting-use-omemo switch normal\\\">\\n                                <label class=\\\"field-value\\\">\\n                                    <input type=\\\"checkbox\\\">\\n                                    <span class=\\\"lever\\\"></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-wrap send-chat-states\\\">\\n                            <span>{[print(xabber.getString(\\\"omemo__settings__toggle_send_typing_notifications\\\"))]}</span>\\n                            <div class=\\\"field setting-send-chat-states switch normal\\\">\\n                                <label class=\\\"field-value\\\">\\n                                    <input type=\\\"checkbox\\\">\\n                                    <span class=\\\"lever\\\"></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}' class=\\\"settings-block-wrap media-gallery\\\">\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__device_information\\\"))]}' class=\\\"settings-block-wrap device-information hidden\\\">\\n                <div class=\\\"device-information-trust-text-wrap\\\">\\n                    <div class=\\\"device-information-trust-text\\\"></div>\\n                </div>\\n                <div class=\\\"device-information-wrap\\\">\\n                    <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings_account__device_information\\\"))]}</div>\\n                    <div class=\\\"device-information-items-wrap device-information-basic\\\">\\n                        <div class=\\\"device-information-item device-information-status\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"status\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__status__label\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-last-seen\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"history\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__status__label_last_seen\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-client\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"id\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__client__label\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-ip\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__ip__label\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-expires\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"expires\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__expire__label\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-panel-label device-information-security-label\\\">{[print(xabber.getString(\\\"settings__menu_item__security\\\"))]}</div>\\n                    <div class=\\\"device-information-items-wrap device-information-encryption\\\">\\n                        <div class=\\\"device-information-item device-information-device-id\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"settings_account__device_information_device_id\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-fingerprint hidden\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"lock\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__fingerprint_label\\\"))]}</div>\\n                            <div class=\\\"device-information-text device-information-fingerprint-text\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-tab device-information-trust settings-deletion-button\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-alert\\\" data-svgname=\\\"lock-alert\\\"></svg>\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-check\\\" data-svgname=\\\"lock-check\\\"></svg>\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-cross\\\" data-svgname=\\\"lock-cross\\\"></svg>\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-question\\\" data-svgname=\\\"lock-question\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings_account__identity_verification\\\"))]}</div>\\n                    </div>\\n                    <div class=\\\"settings-tab btn-revoke-token settings-deletion-button\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"device__info__terminate_session__button\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input input-glow field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"token-wrap settings-tab\\\" data-subblock-parent-name=\\\"devices\\\" data-block-name=\\\"device-information\\\" data-token-uid=\\\"{{token_uid}}\\\">\\n    <div class=\\\"token-icon-wrap\\\">\\n        {[if (device && (device.indexOf('Android') > -1 || device.indexOf('iOS') > -1)){]}\\n            <svg class=\\\"mdi token-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"device-cellphone\\\"></svg>\\n        {[} else {]}\\n            <svg class=\\\"mdi token-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"device-web\\\"></svg>\\n        {[}]}\\n    </div>\\n    <div class=\\\"token-client-wrap\\\">\\n        <div class=\\\"device one-line\\\">{{device}}</div>\\n        <div class=\\\"ip-address\\\">{{ip}} • {[ if (resource_obj) {]}{[print(xabber.getString(\\\"account_state_connected\\\"))]}{[} else {]}{{last_auth}}{[}]}</div>\\n    </div>\\n    <div class=\\\"device-encryption one-line\\\">\\n        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"security\\\"></svg>\\n    </div>\\n</div>\";","export default \"<div class=\\\"border ground-color-500\\\"></div>\\n<div class=\\\"account-item-avatar-wrap\\\">\\n    <div class=\\\"circle-avatar-wrap\\\">\\n        <div class=\\\"dropdown-button circle-avatar border-color noselect\\\"></div>\\n    </div>\\n</div>\\n<div class=\\\"status\\\"></div>\\n<i class=\\\"auth-failed mdi mdi-16px mdi-close\\\"></i>\\n<div class=\\\"account-actions-panel\\\">\\n    <div class=\\\"filter-chats\\\">\\n        <i class=\\\"mdi mdi-filter mdi-20px\\\"></i>\\n        <div class=\\\"text\\\">{[print(xabber.getString(\\\"account__toolbar_item__button_filter_chats\\\"))]}</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header no-select\\\">\\n        <span>{[print(xabber.getString(\\\"settings_account__delete_account_modal_title\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content login-panel-form\\\">\\n        <div class=\\\"modal-description-text no-select\\\">{[print(xabber.getString(\\\"settings_account__delete_account_modal_text\\\"))]}</div>\\n\\n        <div class=\\\"login-form-jid\\\">\\n            <div class=\\\"login-form-step-wrap\\\">\\n                <div class=\\\"input-field-wrap\\\">\\n                    <div class=\\\"input-field checkbox-field\\\">\\n                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"confirm_unregister_1\\\"/>\\n                        <label for=\\\"confirm_unregister_1\\\">{[print(xabber.getString(\\\"settings_account__checkbox_confirm_unregister_text_1\\\"))]}</label>\\n                    </div>\\n                    <div class=\\\"input-field checkbox-field\\\">\\n                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"confirm_unregister_2\\\"/>\\n                        <label for=\\\"confirm_unregister_2\\\">{[print(xabber.getString(\\\"settings_account__checkbox_confirm_unregister_text_2\\\"))]}</label>\\n                    </div>\\n                    <div class=\\\"input-field password-field\\\">\\n                        <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"settings_account__delete_account_modal_password_placeholder_text\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                        <div class=\\\"login-form-step-error login-password-error\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"login-confirm-form-step-wrap hidden\\\">\\n                <div class=\\\"input-field-wrap\\\">\\n                    <div class=\\\"input-field input-field-jid input-field-jid-borders\\\">\\n                        <input id=\\\"jid\\\" type=\\\"text\\\" name=\\\"jid\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"login-form-step-error login-jid-error hidden\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button disabled class=\\\"btn-flat btn-main btn-log-in\\\">{[print(xabber.getString(\\\"account_delete\\\"))]}</button>\\n        <button disabled class=\\\"btn-flat btn-main btn-submit-unregister hidden\\\">{[print(xabber.getString(\\\"account_delete\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"take_photo\\\"))]}</span>\\n    </div>\\n    <div class=\\\"webcam-profile-image-wrap\\\">\\n        <div class=\\\"camera\\\">\\n            <video class=\\\"webcam-video\\\">Video stream not available.</video>\\n        </div>\\n        <canvas id=\\\"canvas\\\" style=\\\"display: none;\\\">\\n        </canvas>\\n        <div class=\\\"output hidden\\\">\\n            <div class=\\\"webcam-photo-wrap\\\">\\n                <img class=\\\"webcam-photo\\\" alt=\\\"The screen capture will appear in this box.\\\">\\n            </div>\\n            <div class=\\\"circle-icon\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"camera-retake\\\"></svg>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-take-photo\\\">{[print(xabber.getString(\\\"capture\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-save hidden\\\">{[print(xabber.getString(\\\"account_webcam_profile_image_btn_save\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        <div class=\\\"modal-preloader-wrap\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"login-panel-intro\\\">\\n    <div class=\\\"login-panel-head noselect\\\">\\n        <img src=\\\"{{CLIENT_LOGO}}\\\" class=\\\"client-logo\\\">\\n        <span class=\\\"client-name\\\">{{SHORT_CLIENT_NAME}}</span>\\n        <span class=\\\"client-description\\\">{{SHORT_CLIENT_DESCRIPTION}}</span>\\n    </div>\\n    <div class=\\\"login-buttons\\\">\\n        <div class=\\\"btn-flat btn-main btn-register-form one-line\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_up\\\"))]}</div>\\n        <div class=\\\"btn-flat btn-main btn-login-form one-line\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_in\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"login-panel-form xmpp-login-form noselect hidden\\\">\\n    <svg class=\\\"details-icon btn-go-back-menu mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</div>\\n    <div class=\\\"login-form-jid\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"dialog_jingle_message__message_connect\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field input-field-jid\\\">\\n                    <input id=\\\"jid\\\" placeholder='{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}' type=\\\"text\\\" name=\\\"jid\\\">\\n                    <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                        <div class=\\\"select-auth-xmpp-server\\\">\\n                            <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                            <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                                <input id=\\\"sign_in_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' value=\\\"111111\\\" name=\\\"sign_in_domain\\\">\\n                            </div>\\n                            <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-auth-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                            <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-error login-jid-error hidden\\\"></div>\\n            <div class=\\\"register-form-step-error login-password-error hidden\\\"></div>\\n            <div class=\\\"register-form-step-description\\\"></div>\\n            <div class=\\\"login-step-wrap hidden\\\">\\n                <div class=\\\"login-step connecting-step\\\">\\n                    <div class=\\\"login-step-text\\\">\\n                        {[print(xabber.getString(\\\"dialog_jingle_message__status_communicating\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                </div>\\n                <div class=\\\"login-step credentials-step\\\">\\n                    <div class=\\\"login-step-text\\\">\\n                        {[print(xabber.getString(\\\"dialog_jingle_message__status_checking_credentials\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"login-form-server-features hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\"></div>\\n        </div>\\n        <div class=\\\"login-server-features-wrap\\\">\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.MAM)]}\\\" >\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_message_archive\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_archive_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.SYNCHRONIZATION)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_synchronization\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_quick_synchronization_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.REWRITE)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_message_editing\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_editing_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.AUTH_DEVICES)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_device_management\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_tokens_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.PUBSUB)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_publish_subscribe\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_pubsub_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.HTTP_UPLOAD)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_file_upload\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_file_upload_error'))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"server-features-error\\\"></div>\\n    </div>\\n    <div class=\\\"input-field buttons-wrap\\\">\\n        <button class=\\\"btn btn-flat btn-main-filled btn-log-in\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main-filled one-line hidden btn-sign-up-instead\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_up\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main-filled one-line hidden btn-finish-log-in\\\"></button>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\\n<div class=\\\"login-panel-form register-form noselect hidden\\\">\\n    <svg class=\\\"details-icon btn-go-back mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_register_xabber_account\\\"))]}</div>\\n    <div class=\\\"login-form-skip hidden\\\">{[print(xabber.getString(\\\"skip\\\"))]}</div>\\n    <div class=\\\"register-form-nickname\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_nickname\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_nickname\\\" placeholder='{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}' type=\\\"text\\\" name=\\\"register_nickname\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_nickname\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-jid hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_jid\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_jid\\\" placeholder='{[print(xabber.getString(\\\"hint_username\\\"))]}' type=\\\"text\\\" name=\\\"register_jid\\\">\\n                </div>\\n                <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                    <div class=\\\"select-xmpp-server\\\">\\n                        <div data-activates=\\\"select-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                        <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                            <input id=\\\"new_account_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"register_domain\\\">\\n                        </div>\\n                        <div data-activates=\\\"select-xmpp-server\\\" class=\\\"caret\\\">\\n                            <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                            <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div id=\\\"select-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                        <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_jid\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-password hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_password\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"register_password\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_password\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-picture hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_avatar\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"avatar-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                    <div class=\\\"circle-avatar\\\">\\n                        <input id=\\\"register_picture\\\"  title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                        <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown dropdown-content noselect\\\">\\n                            <div class=\\\"btn-emoji-panel property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-selfie property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-choose-image property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                            </div>\\n                        </ul>\\n                    </div>\\n                    <div class=\\\"circle-icon\\\">\\n                        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                        </svg>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    {[if (xabber.url_params && xabber.url_params.rkey){]}\\n        <div class=\\\"login-form-url\\\">\\n            <i class=\\\"mdi login-form-url-icon mdi-link-variant\\\"></i>\\n            <div class=\\\"login-form-url-text\\\">\\n                {[print(xabber.getString(\\\"xmpp_login__registration_via_link\\\"))]}\\n            </div>\\n        </div>\\n    {[}]}\\n    <div class=\\\"input-field buttons-wrap\\\">\\n        <button class=\\\"btn btn-flat btn-main-filled btn-next\\\">{[print(xabber.getString(\\\"xaccount_next\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main btn-skip\\\">{[print(xabber.getString(\\\"xmpp_login__registration_skip\\\"))]}</button>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\";","export default \"<div class=\\\"left-column noselect\\\">\\n    <div class=\\\"main-info-wrap xabber-info-wrap\\\">\\n        <div class=\\\"picture-wrap\\\">\\n            <img class=\\\"logo\\\" src=\\\"{{CLIENT_LOGO}}\\\"/>\\n        </div>\\n        <div class=\\\"name\\\">{{CLIENT_NAME}}</div>\\n        <div class=\\\"version\\\"></div>\\n    </div>\\n</div>\\n</div>\\n\\n<div class=\\\"right-column noselect\\\">\\n    <div class=\\\"settings-panel-head\\\">\\n        <span>{[print(xabber.getString(\\\"category_about\\\"))]}</span>\\n    </div>\\n\\n    <div class=\\\"panel-content-wrap\\\">\\n        <div class=\\\"panel-content\\\">\\n            <div class=\\\"settings-block-wrap about\\\">\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__preamble_1\\\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__preamble_2\\\", [`<a href=\\\"${CLIENT_URL}\\\" target=\\\"_blank\\\">${CLIENT_URL}</a>`]))]}</div>\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_1__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_1__text\\\"))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_2__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_2__text\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_1\\\", [constants.CLIENT_NAME, `<a href=\\\"${DEVELOPER_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"client_developer_company_name\\\")}</a>`, constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_2\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_3\\\"))]}</div>\\n                <div class=\\\"block-content flex-content\\\">\\n                    <img class=\\\"logo\\\" src=\\\"images/redsolution-logo.png\\\"/>\\n                    <a href=\\\"https://twitter.com/Xabber_XMPP\\\" target=\\\"_blank\\\"><div class=\\\"btn-social twitter-color\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-twitter\\\"></i>\\n                    </div></a>\\n                    <a href=\\\"${CLIENT_GITHUB_URL}\\\" target=\\\"_blank\\\"><img class=\\\"btn-social github-logo\\\" src=\\\"images/ic_github.png\\\"/></a>\\n                </div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__text_1\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__text_2\\\", [`<a href=\\\"${PROJECT_CROWDIN_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_4__text_2__link__text\\\", [constants.SHORT_CLIENT_NAME])}</a>`]))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_1\\\", [constants.CLIENT_NAME, `<a href=\\\"${CLIENT_GITHUB_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_5__text_1__link__text\\\")}</a>`]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_2\\\"))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_3\\\", [constants.SHORT_CLIENT_NAME, xabber.getString(\\\"client_developer_company_name\\\"), `<a href=\\\"${DEVELOPER_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"client_developer_company_full_name\\\")}</a>`]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_4\\\", [constants.CLIENT_NAME, `<a href=\\\"${CLIENT_LICENSE_GITHUB_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_5__text_4__link__text\\\")}</a>`]))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"library\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_library\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"library\\\" class=\\\"screen-wrap library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"hidden screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__text\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__button_upload\\\"))]}</button>\\n                <input type=\\\"file\\\">\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</div>\\n<div class=\\\"material-color-picker-wrap\\\">\\n    <div class=\\\"material-color-picker\\\">\\n        {[materialColors.forEach(function (color) {]}\\n        <div data-color-name=\\\"{{color.color}}\\\" class=\\\"color-palette-wrapper\\\">\\n            {[var default_color = color.variations.find(v => v.weight == 500);]}\\n            <div data-weight=\\\"500\\\" data-hex=\\\"{{default_color.hex}}\\\" style=\\\"background-color: {{default_color.hex}}\\\" class=\\\"color-palette-item\\\">\\n            </div>\\n            {[color.variations.forEach(function (variation) {]}\\n            <div data-weight=\\\"{{variation.weight}}\\\" data-hex=\\\"{{variation.hex}}\\\" style=\\\"background-color: {{variation.hex}}\\\" class=\\\"color-palette-item\\\">\\n            </div>\\n            {[})]}\\n        </div>\\n        {[})]}\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"hidden selected-color-wrap\\\">\\n        <div class=\\\"selected-color-item\\\"></div>\\n        <div class=\\\"selected-color-info\\\">\\n            <div class=\\\"selected-color-name\\\"></div>\\n            <div class=\\\"selected-color-hex\\\"></div>\\n            <input class=\\\"selected-color-hex-input hidden\\\"/>\\n        </div>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-set\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<ul class=\\\"color-values noselect\\\">\\n    <li class=\\\"color-value\\\" data-value=\\\"red\\\">\\n        <div class=\\\"color-name text-color-red-700\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-red-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"pink\\\">\\n        <div class=\\\"color-name text-color-pink-700\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-pink-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"purple\\\">\\n        <div class=\\\"color-name text-color-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-purple-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"deep-purple\\\">\\n        <div class=\\\"color-name text-color-deep-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-deep-purple-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"indigo\\\">\\n        <div class=\\\"color-name text-color-indigo-700\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-indigo-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"blue\\\">\\n        <div class=\\\"color-name text-color-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-blue-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"light-blue\\\">\\n        <div class=\\\"color-name text-color-light-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-light-blue-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"cyan\\\">\\n        <div class=\\\"color-name text-color-cyan-700\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-cyan-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"teal\\\">\\n        <div class=\\\"color-name text-color-teal-700\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-teal-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"green\\\">\\n        <div class=\\\"color-name text-color-green-700\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-green-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"light-green\\\">\\n        <div class=\\\"color-name text-color-light-green-700\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-light-green-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"lime\\\">\\n        <div class=\\\"color-name text-color-lime-700\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-lime-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"amber\\\">\\n        <div class=\\\"color-name text-color-amber-700\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-amber-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"orange\\\">\\n        <div class=\\\"color-name text-color-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-orange-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"deep-orange\\\">\\n        <div class=\\\"color-name text-color-deep-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-deep-orange-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"brown\\\">\\n        <div class=\\\"color-name text-color-brown-700\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-brown-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"blue-grey\\\">\\n        <div class=\\\"color-name text-color-blue-grey-700\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-blue-grey-700\\\"></div>\\n    </li>\\n</ul>\";","export default \"<div class=\\\"modal dialog-modal {{modal_class}}\\\">\\n    <div class=\\\"modal-header\\\">\\n        <div class=\\\"panel-header black-text\\\">{{header}}</div>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"dialog-text\\\">{{text}}</div>\\n        <div class=\\\"dialog-options-wrap\\\">\\n        {[ for (var idx in dialog_options) { var option = dialog_options[idx]; ]}\\n            <div class=\\\"dialog-option\\\" data-name=\\\"{{option.name}}\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"dialog_option_{{option.name}}\\\" {[ if (option.checked) { ]}checked=\\\"checked\\\"{[ } ]}/>\\n                <label for=\\\"dialog_option_{{option.name}}\\\">{{option.text}}</label>\\n            </div>\\n        {[ } ]}\\n        </div>\\n        <div class=\\\"container-for-img hidden\\\"><img class=\\\"img-from-clipboard\\\"></div>\\n    </div>\\n    <div class=\\\"modal-footer {{flag}}\\\">\\n        {[ for (var idx in optional_buttons) { var button = optional_buttons[idx]; ]}\\n        <button class=\\\"optional-button btn-flat btn-main\\\" data-option=\\\"{{button.value}}\\\">{{button.name}}</button>\\n        {[ } ]}\\n        {[ if (ok_button) { ]}\\n        <button class=\\\"ok-button btn-flat btn-main\\\" data-option=true>{{ok_button.text}}</button>\\n        {[ } ]}\\n        {[ if (cancel_button) { ]}\\n        <button class=\\\"cancel-button btn-flat btn-main btn-dark btn-cancel\\\" data-option=false>{{cancel_button.text}}</button>\\n        {[ } ]}\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"fingerprint-content\\\">\\n    {[if (svg_icon){]}\\n        <div class=\\\"fingerprint-device-icon\\\">\\n            <svg class=\\\"mdi mdi-72px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n        </div>\\n    {[}]}\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap device-fingerprints-part\\\">\\n        <div class=\\\"fingerprint-label\\\">\\n            <div class=\\\"value\\\">{{label}}</div>\\n        </div>\\n    </div>\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap device-fingerprints-part\\\">\\n        <div class=\\\"device-id\\\">\\n            <div class=\\\"value\\\">{{id}}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"fingerprint-wrap\\\">\\n        <div title=\\\"Device fingerprint\\\" class=\\\"fingerprint device-fingerprints-part\\\">\\n            <div class=\\\"label\\\">\\n                {[if (!edit_setting) {]}\\n                    {[print(xabber.getString(\\\"omemo__dialog_fingerprints__other_fingerprint_label\\\"))]}\\n                {[} else {]}\\n                <span class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_this_device\\\"))]}</span> {[print(xabber.getString(\\\"omemo__dialog_fingerprints__fingerprint_label\\\"))]}\\n                {[}]}</div>\\n            <div class=\\\"value\\\">{{fingerprint}}</div>\\n        </div>\\n        {[if (error) {]}\\n        <div class=\\\"fingerprint-error\\\">{{error}}</div>\\n        {[}]}\\n        {[if (old_fingerprint){]}<div title=\\\"Old device fingerprint\\\" class=\\\"old-fingerprint\\\">{{old_fingerprint}}</div>{[}]}\\n    </div>\\n</div>\\n<div data-trust=\\\"{{trust}}\\\" class=\\\"buttons\\\">\\n    {[if (trust !== null && !error) {]}\\n    <div class=\\\"dropdown-button\\\" data-activates=\\\"select-status-{{id}}\\\">\\n        <div class=\\\"trust-item-wrap btn-main btn-flat\\\">\\n            <div data-value=\\\"{{trust}}\\\">{[print(xabber.getString(`omemo__dialog_fingerprints__button_verify_device`))]}</div>\\n        </div>\\n    </div>\\n    <div id=\\\"select-status-{{id}}\\\" class=\\\"dropdown-content bootstrap-dropdown noselect fingerprint-dropdown\\\">\\n        <div data-value=\\\"ignore\\\" class=\\\"property-variant btn-ignore\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_ignore\\\"))]}</div>\\n        <div data-value=\\\"trust\\\" class=\\\"property-variant btn-trust\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_trust\\\"))]}</div>\\n    </div>\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"row\\\">\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap\\\">\\n        {[if (edit_setting) {]}\\n        <input class=\\\"hidden set-label one-line\\\" {[if (label) {]}value=\\\"{{label}}\\\"{[}]}>{[}]}\\n        {[if (label) {]}<div class=\\\"one-line label\\\">{{label}}</div>{[}]}\\n        <div class=\\\"device-id one-line\\\">{{id}}</div>\\n        {[if (!label) {]}<div class=\\\"device-id-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label_device_id\\\"))]}</div>{[}]}\\n        {[if (edit_setting) {]}<div class=\\\"set-label-label hidden\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label_set_label\\\"))]}</div>{[}]}\\n    </div>\\n    <div class=\\\"fingerprint-wrap\\\">\\n        <div title=\\\"Device fingerprint\\\" class=\\\"fingerprint\\\">{{fingerprint}}</div>\\n        {[if (error) {]}\\n        <div class=\\\"fingerprint-error\\\">{{error}}</div>\\n        {[}]}\\n        {[if (old_fingerprint){]}<div title=\\\"Old device fingerprint\\\" class=\\\"old-fingerprint\\\">{{old_fingerprint}}</div>{[}]}\\n    </div>\\n    <div data-trust=\\\"{{trust}}\\\" class=\\\"buttons\\\">\\n        {[if (trust !== null && !error) {]}\\n        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-status-{{id}}\\\">\\n            <div class=\\\"trust-item-wrap btn-main btn-flat\\\">\\n                <div data-value=\\\"{{trust}}\\\">{[print(xabber.getString(`omemo__dialog_fingerprints__button_${trust}`))]}</div>\\n            </div>\\n        </div>\\n        <div id=\\\"select-status-{{id}}\\\" class=\\\"dropdown-content noselect fingerprint-dropdown\\\">\\n            <div data-value=\\\"ignore\\\" class=\\\"btn-main text-color-grey-500 btn-ignore btn-flat\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_ignore\\\"))]}</div>\\n            <div data-value=\\\"trust\\\" class=\\\"btn-main btn-flat btn-trust text-color-green-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_trust\\\"))]}</div>\\n            {[if (delete_button){]}\\n            <div class=\\\"btn-main btn-flat btn-delete text-color-red-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_delete\\\"))]}</div>\\n            {[}]}\\n        </div>\\n        {[}]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header fingerprints-header\\\">\\n    <div class=\\\"header\\\"></div>\\n    <div class=\\\"additional-info\\\"></div>\\n</div>\\n<div class=\\\"fingerprints-content\\\">\\n</div>\\n<div class=\\\"fingerprints-bottom\\\">\\n    <div class=\\\"this-device-wrap\\\">\\n        <div class=\\\"this-device-header-wrap\\\">\\n            <div class=\\\"divider\\\"></div>\\n            <div class=\\\"this-device-header\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_this_device\\\"))]}</div>\\n        </div>\\n        <div class=\\\"this-device-content\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"fingerprints-description-wrap\\\">\\n        <div class=\\\"fingerprints-description\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_description\\\"))]}</div>\\n        <div class=\\\"link-about-encryption\\\"><a href=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__link_learn_more'))]}\\\" target=\\\"_blank\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_learn_more\\\"))]}</a></div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header fingerprints-header\\\">\\n    {[print(xabber.getString(\\\"omemo__dialog_fingerprints__device_verification_label\\\"))]}\\n</div>\\n<div class=\\\"fingerprints-content\\\">\\n    <div class=\\\"other-device-content\\\">\\n\\n    </div>\\n    <div class=\\\"this-device-content\\\">\\n\\n    </div>\\n</div>\\n<div class=\\\"fingerprints-bottom\\\">\\n    <div class=\\\"fingerprints-help-text\\\">\\n        {[print(xabber.getString(\\\"omemo__dialog_fingerprints__bottom_help_text\\\"))]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}} field-text one-line\\\"></div>\\n    <div class=\\\"btn-rename\\\">\\n        <span>{[print(xabber.getString(\\\"input_widget__button_rename\\\"))]}</span>\\n    </div>\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input field-input hidden\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"collapsed-movable\\\"></div>\\n<i class=\\\"mdi mdi-phone btn-collapse\\\"></i>\\n<div class=\\\"call-header\\\">\\n    {[print(xabber.getString(\\\"dialog_jingle_message__header\\\", [SHORT_CLIENT_NAME]))]}\\n    <div class=\\\"calling-status\\\"></div>\\n</div>\\n<div class=\\\"blur-background\\\"></div>\\n<div class=\\\"contact-info\\\">\\n    <div class=\\\"name one-line\\\"></div>\\n    <div class=\\\"calling-status\\\"></div>\\n</div>\\n<div class=\\\"video-wrap\\\">\\n    <video autoplay loop class=\\\"blank-video hidden\\\">\\n        <source src=\\\"{{BLANK_VIDEO.MP4}}\\\">\\n        <source src=\\\"{{BLANK_VIDEO.OGG}}\\\" type=\\\"video/ogg\\\">\\n        <source src=\\\"{{BLANK_VIDEO.WEBM}}\\\" type=\\\"video/webm\\\">\\n    </video>\\n    <audio autoplay class=\\\"webrtc-remote-audio hidden\\\"></audio>\\n    <video autoplay muted class=\\\"webrtc-local-video collapsed hidden\\\"></video>\\n    <div class=\\\"default-screen\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n        <div class=\\\"name one-line\\\"></div>\\n    </div>\\n</>\\n<div class=\\\"buttons-panel\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"btn-wrap\\\" title=\\\"Collapse window\\\"><svg class=\\\"btn-collapse mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M19.5,3.09L15,7.59V4H13V11H20V9H16.41L20.91,4.5L19.5,3.09M4,13V15H7.59L3.09,19.5L4.5,20.91L9,16.41V20H11V13H4Z\\\"></path>\\n        </svg></div>\\n        <div class=\\\"btn-wrap\\\" title=\\\"Fullscreen mode\\\"><svg class=\\\"btn-full-screen mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M11,21H3V13H5V17.59L17.59,5H13V3H21V11H19V6.41L6.41,19H11V21Z\\\" />\\n        </svg></div>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_mute_microphone__tooltip\\\"))]}' class=\\\"btn-microphone mdi mdi-24px mdi-microphone\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_switch_video__tooltip\\\"))]}' class=\\\"btn-video mdi mdi-24px mdi-video\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_mute__tooltip\\\"))]}' class=\\\"btn-volume mdi mdi-24px mdi-volume-high\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_share_screen__tooltip\\\"))]}' class=\\\"btn-share-screen mdi mdi-24px mdi-monitor\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_accept_call__tooltip\\\"))]}' class=\\\"btn-accept mdi mdi-24px mdi-phone\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_decline_call__tooltip\\\"))]}' class=\\\"btn-cancel mdi mdi-24px mdi-phone-hangup\\\"></i>\\n    </div>\\n</div>\";","export default \"<div class=\\\"msg-text ground-color-300\\\">\\n    <span title=\\\"{[print(xabber.getString('omemo__alert_enable__tooltip'))]}\\\" class=\\\"btn-enable\\\">{[print(xabber.getString(\\\"omemo__alert_enable__link_text\\\"))]}</span> {[print(xabber.getString(\\\"omemo__alert_enable__text\\\", [jid]))]}</div>\\n<i class=\\\"mdi mdi-22px mdi-close btn-escape\\\"></i>\\n<button class=\\\"btn-enable btn-flat hover-ground-color-500 btn-dark btn-main\\\">{[print(xabber.getString(\\\"omemo__alert_enable__link_text\\\"))]}</button>\";","export default \"<div class=\\\"plyr-player-popup-container\\\">\\n    <div class=\\\"plyr-player-popup-draggable\\\">\\n        <video class=\\\"plyr-player-popup\\\"></video>\\n        <div class=\\\"plyr-player-min-controls-tab\\\">\\n            <div class=\\\"plyr-player-min-controls-buttons\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-minimize-full mdi-svg-template\\\" data-svgname=\\\"player-full\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-play mdi-plyr-play mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-play mdi-plyr-pause mdi-svg-template\\\" data-svgname=\\\"pause\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-mute mdi-mute-plyr mdi-svg-template\\\" data-svgname=\\\"volume-off\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-mute mdi-unmute-plyr mdi-svg-template\\\" data-svgname=\\\"volume-high\\\"></svg>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"plyr-player-control-tab\\\">\\n    <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n    <svg class=\\\"mdi mdi-24px mdi-plyr-toolbar-item mdi-plyr-hide mdi-svg-template\\\" data-svgname=\\\"player-mini\\\"></svg>\\n</div>\";","export default \"<div class=\\\"language-item\\\">\\n    <input class=\\\"with-gap\\\" name=\\\"{{input_name}}\\\" value=\\\"{{value}}\\\" type=\\\"radio\\\" id=\\\"{{input_id}}\\\" />\\n    <label for=\\\"{{input_id}}\\\">{{label}}</label>\\n    {[ if (progress && progress.text) {]}<div class=\\\"translation-progress\\\">{{progress.text}}</div>{[}]}\\n</div>\";","export default \"<p>\\n    <input class=\\\"with-gap\\\" name=\\\"{{input_name}}\\\" value=\\\"{{value}}\\\" type=\\\"radio\\\" id=\\\"{{input_id}}\\\" />\\n    <label for=\\\"{{input_id}}\\\">{{label}}</label>\\n</p>\";","export default \"    <div class=\\\"left-column noselect\\\">\\n        <div class=\\\"main-info-wrap xabber-info-wrap\\\">\\n            <div class=\\\"picture-wrap\\\">\\n                <img class=\\\"logo\\\" src=\\\"{{CLIENT_LOGO}}\\\"/>\\n            </div>\\n            <div class=\\\"name\\\">{{CLIENT_NAME}}</div>\\n            <div class=\\\"version\\\"></div>\\n        </div>\\n        <div class=\\\"settings-tabs-wrap\\\">\\n            {[if (ENABLE_XABBER_ACCOUNT) {]}\\n            <div class=\\\"settings-tab xabber-account-tab offline\\\" data-block-name=\\\"xabber-account\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template xabber-offline-icon\\\" data-svgname=\\\"xabber-offline\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template xabber-online-icon\\\" data-svgname=\\\"xabber-online\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__xabber_account\\\"))]}</div>\\n            </div>\\n            {[}]}\\n            <div class=\\\"settings-tab active\\\" data-block-name=\\\"xmpp-accounts\\\">\\n                <i class=\\\"mdi mdi-24px mdi-lightbulb\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"palette\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"category_interface\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"notifications\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"privacy\\\">\\n                <i class=\\\"mdi mdi-24px mdi-incognito\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"interface_language\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"translate\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}</div>\\n            </div>\\n            {[if (PERSONAL_AREA_URL && Object.keys(PERSONAL_AREA_URL).length) {]}\\n            <a href=\\\"{{PERSONAL_AREA_URL.url}}\\\" target=\\\"_blank\\\"><div class=\\\"link-button settings-tab\\\" data-block-name=\\\"{{PERSONAL_AREA_URL.label}}\\\">\\n                <i class=\\\"mdi mdi-24px mdi-{{PERSONAL_AREA_URL.icon_name}}\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{{PERSONAL_AREA_URL.label}}</div>\\n            </div>\\n            </a>\\n            {[}]}\\n        </div>\\n        <div class=\\\"settings-tabs-bottom-wrap settings-tabs-wrap\\\">\\n            <div class=\\\"settings-tab delete-all-accounts\\\">\\n                <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"button_quit\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"right-column noselect\\\">\\n        <div class=\\\"settings-panel-head\\\">\\n            <span>{[print(xabber.getString(\\\"preference_editor\\\"))]}</span>\\n            <button class=\\\"btn-add-account btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"dialog_add__label_add_account\\\"))]}</button>\\n        </div>\\n\\n        <div class=\\\"panel-content-wrap\\\">\\n            <div class=\\\"panel-content\\\">\\n                {[if (ENABLE_XABBER_ACCOUNT) {]}\\n                <div data-block-name=\\\"\\\" class=\\\"settings-block-wrap xabber-account\\\">\\n                    <div class=\\\"block-header\\\">\\n                        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__xabber_account\\\"))]}</span>\\n                    </div>\\n                </div>\\n                {[}]}\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}' class=\\\"settings-block-wrap xmpp-accounts\\\">\\n                    <div class=\\\"setting xmpp-account-list\\\">\\n                        <div class=\\\"accounts-head-wrap\\\">\\n                            <div class=\\\"accounts-head xmppid-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_xmpp_id\\\"))]}</div>\\n                            <div class=\\\"accounts-head sync-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_sync\\\"))]}</div>\\n                            <div class=\\\"accounts-head enabled-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_enabled\\\"))]}</div>\\n                        </div>\\n                        <span class=\\\"no-accounts-tip\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__text_no_accounts\\\"))]}</span>\\n                        <div class=\\\"move-account-to-bottom droppable\\\"></div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"category_interface\\\"))]}' class=\\\"settings-block-wrap background hidden\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__appearance\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__palette\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"toolbar-main-color-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_main_color\\\"))]}</div>\\n                            <div class=\\\"setting toolbar-main-color-setting field-wrap\\\">\\n                                <div class=\\\"current-main-color-wrap\\\">\\n                                    <div class=\\\"current-main-color ground-color-500\\\"></div>\\n                                    <div class=\\\"color-name\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"toolbar-color-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</div>\\n                            <div class=\\\"setting toolbar-color-setting field-wrap\\\">\\n                                <div class=\\\"selected-color-wrap\\\">\\n                                    <div class=\\\"selected-color-item\\\"></div>\\n                                    <div class=\\\"selected-color-info\\\">\\n                                        <div class=\\\"selected-color-name\\\"></div>\\n                                        <div class=\\\"selected-color-hex\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"account_settings_background\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"background-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_background\\\"))]}</div>\\n                            <div class=\\\"setting background radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-default-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_default\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"repeating-pattern\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-repeating-pattern-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-repeating-pattern-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_pattern\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"image\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-image-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-image-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_image\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                                <div class=\\\"current-background-wrap\\\">\\n                                    <div class=\\\"dark-placeholder\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__button_update\\\"))]}</div>\\n                                    <div class=\\\"current-background\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"blur-setting-wrap\\\">\\n                                <div class=\\\"setting blur-setting field-wrap\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blur_switch\\\"/>\\n                                        <label for=\\\"blur_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_blur\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"blur\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"vignetting-setting-wrap\\\">\\n                                <div class=\\\"setting vignetting-setting field-wrap\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"vignetting_switch\\\"/>\\n                                        <label for=\\\"vignetting_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_vignette\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"vignetting\\\" min=\\\"0\\\" max=\\\"200\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"chat_viewer\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_behavior\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting hotkeys radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"enter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-enter\\\" />\\n                                        <label for=\\\"{{view.cid}}-enter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_enter\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"ctrlenter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-ctrlenter\\\" />\\n                                        <label for=\\\"{{view.cid}}-ctrlenter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_ctrlenter\\\"))]}</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap contact-list\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_contact_list\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"circle-avatar noselect\\\"></div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</div>\\n                        <div class=\\\"setting avatar-shape radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"circle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-circle\\\" />\\n                                        <label for=\\\"{{view.cid}}-circle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_circle\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"squircle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-squircle\\\" />\\n                                        <label for=\\\"{{view.cid}}-squircle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_squircle\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"octagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-octagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-octagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_octagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"hexagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hexagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-hexagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_hexagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"pentagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-pentagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-pentagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_pentagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"rounded\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-rounded\\\" />\\n                                        <label for=\\\"{{view.cid}}-rounded\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_rounded\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"star\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-star\\\" />\\n                                        <label for=\\\"{{view.cid}}-star\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_star\\\"))]}</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}'  class=\\\"settings-block-wrap notifications hidden\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__web_notifications\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting idling field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"idling\\\"/>\\n                                <label for=\\\"idling\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_idling\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"notifications\\\"/>\\n                                <label for=\\\"notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_desktop_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__volume\\\"))]}</div>\\n                        <div class=\\\"setting volume-setting\\\">\\n                            <i class=\\\"mdi mdi-24px mdi-volume-low\\\"></i>\\n                            <form action=\\\"#\\\">\\n                                <div class=\\\"disabled hidden\\\"></div>\\n                                <p class=\\\"range-field\\\">\\n                                    <input type=\\\"range\\\" id=\\\"notifications_volume\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                </p>\\n                            </form>\\n                            <i class=\\\"mdi mdi-24px mdi-volume-high\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting private-notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"private-notifications\\\"/>\\n                                <label for=\\\"private-notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-shifted-block\\\">\\n                            <div class=\\\"setting message-preview private-preview field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_private\\\"/>\\n                                    <label for=\\\"preview_private\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-no\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-no\\\">No sound</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting group-notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"group-notifications\\\"/>\\n                                <label for=\\\"group-notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-shifted-block\\\">\\n                            <div class=\\\"setting message-preview group-preview field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_group\\\"/>\\n                                    <label for=\\\"preview_group\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-no\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-no\\\">No sound</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__calls\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"call\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-call\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-call\\\">Call</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__dialtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"call\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-connecting\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-connecting\\\">Call</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"attention\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-attention\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-attention\\\">Attention</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__attention_calls\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting call-attention field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"call_attention\\\"/>\\n                                <label for=\\\"call_attention\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_call_attention\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"attention\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-attention\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-attention\\\">Attention</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}'  class=\\\"settings-block-wrap privacy hidden\\\">\\n                    <div class=\\\"setting load-media field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"load-media\\\"/>\\n                            <label for=\\\"load-media\\\">{[print(xabber.getString(\\\"settings__section_privacy__load_media\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"setting typing-notifications field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"typing-notifications\\\"/>\\n                            <label for=\\\"typing-notifications\\\">{[print(xabber.getString(\\\"settings__section_privacy__typing_notifications\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"setting mapping-service field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"mapping-service\\\"/>\\n                            <label for=\\\"mapping-service\\\">{[print(xabber.getString(\\\"settings__section_privacy__mapping_service\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}'  class=\\\"settings-block-wrap interface_language hidden\\\">\\n                    <div class=\\\"setting interface-language-setting\\\">\\n                        <div class=\\\"languages-list field radio-field clickable-field\\\">\\n                            <form action=\\\"#\\\">\\n                                <div class=\\\"language-item\\\">\\n                                    <input class=\\\"with-gap\\\" name=\\\"language\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default\\\" />\\n                                    <label for=\\\"{{view.cid}}-default\\\">{[print(xabber.getString(\\\"settings__languages_list___item_default\\\", [languages[xabber.get(\\\"default_language\\\") || 'en']]))]}</label>\\n                                </div>\\n                                {[if (window.navigator.language.indexOf(xabber.get(\\\"default_language\\\")) < 0) {]}\\n                                {[}]}\\n                                {[for (let lang in constants.languages) { if (!lang || lang == xabber.get(\\\"default_language\\\")) continue;]}\\n                                <div class=\\\"language-item\\\">\\n                                    <input class=\\\"with-gap\\\" name=\\\"language\\\" value=\\\"{{lang}}\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-{{lang}}\\\" />\\n                                    <label for=\\\"{{view.cid}}-{{lang}}\\\">{[print(constants.languages[lang]);]}</label>\\n                                    {[let locale = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));]}\\n                                    {[if (locale) { let progress = client_translation_progress[locale];]}<div class=\\\"translation-progress\\\">{[print((progress == 100) ? xabber.getString(\\\"settings__section_interface_language__translation_progress_fully\\\") : xabber.getString(\\\"settings__section_interface_language__translation_progress\\\", [`${progress}%`]))]}</div>{[}]}\\n                                </div>\\n                                {[}]}\\n                            </form>\\n                        </div>\\n                        <div class=\\\"description\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"background-overlay\\\"></div>\\n<div class=\\\"settings-panel\\\">\\n    <div class=\\\"settings-transition-wrap\\\">\\n        <div class=\\\"left-column main-left-column settings-column noselect\\\">\\n            <svg class=\\\"btn-add-account mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"contact-add\\\"></svg>\\n            <div class=\\\"single-account-info-wrap account-settings-panel\\\">\\n                <div class=\\\"single-account-info\\\"></div>\\n            </div>\\n            <div class=\\\"accounts-info-wrap\\\">\\n                <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}</div>\\n                <div class=\\\"settings-divider\\\"></div>\\n                <span class=\\\"no-accounts-tip\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__text_no_accounts\\\"))]}</span>\\n            </div>\\n            <div class=\\\"settings-tabs-wrap global-settings-tabs\\\">\\n                <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"preferences\\\"))]}</div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"background\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"palette\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"category_interface\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__background_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"notifications\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"client\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__notifications_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab disabled\\\" data-block-name=\\\"data_storage\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"database\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__data_storage\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__data_storage_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"privacy\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"group-private\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__privacy_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab disabled\\\" data-block-name=\\\"connection\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__connection\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__connection_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab disabled\\\" data-block-name=\\\"debug\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bug\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__debug\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__debug_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"interface_language\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"translate\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\"></div>\\n                </div>\\n                <div class=\\\"settings-tab settings-deletion-button delete-all-accounts\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                    </div>\\n                    <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings__button_quit\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"right-column main-right-column settings-column hidden noselect\\\">\\n            <div class=\\\"settings-panel-head\\\">\\n                <i class=\\\"btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <i class=\\\"btn-back-subsettings mdi mdi-24px mdi-arrow-left hidden\\\"></i>\\n                <span class=\\\"settings-panel-head-title\\\">{[print(xabber.getString(\\\"preference_editor\\\"))]}</span>\\n                <div class=\\\"description\\\"></div>\\n            </div>\\n\\n            <div class=\\\"panel-content-wrap\\\">\\n                <div class=\\\"panel-content\\\">\\n\\n                    <div data-header='{[print(xabber.getString(\\\"category_interface\\\"))]}' class=\\\"settings-block-wrap background\\\">\\n                        <div class=\\\"settings-tabs-wrap global-settings-tabs\\\">\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"background\\\" data-block-name=\\\"appearance\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"palette\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__appearance\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__appearance_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"background\\\" data-block-name=\\\"chats\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chat\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"chat_viewer\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__chats_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"background\\\" data-block-name=\\\"avatars\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"star-face\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__appearance\\\"))]}' class=\\\"settings-block-wrap appearance\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_main_color\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"toolbar-main-color-setting-wrap\\\">\\n                                <div class=\\\"setting toolbar-main-color-setting field-wrap\\\">\\n                                    <div class=\\\"client-main-color-picker\\\">\\n                                        <div class=\\\"colors-line\\\">\\n                                            <div class=\\\"client-main-color-item ground-color-red-500 outline-color-red-500\\\" data-value=\\\"red\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-pink-500 outline-color-pink-500\\\" data-value=\\\"pink\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-purple-500 outline-color-purple-500\\\" data-value=\\\"purple\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-deep-purple-500 outline-color-deep-purple-500\\\" data-value=\\\"deep-purple\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-indigo-500 outline-color-indigo-500\\\" data-value=\\\"indigo\\\">\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"colors-line\\\">\\n                                            <div class=\\\"client-main-color-item ground-color-deep-orange-500 outline-color-deep-orange-500\\\" data-value=\\\"deep-orange\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-orange-500 outline-color-orange-500\\\" data-value=\\\"orange\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-cyan-500 outline-color-cyan-500\\\" data-value=\\\"cyan\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-light-blue-500 outline-color-light-blue-500\\\" data-value=\\\"light-blue\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-blue-500 outline-color-blue-500\\\" data-value=\\\"blue\\\">\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"colors-line\\\">\\n                                            <div class=\\\"client-main-color-item ground-color-amber-500 outline-color-amber-500\\\" data-value=\\\"amber\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-lime-500 outline-color-lime-500\\\" data-value=\\\"lime\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-teal-500 outline-color-teal-500\\\" data-value=\\\"teal\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-brown-500 outline-color-brown-500\\\" data-value=\\\"brown\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-blue-grey-500 outline-color-blue-grey-500\\\" data-value=\\\"blue-grey\\\">\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"colors-line\\\">\\n                                            <div class=\\\"client-main-color-item ground-color-light-green-500 outline-color-light-green-500\\\" data-value=\\\"light-green\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-green-500 outline-color-green-500\\\" data-value=\\\"green\\\">\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"toolbar-color-setting-wrap\\\">\\n                                <div class=\\\"setting settings-color-padding toolbar-color-setting field-wrap\\\">\\n                                    <div class=\\\"selected-color-wrap\\\">\\n                                        <div class=\\\"selected-color-item\\\"></div>\\n                                        <div class=\\\"selected-color-info\\\">\\n                                            <div class=\\\"selected-color-name\\\"></div>\\n                                            <div class=\\\"selected-color-hex\\\"></div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_background\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"background-setting-wrap\\\">\\n                                <div class=\\\"setting background radio-button field-wrap\\\">\\n                                    <div class=\\\"field radio-field clickable-field\\\">\\n                                        <form action=\\\"#\\\">\\n                                            <p>\\n                                                <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default-background\\\" />\\n                                                <label for=\\\"{{view.cid}}-default-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_default\\\"))]}</label>\\n                                            </p>\\n                                            <p>\\n                                                <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"repeating-pattern\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-repeating-pattern-background\\\" />\\n                                                <label for=\\\"{{view.cid}}-repeating-pattern-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_pattern\\\"))]}</label>\\n                                            </p>\\n                                            <p>\\n                                                <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"image\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-image-background\\\" />\\n                                                <label for=\\\"{{view.cid}}-image-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_image\\\"))]}</label>\\n                                            </p>\\n                                        </form>\\n                                    </div>\\n                                    <div class=\\\"current-background-wrap\\\">\\n                                        <div class=\\\"dark-placeholder\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__button_update\\\"))]}</div>\\n                                        <div class=\\\"current-background\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_background_effects\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"background-setting-wrap\\\">\\n                                <div class=\\\"blur-setting-wrap\\\">\\n                                    <div class=\\\"setting blur-setting checkbox-setting field-wrap\\\">\\n                                        <div class=\\\"input-field checkbox-field\\\">\\n                                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blur_switch\\\"/>\\n                                            <label for=\\\"blur_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_blur\\\"))]}</label>\\n                                        </div>\\n                                        <form class=\\\"range-form\\\" action=\\\"#\\\">\\n                                            <div class=\\\"disabled hidden\\\"></div>\\n                                            <p class=\\\"range-field range-field-design\\\">\\n                                                <input type=\\\"range\\\" id=\\\"blur\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                                <span class=\\\"thumb\\\"><span class=\\\"value\\\"></span></span>\\n                                            </p>\\n                                        </form>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"vignetting-setting-wrap\\\">\\n                                    <div class=\\\"setting vignetting-setting checkbox-setting field-wrap\\\">\\n                                        <div class=\\\"input-field checkbox-field\\\">\\n                                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"vignetting_switch\\\"/>\\n                                            <label for=\\\"vignetting_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_vignette\\\"))]}</label>\\n                                        </div>\\n                                        <form class=\\\"range-form\\\" action=\\\"#\\\">\\n                                            <div class=\\\"disabled hidden\\\"></div>\\n                                            <p class=\\\"range-field range-field-design\\\">\\n                                                <input type=\\\"range\\\" id=\\\"vignetting\\\" min=\\\"0\\\" max=\\\"200\\\" />\\n                                                <span class=\\\"thumb\\\"><span class=\\\"value\\\"></span></span>\\n                                            </p>\\n                                        </form>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"chat_viewer\\\"))]}' class=\\\"settings-block-wrap chats\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_behavior\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"setting hotkeys radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"enter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-enter\\\" />\\n                                            <label for=\\\"{{view.cid}}-enter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_enter\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"ctrlenter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-ctrlenter\\\" />\\n                                            <label for=\\\"{{view.cid}}-ctrlenter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_ctrlenter\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__idle_timeout\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"setting idling checkbox-setting field-wrap\\\">\\n                                <div class=\\\"input-field  checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"idling\\\"/>\\n                                    <label for=\\\"idling\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_idling\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting idling-time field-wrap\\\">\\n                                <div class=\\\"idling-time-input\\\">\\n                                    <p class=\\\"range-field range-field-design\\\">\\n                                        <input class=\\\"materialize-timer\\\" placeholder='{[print(constants.IDLING_DEFAULT_TIMEOUT)]}' id=\\\"idle_timeout\\\" min=\\\"{[print(constants.IDLING_MINIMAL_TIMEOUT)]}\\\" max=\\\"{[print(constants.IDLING_MAXIMUM_TIMEOUT)]}\\\" value=\\\"{[print(xabber._settings.get('idling_time'))]}\\\" type=\\\"range\\\" name=\\\"idle_timeout\\\">\\n                                        <span class=\\\"thumb\\\"><span class=\\\"value\\\"></span></span>\\n                                    </p>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-clue\\\">{[print(xabber.getString(\\\"settings__menu_item__idle_timeout_clue\\\"))]}</div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"avatars\\\"))]}' class=\\\"settings-block-wrap avatars\\\">\\n                        <div class=\\\"settings-subblock-wrap contact-list\\\">\\n                            <div class=\\\"circle-avatar noselect\\\"></div>\\n                            <div class=\\\"setting avatar-shape radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"circle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-circle\\\" />\\n                                            <label for=\\\"{{view.cid}}-circle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_circle\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"squircle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-squircle\\\" />\\n                                            <label for=\\\"{{view.cid}}-squircle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_squircle\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"octagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-octagon\\\" />\\n                                            <label for=\\\"{{view.cid}}-octagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_octagon\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"hexagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hexagon\\\" />\\n                                            <label for=\\\"{{view.cid}}-hexagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_hexagon\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"pentagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-pentagon\\\" />\\n                                            <label for=\\\"{{view.cid}}-pentagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_pentagon\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"rounded\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-rounded\\\" />\\n                                            <label for=\\\"{{view.cid}}-rounded\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_rounded\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"star\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-star\\\" />\\n                                            <label for=\\\"{{view.cid}}-star\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_star\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}' class=\\\"settings-block-wrap notifications\\\">\\n                        <div class=\\\"settings-tabs-wrap global-settings-tabs\\\">\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"web-notifications\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"client\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__web_notifications\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__web_notifications_label\\\"))]}</div>\\n                                <div class=\\\"field notifications-lever clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"chats-notifications\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chat\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats\\\"))]}</div>\\n                                <div class=\\\"settings-block-label capitalized one-line\\\"></div>\\n                                <div class=\\\"field private-notifications clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab settings-tab-big-icon\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"groupchats-notifications\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"group-public\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats\\\"))]}</div>\\n                                <div class=\\\"settings-block-label capitalized one-line\\\"></div>\\n                                <div class=\\\"field group-notifications clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"calls-notifications\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__calls\\\"))]}</div>\\n                                <div class=\\\"settings-block-label capitalized one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__calls_label\\\"))]}</div>\\n                                <div class=\\\"field jingle-calls clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"attention-calls\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"alarm-bell\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__attention_calls\\\"))]}</div>\\n                                <div class=\\\"settings-block-label capitalized one-line\\\"></div>\\n                                <div class=\\\"field call-attention clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__web_notifications\\\"))]}' class=\\\"settings-block-wrap web-notifications\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting notifications checkbox-setting field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"notifications\\\"/>\\n                                    <label for=\\\"notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_desktop_notifications\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name volume-setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__volume\\\"))]}</div>\\n                            <!--<div class=\\\"setting volume-enable checkbox-setting field-wrap\\\">-->\\n                                <!--<div class=\\\"input-field checkbox-field\\\">-->\\n                                    <!--<input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"notifications_volume_enable\\\"/>-->\\n                                    <!--<label for=\\\"notifications_volume_enable\\\">{[print(xabber.getString(\\\"settings__section_notifications__volume_enable\\\"))]}</label>-->\\n                                <!--</div>-->\\n                            <!--</div>-->\\n                            <div class=\\\"setting volume-setting\\\">\\n                                <form class=\\\"range-form\\\" action=\\\"#\\\">\\n                                    <div class=\\\"disabled hidden\\\"></div>\\n                                    <p class=\\\"range-field range-field-design\\\">\\n                                        <input type=\\\"range\\\" id=\\\"notifications_volume\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                        <span style=\\\"display: none\\\" class=\\\"thumb\\\"><span class=\\\"value\\\"></span></span>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__private_chats\\\"))]}' class=\\\"settings-block-wrap chats-notifications\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting message-preview checkbox-setting private-preview field-wrap\\\">\\n                                <div class=\\\"input-field notifications-dependant checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_private\\\"/>\\n                                    <label for=\\\"preview_private\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                    <div class=\\\"desktop-notifications-clue-wrap\\\">\\n                                        {[print(xabber.getString(\\\"settings__section_notifications__desktop_notifications_clue\\\"))]}\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field notification-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__group_chats\\\"))]}' class=\\\"settings-block-wrap groupchats-notifications\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting message-preview checkbox-setting group-preview field-wrap\\\">\\n                                <div class=\\\"input-field notifications-dependant checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_group\\\"/>\\n                                    <label for=\\\"preview_group\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                    <div class=\\\"desktop-notifications-clue-wrap\\\">\\n                                        {[print(xabber.getString(\\\"settings__section_notifications__desktop_notifications_clue\\\"))]}\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field notification-field group-notification-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__calls\\\"))]}' class=\\\"settings-block-wrap calls-notifications\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field ringtone-field\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__section_notifications__dialtone\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field dialtone-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__attention_calls\\\"))]}' class=\\\"settings-block-wrap attention-calls\\\">\\n                        <div class=\\\"settings-subblock-wrap \\\">\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field attention-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}'  class=\\\"settings-block-wrap privacy hidden\\\">\\n                        <div class=\\\"setting load-media checkbox-setting field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"load-media\\\"/>\\n                                <label for=\\\"load-media\\\">{[print(xabber.getString(\\\"settings__section_privacy__load_media\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting typing-notifications checkbox-setting field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"typing-notifications\\\"/>\\n                                <label for=\\\"typing-notifications\\\">{[print(xabber.getString(\\\"settings__section_privacy__typing_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting mapping-service checkbox-setting field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"mapping-service\\\"/>\\n                                <label for=\\\"mapping-service\\\">{[print(xabber.getString(\\\"settings__section_privacy__mapping_service\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}'  class=\\\"settings-block-wrap interface_language hidden\\\">\\n                        <div class=\\\"setting radio-button interface-language-setting\\\">\\n                            <div class=\\\"languages-list field radio-field clickable-field\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"toolbar-top\\\">\\n    <div class=\\\"toolbar-item toolbar-logo\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__all_chats\\\"))]}'>\\n        <img class=\\\"logo\\\" src=\\\"{{TOOLBAR_LOGO}}\\\">\\n    </div>\\n</div>\\n\\n<div class=\\\"toolbar-middle\\\">\\n    <div class=\\\"toolbar-item all-chats active\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__all_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-message-text\\\"></i>\\n        <span class=\\\"all-msg-indicator\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item jingle-calls\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__jingle_calls\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-phone\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item mentions\\\" title='{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <svg class=\\\"toolbar-icon mdi mdi-24px mdi-svg-template\\\" viewBox=\\\"0 0 24 24\\\" data-svgname=\\\"bell\\\"></svg>\\n        <span class=\\\"mentions-indicator\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item contacts\\\" title='{[print(xabber.getString(\\\"category_title_contacts\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-account-multiple\\\"></i>\\n    </div>\\n\\n    <div class=\\\"toolbar-item geolocation-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__geolocation_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-compass\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item archive-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__archive_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-archive\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item saved-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__saved_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-bookmark\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"add-something-wrap\\\">\\n        <div class=\\\"toolbar-item dropdown-button add-something\\\" data-activates=\\\"{{view.cid}}-add\\\" title='{[print(xabber.getString(\\\"toolbar__button_add_tooltip\\\"))]}'>\\n            <i class=\\\"toolbar-icon mdi mdi-24px mdi-plus\\\"></i>\\n        </div>\\n\\n        <div id=\\\"{{view.cid}}-add\\\" class=\\\"add-variants dropdown-content noselect\\\">\\n            <div class=\\\"add-variant contact\\\">\\n                <i class=\\\"mdi mdi-20px mdi-account-plus\\\"></i>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"add_contact\\\"))]}</span>\\n            </div>\\n            <div class=\\\"add-variant public-groupchat\\\">\\n                <i class=\\\"mdi mdi-20px mdi-account-multiple-plus\\\"></i>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"create_group\\\"))]}</span>\\n            </div>\\n            <div class=\\\"add-variant incognito-groupchat\\\">\\n                <svg class=\\\"mdi mdi-20px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M13 11A3 3 0 1 0 10 8A3 3 0 0 0 13 11M13 7A1 1 0 1 1 12 8A1 1 0 0 1 13 7M17.11 10.86A5 5 0 0 0 17.11 5.14A2.91 2.91 0 0 1 18 5A3 3 0 0 1 18 11A2.91 2.91 0 0 1 17.11 10.86M13 13C7 13 7 17 7 17V19H19V17S19 13 13 13M9 17C9 16.71 9.32 15 13 15C16.5 15 16.94 16.56 17 17M24 17V19H21V17A5.6 5.6 0 0 0 19.2 13.06C24 13.55 24 17 24 17M8 12H5V15H3V12H0V10H3V7H5V10H8Z\\\" />\\n                </svg>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"create_incognito_group\\\"))]}</span>\\n            </div>\\n            <div class=\\\"add-variant account\\\">\\n                <i class=\\\"mdi mdi-20px mdi-account-circle\\\"></i>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"dialog_add__label_add_account\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"toolbar-bottom\\\">\\n    <div class=\\\"accounts-wrap\\\">\\n        <div class=\\\"accounts\\\">\\n            <div class=\\\"toolbar-item settings-modal hidden\\\" title='{[print(xabber.getString(\\\"settings\\\"))]}'>\\n                <div class=\\\"border\\\"></div>\\n                <i class=\\\"toolbar-icon mdi mdi-24px mdi-settings\\\"></i>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-item-wrap property-variant\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"name-wrap\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\";","export default \"    <div class=\\\"message-input-panel noselect\\\">\\n        <div class=\\\"my-avatar circle-avatar circle-image-fix\\\"></div>\\n        <div class=\\\"message-form\\\">\\n            <div class=\\\"fwd-messages-preview noselect hidden\\\">\\n                <div class=\\\"msg-border ground-color-700\\\">\\n                </div>\\n                <div class=\\\"msg-content\\\">\\n                    <p class=\\\"msg-author text-color-700 one-line\\\"></p>\\n                    <p class=\\\"msg-text one-line\\\"></p>\\n                </div>\\n                <div class=\\\"close-forward\\\">\\n                    <i class=\\\"mdi mdi-20px mdi-close hover-text-color-500\\\"></i>\\n                </div>\\n            </div>\\n            <div class=\\\"message-reference-preview hidden\\\">\\n                <div class=\\\"message-reference-preview-container\\\">\\n                </div>\\n                <div class=\\\"close-attachments\\\">\\n                    <i class=\\\"mdi mdi-20px mdi-close hover-text-color-500\\\"></i>\\n                </div>\\n            </div>\\n            <div class=\\\"input-field input-message\\\">\\n                <div class=\\\"mentions-list\\\"></div>\\n                <div class=\\\"rich-textarea-wrap notranslate\\\">\\n                </div>\\n                <div class=\\\"scrollbar-cover\\\"></div>\\n                <div class=\\\"insert-emoticon\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n                </div>\\n                <div class=\\\"preview-preloader-container hidden\\\" title='{[print(xabber.getString(\\\"chat_bottom__preview_preloader_cancel\\\"))]}'>\\n                    <svg class=\\\"preview-cancel-preloader mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"link\\\"></svg>\\n                </div>\\n                <div class=\\\"emoticons-panel-wrap\\\">\\n                    <div class=\\\"emoticons-panel\\\"></div>\\n                    <div class=\\\"emoji-menu\\\"></div>\\n                    <div class=\\\"uploading-emoticons\\\">\\n                    <div class=\\\"preloader-wrapper preloader-20px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"input-voice-message\\\">\\n                <div class=\\\"voice-visualizer\\\"></div>\\n                <div class=\\\"timer\\\">0:00</div>\\n                <div class=\\\"voice-msg-status\\\">{[print(xabber.getString(\\\"chat_bottom__placeholder__cancel_write_voice\\\"))]}</div>\\n            </div>\\n            <div class=\\\"input-toolbar\\\">\\n                <div class=\\\"attach attach-file\\\">\\n                    <input type=\\\"file\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_file\\\"))]}' multiple>\\n                    <i class=\\\"mdi mdi-24px mdi-paperclip\\\"></i>\\n                </div>\\n                <div class=\\\"attach attach-media\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_media\\\"))]}'>\\n                    <i class=\\\"mdi mdi-24px mdi-file-image\\\"></i>\\n                </div>\\n                <div class=\\\"attach attach-location\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_location\\\"))]}'>\\n                    <input type=\\\"text\\\" hidden title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_location\\\"))]}'>\\n                    <i class=\\\"mdi mdi-24px mdi-map-marker\\\"></i>\\n                </div>\\n                <div title=\\\"Format text\\\" class=\\\"format-text\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-format-text\\\"></i>\\n                </div>\\n                <div class=\\\"last-emoticons\\\">\\n                </div>\\n                <div class=\\\"account-info-wrap\\\">\\n                    <div class=\\\"account-jid text-color-700\\\"></div>\\n                    <div class=\\\"account-nickname text-color-700\\\"></div>\\n                    <div class=\\\"account-badge\\\"></div>\\n                    <div class=\\\"account-role ground-color-700\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"send-area\\\">\\n            <i class=\\\"send-message mdi mdi-32px mdi-send text-color-700 hover-text-color-500 hidden\\\"></i>\\n            <i class=\\\"mdi mdi-32px mdi-microphone attach-voice-message text-color-700 hover-text-color-500\\\"></i>\\n        </div>\\n    </div>\\n    <div class=\\\"blocked-msg hidden\\\">{[print(xabber.getString(\\\"chat_bottom__placeholder__blocked\\\"))]}</div>\\n    <div class=\\\"message-actions-panel noselect hidden\\\">\\n        <div class=\\\"button-wrap reply-message-wrap\\\">\\n            <i class=\\\"action-button reply-message mdi ground-color-700 mdi-reply mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"chat_reply\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"chat_reply\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap forward-message-wrap\\\">\\n            <i class=\\\"action-button forward-message mdi ground-color-700 mdi-forward mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"chat_froward\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"chat_froward\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap copy-message-wrap\\\">\\n            <i class=\\\"action-button copy-message mdi ground-color-700 mdi-content-copy mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_copy\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_copy\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap delete-message-wrap\\\">\\n            <i class=\\\"action-button delete-message mdi ground-color-700 mdi-delete mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"delete\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"delete\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap edit-message-wrap\\\">\\n            <i class=\\\"action-button edit-message mdi ground-color-700 mdi-pencil mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_edit\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_edit\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap pin-message-wrap\\\">\\n            <svg class=\\\"action-button pin-message ground-color-700\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path fill=\\\"#FFF\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\"></path>\\n            </svg>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_pin\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_pin\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap cancel-message-wrap\\\">\\n            <i class=\\\"action-button close-message-panel mdi mdi-close mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div>\\n        </div>\\n    </div>\\n\";","export default \"  <div class=\\\"search-form-header\\\">\\n    <div class=\\\"messages-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"chat__search_messages_panel__placeholder\\\"))]}' autofocus>\\n    </div>\\n    <div class=\\\"text-color-700 btn-cancel-searching\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div>\\n</div>\\n<div class=\\\"pinned-message\\\"></div>\\n<div class=\\\"elements-in-top\\\">\\n    <div class=\\\"subscription-buttons-wrap hidden\\\"></div>\\n    <div class=\\\"chat-day-indicator fixed-day-indicator-wrap hidden\\\"><div class=\\\"fixed-day-indicator\\\"></div></div>\\n</div>\\n<div class=\\\"load-history-feedback hidden\\\"></div>\\n<div class=\\\"participant-messages-header hidden\\\"><div class=\\\"messages-by-header\\\">{[print(xabber.getString(\\\"chat__placeholder_participant_messages__messages_by\\\"))]} <div class=\\\"participant-nickname text-color-700\\\"></div></div><div class=\\\"btn-cancel-selection\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div><div class=\\\"text-color-700 btn-retract-messages\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_all\\\"))]}</div></div>\\n<div class=\\\"chat-content\\\">\\n</div>\\n<div class=\\\"chat-notification hidden one-line\\\"></div>\\n<i class=\\\"mdi mdi-36px back-to-unread hidden mdi-chevron-down\\\"><div class=\\\"back-to-unread-counter\\\"></div></i>\\n<i class=\\\"mdi mdi-36px back-to-bottom mdi-chevron-down\\\"></i>\\n\";","export default \"<div class=\\\"search-wrap\\\">\\n    <div class=\\\"search-content\\\">\\n        <div class=\\\"search-form-header block-header\\\">\\n            <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n            <div class=\\\"messages-search-form search-form \\\">\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"chat__search_messages_panel__placeholder\\\"))]}' autofocus>\\n            </div>\\n            <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n        </div>\\n        <div class=\\\"search-messages-content-wrap\\\">\\n            <div class=\\\"search-results\\\">\\n                {[print(xabber.getString(\\\"nothing_was_searched\\\"))]}\\n            </div>\\n            <div class=\\\"preloader-wrap\\\">\\n                <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"messages-count\\\">\\n            </div>\\n            <div class=\\\"chat-content\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"chat-body-content-placeholder-text no-select\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n\";","export default \"<div class=\\\"chat-head-details\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"contact-status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"chat-head-info-buttons-container\\\">\\n    <div class=\\\"contact-info\\\">\\n        <div class=\\\"contact-name-wrap\\\">\\n            <i class=\\\"mdi encrypted-icon mdi-14px mdi-lock\\\"></i>\\n            <p class=\\\"contact-name one-line\\\"></p>\\n        </div>\\n        <p class=\\\"contact-status-message one-line\\\"></p>\\n    </div>\\n    <div class=\\\"chat-tools-wrap\\\">\\n        <div class=\\\"chat-tool chat-tool-player\\\">\\n            <div class=\\\"chat-tool-player-containter\\\">\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-previous-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-previous mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-play-pause-plyr\\\">\\n                    <i class=\\\"mdi mdi-play mdi-24px\\\"></i>\\n                    <i class=\\\"mdi mdi-pause mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-next-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-next mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-popup-plyr\\\">\\n                    <img class=\\\"player-poster hidden\\\">\\n                    <svg class=\\\"mdi mdi-32px mdi-player-type-icon mdi-svg-template\\\" data-svgname=\\\"video\\\"></svg>\\n                    <div class=\\\"voice-message-player-avatar circle-avatar hidden\\\"></div>\\n                </div>\\n                <div class=\\\"chat-tool chat-player-duration chat-tool-plyr-controls\\\">\\n                    <div class=\\\"chat-head-player-title one-line\\\"><div class=\\\"chat-head-player-title-text\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</div></div>\\n                    <div class=\\\"chat-head-player-title-bottom-container\\\">\\n                        <span class=\\\"chat-head-player-type one-line\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</span><span class=\\\"chat-head-player-type-dot\\\"> •</span>\\n                        <span class=\\\"chat-head-player-current-time\\\">0:00</span> /\\n                        <span class=\\\"chat-head-player-total-time\\\">0:00</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-stop-plyr\\\">\\n                    <i class=\\\"mdi mdi-close mdi-16px\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"chat-tool btn-show-fingerprints\\\">\\n            <i class=\\\"mdi mdi-lock mdi-24px\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-jingle-message\\\">\\n            <i class=\\\"mdi mdi-phone mdi-24px\\\"></i>\\n        </div>\\n        <!--<div class=\\\"chat-tool btn-set-status\\\">\\n            <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <g stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\">\\n                    <rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"/>\\n                    <path d=\\\"M20,4 C21.1045695,4 22,4.8954305 22,6 L22,16 C22,17.1045695 21.1045695,18 20,18 L16,18 L12,22 L8,18 L4,18 C2.8954305,18 2,17.1045695 2,16 L2,6 C2,4.8954305 2.8954305,4 4,4 L20,4 Z M16,12 L6,12 L6,14 L16,14 L16,12 Z M18,8 L6,8 L6,10 L18,10 L18,8 Z\\\" id=\\\"tooltip-variant\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\"></path>\\n                </g>\\n            </svg>\\n        </div>-->\\n        <div class=\\\"chat-tool btn-search-messages\\\">\\n            <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-more\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"{{view.cid}}-more\\\" class=\\\"chat-head-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-chat-pin\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-archive-chat\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-notifications active-hover\\\" data-activates=\\\"{{view.cid}}-mute-more\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-call-attention\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"call_attention\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-invite-users\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_invite\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-start-encryption\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_start_encrypted_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-open-encrypted-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_open_encrypted_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-open-regular-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_open_regular_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-delete-chat\\\">\\n                <span class=\\\"one-line text-color-500\\\">{[print(xabber.getString(\\\"delete_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-clear-history\\\">\\n                <span class=\\\"one-line text-color-500\\\">{[print(xabber.getString(\\\"clear_history\\\"))]}</span>\\n            </li>\\n        </ul>\\n        <ul id=\\\"{{view.cid}}-mute-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"recent-chat-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <i class=\\\"mdi encrypted-icon mdi-14px mdi-lock\\\"></i>\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <i class=\\\"mdi muted-icon mdi-14px mdi-bell-off\\\"></i>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n</div>\\n<div class=\\\"chat-states\\\">\\n    <div class=\\\"chat-item-notifications-wrap\\\">\\n        <span class=\\\"msg-chat-error hidden\\\">!</span>\\n        <span class=\\\"msg-incoming-subscription hidden\\\">\\n            <svg class=\\\"mdi mdi-12px mdi-svg-template\\\" data-svgname=\\\"plus\\\"></svg>\\n        </span>\\n        <span class=\\\"msg-counter hidden\\\"></span>\\n        <i class=\\\"msg-delivering-state mdi mdi-16px hidden\\\"></i>\\n        <i class=\\\"pinned-icon\\\">\\n            <svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n                <g id=\\\"icon/material/pinned-circle-small\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n                    <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n                    <path d=\\\"M12,3 C16.9705627,3 21,7.02943725 21,12 C21,16.9705627 16.9705627,21 12,21 C7.02943725,21 3,16.9705627 3,12 C3,7.02943725 7.02943725,3 12,3 Z M12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 Z M14,6.5 L17.5,9.5 L16.5,10.5 L16,10 L14.25,13.25 L15.25,14.75 L14,16 L11.5,13.5 L8.75,16.25 L7.75,16.25 L7.75,15.25 L10.5,12.5 L8,10 L9.25,8.75 L10.75,9.75 L13.5,8 L13,7.5 L14,6.5 Z\\\" id=\\\"xabber:pinned-small\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n                </g>\\n            </svg>\\n        </i>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"chat_list__placeholder\\\"))]}</div>\\n\";","export default \"<div class=\\\"recent-chats-panel noselect\\\">\\n    <div class=\\\"chats-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"chat-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"pinned-chat-list item-list\\\">\\n        </div>\\n        <div class=\\\"chat-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"load-chats-feedback hidden\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n    </div>\\n    <div class=\\\"read-all-button hidden\\\">{[print(xabber.getString(\\\"mark_all_as_read_button\\\"))]}</div>\\n</div>\\n\";","export default \"<div class=\\\"field clickable-field {{className}} switch normal\\\">\\n    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{id}}\\\">\\n    <label for=\\\"{{id}}\\\"></label>\\n</div>\";","export default \"<div>\\n    <i class=\\\"mdi mdi-36px mdi-alert-circle\\\"></i>\\n</div>\\n<div class=\\\"warning-message\\\">{{message}}</div>\\n<button class=\\\"btn-manage-devices btn-flat btn-main btn-dark hover-ground-color-amber-300\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\";","export default \"<div class=\\\"warning-wrap\\\">\\n    <p class=\\\"warning-message\\\">{{message}}</p>\\n    <button class=\\\"btn-manage-devices btn-flat btn-main btn-dark ground-color-{{color}}-100 hover-ground-color-{{color}}-300\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header noselect\\\">\\n    <div class=\\\"panel-header\\\">\\n        <span class=\\\"header\\\">{[print(xabber.getString(\\\"dialog_forward_message__header\\\"))]}</span>\\n    </div>\\n</div>\\n<div class=\\\"modal-content noselect\\\">\\n    <div class=\\\"chats-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"chat-list-wrap\\\">\\n        <div class=\\\"pinned-chat-list forward-chats-list\\\">\\n        </div>\\n        <div class=\\\"chat-list forward-chats-list\\\">\\n        </div>\\n        <div class=\\\"contact-list forward-chats-list\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"error hidden\\\">{[print(xabber.getString(\\\"placeholder_no_matches\\\"))]}</div>\\n</div>\\n\";","export default \"<div class=\\\"modal-header\\\">\\n    <span>{[print(xabber.getString(\\\"create_groupchat\\\"))]}</span>\\n    <div class=\\\"account-dropdown-wrap\\\" data-activates=\\\"select-account-for-creating-groupchat\\\">\\n        <div class=\\\"dropdown-button\\\">\\n            <div class=\\\"account-item-wrap\\\">\\n                <div class=\\\"circle-avatar noselect\\\">\\n                    <img>\\n                </div>\\n            </div>\\n        </div>\\n        <div id=\\\"select-account-for-creating-groupchat\\\" class=\\\"dropdown-content noselect\\\">\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"row name-field\\\">\\n        <div class=\\\"input-field input-group-chat-name\\\">\\n            <label for=\\\"new_chat_name\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</label>\\n            <input id=\\\"new_chat_name\\\" type=\\\"text\\\" name=\\\"chat_name\\\" placeholder='{[print(xabber.getString(\\\"group_is_empty\\\"))]}' required>\\n        </div>\\n    </div>\\n    <div class=\\\"row jid-field\\\">\\n        <label for=\\\"new_chat_jid\\\">{[print(xabber.getString(\\\"groupchat_xmpp_jid\\\"))]}</label>\\n        <div class=\\\"input-field input-group-chat-jid\\\">\\n            <input id=\\\"new_chat_jid\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat_xmpp_jid\\\"))]}' name=\\\"chat_jid\\\">\\n            <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                <div class=\\\"select-xmpp-server\\\">\\n                    <div data-activates=\\\"select-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                    <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                        <input id=\\\"new_chat_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"chat_domain\\\">\\n                    </div>\\n                    <div data-activates=\\\"select-xmpp-server\\\" class=\\\"caret\\\">\\n                        <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                        <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                    </div>\\n                </div>\\n                <div id=\\\"select-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                    <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        <span class=\\\"errors\\\"></span>\\n    </div>\\n    <div class=\\\"row incognito-field hidden\\\">\\n        <i class=\\\"field-icon mdi mdi-24px mdi-incognito\\\"></i>\\n        <div class=\\\"property-field incognito-dropdown-wrap\\\">\\n           <div class=\\\"public-item-wrap property-wrap\\\"><div data-value=\\\"public\\\" class=\\\"property-value\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_public\\\"))]}</div></div>\\n           <div class=\\\"incognito-item-wrap property-wrap\\\"><div data-value=\\\"incognito\\\" class=\\\"property-value\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_incognito\\\"))]}</div></div>\\n        </div>\\n    </div>\\n    <div class=\\\"row group-radio-fields\\\">\\n        <div class=\\\"property-radio-field membership-dropdown-wrap\\\">\\n            <div class=\\\"membership-item-wrap property-wrap\\\">\\n                <div class=\\\"property-radio-label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n            </div>\\n            <div class=\\\"property-radio-wrap\\\">\\n                <div class=\\\"property-radio\\\">\\n                    <input checked id=\\\"membership_open\\\" data-value=\\\"open\\\" name=\\\"group_membership\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"membership-label\\\" for=\\\"membership_open\\\">{[print(xabber.getString(\\\"groupchat_membership_type_open\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"membership_member_only\\\" data-value=\\\"member-only\\\" name=\\\"group_membership\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"membership-label\\\" for=\\\"membership_member_only\\\">{[print(xabber.getString(\\\"groupchat_membership_type_members_only\\\"))]}</label>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"property-radio-field global-dropdown-wrap\\\">\\n            <div class=\\\"global-item-wrap property-wrap\\\">\\n                <div class=\\\"property-radio-label\\\">{[print(xabber.getString(\\\"groupchat_index\\\"))]}</div>\\n            </div>\\n            <div class=\\\"property-radio-wrap\\\">\\n                <div class=\\\"property-radio\\\">\\n                    <input checked id=\\\"index_none\\\" data-value=\\\"none\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_none\\\">{[print(xabber.getString(\\\"groupchat_index_type_none\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"index_local\\\" data-value=\\\"local\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_local\\\">{[print(xabber.getString(\\\"groupchat_index_type_local\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"index_global\\\" data-value=\\\"global\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_global\\\">{[print(xabber.getString(\\\"groupchat_index_type_global\\\"))]}</label>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row description-field\\\">\\n        <div class=\\\"input-field input-message\\\">\\n            <label class=\\\"description-label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</label>\\n            <div class=\\\"rich-textarea-wrap notranslate\\\">\\n                <div class=\\\"rich-textarea\\\" tabindex=\\\"2\\\" contenteditable=\\\"\\\"></div>\\n                <div class=\\\"placeholder\\\">{[print(xabber.getString(\\\"groupchat_example_description\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"create\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header noselect\\\">\\n    <div class=\\\"panel-header\\\">\\n        <span class=\\\"header\\\">{[print(xabber.getString(\\\"groupchat_invite_users\\\"))]}</span>\\n    </div>\\n</div>\\n<div class=\\\"modal-content noselect\\\">\\n    <div class=\\\"chats-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"contacts-list-wrap\\\">\\n    </div>\\n    <div class=\\\"error hidden\\\">{[print(xabber.getString(\\\"placeholder_no_matches\\\"))]}</div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main btn-add\\\"><span class=\\\"counter hidden\\\"></span>{[print(xabber.getString(\\\"groupchat_invite\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-dark btn-main btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <span class=\\\"errors\\\"></span>\\n</div>\";","export default \"<div class=\\\"list-item mention-item\\\" data-jid=\\\"{{jid}}\\\" data-id=\\\"{{id}}\\\" data-nickname=\\\"{{nickname}}\\\">\\n    <div class=\\\"circle-avatar\\\"></div>\\n    <div class=\\\"participant-info\\\">\\n        <span class=\\\"one-line nickname\\\">{{nickname}}</span>\\n        <span class=\\\"one-line jid\\\">{{jid}}</span>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content full-pinned-message\\\"></div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-content\\\">\\n        <div id=\\\"map\\\" class=\\\"text-color-700\\\" style=\\\"width:800px; height:490px;\\\" data-type='map'></div>\\n        <div class=\\\"form-group\\\">\\n                <textarea id=\\\"output\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n                <textarea id=\\\"lat\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n                <textarea id=\\\"lon\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"recent-chat-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n</div>\\n\";","export default \"{[ if (blob) {]}\\n<div class=\\\"attached-image-preview message-reference-preview-attached message-reference-preview-item-file{[ if (file.is_errored) {]} attached-errored{[}]}\\\" title='{[ if (file.is_errored) {]}{[print(xabber.getString(\\\"chat_bottom__attached_file_error_hint\\\"))]}{[}]}' data-id=\\\"{{uid}}\\\">\\n    <div class=\\\"attached-file-size one-line\\\">{{filesize}}</div>\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n    {[ if (blob) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{blob}}\\\" src=\\\"{{blob}}\\\">\\n    {[}]}\\n</div>\\n{[} else {]}\\n<div class=\\\"attached-file-preview message-reference-preview-attached message-reference-preview-item-file{[ if (file.is_errored) {]} attached-errored{[}]}\\\" title='{[ if (file.is_errored) {]}{[print(xabber.getString(\\\"chat_bottom__attached_file_error_hint\\\"))]}{[}]}' data-id=\\\"{{uid}}\\\">\\n    <div class=\\\"attached-file-text\\\">\\n        <div class=\\\"attached-file-name one-line\\\">{{file.name}}</div>\\n        <div class=\\\"attached-file-size one-line\\\">{{filetype}}, {{filesize}}</div>\\n    </div>\\n    <i class=\\\"mdi attached-file-icon {{typeicon}}\\\"></i>\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n</div>\\n{[}]}\";","export default \"<div class=\\\"one-file-wrap link-file\\\">\\n    <i class=\\\"mdi mdi-play no-uploaded\\\"></i>\\n    <i class=\\\"mdi mdi-pause\\\"></i>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>{[ if (duration) { ]}, {{duration}}{[ } ]},  <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{sources[0]}}\\\" class=\\\"file-link-download\\\">{[print(xabber.getString(\\\"action_download\\\"))]}</a>\\n        <a class=\\\"voice-message-play\\\">Play</a>\\n    </div>\\n</div>\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div class=\\\"chat-message system auth-request\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"><img></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}<span class=\\\"accept-request\\\">Accept</span><span class=\\\"decline-request\\\">Decline</span><span class=\\\"block-request\\\">Block</span></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"one-file-wrap link-file\\\">\\n    <i class=\\\"mdi {{mdi_icon}}\\\"></i>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>{[ if (is_audio && duration) { ]}, {{duration}}{[ } ]},  <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{sources[0]}}\\\" class=\\\"file-link-download\\\">{[print(xabber.getString(\\\"action_download\\\"))]}</a>\\n    </div>\\n</div>\";","export default \"<div class=\\\"one-file-wrap link-file unuploaded-file\\\" data-upload-file-id=\\\"{{upload_id}}\\\">\\n    <div class=\\\"file-loading-container\\\"></div>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>, <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <div class=\\\"circle-percent-text\\\">0%</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"chat-message main {{classlist}} file-upload noselect\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content chat-main-upload-media\\\">\\n        </div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n        {[ if (is_sender) { ]}\\n        <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n        <div id=\\\"retry-send-msg-{{msgid}}\\\" class=\\\"dropdown-content retry-send-message noselect\\\">\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 repeat-upload\\\">{[print(xabber.getString(\\\"resend\\\"))]}</div>\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 edit-upload\\\">{[print(xabber.getString(\\\"edit\\\"))]}</div>\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 btn-delete-message\\\">{[print(xabber.getString(\\\"delete\\\"))]}</div>\\n        </div>\\n        {[ } ]}\\n        <div class=\\\"msg-copy-link\\\" title='{[print(xabber.getString(\\\"action_copy_link\\\"))]}'><i class=\\\"mdi mdi-link-variant\\\" data-image=\\\"{{is_image}}\\\"></i></div>\\n        <div class=\\\"msg-copy-location\\\"  title='{[print(xabber.getString(\\\"action_copy_location\\\"))]}'><div class=\\\"msg-copy-location-content\\\" data-location=\\\"false\\\"></div></div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"fwd-message\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-from-id=\\\"{{from_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"fwd-left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"fwd-msg-author-wrap\\\">\\n            <div class=\\\"fwd-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if ((role)&&(role != 'Member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n            <div class=\\\"msg-time selectable-text one-line\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content\\\"></div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message system auth-request\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}<div><span class=\\\"accept-request-group\\\">Accept</span><span class=\\\"decline-request-group\\\">Decline</span><span class=\\\"block-request-group\\\">Block</span></div></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-2\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-2\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-3 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"template-for-3 minor-images\\\"><div class=\\\"img-content-template template-for-3 minor\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-3 minor\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-4 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-4 minor-images\\\">\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-5\\\"><div class=\\\"img-content-wrap template-for-5 main\\\"><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\\n<div class=\\\"img-content-wrap template-for-5 minor-images\\\"><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-6\\\"><div class=\\\"img-content-wrap template-for-6 main-row\\\"><div class=\\\"img-content-template template-for-6 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-6 minor-1\\\"><div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\\n<div class=\\\"template-for-6 minor-2\\\"><div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6 last-image\\\"><img title=\\\"{{images[5].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[5].sources[0]}}\\\">\\n{[ if (images.length > 6) { ]}<span class=\\\"image-counter\\\"></span>{[ for (var i=6; i < images.length; i++) {]} <div class=\\\"img-content-template hidden\\\"><img title=\\\"{{images[i].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[i].sources[0]}}\\\"></div> {[}} ]}</div></div></div>\\n\";","export default \"<div class=\\\"images-details\\\">\\n    <div class=\\\"images-details-header\\\">\\n        {[print(xabber.getString(\\\"privacy_risk_images_header\\\"))]}\\n    </div>\\n    {[img_information.images.forEach((image) => {]}\\n        <div class=\\\"image-details\\\">\\n            {{image.name}} <span>{{image.pretty_size}}, {{image.height}}x{{image.width}}</span>\\n        </div>\\n    {[})]}\\n</div>\\n<div class=\\\"image-servers-details\\\">\\n    {[if (img_information.servers.length === 1) {]}\\n        <div class=\\\"images-details-header\\\">\\n            {[print(xabber.getString(\\\"privacy_risk_server_header\\\", [img_information.servers[0]]))]}\\n        </div>\\n    {[} else {]}\\n        <div class=\\\"images-details-header\\\">\\n            {[print(xabber.getString(\\\"privacy_risk_servers_header\\\"))]}\\n        </div>\\n        {[img_information.servers.forEach((server) => {]}\\n            <div class=\\\"server-details\\\">\\n                {{server}}\\n            </div>\\n        {[})]}\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"link-message-reference message-reference-preview-attached message-reference-preview-item {[ if (item.image && item.video_url) {]}link-message-reference-video{[}]}\\\" data-original-url=\\\"{{item.original_text}}\\\">\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n    {[ if (item.image && item.video_url) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{item.image}}\\\" src=\\\"{{item.image}}\\\">\\n    <div class=\\\"attached-site-name one-line\\\">{{item.site}}</div>\\n    {[} else if (item.image) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{item.image}}\\\" src=\\\"{{item.image}}\\\">\\n    <div class=\\\"attached-text-block\\\">\\n        <div class=\\\"link-site one-line\\\">{{domain}}</div>\\n        {[if (item.description) {]}\\n            <div class=\\\"link-title{[if (item.description.length <= 25) {]} link-title-short{[}]}\\\">{{item.description}}</div>\\n        {[} else {]}\\n            <div class=\\\"link-title{[if (item.title.length <= 25) {]} link-title-short{[}]}\\\">{{item.title}}</div>\\n        {[}]}\\n    </div>\\n    {[} else {]}\\n    <div class=\\\"attached-text-block\\\">\\n        <div class=\\\"link-site one-line\\\">{{domain}}</div>\\n        {[if (item.description) {]}\\n            <div class=\\\"link-title{[if (item.description.length <= 29) {]} link-title-short{[}]}\\\">{{item.description}}</div>\\n        {[} else {]}\\n            <div class=\\\"link-title{[if (item.title.length <= 29) {]} link-title-short{[}]}\\\">{{item.title}}</div>\\n        {[}]}\\n    </div>\\n    {[}]}\\n</div>\";","export default \"{[ if (is_video) {]}\\n        <div class=\\\"link-message-reference message-reference-preview-item message-reference-preview-item-big-image\\\">\\n            <div class=\\\"embed-video\\\">\\n                <div class=\\\"plyr-video-container\\\" data-provider=\\\"{{provider}}\\\" data-src=\\\"{{video_url}}\\\">\\n                    <div class=\\\"plyr-video-play\\\">\\n                        <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n                    </div>\\n                    <div class=\\\"plyr-video-playing\\\">\\n                        <svg class=\\\"mdi mdi-48px mdi-svg-template\\\" data-svgname=\\\"player-float\\\"></svg>\\n                        <div class=\\\"plyr-video-playing-hint\\\">{[print(xabber.getString(\\\"chat_message_video_playing_hint\\\"))]}</div>\\n                    </div>\\n                    {[ if (image) {]}\\n                    <img class=\\\"plyr-video-poster\\\" src=\\\"{{image}}\\\" onerror=\\\"this.style.display='none'\\\">\\n                    {[}]}\\n                </div>\\n            </div>\\n            <a href=\\\"{{original_text}}\\\" target=”_blank” class=\\\"msg-hyperlink\\\">\\n                <div class=\\\"attached-text-block\\\">\\n                    <div class=\\\"link-title one-line\\\">{{domain}}</div>\\n                    <div class=\\\"link-site-title\\\">{{title}}</div>\\n                    <div class=\\\"link-description\\\">{{description}}</div>\\n                </div>\\n            </a>\\n        </div>\\n{[} else {]}\\n    <a href=\\\"{{original_text}}\\\" target=”_blank” class=\\\"msg-hyperlink\\\">\\n        <div class=\\\"link-message-reference message-reference-preview-item{[if (image_width && image_width >= 590 || image_height && image_height < 80 || (1.5 * image_height) < image_width) {]} message-reference-preview-item-big-image{[}]}\\\">\\n            {[ if (image) {]}\\n            <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{image}}\\\" data-width=\\\"{{image_width}}\\\" data-height=\\\"{{image_height}}\\\" src=\\\"{{image}}\\\">\\n            {[}]}\\n            <div class=\\\"attached-text-block\\\">\\n                <div class=\\\"link-title one-line\\\">{{domain}}</div>\\n                <div class=\\\"link-site-title\\\">{{title}}</div>\\n                <div class=\\\"link-description\\\">{{description}}</div>\\n            </div>\\n        </div>\\n    </a>\\n{[}]}\";","export default \"<div class=\\\"circle-wrap\\\">\\n    <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"preloader-circular\\\" viewBox=\\\"27 27 54 54\\\">\\n        <circle class=\\\"preloader-path-new\\\" cx=\\\"54\\\" cy=\\\"54\\\" r=\\\"24\\\" fill=\\\"none\\\" stroke-miterlimit=\\\"10\\\"></circle>\\n    </svg>\\n    <div class=\\\"inside-circle\\\">\\n        <i class=\\\"mdi mdi-center-loading-indicator mdi-close mdi-20px\\\"></i>\\n        <i class=\\\"mdi mdi-alert-circle mdi-32px hidden\\\"></i>\\n    </div>\\n    <div class=\\\"circle-percent-text\\\">0%</div>\\n</div>\";","export default \"<div id=\\\"{{id}}\\\" class=\\\"text-color-700\\\" style=\\\"width:350px; height:300px;pointer-events: none;\\\" data-type='map'><img id=\\\"img_{{ id }}\\\" ></div>\";","export default \"<div class=\\\"chat-message main {{classlist}}\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content\\\"></div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n        {[ if (is_sender) { ]}\\n            <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n            <div id=\\\"retry-send-msg-{{msgid}}\\\" class=\\\"dropdown-content retry-send-message noselect\\\">\\n                <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 btn-retry-send-message\\\">{[print(xabber.getString(\\\"chat_screen__message__button_retry_send\\\"))]}</div>\\n            </div>\\n        {[ } ]}\\n        {[ if (not_encrypted) { ]}\\n            <div class=\\\"not-decrypted-icon mdi-14px\\\" title=\\\"{[print(xabber.getString('omemo__not_decrypted_message_title'))]}\\\" data-activates=\\\"not-decrypted-tooltip-{{msgid}}\\\">\\n                <svg class=\\\"mdi mdi-14px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n            </div>\\n            <div id=\\\"not-decrypted-tooltip-{{msgid}}\\\" class=\\\"dropdown-content not-decrypted-tooltip noselect\\\">\\n                <span class=\\\"not-decrypted-tooltip-text\\\">{[print(xabber.getString(\\\"omemo__not_decrypted_message_tooltip\\\"))]}</span>\\n            </div>\\n        {[ } ]}\\n        <div class=\\\"msg-copy-link\\\" title='{[print(xabber.getString(\\\"action_copy_link\\\"))]}'><i class=\\\"mdi mdi-link-variant\\\" data-image=\\\"{{is_image}}\\\"></i></div>\\n        <div class=\\\"msg-copy-location\\\"  title='{[print(xabber.getString(\\\"action_copy_location\\\"))]}'><div class=\\\"msg-copy-location-content\\\" data-location=\\\"false\\\"></div></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message saved-main main {{classlist}}\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"fwd-msgs-block\\\"></div>\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message main {{classlist}}\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{msg_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message system\\\"  data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-2\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-2\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-3 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"template-for-3 minor-images\\\"><div class=\\\"img-content-template template-for-3 minor\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-3 minor\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-4 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-4 minor-images\\\">\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-5\\\"><div class=\\\"img-content-wrap template-for-5 main\\\"><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\\n<div class=\\\"img-content-wrap template-for-5 minor-images\\\"><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[4].upload_id}}\\\"><img src=\\\"{{images[4].sources[0]}}\\\" title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-6\\\"><div class=\\\"img-content-wrap template-for-6 main-row\\\"><div class=\\\"img-content-template template-for-6 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-6 minor-1\\\"><div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\\n<div class=\\\"template-for-6 minor-2\\\"><div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[4].upload_id}}\\\"><img src=\\\"{{images[4].sources[0]}}\\\" title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6 last-image\\\" data-upload-file-id=\\\"{{images[5].upload_id}}\\\"><img src=\\\"{{images[5].sources[0]}}\\\" title=\\\"{{images[5].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[5].sources[0]}}\\\">\\n{[ if (images.length > 6) { ]}<span class=\\\"image-counter\\\"></span>{[ for (var i=6; i < images.length; i++) {]} <div class=\\\"img-content-template hidden\\\" data-upload-file-id=\\\"{{images[i].upload_id}}\\\"><img src=\\\"{{images[i].sources[0]}}\\\" title=\\\"{{images[i].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[i].sources[0]}}\\\"></div> {[}} ]}</div></div></div>\\n\";","export default \"<div class=\\\"plyr-video-container\\\"  data-provider=\\\"html5\\\" data-msg-video-id=\\\"{{video_id}}\\\" data-src=\\\"{{video_src}}\\\">\\n    <div class=\\\"plyr-video-play\\\">\\n        <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n    </div>\\n    <div class=\\\"plyr-video-playing\\\">\\n        <svg class=\\\"mdi mdi-48px mdi-svg-template\\\" data-svgname=\\\"player-float\\\"></svg>\\n        <div class=\\\"plyr-video-playing-hint\\\">{[print(xabber.getString(\\\"chat_message_video_playing_hint\\\"))]}</div>\\n    </div>\\n    {[ if (thumbnail) {]}\\n        <img class=\\\"plyr-video-poster\\\" src=\\\"{{thumbnail}}\\\" onerror=\\\"this.style.display='none'\\\">\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"chat-message\\\"> {[alert({file_url})]} </div>\";","export default \"<div class=\\\"circle-avatar ground-color-700\\\"></div>\\n<div class=\\\"chat-head-info-buttons-container\\\">\\n    <div class=\\\"contact-info\\\">\\n        <p class=\\\"contact-name one-line\\\">{[print(xabber.getString(\\\"saved_messages__header\\\"))]}</p>\\n        <p class=\\\"one-liner\\\"></p>\\n    </div>\\n    <div class=\\\"chat-tools-wrap\\\">\\n        <div class=\\\"chat-tool chat-tool-player\\\">\\n            <div class=\\\"chat-tool-player-containter\\\">\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-previous-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-previous mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-play-pause-plyr\\\">\\n                    <i class=\\\"mdi mdi-play mdi-24px\\\"></i>\\n                    <i class=\\\"mdi mdi-pause mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-next-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-next mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-popup-plyr\\\">\\n                    <img class=\\\"player-poster hidden\\\">\\n                    <svg class=\\\"mdi mdi-32px mdi-player-type-icon mdi-svg-template\\\" data-svgname=\\\"video\\\"></svg>\\n                    <div class=\\\"voice-message-player-avatar circle-avatar hidden\\\"></div>\\n                </div>\\n                <div class=\\\"chat-tool chat-player-duration chat-tool-plyr-controls\\\">\\n                    <div class=\\\"chat-head-player-title one-line\\\"><div class=\\\"chat-head-player-title-text\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</div></div>\\n                    <div class=\\\"chat-head-player-title-bottom-container\\\">\\n                        <span class=\\\"chat-head-player-type one-line\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</span><span class=\\\"chat-head-player-type-dot\\\"> •</span>\\n                        <span class=\\\"chat-head-player-current-time\\\">0:00</span> /\\n                        <span class=\\\"chat-head-player-total-time\\\">0:00</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-stop-plyr\\\">\\n                    <i class=\\\"mdi mdi-close mdi-16px\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"chat-tool btn-jingle-message\\\">\\n            <i class=\\\"mdi mdi-phone mdi-24px\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-chat-pin\\\">\\n            <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path id=\\\"tooltip-variant\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\"></path>\\n                </svg>\\n            </svg>\\n        </div>\\n        <div class=\\\"chat-tool btn-search-messages\\\">\\n            <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-more\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"{{view.cid}}-more\\\" class=\\\"chat-head-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-delete-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_all\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"image\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"images\\\"))]}</div>\\n        <div data-screen-name=\\\"video\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"image\\\" class=\\\"screen-wrap hidden library-wrap\\\"></div>\\n    <div data-screen=\\\"video\\\" class=\\\"screen-wrap hidden library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"chat_bottom__drag_and_drop__text_drop_files_here\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"send_media__btn_upload\\\"))]}</button>\\n                <input type=\\\"file\\\" multiple>\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"add\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <div class=\\\"modal-preloader-wrap\\\"></div>\\n</div>\";","export default \"<div class=\\\"subscription-buttons\\\">\\n    <div class=\\\"subscription-info\\\"></div>\\n    <div class=\\\"button text-color-500 btn-add\\\">{[print(xabber.getString(\\\"contact_add\\\"))]}</div>\\n    <div class=\\\"button btn-block\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n    <div class=\\\"button text-color-500 btn-allow\\\">{[print(xabber.getString(\\\"chat_allow\\\"))]}</div>\\n    <div class=\\\"button text-color-500 btn-subscribe\\\">{[print(xabber.getString(\\\"chat_subscribe\\\"))]}</div>\\n    <i class=\\\"mdi-close btn-decline mdi mdi-24px\\\"></i>\\n</div>\";","export default \"<div class=\\\"unread-marker\\\">\\n    <div class=\\\"unread-marker-content no-select\\\">\\n        {{text}}\\n    </div>\\n</div>\";","export default \"<div class=\\\"roster-account-info-wrap\\\">\\n    <div class=\\\"roster-account-info ground-color-100\\\">\\n        <div class=\\\"account-indicator ground-color-700\\\"></div>\\n        <div class=\\\"circle-avatar noselect\\\"></div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <p class=\\\"name text-color-900 one-line\\\"></p>\\n            <p class=\\\"jid one-line\\\"></p>\\n        </div>\\n        <div class=\\\"button-divider\\\"></div>\\n    </div>\\n    <div class=\\\"status-button\\\">\\n        <div class=\\\"status\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer1 ground-color-50\\\">\\n        <div class=\\\"account-indicator ground-color-300\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer2 ground-color-50\\\">\\n        <div class=\\\"account-indicator ground-color-300\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"roster-account-info-wrap\\\">\\n    <div class=\\\"roster-account-info\\\">\\n        <div class=\\\"circle-avatar-wrap ground-color-500\\\">\\n            <div class=\\\"circle-avatar border-color ground-color-700 noselect\\\"></div>\\n        </div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <p class=\\\"name text-color-700 one-line\\\"></p>\\n            <p class=\\\"status-message text-color-700 one-line\\\"></p>\\n            <div class=\\\"roster-info\\\">\\n                <i class=\\\"mdi mdi-account-multiple-outline\\\"></i>\\n                <span class=\\\"counter\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"status-button\\\">\\n        <div class=\\\"status\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer1\\\"></div>\\n    <div class=\\\"roster-account-shrank-footer2\\\"></div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_add_contact__header\\\"))]}</span>\\n        <div class=\\\"account-dropdown-wrap\\\" data-activates=\\\"select-account-for-add-contact\\\">\\n            <div class=\\\"dropdown-button\\\">\\n                <div class=\\\"account-item-wrap\\\">\\n                    <div class=\\\"circle-avatar noselect\\\">\\n                        <img>\\n                    </div>\\n                </div>\\n            </div>\\n            <div id=\\\"select-account-for-add-contact\\\" class=\\\"dropdown-content noselect\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"add-contact-jid-step\\\">\\n            <div class=\\\"row name-field\\\">\\n                <div class=\\\"input-field\\\">\\n                    <!--<label for=\\\"new_contact_username\\\">{[print(xabber.getString(\\\"dialog_add_contact__label_jid\\\"))]}</label>-->\\n                    <input id=\\\"new_contact_username\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"dialog_add_contact__label_jid\\\"))]}' name=\\\"username\\\">\\n                    <span class=\\\"errors fixed\\\"></span>\\n                </div>\\n            </div>\\n        </div>\\n        <!--<div class=\\\"add-contact-contact-step\\\">-->\\n            <!--<div class=\\\"row name-field\\\">-->\\n                <!--<div class=\\\"input-field\\\">-->\\n                    <!--<label for=\\\"new_contact_name\\\">{[print(xabber.getString(\\\"contact_user\\\"))]}</label>-->\\n                    <!--<input id=\\\"new_contact_name\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"contact_user\\\"))]}' name=\\\"contact_name\\\" required>-->\\n                <!--</div>-->\\n            <!--</div>-->\\n            <!--<div class=\\\"row groups-field\\\">-->\\n                <!--<div class=\\\"field-header\\\">{[print(xabber.getString(\\\"contact_circle\\\"))]}</div>-->\\n                <!--<div class=\\\"groups checkbox-list\\\">-->\\n                <!--</div>-->\\n            <!--</div>-->\\n        <!--</div>-->\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-add\\\">{[print(xabber.getString(\\\"dialog_add_contact__button_add\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"dialog_add_contact__button_cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-item-wrap property-variant\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"name-wrap\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <div class=\\\"audio-control-time\\\">\\n        <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n        <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    </div>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div data-jid=\\\"{{jid}}\\\" class=\\\"blocked-contact\\\">\\n    <div class=\\\"input-field checkbox-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blocked-jid-switch-{{jid}}\\\"/>\\n        <label for=\\\"blocked-jid-switch-{{jid}}\\\">{{jid}}</label>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-background-clickable\\\"></div>\\n<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"header-buttons\\\">\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_viewer\\\"))]}</span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <div class=\\\"btn-qr-code\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n        </div>\\n        <div class=\\\"btn-edit\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n    </div>\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\"></div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap contact-details-name-wrap one-line\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"buttons-wrap sticky-details-wrap\\\">\\n        <div class=\\\"button-wrap btn-voice-call-wrap\\\">\\n            <div class=\\\"contact-btn btn-voice-call  fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_call\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-search-messages\\\">\\n            <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-mute-wrap\\\">\\n            <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n            <ul id=\\\"{{view.cid}}-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                <li class=\\\"btn-unmute-dropdown\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"unmute_chat\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                </li>\\n            </ul>\\n        </div>\\n        <div class=\\\"button-wrap btn-block-wrap\\\">\\n            <div class=\\\"contact-btn btn-block fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n            <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content private-chat\\\">\\n        <div class=\\\"block-wrap vcard\\\">\\n        </div>\\n        <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap edit-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap search-messages-block-wrap\\\"></div>\\n    </div>\\n    <ul class=\\\"tabs bottom-block-tabs\\\">\\n        <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n        <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n        <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n        <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n    </ul>\\n    <div class=\\\"panel-content private-chat\\\">\\n        <div class=\\\"bottom-block\\\">\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"circle-avatar noselect\\\"></div>\\n<div class=\\\"text-info-wrap\\\">\\n    <div class=\\\"name-wrap\\\">\\n        <p class=\\\"name one-line\\\"></p>\\n    </div>\\n    <p class=\\\"jid one-line\\\"></p>\\n</div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"contact_list__placeholder\\\"))]}</div>\\n\";","export default \"<div class=\\\"circle-avatar noselect\\\"></div>\\n<div class=\\\"text-info-wrap\\\">\\n    <p class=\\\"name one-line\\\"></p>\\n    <p class=\\\"jid one-line hidden\\\"></p>\\n    <p class=\\\"status-message one-line\\\"></p>\\n</div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n\";","export default \"\\n<div class=\\\"edit-wrap\\\">\\n    <div class=\\\"edit-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</span>\\n    </div>\\n    <div class=\\\"edit-contact\\\">\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"name-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"subscription-statuses\\\">\\n        <div class=\\\"status-out subscription-status-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-status-out\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"subscription-to\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value dotted-underline one-line\\\"></div>\\n            </div>\\n        </div>\\n        <div id=\\\"{{view.cid}}-status-out\\\" class=\\\"status-out-dropdown dropdown-content noselect\\\">\\n            <div class=\\\"btn-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_request_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_request_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-subscription-out property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_subscribe\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"status-in subscription-status-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-status-in\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"subscription-from\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value dotted-underline one-line\\\"></div>\\n            </div>\\n        </div>\\n        <div id=\\\"{{view.cid}}-status-in\\\" class=\\\"status-in-dropdown dropdown-content noselect\\\">\\n            <div class=\\\"btn-allow property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_allow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-allow-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_allow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-disallow-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"decline\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-disallow-preapproved property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_disallow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-subscription-in property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_subscription\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"status-description subscription-status-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information-outline\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-buttons\\\">\\n        <div class=\\\"edit-button btn-delete\\\">\\n            <div class=\\\"details-icon-wrap\\\"><i class=\\\"details-icon mdi mdi-24px mdi-delete text-color-500\\\"></i></div>\\n            <div class=\\\"edit-button-text \\\">\\n                <span class=\\\"text-color-500 dotted-underline text-decoration-color-300 one-line\\\">{[print(xabber.getString(\\\"contact_delete_full\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"\\n<div class=\\\"edit-wrap\\\">\\n    <div class=\\\"edit-save-preloader preloader-wrap\\\">\\n        <div class=\\\"preloader-wrapper preloader-17px visible\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-header main-edit-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <div class=\\\"btn-edit\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-group vcard\\\">\\n        <div class=\\\"info-wrap description-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\">\\n                <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg>\\n            </div>\\n            <div class=\\\"info-hover\\\">\\n                <div class=\\\"info description\\\">\\n                    <div class=\\\"edit-group-name value\\\"></div>\\n                    <div class=\\\"edit-group-description value\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"description-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header description-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_properties\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"main-info\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar\\\">\\n                    <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                    <div class=\\\"preloader-wrap\\\">\\n                        <div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"set-groupchat-avatar-text\\\">{[print(xabber.getString(\\\"groupchat_set_avatar\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-group\\\">\\n            <div class=\\\"edit-group-name-wrap\\\"></div>\\n            <div class=\\\"edit-group-description-wrap\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-properties\\\">\\n        <div class=\\\"group-property membership-property\\\">\\n            <div class=\\\"details-icon-wrap\\\" ><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"membership-outline\\\"></svg></div>\\n            <div class=\\\"group-property-text dotted-underline\\\">\\n                {[print(xabber.getString(\\\"groupchat_membership\\\"))]}\\n                <span></span>\\n            </div>\\n        </div>\\n        <div class=\\\"group-property index-property\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg></div>\\n            <div class=\\\"group-property-text dotted-underline\\\">\\n                {[print(xabber.getString(\\\"groupchat_index\\\"))]}\\n                <span></span>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-button btn-default-restrictions\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"restrictions-outline\\\"></svg></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"one-line dotted-underline\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span>\\n                <span class=\\\"edit-button-value\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"membership-property-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"property-wrap membership-field\\\">\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"open\\\" name=\\\"membership-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"open\\\">{[print(xabber.getString(\\\"groupchat_membership_type_open\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"member-only\\\" name=\\\"membership-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"member-only\\\">{[print(xabber.getString(\\\"groupchat_membership_type_members_only\\\"))]}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"property-description\\\">{[print(xabber.getString(\\\"groupchat_membership_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"index-property-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_index\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"property-wrap index-field\\\">\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"none\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"none\\\">{[print(xabber.getString(\\\"groupchat_index_type_none\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"local\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"local\\\">{[print(xabber.getString(\\\"groupchat_index_type_local\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"global\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"global\\\">{[print(xabber.getString(\\\"groupchat_index_type_global\\\"))]}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"property-description\\\">{[print(xabber.getString(\\\"groupchat_index_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"bottom-block edit-bottom-block\\\">\\n        <div class=\\\"edit-pictured-buttons\\\">\\n            <div data-value=\\\"invitations\\\" class=\\\"list-variant invitations-variant\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"invite-outline\\\"></svg></div>\\n                <div class=\\\"variant-text dotted-underline\\\">{[print(xabber.getString(\\\"groupchat_invitations\\\"))]}<span class=\\\"counted\\\"></span></div>\\n            </div>\\n            <div data-value=\\\"blocked\\\" class=\\\"list-variant blocked-variant\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n                <div class=\\\"variant-text dotted-underline\\\">{[print(xabber.getString(\\\"group_settings__block_list__header\\\"))]}<span class=\\\"counted\\\"></span></div>\\n            </div>\\n        </div>\\n        <i class=\\\"details-icon participants-edit-back btn-back-panel mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name-panel\\\"></span>\\n        <span class=\\\"block-name-panel second-text fade-out\\\">{[print(xabber.getString(\\\"groupchat_selected\\\"))]} <span></span></span>\\n        <div class=\\\"btn-add-block\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n        </div>\\n        <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite\\\"></i>\\n        <button class=\\\"btn-remove-selected btn-flat btn-main fade-out\\\">{[print(xabber.getString(\\\"groupchat_revoke\\\"))]}</button>\\n        <div class=\\\"block-wrap participants-edit-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"edit-buttons\\\">\\n        <div class=\\\"edit-button btn-clear-history-chat\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"history\\\"></svg></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"one-line dotted-underline\\\">{[print(xabber.getString(\\\"clear_history\\\"))]}</span>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-button btn-delete-group\\\">\\n            <div class=\\\"details-icon-wrap\\\"><i class=\\\"details-icon mdi mdi-24px mdi-delete text-color-500\\\"></i></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"text-color-500 one-line text-decoration-color-300 dotted-underline\\\">{[print(xabber.getString(\\\"group_settings__button_delete_group\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"block-form\\\">\\n    <div class=\\\"input-field\\\">\\n        <input id=\\\"blocking_id\\\" class=\\\"rich-textarea field-input\\\" placeholder=\\\"{[print(xabber.getString('vcard_jabber_id'))]}\\\" type=\\\"text\\\" name=\\\"title\\\">\\n    </div>\\n    <button class=\\\"btn-block-id btn btn-main-filled ground-color-700\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-content\\\">\\n    <div class=\\\"textarea-header\\\">{[print(xabber.getString(\\\"groupchat_member_badge\\\"))]}</div>\\n    <div class=\\\"rich-textarea badge-text\\\" tabindex=\\\"1\\\" contenteditable></div>\\n    <div class=\\\"error\\\"></div>\\n</div>\\n<div class=\\\"panel-footer noselect\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"insert-emoticon\\\">\\n            <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n        </div>\\n        <div class=\\\"emoticons-panel-wrap\\\">\\n            <div class=\\\"emoticons-panel\\\"></div>\\n            <div class=\\\"emoji-menu\\\"></div>\\n        </div>\\n        <button class=\\\"btn-save btn-flat btn-main\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-cancel btn-flat btn-main btn-dark\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\"><div class=\\\"panel-header black-text\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</div></div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"default-restrictions-list-wrap\\\"></div>\\n    <p class=\\\"default-restrictions-info\\\">{[print(xabber.getString(\\\"dialog_default_restrictions__placeholder\\\"))]}</p>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <button class=\\\"btn-default-restrictions-save btn-flat btn-main non-active\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-default-restrictions-cancel btn-flat btn-main btn-dark\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"restrictions-wrap\\\">\\n    <div class=\\\"restrictions-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span>\\n        <span class=\\\"block-name second-text fade-out\\\"></span>\\n        <button class=\\\"btn-default-restrictions-save text-color-500 btn-flat btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <div class=\\\"edit-save-preloader preloader-wrap\\\">\\n            <div class=\\\"preloader-wrapper preloader-17px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"restrictions-content edit-default-restrictions\\\">\\n        <div class=\\\"default-restrictions-list-wrap\\\"></div>\\n        <p class=\\\"default-restrictions-info\\\">{[print(xabber.getString(\\\"dialog_default_restrictions_right__placeholder\\\"))]}</p>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <textarea class=\\\"{{field_name}}-input rich-textarea field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\"></textarea>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"media-item\\\">\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\">\\n                <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                </svg>\\n                <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n            <div class=\\\"status-message one-line\\\"></div>\\n        </div>\\n        <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <li class=\\\"btn-qr-code\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_settings__button_show_qr_code\\\"))]}</span></li>\\n            <li class=\\\"btn-edit-settings\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_settings\\\"))]}</span></li>\\n            <li class=\\\"btn-default-restrictions\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span></li>\\n            <li class=\\\"btn-delete-group\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"group_settings__button_delete_group\\\"))]}</span></li>\\n        </ul>\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-chat-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_chat\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-invite-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell btn-mute\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-leave-wrap\\\">\\n                <div class=\\\"btn-leave\\\"><svg viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                </svg>\\n                </div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"head-block\\\">\\n            <div class=\\\"left-column\\\">\\n                <div class=\\\"block-wrap group-chat-properties-wrap\\\"></div>\\n            </div>\\n            <div class=\\\"right-column\\\">\\n                <div class=\\\"block-wrap status-block-wrap\\\"></div>\\n                <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"bottom-block\\\">\\n            <ul class=\\\"tabs\\\">\\n                <li data-value=\\\"participants\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__members_list__header\\\"))]}</a></li>\\n                <li data-value=\\\"invitations\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"groupchat_invitations\\\"))]}</a></li>\\n                <li data-value=\\\"blocked\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__block_list__header\\\"))]}</a></li>\\n            </ul>\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"panel-background-clickable\\\"></div>\\n<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"header-buttons\\\">\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_group\\\"))]}</span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <div class=\\\"btn-qr-code\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n        </div>\\n        <div class=\\\"btn-edit\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information-outline\\\"></svg>\\n        </div>\\n        <div class=\\\"group-edit-preloader\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\">\\n                <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"buttons-wrap sticky-details-wrap\\\">\\n        <div class=\\\"button-wrap btn-invite-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite text-color-500\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-search-messages\\\">\\n            <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-mute-wrap\\\">\\n            <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n            <ul id=\\\"{{view.cid}}-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                </li>\\n            </ul>\\n        </div>\\n        <div class=\\\"button-wrap btn-leave-wrap\\\">\\n            <div class=\\\"contact-btn btn-leave fill-color-500\\\">\\n                <svg viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                </svg>\\n            </div>\\n            <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"block-wrap group-chat-properties-wrap vcard\\\"></div>\\n        <div class=\\\"block-wrap status-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap edit-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap restrictions-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap search-messages-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap participant-view-wrap\\\"></div>\\n    </div>\\n    <ul class=\\\"tabs not-edit bottom-block-tabs\\\">\\n        <li data-value=\\\"participants\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__members_list__header\\\"))]}</a></li>\\n        <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n        <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n        <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n        <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n    </ul>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"bottom-block\\\">\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <span class=\\\"btn-edit-settings\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-properties vcard\\\">\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <div title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon-wrap\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg>\\n        </div>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap name-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap searchable-info-wrap\\\">\\n        <svg class=\\\"details-icon toolbar-icon mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\"></path>\\n        </svg>\\n        <div class=\\\"info searchable\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_indexed\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap model-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-lock\\\"></i>\\n        <div class=\\\"info model\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\"><div class=\\\"panel-header black-text\\\">{[if (privacy) { print(xabber.getString(\\\"incognito_group_settings__header\\\"))} else { print(xabber.getString(\\\"public_group_settings__header\\\"))}]}</div></div>\\n<div class=\\\"modal-content group-chat-properties-wrap selectable-text\\\">\\n    <div class=\\\"property-wrap jid-info-wrap\\\">\\n        <div class=\\\"property-header\\\">{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}</div>\\n        <div class=\\\"jabber-id\\\">\\n            <div class=\\\"value one-line\\\">{{jid}}</div>\\n        </div>\\n        <p id=\\\"anonymous-public\\\" class=\\\"property-description hidden\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_privacy__text_public\\\"))]}</p>\\n        <p id=\\\"anonymous-incognito\\\" class=\\\"property-description hidden\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_privacy__text_incognito\\\"))]}</p>\\n    </div>\\n    {[fields.forEach(function (field) { if (field.type === 'hidden' || field.type === 'jid-multi') return;]}\\n    <div class=\\\"property-wrap {{field.var}}-field\\\">\\n        {[if (!(field.type == 'fixed' && field.values[0] === \\\"\\\")) {]}\\n        <div class=\\\"property-header\\\">{{field.label}}</div>\\n        {[}]}\\n        {[if (field.type === 'text-single') {]}\\n        <div class=\\\"input-field input-group-chat-name\\\">\\n            <input value=\\\"{{field.values[0]}}\\\" id=\\\"new_{{field.var}}_value\\\" type=\\\"text\\\" name=\\\"{{field.var}}\\\" placeholder='{[print(xabber.getString(\\\"group_settings_edit__setting_name__hint\\\"))]}' class=\\\"text-field\\\">\\n        </div>\\n        {[} else if (field.type === 'text-multi') {]}\\n        <textarea placeholder='{[print(xabber.getString(\\\"groupchat_example_description\\\"))]}' id=\\\"{{field.var}}\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"text-field materialize-textarea rich-textarea\\\">{{field.values[0]}}</textarea>\\n        {[} else if (field.type === 'list-single') { field.options.forEach(function (option) {]}\\n        <div class=\\\"property-radio\\\">\\n            <input {[if (option.value === field.values[0]){]}checked{[}]} id=\\\"{{option.value}}\\\" name=\\\"{{field.var}}\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n            <label class=\\\"{{option.value}}-label\\\" for=\\\"{{option.value}}\\\">{{option.label}}</label>\\n        </div>\\n        {[});} else  if (field.type === 'fixed' && field.values[0] !== \\\"\\\") {]}\\n        <div class=\\\"fixed-field{[if (field.var === 'description'){]} description{[}]}\\\">\\n            <div class=\\\"value\\\">{{field.values[0]}}</div>\\n        </div>\\n        {[}]}\\n        {[if (field.var === 'index'){]}\\n        <p class=\\\"property-description\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_index__text\\\"))]}</p>\\n        {[} else if (field.var === 'membership') {]}\\n        <p class=\\\"property-description\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_membership__text\\\"))]}</p>\\n        {[}]}\\n    </div>\\n    {[})]}\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (!all_fixed){]}\\n        <button class=\\\"btn-save btn-flat btn-main non-active\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        {[}]}\\n        <button class=\\\"btn-cancel btn-flat btn-dark btn-main\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <span class=\\\"btn-edit-settings\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-properties vcard-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info jabber-id\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info description short\\\">\\n                <div class=\\\"value\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"full-vcard-wrap\\\">\\n    <div class=\\\"full-vcard-content\\\">\\n        <div class=\\\"vcard-header block-header\\\">\\n            <div class=\\\"vcard-header-title\\\">\\n                <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_vcard_header_title\\\"))]}</span>\\n            </div>\\n            <div class=\\\"main-info\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar\\\"></div>\\n                </div>\\n                <div class=\\\"text-info\\\">\\n                    <div class=\\\"name-wrap\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"vcard-list\\\">\\n            <div class=\\\"info-wrap jid-info-wrap\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info jabber-id\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap name-info-wrap\\\">\\n                <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap description-info-wrap\\\">\\n                <div class=\\\"details-icon-wrap\\\">\\n                    <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info description\\\">\\n                        <div class=\\\"value\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap searchable-info-wrap\\\">\\n                <svg class=\\\"details-icon toolbar-icon mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\"></path>\\n                </svg>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info searchable\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_indexed\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap model-info-wrap\\\">\\n                <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-lock\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info model\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<tr class=\\\"participant-wrap\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <td class=\\\"list-item group-chat-participant\\\">\\n        <div class=\\\"member-item\\\">\\n            <div class=\\\"circle-avatar\\\"></div>\\n            <div class=\\\"participant-info\\\">\\n            <div class=\\\"top-line\\\"><div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>{[if (badge) {]}<div class=\\\"badge one-line\\\">{{badge}}</div>{[}]}</div>\\n            {[if (jid) {]}<p class=\\\"jid one-line\\\">{{jid}}</p>{[}]}\\n            </div>\\n        </div>\\n    </td>\\n    <td class=\\\"last-seen\\\">{[if (!present) {]}<span class=\\\"online-status text-color-green-700\\\">{[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}</span>{[} else {]}<span title=\\\"{{present}}\\\">{{pretty_present}}</span>{[}]}</td>\\n    <td class=\\\"role\\\">{[if (role !== 'member') {]}{{role}}{[}]}</td>\\n    <td>\\n        {[if (is_me) {]}\\n        <span style=\\\"font-size:12px\\\" class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</span>\\n        {[} else {]}\\n        <div class=\\\"buttons-wrap\\\">\\n            <div title='{[print(xabber.getString(\\\"groupchat_kick\\\"))]}' class=\\\"btn-kick\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-remove\\\"></i>\\n            </div>\\n            <div title='{[print(xabber.getString(\\\"groupchat_kick_and_block\\\"))]}' class=\\\"btn-block\\\">\\n                <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path fill=\\\"#9e9e9e\\\" d=\\\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,4A8,8 0 0,0 4,12C4,13.85 4.63,15.55 5.68,16.91L16.91,5.68C15.55,4.63 13.85,4 12,4M12,20A8,8 0 0,0 20,12C20,10.15 19.37,8.45 18.32,7.09L7.09,18.32C8.45,19.37 10.15,20 12,20Z\\\" />\\n                </svg>\\n            </div>\\n        </div>\\n        {[}]}\\n    </td>\\n</tr>\";","export default \"<tr class=\\\"participant-wrap\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <td class=\\\"list-item group-chat-participant\\\">\\n        <div class=\\\"member-item\\\">\\n            <div class=\\\"circle-avatar\\\"></div>\\n            <div class=\\\"participant-info\\\">\\n            <div class=\\\"top-line\\\">\\n                <div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>\\n                {[if (badge) {]}<div class=\\\"badge one-line\\\">{{badge}}</div>{[}]}\\n            </div>\\n                <div class=\\\"bottom-line\\\">\\n                    {[ if (is_me) {]}\\n                    <div class=\\\"online-status text-color-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n                    {[}else if (!present) {]}<span class=\\\"online-status text-color-green-700\\\">{[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}</span>{[} else {]}<span title=\\\"{{present}}\\\">{{pretty_present}}</span>{[}]}\\n                </div>\\n            </div>\\n            {[if (role === 'owner' || role === 'admin') {]}\\n            <div class=\\\"participant-buttons-wrap\\\">\\n                <div class=\\\"participant-role\\\">\\n                    {[if (role === 'owner') {]}\\n                        <i class=\\\"mdi participant-role-image mdi-24px mdi-star\\\"></i>\\n                    {[}else if (role === 'admin') {]}\\n                        <i class=\\\"mdi participant-role-image mdi-24px mdi-star-outline\\\"></i>\\n                    {[}]}\\n                </div>\\n            </div>\\n            {[} else if (!is_me) {]}\\n                <div class=\\\"buttons-wrap\\\">\\n                    <div title='{[print(xabber.getString(\\\"groupchat_edit_member\\\"))]}' class=\\\"btn-edit-member\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n                    </div>\\n                    <!--<div title='{[print(xabber.getString(\\\"mute_chat\\\"))]}' class=\\\"btn-mute\\\">-->\\n                        <!--<i class=\\\"mdi mdi-24px mdi-microphone-off\\\"></i>-->\\n                    <!--</div>-->\\n                    <div title='{[print(xabber.getString(\\\"groupchat_kick\\\"))]}' class=\\\"btn-kick\\\">\\n                        <i class=\\\"mdi mdi-24px mdi-account-remove\\\"></i>\\n                    </div>\\n                </div>\\n            {[}]}\\n        </div>\\n    </td>\\n</tr>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input rich-textarea field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"insert-emoticon\\\">\\n                <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n            </div>\\n            <div class=\\\"emoticons-panel-wrap\\\">\\n                <div class=\\\"emoticons-panel\\\"></div>\\n                <div class=\\\"emoji-menu\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_status\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-status\\\">\\n    <div class=\\\"status-wrap\\\">\\n        <div class=\\\"status status-bulb\\\"></div>\\n        <div class=\\\"status-message\\\"></div>\\n    </div>\\n    <div class=\\\"btn-edit-status\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"group-chat-status-wrap\\\" title=\\\"{[print(xabber.getString('group_settings__properties__tooltip_click_to_set_status'))]}\\\">\\n    <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"status-outline\\\"></svg></div>\\n    <div class=\\\"group-chat-status-border\\\">\\n        <div class=\\\"group-chat-status\\\">\\n            <div class=\\\"status-wrap\\\">\\n                <div class=\\\"status-message dotted-underline\\\"></div>\\n                <div class=\\\"status status-bulb\\\"></div>\\n            </div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_status\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap one-line\\\"></div>\\n            <div class=\\\"jid one-line\\\"></div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"msg-wrap\\\"><p class=\\\"msg-text\\\"></p></div>\\n        <div class=\\\"panel-footer noselect\\\">\\n            <div class=\\\"buttons-wrap\\\">\\n                <button class=\\\"btn-join btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_join\\\"))]}</button>\\n                <button class=\\\"btn-decline btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_decline\\\"))]}</button>\\n                <button class=\\\"btn-block btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"list-item {{status}}-user\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"member-item\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n        <p title=\\\"{{jid}}\\\" class=\\\"one-line\\\">{{jid}}</p>\\n        {[if (status == 'invitations') {]}\\n        <div title='{[print(xabber.getString(\\\"groupchat_revoke\\\"))]}' class=\\\"revoke-invitation\\\">\\n            {[}else{]}\\n            <div title='{[print(xabber.getString(\\\"groupchat_unblock\\\"))]}' class=\\\"unblock-user\\\">\\n                {[}]}\\n                <i class=\\\"mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"rich-textarea field-input badge-text\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_member_badge\\\"))]}' contenteditable></div>\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"insert-emoticon\\\">\\n            <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n        </div>\\n        <div class=\\\"emoticons-panel-wrap\\\">\\n            <div class=\\\"emoticons-panel\\\"></div>\\n            <div class=\\\"emoji-menu\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item {[if (subscription === null) {]}unsubscribed{[}]}\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    {[if (subscription !== null) {]}\\n    <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{id}}-buttons-wrap\\\">\\n        <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n    </div>\\n    <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n        <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n    </ul>\\n    {[}]}\\n    <div class=\\\"circle-avatar\\\">\\n        {[if (subscription !== null) {]}\\n        <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\">\\n            <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n            </svg>\\n            <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            </div>\\n        {[}]}\\n    </div>\\n        <div class=\\\"participant-info\\\">\\n            {[if (subscription !== null) {]}<div id=\\\"edit-nickname\\\" class=\\\"rich-textarea\\\" tabindex=\\\"1\\\" contenteditable></div>{[}]}\\n            <div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>\\n            <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n            {[if (jid) {]}<p title=\\\"{{jid}}\\\" class=\\\"jid selectable-text one-line\\\">{{jid}}</p>{[}]}\\n            {[ if (is_myself) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n            {[}]}\\n            {[ if (is_blocked_contact) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"action_contact_blocked\\\"))]}</div>\\n            {[}]}\\n            {[if (subscription === null) {]}<p class=\\\"role selectable-text one-line\\\">{[if (blocked) { print(xabber.getString(\\\"groupchat_blocked\\\")); }else{print(xabber.getString(\\\"settings_group_member__placeholder_not_a_member\\\"));}]}</p>{[}]}\\n        </div>\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (incognito_chat) {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-incognito btn-chat\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_private_chat\\\"))]}</div>\\n        </div>\\n        {[} else {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_direct_chat\\\"))]}</div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"button-wrap btn-participant-messages-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-view-list btn-participant-messages\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_member_messages\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-set-badge-wrap\\\">\\n            <svg class=\\\"btn-set-badge\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M17,3H14V6H10V3H7A2,2 0 0,0 5,5V21A2,2 0 0,0 7,23H17A2,2 0 0,0 19,21V5A2,2 0 0,0 17,3M12,8A2,2 0 0,1 14,10A2,2 0 0,1 12,12A2,2 0 0,1 10,10A2,2 0 0,1 12,8M16,16H8V15C8,13.67 10.67,13 12,13C13.33,13 16,13.67 16,15V16M13,5H11V1H13V5M16,19H8V18H16V19M12,21H8V20H12V21Z\\\" />\\n            </svg>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_set_member_badge\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-kick-participant-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-account-remove btn-kick-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_kick\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item {[if (subscription === null) {]}unsubscribed{[}]}\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"block-header\\\">\\n        <i class=\\\"details-icon btn-back parent-btn mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <i class=\\\"details-icon btn-back-name child-btn mdi mdi-24px mdi-arrow-right hidden\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <button class=\\\"btn-save-user-rights non-active fade-out btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_save_member_settings\\\"))]}</button>\\n        {[if (subscription !== null) {]}\\n        <div class=\\\"btn-edit-participant\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n            <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n        </ul>\\n        {[}]}\\n    </div>\\n    <div class=\\\"circle-avatar\\\">\\n        {[if (subscription !== null) {]}\\n            <div class=\\\"preloader-wrap\\\">\\n                <div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        {[}]}\\n    </div>\\n        <div class=\\\"participant-info\\\">\\n            {[if (subscription !== null) {]}<div class=\\\"participant-edit-nickname hidden\\\"></div>{[}]}\\n            <div class=\\\"participant-edit-badge hidden\\\"></div>\\n            <div class=\\\"participant-info-text\\\">\\n                <div class=\\\"nickname\\\">\\n                    {{nickname}} <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n                </div>\\n                {[ if (is_myself) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n                {[}]}\\n                {[ if (subscription === null && blocked) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_blocked\\\"))]}</div>\\n                {[} else if (subscription === null) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_kicked\\\"))]}</div>\\n                {[}]}\\n\\n            </div>\\n        </div>\\n    <div class=\\\"buttons-wrap sticky-details-wrap\\\">\\n        {[if (incognito_chat) {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-incognito btn-chat-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_private_chat\\\"))]}</div>\\n        </div>\\n        {[} else {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-message-text btn-chat-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_direct_chat\\\"))]}</div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"button-wrap btn-participant-messages-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-view-list btn-participant-messages\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_member_messages\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap non-active btn-set-visibility-wrap\\\">\\n            <i title=\\\"Feature not yet implemented\\\" class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-eye btn-set-visibility\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_set_member_visibility_visible\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-kick-participant-wrap\\\">\\n            <i class=\\\"mdi contact-btn mdi-24px mdi-account-remove text-color-500 btn-kick-participant\\\"></i>\\n            <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_kick\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"vcard-wrap vcard\\\">\\n        {[if (jid) {]}\\n        <div class=\\\"info-wrap jid-info-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n            <div class=\\\"info-hover\\\">\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">{{jid}}</div>\\n                    <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        {[}]}\\n        {[if (role === 'owner' || role === 'admin') {]}\\n        <div class=\\\"info-wrap role-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\">\\n                {[if (role === 'owner') {]}\\n                    <i class=\\\"details-icon mdi mdi-24px mdi-star\\\"></i>\\n                {[}else if (role === 'admin') {]}\\n                    <i class=\\\"details-icon mdi mdi-24px mdi-star-outline\\\"></i>\\n                {[}]}\\n            </div>\\n            <div>\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">\\n                        <span>\\n                            {[if (role === 'owner') {]}\\n                                {[print(xabber.getString(\\\"groupchat_role_owner\\\"))]}\\n                            {[}else if (role === 'admin') {]}\\n                                {[print(xabber.getString(\\\"groupchat_role_admin\\\"))]}\\n                            {[}]}\\n                        </span>\\n                    </div>\\n                    <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_role\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"info-wrap present-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" {[if (!present) {]}data-svgname=\\\"status-outline\\\"{[} else {]}data-svgname=\\\"clock-outline\\\"{[}]}></svg></div>\\n            <div>\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">\\n                        <span>\\n                            {[if (!present) {]}\\n                                {[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}\\n                            {[} else {]}\\n                            {{pretty_present}}\\n                            {[}]}\\n                        </span>\\n                    </div>\\n                    <div class=\\\"label\\\">{[if (!present) {]}{[print(xabber.getString(\\\"groupchat_status\\\"))]}{[} else {]}{[print(xabber.getString(\\\"group_settings__members__label_last_seen\\\"))]}{[}]}</div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-wrap\\\">\\n    <div class=\\\"participant-details-info-wrap\\\">\\n    </div>\\n    <ul class=\\\"tabs participant-tabs bottom-block-tabs\\\">\\n        <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n        <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n        <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n        <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n    </ul>\\n    <div class=\\\"bottom-block participant-bottom-block\\\">\\n        <div class=\\\"block-wrap participants-details-media-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"participant-details-edit-wrap edit-wrap\\\">\\n        <div class=\\\"main-info\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar\\\">\\n                    <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                    <div class=\\\"preloader-wrap\\\">\\n                        <div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"set-groupchat-avatar-text\\\">{[print(xabber.getString(\\\"groupchat_set_avatar\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"participant-details-edit-inputs\\\">\\n            <div class=\\\"edit-participant-name-wrap\\\">\\n            </div>\\n            <div class=\\\"edit-participant-badge-wrap\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"rights-wrap\\\">\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"header\\\">\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"rights-wrap\\\">\\n    </div>\\n</div>\\n\";","export default \"<table class=\\\"members-list-wrap\\\">\\n    <thead>\\n    <tr>\\n        <th>\\n            <div class=\\\"participants-search-form search-form\\\">\\n                <svg class=\\\"search-icon\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z\\\" />\\n                </svg>\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_search_members\\\"))]}'>\\n                <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n        </th>\\n        <th>{[print(xabber.getString(\\\"group_settings__members__label_last_seen\\\"))]}</th>\\n        <th>{[print(xabber.getString(\\\"groupchat_role\\\"))]}</th>\\n        <th></th>\\n    </tr>\\n    </thead>\\n    <tbody></tbody>\\n</table>\\n<div class=\\\"preloader-wrapper preloader-17px active\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<table class=\\\"members-list-wrap\\\">\\n    <thead>\\n    <tr>\\n        <th>\\n            <div class=\\\"participants-search-form search-form\\\">\\n                <svg class=\\\"search-icon\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z\\\" />\\n                </svg>\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_search_members\\\"))]}'>\\n                <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n        </th>\\n    </tr>\\n    </thead>\\n    <tbody></tbody>\\n</table>\\n<div class=\\\"preloader-wrapper preloader-17px active\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<svg class=\\\"pin\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path fill=\\\"#757575\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\" />\\n</svg>\\n<div class=\\\"msg-wrap\\\">\\n    <div class=\\\"chat-msg-author-wrap\\\">\\n        <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{author}}</div>{[if (fwd_author){]}<svg class=\\\"fwd-chevron\\\" viewBox=\\\"0 0 24 24\\\"><path fill=\\\"#9E9E9E\\\" d=\\\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\\\"></path></svg><div class=\\\"chat-msg-author text-color-700 one-line\\\">{{fwd_author}}</div>{[}]}\\n        <div class=\\\"msg-time\\\">{{time}}</div>\\n    </div>\\n    <div class=\\\"chat-msg-content chat-text-content one-line\\\">\\n        {{message}}\\n    </div>\\n</div>\\n<svg title='{[print(xabber.getString(\\\"group_chat__pinned_message__tooltip_unpin\\\"))]}' class=\\\"close\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path class=\\\"close\\\" fill=\\\"#9E9E9E\\\" d=\\\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\\\" />\\n</svg>\";","export default \"<div class=\\\"participant-details-item\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"circle-avatar\\\">\\n        {[ if (is_myself) {]}\\n        <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\">\\n        {[}]}\\n        {[ if (is_myself) {]}\\n        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n        </svg>\\n        <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        </div>\\n        {[}]}\\n    </div>\\n    <div class=\\\"participant-info\\\">\\n        {[ if (is_myself) {]}\\n        <div id=\\\"edit-nickname\\\" class=\\\"rich-textarea\\\" tabindex=\\\"1\\\" contenteditable></div>\\n        {[}]}\\n        <div title=\\\"{{nickname}}\\\" class=\\\"{{is_myself && 'is-myself'}} nickname one-line\\\">{{nickname}}</div>\\n        <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n        {[ if (is_myself) {]}\\n        <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n        {[}]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"block-header\\\">\\n        <i class=\\\"details-icon btn-back parent-btn mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <i class=\\\"details-icon btn-back-name child-btn mdi mdi-24px mdi-arrow-right hidden\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <button class=\\\"btn-save-user-rights non-active fade-out btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_save_member_settings\\\"))]}</button>\\n        {[if (subscription !== null) {]}\\n        <div class=\\\"btn-edit-participant\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n            <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n        </ul>\\n        {[}]}\\n    </div>\\n    <div class=\\\"circle-avatar\\\">\\n        <div class=\\\"preloader-wrap\\\">\\n            <div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"participant-info\\\">\\n        {[if (subscription !== null) {]}<div class=\\\"participant-edit-nickname hidden\\\"></div>{[}]}\\n        <div class=\\\"participant-edit-badge hidden\\\"></div>\\n        <div class=\\\"participant-info-text\\\">\\n            <div class=\\\"nickname\\\">\\n                {{nickname}} <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n            </div>\\n            {[ if (is_myself) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n            {[}]}\\n\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"right-item restriction restriction-{{name}}\\\">\\n    <div class=\\\"right-name\\\">{{pretty_name}}</div>\\n    <div class=\\\"field clickable-field restriction-{{name}}-state switch normal\\\">\\n        <input type=\\\"checkbox\\\" {[if (type === 'fixed') {]} onclick=\\\"return false;\\\" {[}]} class=\\\"filled-in\\\" id=\\\"{{name}}\\\">\\n        <label for=\\\"{{name}}\\\"></label>\\n    </div>\\n</div>\";","export default \"<div class=\\\"select-timer\\\">\\n    <div class=\\\"dropdown-button\\\" data-activates=\\\"select-timer-{{right_name}}\\\">\\n        <div class=\\\"timer-item-wrap\\\"><div data-value=\\\"0\\\" class=\\\"default-value property-value\\\">{[print(xabber.getString(\\\"dialog_rights__button_set_timer\\\"))]}</div></div>\\n    </div>\\n    <div id=\\\"select-timer-{{right_name}}\\\" class=\\\"dropdown-content noselect\\\">\\n        {[expire_options.forEach(function (option) {]}\\n        <div data-value=\\\"{{option.value}}\\\" class=\\\"property-variant\\\">{{option.label}}</div>\\n        {[}.bind(this));]}\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_set_status__header\\\"))]}</span>\\n    </div>\\n    <ul class=\\\"status-values noselect\\\">\\n        <div class=\\\"loading-status\\\">\\n            <div class=\\\"preloader-wrapper preloader-17px active\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </ul>\\n</div>\\n\";","export default \"<li data-value=\\\"{{status.value}}\\\">\\n    <span class=\\\"status-value one-line\\\">{{status.label}}</span>\\n    <span class=\\\"status-bulb\\\" data-status=\\\"{{status.show}}\\\"></span>\\n</li>\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"group-head\\\">\\n    <i class=\\\"arrow mdi mdi-20px\\\"></i>\\n    <div class=\\\"group-title\\\">\\n        <span class=\\\"group-name one-line\\\"></span>\\n        <span class=\\\"member-counter one-line\\\"></span>\\n    </div>\\n    <i class=\\\"group-icon mdi mdi-20px hidden\\\"></i>\\n</div>\\n\";","export default \"<div class=\\\"group-head\\\">\\n    <i class=\\\"arrow mdi mdi-20px\\\"></i>\\n    <div class=\\\"group-title\\\">\\n        <span class=\\\"group-name one-line\\\"></span>\\n        <span class=\\\"member-counter one-line\\\"></span>\\n    </div>\\n    <i class=\\\"group-icon mdi mdi-20px hidden\\\"></i>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap settings-panel\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_circle_settings__header\\\"))]}</span>\\n    </div>\\n\\n    <div class=\\\"modal-content\\\">\\n            <div class=\\\"field-wrap group-name\\\">\\n                <div class=\\\"input-field\\\">\\n                    <label for=\\\"{{view.cid}}-group-name\\\">{[print(xabber.getString(\\\"circle_name\\\"))]}</label>\\n                    <input id=\\\"{{view.cid}}-group-name\\\" type=\\\"text\\\" name=\\\"group_name\\\">\\n                    <span class=\\\"errors fixed\\\"></span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"category_offline_contacts\\\"))]}</div>\\n            <div class=\\\"setting-wrap\\\">\\n                <div class=\\\"setting offline radio-button field-wrap\\\">\\n                    <div class=\\\"field radio-field clickable-field\\\">\\n                        <form action=\\\"#\\\">\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"yes\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show\\\" />\\n                                <label for=\\\"{{view.cid}}-show\\\">{[print(xabber.getString(\\\"show_offline_always\\\"))]}</label>\\n                            </p>\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"no\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hide\\\" />\\n                                <label for=\\\"{{view.cid}}-hide\\\">{[print(xabber.getString(\\\"hide_offline_always\\\"))]}</label>\\n                            </p>\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show-offline-default\\\" />\\n                                <label for=\\\"{{view.cid}}-show-offline-default\\\">{[print(xabber.getString(\\\"dialog_circle_settings__label_common_settings\\\"))]}</label>\\n                            </p>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-dark btn-delete left\\\">{[print(xabber.getString(\\\"circle_remove\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-apply\\\">{[print(xabber.getString(\\\"dialog_circle_settings__button_apply\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"groups-list-wrap\\\">\\n    <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles-outline\\\"></svg></div>\\n    <div class=\\\"groups\\\">\\n    </div>\\n    </div>\\n</div>\\n<div class=\\\"groups-wrap\\\">\\n    <div class=\\\"checkbox-list\\\">\\n    </div>\\n</div>\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    {[ if (!checked) {]}\\n        <div class=\\\"input-field checkbox-field existing-group-field\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{group_id}}\\\" data-groupname=\\\"{{name}}\\\" {[ if (checked) { ]}checked=\\\"checked\\\"{[ } ]} />\\n            <label for=\\\"{{group_id}}\\\">{{name}}</label>\\n        </div>\\n    {[}]}\\n{[ } ]}\\n\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    <div class=\\\"input-field checkbox-field existing-group-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{group_id}}\\\" data-groupname=\\\"{{name}}\\\" {[ if (checked) { ]}checked=\\\"checked\\\"{[ } ]} />\\n        <label for=\\\"{{group_id}}\\\">{{name}}</label>\\n    </div>\\n{[ } ]}\\n    <div class=\\\"new-group-field-wrap\\\">\\n        <div class=\\\"input-field checkbox-field new-group-checkbox\\\">\\n            <input type=\\\"checkbox\\\" disabled class=\\\"filled-in\\\" id=\\\"new_group_checkbox\\\"/>\\n            <label for=\\\"new_group_checkbox\\\"></label>\\n        </div>\\n        <div class=\\\"input-field new-group-name\\\">\\n            <input class=\\\"rich-textarea xabber-input\\\" id=\\\"new-group-name\\\" type=\\\"text\\\" name=\\\"new_group_name\\\" placeholder='{[print(xabber.getString(\\\"add_new_circle\\\"))]}'>\\n        </div>\\n    </div>\\n\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    {[ if (checked) {]}\\n        <div data-groupname=\\\"{{name}}\\\" title=\\\"{[print(xabber.getString('contact_tooltip_remove_by_click'))]}\\\" class=\\\"group ground-color-50\\\">\\n            <div>{{name}}</div>\\n        </div>\\n    {[}]}\\n\\n{[ } ]}\\n\";","export default \"<div class=\\\"new-group-field-wrap\\\">\\n    <div class=\\\"input-field checkbox-field new-group-checkbox\\\">\\n        <input type=\\\"checkbox\\\" disabled class=\\\"filled-in\\\" id=\\\"new_group_checkbox\\\"/>\\n        <label for=\\\"new_group_checkbox\\\"></label>\\n    </div>\\n    <div class=\\\"input-field new-group-name\\\">\\n        <input class=\\\"xabber-input\\\" id=\\\"new-group-name\\\" autocomplete=\\\"off\\\" type=\\\"text\\\" name=\\\"new_group_name\\\" placeholder='{[print(xabber.getString(\\\"add_new_circle\\\"))]}'>\\n    </div>\\n</div>\";","export default \"<div class=\\\"gallery-file\\\" title=\\\"{{file.name}}\\\" data-id=\\\"{{file.id}}\\\" data-uniqueid=\\\"{{file.uniqueid}}\\\"  data-file=\\\"{{file.sources[0]}}\\\" data-name=\\\"{{file.name}}\\\" data-size=\\\"{{file.size}}\\\" data-width=\\\"{{file.width}}\\\" data-height=\\\"{{file.height}}\\\" data-media-type=\\\"{{file.media_type}}\\\" >\\n    {[if (file.media_type && (file.media_type.includes('image') || (file.media_type.includes('video') && !file.has_encrypted_files && !is_encrypted))){]}\\n    <img class=\\\"{[if (file.media_type.includes('video')){]}uploaded-video{[} else {]}uploaded-img popup-img{[}]}\\\"\\n         data-mfp-src=\\\"{{file.sources[0]}}\\\"\\n         src=\\\"{[if (file.thumbnail){]}{{file.thumbnail}}{[} else {]}{{file.sources[0]}}{[}]}\\\"\\n         onError=\\\"this.parentElement.className = this.parentElement.className + ' hidden';\\\"\\n    >\\n    {[} else {]}\\n    {[if (svg_icon == 'file-audio' && file.true_voice){]}\\n    <div class=\\\"gallery-file-placeholder-background gallery-audio-file-not-uploaded\\\">\\n        <i class=\\\"details-icon mdi mdi-play no-uploaded\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-file-audio-container\\\">\\n    </div>\\n    {[} else {]}\\n    <div class=\\\"gallery-file-placeholder-background\\\">\\n        <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n        <div class=\\\"gallery-file-title-grid\\\">{{filesize}}</div>\\n    </div>\\n    {[}]}\\n    <div class=\\\"gallery-file-title one-line\\\">\\n        {{file.name}},  <span class=\\\"gallery-file-size\\\">{{filesize}}</span>\\n    </div>\\n    {[if (duration && file.true_voice){]}\\n    <div class=\\\"gallery-voice-file-duration\\\">\\n        0:00 / <span class=\\\"gallery-voice-file-total-duration\\\">{{duration}}</span>\\n    </div>\\n    {[}]}\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"gallery-empty\\\">\\n    <div class=\\\"gallery-empty-icon-wrap\\\">\\n        <i class=\\\"gallery-empty-icon mdi mdi-24px mdi-package-variant\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-empty-text\\\">{[print(xabber.getString(\\\"no_files\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"contacts-panel noselect\\\">\\n    <div class=\\\"contacts-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n\\n    <div class=\\\"contact-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"contact-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"contacts-panel noselect\\\">\\n    <div class=\\\"collapsed-wrap\\\">\\n        <i class=\\\"collapsed-contacts-icon mdi mdi-24px mdi-account-multiple\\\"></i>\\n        <div class=\\\"all-contacts-counter\\\"></div>\\n    </div>\\n    <div class=\\\"expanded-wrap\\\">\\n        <div class=\\\"roster-head panel-head\\\">\\n            <div class=\\\"contacts-header\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n            <div class=\\\"roster-button btn-pin\\\"></div>\\n        </div>\\n\\n        <div class=\\\"contact-list-wrap\\\">\\n            <div class=\\\"contact-list\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"    <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_contact_list__header_offline_contacts\\\"))]}</div>\\n    <div class=\\\"setting offline-contacts radio-button field-wrap\\\">\\n        <div class=\\\"field radio-field clickable-field\\\">\\n            <form action=\\\"#\\\">\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"offline-contacts\\\" value=\\\"yes\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show\\\" />\\n                    <label for=\\\"{{view.cid}}-show\\\">{[print(xabber.getString(\\\"settings__section_contact_list__offline_contacts__label_show\\\"))]}</label>\\n                </p>\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"offline-contacts\\\" value=\\\"no\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hide\\\" />\\n                    <label for=\\\"{{view.cid}}-hide\\\">{[print(xabber.getString(\\\"settings__section_contact_list__offline_contacts__label_hide\\\"))]}</label>\\n                </p>\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_contact_list__header_sorting\\\"))]}</div>\\n    <div class=\\\"setting sorting-contacts radio-button field-wrap\\\">\\n        <div class=\\\"field radio-field clickable-field\\\">\\n            <form action=\\\"#\\\">\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"sorting-contacts\\\" value=\\\"online-first\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-online-first\\\" />\\n                    <label for=\\\"{{view.cid}}-online-first\\\">{[print(xabber.getString(\\\"settings__section_contact_list__sorting__label_online_first\\\"))]}</label>\\n                </p>\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"sorting-contacts\\\" value=\\\"by-alphabet\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-by-alphabet\\\" />\\n                    <label for=\\\"{{view.cid}}-by-alphabet\\\">{[print(xabber.getString(\\\"settings__section_contact_list__sorting__label_alphabet\\\"))]}</label>\\n                </p>\\n            </form>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"group-chat-title-wrap hidden\\\">\\n    <div class=\\\"account-indicator ground-color-700\\\"></div>\\n    <div class=\\\"contact-icon\\\">\\n    </div>\\n    <div class=\\\"group-chat-name one-line\\\"></div>\\n</div>\\n<div class=\\\"mention-info-wrap\\\">\\n<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"mention-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n    <span class=\\\"msg-counter hidden\\\"></span>\\n</div>\\n</div>\";","export default \"<div class=\\\"mentions-panel noselect\\\">\\n    <div class=\\\"chats-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"mentions-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"mentions-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"mentions_list__placeholder\\\"))]}</div>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"searching__chat_properties__header\\\"))]}</span>\\n</div>\\n<div class=\\\"chat-properties-wrap selectable-text\\\">\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\">{{jid}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap name-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info name\\\">\\n            <div class=\\\"value one-line\\\">{{name}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value one-line\\\">{{description}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap anonymous-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-comment-question-outline\\\"></i>\\n        <div class=\\\"info anonymous\\\">\\n            <div class=\\\"value one-line\\\">{{privacy}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_incognito\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap model-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-lock-open-outline\\\"></i>\\n        <div class=\\\"info model\\\">\\n            <div class=\\\"value one-line\\\">{{membership}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\\n<button class=\\\"btn-join-chat btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"groupchat_join\\\"))]}</button>\\n\";","export default \"<div class=\\\"existing-chat-wrap\\\" data-name=\\\"{{name}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"account-indicator ground-color-{{color}}-500\\\"></div>\\n    <div class=\\\"circle-avatar\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"existing-chat-item\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"account-item-wrap\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"name one-line\\\">{{jid}}</div>\\n</div>\";","export default \"<div class=\\\"searching-panel\\\">\\n    <div class=\\\"search-wide search-form\\\">\\n        <div class=\\\"account-indicator ground-color-500\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"searching__placeholder_search_by_domain\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"searching-properties-field\\\">\\n        <div class=\\\"dropdown-button\\\" data-visible=\\\"false\\\">\\n            <i class=\\\"mdi mdi-24px mdi-chevron-down arrow\\\"></i>\\n        </div>\\n    </div>\\n    <ul id=\\\"select-searching-properties\\\" class=\\\"selectable-text\\\">\\n        <div class=\\\"account-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_account\\\"))]}</p>\\n            <div class=\\\"account-field\\\">\\n                <div class=\\\"multiple-acc\\\">\\n                    <div class=\\\"account-dropdown-wrap\\\">\\n                        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-account-for-searching\\\">\\n                            <div class=\\\"account-item-wrap\\\">\\n                            </div>\\n                            <div class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-account-for-searching\\\" class=\\\"dropdown-content\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"single-acc\\\">\\n                    <div class=\\\"dropdown-button\\\">\\n                        <div class=\\\"account-item-wrap\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"title-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_title\\\"))]}</p>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"searching_property_title\\\" type=\\\"text\\\" name=\\\"title\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"sorting-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_sort_by\\\"))]}</p>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"searching_property_sort_by\\\" type=\\\"text\\\" name=\\\"title\\\">\\n            </div>\\n        </div>\\n        <button class=\\\"btn-search btn btn-main-filled ground-color-700\\\">{[print(xabber.getString(\\\"search\\\"))]}</button>\\n    </ul>\\n</div>\\n<div class=\\\"searching-result-wrap\\\">\\n    <div class=\\\"chats-list-wrap\\\">\\n        <div class=\\\"result-string\\\"></div>\\n        <div class=\\\"preloader-wrapper preloader-17px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div></div>\\n        <div class=\\\"chats-list\\\"></div></div>\\n    <div class=\\\"searching-more\\\"></div>\\n</div>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/account-cancel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,4 C7.790861,4 6,5.790861 6,8 C6,10.209139 7.790861,12 10,12 C12.209139,12 14,10.209139 14,8 C14,5.790861 12.209139,4 10,4 M17.5,13 C15,13 13,15 13,17.5 C13,20 15,22 17.5,22 C20,22 22,20 22,17.5 C22,15 20,13 17.5,13 M10,14 C5.58,14 2,15.79 2,18 L2,20 L11.5,20 C11.169935,19.2078439 11,18.3581691 11,17.5 C11.004284,16.3143165 11.3328048,15.1523902 11.95,14.14 C11.32,14.06 10.68,14 10,14 M17.5,14.5 C19.16,14.5 20.5,15.84 20.5,17.5 C20.5,18.06 20.35,18.58 20.08,19 L16,14.92 C16.42,14.65 16.94,14.5 17.5,14.5 M14.92,16 L19,20.08 C18.58,20.35 18.06,20.5 17.5,20.5 C15.84,20.5 14.5,19.16 14.5,17.5 C14.5,16.94 14.65,16.42 14.92,16 Z\\\" id=\\\"mdi:account-cancel\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/account-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,19 L5,19 L5,5 L19,5 M19,3 L5,3 C3.8954305,3 3,3.8954305 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 M16.5,16.25 C16.5,14.75 13.5,14 12,14 C10.5,14 7.5,14.75 7.5,16.25 L7.5,17 L16.5,17 M12,12.25 C13.2426407,12.25 14.25,11.2426407 14.25,10 C14.25,8.75735931 13.2426407,7.75 12,7.75 C10.7573593,7.75 9.75,8.75735931 9.75,10 C9.75,11.2426407 10.7573593,12.25 12,12.25 Z\\\" id=\\\"mdi:account-box-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/account\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M6,17 C6,15 10,13.9 12,13.9 C14,13.9 18,15 18,17 L18,18 L6,18 M15,9 C15,10.6568542 13.6568542,12 12,12 C10.3431458,12 9,10.6568542 9,9 C9,7.34314575 10.3431458,6 12,6 C13.6568542,6 15,7.34314575 15,9 M3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.8954305 20.1045695,3 19,3 L5,3 C3.89,3 3,3.9 3,5 Z\\\" id=\\\"mdi:account-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/address-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 M12,2 C15.8659932,2 19,5.13400675 19,9 C19,14.25 12,22 12,22 C12,22 5,14.25 5,9 C5,5.13400675 8.13400675,2 12,2 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,10 7,12 12,18.71 C17,12 17,10 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:map-marker-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/address\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\\\" id=\\\"mdi:map-marker\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/alarm-bell\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M15,18.66 L15,22 L5,22 L5,18.66 C8.09301265,20.4500491 11.9069873,20.4500491 15,18.66 M22,4 C22,2.8954305 21.1045695,2 20,2 C19.69,2 19.39,2.07 19.12,2.21 C18.82,2.36 18.56,2.58 18.36,2.85 C17.9280885,3.46077217 17.873744,4.26171236 18.219194,4.92522914 C18.564644,5.58874591 19.2519508,6.00355658 20,6 L20.24,6 C21.97,10.43 20.66,15.46 17,18.5 C16.68,18.75 16.35,19 16,19.22 L16,21 L17,21 L17,19.74 C20.14,17.5 22,13.86 22,10 C22,8.5 21.72,7 21.17,5.62 C21.69,5.24 22,4.64 22,4 M18,10 C18,12.1217319 17.1571453,14.1565632 15.6568542,15.6568542 C14.1565632,17.1571453 12.1217319,18 10,18 C5.581722,18 2,14.418278 2,10 C2,5.581722 5.581722,2 10,2 C12.1217319,2 14.1565632,2.84285472 15.6568542,4.34314575 C17.1571453,5.84343678 18,7.87826808 18,10 L18,10 Z\\\" id=\\\"mdi:alarm-bell\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/alert-circle\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,13 L11,13 L11,7 L13,7 M13,17 L11,17 L11,15 L13,15 M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C14.6521649,22 17.195704,20.9464316 19.0710678,19.0710678 C20.9464316,17.195704 22,14.6521649 22,12 C22,9.3478351 20.9464316,6.80429597 19.0710678,4.92893219 C17.195704,3.0535684 14.6521649,2 12,2 Z\\\" id=\\\"mdi:alert-circle\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bell-off\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20.84,22.73 L18.11,20 L3,20 L3,19 L5,17 L5,11 C5.00430327,9.85524651 5.28929416,8.72901748 5.83,7.72 L1.11,3 L2.39,1.73 L22.11,21.46 L20.84,22.73 Z M19.0000002,15.8 L19.0000002,11 C19.0007944,7.90366232 16.9672665,5.17466784 14,4.29 C14.0049007,4.19339544 14.0049007,4.09660456 14,4 C14,2.8954305 13.1045695,2 12,2 C10.8954305,2 10,2.8954305 10,4 C9.99507868,4.09660403 9.99507868,4.19339597 10,4.29 C9.385,4.474 8.8,4.743 8.26,5.09 L19.0000002,15.8 Z M12,23 C13.1045695,23 14,22.1045695 14,21 L10,21 C10,22.1045695 10.8954305,23 12,23 Z\\\" id=\\\"mdi:bell-off\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bell-sleep\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,21 L14,21 C14,22.1045695 13.1045695,23 12,23 C10.8954305,23 10,22.1045695 10,21 Z M21,19 L21,20 L3,20 L3,19 L5,17 L5,11 C4.99920557,7.90366232 7.0327335,5.17466784 10,4.29 C9.99507868,4.19339597 9.99507868,4.09660403 10,4 C10,2.8954305 10.8954305,2 12,2 C13.1045695,2 14,2.8954305 14,4 C14.005,4.097 14.005,4.193 14,4.29 C16.9672665,5.17466784 19.0007944,7.90366232 19,11 L19,17 L21,19 L21,19 Z M15,9 L9,9 L9,11 L12.24,11 L9,13.7 L9,16 L15,16 L15,14 L11.76,14 L15,11.3 L15,9 Z\\\" id=\\\"mdi:bell-sleep\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bell\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,19 L21,20 L3,20 L3,19 L5,17 L5,11 C4.99920557,7.90366232 7.0327335,5.17466784 10,4.29 C9.99507868,4.19339597 9.99507868,4.09660403 10,4 C10,2.8954305 10.8954305,2 12,2 C13.1045695,2 14,2.8954305 14,4 C14.005,4.097 14.005,4.193 14,4.29 C16.9672665,5.17466784 19.0007944,7.90366232 19,11 L19,17 L21,19 L21,19 Z M14,21 C14,22.1045695 13.1045695,23 12,23 C10.8954305,23 10,22.1045695 10,21 L14,21 Z\\\" id=\\\"mdi:bell\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/birthday-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6 C13.1045695,6 14,5.1045695 14,4 C14,3.62 13.9,3.27 13.71,2.97 L12,0 L10.29,2.97 C10.1,3.27 10,3.62 10,4 C10,5.1 10.9,6 12,6 M18,9 L13,9 L13,7 L11,7 L11,9 L6,9 C4.34,9 3,10.34 3,12 L3,21 C3,21.55 3.45,22 4,22 L20,22 C20.55,22 21,21.55 21,21 L21,12 C21,10.34 19.66,9 18,9 M19,20 L5,20 L5,17 C5.9,17 6.76,16.63 7.4,16 L8.5,14.92 L9.56,16 C10.87,17.3 13.15,17.29 14.45,16 L15.53,14.92 L16.6,16 C17.24,16.63 18.1,17 19,17 L19,20 M19,15.5 C18.5,15.5 18,15.3 17.65,14.93 L15.5,12.8 L13.38,14.93 C12.64,15.67 11.35,15.67 10.61,14.93 L8.5,12.8 L6.34,14.93 C6,15.29 5.5,15.5 5,15.5 L5,12 C5,11.45 5.45,11 6,11 L18,11 C18.55,11 19,11.45 19,12 L19,15.5 Z\\\" id=\\\"mdi:cake-variant-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/birthday\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,7 C13.11,7 14,6.1 14,5 C14,4.62 13.9,4.27 13.71,3.97 L12,1 L10.29,3.97 C10.1,4.27 10,4.62 10,5 C10,6.1045695 10.8954305,7 12,7 M16.6,17 L15.53,15.92 L14.45,17 C13.15,18.29 10.87,18.3 9.56,17 L8.5,15.92 L7.4,17 C6.75,17.64 5.88,18 4.96,18 C4.23,18 3.56,17.77 3,17.39 L3,22 C3,22.5522847 3.44771525,23 4,23 L20,23 C20.5522847,23 21,22.5522847 21,22 L21,17.39 C20.44,17.77 19.77,18 19.04,18 C18.12,18 17.25,17.64 16.6,17 M18,10 L13,10 L13,8 L11,8 L11,10 L6,10 C4.34314575,10 3,11.3431458 3,13 L3,14.54 C3,15.62 3.88,16.5 4.96,16.5 C5.5,16.5 6,16.3 6.34,15.93 L8.5,13.8 L10.61,15.93 C11.35,16.67 12.64,16.67 13.38,15.93 L15.5,13.8 L17.65,15.93 C18,16.3 18.5,16.5 19.03,16.5 C20.11,16.5 21,15.62 21,14.54 L21,13 C21,11.3431458 19.6568542,10 18,10 Z\\\" id=\\\"mdi:cake-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/blocked-add\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,15 L20,18 L23,18 L23,20 L20,20 L20,23 L18,23 L18,20 L15,20 L15,18 L18,18 L18,15 L20,15 Z M12,2 C17.5,2 22,6.5 22,12 C22,12.5859564 21.9489239,13.1605626 21.851004,13.7195862 C21.2621133,13.4007388 20.6141835,13.1778427 19.9277796,13.0712956 C19.9754227,12.7216453 20,12.3635535 20,12 C20,10.1 19.4,8.4 18.3,7.1 L7.1,18.3 C8.5,19.3 10.2,20 12,20 C12.3635535,20 12.7216453,19.9754227 13.0726961,19.9278476 C13.1778427,20.6141835 13.4007388,21.2621133 13.719191,21.8507762 C13.1605626,21.9489239 12.5859564,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 Z M12,4 C7.6,4 4,7.6 4,12 C4,13.7882353 4.53148789,15.399308 5.51109302,16.6664767 L5.7,16.9 L16.9,5.7 C15.6,4.6 13.9,4 12,4 Z\\\" id=\\\"xabber:block-add\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/blocked\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8,1 C11.8659932,1 15,4.13400675 15,8 C15,11.8659932 11.8659932,15 8,15 C4.13400675,15 1,11.8659932 1,8 C1,4.13400675 4.13400675,1 8,1 Z M12.3574649,4.64359326 L4.64359326,12.3574649 C5.57228864,13.073866 6.73637986,13.5 8,13.5 C11.0375661,13.5 13.5,11.0375661 13.5,8 C13.5,6.73637986 13.073866,5.57228864 12.3574649,4.64359326 Z M8,2.5 C4.96243388,2.5 2.5,4.96243388 2.5,8 C2.5,9.26408031 2.92644441,10.4285592 3.64331784,11.3574212 L11.3574212,3.64331784 C10.4285592,2.92644441 9.26408031,2.5 8,2.5 Z\\\" id=\\\"blocked\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/bot-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8,3.5 C9.93299662,3.5 11.5,5.06700338 11.5,7 L11.5,9.5 C11.5,11.1568542 9.93299662,12.5 8,12.5 C6.06700338,12.5 4.5,11.1568542 4.5,9.5 L4.5,7 L4.50517886,6.8079648 C4.60487355,4.9642776 6.1314366,3.5 8,3.5 Z M8,5 C6.9456382,5 6.08183488,5.81587779 6.00548574,6.85073766 L6,7 L6,8 C6,8.82842712 6.8954305,9.5 8,9.5 C9.1045695,9.5 10,8.82842712 10,8 L10,7 C10,5.8954305 9.1045695,5 8,5 Z M3.5,6 C3.77614237,6 4,6.22385763 4,6.5 L4,9.5 C4,9.77614237 3.77614237,10 3.5,10 C3.22385763,10 3,9.77614237 3,9.5 L3,6.5 C3,6.22385763 3.22385763,6 3.5,6 Z M12.5,6 C12.7761424,6 13,6.22385763 13,6.5 L13,9.5 C13,9.77614237 12.7761424,10 12.5,10 C12.2238576,10 12,9.77614237 12,9.5 L12,6.5 C12,6.22385763 12.2238576,6 12.5,6 Z\\\" id=\\\"Bot\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/bot\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8.5,2.9 C8.83137085,2.9 9.1,3.16862915 9.1,3.5 C9.1,3.6775201 9.02290618,3.83703397 8.9003726,3.94688754 L8.899,4.999 L11,5 C11.5522847,5 12,5.44771525 12,6 L12,7 C12.2761424,7 12.5,7.22385763 12.5,7.5 L12.5,8.5 C12.5,8.77614237 12.2761424,9 12,9 L12,11 C12,11.5522847 11.5522847,12 11,12 L5,12 C4.44771525,12 4,11.5522847 4,11 L4,9 C3.72385763,9 3.5,8.77614237 3.5,8.5 L3.5,7.5 C3.5,7.22385763 3.72385763,7 4,7 L4,6 C4,5.44771525 4.44771525,5 5,5 L8.1,4.999 L8.0996274,3.94688754 C7.97709382,3.83703397 7.9,3.6775201 7.9,3.5 C7.9,3.16862915 8.16862915,2.9 8.5,2.9 Z M9.5,10 L6.5,10 C6.22385763,10 6,10.2238576 6,10.5 C6,10.7761424 6.22385763,11 6.5,11 L9.5,11 C9.77614237,11 10,10.7761424 10,10.5 C10,10.2238576 9.77614237,10 9.5,10 Z M6.5,6 C6.22385763,6 6,6.22385763 6,6.5 L6,7 L5.5,7 C5.22385763,7 5,7.22385763 5,7.5 C5,7.77614237 5.22385763,8 5.5,8 L6,8 L6,8.5 C6,8.77614237 6.22385763,9 6.5,9 C6.77614237,9 7,8.77614237 7,8.5 L7,8 L7.5,8 C7.77614237,8 8,7.77614237 8,7.5 C8,7.22385763 7.77614237,7 7.5,7 L7,7 L7,6.5 C7,6.22385763 6.77614237,6 6.5,6 Z M9.5,7 C9.22385763,7 9,7.22385763 9,7.5 C9,7.77614237 9.22385763,8 9.5,8 C9.77614237,8 10,7.77614237 10,7.5 C10,7.22385763 9.77614237,7 9.5,7 Z\\\" id=\\\"bot\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bug\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,12 L10,12 L10,10 L14,10 M14,16 L10,16 L10,14 L14,14 M20,8 L17.19,8 C16.7389578,7.21773668 16.1167554,6.54767256 15.37,6.04 L17,4.41 L15.59,3 L13.42,5.17 C12.4901518,4.94442551 11.5198482,4.94442551 10.59,5.17 L8.41,3 L7,4.41 L8.62,6.04 C7.88,6.55 7.26,7.22 6.81,8 L4,8 L4,10 L6.09,10 C6.04,10.33 6,10.66 6,11 L6,12 L4,12 L4,14 L6,14 L6,15 C6,15.34 6.04,15.67 6.09,16 L4,16 L4,18 L6.81,18 C7.85,19.79 9.78,21 12,21 C14.22,21 16.15,19.79 17.19,18 L20,18 L20,16 L17.91,16 C17.96,15.67 18,15.34 18,15 L18,14 L20,14 L20,12 L18,12 L18,11 C18,10.66 17.96,10.33 17.91,10 L20,10 L20,8 Z\\\" id=\\\"mdi:bug\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/call-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,15.5 C18.8,15.5 17.5,15.3 16.4,14.9 C16.3,14.9 16.2,14.9 16.1,14.9 C15.8,14.9 15.6,15 15.4,15.2 L13.2,17.4 C10.4,15.9 8,13.6 6.6,10.8 L8.8,8.6 C9.1,8.3 9.2,7.9 9,7.6 C8.7,6.5 8.5,5.2 8.5,4 C8.5,3.5 8,3 7.5,3 L4,3 C3.5,3 3,3.5 3,4 C3,13.4 10.6,21 20,21 C20.5,21 21,20.5 21,20 L21,16.5 C21,16 20.5,15.5 20,15.5 L20,15.5 Z M5,5 L6.5,5 C6.6,5.9 6.8,6.8 7,7.6 L5.8,8.8 C5.4,7.6 5.1,6.3 5,5 L5,5 Z M19,19 C17.7,18.9 16.4,18.6 15.2,18.2 L16.4,17 C17.2,17.2 18.1,17.4 19,17.4 L19,19 Z\\\" id=\\\"mdi:phone-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/call\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M6.62,10.79 C8.06,13.62 10.38,15.94 13.21,17.38 L15.41,15.18 C15.69,14.9 16.08,14.82 16.43,14.93 C17.55,15.3 18.75,15.5 20,15.5 C20.5522847,15.5 21,15.9477153 21,16.5 L21,20 C21,20.5522847 20.5522847,21 20,21 C10.6111593,21 3,13.3888407 3,4 C3,3.73478351 3.10535684,3.4804296 3.29289322,3.29289322 C3.4804296,3.10535684 3.73478351,3 4,3 L7.5,3 C8.05228475,3 8.5,3.44771525 8.5,4 C8.5,5.25 8.7,6.45 9.07,7.57 C9.18,7.92 9.1,8.31 8.82,8.59 L6.62,10.79 Z\\\" id=\\\"mdi:phone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/camera-retake\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,5 L17,5 L15,3 L9,3 L7,5 L4,5 C2.8954305,5 2,5.8954305 2,7 L2,19 C2,20.1045695 2.8954305,21 4,21 L20,21 C21.1045695,21 22,20.1045695 22,19 L22,7 C22,5.8954305 21.1045695,5 20,5 M12,18.0000026 C10.92,18.0000026 9.86,17.65 9,17 L10.44,15.56 C10.91,15.85 11.45,16 12,16 C13.6568542,16 15,14.6568542 15,13 C15,11.3431458 13.6568542,10 12,10 C10.74,10 9.6,10.8 9.18,12 L11,12 L8,15 L5,12 L7.1,12 C7.36424064,10.6999079 8.13463224,9.5582575 9.24136868,8.82668596 C10.3481051,8.09511441 11.7003328,7.83367752 13,8.1 C15.5173928,8.61117175 17.2378687,10.9467344 16.9797109,13.5024961 C16.7215532,16.0582577 14.5687655,18.0025816 12,18.0000026 L12,18.0000026 Z\\\" id=\\\"mdi:camera-retake\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/camera\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M4,5 L7,5 L9,3 L15,3 L17,5 L20,5 C21.1045695,5 22,5.8954305 22,7 L22,19 C22,20.1045695 21.1045695,21 20,21 L4,21 C2.8954305,21 2,20.1045695 2,19 L2,7 C2,5.8954305 2.8954305,5 4,5 M12,8 C9.23857625,8 7,10.2385763 7,13 C7,15.7614237 9.23857625,18 12,18 C14.7614237,18 17,15.7614237 17,13 C17,10.2385763 14.7614237,8 12,8 M12,10 C13.6568542,10 15,11.3431458 15,13 C15,14.6568542 13.6568542,16 12,16 C10.3431458,16 9,14.6568542 9,13 C9,11.3431458 10.3431458,10 12,10 Z\\\" id=\\\"mdi:camera\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/cancel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C14.6521649,2 17.195704,3.0535684 19.0710678,4.92893219 C20.9464316,6.80429597 22,9.3478351 22,12 C22,17.5228475 17.5228475,22 12,22 C9.3478351,22 6.80429597,20.9464316 4.92893219,19.0710678 C3.0535684,17.195704 2,14.6521649 2,12 C2,9.3478351 3.0535684,6.80429597 4.92893219,4.92893219 C6.80429597,3.0535684 9.3478351,2 12,2 M12,3.99999926 C7.581722,3.99999926 4,7.581722 4,11.9999993 C4,13.85 4.63,15.55 5.68,16.91 L16.91,5.68 C15.505295,4.59031127 13.7778124,3.99923779 12,3.99999926 M12,20.0000007 C16.418278,20.0000007 20,16.418278 20,12 C20,10.15 19.37,8.45 18.32,7.09 L7.09,18.32 C8.49470497,19.4096887 10.2221876,20.0007622 12,20.0000007 L12,20.0000007 Z\\\" id=\\\"mdi:cancel\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/channel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M6.5,12.5 C6.5,12.7761424 6.27614237,13 6,13 L5,13 C4.72385763,13 4.5,12.7761424 4.5,12.5 L4.5,9.997 L4.02563513,9.99796942 C3.49695533,9.99796942 3.06170233,9.63379568 3.00601829,9.10979782 L3,8.99514074 L3,7 C3,6.44278422 3.50172034,6 4.02563513,6 L8,6 L11,4 L11,12 L8,9.99796942 L6.5,9.997 L6.5,12.5 Z M12,6 C12.7835446,6.37375602 13.2808221,7.14951331 13.2820439,8 C13.2882682,8.85255761 12.7887168,9.63186239 12,10 L12,6 Z\\\" id=\\\"Horn\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chat\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,2 L4,2 C2.8954305,2 2,2.8954305 2,4 L2,22 L6,18 L20,18 C21.1045695,18 22,17.1045695 22,16 L22,4 C22,2.8954305 21.1045695,2 20,2 M6,9 L18,9 L18,11 L6,11 M14,14 L6,14 L6,12 L14,12 M18,8 L6,8 L6,6 L18,6\\\" id=\\\"mdi:message-text\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/check-circle\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C6.5,2 2,6.5 2,12 C2,17.5 6.5,22 12,22 C17.5,22 22,17.5 22,12 C22,6.5 17.5,2 12,2 M10,17 L5,12 L6.41,10.59 L10,14.17 L17.59,6.58 L19,8 L10,17 Z\\\" id=\\\"mdi:check-circle\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/check\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"check\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"21 7 9 19 3.5 13.5 4.91 12.09 9 16.17 19.59 5.59\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chevron-down\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:chevron-down\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"7.41 8.58 12 13.17 16.59 8.58 18 10 12 16 6 10\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chevron-left-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"xabber:chevron-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" transform=\\\"translate(11.5, 12) scale(-1, 1) translate(-11.5, -12)\\\" points=\\\"7 18.5 13.5 12 7 5.5 8.25 4.25 16 12 8.25 19.75\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chevron-right-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"xabber:chevron-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"8 18.5 14.5 12 8 5.5 9.25 4.25 17 12 9.25 19.75\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C13.93,5 15.68,5.78 16.95,7.05 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-1\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-2\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-2\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-3\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,13.93 18.22,15.68 16.95,16.95 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-3\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-4\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 L12,5 Z\\\" id=\\\"mdi:circle-slice-4\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-5\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 C10.07,19 8.32,18.22 7.05,16.95 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-5\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-6\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 C8.13,19 5,15.87 5,12 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-6\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-7\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 C8.13,19 5,15.87 5,12 C5,10.07 5.78,8.32 7.05,7.05 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-7\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-8\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 C8.13,19 5,15.87 5,12 C5,8.13 8.13,5 12,5 M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 Z\\\" id=\\\"mdi:circle-slice-8\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circles-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.61510772,4.31938417 C8.28417501,5.13922603 8.07752033,6.02134442 8.01792471,6.94352205 L7.91776678,6.99321105 C5.73983381,8.11301495 4.25,10.3825228 4.25,13 C4.25,16.7279221 7.27207794,19.75 11,19.75 C13.6571359,19.75 15.9556781,18.2146777 17.0568945,15.9827652 C17.9787775,15.9224511 18.8608306,15.7158021 19.6796219,15.3853225 C18.6352051,19.1981743 15.1448033,22 11,22 C6.02943725,22 2,17.9705627 2,13 C2,8.85508685 4.80197429,5.36460986 8.61510772,4.31938417 Z M16.5,1 C20.0898509,1 23,3.91014913 23,7.5 C23,11.0898509 20.0898509,14 16.5,14 C12.9101491,14 10,11.0898509 10,7.5 C10,3.91014913 12.9101491,1 16.5,1 Z M16.5,3 C14.0147186,3 12,5.01471863 12,7.5 C12,9.98528137 14.0147186,12 16.5,12 C18.9852814,12 21,9.98528137 21,7.5 C21,5.01471863 18.9852814,3 16.5,3 Z\\\" id=\\\"xabber:circles-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circles\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.61467749,4.32037814 C8.21824496,5.30257332 8,6.37579974 8,7.5 C8,12.1944204 11.8055796,16 16.5,16 C17.6242003,16 18.6974267,15.781755 19.6796219,15.3853225 C18.6352051,19.1981743 15.1448033,22 11,22 C6.02943725,22 2,17.9705627 2,13 C2,8.91703774 4.71884223,5.46909511 8.44481526,4.36788353 L8.61467749,4.32037814 Z M16.5,1 C20.0898509,1 23,3.91014913 23,7.5 C23,11.0898509 20.0898509,14 16.5,14 C12.9101491,14 10,11.0898509 10,7.5 C10,3.91014913 12.9101491,1 16.5,1 Z\\\" id=\\\"xabber:circles\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/client-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M23,4.5 C23,6.43 21.43,8 19.5,8 C17.57,8 16,6.43 16,4.5 C16,2.57 17.57,1 19.5,1 C21.43,1 23,2.57 23,4.5 M19.5,10 L19,10 L19,19 L5,19 L5,5 L14.03,5 C14,4.84 14,4.67 14,4.5 C14,4 14.08,3.5 14.21,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.11,21 21,20.11 21,19 L21,9.79 C20.5,9.92 20,10 19.5,10 Z\\\" id=\\\"mdi:checkbox-blank-badge-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/client\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M23,4.5 C23,6.43 21.43,8 19.5,8 C17.57,8 16,6.43 16,4.5 C16,2.57 17.57,1 19.5,1 C21.43,1 23,2.57 23,4.5 M19.5,10 C16.4647165,9.9944963 14.0055037,7.53528349 14,4.5 C14,4 14.08,3.5 14.21,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.11,21 21,20.11 21,19 L21,9.79 C20.5,9.92 20,10 19.5,10 Z\\\" id=\\\"mdi:checkout-blank-badge\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/clock-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 M12,2 C14.6521649,2 17.195704,3.0535684 19.0710678,4.92893219 C20.9464316,6.80429597 22,9.3478351 22,12 C22,17.5228475 17.5228475,22 12,22 C6.47,22 2,17.5 2,12 C2,6.4771525 6.4771525,2 12,2 M12.5,7 L12.5,12.25 L17,14.92 L16.25,16.15 L11,13 L11,7 L12.5,7 Z\\\" id=\\\"mdi:clock-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/close\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:close\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/cloud\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19.35,10.03 C18.67,6.59 15.64,4 12,4 C9.11,4 6.6,5.64 5.35,8.03 C2.34,8.36 0,10.9 0,14 C0,17.3137085 2.6862915,20 6,20 L19,20 C20.3260824,20 21.597852,19.4732158 22.5355339,18.5355339 C23.4732158,17.597852 24,16.3260824 24,15 C24,12.36 21.95,10.22 19.35,10.03 Z\\\" id=\\\"mdi:cloud\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/contact-add\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M15,14 C12.33,14 7,15.33 7,18 L7,20 L23,20 L23,18 C23,15.33 17.67,14 15,14 M6,10 L6,7.5 L4,7.5 L4,10 L1.5,10 L1.5,12 L4,12 L4,14.5 L6,14.5 L6,12 L8.5,12 L8.5,10 M15,12 C17.209139,12 19,10.209139 19,8 C19,5.790861 17.209139,4 15,4 C12.790861,4 11,5.790861 11,8 C11,10.209139 12.790861,12 15,12 Z\\\" id=\\\"xabber:contact-add\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/crosshairs-gps\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,8 C14.209139,8 16,9.790861 16,12 C16,14.209139 14.209139,16 12,16 C9.790861,16 8,14.209139 8,12 C8,9.790861 9.790861,8 12,8 M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\\\" id=\\\"mdi:crosshairs-gps\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/crosshairs-question\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13,5 5,8.13 5,12 C5,15.87 8.13,19 12,19 C15.87,19 19,15.87 19,12 C19,8.13 15.87,5 12,5 M11.13,17.25 L12.88,17.25 L12.88,15.5 L11.13,15.5 L11.13,17.25 M12,6.75 C10.07,6.75 8.5,8.32 8.5,10.25 L10.25,10.25 C10.25,9.28 11.03,8.5 12,8.5 C12.97,8.5 13.75,9.28 13.75,10.25 C13.75,12 11.13,11.78 11.13,14.63 L12.88,14.63 C12.88,12.66 15.5,12.44 15.5,10.25 C15.5,8.32 13.93,6.75 12,6.75 Z\\\" id=\\\"mdi:crosshairs-question\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/crosshairs\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\\\" id=\\\"mdi:crosshairs\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/database-lock\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,3 C15.42,3 19,4.79 19,7 C19,9.21 15.42,11 11,11 C6.58,11 3,9.21 3,7 C3,4.79 6.58,3 11,3 M19,12.03 C17.11,12.24 15.57,13.62 15.13,15.43 C13.92,15.79 12.5,16 11,16 C6.58,16 3,14.21 3,12 L3,9 C3,11.21 6.58,13 11,13 C15.42,13 19,11.21 19,9 L19,12.03 M14,17.71 L14,20.71 C13.07,20.9 12.06,21 11,21 C6.58,21 3,19.21 3,17 L3,14 C3,16.21 6.58,18 11,18 C12.06,18 13.07,17.9 14,17.71 M19.5,14 C20.8807119,14 22,15.1192881 22,16.5 L22,17 C22.5522847,17 23,17.4477153 23,18 L23,22 C23,22.5522847 22.5522847,23 22,23 L17,23 C16.4477153,23 16,22.5522847 16,22 L16,18 C16,17.4477153 16.4477153,17 17,17 L17,16.5 C17,15.1192881 18.1192881,14 19.5,14 M19.5,15 C18.6715729,15 18,15.6715729 18,16.5 L18,17 L21,17 L21,16.5 C21,15.6715729 20.3284271,15 19.5,15 Z\\\" id=\\\"mdi:database-lock\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/database\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 C7.58,3 4,4.79 4,7 C4,9.21 7.58,11 12,11 C16.42,11 20,9.21 20,7 C20,4.79 16.42,3 12,3 M4,9 L4,12 C4,14.21 7.58,16 12,16 C16.42,16 20,14.21 20,12 L20,9 C20,11.21 16.42,13 12,13 C7.58,13 4,11.21 4,9 M4,14 L4,17 C4,19.21 7.58,21 12,21 C16.42,21 20,19.21 20,17 L20,14 C20,16.21 16.42,18 12,18 C7.58,18 4,16.21 4,14 Z\\\" id=\\\"mdi:database\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/description-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.11 3.89,21 5,21 L19,21 C20.11,21 21,20.11 21,19 L21,5 C21,3.89 20.11,3 19,3 L5,3 M5,5 L19,5 L19,19 L5,19 L5,5 M7,7 L7,9 L17,9 L17,7 L7,7 M7,11 L7,13 L17,13 L17,11 L7,11 M7,15 L7,17 L14,17 L14,15 L7,15 Z\\\" id=\\\"mdi:text-box-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/description\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,17 L7,17 L7,15 L14,15 M17,13 L7,13 L7,11 L17,11 M17,9 L7,9 L7,7 L17,7 M19,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 Z\\\" id=\\\"mdi:text-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-cellphone\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,20 L7,20 L7,4 L17,4 M17,1 L7,1 C5.89,1 5,1.89 5,3 L5,21 C5,22.1045695 5.8954305,23 7,23 L17,23 C18.1045695,23 19,22.1045695 19,21 L19,3 C19,1.8954305 18.1045695,1 17,1 Z\\\" id=\\\"xabber:cellphone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-console\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,2 C22.0543618,2 22.9181651,2.81587779 22.9945143,3.85073766 L23,4 L23,16 C23,17.0543618 22.1841222,17.9181651 21.1492623,17.9945143 L21,18 L14,18 L14,20 L16,20 L16,22 L8,22 L8,20 L10,20 L10,18 L3,18 C1.9456382,18 1.08183488,17.1841222 1.00548574,16.1492623 L1,16 L1,4 C1,2.94045455 1.81092975,2.08136364 2.85006292,2.00545361 L3,2 L21,2 Z M21,4 L3,4 L3,16 L21,16 L21,4 Z M18,12 L18,14 L13,14 L13,12 L18,12 Z M8.4,6 L11.7,9.3 C12.09,9.69 12.09,10.33 11.7,10.72 L8.42,14 L5.59,14 L9.58,10 L5.57,6 L8.4,6 Z\\\" id=\\\"xabber.monitor-console\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-desktop\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,16 L3,16 L3,4 L21,4 M21,2 L3,2 C1.89,2 1,2.89 1,4 L1,16 C1,17.1045695 1.8954305,18 3,18 L10,18 L10,20 L8,20 L8,22 L16,22 L16,20 L14,20 L14,18 L21,18 C22.1045695,18 23,17.1045695 23,16 L23,4 C23,2.8954305 22.1045695,2 21,2 Z\\\" id=\\\"mdi:monitor\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-tablet\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,18 L4,18 L4,6 L20,6 M21,4 L3,4 C1.89,4 1,4.89 1,6 L1,18 C1,19.1045695 1.8954305,20 3,20 L21,20 C22.1045695,20 23,19.1045695 23,18 L23,6 C23,4.8954305 22.1045695,4 21,4 Z\\\" id=\\\"xabber:tablet\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-web\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,2 C22.0543618,2 22.9181651,2.81587779 22.9945143,3.85073766 L23,4 L23,16 C23,17.0543618 22.1841222,17.9181651 21.1492623,17.9945143 L21,18 L14,18 L14,20 L16,20 L16,22 L8,22 L8,20 L10,20 L10,18 L3,18 C1.9456382,18 1.08183488,17.1841222 1.00548574,16.1492623 L1,16 L1,4 C1,2.94045455 1.81092975,2.08136364 2.85006292,2.00545361 L3,2 L21,2 Z M21,4 L3,4 L3,16 L21,16 L21,4 Z M9.59,6.41 L10.5,7.5 L8,10 L10.5,12.5 L9.59,13.5 L6,10 L9.59,6.41 Z M14.5,6.50152764 L18,10 L14.5,13.5 L13.5,12.5 L16,10 L13.5,7.5 L14.5,6.50152764 Z\\\" id=\\\"xabber.monitor-tag\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/devices\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M23,11 L18,11 C17.4477153,11 17,11.4477153 17,12 L17,21 C17,21.5522847 17.4477153,22 18,22 L23,22 C23.5522847,22 24,21.5522847 24,21 L24,12 C24,11.4477153 23.5522847,11 23,11 M23,20 L18,20 L18,13 L23,13 L23,20 M20,2 L2,2 C0.89,2 0,2.89 0,4 L0,16 C0,17.1045695 0.8954305,18 2,18 L9,18 L9,20 L7,20 L7,22 L15,22 L15,20 L13,20 L13,18 L15,18 L15,16 L2,16 L2,4 L20,4 L20,9 L22,9 L22,4 C22,2.8954305 21.1045695,2 20,2 Z\\\" id=\\\"mdi:monitor-cellphone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/edit-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14.06,9 L15,9.94 L5.92,19 L5,19 L5,18.08 L14.06,9 M17.66,3 C17.41,3 17.15,3.1 16.96,3.29 L15.13,5.12 L18.88,8.87 L20.71,7.04 C21.1,6.65 21.1,6 20.71,5.63 L18.37,3.29 C18.17,3.09 17.92,3 17.66,3 M14.06,6.19 L3,17.25 L3,21 L6.75,21 L17.81,9.94 L14.06,6.19 Z\\\" id=\\\"mdi:pencil-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/edit\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20.71,7.04 C21.1,6.65 21.1,6 20.71,5.63 L18.37,3.29 C18,2.9 17.35,2.9 16.96,3.29 L15.12,5.12 L18.87,8.87 M3,17.25 L3,21 L6.75,21 L17.81,9.93 L14.06,6.18 L3,17.25 Z\\\" id=\\\"mdi:pencil\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/email-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M22,6 C22,4.9 21.1,4 20,4 L4,4 C2.9,4 2,4.9 2,6 L2,18 C2,19.1 2.9,20 4,20 L20,20 C21.1,20 22,19.1 22,18 L22,6 M20,6 L12,11 L4,6 L20,6 M20,18 L4,18 L4,8 L12,13 L20,8 L20,18 Z\\\" id=\\\"mdi:email-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/email\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,8 L12,13 L4,8 L4,6 L12,11 L20,6 M20,4 L4,4 C2.89,4 2,4.89 2,6 L2,18 C2,19.1045695 2.8954305,20 4,20 L20,20 C21.1045695,20 22,19.1045695 22,18 L22,6 C22,4.89 21.1,4 20,4 Z\\\" id=\\\"mdi:email\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/expires\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19.03,7.39 L20.45,5.97 C20.0000001,5.46 19.55,5 19.04,4.56 L17.62,6 C16.07,4.74 14.12,4 12.0000001,4 C7.0294373,4 3.00000013,8.0294373 3.00000013,13 C3.00000013,17.9705627 7.0294373,22 12.0000001,22 C17.0000001,22 21.0000001,17.97 21.0000001,13 C21.0000001,10.88 20.26,8.93 19.03,7.39 M13,14 L11,14 L11,7 L13,7 L13,14 M15,1 L9,1 L9,3 L15,3 L15,1 Z\\\" id=\\\"mdi:timer\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-audio\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 L12,13.55 C11.41,13.21 10.73,13 10,13 C7.79,13 6,14.79 6,17 C6,19.21 7.79,21 10,21 C12.21,21 14,19.21 14,17 L14,7 L18,7 L18,3 L12,3 Z\\\" id=\\\"mdi:music-note\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-document\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L18.5,9 L13,3.5 L13,9 M6,2 L14,2 L20,8 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,4 C4,2.89 4.89,2 6,2 M15,18 L15,16 L6,16 L6,18 L15,18 M18,14 L18,12 L6,12 L6,14 L18,14 Z\\\" id=\\\"mdi:file-document\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-pdf\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,3 C20.1045695,3 21,3.8954305 21,5 L21,19 C21,20.1045695 20.1045695,21 19,21 L5,21 C3.89,21 3,20.1 3,19 L3,5 C3,3.89 3.89,3 5,3 L19,3 M10.59,10.08 C10.57,10.13 10.3,11.84 8.5,14.77 C8.5,14.77 5,16.58 5.83,17.94 C6.5,19 8.15,17.9 9.56,15.27 C9.56,15.27 11.38,14.63 13.79,14.45 C13.79,14.45 17.65,16.19 18.17,14.34 C18.69,12.5 15.12,12.9 14.5,13.09 C14.5,13.09 12.46,11.75 12,9.89 C12,9.89 13.13,5.95 11.38,6 C9.63,6.05 10.29,9.12 10.59,10.08 M11.4,11.13 C11.43,11.13 11.87,12.33 13.29,13.58 C13.29,13.58 10.96,14.04 9.9,14.5 C9.9,14.5 10.9,12.75 11.4,11.13 M15.32,13.84 C15.9,13.69 17.64,14 17.58,14.32 C17.5,14.65 15.32,13.84 15.32,13.84 M8.26,15.7 C7.73,16.91 6.83,17.68 6.6,17.67 C6.37,17.66 7.3,16.07 8.26,15.7 M11.4,8.76 C11.39,8.71 11.03,6.57 11.4,6.61 C11.94,6.67 11.4,8.71 11.4,8.76 Z\\\" id=\\\"mdi:file-pdf-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-presentation\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,2 L13,2 L13,3 L19,3 C20.1045695,3 21,3.8954305 21,5 L21,16 C21,17.1045695 20.1045695,18 19,18 L13,18 L13,21 L17,21 L17,23 L7,23 L7,21 L11,21 L11,18 L5,18 C3.8954305,18 3,17.1045695 3,16 L3,5 C3,3.8954305 3.8954305,3 5,3 L11,3 L11,2 Z M19,5 L5,5 L5,16 L19,16 L19,5 Z M9,9 L9,14 L7,14 L7,9 L9,9 Z M13,7 L13,14 L11,14 L11,7 L13,7 Z M17,11 L17,14 L15,14 L15,11 L17,11 Z\\\" id=\\\"xabber:presentation\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-video\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18,9 L16,9 L16,7 L18,7 M18,13 L16,13 L16,11 L18,11 M18,17 L16,17 L16,15 L18,15 M8,9 L6,9 L6,7 L8,7 M8,13 L6,13 L6,11 L8,11 M8,17 L6,17 L6,15 L8,15 M18,3 L18,5 L16,5 L16,3 L8,3 L8,5 L6,5 L6,3 L4,3 L4,21 L6,21 L6,19 L8,19 L8,21 L16,21 L16,19 L18,19 L18,21 L20,21 L20,3 L18,3 Z\\\" id=\\\"mdi:filmstrip\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-zip\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,17 L12,17 L12,15 L10,15 L10,13 L12,13 L12,15 L14,15 M14,9 L12,9 L12,11 L14,11 L14,13 L12,13 L12,11 L10,11 L10,9 L12,9 L12,7 L10,7 L10,5 L12,5 L12,7 L14,7 M19,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 Z\\\" id=\\\"mdi:zip-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L13,3.5 L18.5,9 M6,2 C4.89,2 4,2.89 4,4 L4,20 C4,21.1045695 4.8954305,22 6,22 L18,22 C19.1045695,22 20,21.1045695 20,20 L20,8 L14,2 L6,2 Z\\\" id=\\\"mdi:file\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/fullname-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8,9 C9.1045695,9 10,9.8954305 10,11 C10,12.1045695 9.1045695,13 8,13 C6.8954305,13 6,12.1045695 6,11 C6,9.8954305 6.8954305,9 8,9 M12,17 L4,17 L4,16 C4,14.67 6.67,14 8,14 C9.33,14 12,14.67 12,16 L12,17 M20,8 L14,8 L14,10 L20,10 L20,8 M20,12 L14,12 L14,14 L20,14 L20,12 M20,16 L14,16 L14,18 L20,18 L20,16 M22,4 L14,4 L14,6 L22,6 L22,20 L2,20 L2,6 L10,6 L10,4 L2,4 C0.8954305,4 0,4.8954305 0,6 L0,20 C0,21.1045695 0.8954305,22 2,22 L22,22 C23.1045695,22 24,21.1045695 24,20 L24,6 C24,4.8954305 23.1045695,4 22,4 M13,6 L11,6 L11,2 L13,2 L13,6 Z\\\" id=\\\"mdi:badge-account-horizontal-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/fullname\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M22,4 L14,4 L14,7 L10,7 L10,4 L2,4 C0.8954305,4 0,4.8954305 0,6 L0,20 C0,21.1045695 0.8954305,22 2,22 L22,22 C23.1045695,22 24,21.1045695 24,20 L24,6 C24,4.8954305 23.1045695,4 22,4 M8,9 C9.1045695,9 10,9.8954305 10,11 C10,12.1045695 9.1045695,13 8,13 C6.8954305,13 6,12.1045695 6,11 C6,9.8954305 6.8954305,9 8,9 M12,17 L4,17 L4,16 C4,14.67 6.67,14 8,14 C9.33,14 12,14.67 12,16 L12,17 M20,18 L14,18 L14,16 L20,16 L20,18 M20,14 L14,14 L14,12 L20,12 L20,14 M20,10 L14,10 L14,8 L20,8 L20,10 M13,6 L11,6 L11,2 L13,2 L13,6 Z\\\" id=\\\"mdi:badge-account-horizontal\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-incognito\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10,8.00704958 C10.9597902,8.00704958 12.8474987,8.64533875 12.9912872,9.91524601 L13,10.0706662 L13,11.0070496 L10.7492023,11.0070496 L10.75,9.875 C10.75,9.10242267 10.3751421,8.46914598 9.75414509,8.01828756 L9.88054216,8.01011295 L10,8.00704958 Z M7,8 C8.71428571,8 10,8.75 10,9.875 L10,11 L4,11 L4,9.875 C4,8.75 5.28571429,8 7,8 Z M7,8.75 C5.68529006,8.75 4.83790401,9.22876096 4.75645218,9.78636102 L4.75,9.875 L4.75,10.25 L9.25,10.25 L9.25,9.875 C9.25,9.31020891 8.46834945,8.80320839 7.20365867,8.75392032 L7,8.75 Z M10.5,4 C11.3284271,4 12,4.67157288 12,5.5 C12,6.32842712 11.3284271,7 10.5,7 C10.0309641,7 9.61220865,6.78472342 9.33715065,6.44758714 C9.59948544,6.02690214 9.75,5.53102835 9.75,5 C9.75,4.7455993 9.71545544,4.49926692 9.65080116,4.2654377 C9.89064982,4.09777196 10.183907,4 10.5,4 Z M7,3 C8.1045695,3 9,3.8954305 9,5 C9,6.1045695 8.1045695,7 7,7 C5.8954305,7 5,6.1045695 5,5 C5,3.8954305 5.8954305,3 7,3 Z M7,3.75 C6.30964406,3.75 5.75,4.30964406 5.75,5 C5.75,5.69035594 6.30964406,6.25 7,6.25 C7.69035594,6.25 8.25,5.69035594 8.25,5 C8.25,4.30964406 7.69035594,3.75 7,3.75 Z\\\" id=\\\"incognito\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-invite\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M4.8,5 L11.2,5 C11.64,5 12,5.33981818 12,5.76363636 L12,10.2363636 C12,10.6581084 11.6418278,11 11.2,11 L4.8,11 C4.3581722,11 4,10.6581084 4,10.2363636 L4,5.76363636 C4,5.33981818 4.356,5 4.8,5 Z M4.57142857,5.81818182 L4.57142857,6.90909091 L8,9.09090909 L11.4285714,6.90909091 L11.4285714,5.81818182 L8,8 L4.57142857,5.81818182 Z\\\" id=\\\"invitation\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-private\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M5.54386908,9.00001406 C4.74833179,9.00015914 4.03626356,9.50273575 3.75677818,10.2613541 C3.4772928,11.0199725 3.68898239,11.8755937 4.28805949,12.4087226 C4.88713659,12.9418515 5.74800895,13.0407214 6.44860686,12.6568582 C7.14920477,12.272995 7.54265288,11.4868729 7.43605089,10.683913 C7.61005089,10.6450242 7.79823271,10.6139132 7.99841453,10.6144687 C8.19859635,10.6155798 8.38677817,10.6450242 8.56077817,10.683913 C8.45417618,11.4868729 8.84762429,12.272995 9.5482222,12.6568582 C10.2488201,13.0407214 11.1096925,12.9418515 11.7087696,12.4087226 C12.3078467,11.8755937 12.5195363,11.0199725 12.2400509,10.2613541 C11.9605655,9.50273575 11.2484973,9.00015914 10.45296,9.00001406 C9.6733377,8.99699984 8.97079939,9.47872777 8.68023271,10.2155808 C8.45968538,10.1448214 8.22964016,10.109582 7.99841453,10.1111366 C7.69841453,10.1111366 7.49059635,10.1616921 7.31659635,10.2155808 C7.02602967,9.47872777 6.32349136,8.99699984 5.54386908,9.00001406 L5.54386908,9.00001406 Z M5.54386908,9.55558244 C6.29698464,9.55558244 6.90750544,10.1774076 6.90750544,10.9444679 C6.90750544,11.7115282 6.29698464,12.3333534 5.54386908,12.3333534 C4.79075351,12.3333534 4.18023271,11.7115282 4.18023271,10.9444679 C4.18023271,10.1774076 4.79075351,9.55558244 5.54386908,9.55558244 Z M10.45296,9.55558244 C11.2060756,9.55558244 11.8165963,10.1774076 11.8165963,10.9444679 C11.8165963,11.7115282 11.2060756,12.3333534 10.45296,12.3333534 C9.69984442,12.3333534 9.08932362,11.7115282 9.08932362,10.9444679 C9.08932362,10.1774076 9.69984442,9.55558244 10.45296,9.55558244 Z M8,7 C6.512,7 4.39345455,7.268 4.25,7.297 C3.78243762,7.41026088 3.32163107,7.54577794 2.86945455,7.703 C2.31418182,7.877 2,8 2,8 L14,8 C14,8 13.6858182,7.877 13.1305455,7.703 C12.6727414,7.54549536 12.2062901,7.40997808 11.7330909,7.297 C11.7330909,7.297 9.54036364,7 8,7 Z M8,3 C6.53163636,3.0015 5.49418182,3.6095 5.49418182,3.6095 L4.72727273,6 L11.2727273,6 L10.5058182,3.6095 C10.5058182,3.6095 9.46836364,3.001 8,3 Z\\\" id=\\\"private\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-public\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10.500501,8 C11.3287776,8 11.995,7.328 11.995,6.5 C11.995,5.672 11.3287776,5 10.500501,5 C9.67222445,5 9,5.672 9,6.5 C9,7.328 9.67222445,8 10.500501,8 Z M6.5,7 C7.33,7 7.995,6.33 7.995,5.5 C7.995,4.67 7.33,4 6.5,4 C5.67,4 5,4.67 5,5.5 C5,6.33 5.67,7 6.5,7 Z M10.5,9 C9.66818182,9 8,9.46 8,10.375 L8,10.9989178 L13,10.9989178 L13,10.375 C13,9.46 11.3318182,9 10.5,9 Z M6.50474946,7.99186821 C4.77490105,7.99186821 3,8.585 3,9.75 L3,11 L7,11 L7,10 C7,9.24841871 7.73828683,8.72461975 8.70884076,8.35916117 C8.08932051,8.04219075 6.85693708,7.99186821 6.50474946,7.99186821 Z\\\" id=\\\"xabber:group-public\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/history\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.5,8 L12,8 L12,13 L16.28,15.54 L17,14.33 L13.5,12.25 L13.5,8 M13,3 C8.02943725,3 4,7.02943725 4,12 L1,12 L4.96,16.03 L9,12 L6,12 C6,8.13400675 9.13400675,5 13,5 C16.8659932,5 20,8.13400675 20,12 C20,15.8659932 16.8659932,19 13,19 C11.07,19 9.32,18.21 8.06,16.94 L6.64,18.36 C8.31963558,20.0581063 10.6115589,21.0094707 13,21.00007 C17.9705627,21.00007 22,16.9705627 22,12 C22,7.02943725 17.9705627,3 13,3\\\" id=\\\"mdi:history\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<path fill=\\\"#9E9E9E\\\" d=\\\"M12,15C12.81,15 13.5,14.7 14.11,14.11C14.7,13.5 15,12.81 15,12C15,11.19 14.7,10.5 14.11,9.89C13.5,9.3 12.81,9 12,9C11.19,9 10.5,9.3 9.89,9.89C9.3,10.5 9,11.19 9,12C9,12.81 9.3,13.5 9.89,14.11C10.5,14.7 11.19,15 12,15M12,2C14.75,2 17.1,3 19.05,4.95C21,6.9 22,9.25 22,12V13.45C22,14.45 21.65,15.3 21,16C20.3,16.67 19.5,17 18.5,17C17.3,17 16.31,16.5 15.56,15.5C14.56,16.5 13.38,17 12,17C10.63,17 9.45,16.5 8.46,15.54C7.5,14.55 7,13.38 7,12C7,10.63 7.5,9.45 8.46,8.46C9.45,7.5 10.63,7 12,7C13.38,7 14.55,7.5 15.54,8.46C16.5,9.45 17,10.63 17,12V13.45C17,13.86 17.16,14.22 17.46,14.53C17.76,14.84 18.11,15 18.5,15C18.92,15 19.27,14.84 19.57,14.53C19.87,14.22 20,13.86 20,13.45V12C20,9.81 19.23,7.93 17.65,6.35C16.07,4.77 14.19,4 12,4C9.81,4 7.93,4.77 6.35,6.35C4.77,7.93 4,9.81 4,12C4,14.19 4.77,16.07 6.35,17.65C7.93,19.23 9.81,20 12,20H17V22H12C9.25,22 6.9,21 4.95,19.05C3,17.1 2,14.75 2,12C2,9.25 3,6.9 4.95,4.95C6.9,3 9.25,2 12,2Z\\\" />\";","export default \"<path\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path5\\\"\\n     d=\\\"m 5.2462478,6.4309194 c 0,0 0.2534497,0.5323027 1.6195791,-0.2126538 C 9.2126105,5.0708821 11.67437,4.0095 14.785441,5.5382202 17.009904,6.7924 17.27733,10.360371 13.864368,13.369134 c -1.679464,1.609494 -1.887868,4.226006 -1.825254,4.993295 -0.128246,1.561168 0.259655,1.837265 0.594912,1.938246 0.335257,0.100981 1.461445,-0.04379 1.305934,-1.000087 -0.193265,-1.461227 -0.06192,-2.413209 0.855267,-4.044829 0.758763,-1.162942 2.123721,-1.871086 3.273016,-4.211889 C 18.840748,9.1444158 18.891207,6.503336 17.479328,4.894053 16.152845,3.3821059 14.670099,2.4131656 12.422552,2.4210559 9.8716741,2.446853 8.13424,2.8374168 6.751418,3.5206351 4.5012489,4.730324 4.2973099,4.8714754 5.2462478,6.4309194 z\\\"\\n     clip-rule=\\\"evenodd\\\"\\n     sodipodi:nodetypes=\\\"cccccscccsccc\\\" />\\n<path\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path7\\\"\\n     d=\\\"M 10.393116,10.546893 C 10.179036,9.8582024 9.6418168,9.5037588 9.1268128,9.5037588 c -0.686671,0 -1.6386388,0.1373222 -1.6546508,1.5832442 0,0 0.5308711,2.944458 1.5235151,2.93234 0.364542,-0.004 0.7403587,-0.28287 0.017892,-1.856769 0,0 -0.4395592,-0.974022 -0.1380497,-1.193301 0.5440269,-0.394487 0.5911749,0.418754 0.9156116,1.069105 0.674692,0.328471 1.06244,-0.702948 1.201092,-0.722298 1.026124,-0.142524 -0.130551,1.372622 -0.2386,1.539241 -0.467844,0.515308 -1.3020963,1.251877 -0.614252,1.612091 0.864686,0.205725 1.292561,-0.492065 1.464229,-0.658684 0.2663,-0.37565 0.549622,-0.820112 0.721289,-1.133153 0.877971,-1.468145 0.834305,-2.8722146 -0.558429,-2.9011876 -0.515004,0 -0.814918,0.2302366 -1.373344,0.7725056 z\\\"\\n     clip-rule=\\\"evenodd\\\"\\n     sodipodi:nodetypes=\\\"cscccccccccccc\\\" />\\n<path\\n     sodipodi:nodetypes=\\\"cssccsccccssccssc\\\"\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path9\\\"\\n     d=\\\"m 6.8360046,14.735541 c -0.2526865,-0.134842 -0.341246,-0.148685 -0.556785,-0.125105 -0.4758127,0.05205 -0.712045,0.475393 -0.6165306,0.901178 0.2727696,1.215955 1.0359093,1.641989 2.25985,2.132257 1.2530682,0.41756 2.475738,0.396638 3.398493,-0.0757 0.298412,-0.05064 0.287556,-0.683612 0.292618,-1.034981 0.006,-0.414484 -0.327129,-0.528727 -0.651454,-0.493243 -0.82369,0.222079 -0.891361,0.338578 -1.882259,0.248554 -1.1996954,-0.369888 -1.6284239,-0.589257 -2.2439324,-1.55296 z m -0.596727,2.884244 c -0.1641271,-0.121 -0.2921232,-0.08347 -0.442594,-0.06701 -0.3893935,0.0426 -0.727761,0.382603 -0.6463412,0.81143 0.2795655,1.472433 3.2776659,2.179707 4.6014193,2.113323 1.0831623,-0.05044 1.6865703,-0.273231 1.7646093,-1.16247 -0.03364,-0.366114 -0.266964,-0.659232 -0.720411,-0.609623 -0.432095,0.04727 -0.373883,0.118182 -1.0438868,0.191485 C 8.563559,19.026954 7.5842504,18.723225 6.2392776,17.619785 z\\\"\\n     clip-rule=\\\"evenodd\\\" />\\n\";","export default \"<path fill=\\\"#9E9E9E\\\" d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\" />\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/id-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C15.8659932,2 19,5.13400675 19,9 C19,11.38 17.81,13.47 16,14.74 L16,17 C16,17.5522847 15.5522847,18 15,18 L9,18 C8.44771525,18 8,17.5522847 8,17 L8,14.74 C6.19,13.47 5,11.38 5,9 C5,5.13400675 8.13400675,2 12,2 M9,21 L9,20 L15,20 L15,21 C15,21.5522847 14.5522847,22 14,22 L10,22 C9.44771525,22 9,21.5522847 9,21 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,11.05 8.23,12.81 10,13.58 L10,16 L14,16 L14,13.58 C15.77,12.81 17,11.05 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:lightbulb-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/id\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C8.13400675,2 5,5.13400675 5,9 C5,11.38 6.19,13.47 8,14.74 L8,17 C8,17.5522847 8.44771525,18 9,18 L15,18 C15.5522847,18 16,17.5522847 16,17 L16,14.74 C17.81,13.47 19,11.38 19,9 C19,5.13400675 15.8659932,2 12,2 M9,21 C9,21.5522847 9.44771525,22 10,22 L14,22 C14.5522847,22 15,21.5522847 15,21 L15,20 L9,20 L9,21 Z\\\" id=\\\"mdi:lightbulb\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/image\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.5,13.5 L11,16.5 L14.5,12 L19,18 L5,18 M21,19 L21,5 C21,3.89 20.1,3 19,3 L5,3 C3.8954305,3 3,3.8954305 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 Z\\\" id=\\\"mdi:image\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/index\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C7.581722,2 4,5.581722 4,10 C4,14.03 7,17.42 11,17.93 L11,19 L10,19 C9.44771525,19 9,19.4477153 9,20 L2,20 L2,22 L9,22 C9,22.5522847 9.44771525,23 10,23 L14,23 C14.5522847,23 15,22.5522847 15,22 L22,22 L22,20 L15,20 C15,19.4477153 14.5522847,19 14,19 L13,19 L13,17.93 C17,17.43 20,14.03 20,10 C20,5.581722 16.418278,2 12,2 M12,4 C12,4 12.74,5.28 13.26,7 L10.74,7 C11.26,5.28 12,4 12,4 M9.77,4.43 C9.5,4.93 9.09,5.84 8.74,7 L6.81,7 C7.5,5.84 8.5,4.93 9.77,4.43 M14.23,4.44 C15.5,4.94 16.5,5.84 17.19,7 L15.26,7 C14.91,5.84 14.5,4.93 14.23,4.44 M6.09,9 L8.32,9 C8.28,9.33 8.25,9.66 8.25,10 C8.25,10.34 8.28,10.67 8.32,11 L6.09,11 C5.96891098,10.3388318 5.96891098,9.66116821 6.09,9 M10.32,9 L13.68,9 C13.72,9.33 13.75,9.66 13.75,10 C13.75,10.34 13.72,10.67 13.68,11 L10.32,11 C10.28,10.67 10.25,10.34 10.25,10 C10.25,9.66 10.28,9.33 10.32,9 M15.68,9 L17.91,9 C18.031089,9.66116821 18.031089,10.3388318 17.91,11 L15.68,11 C15.72,10.67 15.75,10.34 15.75,10 C15.75,9.66 15.72,9.33 15.68,9 M6.81,13 L8.74,13 C9.09,14.16 9.5,15.07 9.77,15.56 C8.5,15.06 7.5,14.16 6.81,13 M10.74,13 L13.26,13 C12.74,14.72 12,16 12,16 C12,16 11.26,14.72 10.74,13 M15.26,13 L17.19,13 C16.5,14.16 15.5,15.07 14.23,15.57 C14.5,15.07 14.91,14.16 15.26,13 Z\\\" id=\\\"mdi:wan\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/information-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,9 L13,9 L13,7 L11,7 M12,20 C7.59,20 4,16.41 4,12 C4,7.59 7.59,4 12,4 C16.41,4 20,7.59 20,12 C20,16.41 16.41,20 12,20 M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 M11,17 L13,17 L13,11 L11,11 L11,17 Z\\\" id=\\\"mdi:information-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/information\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L11,9 L11,7 L13,7 M13,17 L11,17 L11,11 L13,11 M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 Z\\\" id=\\\"mdi:information\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/invite-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 L15.77,4.36 L19,4.36 L19,6.36 L21.03,7.65 C21.5653846,7.97307692 21.9388757,8.53473373 21.993168,9.19339554 L22,9.36 L22,19.36 C22,20.4195455 21.1890702,21.2786364 20.1499371,21.3545464 L20,21.36 L4,21.36 C2.9456382,21.36 2.08183488,20.5441222 2.00548574,19.5092623 L2,19.36 L2,9.36 C2,8.68615385 2.33230769,8.09751479 2.83961766,7.73565772 L5,6.36 L5,4.36 L8.23,4.36 L12,2 Z M20,11.36 L12,16.36 L4,11.36 L4,19.36 L20,19.36 L20,11.36 Z M17,6.36 L7,6.36 L7,11.24 L12,14.36 L17,11.24 L17,6.36 Z M16,9.86 L16,11.36 L8,11.36 L8,9.86 L16,9.86 Z M19,8.74 L19,9.99 L20,9.36 L19,8.74 Z M5,8.74 L4,9.36 L5,9.99 L5,8.74 Z M16,7.36 L16,8.86 L8,8.86 L8,7.36 L16,7.36 Z\\\" id=\\\"xabber:invite-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/invite\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,0.64 L8.23,3 L5,3 L5,5 L2.97,6.29 C2.39,6.64 2,7.27 2,8 L2,18 C2,19.1045695 2.8954305,20 4,20 L20,20 C21.11,20 22,19.11 22,18 L22,8 C22,7.27 21.61,6.64 21.03,6.29 L19,5 L19,3 L15.77,3 M7,5 L17,5 L17,9.88 L12,13 L7,9.88 M8,6 L8,7.5 L16,7.5 L16,6 M5,7.38 L5,8.63 L4,8 M19,7.38 L20,8 L19,8.63 M8,8.5 L8,10 L16,10 L16,8.5 L8,8.5 Z\\\" id=\\\"mdi:email-newsletter\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/job-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,6 C20.58,6 21.05,6.2 21.42,6.59 C21.8,7 22,7.45 22,8 L22,19 C22,19.55 21.8,20 21.42,20.41 C21.05,20.8 20.58,21 20,21 L4,21 C3.42,21 2.95,20.8 2.58,20.41 C2.2,20 2,19.55 2,19 L2,8 C2,7.45 2.2,7 2.58,6.59 C2.95,6.2 3.42,6 4,6 L8,6 L8,4 C8,3.42 8.2,2.95 8.58,2.58 C8.95,2.2 9.42,2 10,2 L14,2 C14.58,2 15.05,2.2 15.42,2.58 C15.8,2.95 16,3.42 16,4 L16,6 L20,6 M4,8 L4,19 L20,19 L20,8 L4,8 M14,6 L14,4 L10,4 L10,6 L14,6 Z\\\" id=\\\"mdi:briefcase-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/job\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,2 L14,2 C15.1045695,2 16,2.8954305 16,4 L16,6 L20,6 C21.1045695,6 22,6.8954305 22,8 L22,19 C22,20.1045695 21.1045695,21 20,21 L4,21 C2.89,21 2,20.1 2,19 L2,8 C2,6.89 2.89,6 4,6 L8,6 L8,4 C8,2.89 8.89,2 10,2 M14,6 L14,4 L10,4 L10,6 L14,6 Z\\\" id=\\\"mdi:briefcase\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/key-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M7,14 C5.8954305,14 5,13.1045695 5,12 C5,10.8954305 5.8954305,10 7,10 C8.1045695,10 9,10.8954305 9,12 C9,13.1045695 8.1045695,14 7,14 M12.65,10 C11.8057828,7.60319579 9.54113618,6 7,6 C3.6862915,6 1,8.6862915 1,12 C1,15.3137085 3.6862915,18 7,18 C9.54113618,18 11.8057828,16.3968042 12.65,14 L15,14 L15,18 L18,18 L18,14 L19,14 L19,18 L22,18 L22,14 L23,14 L23,10 L12.65,10 Z\\\" id=\\\"xabber:key-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/key\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M7,14 C5.8954305,14 5,13.1045695 5,12 C5,10.8954305 5.8954305,10 7,10 C8.1045695,10 9,10.8954305 9,12 C9,13.1045695 8.1045695,14 7,14 M12.65,10 C11.8057828,7.60319579 9.54113618,6 7,6 C3.6862915,6 1,8.6862915 1,12 C1,15.3137085 3.6862915,18 7,18 C9.54113618,18 11.8057828,16.3968042 12.65,14 L17,14 L17,18 L21,18 L21,14 L23,14 L23,10 L12.65,10 Z\\\" id=\\\"mdi:key\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/link\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.9,12 C3.9,10.29 5.29,8.9 7,8.9 L11,8.9 L11,7 L7,7 C4.23857625,7 2,9.23857625 2,12 C2,14.7614237 4.23857625,17 7,17 L11,17 L11,15.1 L7,15.1 C5.29,15.1 3.9,13.71 3.9,12 M8,13 L16,13 L16,11 L8,11 L8,13 M17,7 L13,7 L13,8.9 L17,8.9 C18.71,8.9 20.1,10.29 20.1,12 C20.1,13.71 18.71,15.1 17,15.1 L13,15.1 L13,17 L17,17 C19.7614237,17 22,14.7614237 22,12 C22,9.23857625 19.7614237,7 17,7 Z\\\" id=\\\"mdi:link\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-alert\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,17 C11.1,17 12,16.1 12,15 C12,13.9 11.1,13 10,13 C8.9,13 8,13.9 8,15 C8,16.1 8.9,17 10,17 M16,8 C17.1,8 18,8.9 18,10 L18,20 C18,21.1 17.1,22 16,22 L4,22 C2.9,22 2,21.1 2,20 L2,10 C2,8.9 2.9,8 4,8 L5,8 L5,6 C5,3.2 7.2,1 10,1 C12.8,1 15,3.2 15,6 L15,8 L16,8 M10,3 C8.3,3 7,4.3 7,6 L7,8 L13,8 L13,6 C13,4.3 11.7,3 10,3 M22,13 L20,13 L20,7 L22,7 L22,13 M22,17 L20,17 L20,15 L22,15 L22,17 Z\\\" id=\\\"mdi:lock-alert\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-check\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,1 C13.3260824,1 14.597852,1.5267842 15.5355339,2.46446609 C16.4732158,3.40214799 17,4.67391755 17,6 L17,8 L18,8 C19.1045695,8 20,8.8954305 20,10 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,10 C4,8.89 4.9,8 6,8 L7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M15.6,11 L10.47,16.18 L8.4,14.09 L7,15.5 L10.47,19 L17,12.41 L15.6,11 Z M12,3 C10.3431458,3 9,4.34314575 9,6 L9,8 L15,8 L15,6 C15,4.34314575 13.6568542,3 12,3 Z\\\" id=\\\"mdi:lock-check\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-cross\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,1 C13.3260824,1 14.597852,1.5267842 15.5355339,2.46446609 C16.4732158,3.40214799 17,4.67391755 17,6 L17,8 L18,8 C19.1045695,8 20,8.8954305 20,10 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,10 C4,8.89 4.9,8 6,8 L7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M14.12,11.47 L12,13.59 L9.88,11.47 L8.5,12.86 L10.61,15 L8.5,17.11 L9.91,18.53 L12.03,16.41 L14.12,18.5 L15.5,17.11 L13.43,15 L15.55,12.9 L14.12,11.47 Z M12,3 C10.3431458,3 9,4.34314575 9,6 L9,8 L15,8 L15,6 C15,4.34314575 13.6568542,3 12,3 Z\\\" id=\\\"mdi:lock-cross\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-open\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18,1 C15.24,1 13,3.24 13,6 L13,8 L4,8 C2.8954305,8 2,8.8954305 2,10 L2,20 C2,21.1045695 2.8954305,22 4,22 L16,22 C17.11,22 18,21.11 18,20 L18,10 C18,8.8954305 17.1045695,8 16,8 L15,8 L15,6 C15,4.34 16.34,3 18,3 C19.66,3 21,4.34 21,6 L21,8 L23,8 L23,6 C23,3.24 20.76,1 18,1 M10,13 C11.1045695,13 12,13.8954305 12,15 C12,16.11 11.11,17 10,17 C8.8954305,17 8,16.1045695 8,15 C8,13.8954305 8.8954305,13 10,13 Z\\\" id=\\\"mdi:lock-open-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-question\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,1 C9.23857625,1 7,3.23857625 7,6 L7,8 L6,8 C4.8954305,8 4,8.8954305 4,10 L4,20 C4,21.1045695 4.8954305,22 6,22 L18,22 C19.1045695,22 20,21.1045695 20,20 L20,10 C20,8.8954305 19.1045695,8 18,8 L17,8 L17,6 C17,4.67391755 16.4732158,3.40214799 15.5355339,2.46446609 C14.597852,1.5267842 13.3260824,1 12,1 M12,2.9 C13.71,2.9 15.1,4.29 15.1,6 L15.1,8 L8.9,8 L8.9,6 C8.9,4.29 10.29,2.9 12,2.9 M12.19,10.5 C13.13,10.5 13.88,10.71 14.42,11.12 C14.96,11.54 15.23,12.1 15.23,12.8 C15.23,13.24 15.08,13.63 14.79,14 C14.5,14.36 14.12,14.64 13.66,14.85 C13.4,15 13.23,15.15 13.14,15.32 C13.05,15.5 13,15.72 13,16 L11,16 C11,15.5 11.1,15.16 11.29,14.92 C11.5,14.68 11.84,14.4 12.36,14.08 C12.62,13.94 12.83,13.76 13,13.54 C13.14,13.33 13.22,13.08 13.22,12.8 C13.22,12.5 13.13,12.28 12.95,12.11 C12.77,11.93 12.5,11.85 12.19,11.85 C11.92,11.85 11.7,11.92 11.5,12.06 C11.34,12.2 11.24,12.41 11.24,12.69 L9.27,12.69 C9.22,12 9.5,11.4 10.05,11.04 C10.59,10.68 11.3,10.5 12.19,10.5 M11,17 L13,17 L13,19 L11,19 L11,17 Z\\\" id=\\\"mdi:lock-question\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,17 C13.1045695,17 14,16.1045695 14,15 C14,13.89 13.1,13 12,13 C10.8954305,13 10,13.8954305 10,15 C10,16.1045695 10.8954305,17 12,17 M18,8 C19.1045695,8 20,8.8954305 20,10 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,10 C4,8.89 4.9,8 6,8 L7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 C13.3260824,1 14.597852,1.5267842 15.5355339,2.46446609 C16.4732158,3.40214799 17,4.67391755 17,6 L17,8 L18,8 M12,3 C10.3431458,3 9,4.34314575 9,6 L9,8 L15,8 L15,6 C15,4.34314575 13.6568542,3 12,3 Z\\\" id=\\\"mdi:lock\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/map-marker-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 M12,2 C15.8659932,2 19,5.13400675 19,9 C19,14.25 12,22 12,22 C12,22 5,14.25 5,9 C5,5.13400675 8.13400675,2 12,2 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,10 7,12 12,18.71 C17,12 17,10 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:map-marker-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/map-marker\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\\\" id=\\\"mdi:map-marker\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/membership-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 M7.07,18.28 C7.5,17.38 10.12,16.5 12,16.5 C13.88,16.5 16.5,17.38 16.93,18.28 C15.5293835,19.3960251 13.7908746,20.0025637 12,20 C10.14,20 8.43,19.36 7.07,18.28 M18.36,16.83 C16.93,15.09 13.46,14.5 11.9999999,14.5 C10.54,14.5 7.07,15.09 5.64,16.83 C4.57618516,15.4446232 3.99966563,13.7467029 3.99999985,12 C3.99999985,7.59 7.59,4 11.9999999,4 C16.41,4 19.9999999,7.59 19.9999999,12 C19.9999999,13.82 19.38,15.5 18.36,16.83 M12,6 C10.06,6 8.5,7.56 8.5,9.5 C8.5,11.44 10.06,13 12,13 C13.94,13 15.5,11.44 15.5,9.5 C15.5,7.56 13.94,6 12,6 M12,11 C11.1715729,11 10.5,10.3284271 10.5,9.5 C10.5,8.67157288 11.1715729,8 12,8 C12.8284271,8 13.5,8.67157288 13.5,9.5 C13.5,10.3284271 12.8284271,11 12,11 Z\\\" id=\\\"mdi:account-circle-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/message-bookmark-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,2 L4,2 C2.9,2 2,2.9 2,4 L2,22 L6,18 L20,18 C21.1,18 22,17.1 22,16 L22,4 C22,2.9 21.1,2 20,2 M20,16 L5.2,16 L4,17.2 L4,4 L20,4 L20,16 M18,14 L18,6 L13,6 L13,14 L15.5,12.5 L18,14\\\" id=\\\"mdi:message-bookmark-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"message-group-variant2\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M14.2526206,6 L21.4947588,6 C22.3260806,6 23,6.6752491 23,7.49824524 L23,24 L19,20 L8.50524116,20 C7.67391942,20 7,19.3247509 7,18.5017548 L7,17 L17.0005775,17 C18.6556493,17 20,15.6542582 20,13.9942017 L20,6 L14.2526206,6 Z\\\" id=\\\"Message2\\\"></path>\\n        <path d=\\\"M1,2.49824524 C1,1.67078724 1.66642015,1 2.50863659,1 L16.4913634,1 C17.3245604,1 18,1.6752491 18,2.49824524 L18,13.5017548 C18,14.3292128 17.3335799,15 16.4913634,15 L5,15 L1,19 L1,2.49824524 Z M4,10 L4,12 L12,12 L12,10 L4,10 Z M4,7 L4,9 L15,9 L15,7 L4,7 Z M4,4 L4,6 L15,6 L15,4 L4,4 Z\\\" id=\\\"Combined-Shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/minus\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:minus\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 13 5 13 5 11 19 11\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/mobile\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10,1 C11.1045695,1 12,1.8954305 12,3 L12,12 C12,13.1045695 11.1045695,14 10,14 L6,14 C4.8954305,14 4,13.1045695 4,12 L4,3 C4,1.8954305 4.8954305,1 6,1 L10,1 Z M10,4 L6,4 L6,10 L10,10 L10,4 Z\\\" id=\\\"Mobile\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/palette\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17.5,12 C16.6715729,12 16,11.3284271 16,10.5 C16,9.67157288 16.6715729,9 17.5,9 C18.3284271,9 19,9.67157288 19,10.5 C19,11.3284271 18.3284271,12 17.5,12 M14.5,8 C13.6715729,8 13,7.32842712 13,6.5 C13,5.67157288 13.6715729,5 14.5,5 C15.3284271,5 16,5.67157288 16,6.5 C16,7.32842712 15.3284271,8 14.5,8 M9.5,8 C8.67157288,8 8,7.32842712 8,6.5 C8,5.67157288 8.67157288,5 9.5,5 C10.3284271,5 11,5.67157288 11,6.5 C11,7.32842712 10.3284271,8 9.5,8 M6.5,12 C5.67157288,12 5,11.3284271 5,10.5 C5,9.67157288 5.67157288,9 6.5,9 C7.32842712,9 8,9.67157288 8,10.5 C8,11.3284271 7.32842712,12 6.5,12 M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C12.8284271,21 13.5,20.3284271 13.5,19.5 C13.5,19.11 13.35,18.76 13.11,18.5 C12.88,18.23 12.73,17.88 12.73,17.5 C12.73,16.6715729 13.4015729,16 14.23,16 L16,16 C18.7614237,16 21,13.7614237 21,11 C21,6.58 16.97,3 12,3 L12,3 Z\\\" id=\\\"mdi:palette\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/pause\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,19 L18,19 L18,5 L14,5 M6,19 L10,19 L10,5 L6,5 L6,19 Z\\\" id=\\\"mdi:pause\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/picture-in-picture-bottom-right\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,11 L11,11 L11,17 L19,17 L19,11 M23,19 L23,5 C23,3.88 22.1,3 21,3 L3,3 C1.8954305,3 1,3.8954305 1,5 L1,19 C1,20.1045695 1.8954305,21 3,21 L21,21 C22.1045695,21 23,20.1045695 23,19 M21,19 L3,19 L3,4.97 L21,4.97 L21,19 Z\\\" id=\\\"mdi:picture-in-picture-bottom-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/picture-in-picture-minimize\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,3 C22.1,3 23,3.88 23,5 L23.0008195,11.8103588 C22.4253055,11.2578757 21.7483079,10.8103075 21.000576,10.4984036 L21,4.97 L3,4.97 L3,19 L12.4984036,19.000576 C12.8103075,19.7483079 13.2578757,20.4253055 13.8103588,21.0008195 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L21,3 Z M21,13 L21,14.5 L17.5,14.5 L22,19 L21,20 L16.5,15.5 L16.5,19 L15,19 L15,13 L21,13 Z M13,7 L13,13 L5,13 L5,7 L13,7 Z\\\" id=\\\"xabber:picture-in-picture-minimize\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/picture-in-picture-top-right\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,7 L11,7 L11,13 L19,13 L19,7 M21,3 L3,3 C1.8954305,3 1,3.8954305 1,5 L1,19 C1,20.1045695 1.8954305,21 3,21 L21,21 C22.1045695,21 23,20.1045695 23,19 L23,5 C23,3.8954305 22.1045695,3 21,3 M21,19 L3,19 L3,5 L21,5 L21,19 Z\\\" id=\\\"mdi:picture-in-picture-top-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/pinned-circle-small\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 C16.9705627,3 21,7.02943725 21,12 C21,16.9705627 16.9705627,21 12,21 C7.02943725,21 3,16.9705627 3,12 C3,7.02943725 7.02943725,3 12,3 Z M12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 Z M14,6.5 L17.5,9.5 L16.5,10.5 L16,10 L14.25,13.25 L15.25,14.75 L14,16 L11.5,13.5 L8.75,16.25 L7.75,16.25 L7.75,15.25 L10.5,12.5 L8,10 L9.25,8.75 L10.75,9.75 L13.5,8 L13,7.5 L14,6.5 Z\\\" id=\\\"xabber:pinned-small\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/pinned\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5228475,2 22,6.4771525 22,12 C22,17.5228475 17.5228475,22 12,22 C6.4771525,22 2,17.5228475 2,12 C2,6.4771525 6.4771525,2 12,2 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M14.5,6 L18,9.5 L17,10.5 L16.5,10 L14.5,13 L15.5,14.5 L14,16 L11.5,13.5 L8.5,16.5 L7.5,16.5 L7.5,15.5 L10.5,12.5 L8,10 L9.5,8.5 L11,9.5 L14,7.5 L13.5,7 L14.5,6 Z\\\" id=\\\"xabber:pinned\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/play\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:play\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"8 5 8 19 19 12\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-float\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,3 L13,5 L3,5 L3,19 L20,19 L20,11 L22,11 L22,19 C22,20.1045695 21.1045695,21 20,21 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L13,3 Z M13,9 L13,15 L11.5,15 L11.5,11.5 L6.5,16.5 L5.5,15.5 L10.5,10.5 L7,10.5 L7,9 L13,9 Z M22,2 C23.1045695,2 24,2.8954305 24,4 L24,7 C24,8.1045695 23.1045695,9 22,9 L17,9 C15.8954305,9 15,8.1045695 15,7 L15,4 C15,2.8954305 15.8954305,2 17,2 L22,2 Z\\\" id=\\\"xabber:player-float\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-full\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14.8101336,2.99941507 C14.2575941,3.5750451 13.8100058,4.25218587 13.4981326,5.00007375 L3,5 L3,19 L20,19 L20.000332,13.9810299 C20.7043777,13.9274362 21.3770687,13.7616821 22.000576,13.5015964 L22,19 C22,20.1045695 21.1045695,21 20,21 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L14.8101336,2.99941507 Z M12,10 C13.1045695,10 14,10.8954305 14,12 L14,15 C14,16.1045695 13.1045695,17 12,17 L7,17 C5.8954305,17 5,16.1045695 5,15 L5,12 C5,10.8954305 5.8954305,10 7,10 L12,10 Z M22,4 L23,5 L18.5,9.5 L22,9.5 L22,11 L16,11 L16,5 L17.5,5 L17.5,8.5 L22,4 Z\\\" id=\\\"xabber:picture-in-picture-full\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-mini-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19.5,4.5 C19.5,5.32842712 18.8284271,6 18,6 L6,6 C5.17157288,6 4.5,5.32842712 4.5,4.5 C4.5,3.67157288 5.17157288,3 6,3 L18,3 C18.8284271,3 19.5,3.67157288 19.5,4.5 Z\\\" id=\\\"xabber:player-mini-variant\\\" fill=\\\"#000000\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-mini\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,8 L17,9.5 L13.5,9.5 L18,14 L17,15 L12.5,10.5 L12.5,14 L11,14 L11,8 L17,8 Z M19.5,4.5 C19.5,5.32842712 18.8284271,6 18,6 L6,6 C5.17157288,6 4.5,5.32842712 4.5,4.5 C4.5,3.67157288 5.17157288,3 6,3 L18,3 C18.8284271,3 19.5,3.67157288 19.5,4.5 Z\\\" id=\\\"xabber:player-mini\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/plus\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:plus\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 12.998 13 12.998 13 18.998 11 18.998 11 12.998 5 12.998 5 10.998 11 10.998 11 4.998 13 4.998 13 10.998 19 10.998\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <symbol id=\\\"plyr-airplay\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16 1H2a1 1 0 00-1 1v10a1 1 0 001 1h3v-2H3V3h12v8h-2v2h3a1 1 0 001-1V2a1 1 0 00-1-1z\\\"></path><path d=\\\"M4 17h10l-5-6z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-captions-off\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h4.6l2.7 2.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3l2.7-2.7H17c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1H1zm4.52 10.15c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41C8.47 4.96 7.46 3.76 5.5 3.76c-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69zm7.57 0c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41c-.28-1.15-1.29-2.35-3.25-2.35-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69z\\\" fill-rule=\\\"evenodd\\\" fill-opacity=\\\".5\\\"></path></symbol>\\n    <symbol id=\\\"plyr-captions-on\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h4.6l2.7 2.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3l2.7-2.7H17c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1H1zm4.52 10.15c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41C8.47 4.96 7.46 3.76 5.5 3.76c-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69zm7.57 0c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41c-.28-1.15-1.29-2.35-3.25-2.35-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69z\\\" fill-rule=\\\"evenodd\\\"></path></symbol>\\n    <symbol id=\\\"plyr-download\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M9 13c.3 0 .5-.1.7-.3L15.4 7 14 5.6l-4 4V1H8v8.6l-4-4L2.6 7l5.7 5.7c.2.2.4.3.7.3zm-7 2h14v2H2z\\\"></path></symbol><symbol id=\\\"plyr-enter-fullscreen\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M10 3h3.6l-4 4L11 8.4l4-4V8h2V1h-7zM7 9.6l-4 4V10H1v7h7v-2H4.4l4-4z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-exit-fullscreen\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 12h3.6l-4 4L2 17.4l4-4V17h2v-7H1zM16 .6l-4 4V1h-2v7h7V6h-3.6l4-4z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-fast-forward\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M7.875 7.171L0 1v16l7.875-6.171V17L18 9 7.875 1z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-logo-vimeo\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M17 5.3c-.1 1.6-1.2 3.7-3.3 6.4-2.2 2.8-4 4.2-5.5 4.2-.9 0-1.7-.9-2.4-2.6C5 10.9 4.4 6 3 6c-.1 0-.5.3-1.2.8l-.8-1c.8-.7 3.5-3.4 4.7-3.5 1.2-.1 2 .7 2.3 2.5.3 2 .8 6.1 1.8 6.1.9 0 2.5-3.4 2.6-4 .1-.9-.3-1.9-2.3-1.1.8-2.6 2.3-3.8 4.5-3.8 1.7.1 2.5 1.2 2.4 3.3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-logo-youtube\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16.8 5.8c-.2-1.3-.8-2.2-2.2-2.4C12.4 3 9 3 9 3s-3.4 0-5.6.4C2 3.6 1.3 4.5 1.2 5.8 1 7.1 1 9 1 9s0 1.9.2 3.2c.2 1.3.8 2.2 2.2 2.4C5.6 15 9 15 9 15s3.4 0 5.6-.4c1.4-.3 2-1.1 2.2-2.4.2-1.3.2-3.2.2-3.2s0-1.9-.2-3.2zM7 12V6l5 3-5 3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-muted\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M12.4 12.5l2.1-2.1 2.1 2.1 1.4-1.4L15.9 9 18 6.9l-1.4-1.4-2.1 2.1-2.1-2.1L11 6.9 13.1 9 11 11.1zM3.786 6.008H.714C.286 6.008 0 6.31 0 6.76v4.512c0 .452.286.752.714.752h3.072l4.071 3.858c.5.3 1.143 0 1.143-.602V2.752c0-.601-.643-.977-1.143-.601L3.786 6.008z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-pause\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M6 1H3c-.6 0-1 .4-1 1v14c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1zm6 0c-.6 0-1 .4-1 1v14c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1h-3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-pip\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M13.293 3.293L7.022 9.564l1.414 1.414 6.271-6.271L17 7V1h-6z\\\"></path><path d=\\\"M13 15H3V5h5V3H2a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1v-6h-2v5z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-play\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M15.562 8.1L3.87.225c-.818-.562-1.87 0-1.87.9v15.75c0 .9 1.052 1.462 1.87.9L15.563 9.9c.584-.45.584-1.35 0-1.8z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-restart\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M9.7 1.2l.7 6.4 2.1-2.1c1.9 1.9 1.9 5.1 0 7-.9 1-2.2 1.5-3.5 1.5-1.3 0-2.6-.5-3.5-1.5-1.9-1.9-1.9-5.1 0-7 .6-.6 1.4-1.1 2.3-1.3l-.6-1.9C6 2.6 4.9 3.2 4 4.1 1.3 6.8 1.3 11.2 4 14c1.3 1.3 3.1 2 4.9 2 1.9 0 3.6-.7 4.9-2 2.7-2.7 2.7-7.1 0-9.9L16 1.9l-6.3-.7z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-rewind\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M10.125 1L0 9l10.125 8v-6.171L18 17V1l-7.875 6.171z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-settings\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16.135 7.784a2 2 0 01-1.23-2.969c.322-.536.225-.998-.094-1.316l-.31-.31c-.318-.318-.78-.415-1.316-.094a2 2 0 01-2.969-1.23C10.065 1.258 9.669 1 9.219 1h-.438c-.45 0-.845.258-.997.865a2 2 0 01-2.969 1.23c-.536-.322-.999-.225-1.317.093l-.31.31c-.318.318-.415.781-.093 1.317a2 2 0 01-1.23 2.969C1.26 7.935 1 8.33 1 8.781v.438c0 .45.258.845.865.997a2 2 0 011.23 2.969c-.322.536-.225.998.094 1.316l.31.31c.319.319.782.415 1.316.094a2 2 0 012.969 1.23c.151.607.547.865.997.865h.438c.45 0 .845-.258.997-.865a2 2 0 012.969-1.23c.535.321.997.225 1.316-.094l.31-.31c.318-.318.415-.781.094-1.316a2 2 0 011.23-2.969c.607-.151.865-.547.865-.997v-.438c0-.451-.26-.846-.865-.997zM9 12a3 3 0 110-6 3 3 0 010 6z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-volume\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M15.6 3.3c-.4-.4-1-.4-1.4 0-.4.4-.4 1 0 1.4C15.4 5.9 16 7.4 16 9c0 1.6-.6 3.1-1.8 4.3-.4.4-.4 1 0 1.4.2.2.5.3.7.3.3 0 .5-.1.7-.3C17.1 13.2 18 11.2 18 9s-.9-4.2-2.4-5.7z\\\"></path><path d=\\\"M11.282 5.282a.909.909 0 000 1.316c.735.735.995 1.458.995 2.402 0 .936-.425 1.917-.995 2.487a.909.909 0 000 1.316c.145.145.636.262 1.018.156a.725.725 0 00.298-.156C13.773 11.733 14.13 10.16 14.13 9c0-.17-.002-.34-.011-.51-.053-.992-.319-2.005-1.522-3.208a.909.909 0 00-1.316 0zm-7.496.726H.714C.286 6.008 0 6.31 0 6.76v4.512c0 .452.286.752.714.752h3.072l4.071 3.858c.5.3 1.143 0 1.143-.602V2.752c0-.601-.643-.977-1.143-.601L3.786 6.008z\\\"></path></symbol>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/qrcode\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3,11 L5,11 L5,13 L3,13 L3,11 M11,5 L13,5 L13,9 L11,9 L11,5 M9,11 L13,11 L13,15 L11,15 L11,13 L9,13 L9,11 M15,11 L17,11 L17,13 L19,13 L19,11 L21,11 L21,13 L19,13 L19,15 L21,15 L21,19 L19,19 L19,21 L17,21 L17,19 L13,19 L13,21 L11,21 L11,17 L15,17 L15,15 L17,15 L17,13 L15,13 L15,11 M19,19 L19,15 L17,15 L17,19 L19,19 M15,3 L21,3 L21,9 L15,9 L15,3 M17,5 L17,7 L19,7 L19,5 L17,5 M3,3 L9,3 L9,9 L3,9 L3,3 M5,5 L5,7 L7,7 L7,5 L5,5 M3,15 L9,15 L9,21 L3,21 L3,15 M5,17 L5,19 L7,19 L7,17 L5,17 Z\\\" id=\\\"mdi:qrcode\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/restrictions-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18.5,8 C18.33,8 18.16,8 18,8.05 L18,4.5 C18,3.11928813 16.8807119,2 15.5,2 C15.31,2 15.13,2 14.96,2.06 C14.7461874,0.868716938 13.7103179,0.0012815407 12.5,0 C11.44,0 10.54,0.66 10.17,1.59 C9.41693202,1.38051444 8.60922719,1.53531349 7.98697307,2.00838366 C7.36471894,2.48145383 6.99954575,3.21833807 7,4 L7,4.55 C6.84,4.5 6.67,4.5 6.5,4.5 C5.11928813,4.5 4,5.61928813 4,7 L4,15.5 C4,20.19 7.81,24 12.5,24 C17.19,24 21,20.19 21,15.5 L21,10.5 C21,9.11928813 19.8807119,8 18.5,8 M19,15.5 C19,19.0898509 16.0898509,22 12.5,22 C8.91014913,22 6,19.0898509 6,15.5 L6,7 C6,6.72 6.22,6.5 6.5,6.5 C6.78,6.5 7,6.72 7,7 L7,12 L9,12 L9,4 C9,3.72 9.22,3.5 9.5,3.5 C9.78,3.5 10,3.72 10,4 L10,11 L12,11 L12,2.5 C12,2.22 12.22,2 12.5,2 C12.78,2 13,2.22 13,2.5 L13,11 L15,11 L15,4.5 C15,4.22 15.22,4 15.5,4 C15.78,4 16,4.22 16,4.5 L16,13.42 C14.23,14.19 13,15.95 13,18 L15,18 C15,16.34 16.34,15 18,15 L18,10.5 C18,10.22 18.22,10 18.5,10 C18.78,10 19,10.22 19,10.5 L19,15.5 Z\\\" id=\\\"mdi:hand-front-right-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/rss-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M5,10 C5.55228475,10 6,10.4477153 6,11 C6,11.5412844 5.55045872,12 5,12 C4.4587156,12 4,11.5412844 4,11 C4,10.4477153 4.44771525,10 5,10 M4,4 C8.418278,4 12,7.581722 12,12 L10.5449871,12 C10.5449871,8.38530341 7.61469659,5.45501285 4,5.45501285 L4,4 M4,7 C6.76142375,7 9,9.23857625 9,12 L7.57070707,12 C7.57070707,11.0529896 7.19450866,10.1447663 6.52487118,9.47512882 C5.85523371,8.80549134 4.9470104,8.42929293 4,8.42929293 L4,7 Z\\\" id=\\\"rss-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/rss\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M4.75,10 C5.44035594,10 6,10.5596441 6,11.25 C6,11.9403559 5.44035594,12.5 4.75,12.5 C4.05964406,12.5 3.5,11.9403559 3.5,11.25 C3.5,10.5596441 4.05964406,10 4.75,10 Z M5.11116669,7.54639605 C6.82660407,7.80940186 8.1830606,9.16218778 8.45158391,10.8758014 L7.23152342,11.1795044 C7.08441894,9.91212418 6.07561709,8.9075227 4.80628203,8.7668642 L5.11116669,7.54639605 Z M5.72009926,5.11432766 C8.32885675,5.60976503 10.3855062,7.6642481 10.8841422,10.2718714 L9.66858256,10.5739265 C9.28406621,8.41337145 7.57799724,6.7100586 5.41602734,6.32963962 L5.72009926,5.11432766 Z M6.32787101,2.68573625 C9.83044069,3.40831848 12.5892971,6.16611302 13.3134345,9.66811414 L12.0989255,9.96960741 C11.4871421,6.91510726 9.07973668,4.50930363 6.02438684,3.89987406 L6.32787101,2.68573625 Z\\\" id=\\\"Channel-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/saved-messages\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17.1666667,1 C17.9487847,1 18.6165365,1.26855469 19.1699219,1.80566406 C19.7233073,2.34277344 20,2.99088542 20,3.75 L20,21.625 C20,21.9973958 19.8634983,22.3196615 19.5904948,22.5917969 C19.3174913,22.8639323 18.9817708,23 18.5833333,23 L12,18.1875 L5.41666667,23 C5.01822917,23 4.68250868,22.8639323 4.40950521,22.5917969 C4.13650174,22.3196615 4,21.9973958 4,21.625 L4,3.75 C4,2.99088542 4.27669271,2.34277344 4.83007812,1.80566406 C5.38346354,1.26855469 6.05121528,1 6.83333333,1 L17.1666667,1 Z M12.0016667,4.4375 L10.2972396,8.1328125 L6.335,8.6484375 L9.256875,11.4199219 L8.50427083,15.4375 L12.0016667,13.4609375 L15.4990625,15.4375 L14.7464583,11.4199219 L17.6683333,8.6484375 L13.7060938,8.1328125 L12.0016667,4.4375 Z\\\" id=\\\"xabber:saved-messages\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <defs>\\n        <path d=\\\"M15.5,14 L14.71,14 L14.43,13.73 C15.41,12.59 16,11.11 16,9.5 C16,5.91 13.09,3 9.5,3 C5.91,3 3,5.91 3,9.5 C3,13.09 5.91,16 9.5,16 C11.11,16 12.59,15.41 13.73,14.43 L14,14.71 L14,15.5 L19,20.49 L20.49,19 L15.5,14 Z M9.5,14 C7.01,14 5,11.99 5,9.5 C5,7.01 7.01,5 9.5,5 C11.99,5 14,7.01 14,9.5 C14,11.99 11.99,14 9.5,14 Z\\\" id=\\\"path-1\\\"></path>\\n    </defs>\\n    <g id=\\\"icon/material/search\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <mask id=\\\"mask-2\\\" fill=\\\"white\\\">\\n            <use xlink:href=\\\"#path-1\\\"></use>\\n        </mask>\\n        <use id=\\\"mdi:search\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" xlink:href=\\\"#path-1\\\"></use>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/security\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,12 L19,12 C18.47,16.11 15.72,19.78 12,20.92 L12,12 L5,12 L5,6.3 L12,3.19 M12,1 L3,5 L3,11 C3,16.55 6.84,21.73 12,23 C17.16,21.73 21,16.55 21,11 L21,5 L12,1 Z\\\" id=\\\"mdi:security\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/server\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10.1428571,13 L5.85714286,13 C5.38571429,13 5,12.625 5,12.1666667 L5,3.83333333 C5,3.375 5.38571429,3 5.85714286,3 L10.1428571,3 C10.6142857,3 11,3.375 11,3.83333333 L11,12.1666667 C11,12.625 10.6142857,13 10.1428571,13 Z M10,5 L6,5 L6,6 L10,6 L10,5 Z M10,7 L6,7 L6,8 L10,8 L10,7 Z M10,11 L9,11 L9,12 L10,12 L10,11 Z\\\" id=\\\"Server\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/star-face\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2.5 L8.42,8.06 L2,9.74 L6.2,14.88 L5.82,21.5 L12,19.09 L18.18,21.5 L17.8,14.88 L22,9.74 L15.58,8.06 L12,2.5 M9.38,10.5 C10,10.5 10.5,11 10.5,11.63 C10.5,11.9270425 10.3820003,12.2119189 10.1719596,12.4219596 C9.96191885,12.6320003 9.67704247,12.75 9.38,12.75 C8.75,12.75 8.25,12.25 8.25,11.63 C8.25,11 8.75,10.5 9.38,10.5 M14.63,10.5 C15.25,10.5 15.75,11 15.75,11.63 C15.75,12.2485589 15.2485589,12.75 14.63,12.75 C14,12.75 13.5,12.25 13.5,11.63 C13.5,11 14,10.5 14.63,10.5 M9,15 L15,15 C14.4960889,16.2119097 13.3124982,17.0016023 12,17.0016023 C10.6875018,17.0016023 9.50391113,16.2119097 9,15 L9,15 Z\\\" id=\\\"mdi:star-face\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/status-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M16.06,2.2 L17.74,6.26 L21.8,7.94 L20.12,12 L21.8,16.06 L17.74,17.74 L16.06,21.8 L12,20.12 L7.94,21.8 L6.26,17.74 L2.2,16.06 L3.88,12 L2.2,7.94 L6.26,6.26 L7.94,2.2 L12,3.88 L16.06,2.2 Z M15,4.81 L12,6.05 L9,4.81 L7.79,7.79 L4.81,9 L6.05,12 L4.81,15 L7.79,16.21 L9,19.19 L12,17.95 L15,19.19 L16.21,16.21 L19.19,15 L17.95,12 L19.19,9 L16.21,7.79 L15,4.81 Z M13.5,7 L12,11 L15,11 L11.5,17 L10.5,17 L12,13 L9,13 L12.5,7 L13.5,7 Z\\\" id=\\\"xabber:status-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/status\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M16.06,2.2 L17.74,6.26 L21.8,7.94 L20.12,12 L21.8,16.06 L17.74,17.74 L16.06,21.8 L12,20.12 L7.94,21.8 L6.26,17.74 L2.2,16.06 L3.88,12 L2.2,7.94 L6.26,6.26 L7.94,2.2 L12,3.88 L16.06,2.2 Z M13.5,7 L12.5,7 L9,13 L12,13 L10.5,17 L11.5,17 L15,11 L12,11 L13.5,7 Z\\\" id=\\\"xabber:status\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/subscription-from\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,8 C17.3137085,8 20,10.6862915 20,14 C20,17.3137085 17.3137085,20 14,20 C10.6862915,20 8,17.3137085 8,14 C8,13.462632 8.07064283,12.9417636 8.20314833,12.4461748 L9.67168223,13.9143229 C9.77459988,14.0172246 9.8859413,14.1065666 10.0034864,14.1823489 L10.0048953,14.1996403 C10.1089211,16.3160315 11.8578046,18 14,18 C16.209139,18 18,16.209139 18,14 C18,11.851413 16.3059677,10.0984884 14.180685,10.0040081 C14.1065666,9.8859413 14.0172246,9.77459988 13.9143229,9.67168223 L12.4461748,8.20314833 C12.9417636,8.07064283 13.462632,8 14,8 Z M11,4 L11,6 L7.415,6 L12.5,11.0857864 L11.0857864,12.5 L6,7.415 L6,11 L4,11 L4,4 L11,4 Z\\\" id=\\\"xabber:subscribe-from\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/subscription-to\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.9994979,8.00000002 C17.3137085,8.00000002 20,10.6862915 20,14 C20,17.3137085 17.3137085,20 14,20 C10.7616031,20 8.12242824,17.4344251 8.00413847,14.2249383 L8,13.999 L10,14 L10,14 C10,16.209139 11.790861,18 14,18 C16.209139,18 18,16.209139 18,14 C18,11.8578046 16.3160315,10.1089211 14.1996403,10.0048953 L13.999,10 L13.9994979,8.00000002 Z M4.91421356,3.5 L10,8.585 L10,5 L12,5 L12,12 L5,12 L5,10 L8.585,10 L3.5,4.91421356 L4.91421356,3.5 Z\\\" id=\\\"xabber:subscribe-to\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/circle/task\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <circle id=\\\"Circle\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" cx=\\\"8\\\" cy=\\\"8\\\" r=\\\"7\\\"></circle>\\n        <g id=\\\"icon16/bot-variant\\\">\\n            <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n            <polygon id=\\\"Path\\\" fill=\\\"#FFFFFF\\\" fill-rule=\\\"nonzero\\\" points=\\\"7 12.5 2.75 8.25 4 7 7 10 12 5 13.25 6.25\\\"></polygon>\\n        </g>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/translate\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12.87,15.07 L10.33,12.56 L10.36,12.53 C12.0541502,10.6471017 13.3198948,8.41925464 14.07,6 L17,6 L17,4 L10,4 L10,2 L8,2 L8,4 L1,4 L1,6 L12.17,6 C11.5,7.92 10.44,9.75 9,11.35 C8.07,10.32 7.3,9.19 6.69,8 L4.69,8 C5.42,9.63 6.42,11.17 7.67,12.56 L2.58,17.58 L4,19 L9,14 L12.11,17.11 L12.87,15.07 M18.5,10 L16.5,10 L12,22 L14,22 L15.12,19 L19.87,19 L21,22 L23,22 L18.5,10 M15.88,17 L17.5,12.67 L19.12,17 L15.88,17 L15.88,17 Z\\\" id=\\\"mdi:translate\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/trash\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,4 L15.5,4 L14.5,3 L9.5,3 L8.5,4 L5,4 L5,6 L19,6 M6,19 C6,20.1045695 6.8954305,21 8,21 L16,21 C17.1045695,21 18,20.1045695 18,19 L18,7 L6,7 L6,19 Z\\\" id=\\\"mdi:trash\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/video\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,10.5 L17,7 C17,6.44771525 16.5522847,6 16,6 L4,6 C3.44771525,6 3,6.44771525 3,7 L3,17 C3,17.5522847 3.44771525,18 4,18 L16,18 C16.5522847,18 17,17.5522847 17,17 L17,13.5 L21,17.5 L21,6.5 L17,10.5 Z\\\" id=\\\"mdi:video\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/volume-high\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,3.23 L14,5.29 C16.89,6.15 19,8.83 19,12 C19,15.17 16.89,17.84 14,18.7 L14,20.77 C18,19.86 21,16.28 21,12 C21,7.72 18,4.14 14,3.23 M16.5,12 C16.5,10.23 15.5,8.71 14,7.97 L14,16 C15.5,15.29 16.5,13.76 16.5,12 M3,9 L3,15 L7,15 L12,20 L12,4 L7,9 L3,9 Z\\\" id=\\\"mdi:volume-high\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Mobile-Portrait\\\" transform=\\\"translate(-41.000000, -4.000000)\\\">\\n        <g id=\\\"volume-off-variant\\\" transform=\\\"translate(34.000000, 0.000000)\\\">\\n            <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n            <polygon id=\\\"Path-2\\\" points=\\\"7 9 7 15 11 15 16 20 16 16.5 8.5 9\\\"></polygon>\\n            <polygon id=\\\"Path-3\\\" points=\\\"7 6 18.5 17.5 19.5 16.5 16 13 16 4 11.5 8.5 8 5\\\"></polygon>\\n        </g>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/volume-off\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,4 L9.91,6.09 L12,8.18 M4.27,3 L3,4.27 L7.73,9 L3,9 L3,15 L7,15 L12,20 L12,13.27 L16.25,17.53 C15.58,18.04 14.83,18.46 14,18.7 L14,20.77 C15.38,20.45 16.63,19.82 17.68,18.96 L19.73,21 L21,19.73 L12,10.73 M19,12 C19,12.94 18.8,13.82 18.46,14.64 L19.97,16.15 C20.62,14.91 21,13.5 21,12 C21,7.72 18,4.14 14,3.23 L14,5.29 C16.89,6.15 19,8.83 19,12 M16.5,12 C16.5,10.23 15.5,8.71 14,7.97 L14,10.18 L16.45,12.63 C16.5,12.43 16.5,12.21 16.5,12 Z\\\" id=\\\"mdi:volume-off\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/web-cancel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.82,14 L9.66,14 C9.56,13.34 9.5,12.68 9.5,12 C9.5,11.32 9.56,10.65 9.66,10 L14.34,10 C14.43,10.65 14.5,11.32 14.5,12 C14.5,12.5 14.46,13 14.4,13.46 C15,12.96 15.72,12.57 16.5,12.32 L16.5,12 C16.5,11.32 16.44,10.66 16.36,10 L19.74,10 C19.9,10.64 20,11.31 20,12 L20,12.18 C20.7,12.35 21.35,12.63 21.95,13 C22,12.68 22,12.34 22,12 C22,6.5 17.5,2 12,2 C6.47,2 2,6.5 2,12 C2,17.5 6.5,22 12,22 C12.34,22 12.68,22 13,21.95 C12.59,21.29 12.29,20.55 12.13,19.75 C12.09,19.82 12.05,19.89 12,19.96 C11.17,18.76 10.5,17.43 10.09,16 L12.5,16 C12.81,15.25 13.26,14.58 13.82,14 M18.92,8 L15.97,8 C15.6570216,6.76145777 15.1935734,5.56589587 14.59,4.44 C16.43,5.07 17.96,6.34 18.92,8 M12,4.03 C12.83,5.23 13.5,6.57 13.91,8 L10.09,8 C10.5,6.57 11.17,5.23 12,4.03 M4.26,14 C4.1,13.36 4,12.69 4,12 C4,11.31 4.1,10.64 4.26,10 L7.64,10 C7.56,10.66 7.5,11.32 7.5,12 C7.5,12.68 7.56,13.34 7.64,14 L4.26,14 M5.08,16 L8,16 C8.35,17.25 8.8,18.45 9.4,19.56 C7.57862399,18.9316655 6.0448462,17.667719 5.08,16 M8,8 L5.08,8 C6.03885577,6.32721463 7.57479586,5.06148622 9.4,4.44 C8.8,5.55 8.35,6.75 8,8 M18.5,14 C16,14 14,16 14,18.5 C14,21 16,23 18.5,23 C21,23 23,21 23,18.5 C23,16 21,14 18.5,14 M18.5,21.5 C16.84,21.5 15.5,20.16 15.5,18.5 C15.5,17.94 15.65,17.42 15.92,17 L20,21.08 C19.58,21.35 19.06,21.5 18.5,21.5 M21.08,20 L17,15.92 C17.42,15.65 17.94,15.5 18.5,15.5 C20.16,15.5 21.5,16.84 21.5,18.5 C21.5,19.06 21.35,19.58 21.08,20 Z\\\" id=\\\"mdi:web-cancel\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/web\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M16.36,14 C16.44,13.34 16.5,12.68 16.5,12 C16.5,11.32 16.44,10.66 16.36,10 L19.74,10 C19.9,10.64 20,11.31 20,12 C20,12.69 19.9,13.36 19.74,14 M14.59,19.56 C15.19,18.45 15.65,17.25 15.97,16 L18.92,16 C17.96,17.65 16.43,18.93 14.59,19.56 M14.34,14 L9.66,14 C9.56,13.34 9.5,12.68 9.5,12 C9.5,11.32 9.56,10.65 9.66,10 L14.34,10 C14.43,10.65 14.5,11.32 14.5,12 C14.5,12.68 14.43,13.34 14.34,14 M12,19.96 C11.17,18.76 10.5,17.43 10.09,16 L13.91,16 C13.5,17.43 12.83,18.76 12,19.96 M8,8 L5.08,8 C6.03,6.34 7.57,5.06 9.4,4.44 C8.8,5.55 8.35,6.75 8,8 M5.08,16 L8,16 C8.35,17.25 8.8,18.45 9.4,19.56 C7.57,18.93 6.03,17.65 5.08,16 M4.26,14 C4.1,13.36 4,12.69 4,12 C4,11.31 4.1,10.64 4.26,10 L7.64,10 C7.56,10.66 7.5,11.32 7.5,12 C7.5,12.68 7.56,13.34 7.64,14 M12,4.03 C12.83,5.23 13.5,6.57 13.91,8 L10.09,8 C10.5,6.57 11.17,5.23 12,4.03 M18.92,8 L15.97,8 C15.65,6.75 15.19,5.55 14.59,4.44 C16.43,5.07 17.96,6.34 18.92,8 M12,2 C6.47,2 2,6.5 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,9.3478351 20.9464316,6.80429597 19.0710678,4.92893219 C17.195704,3.0535684 14.6521649,2 12,2 Z\\\" id=\\\"mdi:web\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Xabber-Offline\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M13.4146471,22.5 L14.009222,22.5 C14.5490248,22.5 15,22.0522847 15,21.5 C15,20.9438648 14.5564136,20.5 14.009222,20.5 L9.99077797,20.5 C9.45097518,20.5 9,20.9477153 9,21.5 C9,22.0561352 9.44358641,22.5 9.99077797,22.5 L10.5853529,22.5 C10.7912711,23.0825962 11.3468906,23.5 12,23.5 C12.6531094,23.5 13.2087289,23.0825962 13.4146471,22.5 Z\\\" id=\\\"Base\\\"></path>\\n        <rect id=\\\"Middle-base\\\" x=\\\"8\\\" y=\\\"17.75\\\" width=\\\"8\\\" height=\\\"2\\\" rx=\\\"1\\\"></rect>\\n        <path d=\\\"M17.5099945,14.8015103 L17.5099945,14.8015103 C17.1966102,15.1049344 17.0013821,15.5296633 17,16 C17,16.5522847 16.5443356,17 16.0046024,17 L7.99539757,17 C7.44565467,17 7,16.5561352 6.99998649,16 C6.99861167,15.5296664 6.80338616,15.10494 6.49000549,14.8015163 L6.49000549,14.8000192 C4.95622884,13.3424727 4,11.282906 4,9 C4,4.581722 7.581722,1 12,1 C16.418278,1 20,4.581722 20,9 C20,11.282906 19.0437712,13.3424727 17.5099945,14.8000192 L17.5099945,14.8015103 Z M8.86088543,15 L15.1391084,15 C15.3021338,14.4253123 15.6014858,13.895093 16,13.472213 C17.2274987,12.3735719 18,10.7769996 18,9 C18,5.6862915 15.3137085,3 12,3 C8.6862915,3 6,5.6862915 6,9 C6,10.7769996 6.77250128,12.3735719 8,13.472213 C8.39851111,13.8950917 8.69786083,14.4253152 8.86088543,15 Z\\\" id=\\\"Bulb-shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Xabber-Online\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M13.4146471,22.5 L14.009222,22.5 C14.5490248,22.5 15,22.0522847 15,21.5 C15,20.9438648 14.5564136,20.5 14.009222,20.5 L9.99077797,20.5 C9.45097518,20.5 9,20.9477153 9,21.5 C9,22.0561352 9.44358641,22.5 9.99077797,22.5 L10.5853529,22.5 C10.7912711,23.0825962 11.3468906,23.5 12,23.5 C12.6531094,23.5 13.2087289,23.0825962 13.4146471,22.5 Z\\\" id=\\\"Base\\\"></path>\\n        <rect id=\\\"Middle-base\\\" x=\\\"8\\\" y=\\\"17.75\\\" width=\\\"8\\\" height=\\\"2\\\" rx=\\\"1\\\"></rect>\\n        <path d=\\\"M17.5099945,14.8015103 L17.5099945,14.8000192 C19.0437712,13.3424727 20,11.282906 20,9 C20,4.581722 16.418278,1 12,1 C7.581722,1 4,4.581722 4,9 C4,11.282906 4.95622884,13.3424727 6.49000549,14.8000192 L6.49000549,14.8015163 C6.80338616,15.10494 6.99861167,15.5296664 6.99998649,16 C7,16.5561352 7.44565467,17 7.99539757,17 L16.0046024,17 C16.5443356,17 17,16.5522847 17,16 C17.0013821,15.5296633 17.1966102,15.1049344 17.5099945,14.8015103 L17.5099945,14.8015103 Z\\\" id=\\\"Bulb-shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/xmpp\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,16.4 C9.75,14.09 8,10.54 8,7 C2,5 8,7 2,5 C2,10.65 6.33,15.11 10.55,17.66 C9.38,18.5 8.15,19 7,19 C7,20 7,19 7,20 C8.2,20 10.03,19.46 12,18.46 C13.97,19.46 15.8,20 17,20 C17,19 17,20 17,19 C15.85,19 14.62,18.5 13.45,17.66 C17.66,15.11 22,10.65 22,5 C16,7 22,5 16,7 C16,10.54 14.25,14.09 12,16.4 Z\\\" id=\\\"mdi:xmpp\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <div class=\\\"btn-vcard-refresh\\\">\\n        <div class=\\\"button\\\">\\n            <i class=\\\"mdi mdi-20px mdi-refresh\\\"></i>\\n        </div>\\n        <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"vcard-wrap\\\">\\n    <div class=\\\"info-wrap jid-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg></div>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap personal-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"info first-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info middle-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_middle_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info last-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info fullname\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_full_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap nickname-info-wrap hidden\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info nickname\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap birthday-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n        <div class=\\\"info birthday\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap job-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n        <div class=\\\"info org-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info job-title\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_title\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info org-unit\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization_unit\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info role\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_role\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap site-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n        <div class=\\\"info url\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap phone-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-phone\\\"></i>\\n        <div class=\\\"info phone-work\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-home\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-mobile\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_mobile\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-default\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap email-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-email\\\"></i>\\n        <div class=\\\"info email-work\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info email-home\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info email-default\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap address-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-map-marker\\\"></i>\\n        <div class=\\\"info address-home\\\">\\n            <div class=\\\"pobox value one-line\\\"></div>\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info address-work\\\">\\n            <div class=\\\"pobox value one-line\\\"></div>\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info address-default\\\">\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_address\\\"))]}</div>\\n        </div>\\n    </div>\\n    <button class=\\\"btn-vcard-edit btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</button>\\n</div>\\n\";","export default \"<div class=\\\"buttons-wrap\\\">\\n    <button class=\\\"btn-vcard-save btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"vcard_edit__button_save\\\"))]}</button>\\n</div>\\n<div class=\\\"vcard-edit-wrap\\\">\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n    <div class=\\\"info-wrap personal-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field first-name\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-first-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_given_name'))]}\\\" type=\\\"text\\\" name=\\\"first_name\\\">\\n        </div>\\n        <div class=\\\"input-field middle-name\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-middle-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_middle_name'))]}\\\" type=\\\"text\\\" name=\\\"middle_name\\\">\\n        </div>\\n        <div class=\\\"input-field last-name\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-last-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_family_name'))]}\\\" type=\\\"text\\\" name=\\\"last_name\\\">\\n        </div>\\n        <div class=\\\"input-field fullname\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-fullname\\\" placeholder=\\\"{[print(xabber.getString('vcard_full_name'))]}\\\" type=\\\"text\\\" name=\\\"fullname\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n    <div class=\\\"info-wrap nickname-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field nickname\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-nickname\\\" placeholder=\\\"{[print(xabber.getString('vcard_nick_name'))]}\\\" type=\\\"text\\\" name=\\\"nickname\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n    <div class=\\\"info-wrap birthday-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field birthday\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-birthday\\\" placeholder=\\\"{[print(xabber.getString('vcard_birth_date_placeholder'))]}\\\" type=\\\"text\\\" class=\\\"datepicker\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_job\\\"))]}</div>\\n    <div class=\\\"info-wrap job-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field org-name\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-org-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_organization'))]}\\\" type=\\\"text\\\" name=\\\"org_name\\\">\\n        </div>\\n        <div class=\\\"input-field job-title\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-job-title\\\" placeholder=\\\"{[print(xabber.getString('vcard_title'))]}\\\" type=\\\"text\\\" name=\\\"job_title\\\">\\n        </div>\\n        <div class=\\\"input-field org-unit\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-org-unit\\\" placeholder=\\\"{[print(xabber.getString('vcard_organization_unit'))]}\\\" type=\\\"text\\\" name=\\\"org_unit\\\">\\n        </div>\\n        <div class=\\\"input-field role\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-role\\\" placeholder=\\\"{[print(xabber.getString('vcard_role'))]}\\\" type=\\\"text\\\" name=\\\"role\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n    <div class=\\\"info-wrap site-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"web\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field url\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-url\\\" placeholder=\\\"{[print(xabber.getString('vcard_url_placeholder'))]}\\\" type=\\\"text\\\" name=\\\"url\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field description\\\">\\n            <textarea id=\\\"{{view.cid}}-description\\\" placeholder=\\\"{[print(xabber.getString('vcard_decsription_placeholder'))]}\\\" type=\\\"text\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"text-field textarea-glow input-glow account-glow\\\" name=\\\"description\\\"></textarea>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n    <div class=\\\"info-wrap phone-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field phone-work\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-phone-work\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_work'))]}\\\" type=\\\"text\\\" name=\\\"phone_work\\\">\\n        </div>\\n        <div class=\\\"input-field phone-home\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-phone-home\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_home'))]}\\\" type=\\\"text\\\" name=\\\"phone_home\\\">\\n        </div>\\n        <div class=\\\"input-field phone-mobile\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-phone-mobile\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_mobile'))]}\\\" type=\\\"text\\\" name=\\\"phone_mobile\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n    <div class=\\\"info-wrap email-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"email\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field email-work\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-email-work\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_work'))]}\\\" type=\\\"text\\\" name=\\\"email_work\\\">\\n        </div>\\n        <div class=\\\"input-field email-home\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-email-home\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_personal'))]}\\\" type=\\\"text\\\" name=\\\"email_home\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_home_address\\\"))]}</div>\\n    <div class=\\\"info-wrap address-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"address\\\"></svg>\\n        </div>\\n        <div class=\\\"input-wrap address-wrap address-home-wrap\\\">\\n            <div class=\\\"input-field pobox\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-po-home-box\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pobox'))]}\\\" type=\\\"text\\\" name=\\\"po_home_box\\\">\\n            </div>\\n            <div class=\\\"input-field extadd\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-extadd\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_extadr'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_extadd\\\">\\n            </div>\\n            <div class=\\\"input-field street\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-street\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_street'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_street\\\">\\n            </div>\\n            <div class=\\\"input-field locality\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-locality\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_locality'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_locality\\\">\\n            </div>\\n            <div class=\\\"input-field region\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-region\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_region'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_region\\\">\\n            </div>\\n            <div class=\\\"input-field pcode\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-pcode\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pcode'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_pcode\\\">\\n            </div>\\n            <div class=\\\"input-field country\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-country\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_ctry'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_country\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_work_address\\\"))]}</div>\\n    <div class=\\\"info-wrap address-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"address\\\"></svg>\\n        </div>\\n        <div class=\\\"input-wrap address-wrap address-work-wrap\\\">\\n            <div class=\\\"input-field pobox\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-po-work-box\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pobox'))]}\\\" type=\\\"text\\\" name=\\\"po_work_box\\\">\\n            </div>\\n            <div class=\\\"input-field extadd\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-extadd\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_extadr'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_extadd\\\">\\n            </div>\\n            <div class=\\\"input-field street\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-street\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_street'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_street\\\">\\n            </div>\\n            <div class=\\\"input-field locality\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-locality\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_locality'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_locality\\\">\\n            </div>\\n            <div class=\\\"input-field region\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-region\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_region'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_region\\\">\\n            </div>\\n            <div class=\\\"input-field pcode\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-pcode\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pcode'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_pcode\\\">\\n            </div>\\n            <div class=\\\"input-field country\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-country\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_ctry'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_country\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"vcard-wrap\\\">\\n    <button class=\\\"btn-vcard-edit btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</button>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <div class=\\\"btn-vcard-refresh\\\">\\n        <div class=\\\"button\\\">\\n            <i class=\\\"mdi mdi-20px mdi-refresh\\\"></i>\\n        </div>\\n        <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"vcard-wrap\\\">\\n    <div class=\\\"info-wrap jid-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info jabber-id\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap nickname-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info nickname\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap personal-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info first-name\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info last-name\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap birthday-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info birthday\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap site-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info url\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap more\\\">\\n        <div class=\\\"show-vcard\\\">\\n            {[print(xabber.getString(\\\"contact_vcard_more\\\"))]}\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"full-vcard-wrap\\\">\\n    <div class=\\\"full-vcard-content\\\">\\n        <div class=\\\"vcard-header block-header\\\">\\n            <div class=\\\"vcard-header-title\\\">\\n                <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_vcard_header_title\\\"))]}</span>\\n            </div>\\n            <div class=\\\"main-info\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar\\\"></div>\\n                </div>\\n                <div class=\\\"text-info\\\">\\n                    <div class=\\\"name-wrap\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"vcard-list\\\">\\n            <div class=\\\"info-wrap jid-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info jabber-id\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap nickname-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info nickname\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap personal-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info first-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info middle-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_middle_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info last-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info fullname\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_full_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap birthday-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info birthday\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap job-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info org-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info job-title\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_title\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info org-unit\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization_unit\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info role\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_role\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap site-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info url\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap description-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info description\\\">\\n                        <div class=\\\"value\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap phone-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-work\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-home\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-mobile\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_mobile\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-default\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap email-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"email-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-work\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-home\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-default\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap address-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-home\\\">\\n                        <div class=\\\"pobox value one-line\\\"></div>\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-work\\\">\\n                        <div class=\\\"pobox value one-line\\\"></div>\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-default\\\">\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_address\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"resources-block-wrap hidden\\\">\\n                <div class=\\\"resources-wrap\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","module.exports = {\"background-images\":{\"image\":[{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0293+he.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-A0tXm8gjfMU/U08VDMRGtuI/AAAAAAAAvrI/IQEscTGZyJY/s1920-w1920-h1080-c/IMG_0293%2Bhe.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0660.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-wkrGBuk0DoA/Us9JnUoXnTI/AAAAAAAAkTA/yDQexzLKhKY/s1920-w1920-h1080-c/DSC_0660.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071227-4144-PtLomaReef.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-1xZqgaRDIec/Tg1dMJq1vBI/AAAAAAAAALc/7m0Tpv2htVc/s1920-w1920-h1080-c/071227-4144-PtLomaReef.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/976865336_a+view+of+queenstown.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-36YdSRh6q9w/TgtZEChvrkI/AAAAAAAJA0M/zVvIUAdwQ3Q/s1920-w1920-h1080-c/976865336_a%2Bview%2Bof%2Bqueenstown.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB-MarshallBeach-lightSky.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/--L7AhWZit78/TysVss3ThoI/AAAAAAAARho/n2ToQ-2Kw7g/s1920-w1920-h1080-c/GGB-MarshallBeach-lightSky.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01079+(1).png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-ePzy0PYNkjY/ToE9F9iPxKI/AAAAAAAAsWg/o7LkkqWEs2o/s1920-w1920-h1080-c/DSC01079%2B%25281%2529.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8492_HDR-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-pnosgcd6G2c/UbheNBeniVI/AAAAAAAAWp0/hSEX3IwAgyI/s1920-w1920-h1080-c/DSC_8492_HDR-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/02202012-04.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-El8tXEJMqm4/UOD9tk8_rkI/AAAAAAAAkM0/sZP34rwkVsQ/s1920-w1920-h1080-c/02202012-04.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20100530_120257_0273-Edit-2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-EpsKJMBxb6I/TBpXudG4_PI/AAAAAAABEHk/_knVZZOptTY/s1920-w1920-h1080-c/20100530_120257_0273-Edit-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Lines.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Ot1wFdQdaqw/UBSl7ewGOkI/AAAAAAAAPd4/3tUkrKTWDgM/s1920-w1920-h1080-c/Lines.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DunesEdge.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-WbNq4f1kE7Y/Tu9tVtXGCYI/AAAAAAABFWY/N9NL1MKUt4A/s1920-w1920-h1080-c/DunesEdge.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_2857.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-YPiBdTDD5Vo/UpExbztAgWI/AAAAAAAAFg8/8n5CyP4w8Ps/s1920-w1920-h1080-c/DSC_2857.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0513-edited.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-CY6T5q8rqmA/UZWyvmYhLYI/AAAAAAAAAw4/Pi0Uy3nq19I/s1920-w1920-h1080-c/DSC_0513-edited.jpeg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/stuck_04.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-fc8aRqsAEzk/U0MjlhykUtI/AAAAAAAJF1s/nRoV1Yk1z2E/s1920-w1920-h1080-c/stuck_04.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Dandelion_.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ExqBtlpobeE/T-aKZZzVcKI/AAAAAAABhl4/jrErtktlcuA/s1920-w1920-h1080-c/Dandelion_.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8670434759_91e92fd1ee_k.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-3nqLFWiEm3E/UXXCrC5RBeI/AAAAAAAANoY/8_ktEhLdCLs/s1920-w1920-h1080-c/8670434759_91e92fd1ee_k.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/2049233526_19f97ff57f_o.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-gJmej39yU_c/TgtZECWgTtI/AAAAAAAJFFY/Y0nVr5_Tchg/s1920-w1920-h1080-c/2049233526_19f97ff57f_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RodeoBeach-firespinning-2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-teMxOetSsy0/TwNDboHbM0I/AAAAAAABFao/F9yQHylkRdo/s1920-w1920-h1080-c/RodeoBeach-firespinning-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Iceland.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-rF8zodn1xAI/U_yjoZyDgcI/AAAAAAAB-38/U62D7hi4-NU/s1920-w1920-h1080-c/20140204_Iceland_0234_5_6_32bit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6887-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-KiRwrTTHEWk/UdFoWqh2bFI/AAAAAAAAXhA/6PIDVYH9nFY/s1920-w1920-h1080-c/DSC_6887-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SealRocks-sunset-beach-rock.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-6_QxmRRnJO8/TwjqsB2kshI/AAAAAAABFZw/__-irT00R2k/s1920-w1920-h1080-c/SealRocks-sunset-beach-rock.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_7112.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-HWAadtEQKQE/UtTyRxs2u4I/AAAAAAAAOhk/Y3jT0QJtdhQ/s1920-w1920-h1080-c/DSC_7112.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Invitation.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-5NKrifl_xpo/UUxwAqoj7nI/AAAAAAAAwGk/82Dkiz_sEaw/s1920-w1920-h1080-c/Invitation.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_DX_7114-Edit-Recovered.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-W5qc4LH_lpo/U_yjzHjSpzI/AAAAAAAB-7E/8MQAw4fsEJc/s1920-w1920-h1080-c/_DX_7114-Edit-Recovered.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP8993.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-sy3wa9ofb38/UQtPlF6YOQI/AAAAAAAAfXc/9uYpeM68vOc/s1920-w1920-h1080-c/IMGP8993.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/dsc_4194.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-cFySK9YoOOI/SwTDSXWTa2I/AAAAAAABNnY/1VFL3dYXkgA/s1920-w1920-h1080-c/dsc_4194.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/panthercreek_7509-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-JoKkOqJLegk/T7KQORntaBI/AAAAAAABjLg/FbmDYu5k3DY/s1920-w1920-h1080-c/panthercreek_7509-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6464.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-RYt_J-BlGJs/UmBWyVrQZII/AAAAAAAAFAA/9Y9zqjdXQeU/s1920-w1920-h1080-c/DSC_6464.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/080820-5209-MakenaLL.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-6IrulujJPwU/Tg1d_n1nptI/AAAAAAAAAMc/O4OAV6udX8Y/s1920-w1920-h1080-c/080820-5209-MakenaLL.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_5300.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-cn-CS-vxFn4/UtTvqLzjmrI/AAAAAAAAX3Y/OdfK9XhRGeE/s1920-w1920-h1080-c/DSC_5300.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/080327-4706-JoshuaTreeOasis.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-mwobIYTjtko/Tg1dd90GDjI/AAAAAAAAAL0/M_NjYSMqoG0/s1920-w1920-h1080-c/080327-4706-JoshuaTreeOasis.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/217440037_8ca190627e_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-EjnJBBcvhrU/TgtZEIVpLlI/AAAAAAAJJ5s/CQK74NolX7E/s1920-w1920-h1080-c/217440037_8ca190627e_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MSU_1184.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-lM1sKRbIu7A/T_mdon8mP-I/AAAAAAAAAwc/SJMO-kWHQLY/s1920-w1920-h1080-c/MSU_1184.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0537-Edit-Edit-Edit-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-HfCYnCbpqww/Us1HNtNz00I/AAAAAAAAkFE/UJChD7bbmm0/s1920-w1920-h1080-c/DSC_0537-Edit-Edit-Edit-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TetonShwabacher.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-gi8-azW5hAQ/UGdSQqk9G_I/AAAAAAAAJto/inIHRwOCy3c/s1920-w1920-h1080-c/TetonShwabacher.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/PVK_5178.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-zAuJ1AZC34Y/TrsJH22VV5I/AAAAAAAAEvc/EzBqDb6tQRE/s1920-w1920-h1080-c/PVK_5178.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3824+pe.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-QgFnhS9tfuI/U0tzKPZox-I/AAAAAAAAvhg/EjRaa8ETaYM/s1920-w1920-h1080-c/IMG_3824%2Bpe.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/101016-4858-GrayWhaleGran1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-gb7vG0Z6jrU/Tg1gas5e87I/AAAAAAAAAPY/4zsNQt6LotI/s1920-w1920-h1080-c/101016-4858-GrayWhaleGran1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+Queenstown+Aurora+Australis.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-F1T9flY075Y/U0Mgnwr2AJI/AAAAAAAJBJY/eeooel6-ZXY/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BQueenstown%2BAurora%2BAustralis.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_4393.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-RtJjOCkuYL8/UtTvDO3sraI/AAAAAAAAX3c/VVVtMV1yPW0/s1920-w1920-h1080-c/DSC_4393.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-road-to-paradise.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-2Lhxkz2EBz4/U0MlX7aExHI/AAAAAAAJXMc/Lh1kPpcrBi8/s1920-w1920-h1080-c/trey-ratcliff-road-to-paradise.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Sunrise+in+Sangam.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-7X44UiG6ohw/Ua2Qmj06zkI/AAAAAAAAfYA/owBHOfu6u_I/s1280-w1280-c-h720-k-no/Sunrise%2Bin%2BSangam\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061012-1109-PigeonPEve.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-r3D0LQrT3K4/Tg1bQhpX5hI/AAAAAAAAAIs/ONg4BWnADUM/s1920-w1920-h1080-c/061012-1109-PigeonPEve.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Motion.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-eYFfx8sHLZY/UBSl8KkdpRI/AAAAAAAAPeA/5sJreKxzLYc/s1920-w1920-h1080-c/Motion.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGate+Dawn+from+Slacker+Hill.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-GYfXywevB-4/UtTtugxGWlI/AAAAAAAAXpw/e5tyHYdIIK0/s1920-w1920-h1080-c/GGate%2BDawn%2Bfrom%2BSlacker%2BHill.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_7006-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-iqs_ihvxlzM/Ur0B20OjdgI/AAAAAAAAF7Y/yJ1rAuyEQjQ/s1920-w1920-h1080-c/IMG_7006-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MoraineLake.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-YNlHO0F-y_U/UoazYeYqMvI/AAAAAAAAVqg/h8tLY6Zwktw/s1920-w1920-h1080-c/MoraineLake.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/12-11-12-original.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-qdhLu3VPZU8/Uqjrkz-1dzI/AAAAAAAAYTY/Is8QaEy3rZo/s1920-w1920-h1080-c/12-11-12-original.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20090411_132734_.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-0EQ-4alz8RY/S9aXij2EEzI/AAAAAAABDQ8/SUAUmq9rm60/s1920-w1920-h1080-c/20090411_132734_.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Seattle_BrianMatiash.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-BK4o8MjAzHY/T6vkuyTuQ7I/AAAAAAAIovQ/rWAnhK0bJqQ/s1920-w1920-h1080-c/Seattle_BrianMatiash.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Infinity+of+Tokyo.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-vCWMbf5t3RI/U0MbNIFWMsI/AAAAAAAJA-w/hbek0tN8Oqk/s1920-w1920-h1080-c/The%2BInfinity%2Bof%2BTokyo.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/PatriciaLake.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-oMSn89uorIA/UktkPI4oEVI/AAAAAAAAVqo/d_0ZasIPfnc/s1920-w1920-h1080-c/PatriciaLake.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/02212012-08.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-_ApXZ5TKn2Y/UOD9xbbz3OI/AAAAAAAAkNY/p6fXkvjZNY8/s1920-w1920-h1080-c/02212012-08.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/LandsEnds-le-sunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-aqN5sgbqggQ/T3sLvuIoTmI/AAAAAAABFlQ/jxR2IgWbFM4/s1920-w1920-h1080-c/LandsEnds-le-sunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Approaching+Yosemite.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-bEYj5hwZ1G8/U0MSbgTqo4I/AAAAAAAJF9c/ijCLJ4jvSuU/s1920-w1920-h1080-c/Approaching%2BYosemite.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Rust.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-B7_iA_X9u6k/UBSl-nRhkxI/AAAAAAAAPeg/QCRwYky8OXM/s1920-w1920-h1080-c/Rust.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3054580997_b9c89c7d9f_o.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-KilhfjagQZw/TgtZGB0uBJI/AAAAAAAJXZc/rjj3xvxSkso/s1920-w1920-h1080-c/3054580997_b9c89c7d9f_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0853-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-3dXv-q-kMJg/Ute8DoCJgSI/AAAAAAAAlHI/A3PJNXvm8g4/s1920-w1920-h1080-c/DSC_0853-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Across+the+Alaskan+Fjords.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-h782AeqXwL4/U0MTcwzNuyI/AAAAAAAJBlg/B0ICHy6uj-I/s1920-w1920-h1080-c/Across%2Bthe%2BAlaskan%2BFjords.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP0592.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-rOuBbaxoNAU/T-zOq9MmziI/AAAAAAAABdU/y24M7n3oj70/s1920-w1920-h1080-c/IMGP0592.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071121-3891-MontcitoMorn.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-X5n9ak4dE1s/Tg1c8c9xvWI/AAAAAAAAALE/M9bf_hSgUHI/s1920-w1920-h1080-c/071121-3891-MontcitoMorn.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8551.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-0QWWEWkAEkA/UTmo6qnkIgI/AAAAAAAAWsU/VIzT5UsUyh8/s1920-w1920-h1080-c/DSC_8551.png\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_20130330_120430-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-f1YF98XfEmY/UVmHsvQBxvI/AAAAAAAAT9g/0Uk7XjxUFCw/s1920-w1920-h1080-c/IMG_20130330_120430-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SutroSunset-surf-burn.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-zcGhuTDGZ7Q/TvI44kbopOI/AAAAAAABFaY/677iL2Z8O8s/s1920-w1920-h1080-c/SutroSunset-surf-burn.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Beach.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-lMCO5r3MLUQ/UZURZdDoWWI/AAAAAAAAPOU/FayJm6cQrN4/s1920-w1920-h1080-c/The%2BBeach.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Take+It+or+Leave+It.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-jrCbEVo5pok/UTUniMfAPQI/AAAAAAAAMlc/taFKyOwN7ro/s1920-w1920-h1080-c/Take%2BIt%2Bor%2BLeave%2BIt.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ENS-+Macro+Snow-.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-JMRLCkgYWUI/UR0He_hKbyI/AAAAAAAAOyM/Fjml1QshbrU/s1920-w1920-h1080-c/ENS-%2BMacro%2BSnow-.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1351.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-DHg264B2vlg/Ul9y7zxl9iI/AAAAAAAAE6A/KNGHpq_cH1M/s1920-w1920-h1080-c/DSC_1351.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_7939+he.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-lA8lfuSjpBY/U0tzavr8B0I/AAAAAAAAvh8/YNJ4VVT6axk/s1920-w1920-h1080-c/IMG_7939%2Bhe.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071124-3917-BigSurSky.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-vQXExn8x3Wo/Tg1dCJ3WSJI/AAAAAAAAALM/j6v5p4iMLDc/s1920-w1920-h1080-c/071124-3917-BigSurSky.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3189889363_6357f5f645_o.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-mA6_1F0fM7U/TgtZGJt2oII/AAAAAAAJKTg/te1m0BOVycg/s1920-w1920-h1080-c/3189889363_6357f5f645_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01070+Mosaic.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-nCN9lgyjKd0/UpBNC_yRLBI/AAAAAAAAD_s/xH5Pb5wEGH4/s1920-w1920-h1080-c/DSC01070%2BMosaic.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1182.CR2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-2y17u99oVV8/TwyPAbOBPqI/AAAAAAAAF9w/EQOhIwGaHiA/s1920-w1920-h1080-c/IMG_1182.CR2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Grassy+Roof.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Y_Bp6GUWfSE/U0Maxnb6OyI/AAAAAAAJA4U/a05iPi39_7c/s1920-w1920-h1080-c/The%2BGrassy%2BRoof.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Seal+Rocks-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-rQdS7R8LdHM/T1Jy2z5kZcI/AAAAAAABFZY/Cqb-Q9aWw2Q/s1920-w1920-h1080-c/Seal%2BRocks-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MountainSplendor.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-f6OToCJWRrg/UUsOySkJXoI/AAAAAAAATgk/DWwubrzxFPY/s1920-w1920-h1080-c/MountainSplendor.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_4460.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GQv4Q_NZKH8/UDZ1v6AEcSI/AAAAAAAA6ik/i90ZeH2jexc/s1920-w1920-h1080-c/IMG_4460.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untitled+(101+of+207).png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-tw3AkYSVojM/U0MlwltSINI/AAAAAAAJBMA/7_5x_BUOOww/s1920-w1920-h1080-c/untitled%2B%2528101%2Bof%2B207%2529.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6674-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-X3k5JeDbKW4/UZtfuMrJ49I/AAAAAAAAVpI/Qy3yA3weGXM/s1920-w1920-h1080-c/DSC_6674-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/5-07-13-hodgeman-ks-lightning-supercell.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-NE7B7ZtjC9M/UknSexY2-_I/AAAAAAAAN6g/od62b4KTS9U/s1920-w1920-h1080-c/5-07-13-hodgeman-ks-lightning-supercell.png\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Thamserku.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-gvCvkN6ll9Y/UtRUq4mYc8I/AAAAAAAAGpo/RecztlhW01k/s1920-w1920-h1080-c/Thamserku.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ohau-cliff-hawaii-trey-ratcliff.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-lKPOvxP_3hQ/U0MjW1IS8QI/AAAAAAAJBP4/qTn4pFXZq_8/s1920-w1920-h1080-c/ohau-cliff-hawaii-trey-ratcliff.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/7439storm2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-PBAhFhrSEPM/Ugj3wyodrvI/AAAAAAAAIOs/Fo7lNmwWNu0/s1920-w1920-h1080-c/7439storm2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/bondi_sml.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-OuaQJ-ktrms/TmH7HMco5NI/AAAAAAAADYk/CvmoywXR_ck/s1920-w1920-h1080-c/bondi_sml.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+China+2011+-+A+Great+Wall+at+Sunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Bm8YwGRxgzI/U0MfR72bkDI/AAAAAAAJKHE/TKs1mWF8US4/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BChina%2B2011%2B-%2BA%2BGreat%2BWall%2Bat%2BSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TwilightRocks_SanMateoCoast-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-WiGnP1yACq0/T2-Ib08jHdI/AAAAAAABFaw/uRs4YlY_qss/s1920-w1920-h1080-c/TwilightRocks_SanMateoCoast-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Farm+of+Eden.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-To5JBx7eAO4/U0MaTRPOM4I/AAAAAAAJEWM/8Bgvm9uL6Do/s1920-w1920-h1080-c/The%2BFarm%2Bof%2BEden.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8031438226_5713c1a86c_o.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-VeCrM9fKDYw/UkPR39wFICI/AAAAAAAALrQ/1VmRr7zq_N4/s1920-w1920-h1080-c/8031438226_5713c1a86c_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061012-1078-PelicanCove.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Hn2QgYPEDxo/Tg1bUgAlTfI/AAAAAAAAAI0/R33ZpN3IaJ8/s1920-w1920-h1080-c/061012-1078-PelicanCove.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC03916+Green+Leaf+Texture.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Lpppujp4Qb4/UpBTNYFdx7I/AAAAAAAAD_4/SCgq46wEvcU/s1920-w1920-h1080-c/DSC03916%2BGreen%2BLeaf%2BTexture.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Fickle+Mistress.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Z9mJn5vva2U/T6sVZGdrvgI/AAAAAAAAdAo/rdpy_ia2NS8/s1920-w1920-h1080-c/The%2BFickle%2BMistress.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090227-0384-McCluresPoint.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-K7DKKrLhMec/Tg1eUKdLbXI/AAAAAAAAAM4/BaH6ytbEX4U/s1920-w1920-h1080-c/090227-0384-McCluresPoint.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/080816-4952-WaianSands.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-tCgHZWwSulc/Tg1dtfmRPHI/AAAAAAAAAMI/ol6-WLOo7WU/s1920-w1920-h1080-c/080816-4952-WaianSands.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0684.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-xOVjmeJjM3o/TqtYP_buAoI/AAAAAAAAFlA/xUHqJSkr-MU/s1920-w1920-h1080-c/IMG_0684.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071229-4276-LaJollaFalls.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-e6TcvHbkNxo/Tg1dYGAJKTI/AAAAAAAAALw/_t-M3-wmbeg/s1920-w1920-h1080-c/071229-4276-LaJollaFalls.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090911-2088-AngelIslandSky2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-n76GULHmI8U/Tg1fNmGyDbI/AAAAAAAAAOA/pNieTMoo0ro/s1920-w1920-h1080-c/090911-2088-AngelIslandSky2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1134103121_gateway+to+the+temple+of+heaven.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-08NVs0omPPw/TgtZEFlihuI/AAAAAAAJBBo/KKdqrpOP5Z0/s1920-w1920-h1080-c/1134103121_gateway%2Bto%2Bthe%2Btemple%2Bof%2Bheaven.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DolphinWalk.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-WHdVljxASJk/UOue-BcvLNI/AAAAAAAAwoo/ENRQQBJtKsA/s1920-w1920-h1080-c/DolphinWalk.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Red+paint+on+rock!.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-1OMPOm50As0/Ua2didd-IjI/AAAAAAAAfX4/afXkw0vQ4Nc/s1280-w1280-c-h720-k-no/Red%2Bpaint%2Bon%2Brock%2521\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/5-20-11-sunset-clouds365-kdelay.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-sVsjQwFKpM0/UFN9mKAiexI/AAAAAAAASuM/qpOQevOJY8k/s1920-w1920-h1080-c/5-20-11-sunset-clouds365-kdelay.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/maui-13.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-A5xnIm26hoM/UQ6xWBcP60I/AAAAAAAAFZI/xCilpfxW-3Y/s1920-w1920-h1080-c/maui-13.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Sloat-SunsetBeachFoam.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-2oWY5eMxbnY/TwJ1W3DnAII/AAAAAAABFbs/V9UTfZKkOnM/s1920-w1920-h1080-c/Sloat-SunsetBeachFoam.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6436.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Hjg_1FAJV7k/T8miVTXavMI/AAAAAAAAIgo/Ksveh_v5Pws/s1920-w1920-h1080-c/DSC_6436.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090501-0963-CycloneOfLt.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-duWLWrx3RtU/Tg1erB-vvtI/AAAAAAAAANU/3iD8-ATfJsw/s1920-w1920-h1080-c/090501-0963-CycloneOfLt.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1189866210_spanish+sunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-zAb56uSfuX0/TgtZEG6yqnI/AAAAAAAJBDQ/5prXR1sSzyU/s1920-w1920-h1080-c/1189866210_spanish%2Bsunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_5433.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-dN576MDlyEM/TiRJgIjUtZI/AAAAAAAD6lY/sbNK1sQOiow/s1920-w1920-h1080-c/IMG_5433.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A4957.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-7EJI2_bMWrg/U0_6WXfnu0I/AAAAAAAA2IA/qnv2qDY374E/s1920-w1920-h1080-c/388A4957.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Olmsted-Sunset-1.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-_X4BN2gmOh4/TqTdEJ8Q95I/AAAAAAAAEx4/4HIX-pD4OuI/s1920-w1920-h1080-c/Olmsted-Sunset-1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/new-england-4.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-z9s9Br2P5fo/UKZedhD_eYI/AAAAAAAACfk/2-qRWoFQDcs/s1920-w1920-h1080-c/new-england-4.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20101103_TorresDelPaine_Cuernos_Horns_6215_blended-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-9VBXTbvWld0/U_yjmbN6zVI/AAAAAAAB-3c/rSgR3kL3uTQ/s1920-w1920-h1080-c/20101103_TorresDelPaine_Cuernos_Horns_6215_blended-Edit-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/bodie-11.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-NFuPWEa3vrE/UFs2mhJrWQI/AAAAAAAAST4/QAg74w1fZpI/s1920-w1920-h1080-c/bodie-11.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP8003.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-xjlOWCsBOHg/UL2Bg7-fWJI/AAAAAAAAEQM/_Af3LToQDmg/s1920-w1920-h1080-c/IMGP8003.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20110710-160024.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GN97YhnT3Qo/Tj1SVC1wv-I/AAAAAAAADi0/upwFGIqVhPQ/s1920-w1920-h1080-c/20110710-160024.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/River+and+Mount.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-mdbG7ZFFzKQ/U0MX5tKa1vI/AAAAAAAJCBM/XGhf_-p25Ys/s1920-w1920-h1080-c/River%2Band%2BMount.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/060607-0405-PillarsPast.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-USkNl2UVpk8/Tg1a6ynrEKI/AAAAAAAAc0c/fcUJz1E5SKw/s1920-w1920-h1080-c/060607-0405-PillarsPast.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8949932059_416d4806ab_o.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-rU4h5IKilhs/UbC8PJyZCII/AAAAAAAABBo/tPQZAwV8nxA/s1920-w1920-h1080-c/8949932059_416d4806ab_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untitled-5.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-iXtTEIicPCE/Thz5P1Y-mFI/AAAAAAACqmA/QwzDzmHWk94/s1920-w1920-h1080-c/untitled-5.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20140105-untitled+shoot-2908_HDR_HDR.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-kM5nzgAtWSI/Us2ewqEBtFI/AAAAAAAABiM/iwvLzC2OMEk/s1920-w1920-h1080-c/20140105-untitled%2Bshoot-2908_HDR_HDR.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100731-4524-HapunaLight1.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-EF8NaWPwjTM/Tg1gLGBR_9I/AAAAAAAAAPE/3DlU_Kv1HHQ/s1920-w1920-h1080-c/100731-4524-HapunaLight1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TetonSnakeOverlook.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-RCFt3utBaXk/UE5kxyUxo6I/AAAAAAAAJWQ/jtgzKjcGfuU/s1920-w1920-h1080-c/TetonSnakeOverlook.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20120212-IMG_4250.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-5FV5VQzT0WQ/Tzy0dNznpGI/AAAAAAAAEwc/5uIfwjNBMhc/s1920-w1920-h1080-c/20120212-IMG_4250.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100312-3521-MonolithicLight1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-KKZmrbmQdYM/Tg1fx0f9EaI/AAAAAAAAAOs/zg07LmkK2eg/s1920-w1920-h1080-c/100312-3521-MonolithicLight1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8156803630_fcb67dbe98_k.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-p3T0Z0zLK5E/UJhoD6_Ac1I/AAAAAAAAgMQ/fqQxNGKpL-c/s1920-w1920-h1080-c/8156803630_fcb67dbe98_k.jpeg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/4088949046_5d094cb2e2_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-yX9BOjrswig/TgtZEPKtS_I/AAAAAAAJEmo/jrnHGoDlpHw/s1920-w1920-h1080-c/4088949046_5d094cb2e2_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8621-2-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-4eLicoBRkAQ/Uc7OMQqqKMI/AAAAAAAAXbw/eMQHZ3fhXGA/s1920-w1920-h1080-c/DSC_8621-2-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1171692863_the+eiffel+from+beneath.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-PQQBBUfBmNs/TgtZENaPpRI/AAAAAAAJA1Y/mfOoa5PJw4g/s1920-w1920-h1080-c/1171692863_the%2Beiffel%2Bfrom%2Bbeneath.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/A+Sunset+on+a+Texas+Farm.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-9-6Sd41GxEQ/U0MR8Gvqf4I/AAAAAAAJRB0/9fYITnA4fQk/s1920-w1920-h1080-c/A%2BSunset%2Bon%2Ba%2BTexas%2BFarm.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/300928932_3bf6d408df_o.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-DfDrf9tZth0/TgtZGBjmXqI/AAAAAAAJA_A/e6jq_VQrXaY/s1920-w1920-h1080-c/300928932_3bf6d408df_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ReflectingMoonlight.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-B7gaJXyGoIs/UHOmYB8GzPI/AAAAAAAAwHA/MGpwJlaw7Yw/s1920-w1920-h1080-c/Reflecting%25252520Moonlight.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Solar+Flower.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-zuD-bqjkRMs/U0MdYYTiWJI/AAAAAAAJJLE/xEEn0-D32-Q/s1920-w1920-h1080-c/The%2BSolar%2BFlower.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061119-1290-HaenaSurf.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-DtOOMCEQEzs/Tg1baI_IkFI/AAAAAAAAc0g/4HYnmK0I21k/s1920-w1920-h1080-c/061119-1290-HaenaSurf.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3425202839_7a6b829432_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Mo0DARoQ5pg/TgtZGObV66I/AAAAAAAJA4A/x3NBiBZ1T08/s1920-w1920-h1080-c/3425202839_7a6b829432_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A3302.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-EGI_DF6_jjM/U0_6WeYaAcI/AAAAAAAA2IA/onrkX5wYXC0/s1920-w1920-h1080-c/388A3302.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2388+e.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-uWYftkrNY7Y/U08nbhRFXEI/AAAAAAAAvt8/Jvqvy9ZX7Rw/s1920-w1920-h1080-c/IMG_2388%2Be.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/060506-0094-Farscape.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-mB0CsB02334/Tg1a0rca9TI/AAAAAAAAc0M/poMn2aae0XU/s1920-w1920-h1080-c/060506-0094-Farscape.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090102-0143-SeaAndStorm.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-rqPXOCN3Sf4/Tg1eJr7jzJI/AAAAAAAAAMs/neSQj8_NJbQ/s1920-w1920-h1080-c/090102-0143-SeaAndStorm.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB-Wave_mono-square.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-_9KsThqIDII/TsKQNHpnMcI/AAAAAAABFcM/myl4tBgFSMs/s1920-w1920-h1080-c/GGB-Wave_mono-square.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_2817.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-KTagpsQRiZw/Tk84FHT3wvI/AAAAAAABMJE/lGUSRehuqK0/s1920-w1920-h1080-c/DSC_2817.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/A+Morning+at+the+Secret+Lak2e.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-r9JZ23uiJdw/U0MRzWVvfDI/AAAAAAAJA5Q/4xCghAQGdp8/s1920-w1920-h1080-c/A%2BMorning%2Bat%2Bthe%2BSecret%2BLak2e.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/C21T0817.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-s8Arhr77hCs/UqTF_xWLYVI/AAAAAAAAXK8/uRcPFpV7CPM/s1920-w1920-h1080-c/C21T0817.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/091009-2169-LibOfAges3.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-VeOuV8_xtzQ/Tg1fcY4BfBI/AAAAAAAAAOQ/y0D10NZbTOw/s1920-w1920-h1080-c/091009-2169-LibOfAges3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SFBay-Sunrise-Hank-n-Pilings-2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-NZ_Ll43savw/TzCKeTsXQHI/AAAAAAAASAc/n4AJeYm6ehA/s1920-w1920-h1080-c/SFBay-Sunrise-Hank-n-Pilings-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Adventure+in+Argentina-7283-March+31,+2009-2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-q7WJKw9Oqog/U0MSH9OpjdI/AAAAAAAJGxU/FDOzRfCcMro/s1920-w1920-h1080-c/Adventure%2Bin%2BArgentina-7283-March%2B31%252C%2B2009-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SunetReflection_16x9-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/--s1xvTZu_8s/TvEFum2qOkI/AAAAAAABFiQ/RVtjU4CacrI/s1920-w1920-h1080-c/SunetReflection_16x9-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1221.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-id9Mf91TyIg/UQmGXFzYiAI/AAAAAAAAlfo/n2RM1udWSeM/s1920-w1920-h1080-c/IMG_1221.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey-Ratcliff-New-Zealand+(362+of+696).png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-4-wMlkvbnxI/U0MiMX47iJI/AAAAAAAJJJ8/lstLqeHqMOM/s1920-w1920-h1080-c/Trey-Ratcliff-New-Zealand%2B%2528362%2Bof%2B696%2529.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Rocks+of+Iceland.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-7EENXFBPvH8/U0Mc5Ty31YI/AAAAAAAJBIY/d9kb4PcgsXc/s1920-w1920-h1080-c/The%2BRocks%2Bof%2BIceland.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/2012-Favorites-3.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-_TPUkTQ0foE/UOu3R1Fih9I/AAAAAAAAUwU/n2BcAi9lFAI/s1920-w1920-h1080-c/2012-Favorites-3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Exclamation-4.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-p2S6pYJG8TY/UkLZ-2heppI/AAAAAAAAdAo/UEwJsuYTGXM/s1920-w1920-h1080-c/Exclamation-4.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01099+Plant.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-AM_AYNzr-a0/UpBNRCa9JbI/AAAAAAAAD_w/gATI2Qr7EHw/s1920-w1920-h1080-c/DSC01099%2BPlant.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1-24-13.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-k85UvBDxqso/UbdXjw35hhI/AAAAAAAAFh4/E7cP1B2hXgg/s1920-w1920-h1080-c/1-24-13.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/LowerAntelope1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Hy-GW9jdRmM/UOOY4T51IhI/AAAAAAAAKiI/dj3WLyRqMJE/s1920-w1920-h1080-c/LowerAntelope1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DelicateArch.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-lTCOr1mGi98/T0m262j2RnI/AAAAAAAAGbs/4Ab-Mhv-4_A/s1920-w1920-h1080-c/DelicateArch.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_3091-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-dzQdFd1d2cg/UpExTYfIJ6I/AAAAAAAAFgo/jW1vrNByXqg/s1920-w1920-h1080-c/DSC_3091-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Lorne+Road.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-SPVIRuebjx0/U0MWpwm-GJI/AAAAAAAJJKQ/b1X__UQq1K8/s1920-w1920-h1080-c/Lorne%2BRoad.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/110429-7971-Faultlines.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-9evAJAwXovk/Tg1aR0viDRI/AAAAAAAAc0I/TecuJZTaV44/s1920-w1920-h1080-c/110429-7971-Faultlines.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+NEX+7-+Sunset+2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-2Q98cG0kiX8/U0MgMcXhJgI/AAAAAAAJKoU/iqJaKYOi6J0/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BNEX%2B7-%2BSunset%2B2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP8556-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-ree1zkofuLM/UPBTkiEo3pI/AAAAAAAAfWU/t0UKepl53qw/s1920-w1920-h1080-c/IMGP8556-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Most+Beautiful+Road+in+the+World.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Cp1EGSOiT7o/U0MbuGaep5I/AAAAAAAJIA0/Hi4dBFthsQE/s1920-w1920-h1080-c/The%2BMost%2BBeautiful%2BRoad%2Bin%2Bthe%2BWorld.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Chicago.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-KxjcNjAfrow/U0MTi1JasjI/AAAAAAAJKS4/JcqmHStMKgE/s1920-w1920-h1080-c/Chicago.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/070211-2329-GarrapataSurf1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-p8gu7w4UaB0/Tg1cD-zJRXI/AAAAAAAAAJw/xKPs4AJ8WTU/s1920-w1920-h1080-c/070211-2329-GarrapataSurf1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Day+Break+G+.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-KwGZ0753oAA/T_SUbhKUrmI/AAAAAAAAhqg/aN2q0nhUYNA/s1920-w1920-h1080-c/Day%2BBreak%2BG%252B.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/070902-3129-BowlingBall1.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-EIrEuHD0skg/Tg1cUtz3htI/AAAAAAAAc00/ykp5Z4-BtGg/s1920-w1920-h1080-c/070902-3129-BowlingBall1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+OTW+to+Glen.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-ggjaMcHz6Fw/U0Mgf-CsIDI/AAAAAAAJFdQ/iyuO6PIuUdg/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BOTW%2Bto%2BGlen.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/136.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-DZDQ-Jc4VPA/TSjtGSyY5lI/AAAAAAAAkNQ/r8BTRHGP7qI/s1920-w1920-h1080-c/136.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1311-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-smKqSEXvptA/UpZ3FAZqrSI/AAAAAAAAf5w/iIG6Dg0XSKs/s1920-w1920-h1080-c/DSC_1311-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/In+a+Foreign+Land+-+West+Fjords,+Iceland.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-5vOp8Qd9Cr0/UZURZbC6EvI/AAAAAAAAgTY/jZBHwF9W4VU/s1920-w1920-h1080-c/In%2Ba%2BForeign%2BLand%2B-%2BWest%2BFjords%252C%2BIceland.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Hell's+Gate+Bridge-6.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-sZXaqdy-xcA/UKzgVo7pqnI/AAAAAAAAIaA/tvF7kHoKH2I/s1920-w1920-h1080-c/Hell%2527s%2BGate%2BBridge-6.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/End+Game+.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-vYrcLbr_syE/UO0CdVlLb_I/AAAAAAAAgOE/-NoOWCD3-LY/s1920-w1920-h1080-c/End%2BGame%252B.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+China+2011+-+The+Egg+at+Sunset.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-fSZtzjxYoBk/U0MfcOvbsrI/AAAAAAAJBP8/prm689xvgE4/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BChina%2B2011%2B-%2BThe%2BEgg%2Bat%2BSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_8642.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-IFmqkzp2Z74/SlgjPMN0INI/AAAAAAAAJlI/cVrfkqJwBj4/s1920-w1920-h1080-c/IMG_8642.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A3234.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-81O00JEe7GY/U0_6WV9qs6I/AAAAAAAA2IA/xSYNSA5zuIo/s1920-w1920-h1080-c/388A3234.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A4648-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Xb-0VhFJErE/U0_6WZpo_5I/AAAAAAAA2IA/3wWOfPmtuno/s1920-w1920-h1080-c/388A4648-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_2238-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-0gRcRJvCyq8/UYWMMwK-xyI/AAAAAAAAgOg/YAmwDINMMW4/s1920-w1920-h1080-c/MOL_2238-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Kona-Hawaii-Stormy-Sky.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-EgToYDexIWA/TugFtw6MbOI/AAAAAAAAJ_E/AFdXppomBHM/s1920-w1920-h1080-c/Kona-Hawaii-Stormy-Sky.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/BakerBeach-SunsetColor.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-AGyN05vOAVg/Trv455hOvXI/AAAAAAABFag/ruA7zfHRDik/s1920-w1920-h1080-c/BakerBeach-SunsetColor.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/red+bridge+in+late+afternoon.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-voPn3r8W5cQ/TgtZEGX9FFI/AAAAAAAJG7g/wotb_OlghAE/s1920-w1920-h1080-c/red%2Bbridge%2Bin%2Blate%2Bafternoon.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/LandsEnd-sunset-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-i1rPphMhUYQ/T1l7sJNRR5I/AAAAAAABFaA/ISCx26OdOHM/s1920-w1920-h1080-c/LandsEnd-sunset-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20130915-7372-34873c91-2048.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-3d-tkshy_0Y/Um32gHQ1usI/AAAAAAAACGA/O4ZCsNcd1-M/s1920-w1920-h1080-c/20130915-7372-34873c91-2048.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Ocean+Sigh.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-KKLEMMadjkQ/UO8V4We8BYI/AAAAAAAAwHI/245vkVmGU8w/s1920-w1920-h1080-c/Ocean%2BSigh.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RodeoCove-SmallSunset-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-cFtlqrFqSy0/Tpr3ij-CA7I/AAAAAAABC7g/PhNSHOv9-dw/s1920-w1920-h1080-c/RodeoCove-SmallSunset-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1556-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-01ZxJyYSOq4/UtTs57pjoXI/AAAAAAAAOYg/L4SWL7LqweM/s1920-w1920-h1080-c/DSC_1556-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Road+to+Lindis+Pass.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-wBaT-XTU5lw/U0McsiS2QGI/AAAAAAAJG6g/emxVwa5ILwo/s1920-w1920-h1080-c/The%2BRoad%2Bto%2BLindis%2BPass.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Life+in+the+greenhouse-3.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-t4GuDMvJgtk/TPK0WgSeLBI/AAAAAAADI4c/zYc1x7I-S9k/s1920-w1920-h1080-c/Life%2Bin%2Bthe%2Bgreenhouse-3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/7995122298_d4743a46ce_k.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-dVPjiuCL-og/UNi-6EF0QjI/AAAAAAAAK5E/33w0ipRlzuc/s1920-w1920-h1080-c/7995122298_d4743a46ce_k.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/McWay+Milky+Way.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-4J2fjwHlZpk/UtTyvD-FnJI/AAAAAAAAX1k/TuYoeLc-Ku8/s1920-w1920-h1080-c/McWay%2BMilky%2BWay.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-queenstown-nz-nikon-d800.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uxsx0IEs6eA/U0MlLb1IerI/AAAAAAAJP20/dPosYR9XVxw/s1920-w1920-h1080-c/trey-ratcliff-queenstown-nz-nikon-d800.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Chef+at+Sunset.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-YB4kZ5ge9Cc/U0MTgZTfmZI/AAAAAAAJQpw/V9nAX7xkgF0/s1920-w1920-h1080-c/Chef%2Bat%2BSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ConvictLakeSunrise.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-FAIPD0L_XLs/UBctAcHLwcI/AAAAAAAAJAo/fsicVZWEcT8/s1920-w1920-h1080-c/ConvictLakeSunrise.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01009+(1).png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-k1Op3rHp90U/ToFAGEMaH4I/AAAAAAAAraU/f_xZikhzlCY/s1920-w1920-h1080-c/DSC01009%2B%25281%2529.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0444_5_6-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-UHWxgek6Ei0/T58Hpp9zkeI/AAAAAAAANzY/M8D4GtsE6cY/s1920-w1920-h1080-c/DSC_0444_5_6-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090424-0690-CrystCvBreakers.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-9FMwjMIo6MU/Tg1efx1FWSI/AAAAAAAAANE/NuC3xJSPApo/s1920-w1920-h1080-c/090424-0690-CrystCvBreakers.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Sky+Forever.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-rYUyEz24110/U0MddxVVpKI/AAAAAAAJI0g/Yo2Aeee9akk/s1920-w1920-h1080-c/The%2BSky%2BForever.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20140310_Iceland_1392-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-bjac3OgFBG8/U_yjp004PtI/AAAAAAAB-4U/jq6sA93FbVI/s1920-w1920-h1080-c/20140310_Iceland_1392-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3410783929_310572ed16_o.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-1oYAqn8Hi9o/TgtZEE_8tKI/AAAAAAAJJKI/8CbtKab2l0U/s1920-w1920-h1080-c/3410783929_310572ed16_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/G+.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-udPQ4zAGUYg/UZURZTfLDhI/AAAAAAAAPSc/ptIJgEKd2LQ/s1920-w1920-h1080-c/G%252B.jpeg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/C21T0861.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-v6_xr8m1Nh4/UqTF_6FhNQI/AAAAAAAATJY/VWbCHgg5quc/s1920-w1920-h1080-c/C21T0861.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3505475407_d776e4d589_o-1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-TVzStzhfexU/S_5S8_zMy5I/AAAAAAADFE0/fN7-JZzP46I/s1920-w1920-h1080-c/3505475407_d776e4d589_o-1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Seattle.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-DteiBArt5UI/U0MYH6zthEI/AAAAAAAJFtY/UU1t1FU6uX4/s1920-w1920-h1080-c/Seattle.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100409-3657-PinnacleRock3.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-eOzWq5Yn-SY/Tg1f10Dgx4I/AAAAAAAAAOw/PiXj6h2JAio/s1920-w1920-h1080-c/100409-3657-PinnacleRock3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey-Ratcliff-Milford-Sound-100.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-PwjNo1puYPI/U0MiQaw-PxI/AAAAAAAJF3M/gyTiKomggGc/s1920-w1920-h1080-c/Trey-Ratcliff-Milford-Sound-100.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061125-1635-Maelstrom3.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-5E0jD9xU4kU/Tg1brt6WipI/AAAAAAAAc0s/2YRKYYKsEkM/s1920-w1920-h1080-c/061125-1635-Maelstrom3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A1865_HDR.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-zrMZyIFb_wM/U0_6WbX2k0I/AAAAAAAA2IA/EM_Lt3L7XOg/s1920-w1920-h1080-c/388A1865_HDR.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2337.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uxwr24FdX3I/TwZMCaKx4XI/AAAAAAAAQnE/DcLxR0jnfqE/s1920-w1920-h1080-c/IMG_2337.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1531.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-EIEk1-tv81w/TGD0hHBXZEI/AAAAAAAAav0/MfGEerqGlfk/s1920-w1920-h1080-c/IMG_1531.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/FI4C4577.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-KN7d8PlNOxU/UA7HP8WNpTI/AAAAAAAASLc/esv8pSYjYmQ/s1920-w1920-h1080-c/FI4C4577.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RaceTrack-tilted.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-TiuUGmgrIJo/T2fhWrPoAtI/AAAAAAAAX-0/KhLFCt5muZ0/s1920-w1920-h1080-c/RaceTrack-tilted.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/tempest+(1)-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-aN5bGPX4Rig/UW_esdzHpZI/AAAAAAAAUYo/lhx3gIuY2Tc/s1920-w1920-h1080-c/tempest%2B%25281%2529-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/the+lonely+grass+house.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-BqdD6DbXnso/TgtZGH_h6AI/AAAAAAAJA0Q/VNpKkFnn1eg/s1920-w1920-h1080-c/the%2Blonely%2Bgrass%2Bhouse.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/BeanHollow-sunset-surf.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-bhHK29YjgVc/T3CquVOc6hI/AAAAAAABFZI/Z-FfTyBzwLI/s1920-w1920-h1080-c/BeanHollow-sunset-surf.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20140328_Hawaii_2209-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-JOT24t6ZLx4/U_yjrKLK2zI/AAAAAAAB-4o/KC0ZWVXh110/s1920-w1920-h1080-c/20140328_Hawaii_2209-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RHeaRy_402.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-a860A9miaZQ/ThtTuOdNWNI/AAAAAAABSE0/tjO54r6kego/s1920-w1920-h1080-c/RHeaRy_402.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MorningBlue-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-w_It3dmq8_Q/Tr26ZtIDRNI/AAAAAAAAGVg/qOM8lD2pCpU/s1920-w1920-h1080-c/MorningBlue-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071118-3765-LvrsPtMorn.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-3l1ZJxwb6rI/Tg1czp-9MFI/AAAAAAAAAK0/rdFg0gGfCqg/s1920-w1920-h1080-c/071118-3765-LvrsPtMorn.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/forest+fog+v2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-f3E6blFBDVk/Tg0tjUx3BJI/AAAAAAAAgMY/f8tnlRGQisU/s1920-w1920-h1080-c/forest%2Bfog%2Bv2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/oil3.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-cQXP45_tLq0/T0m27oIexHI/AAAAAAAAGb8/keNzP_2lN60/s1920-w1920-h1080-c/oil3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/FoggySunrise-HawkHill-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-nwpgAk2m0O8/ToM1yp5NLQI/AAAAAAABC64/ExPWPjc-oLE/s1920-w1920-h1080-c/FoggySunrise-HawkHill-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB-SlackersRidge-Sunrise-fog-headlights-wide.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-s-CrcrZfoEY/TzlsdNVcPpI/AAAAAAAAS2I/vgewR4SWII0/s1920-w1920-h1080-c/GGB-SlackersRidge-Sunrise-fog-headlights-wide.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/4+horses.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-PFORpB2nRWU/TgtZEBZXStI/AAAAAAAJG78/sg8P1h1FTu4/s1920-w1920-h1080-c/4%2Bhorses.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1-02-12-part2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-LuTnYJ-_AcA/UbdXj-v1fMI/AAAAAAAAFhg/emAw_2y06Ak/s1920-w1920-h1080-c/1-02-12-part2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1071616194_the+farm+of+eden.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-mWoPAMsZ8qM/TgtZECWsZDI/AAAAAAAJGYQ/mGJ5umfc76I/s1920-w1920-h1080-c/1071616194_the%2Bfarm%2Bof%2Beden.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MWF_2155.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-ll7ATwQQOnE/UkPP_YH9WKI/AAAAAAAALoA/_9E2BHedhG4/s1920-w1920-h1080-c/MWF_2155.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RHeaRy_465.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-hDuDewqWJhc/ThYuDF3m4II/AAAAAAABSc8/OMs4oB1Xj6U/s1920-w1920-h1080-c/RHeaRy_465.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/101027-4887-TestOfTime.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-lOZvJ3yPdfc/Tg1gbgvj2bI/AAAAAAAAAPc/bgWip6MWRVI/s1920-w1920-h1080-c/101027-4887-TestOfTime.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1272-Edit-Edit-2-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Ov6cnpCqcKo/Ue52zucefaI/AAAAAAAAZuc/Ya8H97MGDxo/s1920-w1920-h1080-c/DSC_1272-Edit-Edit-2-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MarshallBeachSunset.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-BjCgH3F-OtM/ToojnEsMoHI/AAAAAAAAFNw/RMun2UfSHvI/s1920-w1920-h1080-c/MarshallBeachSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/by+Chris+Chabot.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-5L66J8m3eOc/US-gTtMRQbI/AAAAAAAAX5c/kyQnx5QiiKw/s1920-w1920-h1080-c/by%2BChris%2BChabot.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Chasing+the+Sunset.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-oeJbNPb-T-M/UZURZeo6N9I/AAAAAAAAPQU/py94YP9ogqg/s1920-w1920-h1080-c/Chasing%2Bthe%2BSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1428.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-KK0a8yX7hUc/TnemEmslOEI/AAAAAAAAG4I/qj90bfgIkqs/s1920-w1920-h1080-c/IMG_1428.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6160-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Fz5s5Sq3uSc/UqXO06_DNPI/AAAAAAAAhPw/UNBDEnOdEhs/s1920-w1920-h1080-c/DSC_6160-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20130805_mit_and_river_00001-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GGY-AaDQgJc/UgG4BcMHLWI/AAAAAAAAVgA/pUfLz3uxV-w/s1920-w1920-h1080-c/20130805_mit_and_river_00001-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/tree+in+the+park.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-OIKJTN2YWhU/TgtZGPb42zI/AAAAAAAJA5c/IY3N83zJARw/s1920-w1920-h1080-c/tree%2Bin%2Bthe%2Bpark.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_MG_1449.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-qLopnv-fFT0/TxYB5_vxoEI/AAAAAAABFlo/0zpzDJeTYYk/s1920-w1920-h1080-c/_MG_1449.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3K9C4807.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-4x17JQmbu1s/Ur0CrKBRTzI/AAAAAAAAGH4/t-G8zEmm1jU/s1920-w1920-h1080-c/3K9C4807.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP4090-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Hhp_SMvb6a0/UOSjNI1cZnI/AAAAAAAAGjU/0XLFokAU-bw/s1920-w1920-h1080-c/IMGP4090-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8703.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-ZVK5-96bzpA/UtTypXkQUHI/AAAAAAAARwI/_iTqNhaMZ6c/s1920-w1920-h1080-c/DSC_8703.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-milford11.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-ISfFDxxtu-s/U0MkxpnU1rI/AAAAAAAJBQQ/gmuXSo3KcFQ/s1920-w1920-h1080-c/trey-ratcliff-milford11.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/by+Joel++Tjintjelaar.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-sVAg7ixe6zM/US-gUOy49yI/AAAAAAAAXrM/6iXuvw5XdBw/s1920-w1920-h1080-c/by%2BJoel%2B%2BTjintjelaar.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3857-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-V4KqnGwqPtA/Ur0CJf-GmTI/AAAAAAAAGBA/LO0uFjb-Erc/s1920-w1920-h1080-c/IMG_3857-Edit-Edit-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1311.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-9n3C3hJmGGc/UQmHUE2y6RI/AAAAAAAAlfs/6JKtNnI29Uk/s1920-w1920-h1080-c/IMG_1311.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6743-Edit-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-NZsqwlPxJ08/Ulff-DU9xQI/AAAAAAAAdbg/pJkMnw8uLCk/s1920-w1920-h1080-c/DSC_6743-Edit-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB_DarkMorningWindyFog.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-qiK0GrZEcpQ/TtZtCl10xrI/AAAAAAAAHow/WGJu8GP6dmA/s1920-w1920-h1080-c/GGB_DarkMorningWindyFog.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey-ratcliff-toronto-Recovered.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-HiLp9PsqEEg/U0MiTxSu0yI/AAAAAAAJP3w/ZWMfpXVaQVI/s1920-w1920-h1080-c/Trey-ratcliff-toronto-Recovered.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/070319-2657-PathToLight.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-VGh9JQ9DCzM/Tg1cKU7qBRI/AAAAAAAAAJ4/Dyi6MrlgffU/s1920-w1920-h1080-c/070319-2657-PathToLight.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MWF_6244-7.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-UBxJsB_kCVU/UettpK1i2BI/AAAAAAAAK3s/siEVsMTSHIg/s1920-w1920-h1080-c/MWF_6244-7.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A3363.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Fje9gDslRI0/U0_6WU_6rMI/AAAAAAAA2IA/m4PXkm_hAvI/s1920-w1920-h1080-c/388A3363.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8520.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-sTiWMAC13YQ/UTmo6ED7v9I/AAAAAAAAWsQ/PfI4WYswhJw/s1920-w1920-h1080-c/DSC_8520.png\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/700_1870.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-YOIwgQ1uXcM/SRGZJ-A3yvI/AAAAAAAADMI/6qvORkHqWS4/s1920-w1920-h1080-c/700_1870.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Dream+Catcher+-+Palouse,WA.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-skB9ljKV58M/UXp3kiaG3DI/AAAAAAAAgRM/hZ3rTbu1XwU/s1920-w1920-h1080-c/The%2BDream%2BCatcher%2B-%2BPalouse%252CWA.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Farewell+India.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-H8NDmFzpF_A/TgtZEOagTaI/AAAAAAAIPp0/eTfdvWDBvt4/s1920-w1920-h1080-c/Farewell%2BIndia.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SonomaCoast-Arch-surf-longexp.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-x0qCPDjYL9w/T2Z8tuYaHII/AAAAAAABFXc/empnlAhR_eY/s1920-w1920-h1080-c/SonomaCoast-Arch-surf-longexp.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/2398605326_bf7dde0cf7_o.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-bXrGY2Cafa0/TgtZGEzbZDI/AAAAAAAJA5g/JWbeuWkbTLc/s1920-w1920-h1080-c/2398605326_bf7dde0cf7_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/A+View+from+the+Ranch+in+Argentina.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-txUs9Q95dM8/U0MR9lvvDNI/AAAAAAAJIA8/vY9TD4TiPzw/s1920-w1920-h1080-c/A%2BView%2Bfrom%2Bthe%2BRanch%2Bin%2BArgentina.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/inverness-to-istanbul-00077.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-5uz5EzVcvNU/UEpN7gJg2nI/AAAAAAAAI7s/-Xwxg57SCn0/s1920-w1920-h1080-c/inverness-to-istanbul-00077.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SanGregorioCliffReflection.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-465XgZS4LQo/UOuDAiDRcrI/AAAAAAAAKng/4m7maZotsgg/s1920-w1920-h1080-c/SanGregorioCliffReflection.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/santa-cruz-trey-ratcliff.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-U0yjKIXF2fs/U0MjfTbjf1I/AAAAAAAJEbY/MkqCoe1DfG4/s1920-w1920-h1080-c/santa-cruz-trey-ratcliff.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061122-1421-LtAtEndOfPier.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-7Zi62qJ-NNg/Tg1bfusNzfI/AAAAAAAAAJA/P4bDaf-68Ys/s1920-w1920-h1080-c/061122-1421-LtAtEndOfPier.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_SUE4322.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-vA0vdrM3_ro/UnDyzCqXFaI/AAAAAAAAGxw/GAtvLCwZbAM/s1920-w1920-h1080-c/_SUE4322.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Bamboo+Forest.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-bkNEhcz00Z8/U0MZQ3MdO3I/AAAAAAAJGy4/S-coTfmsQfE/s1920-w1920-h1080-c/The%2BBamboo%2BForest.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC02146+Red+Plant.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-tyOlTzJRvmw/UpBQXuuK_JI/AAAAAAAAD_0/PL7enPiYUT8/s1920-w1920-h1080-c/DSC02146%2BRed%2BPlant.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/01_MG_3677.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-YHEf8jl_LDg/Tgxgtdub2iI/AAAAAAAAAMQ/zmkWf0WkFTI/s1920-w1920-h1080-c/01_MG_3677.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RedTide.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-feW_gVKW6j8/UI5fg6xQBXI/AAAAAAAAWQY/DIOuGTieAMM/s1920-w1920-h1080-c/RedTide.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/091220-2536-TheCurl.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-lR3vG062kEk/Tg1fjlh053I/AAAAAAAAAOc/Sv1zKPXPkPQ/s1920-w1920-h1080-c/091220-2536-TheCurl.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-close-to-tepako-new-zealand.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Q1AA5A9uiYU/U0MkdTp90YI/AAAAAAAJJIw/SuamKxYgwts/s1920-w1920-h1080-c/trey-ratcliff-close-to-tepako-new-zealand.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6837_CropBrightContrast.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Hqmu2H_l2XY/SwIysuFOIiI/AAAAAAABLWk/W9rX5qlmk4c/s1920-w1920-h1080-c/DSC_6837_CropBrightContrast.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061121-1389-UndPierHanalei.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-VZ8vGJ6Qfvc/Tg1bgCMJ1HI/AAAAAAAAAJE/QMa5LYy7phM/s1920-w1920-h1080-c/061121-1389-UndPierHanalei.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20100924-IMG_5794-HDR-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-eCSjsP08EcA/T_0K5wVePeI/AAAAAAAARxk/I-Qx3ciOzUE/s1920-w1920-h1080-c/20100924-IMG_5794-HDR-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Farewell+San+Francisco.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-N7h4Iit041g/U0MUZ6H8WdI/AAAAAAAJKok/V-IfPQ_XXK4/s1920-w1920-h1080-c/Farewell%2BSan%2BFrancisco.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/stream.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-GCr_cZIif7g/Tnarp7XhOMI/AAAAAAAABPU/WNrHyAJOLNA/s1920-w1920-h1080-c/stream.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071110-3579-HvnsGate.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-0DC0pkVJw5g/Tg1cjeX4YpI/AAAAAAAAAKc/bNEDQtv0J4A/s1920-w1920-h1080-c/071110-3579-HvnsGate.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100726-4239-LightAtAhalanui.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-m-0LmCqZxSo/Tg1gLoaJJKI/AAAAAAAAAPI/KNkzyqLgUa0/s1920-w1920-h1080-c/100726-4239-LightAtAhalanui.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RHeaRy_380.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-4026KDnYCqc/ThYb2MMKRLI/AAAAAAABSEs/3N3nOtyl_lI/s1920-w1920-h1080-c/RHeaRy_380.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/CrissyField-SaltMarsh-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-OwU2batkg6A/TrbvnMATI7I/AAAAAAAAF3w/q_7_jgF0ngE/s1920-w1920-h1080-c/CrissyField-SaltMarsh-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/tekapo-new-zealand-trey-ratcliff-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-mGgW1ovI2PE/U0Mjzq2YJuI/AAAAAAAJA0o/aLuxOVgUjlY/s1920-w1920-h1080-c/tekapo-new-zealand-trey-ratcliff-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/p1000284.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-patMHu2oyfs/RJBWFz5TABI/AAAAAAACnSo/ZP9KYfCSFM8/s1920-w1920-h1080-c/p1000284.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2617.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-_p1iKjPzjGc/TIW63f_px1I/AAAAAAAAOck/NCDLhcVRam8/s1920-w1920-h1080-c/IMG_2617.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8280686512_7820f388dc_k.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-NeMzsWIU6RU/UZURZR7U_aI/AAAAAAAAgSY/-AtSrt0ig5Q/s1920-w1920-h1080-c/8280686512_7820f388dc_k.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC02700.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-9Nj6ilPU0NI/Ts9Gk0pfW_I/AAAAAAAAD4I/GWbtz0c91tE/s1920-w1920-h1080-c/DSC02700.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A6457.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-jTQjx2iGz84/U0_6WWCDwxI/AAAAAAAA2IA/FmHhYqwC0Y8/s1920-w1920-h1080-c/388A6457.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TufaSunset-1-2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uk4W-F3OXbM/Tqwm9e_vuJI/AAAAAAABFcE/zPYFePKqTxs/s1920-w1920-h1080-c/TufaSunset-1-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/P1142336.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-7ZuJOGpJ5-0/UHRHfwcGEUI/AAAAAAAAKsU/s31OrXjVZ9A/s1920-w1920-h1080-c/P1142336.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Glacier+Point+Milky+Way+Panorama.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-YxXTf0j_MTQ/UtTwF4t9yEI/AAAAAAAAW8g/dYsGmWzs81Y/s1920-w1920-h1080-c/Glacier%2BPoint%2BMilky%2BWay%2BPanorama.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_DX_6908_09_10_11_32bit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-gBb9HtLb3zw/U_yjyTFvcAI/AAAAAAAB-64/G_Jt5mnm-mU/s1920-w1920-h1080-c/_DX_6908_09_10_11_32bit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/inverness-to-istanbul-00177.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-yCO0vebn5x0/UFBrOZtDNZI/AAAAAAAAJO8/jX4MgPfHQbE/s1920-w1920-h1080-c/inverness-to-istanbul-00177.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0554.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-59MYsAxhB_I/UtTzqg1a7VI/AAAAAAAAWds/BLWELYZHUWE/s1920-w1920-h1080-c/DSC_0554.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Blue.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-p4V1WVO8Dhw/UBSl6P5W35I/AAAAAAAAPdg/UFIS4M1KDBE/s1920-w1920-h1080-c/Blue.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/BayBridge-night-mono.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-5IpprOs0T78/T3PwhE-VJ9I/AAAAAAAAYzA/-2X-oY9C3N0/s1920-w1920-h1080-c/BayBridge-night-mono.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_9645-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-utp4ouvAO10/Ud6okYh24yI/AAAAAAAAYrg/fRr-tnaqxBI/s1920-w1920-h1080-c/DSC_9645-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_X7A8818-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-bCmJvz5jD9s/U_yj0wk6KLI/AAAAAAAB-7s/t7dIu3T7nvw/s1920-w1920-h1080-c/_X7A8818-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/FI4C6008.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Pg1HXtyXBZ0/UGHWhKaSrhI/AAAAAAAASZE/q3omNbvxCJU/s1920-w1920-h1080-c/FI4C6008.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/10-13-12highres.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-boXHwu7eW_g/UjjGBMhSzwI/AAAAAAAANJE/9w555NqrJws/s1920-w1920-h1080-c/10-13-12highres.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/P1080441.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-gKcKe_o5slw/RapYX1Oyx0I/AAAAAAAAa9Q/P9rYqEPs7dc/s1920-w1920-h1080-c/P1080441.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Seal_Rocks-centered.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-PtAU0On5OII/Tr8FOZ3yVuI/AAAAAAAAGY4/IYyAYzHZzo0/s1920-w1920-h1080-c/Seal_Rocks-centered.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3144-3.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-129Q91osfKU/UKsTjV0_Q0I/AAAAAAACKD0/ejMXCx6_w14/s1920-w1920-h1080-c/IMG_3144-3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_X7A5208-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-7wj7ipdaCbI/U_yj0qysNgI/AAAAAAAB-7k/dl8d2M4N5vE/s1920-w1920-h1080-c/_X7A5208-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Red+by+Alistair+Nicol.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-vK7sTdwps8g/UKPHFTynz-I/AAAAAAAARas/_RETAXGVU9g/s1920-w1920-h1080-c/Red%2Bby%2BAlistair%2BNicol.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Silver+Lake+StarTrails.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-rQ9SZ0dfJ_I/UtTzyqBufcI/AAAAAAAAOj4/zAOnrvu9aG8/s1920-w1920-h1080-c/Silver%2BLake%2BStarTrails.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP7962.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-fOXNAoVsl2E/UONnO-Zp2zI/AAAAAAAAyPo/kjEzrMZXylk/s1920-w1920-h1080-c/IMGP7962.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untitled-19.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-q2yAJwhwIic/Th0QR-JaxiI/AAAAAAAABCo/YIGFyyYRXBI/s1920-w1920-h1080-c/untitled-19.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/080229-4653-GraytonStream.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-cjUv9eE6oRE/Tg1dXWtEjRI/AAAAAAAAc1E/ScCXWwu6HbM/s1920-w1920-h1080-c/080229-4653-GraytonStream.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6902-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-x838dk0Z5UE/UaXxyeQ21gI/AAAAAAAAm-o/7OSZeQrHSO0/s1920-w1920-h1080-c/DSC_6902-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Lupines.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-oWXc6hihoxM/UAQ2flp_ioI/AAAAAAAAgLE/wL2UgiGSdRk/s1920-w1920-h1080-c/Lupines.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/BayBridgeSunrise-LE.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-k1-SvxtkRaI/TzW2PE5LU_I/AAAAAAAA14A/JuGDMoDvbCQ/s1920-w1920-h1080-c/BayBridgeSunrise-LE.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Iceland.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-fJVeA8ZcZSU/UAbPQdXxfbI/AAAAAAAAgLI/tIVVrrPINVs/s1920-w1920-h1080-c/Iceland.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/the+trane+and+the+pharoah.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-B4s7SDef3U8/TwttGH3PVKI/AAAAAAAAR8k/Gp5uWnBs4JE/s1920-w1920-h1080-c/the%2Btrane%2Band%2Bthe%2Bpharoah.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6930-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-F44_mY6bA2c/UaiW3nWnsrI/AAAAAAAAWKk/pVPuQcy_ygQ/s1920-w1920-h1080-c/DSC_6930-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Funston-Sunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-hs9pldJQseQ/Tw9Z3Mea0PI/AAAAAAABFTs/u8KBBQQ9At4/s1920-w1920-h1080-c/Funston-Sunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP0913.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-ouB3hbNdnVY/Tzlw8hO_W7I/AAAAAAAAAVQ/GNAVkaDa0lw/s1920-w1920-h1080-c/IMGP0913.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP5017.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-YiCUO9G6Vfg/ULgv8pQPeGI/AAAAAAAAD-k/NGhYvPuu5bc/s1920-w1920-h1080-c/IMGP5017.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061228-2049-UTPScripps1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-JkxqJu_ZG6I/Tg1b6ZErN-I/AAAAAAAAAJk/sD_vHpTz-hU/s1920-w1920-h1080-c/061228-2049-UTPScripps1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071010-3287-SausMorn1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-o11hGOKretw/Tg1cW-5ZUOI/AAAAAAAAAKQ/bz8-ylAE0_A/s1920-w1920-h1080-c/071010-3287-SausMorn1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+New+York+-+Inception.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-uw6YFcXJKbo/U0MgUuctfgI/AAAAAAAJEXg/rLxRH7N4ths/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BNew%2BYork%2B-%2BInception.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/LandsEnd-Sunset.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-lEy_31bnK1A/TyYVYFaoUxI/AAAAAAAAPxc/_4v9O3EKy6c/s1920-w1920-h1080-c/LandsEnd-Sunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Spires-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-MjADvnIjxV0/U0MdmA5ytOI/AAAAAAAJKn4/0ZUjaXODMKA/s1920-w1920-h1080-c/The%2BSpires-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/32+Hours++Counting.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-xbmT1vIDvZc/UZURZTZzmhI/AAAAAAAAgSo/f1msNjQ2YSw/s1920-w1920-h1080-c/32%2BHours%2B%2526%2BCounting.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_2018-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-IPbUv2dc9E4/Ugotamqb0xI/AAAAAAAAbME/zTVKgdkCdRY/s1920-w1920-h1080-c/DSC_2018-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MSU_9976.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-tFk1NsophJc/UqWc4p6NF9I/AAAAAAAAHws/4zvvKSi-qRk/s1920-w1920-h1080-c/MSU_9976.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Reef-mono.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-5-bmm_yEw8Q/ToaN8JLAR1I/AAAAAAABC7I/eMpXTtyj67Y/s1920-w1920-h1080-c/Reef-mono.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Dreams.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-wWAxuHAMqWo/UZURZU59sUI/AAAAAAAAPOY/bxIdsdlg4DE/s1920-w1920-h1080-c/Dreams.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2705.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-D-a8TeEMxVU/T0u5OcN_KcI/AAAAAAAAQ3A/buaoFgy2i-Y/s1920-w1920-h1080-c/IMG_2705.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SutroSunset-WaterfallRock.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-F3PyWBuTa9A/Txo6n6KVzRI/AAAAAAABFQ4/bhv0lJobcUE/s1920-w1920-h1080-c/SutroSunset-WaterfallRock.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/060820-0818-ThePhotogs.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-m6gJXedR5K0/Tg1bJIJrdDI/AAAAAAAAAIk/luzGf-NHcC0/s1920-w1920-h1080-c/060820-0818-ThePhotogs.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Portofino2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-F33Ezsq01cw/TgkRlUvin5I/AAAAAAAI6wA/g434OYIBJiA/s1920-w1920-h1080-c/Portofino2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/110521-8046-PacificaLt2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-QOLm5NyrBAg/Tg1hGjt7CQI/AAAAAAAAc2A/oW-ErAUPpKY/s1920-w1920-h1080-c/110521-8046-PacificaLt2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_DX_3511_2_3_4_5_32bit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-QVbxD_ZZCa0/U_yjxBJn4WI/AAAAAAAB-6k/fAnDqFKCfh4/s1920-w1920-h1080-c/_DX_3511_2_3_4_5_32bit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/C21T0880.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uNim7D5ywdM/UqTGRcbr78I/AAAAAAAAXKY/2Fv7yLI2kZc/s1920-w1920-h1080-c/C21T0880.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Pescadero.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-FNrstx8M7hY/TyH51o60WuI/AAAAAAAAGTY/3nRvYRuPjEU/s1920-w1920-h1080-c/Pescadero.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Temple+Over+Kyoto.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-I7qT8fiUqZU/TgkSotvmFkI/AAAAAAAI6h0/ASyt4FPWAso/s1920-w1920-h1080-c/Temple%2BOver%2BKyoto.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_4154b.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-7FTPwrBoDBs/Ufb1a1gM-UI/AAAAAAAADK0/NrOPNAfCG7I/s1920-w1920-h1080-c/DSC_4154b.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0663-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-JLMulqzQsQQ/UqBrOg83JWI/AAAAAAAAgsY/vzUeMdvC-h0/s1920-w1920-h1080-c/DSC_0663-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB_130628_MCu_1-2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-IevMmNQigxY/Uc3F-z0I5qI/AAAAAAAAItw/eRKlk6yr6TY/s1920-w1920-h1080-c/GGB_130628_MCu_1-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090810-1930-NeedleAndHaystack.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-SUKN-r5lw5A/Tg1fNM6yIEI/AAAAAAAAAN8/PULlaJpHBkI/s1920-w1920-h1080-c/090810-1930-NeedleAndHaystack.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/2012.+purple+is+my+favorite+color.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-vtVHPLJKT3w/T9KLSzUhuOI/AAAAAAAABiY/3a5M4phhFs0/s1920-w1920-h1080-c/2012.%2Bpurple%2Bis%2Bmy%2Bfavorite%2Bcolor.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SealRocks-sunset-reflection.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-55UeILqE2s0/T0PDELei3HI/AAAAAAABFbU/4_nqVtef2m8/s1920-w1920-h1080-c/SealRocks-sunset-reflection.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/New+York+-+NEX7+-+Trey+Ratcliff+(8+of+21).png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-XxP1oir93Fg/U0MW6gL3miI/AAAAAAAJA0U/hP0D1e9JC-w/s1920-w1920-h1080-c/New%2BYork%2B-%2BNEX7%2B-%2BTrey%2BRatcliff%2B%25288%2Bof%2B21%2529.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Patience.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Gp7BKH79U6k/T_rPHeEUv4I/AAAAAAAAPL8/LSoFOwB9QNU/s1920-w1920-h1080-c/Patience.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP8828.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-RZKOyMbLobw/UONnVGAE9tI/AAAAAAAAyPM/60as7LUVuHI/s1920-w1920-h1080-c/IMGP8828.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/5-01-13-spider-crawler-lightning-road-albany-tx.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-oYOr7AcS0F4/UZUYFMNixiI/AAAAAAAAGL0/6fp4ZSWjH90/s1920-w1920-h1080-c/5-01-13-spider-crawler-lightning-road-albany-tx.png\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Blue+City.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-4wJlrgKnUsI/U0MZbQCL-5I/AAAAAAAJOwE/yL0yy2OMWtI/s1920-w1920-h1080-c/The%2BBlue%2BCity.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/06152012-12.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-_OVIBu35BFs/UOD9ybxkzmI/AAAAAAAAkNo/YyQXlMNgeEk/s1920-w1920-h1080-c/06152012-12.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/D30_0895.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-onm54VnIRFQ/SBnwVTP3Y4I/AAAAAAAAvJc/jJxlxmTu5t8/s1920-w1920-h1080-c/D30_0895.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Metal-1.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-TKsDKeRS95U/Tkrw6TiAyPI/AAAAAAAC4HY/bygELaJa5-s/s1920-w1920-h1080-c/Metal-1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0300.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-b_ZyO6A8eec/UNcwXdvdtMI/AAAAAAAAR4k/YcThGSa1EHE/s1920-w1920-h1080-c/DSC_0300.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6868.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Mc32ZHV--b0/SwIy9sStc0I/AAAAAAABLXg/AB-YvtyK-wk/s1920-w1920-h1080-c/DSC_6868.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/class3_05.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-EUrlRFim4uQ/Uo5D2fBJduI/AAAAAAAABZU/73PLVw3Xxk0/s1920-w1920-h1080-c/class3_05.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MarshalBeach-sunset-rocks-.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-_SFDsIPPKzI/TxhNwgko__I/AAAAAAABFhY/uz_fTrjtNFg/s1920-w1920-h1080-c/MarshalBeach-sunset-rocks-.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_O9V5569_HDR.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-WrzPVL3SMFs/Uq-D3XLVHUI/AAAAAAAAPBY/JQpQw38ggyM/s1920-w1920-h1080-c/_O9V5569_HDR.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-road-to-mountain-forever.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-n8kCRwIAl3I/U0MlTxDHALI/AAAAAAAJEL0/VwbBzYmP0nQ/s1920-w1920-h1080-c/trey-ratcliff-road-to-mountain-forever.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RodeoBeach-sunset-16x9.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-grccgI_cL8k/TwH0-_dHIvI/AAAAAAABFbM/sqNxtA-Gi30/s1920-w1920-h1080-c/RodeoBeach-sunset-16x9.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Sky+Painting.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-XZGw1LIoIQk/Ua2ANshiwmI/AAAAAAAAfX8/PIcgUJRHb3M/s1280-w1280-c-h720-k-no/Sky%2BPainting\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0816-Edit-Edit-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-dKrL8_a8MmE/UrWktdbZX_I/AAAAAAAAilY/2Ce0qzN9r3s/s1920-w1920-h1080-c/DSC_0816-Edit-Edit-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1204.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-NvzWYFZm9b0/UQmFrRIGaDI/AAAAAAAAlew/em5aqVHnV3M/s1920-w1920-h1080-c/IMG_1204.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_MSU8463.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-9SBIVQE_N98/UnDyKXBM-VI/AAAAAAAAGw8/JRqWBIObFek/s1920-w1920-h1080-c/_MSU8463.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_4067.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-oVqvzpNBaE8/UlmYCAD6pNI/AAAAAAAAQPQ/xDn8iGotkyo/s1920-w1920-h1080-c/DSC_4067.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_D3_0763-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-SzwsBTne5SM/U_yjvpyvA6I/AAAAAAAB-6A/q0imuvbf0Yw/s1920-w1920-h1080-c/_D3_0763-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_4772+p4.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uXesNMoRpN8/U08k4CCBTsI/AAAAAAAAvr0/7ZtIaGpNfHU/s1920-w1920-h1080-c/IMG_4772%2Bp4.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SutroSunset-rocks-misty.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-sSh1MI_KB_c/TwXF_f9Tr4I/AAAAAAAAL-g/ivbuKnmkfLI/s1920-w1920-h1080-c/SutroSunset-rocks-misty.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/the+docs.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-djAiXa_L7EU/TgtZGJZPcFI/AAAAAAAJBA0/Ih2FgNUBZYE/s1920-w1920-h1080-c/the%2Bdocs.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/AtAnchor.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-25-BIcSpaLU/UX-tEB0seYI/AAAAAAAAU2Y/SX0W4AL4YQM/s1920-w1920-h1080-c/AtAnchor.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/A+Razor+to+the+Sky.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-WUT3n130gGw/U0MR8lh-SbI/AAAAAAAIpgw/VO52olLVJN8/s1920-w1920-h1080-c/A%2BRazor%2Bto%2Bthe%2BSky.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/4070581709_a1c668a779_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/--ETG9eU1_Xw/Tgt5l8cyMwI/AAAAAAAIWTg/nWSbj2O5c6w/s1920-w1920-h1080-c/4070581709_a1c668a779_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6165.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-PAZT1pXjMM8/UrM5S_Ht1cI/AAAAAAAACVE/adGv8TflzYc/s1920-w1920-h1080-c/IMG_6165.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/CliffHouseSunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-aIBq7YhM6-M/TxMQytFssDI/AAAAAAAANXs/9RurRnKmOOw/s1920-w1920-h1080-c/CliffHouseSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01034.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/--Km5pB3lBaM/Ua3DdDBGtcI/AAAAAAAAPV4/p_BFy_Ps50w/s2560/DSC01034\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Big-Sur-Coastal-Seascape-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-LVkYomDgo1g/TwoREmpuoLI/AAAAAAAAMiE/duaVKfg5Blg/s1920-w1920-h1080-c/Big-Sur-Coastal-Seascape-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100804-4696-PololuMorn1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-hXPVBw1iPyc/Tg1gUs9WABI/AAAAAAAAAPU/J-g25o_00Gk/s1920-w1920-h1080-c/100804-4696-PololuMorn1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_1600.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GwSLzDzfyGA/UWoqCg-pk2I/AAAAAAAAMh0/JeyhZ3UqFys/s1920-w1920-h1080-c/MOL_1600.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP0652_3_4_tonemapped.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Sm0TD1_vzFo/ULrHwJOPf3I/AAAAAAAAEMY/NGUYdwUEtGY/s1920-w1920-h1080-c/IMGP0652_3_4_tonemapped.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/CGPier-storm-mono.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-gE1QbuQR45Q/TqiD0bdOG7I/AAAAAAAAE8w/fawdaKhXGu4/s1920-w1920-h1080-c/CGPier-storm-mono.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Night+Falls+on+Crater+Lake+-+Crater+Lake,+OR1.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-8h4vm06cRYo/UZURZQG4KwI/AAAAAAAAPOE/GltqdZojKKE/s1920-w1920-h1080-c/Night%2BFalls%2Bon%2BCrater%2BLake%2B-%2BCrater%2BLake%252C%2BOR1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0213.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uaGTbkMBysI/R7qYVHTGv6I/AAAAAAAABiQ/IU0yK7OgvYc/s1920-w1920-h1080-c/IMG_0213.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP1985_stitch.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-14sNcCfmulY/UOj-YBSQ8oI/AAAAAAAALsk/v-C7ZmZ-UIk/s1920-w1920-h1080-c/IMGP1985_stitch.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Reflection.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-qd290nJU0FM/UZYXTBbrzeI/AAAAAAAAVhI/gNH2tEzLT80/s1920-w1920-h1080-c/Reflection.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ibiza+dock.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-QyxGZeaBON4/TgtZEYemvZI/AAAAAAAAgVE/_VepyvNFiTE/s1920-w1920-h1080-c/ibiza%2Bdock.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trippin'-3.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-b4ZiJXUmZLg/TUCPhc_z2pI/AAAAAAAAAgM/uY37UMRjGsw/s1920-w1920-h1080-c/Trippin%2527-3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1612.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-2A31P4WBC8s/UtT1BndamcI/AAAAAAAAO1E/Qj5CF7S1UeU/s1920-w1920-h1080-c/DSC_1612.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/YosemiteFalls.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-1dANL8dJDT0/T6h0JShpn-I/AAAAAAAAIDk/l_dKhWvFXUs/s1920-w1920-h1080-c/YosemiteFalls.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/07_20090416.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-8kQQYYzz_l8/UZSathUsJGI/AAAAAAAAsUM/3Z4WK9CG8wE/s1920-w1920-h1080-c/07_20090416.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_7222-Edit-2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-yYJUfqBHHXw/UoffDIFgJOI/AAAAAAAARpQ/M7Nskp7pTDg/s1920-w1920-h1080-c/DSC_7222-Edit-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_9581.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-gcU_icksx-A/TnuyXEh2MeI/AAAAAAAAFhE/sjZHDkU_Vlg/s1920-w1920-h1080-c/IMG_9581.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20100525-IMG_6788-HDR-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/--y_TRuOOPTA/T_0KxukaPeI/AAAAAAAARw0/VTeenM1J2xI/s1920-w1920-h1080-c/20100525-IMG_6788-HDR-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MagicBallContest.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-6nBwDVfR-BE/UXrL2u6iqII/AAAAAAAAUro/CL47d2nXDzE/s1920-w1920-h1080-c/MagicBallContest.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3857-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-eDbulGr2hu8/Ur0CIxLk-FI/AAAAAAAAGA4/R7oAYMeXRws/s1920-w1920-h1080-c/IMG_3857-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP9268.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-K258GmbSDxM/T_TBV0i4kLI/AAAAAAAABro/rW_nlHdct7U/s1920-w1920-h1080-c/IMGP9268.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Hooded+Lady+of+the+Valley.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-31H2j9KKMi0/UTpeMK5JrEI/AAAAAAAAPHo/4QOl-12J750/s1920-w1920-h1080-c/Hooded%2BLady%2Bof%2Bthe%2BValley.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_MG_4776.CR2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-MxVUPW7j-L0/UCFpW985f5I/AAAAAAAAJI8/HQfELZDoN7I/s1920-w1920-h1080-c/_MG_4776.CR2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untitled-3-2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-1cz2zcbiz-4/Th0QVgyAMBI/AAAAAAAABC4/gVc-Bp_mFGs/s1920-w1920-h1080-c/untitled-3-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/sky_leaves.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-1o-jUyycpcE/UIdjwEWDS3I/AAAAAAAAED4/7Mj-xSqdO5E/s1920-w1920-h1080-c/sky_leaves.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TunnelViewWinter.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GGVPhdUiKwY/UOOZDe9JFQI/AAAAAAAAKiY/Noq6gsZlXxk/s1920-w1920-h1080-c/TunnelViewWinter.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3674678524_f49854f3b1_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ZGfUihferj8/TgtZGKAJjOI/AAAAAAAAdd8/e-EXjm51hhA/s1920-w1920-h1080-c/3674678524_f49854f3b1_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/I+Cover+the+Waterfront+-+Alki+Beach,+WA.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Zj8Aex6oXYo/UW6x5FfAtjI/AAAAAAAANiY/lukbqNiI2go/s1920-w1920-h1080-c/I%2BCover%2Bthe%2BWaterfront%2B-%2BAlki%2BBeach%252C%2BWA.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/morning+with+coffee+in+yellowstone.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-HdhuOcwGEcs/TgtZEZtITGI/AAAAAAAAVmw/nPx5UAR0qic/s1920-w1920-h1080-c/morning%2Bwith%2Bcoffee%2Bin%2Byellowstone.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Bristlecone_Stars.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-xu-TTAEZtQo/UbtDr65unqI/AAAAAAAABKo/-2asqRlMolw/s1920-w1920-h1080-c/Bristlecone_Stars.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/StillStanding.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Bz1rXnbAy1s/UQNThZKgMRI/AAAAAAAAScM/eUItE7glPn0/s1920-w1920-h1080-c/StillStanding.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Salt_Point.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-FDe6_2rxtEs/UkBgjq9ZJmI/AAAAAAAAELo/zT29ZhT2NAA/s1920-w1920-h1080-c/Salt_Point.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untouched.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-KPCupfttZeg/UYEMyuiN84I/AAAAAAAAU5k/74L4iR6gMDk/s1920-w1920-h1080-c/untouched.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TacomaChiluly--10.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/--LqjPK05as8/TsSfH1cu69I/AAAAAAAATUE/JyMyDxcW1Ms/s1920-w1920-h1080-c/TacomaChiluly--10.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_5165-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-5ntl45J8Lxg/UiHZG2mJ1nI/AAAAAAAAb8s/f10TxWDh2zA/s1920-w1920-h1080-c/DSC_5165-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Group+TWO.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-HbF8zRNZt-o/UMPHYkBuCMI/AAAAAAAAKUQ/GYFSC7-LVqs/s1920-w1920-h1080-c/Group%2BTWO.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/CrackedIsSometimesGood.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-5lm5qxI06OU/TqkYjHdt_lI/AAAAAAAAKOc/Eqb40U2Jsiw/s1920-w1920-h1080-c/CrackedIsSometimesGood.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0472.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ot6zDqm0p1s/UM-oZwFOYBI/AAAAAAAAImc/_9QNnbQXa5Y/s1920-w1920-h1080-c/IMG_0472.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_2167.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-HW1I0DVsq6A/UlmXtm9TvGI/AAAAAAAAQOM/MBQeGBzVB2M/s1920-w1920-h1080-c/MOL_2167.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/T3_IMG_3936.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-r3jKfQruwv4/Uc6B8fRsKmI/AAAAAAAAIAg/VCLgE4EqjtY/s1920-w1920-h1080-c/T3_IMG_3936.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8941Autumn.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-TFEx1ptMuoc/UpN7a9C-YlI/AAAAAAAAKUI/A3KeBF2vSnE/s1920-w1920-h1080-c/8941Autumn.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6682.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-l9peRQpmVRQ/T54s3ZTfGBI/AAAAAAAAJQk/-_8lDImWzwE/s1920-w1920-h1080-c/IMG_6682.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_5908.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-nFgpOv4T3M0/TWLTD6xOiJI/AAAAAAAAPFs/PSfnLjBIrVU/s1920-w1920-h1080-c/IMG_5908.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0935.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-acdH1dPsUdk/ToQNXK7HgDI/AAAAAAAATyM/95rFxKIy_Dw/s1920-w1920-h1080-c/IMG_0935.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/11-17-12-India+Trip-Kanheri+Caves+(JPEGs)-20.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-ko4QbKawOzs/UMrlGpBHGtI/AAAAAAAAMbA/TVYDrsxchf4/s1920-w1920-h1080-c/11-17-12-India%2BTrip-Kanheri%2BCaves%2B%2528JPEGs%2529-20.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_MSU3203.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-E5h_DjLkO9g/UJGAP4Q_1jI/AAAAAAAABI0/xb_a1wwuddA/s1920-w1920-h1080-c/_MSU3203.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_5328.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-3vJ7YydpvVU/T3Fad0DfOvI/AAAAAAAAIIg/rJ5piFMcgKg/s1920-w1920-h1080-c/IMG_5328.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_5974.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-qwOaqE4cYCg/Ur0CAf2nO5I/AAAAAAAAF-I/b2vYQp-TxW4/s1920-w1920-h1080-c/IMG_5974.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_1755.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-nVpMVoplcjA/UlmXtr57GiI/AAAAAAAAQOo/YPNo51GXyLU/s1920-w1920-h1080-c/MOL_1755.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2828.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-RM253k65h0g/RuWXqF2PN3I/AAAAAAAAASw/bWQAJ47AvxQ/s1920-w1920-h1080-c/IMG_2828.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_T3_0788.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-JhsS5Efemfw/UAUNCf1J1aI/AAAAAAAACno/1178JtnVPVQ/s1920-w1920-h1080-c/IMG_T3_0788.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0471-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-IOB7UYjdfKk/UWxRNQruJpI/AAAAAAAAqYo/ZYOTEFEaUUQ/s1920-w1920-h1080-c/DSC_0471-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_8176.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-97kOELXyRw0/UpKzpdSGLsI/AAAAAAAACU8/t7toymdF9ys/s1920-w1920-h1080-c/IMG_8176.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSCF0155-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-v5W9oXSutcs/UjX_nq7Q1DI/AAAAAAAAPVE/A201XC4J5qs/s1920-w1920-h1080-c/DSCF0155-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1017.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-OvptEVwUDuA/UE_P875OPoI/AAAAAAAAPWM/ocqkejUt5AQ/s1920-w1920-h1080-c/IMG_1017.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_4701.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-SCc_19Vl5Ng/SuoniirQlZI/AAAAAAAAGOo/UsRZ0o6GJeI/s1920-w1920-h1080-c/IMG_4701.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6000.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-GMJoozxAcgE/Tk7h8aldhrI/AAAAAAAAFZ8/SnFiv5CZcYE/s1920-w1920-h1080-c/IMG_6000.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/austin+2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-G4bChH6K3mY/ULdpTli69GI/AAAAAAAAJIg/cfku63jtnY4/s1920-w1920-h1080-c/austin%2B2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2526-3b.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-11t9DgvNYhY/UG3HjpR9T9I/AAAAAAAAIO4/FSkNbPYzUMA/s1920-w1920-h1080-c/IMG_2526-3b.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6451.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-YtE41zDzZZM/UBCa4Ui2cuI/AAAAAAAAOMg/Uzs03aPfWak/s1920-w1920-h1080-c/IMG_6451.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_4369+-+Large.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-mPicgJz8Yes/USOzc3Ki2TI/AAAAAAAADVA/QzQqtctMISI/s1920-w1920-h1080-c/IMG_4369%2B-%2BLarge.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0109.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-1n2blvh-lkQ/TX_WqEAkKAI/AAAAAAAAAI4/xlaLPLcp6nI/s1920-w1920-h1080-c/DSC_0109.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20120128-20120128-ENS_3119_20_21_tonemapped-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-HBDE39Hgv9M/TyXGMvNUzjI/AAAAAAAAA_A/nBMmnHMcT0o/s1920-w1920-h1080-c/20120128-20120128-ENS_3119_20_21_tonemapped-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6499.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-iTxENBfrZfY/T5ZLrTvoeCI/AAAAAAAAJD8/ik0c31ZcTOw/s1920-w1920-h1080-c/IMG_6499.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MorningGlory.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-8K8X3n7zPKE/UOOZGSlNvjI/AAAAAAAAKig/yTCbEVh-lCw/s1920-w1920-h1080-c/MorningGlory.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1984.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-MXAy1Q1e8pw/TtPRnPCM4AI/AAAAAAAAQc0/Vvc74HYL35s/s1920-w1920-h1080-c/IMG_1984.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_1841.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-LQXZpNUUdw8/UWoqJONj7-I/AAAAAAAAMh0/7m100XOFcEo/s1920-w1920-h1080-c/MOL_1841.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/9082667654_c7919ec6ed_o.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-iVr5r1Yycbs/UkPSMp_2CZI/AAAAAAAALrA/ME5aBtr5fdM/s1920-w1920-h1080-c/9082667654_c7919ec6ed_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Wyoming-5.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-jwJEWGscrls/T-dsvGIbyRI/AAAAAAAABp4/Pgn_t5V2LNs/s1920-w1920-h1080-c/Wyoming-5.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_8981.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-FeRCoqwVOB4/Tkgq-geJE3I/AAAAAAAAFYo/xdj-91ytvg8/s1920-w1920-h1080-c/IMG_8981.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/04_20080526.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ENSOsH-5iPQ/UZSar_1xTLI/AAAAAAAAsTo/CjPKgR3jXAs/s1920-w1920-h1080-c/04_20080526.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0432.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-jmMSVP61kaQ/TqtX5OPLfZI/AAAAAAAAFkk/8dE_CxpTiHM/s1920-w1920-h1080-c/IMG_0432.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/tah+prohm+ruins.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-N-jkCCpnvmM/Tg0t85f5-dI/AAAAAAAABj8/otdYcgGq4ZU/s1920-w1920-h1080-c/tah%2Bprohm%2Bruins.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0642.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Lk6txIIotmM/ToZuJ99slYI/AAAAAAAAQIg/y0jvaiYTIHA/s1920-w1920-h1080-c/IMG_0642.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MC2_8779.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-QpB1YMuAXEA/TikI95S2KmI/AAAAAAAAPSw/kJPeHft92m4/s1920-w1920-h1080-c/MC2_8779.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0366.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-E57LJIzkkd8/UM-oHjiKHJI/AAAAAAAAIjY/QKAP7QTXBNY/s1920-w1920-h1080-c/IMG_0366.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_1818.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/--qL9ddvO4gs/UWoqHffdewI/AAAAAAAAMh0/uf5mp_xqsHI/s1920-w1920-h1080-c/MOL_1818.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3027.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Xdz2ceNVzdw/Tm5L7A9tdYI/AAAAAAAAFsg/k4Tjwbi73Cw/s1920-w1920-h1080-c/IMG_3027.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0242.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ejLi6Bg7IUI/TonR_AZLYLI/AAAAAAAAQWk/A1bVgL3p2A4/s1920-w1920-h1080-c/IMG_0242.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0423-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-iNpCGNJTrRo/Ugbk1ZMLczI/AAAAAAAAOE0/FZWVWqXGdT8/s1920-w1920-h1080-c/DSC_0423-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/WahclelaFalls.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-q9gWC1ZIAvg/UbZrg9lIcAI/AAAAAAAAL4I/xzSlyLfAGrQ/s1920-w1920-h1080-c/WahclelaFalls.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_9166.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-CaqC7SHp_2w/SF8sHokHjwI/AAAAAAAACyw/gC4j26zZen8/s1920-w1920-h1080-c/DSC_9166.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_7449.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Bo0_R3Hshio/UOUefGb4bpI/AAAAAAAARno/EBZGWRhWwzk/s1920-w1920-h1080-c/IMG_7449.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/path_of_leaves.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-y9mHkm6F9NI/UJH6oUvIN3I/AAAAAAAADqU/ueLAmjtceMI/s1920-w1920-h1080-c/path_of_leaves.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/700_1905.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-nEEPZA887gc/SRGbDPl6jgI/AAAAAAAADOc/LH5WYu-Vc1k/s1920-w1920-h1080-c/700_1905.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_2079-1.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ps4uT_pEdCE/RpKjlC16MuI/AAAAAAAAAt0/n09gNExGMl0/s1920-w1920-h1080-c/DSC_2079-1.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MWF_6457-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-M6BRAUZHPyo/UfbbKobVOKI/AAAAAAAAK_M/4WIHtFv7Idk/s1920-w1920-h1080-c/MWF_6457-2.jpg\"]}]}}","module.exports = {\"background-patterns\":{\"image\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/01.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern1.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern2.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern3.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern4.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern5.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern6.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern7.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-1667135_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-2069198_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-2425614_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-2790359_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-2863542_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-3288642_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-geometric-pattern-background_1319-242.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/animals-16908_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/autumn-1801896_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/backdrop-3346304_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/background-1141891_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/background-1141892_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/basket-2023197_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begflo41.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begflo45.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begflo55.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begflo63.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begtkan01.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begtkan20.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begtkan56.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo02.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo102.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo106.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo135.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo33.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo75.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo76.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo80.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan11.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan15.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan17.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan21.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan30.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan33.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan46.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan48.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan50.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan56.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/blue-1545368_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/blue-3368023_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/braiding-2697075_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cactus-2191647_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cactus-3324067_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cactus-3334141_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/camouflage-145980_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/camouflage-33708_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor05.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor125.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor126.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor129.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor131.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor139.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor15.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor41.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor44.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/christmas-1091551_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/circle-2696910_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/circles-1005197_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/circles-1005321_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cube-402231_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cute-3047767_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/decor-763806_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/decorative-1781458_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/design-3289984_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/diamonds-1524471_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/dreamcatcher-3334128_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/floral-1299131_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/floral-1788412_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/floral-4655084_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/floral-pattern-1603073_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/foil02.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/foil09.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/foil10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/foil14.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/galk06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/galk07.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/galk09.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/geluzor81.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/geluzor82.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/geluzor84.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/geometric-patterns-1978688_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/goltum10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/gothic-756211_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/green-753533_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/green-763804_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart05.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart32.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart33.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart34.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart39.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart41.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart51.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart53.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/hexagon-1312786_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-1bjZ4CEqGLSGiWI.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-3PniNaR4EM.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-6oQV3ly2I1vFY5Je.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-9fPsO9xLXxzONha.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-AJ5CKq0awy4d9EF.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-Elrl20LiRFHXr.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-Fu9UMDonFXB4mIqU.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-HxkaMXBjzP.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-UwawezoPZ9I.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-VFpI9G4V62V.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-VcTxveu7iXkz.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-ka9dtT7zZFsY.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-nJw0PAz0l03dSZY.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-ybmMVJ4cYA.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-z9Xwv2KKSbgW2b.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga16.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga17.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga25.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga31.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga32.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga37.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/kortkan03.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/kortkan06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/kortkan07.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/lilflow110.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/lilflow24.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/lilflow82.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/lilflow84.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/magnolia-732331_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/meha10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/meha18.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/meha23.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/mesh-2697072_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic18.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic28.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic59.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic82.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic83.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic87.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic88.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/mosaic-2790339_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/music57.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/music58.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-1008150_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-3289978_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-403769_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-5415668_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-728509_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/purple-755266_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/purple-756209_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rail-2721626_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast02.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast11.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast22.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast38.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast43.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast46.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast48.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast59.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast60.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast68.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast69.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast79.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast83.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/roses-5095521_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/roses-5100472_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor12.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor26.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor27.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor35.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor67.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sand89.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-1320742_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-1781493_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-1837442_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-3289975_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1085294_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1085297_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1086306_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1086309_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1086311_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1089796_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1089797_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1822610_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-5095737_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-757848_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sersv01.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sersv32.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seruzor06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seruzor47.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sinkrasuz10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sinkrasuz101.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sinkrasuz37.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star-2721633_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star02.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star41.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star48.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star49.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/stars-1005267_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/tile-1892631_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/tree-5970709_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/tree-5970776_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/triangle-753534_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/vector-1603109_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/violet10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/wave-2697053_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/wave-2721632_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/white-2484120_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/white-abstract-background_23-2148806274.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/white-abstract-background_23-2148810246.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/white-abstract-background_23-2148810353.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/zolot31.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/zolot47.png\"]}}","var map = {\n\t\"./attention/attention.mp3\": 17533\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 10253;","var map = {\n\t\"./_alien-bomb-timer/_alien-bomb-timer.mp3\": 90451,\n\t\"./_phone_busy/_phone_busy.mp3\": 1627,\n\t\"./marching-band-dave-girtsman/marching-band-dave-girtsman.mp3\": 65705\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 81089;","var map = {\n\t\"./_beep_a/_beep_a.mp3\": 9589\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 31250;","var map = {\n\t\"./_beep_a/_beep_a.mp3\": 54526,\n\t\"./beep_positive/beep_positive.mp3\": 66391,\n\t\"./beep_up/beep_up.mp3\": 51922,\n\t\"./bleep/bleep.mp3\": 83113,\n\t\"./cellular_click/cellular_click.mp3\": 70180,\n\t\"./computer_chime/computer_chime.mp3\": 14528,\n\t\"./ether/ether.mp3\": 86123,\n\t\"./good_chime/good_chime.mp3\": 11691,\n\t\"./mono_u/mono_u.mp3\": 63414,\n\t\"./pixel_beep/pixel_beep.mp3\": 66488,\n\t\"./plop/plop.mp3\": 88711,\n\t\"./pop/pop.mp3\": 730,\n\t\"./retro_game/retro_game.mp3\": 76496,\n\t\"./tiny_noize/tiny_noize.mp3\": 28288\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 60255;","var map = {\n\t\"./marching-band-dave-girtsman/marching-band-dave-girtsman.mp3\": 36445\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 90683;","var constants = {\n\n    ASSETS_URL_PREFIX: './',\n    STORAGE_NAME: 'xabber-storage',\n    STORAGE_VERSION: 'v8',\n\n    CONTAINER_ELEMENT: \"#xabber-container\",\n\n    FAVICON_DEFAULT: \"assets/images/favicon.png\",\n    FAVICON_DEFAULT_GREY: \"assets/images/favicon-grey.png\",\n    FAVICON_MESSAGE: \"assets/images/favicon-message.png\",\n    BACKGROUND_IMAGE: \"assets/images/background.png\",\n\n    WIDTH_MEDIUM: 1650,\n    WIDTH_NARROW: 1280,\n    WIDTH_TINY: 1152,\n\n    LOG_LEVEL_NONE: -1,\n    LOG_LEVEL_ERROR: 1,\n    LOG_LEVEL_WARN: 2,\n    LOG_LEVEL_INFO: 3,\n    LOG_LEVEL_DEBUG: 4,\n\n    LOG_LEVEL: 'ERROR',\n\n    KEY_BACKSPACE: 8,\n    KEY_TAB: 9,\n    KEY_ENTER: 13,\n    KEY_SHIFT: 16,\n    KEY_CTRL: 17,\n    KEY_ESCAPE: 27,\n    KEY_SPACE: 32,\n    KEY_ARROW_LEFT: 37,\n    KEY_ARROW_UP: 38,\n    KEY_ARROW_RIGHT: 39,\n    KEY_ARROW_DOWN: 40,\n    KEY_DELETE: 46,\n    KEY_FORWARD_SLASH: 47,\n    KEY_AT: 50,\n\n    VOICE_MSG_TIME: 120,\n\n    PASSWORD_DOT: String.fromCharCode(0x2022),\n\n    CONNECTION_URL: null,\n\n    CONN_STATUSES: {\n        0: 'ERROR',\n        1: 'CONNECTING',\n        2: 'CONNFAIL',\n        3: 'AUTHENTICATING',\n        4: 'AUTHFAIL',\n        5: 'CONNECTED',\n        6: 'DISCONNECTED',\n        7: 'DISCONNECTING',\n        8: 'ATTACHED',\n        9: 'REDIRECT',\n        10: 'CONNTIMEOUT'\n    },\n\n    PREKEYS_COUNT: 100,\n    MIN_PREKEYS_COUNT: 80,\n\n    AES_KEY_LENGTH: 128,\n    AES_TAG_LENGTH: 128,\n    AES_EXTRACTABLE: true,\n\n    BAD_CONN_STATUSES: [0, 2, 4, 6, 10],\n\n    RECONNECTION_TIMEOUTS: [5000, 10000, 15000],\n    DOWNTIME_RECONNECTION_TIMEOUT: 15,\n    PING_SENDING_INTERVAL: 10,\n\n    IDLING_MINIMAL_TIMEOUT: 10,\n    IDLING_MAXIMUM_TIMEOUT: 90,\n    IDLING_DEFAULT_TIMEOUT: 30,\n\n    STATUS_WEIGHTS: {\n        chat: 1,\n        online: 2,\n        away: 3,\n        xa: 4,\n        dnd: 5,\n        offline: 6,\n        unavailable: 7\n    },\n\n    PRESENT_INTERVAL: 900000,\n    CHATSTATE_INTERVAL_COMPOSING_AUDIO: 5000,\n    CHATSTATE_TIMEOUT_PAUSED: 15000,\n    CHATSTATE_TIMEOUT_STOPPED: 5000,\n    CHATSTATE_TIMEOUT_PAUSED_AUDIO: 10000,\n\n    JINGLE_WAITING_TIME: 60,\n\n    SYNCHRONIZATION_RSM_MAX: 25,\n\n    REGISTRATION_DOMAINS: [],\n    LOGIN_DOMAINS: [],\n    TRUSTED_DOMAINS: [],\n    RECOMMENDED_DOMAIN: '',\n    REGISTRATION_BUTTON: true,\n    REGISTRATION_CUSTOM_DOMAIN: true,\n    LOGIN_CUSTOM_DOMAIN: true,\n\n    TURN_SERVERS_LIST: [\n        {\n            urls: 'turn:numb.viagenie.ca',\n            credential: 'muazkh',\n            username: 'webrtc@live.com'\n        },\n        {\n            urls: \"turn:turn.editcompany.org:5439\",\n            username: \"test\",\n            credential: \"1111\"\n        },\n        {\n            urls: 'turn:192.158.29.39:3478?transport=udp',\n            credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n            username: '28224511:1379330808'\n        },\n        {\n            urls: 'turn:192.158.29.39:3478?transport=tcp',\n            credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n            username: '28224511:1379330808'\n        }\n    ],\n\n    JINGLE_MSG_PROPOSE: 0,\n    JINGLE_MSG_REJECT: 1,\n    JINGLE_MSG_ACCEPT: 2,\n\n    MSG_BLOCKED: -2,\n    MSG_ERROR: -1,\n    MSG_PENDING: 0,\n    MSG_SENT: 1,\n    MSG_DELIVERED: 2,\n    MSG_DISPLAYED: 3,\n    MSG_ARCHIVED: 4,\n    MSG_SAVED: 5,\n\n    RSM_ATTRIBUTES: ['max', 'first', 'last', 'after', 'before', 'index', 'count'],\n    MAM_ATTRIBUTES: ['with', 'start', 'end'],\n\n    GENERAL_GROUP_ID: 1,\n    NON_ROSTER_GROUP_ID: 2,\n\n    MATERIAL_COLORS: [\n        \"red\", \"green\", \"blue\", \"deep-purple\", \"orange\", \"lime\",\n        \"pink\", \"purple\", \"indigo\", \"light-blue\", \"cyan\", \"teal\",\n        \"light-green\", \"amber\", \"deep-orange\", \"brown\", \"blue-grey\"\n    ],\n\n    MAX_AVATAR_FILE_SIZE: 64000,\n\n    AVATAR_PRIORITIES: {\n        VCARD_AVATAR: 0,\n        PUBSUB_AVATAR: 1\n    },\n\n    EMAIL_FOR_JOIN_TRANSLATION: \"info@xabber.com\",\n\n    AVATAR_SIZES: {\n        TOOLBAR_ACCOUNT_ITEM: 32,\n        SETTINGS_ACCOUNT_ITEM: 32,\n        XABBER_ACCOUNT: 32,\n        SYNCHRONIZE_ACCOUNT_ITEM: 36,\n        MENTION_ITEM: 36,\n        ACCOUNT_SETTINGS_LEFT: 96,\n        ACCOUNT_VCARD_EDIT: 80,\n        ROSTER_RIGHT_ACCOUNT_ITEM: 38,\n        ROSTER_LEFT_ACCOUNT_ITEM: 40,\n        PARTICIPANT_DETAILS_ITEM: 48,\n        CONTACT_RIGHT_ITEM: 32,\n        GROUPCHAT_MEMBER_ITEM: 32,\n        CONTACT_LEFT_ITEM: 32,\n        CONTACT_BLOCKED_ITEM: 32,\n        CONTACT_DETAILS: 192,\n        GROUP_SETTINGS: 96,\n        CHAT_ITEM: 40,\n        CHAT_HEAD: 40,\n        CHAT_MESSAGE: 32,\n        CHAT_BOTTOM: 48,\n        XABBER_VOICE_CALL_VIEW: 128,\n        OMEMO_ENABLE_SETTING: 182\n    },\n\n\n    SYNC_WAY_DATA: {\n        no: {\n            tip: 'xabber_account__sync__settings_already_synced',\n            icon: 'mdi-cloud-check'\n        },\n        from_server: {\n            tip: 'xabber_account__sync__settings_will_be_downloaded',\n            icon: 'mdi-cloud-download'\n        },\n        to_server: {\n            tip: 'xabber_account__sync__settings_will_be_uploaded',\n            icon: 'mdi-cloud-upload'\n        },\n        delete: {\n            tip: 'xabber_account__sync__acc_will_be_deleted',\n            icon: 'mdi-delete'\n        },\n        off_local: {\n            tip: 'xabber_account__sync__local_acc',\n            icon: 'mdi-cloud-outline-off'\n        },\n        off_remote: {\n            tip: 'xabber_account__sync__remote_acc',\n            icon: 'mdi-cloud-outline-off'\n        }\n    },\n\n    SYNCED_STATUS_DATA: {\n        off: {\n            tip: 'xabber_account__sync_status__disabled',\n            icon: 'mdi-cloud-outline-off'\n        },\n        yes: {\n            tip: 'xabber_account__sync_status__synced',\n            icon: 'mdi-cloud-check'\n        },\n        no: {\n            tip: 'xabber_account__sync_status__not_synced',\n            icon: 'mdi-cloud'\n        }\n    },\n\n    EMOJI_LIST_NAME: function (emoji_list) {\n        return {\n            \"smiles_and_people\": 'emoji_list__catelory_name__smiles_and_people',\n            \"body_and_clothes\": 'emoji_list__catelory_name__body_and_clothes',\n            \"animals_and_nature\": 'emoji_list__catelory_name__animals_and_nature',\n            \"food_and_drinks\": 'emoji_list__catelory_name__food_and_drinks',\n            \"travel_and_places\": 'emoji_list__catelory_name__travel_and_places',\n            \"events\": 'emoji_list__catelory_name__events',\n            \"objects\": 'emoji_list__catelory_name__objects',\n            \"signs\": 'emoji_list__catelory_name__signs'\n        }[emoji_list]\n    },\n\n    QUOTE_MARKER: '&gt;',\n    MARKUP_TAGS: ['bold', 'underline', 'italic', 'strike', 'link', 'quote'],\n\n    BLANK_VIDEO: {\n        OGG: 'data:video/ogg;base64, ',\n        MP4: 'data:video/mp4;base64, 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',\n        WEBM: 'data:video/webm;base64, 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qqqruu6sgxQVdd1XVmWZQCu67qyLMsCAAAOHAAAAoygk4wqi7DRhAsPQKEhKwKAKAAAwBimFFPKMCYhpBAaxiSEFEImJaXSUqogpFJSKRWEVEoqJaOUUmopVRBSKamUCkIqJZVSAADYgQMA2IGFUGjISgAgDwCAMEYpxhhzTiKkFGPOOScRUoox55yTSjHmnHPOSSkZc8w556SUzjnnnHNSSuacc845KaVzzjnnnJRSSuecc05KKSWEzkEnpZTSOeecEwAAVOAAABBgo8jmBCNBhYasBABSAQAMjmNZmuZ5omialiRpmud5niiapiZJmuZ5nieKqsnzPE8URdE0VZXneZ4oiqJpqirXFUXTNE1VVV2yLIqmaZqq6rowTdNUVdd1XZimaaqq67oubFtVVdV1ZRm2raqq6rqyDFzXdWXZloEsu67s2rIAAPAEBwCgAhtWRzgpGgssNGQlAJABAEAYg5BCCCFlEEIKIYSUUggJAAAYcAAACDChDBQashIASAUAAIyx1lprrbXWQGettdZaa62AzFprrbXWWmuttdZaa6211lJrrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmstpZRSSimllFJKKaWUUkoppZRSSgUA+lU4APg/2LA6wknRWGChISsBgHAAAMAYpRhzDEIppVQIMeacdFRai7FCiDHnJKTUWmzFc85BKCGV1mIsnnMOQikpxVZjUSmEUlJKLbZYi0qho5JSSq3VWIwxqaTWWoutxmKMSSm01FqLMRYjbE2ptdhqq7EYY2sqLbQYY4zFCF9kbC2m2moNxggjWywt1VprMMYY3VuLpbaaizE++NpSLDHWXAAAd4MDAESCjTOsJJ0VjgYXGrISAAgJACAQUooxxhhzzjnnpFKMOeaccw5CCKFUijHGnHMOQgghlIwx5pxzEEIIIYRSSsaccxBCCCGEkFLqnHMQQgghhBBKKZ1zDkIIIYQQQimlgxBCCCGEEEoopaQUQgghhBBCCKmklEIIIYRSQighlZRSCCGEEEIpJaSUUgohhFJCCKGElFJKKYUQQgillJJSSimlEkoJJYQSUikppRRKCCGUUkpKKaVUSgmhhBJKKSWllFJKIYQQSikFAAAcOAAABBhBJxlVFmGjCRcegEJDVgIAZAAAkKKUUiktRYIipRikGEtGFXNQWoqocgxSzalSziDmJJaIMYSUk1Qy5hRCDELqHHVMKQYtlRhCxhik2HJLoXMOAAAAQQCAgJAAAAMEBTMAwOAA4XMQdAIERxsAgCBEZohEw0JweFAJEBFTAUBigkIuAFRYXKRdXECXAS7o4q4DIQQhCEEsDqCABByccMMTb3jCDU7QKSp1IAAAAAAADADwAACQXAAREdHMYWRobHB0eHyAhIiMkAgAAAAAABcAfAAAJCVAREQ0cxgZGhscHR4fICEiIyQBAIAAAgAAAAAggAAEBAQAAAAAAAIAAAAEBB9DtnUBAAAAAAAEPueBAKOFggAAgACjzoEAA4BwBwCdASqwAJAAAEcIhYWIhYSIAgIABhwJ7kPfbJyHvtk5D32ych77ZOQ99snIe+2TkPfbJyHvtk5D32ych77ZOQ99YAD+/6tQgKOFggADgAqjhYIAD4AOo4WCACSADqOZgQArADECAAEQEAAYABhYL/QACIBDmAYAAKOFggA6gA6jhYIAT4AOo5mBAFMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAGSADqOFggB6gA6jmYEAewAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAj4AOo5mBAKMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAKSADqOFggC6gA6jmYEAywAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAz4AOo4WCAOSADqOZgQDzADECAAEQEAAYABhYL/QACIBDmAYAAKOFggD6gA6jhYIBD4AOo5iBARsAEQIAARAQFGAAYWC/0AAiAQ5gGACjhYIBJIAOo4WCATqADqOZgQFDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggFPgA6jhYIBZIAOo5mBAWsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAXqADqOFggGPgA6jmYEBkwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIBpIAOo4WCAbqADqOZgQG7ADECAAEQEAAYABhYL/QACIBDmAYAAKOFggHPgA6jmYEB4wAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIB5IAOo4WCAfqADqOZgQILADECAAEQEAAYABhYL/QACIBDmAYAAKOFggIPgA6jhYICJIAOo5mBAjMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAjqADqOFggJPgA6jmYECWwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYICZIAOo4WCAnqADqOZgQKDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggKPgA6jhYICpIAOo5mBAqsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCArqADqOFggLPgA6jmIEC0wARAgABEBAUYABhYL/QACIBDmAYAKOFggLkgA6jhYIC+oAOo5mBAvsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAw+ADqOZgQMjADECAAEQEAAYABhYL/QACIBDmAYAAKOFggMkgA6jhYIDOoAOo5mBA0sAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA0+ADqOFggNkgA6jmYEDcwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIDeoAOo4WCA4+ADqOZgQObADECAAEQEAAYABhYL/QACIBDmAYAAKOFggOkgA6jhYIDuoAOo5mBA8MAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA8+ADqOFggPkgA6jhYID+oAOo4WCBA+ADhxTu2sBAAAAAAAAEbuPs4EDt4r3gQHxghEr8IEK'\n    },\n\n    MIME_TYPES: {\n        image: [\n            'image/gif',\n            'image/jpeg',\n            'image/pjpeg',\n            'image/png',\n            'image/svg+xml',\n            'image/tiff',\n            'image/vnd.microsoft.icon',\n            'image/vnd.wap.wbmp',\n            'image/webp'\n        ],\n        audio: [\n            'audio/basic',\n            'audio/L24',\n            'audio/mp4',\n            'audio/aac',\n            'audio/mpeg',\n            'audio/ogg',\n            'audio/ogg; codecs=opus',\n            'audio/ogg; codecs=opus+voice',\n            'audio/vorbis',\n            'audio/x-ms-wma',\n            'audio/x-ms-wax',\n            'audio/vnd.rn-realaudio',\n            'audio/vnd.wave',\n            'audio/webm',\n            'audio/x-wav'\n        ],\n        video: [\n            'video/mpeg',\n            'video/mp4',\n            'video/ogg',\n            'video/quicktime',\n            'video/webm',\n            'video/x-ms-wmv',\n            'video/x-flv',\n            'video/3gpp',\n            'video/3gpp2'\n        ],\n        document: [\n            'text/cmd',\n            'text/css',\n            'text/csv',\n            'text/html',\n            'text/javascript (Obsolete)',\n            'text/plain',\n            'text/php',\n            'text/xml',\n            'text/markdown',\n            'text/cache-manifestapplication/json',\n            'application/xml',\n            'application/vnd.oasis.opendocument.text',\n            'application/vnd.oasis.opendocument.graphics',\n            'application/msword'\n        ],\n        pdf: [\n            'application/pdf'\n        ],\n        table: [\n            'application/vnd.oasis.opendocument.spreadsheet',\n            'application/vnd.ms-excel'\n        ],\n        archive: [\n            'application/zip',\n            'application/gzip',\n            'application/x-rar-compressed',\n            'application/x-tar',\n            'application/x-7z-compressed'\n        ],\n        presentation: [\n            'application/vnd.ms-powerpoint',\n            'application/vnd.oasis.opendocument.presentation'\n        ]\n    },\n\n    languages: {\n        \"en\": \"English\",\n        \"ar-SA\": \"العربية\",\n        \"az-AZ\": \"Azərbaycanca\",\n        \"be-BY\": \"Беларуская\",\n        \"bg-BG\": \"Български\",\n        \"bs-BA\": \"Bosanski\",\n        \"ca-ES\": \"Català\",\n        \"cs-CZ\": \"Čeština\",\n        \"cy-GB\": \"Cymraeg\",\n        \"da-DK\": \"Dansk\",\n        \"de-DE\": \"Deutsch\",\n        \"el-GR\": \"Ελληνικά\",\n        \"es419\": \"Spanish Latin America\",\n        \"es-ES\": \"Español\",\n        \"et-EE\": \"Eesti\",\n        \"fa-IR\": \"فارسی\",\n        \"fi-FI\": \"Suomi\",\n        \"fil-PH\": \"Pilipino\",\n        \"fr-FR\": \"Français\",\n        \"ga-IE\": \"Gaeilge\",\n        \"he\": \"עברית\",\n        \"hi-IN\": \"हिन्दी\",\n        \"hr-HR\": \"Hrvatski\",\n        \"hu-HU\": \"Magyar\",\n        \"hy-AM\": \"Հայերեն\",\n        \"in-ID\": \"Bahasa Indonesia\",\n        \"is-IS\": \"Íslenska\",\n        \"it-IT\": \"Italiano\",\n        \"ja-JP\": \"日本語\",\n        \"ka-GE\": \"ქართული\",\n        \"kmr-TR\": \"Kurmancî (Kurdî)\",\n        \"ko-KR\": \"한국어\",\n        \"ku-TR\": \"Kurdî\",\n        \"ky-KG\": \"Кыргызча\",\n        \"la-LA\": \"Latina\",\n        \"lb-LU\": \"Luxembourgish\",\n        \"lt-LT\": \"Lietuvių\",\n        \"mk-MK\": \"Македонски\",\n        \"mn-MN\": \"Монгол\",\n        \"mr-IN\": \"मराठी\",\n        \"ms-MY\": \"Bahasa Melayu\",\n        \"nb-NO\": \"Norsk (bokmål)\",\n        \"ne-NP\": \"Nepālī\",\n        \"nl-NL\": \"Nederlands\",\n        \"no-NO\": \"Norsk (nynorsk)\",\n        \"oc-FR\": \"Occitan\",\n        \"pa-IN\": \"ਪੰਜਾਬੀ (ਗੁਰਮੁਖੀ)\",\n        \"pl-PL\": \"Polski\",\n        \"pt-BR\": \"Português, brasileiro\",\n        \"pt-PT\": \"Português\",\n        \"qya-AA\": \"quenya\",\n        \"ro-RO\": \"Română\",\n        \"ru-RU\": \"Русский\",\n        \"sco-GB\": \"Scots\",\n        \"si-LK\": \"සිංහල\",\n        \"sk-SK\": \"Slovenčina\",\n        \"sl-SI\": \"Slovenščina\",\n        \"sq-AL\": \"Shqip\",\n        \"sr-Cyrl-ME\": \"Montenegrin (Cyrillic)\",\n        \"sr-SP\": \"Српски / Srpski\",\n        \"sv-SE\": \"Svenska\",\n        \"sw-KE\": \"Kiswahili\",\n        \"ta-IN\": \"தமிழ்\",\n        \"te-IN\": \"తెలుగు\",\n        \"tg-TJ\": \"Тоҷикӣ\",\n        \"tk-TM\": \"Türkmençe\",\n        \"tlh-AA\": \"Klingon\",\n        \"tr-TR\": \"Türkçe\",\n        \"uk-UA\": \"Українська\",\n        \"uz-UZ\": \"Oʻzbekcha / Ўзбекча\",\n        \"vi-VN\": \"Tiếng Việt\",\n        \"yo-NG\": \"Yorùbá\",\n        \"zh-CN\": \"简体中文\",\n        \"zh-TW\": \"中國傳統的\",\n        \"zu-ZA\": \"isiZulu\"\n    },\n\n    languages_another_locales: {\n        \"es419\": \"es-latin\",\n        \"in-ID\": \"id\"\n    },\n\n    PERSONAL_AREA_URL: {},\n\n    XABBER_ACCOUNT_URL: 'https://www.xabber.com/account',\n    USE_SOCIAL_AUTH: true,\n    REGISTER_XMPP_ACCOUNT: true,\n    REGISTER_XMPP_ACCOUNT_URL: 'https://www.xabber.com/account/auth/signup/',\n    CHECK_VERSION: true,\n    DEFAULT_LOGIN_SCREEN: 'xmpp',\n\n    GCM_SENDER_ID: '868637702480',\n    GCM_API_KEY: 'AIzaSyC1JCBB3LLf_4DG_vRWMEEe0I4X5msEU-M',\n    MESSAGE_ARCHIVE_DB_NAME: 'MessageArchive',\n    STANZA_MAX_SIZE: Math.pow(2, 16),\n\n    BLUR_VALUE: 25,\n    VIGNETTING_VALUE: 128,\n    TRANSPARENCY_VALUE: 50,\n\n    MAIN_COLOR: 'red',\n    CLIENT_NAME: 'Xabber for Web',\n    SHORT_CLIENT_NAME: 'Xabber',\n    SHORT_CLIENT_DESCRIPTION: 'World’s best XMPP experience',\n    CLIENT_LOGO: 'assets/images/xabber-logo-96.png',\n    TOOLBAR_LOGO: 'assets/images/xabber-logo.png',\n    ENABLE_XABBER_ACCOUNT: false,\n    SCREEN_ABOUT: true,\n    BACKGROUND_IMAGES_XML_URL: 'https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/background-images.xml',\n    BACKGROUND_PATTERNS_XML_URL: 'https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/background-patterns.xml',\n    DEVELOPER_URL: 'https://redsolution.com',\n    CLIENT_GITHUB_URL: 'https://github.com/redsolution/xabber-web',\n    PROJECT_CROWDIN_URL: 'https://crowdin.com/project/xabber',\n    CLIENT_LICENSE_GITHUB_URL: 'https://github.com/redsolution/xabber-web/blob/master/LICENSE'\n};\n\nconstants.JINGLE_MSG_STATE = {};\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_REJECT] = 'reject';\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_PROPOSE] = 'propose';\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_ACCEPT] = 'accept';\n\nconstants.MSG_STATE = {};\nconstants.MSG_STATE[constants.MSG_ERROR] = 'error';\nconstants.MSG_STATE[constants.MSG_PENDING] = 'pending';\nconstants.MSG_STATE[constants.MSG_SENT] = 'sent';\nconstants.MSG_STATE[constants.MSG_DELIVERED] = 'delivered';\nconstants.MSG_STATE[constants.MSG_DISPLAYED] = 'displayed';\nconstants.MSG_STATE[constants.MSG_ARCHIVED] = 'archived';\nconstants.MSG_STATE[constants.MSG_BLOCKED] = 'not-allowed';\nconstants.MSG_STATE[constants.MSG_SAVED] = 'saved';\n\nconstants.MSG_VERBOSE_STATE = {};\nconstants.MSG_VERBOSE_STATE[constants.MSG_ERROR] = 'message__delivering_state__error';\nconstants.MSG_VERBOSE_STATE[constants.MSG_PENDING] = 'message__delivering_state__pending';\nconstants.MSG_VERBOSE_STATE[constants.MSG_SENT] = 'message__delivering_state__sent';\nconstants.MSG_VERBOSE_STATE[constants.MSG_DELIVERED] = 'message__delivering_state__delivered';\nconstants.MSG_VERBOSE_STATE[constants.MSG_DISPLAYED] = 'message__delivering_state__displayed';\nconstants.MSG_VERBOSE_STATE[constants.MSG_ARCHIVED] = 'message__delivering_state__archived';\nconstants.MSG_VERBOSE_STATE[constants.MSG_BLOCKED] = 'message__delivering_state__error';\nconstants.MSG_VERBOSE_STATE[constants.MSG_SAVED] = 'message__delivering_state__saved';\n\nexport default constants;\n","// only external libs and plugins for them\n// import Backbone from \"backbone\";\nimport \"backbone\";\nimport _ from \"underscore\";\nimport $ from \"jquery\";\nimport moment from \"moment\";\nimport WaveSurfer from \"wavesurfer\";\nimport slug from \"slug\";\nimport sha256 from \"sha256\";\nimport magnificPopup from \"magnific-popup\";\nimport i18next from \"i18next\";\nimport i18next_sprintf from \"i18next-post\";\nimport Strophe from \"strophe\";\nimport plyr from \"Plyr\";\nimport Quill from \"Quill\";\nimport libsignal from \"libsignal-protocol\";\nimport sha1 from \"sha1_hasher\";\nimport Recorder from 'opus-recorder';\nimport encoderPath from 'opus-recorder/dist/encoderWorker.min.js';\nimport VanillaQR from \"VanillaQR\";\nimport idleJs from \"idle-js\";\nimport backgroundImagesXml from \"xml-loader!~/xmls/background-images.xml\";\nimport backgroundPatternsXml from \"xml-loader!~/xmls/background-patterns.xml\";\nimport \"~/css/color-scheme.css\";\nimport \"~/css/materialdesignicons.css\";\nimport \"~/css/materialize.css\";\nimport \"~/css/plyr.css\";\nimport \"~/css/quill.snow.css\";\nimport \"~/css/xabber.css\";\nimport \"~/node_modules/magnific-popup/dist/magnific-popup.css\";\nimport \"~/node_modules/perfect-scrollbar/dist/css/perfect-scrollbar.css\";\nimport \"strophe.disco\";\nimport \"strophe.ping\";\nimport \"strophe.rsm\";\nimport \"strophe.caps\";\nimport \"strophe.pubsub\";\nimport \"omemo\";\nimport \"backbone.localsync\";\nimport \"materialize\";\nimport \"perfectScrollbarJQuery\";\n\nexport default _.extend({\n    $: $,\n    _: _,\n    moment: moment,\n    WaveSurfer: WaveSurfer,\n    Plyr: plyr,\n    Quill: Quill,\n    libsignal: libsignal,\n    slug: slug,\n    sha1: sha1,\n    idleJs: idleJs,\n    opusRecorder: Recorder,\n    opusRecorderEncoderPath: encoderPath,\n    xabber_i18next: i18next,\n    xabber_i18next_sprintf: i18next_sprintf,\n    sha256: sha256,\n    VanillaQR: VanillaQR,\n    magnificPopup: magnificPopup,\n    backgroundImagesXml: backgroundImagesXml,\n    backgroundPatternsXml: backgroundPatternsXml,\n    Strophe: Strophe\n}, Strophe);\n","    import _ from \"underscore\";\n    import $ from \"jquery\";\n\n    _.templateSettings = {\n        evaluate : /\\{\\[([\\s\\S]+?)\\]\\}/g,\n        interpolate : /\\{\\{([\\s\\S]+?)\\}\\}/g\n    };\n\n    let templates = {};\n\n    let insertSvg = function (html) {\n        let $html = $('<div/>').html(html);\n        $html.find('.mdi-svg-template').each(function () {\n            let $el = $(this),\n                svg_name = $el.data('svgname');\n            $el.removeClass('mdi-svg-template').addClass('mdi-'+svg_name)\n                .attr('data-svgname', null);\n            $el.html(templates.svg[svg_name]());\n        });\n        return $html.html();\n    };\n\n    let _addTemplate = function (name, options) {\n        options || (options = {});\n        let path = name.split('.'),\n            tpl = _.template(require('raw-loader!~/templates/'+path.join('/')+'.html').default),\n            tpl_name = path.pop(),\n            res = templates;\n        _.each(path, function (attr) {\n            res[attr] || (res[attr] = {});\n            res = res[attr];\n        });\n        if (options.is_svg) {\n            res[tpl_name] = tpl;\n        } else {\n            res[tpl_name] = function (data) {\n                return insertSvg(tpl(data));\n            };\n        }\n    };\n\n    let addJSONTemplate = function (name, ) {\n        let path = name.split('.'),\n            tpl = require('~/templates/'+path.join('/')+'.json'),\n            tpl_name = path.pop(),\n            res = templates;\n        _.each(path, function (attr) {\n            res[attr] || (res[attr] = {});\n            res = res[attr];\n        });\n        res[tpl_name] = tpl;\n    };\n\n    let addTemplate = function (name) {\n        _addTemplate(name, {is_svg: false});\n    };\n\n    let addSvgTemplate = function (name) {\n        _addTemplate(name, {is_svg: true});\n    };\n\n\n    addTemplate('base.dialog');\n    addTemplate('base.fingerprints');\n    addTemplate('base.fingerprints_devices');\n    addTemplate('base.fingerprint_item');\n    addTemplate('base.fingerprint_devices_item');\n    addTemplate('base.jingle_message_calling');\n    addTemplate('base.plyr_player_popup');\n    addTemplate('base.input_widget');\n    addTemplate('base.toolbar');\n    addTemplate('base.settings');\n    addTemplate('base.settings_modal');\n    addTemplate('base.setting_radio_input');\n    addTemplate('base.setting_language_radio_input');\n    addTemplate('base.about');\n    addTemplate('base.omemo_enable');\n    addTemplate('base.backgrounds_gallery');\n    addTemplate('base.color_picker');\n    addTemplate('base.color_scheme');\n\n    addTemplate('accounts.xmpp_login');\n    addTemplate('accounts.add_account');\n    addTemplate('accounts.unregister_account');\n    addTemplate('accounts.change_password');\n    addTemplate('accounts.change_account_password');\n    addTemplate('accounts.toolbar_item');\n    addTemplate('accounts.media_gallery_account_file');\n    addTemplate('accounts.media_gallery_account');\n    addTemplate('accounts.delete_files_media_gallery');\n    addTemplate('accounts.single_account_settings_modal');\n    addTemplate('accounts.account_settings_modal');\n    addTemplate('accounts.existing_groupchat_item');\n    addTemplate('accounts.resource');\n    addTemplate('accounts.resource_right');\n    addTemplate('accounts.webcam_panel');\n    addTemplate('accounts.emoji_panel');\n    addTemplate('accounts.emoji_picker');\n    addTemplate('accounts.emoji_picker_tabs');\n    addTemplate('accounts.global_settings_item_modal');\n    addTemplate('accounts.change_status');\n    addTemplate('accounts.token_item_modal');\n    addTemplate('accounts.current_token_item_modal');\n    addTemplate('accounts.audio_file_waveform');\n    addTemplate('accounts.avatars_gallery');\n    addTemplate('accounts.status_message_input_widget');\n\n    addTemplate('vcard.vcard');\n    addTemplate('vcard.vcard_modal');\n    addTemplate('vcard.vcard_edit_modal');\n    addTemplate('vcard.vcard_right');\n\n    addTemplate('searching.searching_wide');\n    addTemplate('searching.searching_account_item');\n    addTemplate('searching.existing_groupchat_item');\n    addTemplate('searching.existing_groupchat_details_view');\n\n    addTemplate('contacts.roster_right');\n    addTemplate('contacts.roster_left');\n    addTemplate('contacts.account_roster_right');\n    addTemplate('contacts.account_roster_left');\n    addTemplate('contacts.group_right');\n    addTemplate('contacts.group_left');\n    addTemplate('contacts.add_contact');\n    addTemplate('contacts.contact_right_item');\n    addTemplate('contacts.contact_left_item');\n    addTemplate('contacts.contact_blocked_item');\n    addTemplate('contacts.contact_details_right');\n    addTemplate('contacts.roster_settings');\n    addTemplate('contacts.group_settings');\n    addTemplate('contacts.groups_checkbox_list');\n    addTemplate('contacts.groups_checkbox_list_contact');\n    addTemplate('contacts.groups_new_group');\n    addTemplate('contacts.groups_list');\n    addTemplate('contacts.add_contact_account_item');\n    addTemplate('contacts.contact_placeholder');\n    addTemplate('contacts.groups');\n    addTemplate('contacts.edit_contact');\n    addTemplate('contacts.edit_group');\n    addTemplate('contacts.preloader');\n    addTemplate('contacts.media_item');\n    addTemplate('contacts.media_items_empty');\n    addTemplate('contacts.audio_file_waveform');\n    addTemplate('contacts.group_chats.group_chat_properties');\n    addTemplate('contacts.group_chats.group_chat_properties_right');\n    addTemplate('contacts.group_chats.group_chat_details');\n    addTemplate('contacts.group_chats.group_chat_details_right');\n    addTemplate('contacts.group_chats.invitation');\n    addTemplate('contacts.group_chats.group_chat_properties_edit');\n    addTemplate('contacts.group_chats.default_restrictions');\n    addTemplate('contacts.group_chats.default_restrictions_right');\n    addTemplate('contacts.group_chats.group_member_item');\n    addTemplate('contacts.group_chats.group_member_item_right');\n    addTemplate('contacts.group_chats.description_input_widget');\n    addTemplate('contacts.group_chats.group_name_input_widget');\n    addTemplate('contacts.group_chats.participant_badge_input_widget');\n    addTemplate('contacts.group_chats.invited_member_item');\n    addTemplate('contacts.group_chats.add_blocked_participant_form');\n    addTemplate('contacts.group_chats.participant_details_right');\n    addTemplate('contacts.group_chats.participant_rights');\n    addTemplate('contacts.group_chats.restriction_item');\n    addTemplate('contacts.group_chats.right_expire_variants');\n    addTemplate('contacts.group_chats.pinned_message');\n    addTemplate('contacts.group_chats.participant_details_item_right');\n    addTemplate('contacts.group_chats.participant_details_item');\n    addTemplate('contacts.group_chats.participants');\n    addTemplate('contacts.group_chats.participants_right_panel');\n    addTemplate('contacts.group_chats.badge_edit_view');\n    addTemplate('contacts.group_chats.private_participant_details');\n    addTemplate('contacts.group_chats.private_participant_details_item_right');\n    addTemplate('contacts.group_chats.set_status');\n    addTemplate('contacts.group_chats.status_item');\n    addTemplate('contacts.group_chats.group_status');\n    addTemplate('contacts.group_chats.group_status_right');\n    addTemplate('contacts.group_chats.file_item');\n\n    addTemplate('chats.chats_panel');\n    addTemplate('chats.add_chat_account_item');\n    addTemplate('chats.chat_item');\n    addTemplate('chats.chat_head');\n    addTemplate('chats.send_media');\n    addTemplate('chats.saved_chat_head');\n    addTemplate('chats.chat_content');\n    addTemplate('chats.chat_content_placeholder');\n    addTemplate('chats.chat_content_contact');\n    addTemplate('chats.chat_bottom');\n    addTemplate('chats.unread_marker');\n    addTemplate('chats.location_popup');\n    addTemplate('chats.subscription_buttons');\n    addTemplate('chats.forward_panel');\n    addTemplate('chats.chat_placeholder');\n    addTemplate('chats.message_item');\n    addTemplate('chats.messages.main');\n    addTemplate('chats.messages.searched');\n    addTemplate('chats.messages.forwarded');\n    addTemplate('chats.messages.system');\n    addTemplate('chats.messages.file_upload');\n    addTemplate('chats.messages.loading_circle');\n    addTemplate('chats.messages.file');\n    addTemplate('chats.messages.file_loading');\n    addTemplate('chats.messages.link_reference');\n    addTemplate('chats.messages.link_reference_chat');\n    addTemplate('chats.messages.attached_file');\n    addTemplate('chats.messages.video');\n    addTemplate('chats.messages.location');\n    addTemplate('chats.messages.audio_file');\n    addTemplate('chats.messages.audio_file_waveform');\n    addTemplate('chats.messages.auth_request');\n    addTemplate('chats.messages.group_request');\n    addTemplate('chats.messages.template-for-2');\n    addTemplate('chats.messages.template-for-3');\n    addTemplate('chats.messages.template-for-4');\n    addTemplate('chats.messages.template-for-5');\n    addTemplate('chats.messages.template-for-6');\n    addTemplate('chats.messages.hidden-template-for-2');\n    addTemplate('chats.messages.hidden-template-for-3');\n    addTemplate('chats.messages.hidden-template-for-4');\n    addTemplate('chats.messages.hidden-template-for-5');\n    addTemplate('chats.messages.hidden-template-for-6');\n    addTemplate('chats.messages.images_details');\n    addTemplate('chats.messages.saved_main');\n    addTemplate('chats.group_chats.pinned_message_panel');\n    addTemplate('chats.group_chats.add_group_chat');\n    addTemplate('chats.group_chats.invitation_panel_view');\n    addTemplate('chats.group_chats.mention_item');\n    addTemplate('chats.encryption_warning');\n    addTemplate('chats.content_encryption_warning');\n\n\n    addTemplate('mentions.mentions_panel');\n    addTemplate('mentions.mentions_placeholder');\n    addTemplate('mentions.mention_item');\n\n    addSvgTemplate('svg.ic-jabber');\n    addSvgTemplate('svg.xmpp');\n    addSvgTemplate('svg.account-outline');\n    addSvgTemplate('svg.qrcode');\n    addSvgTemplate('svg.id-outline');\n    addSvgTemplate('svg.clock-outline');\n    addSvgTemplate('svg.index');\n    addSvgTemplate('svg.restrictions-outline');\n    addSvgTemplate('svg.history');\n    addSvgTemplate('svg.chevron-down');\n    addSvgTemplate('svg.camera');\n    addSvgTemplate('svg.camera-retake');\n    addSvgTemplate('svg.membership-outline');\n    addSvgTemplate('svg.invite');\n    addSvgTemplate('svg.invite-outline');\n    addSvgTemplate('svg.chevron-right-variant');\n    addSvgTemplate('svg.chevron-left-variant');\n    addSvgTemplate('svg.subscription-to');\n    addSvgTemplate('svg.subscription-from');\n    addSvgTemplate('svg.image');\n    addSvgTemplate('svg.file-audio');\n    addSvgTemplate('svg.file-video');\n    addSvgTemplate('svg.file-document');\n    addSvgTemplate('svg.file-presentation');\n    addSvgTemplate('svg.file-zip');\n    addSvgTemplate('svg.file');\n    addSvgTemplate('svg.file-pdf');\n    addSvgTemplate('svg.close');\n    addSvgTemplate('svg.link');\n    addSvgTemplate('svg.picture-in-picture-minimize');\n    addSvgTemplate('svg.picture-in-picture-bottom-right');\n    addSvgTemplate('svg.picture-in-picture-top-right');\n    addSvgTemplate('svg.pause');\n    addSvgTemplate('svg.volume-off');\n    addSvgTemplate('svg.volume-high');\n    addSvgTemplate('svg.plyr');\n    addSvgTemplate('svg.plus');\n    addSvgTemplate('svg.player-float');\n    addSvgTemplate('svg.player-full');\n    addSvgTemplate('svg.player-mini-variant');\n    addSvgTemplate('svg.player-mini');\n    addSvgTemplate('svg.message-bookmark-outline');\n    addSvgTemplate('svg.play');\n    addSvgTemplate('svg.video');\n    addSvgTemplate('svg.cancel');\n    addSvgTemplate('svg.status');\n    addSvgTemplate('svg.status-outline');\n    addSvgTemplate('svg.birthday');\n    addSvgTemplate('svg.birthday-outline');\n    addSvgTemplate('svg.web');\n    addSvgTemplate('svg.xmpp');\n    addSvgTemplate('svg.job');\n    addSvgTemplate('svg.job-outline');\n    addSvgTemplate('svg.address');\n    addSvgTemplate('svg.address-outline');\n    addSvgTemplate('svg.email');\n    addSvgTemplate('svg.email-outline');\n    addSvgTemplate('svg.description');\n    addSvgTemplate('svg.description-outline');\n    addSvgTemplate('svg.contact-add');\n    addSvgTemplate('svg.check');\n    addSvgTemplate('svg.call-outline');\n    addSvgTemplate('svg.call');\n    addSvgTemplate('svg.search');\n    addSvgTemplate('svg.device-cellphone');\n    addSvgTemplate('svg.device-console');\n    addSvgTemplate('svg.device-desktop');\n    addSvgTemplate('svg.device-tablet');\n    addSvgTemplate('svg.device-web');\n    addSvgTemplate('svg.devices');\n    addSvgTemplate('svg.bell');\n    addSvgTemplate('svg.bell-sleep');\n    addSvgTemplate('svg.bell-off');\n    addSvgTemplate('svg.cancel');\n    addSvgTemplate('svg.trash');\n    addSvgTemplate('svg.client');\n    addSvgTemplate('svg.client-outline');\n    addSvgTemplate('svg.database-lock');\n    addSvgTemplate('svg.index');\n    addSvgTemplate('svg.bug');\n    addSvgTemplate('svg.cloud');\n    addSvgTemplate('svg.key');\n    addSvgTemplate('svg.key-variant');\n    addSvgTemplate('svg.account');\n    addSvgTemplate('svg.alert-circle');\n    addSvgTemplate('svg.security');\n    addSvgTemplate('svg.edit');\n    addSvgTemplate('svg.edit-outline');\n    addSvgTemplate('svg.check-circle');\n    addSvgTemplate('svg.blocked-add');\n    addSvgTemplate('svg.information-outline');\n    addSvgTemplate('svg.information');\n    addSvgTemplate('svg.fullname');\n    addSvgTemplate('svg.fullname-outline');\n    addSvgTemplate('svg.ic-at');\n    addSvgTemplate('svg.ic-searching');\n    addSvgTemplate('svg.blocked');\n    addSvgTemplate('svg.bot');\n    addSvgTemplate('svg.bot-variant');\n    addSvgTemplate('svg.group-incognito');\n    addSvgTemplate('svg.group-invite');\n    addSvgTemplate('svg.group-public');\n    addSvgTemplate('svg.task');\n    addSvgTemplate('svg.group-private');\n    addSvgTemplate('svg.channel');\n    addSvgTemplate('svg.rss');\n    addSvgTemplate('svg.rss-variant');\n    addSvgTemplate('svg.server');\n    addSvgTemplate('svg.volume-off-variant');\n    addSvgTemplate('svg.message-group');\n    addSvgTemplate('svg.xabber-offline');\n    addSvgTemplate('svg.xabber-online');\n    addSvgTemplate('svg.saved-messages');\n    addSvgTemplate('svg.account-cancel');\n    addSvgTemplate('svg.web-cancel');\n    addSvgTemplate('svg.palette');\n    addSvgTemplate('svg.chat');\n    addSvgTemplate('svg.star-face');\n    addSvgTemplate('svg.alarm-bell');\n    addSvgTemplate('svg.id');\n    addSvgTemplate('svg.expires');\n    addSvgTemplate('svg.database');\n    addSvgTemplate('svg.lock');\n    addSvgTemplate('svg.lock-open');\n    addSvgTemplate('svg.lock-alert');\n    addSvgTemplate('svg.lock-check');\n    addSvgTemplate('svg.lock-cross');\n    addSvgTemplate('svg.lock-question');\n    addSvgTemplate('svg.circles');\n    addSvgTemplate('svg.circles-outline');\n    addSvgTemplate('svg.circle-slice-1');\n    addSvgTemplate('svg.circle-slice-2');\n    addSvgTemplate('svg.circle-slice-3');\n    addSvgTemplate('svg.circle-slice-4');\n    addSvgTemplate('svg.circle-slice-5');\n    addSvgTemplate('svg.circle-slice-6');\n    addSvgTemplate('svg.circle-slice-7');\n    addSvgTemplate('svg.circle-slice-8');\n    addSvgTemplate('svg.translate');\n    addSvgTemplate('svg.trash');\n    addSvgTemplate('svg.crosshairs-gps');\n    addSvgTemplate('svg.crosshairs-question');\n    addSvgTemplate('svg.crosshairs');\n    addSvgTemplate('svg.map-marker-outline');\n    addSvgTemplate('svg.map-marker');\n    addSvgTemplate('svg.minus');\n\n    addJSONTemplate('accounts.emojis');\n\n    export default templates;","\n    let sounds = {};\n\n    let attention_json = require('~/sounds/attention/attention.json'),\n        attention = [];\n\n\n    Object.keys(attention_json).forEach(item => {\n        let audio = require(`~/sounds/attention/${item}/${item}.mp3`),\n            attention_sound = {\n                file_name: item,\n                name: attention_json[item].name,\n                audio: audio,\n                not_selectable: attention_json[item].not_selectable,\n        };\n        attention.push(attention_sound);\n    });\n\n    let ringtones_json = require('~/sounds/ringtones/ringtones.json'),\n        ringtones = [];\n\n\n    Object.keys(ringtones_json).forEach(item => {\n        let audio = require(`~/sounds/ringtones/${item}/${item}.mp3`),\n            ringtone = {\n                file_name: item,\n                name: ringtones_json[item].name,\n                audio: audio,\n                not_selectable: ringtones_json[item].not_selectable,\n        };\n        ringtones.push(ringtone);\n    });\n\n    let dialtones_json = require('~/sounds/dialtones/dialtones.json'),\n        dialtones = [];\n\n\n    Object.keys(dialtones_json).forEach(item => {\n        let audio = require(`~/sounds/dialtones/${item}/${item}.mp3`),\n            dialtone = {\n                file_name: item,\n                name: dialtones_json[item].name,\n                audio: audio,\n                not_selectable: dialtones_json[item].not_selectable,\n        };\n        dialtones.push(dialtone);\n    });\n\n    let notifications_json = require('~/sounds/notifications/notifications.json'),\n        notifications = [];\n\n\n    Object.keys(notifications_json).forEach(item => {\n        let audio = require(`~/sounds/notifications/${item}/${item}.mp3`),\n            notification = {\n                file_name: item,\n                name: notifications_json[item].name,\n                audio: audio,\n                not_selectable: notifications_json[item].not_selectable,\n        };\n        notifications.push(notification);\n    });\n\n    let interface_json = require('~/sounds/interface/interface.json'),\n        interface_sound_list = [];\n\n\n    Object.keys(interface_json).forEach(item => {\n        let audio = require(`~/sounds/interface/${item}/${item}.mp3`),\n            interface_item = {\n                file_name: item,\n                name: interface_json[item].name,\n                audio: audio,\n                not_selectable: interface_json[item].not_selectable,\n        };\n        interface_sound_list.push(interface_item);\n    });\n\n    sounds.attention = attention;\n    sounds.ringtones = ringtones;\n    sounds.dialtones = dialtones;\n    sounds.notifications = notifications;\n    sounds.interface = interface_sound_list;\n    sounds.all_sounds = attention.concat(ringtones).concat(dialtones).concat(notifications).concat(interface_sound_list);\n\n    export default sounds;","import _ from \"underscore\";\nimport $ from \"jquery\";\nimport constants from \"xabber-constants\";\n\nvar raw_data = {\n    \"smiles_and_people\": [{code:0x1f600,x:9,y:3},{code:0x1f603,x:12,y:3},{code:0x1f604,x:13,y:3},{code:0x1f601,x:10,y:3},{code:0x1f606,x:1,y:4},{code:0x1f605,x:0,y:4},{code:0x1f923,x:6,y:10},{code:0x1f602,x:11,y:3},{code:0x1f642,x:5,y:8},{code:0x1f643,x:6,y:8},{code:0x1f609,x:4,y:4},{code:0x1f60a,x:5,y:4},{code:0x1f607,x:2,y:4},{code:0x1f60d,x:8,y:4},{code:0x1f929,x:12,y:10},{code:0x1f617,x:4,y:5},{code:0x263a,x:14,y:5},{code:0x1f61a,x:7,y:5},{code:0x1f619,x:6,y:5},{code:0x1f60b,x:6,y:4},{code:0x1f61b,x:8,y:5},{code:0x1f61c,x:9,y:5},{code:0x1f92a,x:13,y:10},{code:0x1f61d,x:10,y:5},{code:0x1f911,x:10,y:9},{code:0x1f917,x:2,y:10},{code:0x1f92d,x:2,y:11},{code:0x1f92b,x:0,y:11},{code:0x1f914,x:13,y:9},{code:0x1f910,x:9,y:9},{code:0x1f928,x:11,y:10},{code:0x1f610,x:11,y:4},{code:0x1f611,x:12,y:4},{code:0x1f636,x:7,y:7},{code:0x1f60f,x:10,y:4},{code:0x1f612,x:13,y:4},{code:0x1f644,x:7,y:8},{code:0x1f62c,x:11,y:6},{code:0x1f925,x:8,y:10},{code:0x1f60c,x:7,y:4},{code:0x1f614,x:1,y:5},{code:0x1f62a,x:9,y:6},{code:0x1f924,x:7,y:10},{code:0x1f634,x:5,y:7},{code:0x1f637,x:8,y:7},{code:0x1f912,x:11,y:9},{code:0x1f915,x:0,y:10},{code:0x1f922,x:5,y:10},{code:0x1f92e,x:3,y:11},{code:0x1f927,x:10,y:10},{code:0x1f975,x:7,y:12},{code:0x1f976,x:8,y:12},{code:0x1f974,x:6,y:12},{code:0x1f635,x:6,y:7},{code:0x1f92f,x:4,y:11},{code:0x1f920,x:3,y:10},{code:0x1f973,x:5,y:12},{code:0x1f60e,x:9,y:4},{code:0x1f913,x:12,y:9},{code:0x1f9d0,x:1,y:13},{code:0x1f615,x:2,y:5},{code:0x1f61f,x:12,y:5},{code:0x1f641,x:4,y:8},{code:0x2639,x:14,y:4},{code:0x1f62e,x:13,y:6},{code:0x1f62f,x:0,y:7},{code:0x1f632,x:3,y:7},{code:0x1f633,x:4,y:7},{code:0x1f97a,x:9,y:12},{code:0x1f626,x:5,y:6},{code:0x1f627,x:6,y:6},{code:0x1f628,x:7,y:6},{code:0x1f630,x:1,y:7},{code:0x1f625,x:4,y:6},{code:0x1f622,x:1,y:6},{code:0x1f62d,x:12,y:6},{code:0x1f631,x:2,y:7},{code:0x1f616,x:3,y:5},{code:0x1f623,x:2,y:6},{code:0x1f61e,x:11,y:5},{code:0x1f613,x:0,y:5},{code:0x1f629,x:8,y:6},{code:0x1f62b,x:10,y:6},{code:0x1f624,x:3,y:6},{code:0x1f621,x:0,y:6},{code:0x1f620,x:13,y:5},{code:0x1f92c,x:1,y:11},{code:0x1f608,x:3,y:4},{code:0x1f47f,x:9,y:2},{code:0x1f480,x:10,y:2},{code:0x2620,x:14,y:3},{code:0x1f4a9,x:4,y:3},{code:0x1f921,x:4,y:10},{code:0x1f479,x:3,y:2},{code:0x1f47a,x:4,y:2},{code:0x1f47b,x:5,y:2},{code:0x1f47d,x:7,y:2},{code:0x1f47e,x:8,y:2},{code:0x1f916,x:1,y:10},{code:0x1f63a,x:11,y:7},{code:0x1f638,x:9,y:7},{code:0x1f639,x:10,y:7},{code:0x1f63b,x:12,y:7},{code:0x1f63c,x:13,y:7},{code:0x1f63d,x:0,y:8},{code:0x1f640,x:3,y:8},{code:0x1f63f,x:2,y:8},{code:0x1f63e,x:1,y:8},{code:0x1f648,x:11,y:8},{code:0x1f649,x:12,y:8},{code:0x1f64a,x:13,y:8},{code:0x1f476,x:0,y:2},{code:0x1f9d2,x:3,y:13},{code:0x1f466,x:12,y:0},{code:0x1f467,x:13,y:0},{code:0x1f471,x:9,y:1},{code:0x1f9d4,x:5,y:13},{code:0x1f9d3,x:4,y:13},{code:0x1f474,x:12,y:1},{code:0x1f475,x:13,y:1},{code:0x1f64d,x:1,y:9},{code:0x1f64e,x:2,y:9},{code:0x1f645,x:8,y:8},{code:0x1f646,x:9,y:8},{code:0x1f481,x:11,y:2},{code:0x1f64b,x:0,y:9},{code:0x1f647,x:10,y:8},{code:0x1f926,x:9,y:10},{code:0x1f937,x:10,y:11},{code:0x1f46e,x:6,y:1},{code:0x1f575,x:6,y:3},{code:0x1f482,x:12,y:2},{code:0x1f477,x:1,y:2},{code:0x1f934,x:7,y:11},{code:0x1f478,x:2,y:2},{code:0x1f473,x:11,y:1},{code:0x1f472,x:10,y:1},{code:0x1f9d5,x:6,y:13},{code:0x1f935,x:8,y:11},{code:0x1f470,x:8,y:1},{code:0x1f930,x:5,y:11},{code:0x1f931,x:6,y:11},{code:0x1f47c,x:6,y:2},{code:0x1f385,x:0,y:0},{code:0x1f936,x:9,y:11},{code:0x1f9b8,x:10,y:12},{code:0x1f9b9,x:11,y:12},{code:0x1f9d9,x:10,y:13},{code:0x1f9da,x:11,y:13},{code:0x1f9db,x:12,y:13},{code:0x1f9dc,x:13,y:13},{code:0x1f9dd,x:14,y:0},{code:0x1f9de,x:14,y:1},{code:0x1f9df,x:14,y:2},{code:0x1f486,x:0,y:3},{code:0x1f487,x:1,y:3},{code:0x1f6b6,x:6,y:9},{code:0x1f3c3,x:2,y:0},{code:0x1f483,x:13,y:2},{code:0x1f57a,x:7,y:3},{code:0x1f574,x:5,y:3},{code:0x1f46f,x:7,y:1},{code:0x1f9d6,x:7,y:13},{code:0x1f9d7,x:8,y:13},{code:0x1f93a,x:13,y:11},{code:0x1f3c7,x:4,y:0},{code:0x26f7,x:14,y:6},{code:0x1f3c2,x:1,y:0},{code:0x1f3cc,x:7,y:0},{code:0x1f3c4,x:3,y:0},{code:0x1f6a3,x:3,y:9},{code:0x1f3ca,x:5,y:0},{code:0x26f9,x:14,y:7},{code:0x1f3cb,x:6,y:0},{code:0x1f6b4,x:4,y:9},{code:0x1f6b5,x:5,y:9},{code:0x1f938,x:11,y:11},{code:0x1f93c,x:0,y:12},{code:0x1f93d,x:1,y:12},{code:0x1f93e,x:2,y:12},{code:0x1f939,x:12,y:11},{code:0x1f9d8,x:9,y:13},{code:0x1f6c0,x:7,y:9},{code:0x1f6cc,x:8,y:9},{code:0x1f46d,x:5,y:1},{code:0x1f46b,x:3,y:1},{code:0x1f46c,x:4,y:1},{code:0x1f48f,x:2,y:3},{code:0x1f491,x:3,y:3},{code:0x1f46a,x:2,y:1},{code:0x1f5e3,x:8,y:3},{code:0x1f464,x:10,y:0},{code:0x1f465,x:11,y:0},{code:0x1f463,x:9,y:0}],\n    \"body_and_clothes\": [{code:0x1f44b,x:3,y:1},{code:0x1f91a,x:10,y:7},{code:0x1f590,x:7,y:6},{code:0x270b,x:9,y:10},{code:0x1f596,x:9,y:6},{code:0x1f44c,x:4,y:1},{code:0x270c,x:10,y:10},{code:0x1f91e,x:3,y:8},{code:0x1f91f,x:4,y:8},{code:0x1f918,x:8,y:7},{code:0x1f919,x:9,y:7},{code:0x1f448,x:0,y:1},{code:0x1f449,x:1,y:1},{code:0x1f446,x:9,y:0},{code:0x1f595,x:8,y:6},{code:0x1f447,x:10,y:0},{code:0x261d,x:6,y:10},{code:0x1f44d,x:5,y:1},{code:0x1f44e,x:6,y:1},{code:0x270a,x:8,y:10},{code:0x1f44a,x:2,y:1},{code:0x1f91b,x:0,y:8},{code:0x1f91c,x:1,y:8},{code:0x1f44f,x:7,y:1},{code:0x1f64c,x:2,y:7},{code:0x1f450,x:8,y:1},{code:0x1f932,x:5,y:8},{code:0x1f91d,x:2,y:8},{code:0x1f64f,x:3,y:7},{code:0x270d,x:11,y:0},{code:0x1f485,x:6,y:3},{code:0x1f933,x:6,y:8},{code:0x1f4aa,x:9,y:5},{code:0x1f9b5,x:2,y:9},{code:0x1f9b6,x:3,y:9},{code:0x1f442,x:5,y:0},{code:0x1f443,x:6,y:0},{code:0x1f9e0,x:6,y:9},{code:0x1f9b7,x:4,y:9},{code:0x1f9b4,x:1,y:9},{code:0x1f440,x:3,y:0},{code:0x1f445,x:8,y:0},{code:0x1f444,x:7,y:0},{code:0x1f48b,x:7,y:3},{code:0x1f48c,x:8,y:3},{code:0x1f498,x:5,y:4},{code:0x1f49d,x:10,y:4},{code:0x1f496,x:3,y:4},{code:0x1f497,x:4,y:4},{code:0x1f493,x:0,y:4},{code:0x1f49e,x:0,y:5},{code:0x1f495,x:2,y:4},{code:0x1f49f,x:1,y:5},{code:0x2763,x:11,y:1},{code:0x1f494,x:1,y:4},{code:0x2764,x:11,y:2},{code:0x1f9e1,x:7,y:9},{code:0x1f49b,x:8,y:4},{code:0x1f49a,x:7,y:4},{code:0x1f499,x:6,y:4},{code:0x1f49c,x:9,y:4},{code:0x1f5a4,x:10,y:6},{code:0x1f4af,x:3,y:6},{code:0x1f4a2,x:2,y:5},{code:0x1f4a5,x:5,y:5},{code:0x1f4ab,x:10,y:5},{code:0x1f4a6,x:6,y:5},{code:0x1f4a8,x:8,y:5},{code:0x1f573,x:5,y:6},{code:0x1f4a3,x:3,y:5},{code:0x1f4ac,x:0,y:6},{code:0x1f441,x:4,y:0},{code:0x1f5e8,x:0,y:7},{code:0x1f5ef,x:1,y:7},{code:0x1f4ad,x:1,y:6},{code:0x1f4a4,x:4,y:5},{code:0x1f453,x:0,y:2},{code:0x1f576,x:6,y:6},{code:0x1f97d,x:9,y:8},{code:0x1f97c,x:8,y:8},{code:0x1f454,x:1,y:2},{code:0x1f455,x:2,y:2},{code:0x1f456,x:3,y:2},{code:0x1f9e3,x:9,y:9},{code:0x1f9e4,x:10,y:9},{code:0x1f9e5,x:0,y:10},{code:0x1f9e6,x:1,y:10},{code:0x1f457,x:4,y:2},{code:0x1f458,x:5,y:2},{code:0x1f459,x:6,y:2},{code:0x1f45a,x:7,y:2},{code:0x1f45b,x:8,y:2},{code:0x1f45c,x:9,y:2},{code:0x1f45d,x:10,y:2},{code:0x1f6cd,x:4,y:7},{code:0x1f392,x:0,y:0},{code:0x1f45e,x:0,y:3},{code:0x1f45f,x:1,y:3},{code:0x1f97e,x:10,y:8},{code:0x1f97f,x:0,y:9},{code:0x1f460,x:2,y:3},{code:0x1f461,x:3,y:3},{code:0x1f462,x:4,y:3},{code:0x1f451,x:9,y:1},{code:0x1f452,x:10,y:1},{code:0x1f3a9,x:2,y:0},{code:0x1f393,x:1,y:0},{code:0x1f9e2,x:8,y:9},{code:0x26d1,x:7,y:10},{code:0x1f4ff,x:4,y:6},{code:0x1f484,x:5,y:3},{code:0x1f48d,x:9,y:3},{code:0x1f48e,x:10,y:3}],\n    \"animals_and_nature\": [{code:0x1f435,x:6,y:6},{code:0x1f412,x:4,y:3},{code:0x1f98d,x:2,y:9},{code:0x1f436,x:7,y:6},{code:0x1f415,x:7,y:3},{code:0x1f429,x:6,y:5},{code:0x1f43a,x:0,y:7},{code:0x1f98a,x:10,y:8},{code:0x1f99d,x:7,y:10},{code:0x1f408,x:5,y:2},{code:0x1f981,x:1,y:8},{code:0x1f42f,x:1,y:6},{code:0x1f405,x:2,y:2},{code:0x1f406,x:3,y:2},{code:0x1f434,x:5,y:6},{code:0x1f40e,x:0,y:3},{code:0x1f984,x:4,y:8},{code:0x1f993,x:8,y:9},{code:0x1f98c,x:1,y:9},{code:0x1f42e,x:0,y:6},{code:0x1f402,x:10,y:1},{code:0x1f403,x:0,y:2},{code:0x1f404,x:1,y:2},{code:0x1f437,x:8,y:6},{code:0x1f416,x:9,y:3},{code:0x1f417,x:10,y:3},{code:0x1f43d,x:3,y:7},{code:0x1f40f,x:1,y:3},{code:0x1f411,x:3,y:3},{code:0x1f410,x:2,y:3},{code:0x1f42a,x:7,y:5},{code:0x1f42b,x:8,y:5},{code:0x1f999,x:3,y:10},{code:0x1f992,x:7,y:9},{code:0x1f418,x:0,y:4},{code:0x1f98f,x:4,y:9},{code:0x1f99b,x:5,y:10},{code:0x1f42d,x:10,y:5},{code:0x1f401,x:9,y:1},{code:0x1f400,x:8,y:1},{code:0x1f439,x:10,y:6},{code:0x1f430,x:2,y:6},{code:0x1f407,x:4,y:2},{code:0x1f43f,x:5,y:7},{code:0x1f994,x:9,y:9},{code:0x1f987,x:7,y:8},{code:0x1f43b,x:1,y:7},{code:0x1f428,x:5,y:5},{code:0x1f43c,x:2,y:7},{code:0x1f998,x:2,y:10},{code:0x1f9a1,x:11,y:0},{code:0x1f43e,x:4,y:7},{code:0x1f983,x:3,y:8},{code:0x1f414,x:6,y:3},{code:0x1f413,x:5,y:3},{code:0x1f423,x:0,y:5},{code:0x1f424,x:1,y:5},{code:0x1f425,x:2,y:5},{code:0x1f426,x:3,y:5},{code:0x1f427,x:4,y:5},{code:0x1f54a,x:7,y:7},{code:0x1f985,x:5,y:8},{code:0x1f986,x:6,y:8},{code:0x1f9a2,x:11,y:1},{code:0x1f989,x:9,y:8},{code:0x1f99a,x:4,y:10},{code:0x1f99c,x:6,y:10},{code:0x1f438,x:9,y:6},{code:0x1f40a,x:7,y:2},{code:0x1f422,x:10,y:4},{code:0x1f98e,x:3,y:9},{code:0x1f40d,x:10,y:2},{code:0x1f432,x:3,y:6},{code:0x1f409,x:6,y:2},{code:0x1f995,x:10,y:9},{code:0x1f996,x:0,y:10},{code:0x1f433,x:4,y:6},{code:0x1f40b,x:8,y:2},{code:0x1f42c,x:9,y:5},{code:0x1f41f,x:7,y:4},{code:0x1f420,x:8,y:4},{code:0x1f421,x:9,y:4},{code:0x1f988,x:8,y:8},{code:0x1f419,x:1,y:4},{code:0x1f41a,x:2,y:4},{code:0x1f40c,x:9,y:2},{code:0x1f98b,x:0,y:9},{code:0x1f41b,x:3,y:4},{code:0x1f41c,x:4,y:4},{code:0x1f41d,x:5,y:4},{code:0x1f41e,x:6,y:4},{code:0x1f997,x:1,y:10},{code:0x1f577,x:8,y:7},{code:0x1f578,x:9,y:7},{code:0x1f982,x:2,y:8},{code:0x1f99f,x:9,y:10},{code:0x1f9a0,x:10,y:10},{code:0x1f490,x:6,y:7},{code:0x1f338,x:6,y:0},{code:0x1f3f5,x:7,y:1},{code:0x1f339,x:7,y:0},{code:0x1f940,x:10,y:7},{code:0x1f33a,x:8,y:0},{code:0x1f33b,x:9,y:0},{code:0x1f33c,x:10,y:0},{code:0x1f337,x:5,y:0},{code:0x1f331,x:0,y:0},{code:0x1f344,x:6,y:1},{code:0x1f332,x:1,y:0},{code:0x1f333,x:2,y:0},{code:0x1f334,x:3,y:0},{code:0x1f335,x:4,y:0},{code:0x1f33e,x:0,y:1},{code:0x1f33f,x:1,y:1},{code:0x2618,x:11,y:8},{code:0x1f340,x:2,y:1},{code:0x1f341,x:3,y:1},{code:0x1f342,x:4,y:1},{code:0x1f343,x:5,y:1},{code:0x1f980,x:0,y:8},{code:0x1f99e,x:8,y:10},{code:0x1f990,x:5,y:9},{code:0x1f991,x:6,y:9}],\n    \"food_and_drinks\": [{code:0x1f347,x:8,y:0},{code:0x1f348,x:9,y:0},{code:0x1f349,x:0,y:1},{code:0x1f34a,x:1,y:1},{code:0x1f34b,x:2,y:1},{code:0x1f34c,x:3,y:1},{code:0x1f34d,x:4,y:1},{code:0x1f96d,x:10,y:0},{code:0x1f34e,x:5,y:1},{code:0x1f34f,x:6,y:1},{code:0x1f350,x:7,y:1},{code:0x1f351,x:8,y:1},{code:0x1f352,x:9,y:1},{code:0x1f353,x:0,y:2},{code:0x1f95d,x:4,y:8},{code:0x1f345,x:6,y:0},{code:0x1f965,x:2,y:9},{code:0x1f951,x:2,y:7},{code:0x1f346,x:7,y:0},{code:0x1f954,x:5,y:7},{code:0x1f955,x:6,y:7},{code:0x1f33d,x:5,y:0},{code:0x1f336,x:4,y:0},{code:0x1f952,x:3,y:7},{code:0x1f96c,x:9,y:9},{code:0x1f966,x:3,y:9},{code:0x1f95c,x:3,y:8},{code:0x1f330,x:3,y:0},{code:0x1f35e,x:1,y:3},{code:0x1f950,x:1,y:7},{code:0x1f956,x:7,y:7},{code:0x1f968,x:5,y:9},{code:0x1f96f,x:10,y:2},{code:0x1f95e,x:5,y:8},{code:0x1f9c0,x:10,y:3},{code:0x1f356,x:3,y:2},{code:0x1f357,x:4,y:2},{code:0x1f969,x:6,y:9},{code:0x1f953,x:4,y:7},{code:0x1f354,x:1,y:2},{code:0x1f35f,x:2,y:3},{code:0x1f355,x:2,y:2},{code:0x1f32d,x:0,y:0},{code:0x1f96a,x:7,y:9},{code:0x1f32e,x:1,y:0},{code:0x1f32f,x:2,y:0},{code:0x1f959,x:0,y:8},{code:0x1f95a,x:1,y:8},{code:0x1f373,x:2,y:5},{code:0x1f958,x:9,y:7},{code:0x1f372,x:1,y:5},{code:0x1f963,x:0,y:9},{code:0x1f957,x:8,y:7},{code:0x1f37f,x:4,y:6},{code:0x1f9c2,x:10,y:5},{code:0x1f96b,x:8,y:9},{code:0x1f371,x:0,y:5},{code:0x1f358,x:5,y:2},{code:0x1f359,x:6,y:2},{code:0x1f35a,x:7,y:2},{code:0x1f35b,x:8,y:2},{code:0x1f35c,x:9,y:2},{code:0x1f35d,x:0,y:3},{code:0x1f360,x:3,y:3},{code:0x1f362,x:5,y:3},{code:0x1f363,x:6,y:3},{code:0x1f364,x:7,y:3},{code:0x1f365,x:8,y:3},{code:0x1f96e,x:10,y:1},{code:0x1f361,x:4,y:3},{code:0x1f95f,x:6,y:8},{code:0x1f960,x:7,y:8},{code:0x1f961,x:8,y:8},{code:0x1f366,x:9,y:3},{code:0x1f367,x:0,y:4},{code:0x1f368,x:1,y:4},{code:0x1f369,x:2,y:4},{code:0x1f36a,x:3,y:4},{code:0x1f382,x:5,y:6},{code:0x1f370,x:9,y:4},{code:0x1f9c1,x:10,y:4},{code:0x1f967,x:4,y:9},{code:0x1f36b,x:4,y:4},{code:0x1f36c,x:5,y:4},{code:0x1f36d,x:6,y:4},{code:0x1f36e,x:7,y:4},{code:0x1f36f,x:8,y:4},{code:0x1f37c,x:1,y:6},{code:0x1f95b,x:2,y:8},{code:0x2615,x:4,y:10},{code:0x1f375,x:4,y:5},{code:0x1f376,x:5,y:5},{code:0x1f37e,x:3,y:6},{code:0x1f377,x:6,y:5},{code:0x1f378,x:7,y:5},{code:0x1f379,x:8,y:5},{code:0x1f37a,x:9,y:5},{code:0x1f37b,x:0,y:6},{code:0x1f942,x:8,y:6},{code:0x1f943,x:9,y:6},{code:0x1f964,x:1,y:9},{code:0x1f962,x:9,y:8},{code:0x1f37d,x:2,y:6},{code:0x1f374,x:3,y:5},{code:0x1f944,x:0,y:7},{code:0x1f52a,x:7,y:6},{code:0x1f3fa,x:6,y:6}],\n    \"travel_and_places\": [{code:0x1f30d,x:13,y:0},{code:0x1f30e,x:0,y:1},{code:0x1f30f,x:1,y:1},{code:0x1f310,x:2,y:1},{code:0x1f5fa,x:0,y:8},{code:0x1f5fe,x:4,y:8},{code:0x1f9ed,x:12,y:12},{code:0x1f3d4,x:9,y:3},{code:0x26f0,x:14,y:8},{code:0x1f30b,x:11,y:0},{code:0x1f5fb,x:1,y:8},{code:0x1f3d5,x:10,y:3},{code:0x1f3d6,x:11,y:3},{code:0x1f3dc,x:3,y:4},{code:0x1f3dd,x:4,y:4},{code:0x1f3de,x:5,y:4},{code:0x1f3df,x:6,y:4},{code:0x1f3db,x:2,y:4},{code:0x1f3d7,x:12,y:3},{code:0x1f9f1,x:13,y:12},{code:0x1f3d8,x:13,y:3},{code:0x1f3da,x:1,y:4},{code:0x1f3e0,x:7,y:4},{code:0x1f3e1,x:8,y:4},{code:0x1f3e2,x:9,y:4},{code:0x1f3e3,x:10,y:4},{code:0x1f3e4,x:11,y:4},{code:0x1f3e5,x:12,y:4},{code:0x1f3e6,x:13,y:4},{code:0x1f3e8,x:0,y:5},{code:0x1f3e9,x:1,y:5},{code:0x1f3ea,x:2,y:5},{code:0x1f3eb,x:3,y:5},{code:0x1f3ec,x:4,y:5},{code:0x1f3ed,x:5,y:5},{code:0x1f3ef,x:6,y:5},{code:0x1f3f0,x:7,y:5},{code:0x1f492,x:9,y:5},{code:0x1f5fc,x:2,y:8},{code:0x1f5fd,x:3,y:8},{code:0x26ea,x:14,y:7},{code:0x1f54c,x:0,y:6},{code:0x1f54d,x:1,y:6},{code:0x26e9,x:14,y:6},{code:0x1f54b,x:13,y:5},{code:0x26f2,x:14,y:10},{code:0x26fa,x:0,y:14},{code:0x1f301,x:1,y:0},{code:0x1f303,x:3,y:0},{code:0x1f3d9,x:0,y:4},{code:0x1f304,x:4,y:0},{code:0x1f305,x:5,y:0},{code:0x1f306,x:6,y:0},{code:0x1f307,x:7,y:0},{code:0x1f309,x:9,y:0},{code:0x2668,x:14,y:0},{code:0x1f3a0,x:1,y:3},{code:0x1f3a1,x:2,y:3},{code:0x1f3a2,x:3,y:3},{code:0x1f488,x:8,y:5},{code:0x1f3aa,x:5,y:3},{code:0x1f682,x:8,y:8},{code:0x1f683,x:9,y:8},{code:0x1f684,x:10,y:8},{code:0x1f685,x:11,y:8},{code:0x1f686,x:12,y:8},{code:0x1f687,x:13,y:8},{code:0x1f688,x:0,y:9},{code:0x1f689,x:1,y:9},{code:0x1f68a,x:2,y:9},{code:0x1f69d,x:7,y:10},{code:0x1f69e,x:8,y:10},{code:0x1f68b,x:3,y:9},{code:0x1f68c,x:4,y:9},{code:0x1f68d,x:5,y:9},{code:0x1f68e,x:6,y:9},{code:0x1f690,x:8,y:9},{code:0x1f691,x:9,y:9},{code:0x1f692,x:10,y:9},{code:0x1f693,x:11,y:9},{code:0x1f694,x:12,y:9},{code:0x1f695,x:13,y:9},{code:0x1f696,x:0,y:10},{code:0x1f697,x:1,y:10},{code:0x1f698,x:2,y:10},{code:0x1f699,x:3,y:10},{code:0x1f69a,x:4,y:10},{code:0x1f69b,x:5,y:10},{code:0x1f69c,x:6,y:10},{code:0x1f3ce,x:8,y:3},{code:0x1f3cd,x:7,y:3},{code:0x1f6f5,x:4,y:12},{code:0x1f6b2,x:4,y:11},{code:0x1f6f4,x:3,y:12},{code:0x1f6f9,x:7,y:12},{code:0x1f68f,x:7,y:9},{code:0x1f6e3,x:9,y:11},{code:0x1f6e4,x:10,y:11},{code:0x1f6e2,x:8,y:11},{code:0x26fd,x:1,y:14},{code:0x1f6a8,x:3,y:11},{code:0x1f6a5,x:0,y:11},{code:0x1f6a6,x:1,y:11},{code:0x1f6d1,x:6,y:11},{code:0x1f6a7,x:2,y:11},{code:0x2693,x:14,y:1},{code:0x26f5,x:14,y:13},{code:0x1f6f6,x:5,y:12},{code:0x1f3a3,x:4,y:3},{code:0x1f6a4,x:13,y:10},{code:0x1f6f3,x:2,y:12},{code:0x26f4,x:14,y:12},{code:0x1f6e5,x:11,y:11},{code:0x1f6a2,x:12,y:10},{code:0x2708,x:2,y:14},{code:0x1f6e9,x:12,y:11},{code:0x1f6eb,x:13,y:11},{code:0x1f6ec,x:0,y:12},{code:0x1f4ba,x:11,y:5},{code:0x1f681,x:7,y:8},{code:0x1f69f,x:9,y:10},{code:0x1f6a0,x:10,y:10},{code:0x1f6a1,x:11,y:10},{code:0x1f6f0,x:1,y:12},{code:0x1f680,x:6,y:8},{code:0x1f6f8,x:6,y:12},{code:0x1f6ce,x:5,y:11},{code:0x1f9f3,x:0,y:13},{code:0x231b,x:3,y:13},{code:0x23f3,x:7,y:13},{code:0x231a,x:2,y:13},{code:0x23f0,x:4,y:13},{code:0x23f1,x:5,y:13},{code:0x23f2,x:6,y:13},{code:0x1f570,x:12,y:7},{code:0x1f55b,x:13,y:6},{code:0x1f567,x:11,y:7},{code:0x1f550,x:2,y:6},{code:0x1f55c,x:0,y:7},{code:0x1f551,x:3,y:6},{code:0x1f55d,x:1,y:7},{code:0x1f552,x:4,y:6},{code:0x1f55e,x:2,y:7},{code:0x1f553,x:5,y:6},{code:0x1f55f,x:3,y:7},{code:0x1f554,x:6,y:6},{code:0x1f560,x:4,y:7},{code:0x1f555,x:7,y:6},{code:0x1f561,x:5,y:7},{code:0x1f556,x:8,y:6},{code:0x1f562,x:6,y:7},{code:0x1f557,x:9,y:6},{code:0x1f563,x:7,y:7},{code:0x1f558,x:10,y:6},{code:0x1f564,x:8,y:7},{code:0x1f559,x:11,y:6},{code:0x1f565,x:9,y:7},{code:0x1f55a,x:12,y:6},{code:0x1f566,x:10,y:7},{code:0x1f311,x:3,y:1},{code:0x1f312,x:4,y:1},{code:0x1f313,x:5,y:1},{code:0x1f314,x:6,y:1},{code:0x1f315,x:7,y:1},{code:0x1f316,x:8,y:1},{code:0x1f317,x:9,y:1},{code:0x1f318,x:10,y:1},{code:0x1f319,x:11,y:1},{code:0x1f31a,x:12,y:1},{code:0x1f31b,x:13,y:1},{code:0x1f31c,x:0,y:2},{code:0x1f321,x:5,y:2},{code:0x2600,x:8,y:13},{code:0x1f31d,x:1,y:2},{code:0x1f31e,x:2,y:2},{code:0x2b50,x:4,y:14},{code:0x1f31f,x:3,y:2},{code:0x1f320,x:4,y:2},{code:0x1f30c,x:12,y:0},{code:0x2601,x:9,y:13},{code:0x26c5,x:14,y:4},{code:0x26c8,x:14,y:5},{code:0x1f324,x:6,y:2},{code:0x1f325,x:7,y:2},{code:0x1f326,x:8,y:2},{code:0x1f327,x:9,y:2},{code:0x1f328,x:10,y:2},{code:0x1f329,x:11,y:2},{code:0x1f32a,x:12,y:2},{code:0x1f32b,x:13,y:2},{code:0x1f32c,x:0,y:3},{code:0x1f300,x:0,y:0},{code:0x1f308,x:8,y:0},{code:0x1f302,x:2,y:0},{code:0x2602,x:10,y:13},{code:0x2614,x:13,y:13},{code:0x26f1,x:14,y:9},{code:0x26a1,x:14,y:2},{code:0x2744,x:3,y:14},{code:0x2603,x:11,y:13},{code:0x26c4,x:14,y:3},{code:0x2604,x:12,y:13},{code:0x1f525,x:12,y:5},{code:0x1f4a7,x:10,y:5},{code:0x1f30a,x:10,y:0}],\n    \"events\": [{code:0x1f383,x:4,y:0},{code:0x1f384,x:5,y:0},{code:0x1f386,x:6,y:0},{code:0x1f387,x:7,y:0},{code:0x1f9e8,x:5,y:6},{code:0x2728,x:9,y:3},{code:0x1f388,x:8,y:0},{code:0x1f389,x:0,y:1},{code:0x1f38a,x:1,y:1},{code:0x1f38b,x:2,y:1},{code:0x1f38d,x:3,y:1},{code:0x1f38e,x:4,y:1},{code:0x1f38f,x:5,y:1},{code:0x1f390,x:6,y:1},{code:0x1f391,x:7,y:1},{code:0x1f9e7,x:4,y:6},{code:0x1f380,x:2,y:0},{code:0x1f381,x:3,y:0},{code:0x1f397,x:0,y:2},{code:0x1f39f,x:1,y:2},{code:0x1f3ab,x:3,y:2},{code:0x1f396,x:8,y:1},{code:0x1f3c6,x:7,y:3},{code:0x1f3c5,x:6,y:3},{code:0x1f947,x:4,y:5},{code:0x1f948,x:5,y:5},{code:0x1f949,x:6,y:5},{code:0x26bd,x:8,y:8},{code:0x26be,x:9,y:0},{code:0x1f94e,x:2,y:6},{code:0x1f3c0,x:5,y:3},{code:0x1f3d0,x:2,y:4},{code:0x1f3c8,x:8,y:3},{code:0x1f3c9,x:0,y:4},{code:0x1f3be,x:3,y:3},{code:0x1f94f,x:3,y:6},{code:0x1f3b3,x:1,y:3},{code:0x1f3cf,x:1,y:4},{code:0x1f3d1,x:3,y:4},{code:0x1f3d2,x:4,y:4},{code:0x1f94d,x:1,y:6},{code:0x1f3d3,x:5,y:4},{code:0x1f3f8,x:6,y:4},{code:0x1f94a,x:7,y:5},{code:0x1f94b,x:8,y:5},{code:0x1f945,x:3,y:5},{code:0x26f3,x:9,y:1},{code:0x26f8,x:9,y:2},{code:0x1f3bd,x:2,y:3},{code:0x1f3bf,x:4,y:3},{code:0x1f6f7,x:2,y:5},{code:0x1f94c,x:0,y:6},{code:0x1f3af,x:6,y:2},{code:0x1f3b1,x:8,y:2},{code:0x1f52e,x:8,y:4},{code:0x1f9ff,x:1,y:7},{code:0x1f3ae,x:5,y:2},{code:0x1f579,x:0,y:5},{code:0x1f3b0,x:7,y:2},{code:0x1f3b2,x:0,y:3},{code:0x1f9e9,x:6,y:6},{code:0x1f9f8,x:0,y:7},{code:0x2660,x:4,y:8},{code:0x2665,x:6,y:8},{code:0x2666,x:7,y:8},{code:0x2663,x:5,y:8},{code:0x265f,x:3,y:8},{code:0x1f0cf,x:1,y:0},{code:0x1f004,x:0,y:0},{code:0x1f3ad,x:4,y:2},{code:0x1f5bc,x:1,y:5},{code:0x1f3a8,x:2,y:2},{code:0x1f9f5,x:7,y:6},{code:0x1f9f6,x:8,y:6}],\n    \"objects\": [{code:0x1f507,x:1,y:7},{code:0x1f508,x:2,y:7},{code:0x1f509,x:3,y:7},{code:0x1f50a,x:4,y:7},{code:0x1f4e2,x:3,y:5},{code:0x1f4e3,x:4,y:5},{code:0x1f4ef,x:3,y:6},{code:0x1f514,x:1,y:8},{code:0x1f515,x:2,y:8},{code:0x1f3bc,x:2,y:1},{code:0x1f3b5,x:8,y:0},{code:0x1f3b6,x:9,y:0},{code:0x1f399,x:0,y:0},{code:0x1f39a,x:1,y:0},{code:0x1f39b,x:2,y:0},{code:0x1f3a4,x:4,y:0},{code:0x1f3a7,x:6,y:0},{code:0x1f4fb,x:11,y:6},{code:0x1f3b7,x:10,y:0},{code:0x1f3b8,x:11,y:0},{code:0x1f3b9,x:12,y:0},{code:0x1f3ba,x:0,y:1},{code:0x1f3bb,x:1,y:1},{code:0x1f941,x:6,y:11},{code:0x1f4f1,x:5,y:6},{code:0x1f4f2,x:6,y:6},{code:0x260e,x:13,y:3},{code:0x1f4de,x:12,y:4},{code:0x1f4df,x:0,y:5},{code:0x1f4e0,x:1,y:5},{code:0x1f50b,x:5,y:7},{code:0x1f50c,x:6,y:7},{code:0x1f4bb,x:4,y:2},{code:0x1f5a5,x:5,y:9},{code:0x1f5a8,x:6,y:9},{code:0x2328,x:13,y:2},{code:0x1f5b1,x:7,y:9},{code:0x1f5b2,x:8,y:9},{code:0x1f4bd,x:6,y:2},{code:0x1f4be,x:7,y:2},{code:0x1f4bf,x:8,y:2},{code:0x1f4c0,x:9,y:2},{code:0x1f9ee,x:2,y:12},{code:0x1f3a5,x:5,y:0},{code:0x1f39e,x:3,y:0},{code:0x1f4fd,x:0,y:7},{code:0x1f3ac,x:7,y:0},{code:0x1f4fa,x:10,y:6},{code:0x1f4f7,x:7,y:6},{code:0x1f4f8,x:8,y:6},{code:0x1f4f9,x:9,y:6},{code:0x1f4fc,x:12,y:6},{code:0x1f50d,x:7,y:7},{code:0x1f50e,x:8,y:7},{code:0x1f56f,x:12,y:8},{code:0x1f4a1,x:8,y:1},{code:0x1f526,x:5,y:8},{code:0x1f3ee,x:3,y:1},{code:0x1f4d4,x:3,y:4},{code:0x1f4d5,x:4,y:4},{code:0x1f4d6,x:5,y:4},{code:0x1f4d7,x:6,y:4},{code:0x1f4d8,x:7,y:4},{code:0x1f4d9,x:8,y:4},{code:0x1f4da,x:9,y:4},{code:0x1f4d3,x:2,y:4},{code:0x1f4d2,x:1,y:4},{code:0x1f4c3,x:12,y:2},{code:0x1f4dc,x:10,y:4},{code:0x1f4c4,x:0,y:3},{code:0x1f4f0,x:4,y:6},{code:0x1f5de,x:4,y:10},{code:0x1f4d1,x:0,y:4},{code:0x1f516,x:3,y:8},{code:0x1f3f7,x:4,y:1},{code:0x1f4b0,x:9,y:1},{code:0x1f4b4,x:11,y:1},{code:0x1f4b5,x:12,y:1},{code:0x1f4b6,x:0,y:2},{code:0x1f4b7,x:1,y:2},{code:0x1f4b8,x:2,y:2},{code:0x1f4b3,x:10,y:1},{code:0x1f9fe,x:13,y:0},{code:0x1f4b9,x:3,y:2},{code:0x2709,x:1,y:13},{code:0x1f4e7,x:8,y:5},{code:0x1f4e8,x:9,y:5},{code:0x1f4e9,x:10,y:5},{code:0x1f4e4,x:5,y:5},{code:0x1f4e5,x:6,y:5},{code:0x1f4e6,x:7,y:5},{code:0x1f4eb,x:12,y:5},{code:0x1f4ea,x:11,y:5},{code:0x1f4ec,x:0,y:6},{code:0x1f4ed,x:1,y:6},{code:0x1f4ee,x:2,y:6},{code:0x1f5f3,x:6,y:10},{code:0x270f,x:2,y:13},{code:0x2712,x:3,y:13},{code:0x1f58b,x:2,y:9},{code:0x1f58a,x:1,y:9},{code:0x1f58c,x:3,y:9},{code:0x1f58d,x:4,y:9},{code:0x1f4dd,x:11,y:4},{code:0x1f4bc,x:5,y:2},{code:0x1f4c1,x:10,y:2},{code:0x1f4c2,x:11,y:2},{code:0x1f5c2,x:9,y:9},{code:0x1f4c5,x:1,y:3},{code:0x1f4c6,x:2,y:3},{code:0x1f5d2,x:0,y:10},{code:0x1f5d3,x:1,y:10},{code:0x1f4c7,x:3,y:3},{code:0x1f4c8,x:4,y:3},{code:0x1f4c9,x:5,y:3},{code:0x1f4ca,x:6,y:3},{code:0x1f4cb,x:7,y:3},{code:0x1f4cc,x:8,y:3},{code:0x1f4cd,x:9,y:3},{code:0x1f4ce,x:10,y:3},{code:0x1f587,x:0,y:9},{code:0x1f4cf,x:11,y:3},{code:0x1f4d0,x:12,y:3},{code:0x2702,x:0,y:13},{code:0x1f5c3,x:10,y:9},{code:0x1f5c4,x:11,y:9},{code:0x1f5d1,x:12,y:9},{code:0x1f512,x:12,y:7},{code:0x1f513,x:0,y:8},{code:0x1f50f,x:9,y:7},{code:0x1f510,x:10,y:7},{code:0x1f511,x:11,y:7},{code:0x1f5dd,x:3,y:10},{code:0x1f528,x:7,y:8},{code:0x26cf,x:13,y:11},{code:0x2692,x:13,y:4},{code:0x1f6e0,x:3,y:11},{code:0x1f5e1,x:5,y:10},{code:0x2694,x:13,y:5},{code:0x1f52b,x:9,y:8},{code:0x1f3f9,x:5,y:1},{code:0x1f6e1,x:4,y:11},{code:0x1f527,x:6,y:8},{code:0x1f529,x:8,y:8},{code:0x2699,x:13,y:8},{code:0x1f5dc,x:2,y:10},{code:0x2696,x:13,y:6},{code:0x1f517,x:4,y:8},{code:0x26d3,x:13,y:12},{code:0x1f9f0,x:4,y:12},{code:0x1f9f2,x:5,y:12},{code:0x2697,x:13,y:7},{code:0x1f9ea,x:12,y:11},{code:0x1f9eb,x:0,y:12},{code:0x1f9ec,x:1,y:12},{code:0x1f52c,x:10,y:8},{code:0x1f52d,x:11,y:8},{code:0x1f4e1,x:2,y:5},{code:0x1f489,x:6,y:1},{code:0x1f48a,x:7,y:1},{code:0x1f6aa,x:8,y:10},{code:0x1f6cf,x:1,y:11},{code:0x1f6cb,x:0,y:11},{code:0x1f6bd,x:10,y:10},{code:0x1f6bf,x:11,y:10},{code:0x1f6c1,x:12,y:10},{code:0x1f9f4,x:6,y:12},{code:0x1f9f7,x:7,y:12},{code:0x1f9f9,x:8,y:12},{code:0x1f9fa,x:9,y:12},{code:0x1f9fb,x:10,y:12},{code:0x1f9fc,x:11,y:12},{code:0x1f9fd,x:12,y:12},{code:0x1f9ef,x:3,y:12},{code:0x1f6d2,x:2,y:11},{code:0x1f6ac,x:9,y:10},{code:0x26b0,x:13,y:9},{code:0x26b1,x:13,y:10},{code:0x1f5ff,x:7,y:10}],\n    \"signs\": [{code:0x1f6ae,x:4,y:8},{code:0x1f6b0,x:6,y:8},{code:0x267f,x:3,y:13},{code:0x1f6b9,x:11,y:8},{code:0x1f6ba,x:12,y:8},{code:0x1f6bb,x:13,y:8},{code:0x1f6bc,x:14,y:8},{code:0x1f6be,x:0,y:9},{code:0x1f6c2,x:1,y:9},{code:0x1f6c3,x:2,y:9},{code:0x1f6c4,x:3,y:9},{code:0x1f6c5,x:4,y:9},{code:0x1f3e7,x:13,y:4},{code:0x26a0,x:7,y:13},{code:0x1f6b8,x:10,y:8},{code:0x26d4,x:11,y:13},{code:0x1f6ab,x:2,y:8},{code:0x1f6b3,x:8,y:8},{code:0x1f6ad,x:3,y:8},{code:0x1f6af,x:5,y:8},{code:0x1f6b1,x:7,y:8},{code:0x1f6b7,x:9,y:8},{code:0x1f4f5,x:7,y:5},{code:0x1f51e,x:7,y:6},{code:0x2622,x:10,y:11},{code:0x2623,x:11,y:11},{code:0x2b06,x:15,y:5},{code:0x2197,x:14,y:9},{code:0x27a1,x:14,y:14},{code:0x2198,x:0,y:10},{code:0x2b07,x:15,y:6},{code:0x2199,x:1,y:10},{code:0x2b05,x:15,y:4},{code:0x2196,x:13,y:9},{code:0x2195,x:12,y:9},{code:0x2194,x:11,y:9},{code:0x21a9,x:2,y:10},{code:0x21aa,x:3,y:10},{code:0x2934,x:15,y:2},{code:0x2935,x:15,y:3},{code:0x1f503,x:12,y:5},{code:0x1f504,x:13,y:5},{code:0x1f519,x:2,y:6},{code:0x1f51a,x:3,y:6},{code:0x1f51b,x:4,y:6},{code:0x1f51c,x:5,y:6},{code:0x1f51d,x:6,y:6},{code:0x1f6d0,x:5,y:9},{code:0x269b,x:5,y:13},{code:0x1f549,x:14,y:7},{code:0x2721,x:1,y:14},{code:0x2638,x:1,y:12},{code:0x262f,x:0,y:12},{code:0x271d,x:0,y:14},{code:0x2626,x:12,y:11},{code:0x262a,x:13,y:11},{code:0x262e,x:14,y:11},{code:0x1f54e,x:0,y:8},{code:0x1f52f,x:14,y:6},{code:0x2648,x:4,y:12},{code:0x2649,x:5,y:12},{code:0x264a,x:6,y:12},{code:0x264b,x:7,y:12},{code:0x264c,x:8,y:12},{code:0x264d,x:9,y:12},{code:0x264e,x:10,y:12},{code:0x264f,x:11,y:12},{code:0x2650,x:12,y:12},{code:0x2651,x:13,y:12},{code:0x2652,x:14,y:12},{code:0x2653,x:0,y:13},{code:0x26ce,x:10,y:13},{code:0x1f500,x:9,y:5},{code:0x1f501,x:10,y:5},{code:0x1f502,x:11,y:5},{code:0x25b6,x:3,y:11},{code:0x23e9,x:5,y:10},{code:0x23ed,x:9,y:10},{code:0x23ef,x:11,y:10},{code:0x25c0,x:4,y:11},{code:0x23ea,x:6,y:10},{code:0x23ee,x:10,y:10},{code:0x1f53c,x:12,y:7},{code:0x23eb,x:7,y:10},{code:0x1f53d,x:13,y:7},{code:0x23ec,x:8,y:10},{code:0x23f8,x:12,y:10},{code:0x23f9,x:13,y:10},{code:0x23fa,x:14,y:10},{code:0x23cf,x:4,y:10},{code:0x1f3a6,x:11,y:4},{code:0x1f505,x:14,y:5},{code:0x1f506,x:0,y:6},{code:0x1f4f6,x:8,y:5},{code:0x1f4f3,x:5,y:5},{code:0x1f4f4,x:6,y:5},{code:0x2640,x:2,y:12},{code:0x2642,x:3,y:12},{code:0x2716,x:14,y:13},{code:0x2795,x:11,y:14},{code:0x2796,x:12,y:14},{code:0x2797,x:13,y:14},{code:0x267e,x:2,y:13},{code:0x203c,x:6,y:9},{code:0x2049,x:7,y:9},{code:0x2753,x:7,y:14},{code:0x2754,x:8,y:14},{code:0x2755,x:9,y:14},{code:0x2757,x:10,y:14},{code:0x3030,x:15,y:10},{code:0x1f4b1,x:2,y:5},{code:0x1f4b2,x:3,y:5},{code:0x2695,x:4,y:13},{code:0x267b,x:1,y:13},{code:0x269c,x:6,y:13},{code:0x1f531,x:1,y:7},{code:0x1f4db,x:4,y:5},{code:0x1f530,x:0,y:7},{code:0x2b55,x:15,y:9},{code:0x2705,x:12,y:13},{code:0x2611,x:9,y:11},{code:0x2714,x:13,y:13},{code:0x274c,x:5,y:14},{code:0x274e,x:6,y:14},{code:0x27b0,x:15,y:0},{code:0x27bf,x:15,y:1},{code:0x303d,x:15,y:11},{code:0x2733,x:2,y:14},{code:0x2734,x:3,y:14},{code:0x2747,x:4,y:14},{code:0x00a9,x:12,y:0},{code:0x00ae,x:13,y:0},{code:0x2122,x:9,y:9},{code:0x1f520,x:9,y:6},{code:0x1f521,x:10,y:6},{code:0x1f522,x:11,y:6},{code:0x1f523,x:12,y:6},{code:0x1f524,x:13,y:6},{code:0x1f170,x:14,y:0},{code:0x1f18e,x:3,y:1},{code:0x1f171,x:0,y:1},{code:0x1f191,x:4,y:1},{code:0x1f192,x:5,y:1},{code:0x1f193,x:6,y:1},{code:0x2139,x:10,y:9},{code:0x1f194,x:7,y:1},{code:0x24c2,x:0,y:11},{code:0x1f195,x:8,y:1},{code:0x1f196,x:9,y:1},{code:0x1f17e,x:1,y:1},{code:0x1f197,x:10,y:1},{code:0x1f17f,x:2,y:1},{code:0x1f198,x:11,y:1},{code:0x1f199,x:12,y:1},{code:0x1f19a,x:13,y:1},{code:0x1f201,x:10,y:3},{code:0x1f202,x:11,y:3},{code:0x1f237,x:4,y:4},{code:0x1f236,x:3,y:4},{code:0x1f22f,x:13,y:3},{code:0x1f250,x:8,y:4},{code:0x1f239,x:6,y:4},{code:0x1f21a,x:12,y:3},{code:0x1f232,x:14,y:3},{code:0x1f251,x:9,y:4},{code:0x1f238,x:5,y:4},{code:0x1f234,x:1,y:4},{code:0x1f233,x:0,y:4},{code:0x3297,x:15,y:12},{code:0x3299,x:15,y:13},{code:0x1f23a,x:7,y:4},{code:0x1f235,x:2,y:4},{code:0x1f534,x:4,y:7},{code:0x1f535,x:5,y:7},{code:0x26ab,x:9,y:13},{code:0x26aa,x:8,y:13},{code:0x2b1c,x:15,y:8},{code:0x25fc,x:6,y:11},{code:0x25fb,x:5,y:11},{code:0x25fe,x:8,y:11},{code:0x25fd,x:7,y:11},{code:0x25aa,x:1,y:11},{code:0x25ab,x:2,y:11},{code:0x1f536,x:6,y:7},{code:0x1f537,x:7,y:7},{code:0x1f538,x:8,y:7},{code:0x1f539,x:9,y:7},{code:0x1f53a,x:10,y:7},{code:0x1f53b,x:11,y:7},{code:0x1f4a0,x:1,y:5},{code:0x1f518,x:1,y:6},{code:0x1f533,x:3,y:7},{code:0x1f532,x:2,y:7},{code:0x1f3c1,x:12,y:4},{code:0x1f6a9,x:1,y:8},{code:0x1f38c,x:10,y:4},{code:0x1f3f4,x:0,y:5},{code:0x1f3f3,x:14,y:4},{code:0x1f1e6,x:14,y:1},{code:0x1f1e7,x:0,y:2},{code:0x1f1e8,x:1,y:2},{code:0x1f1e9,x:2,y:2},{code:0x1f1ea,x:3,y:2},{code:0x1f1eb,x:4,y:2},{code:0x1f1ec,x:5,y:2},{code:0x1f1ed,x:6,y:2},{code:0x1f1ee,x:7,y:2},{code:0x1f1ef,x:8,y:2},{code:0x1f1f0,x:9,y:2},{code:0x1f1f1,x:10,y:2},{code:0x1f1f2,x:11,y:2},{code:0x1f1f3,x:12,y:2},{code:0x1f1f4,x:13,y:2},{code:0x1f1f5,x:14,y:2},{code:0x1f1f6,x:0,y:3},{code:0x1f1f7,x:1,y:3},{code:0x1f1f8,x:2,y:3},{code:0x1f1f9,x:3,y:3},{code:0x1f1fa,x:4,y:3},{code:0x1f1fb,x:5,y:3},{code:0x1f1fc,x:6,y:3},{code:0x1f1fd,x:7,y:3},{code:0x1f1fe,x:8,y:3},{code:0x1f1ff,x:9,y:3}]\n};\n\nvar getEmoji = function (code) {\n    if (code < 0x10000) {\n        return String.fromCharCode(code);\n    }\n    var offset = code - 0x10000,\n        lead = 0xd800 + (offset >> 10),\n        trail = 0xdc00 + (offset & 0x3ff);\n    return String.fromCharCode(lead)+String.fromCharCode(trail);\n};\n\nvar emoji_data = {}, all = {};\n\nvar getEmojiByIndex = function (idx) {\n    var emoji;\n    for (var emoji_list in raw_data) {\n       if (raw_data[emoji_list][idx]) {\n           emoji = raw_data[emoji_list][idx];\n           break;\n       }\n    }\n    return getEmoji(emoji.code);\n};\n\nfor (var emoji_list in raw_data) {\n    _.each(raw_data[emoji_list], function (item) {\n        var emoji = getEmoji(item.code);\n        emoji_data[emoji] = item;\n        !all[emoji_list] && (all[emoji_list] = []);\n        all[emoji_list].push(emoji);\n    });\n}\n\nvar emoji_regexp = /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/g;\n\nString.prototype.emojify = function (options) {\n    options || (options = {});\n    var sprite = options.sprite,\n        tag_name = sprite ? (options.tag_name || 'span') : 'img',\n        emoji_size = options.emoji_size || 20,\n        href = options.href ? ` href=\"#${options.href}\" ` :\"\",\n        title = options.title ? ` title=\"${options.title}\" ` :\"\";\n    return this.replace(emoji_regexp, function (emoji) {\n        let data = emoji_data[emoji],\n            emoji_code = data && Number(data.code).toString(16);\n        if (data) {\n            (emoji_code.length < 4) && (emoji_code = \"0\".repeat(4 - emoji_code.length) + emoji_code);\n            let img_src = tag_name === 'img' ? (sprite ? ' src=\"'+ constants.ASSETS_URL_PREFIX + 'assets/images/emoji/blank.gif\"' : '  src=\"' + constants.ASSETS_URL_PREFIX + 'assets/images/emoji/svg32/emoji_u' + emoji_code + '.svg\"') : '';\n            return '<' + tag_name + img_src + href + title + ' class=\"emoji emoji-w' + emoji_size +\n                (sprite ? (' sprite-' + sprite + '\" style=\"background-position: ' + '-' + (emoji_size * data.x) + 'px ' + '-' + (emoji_size * data.y) + 'px;\" ') : '\" ') +\n                'alt=\"' + emoji + '\" ' +\n                'data-emoji=\"' + emoji + '\"/>';\n        }\n        else\n            return emoji;\n    });\n};\n\nString.prototype.removeEmoji = function () {\n    return this.replace(emoji_regexp, function (emoji) {\n        var data = emoji_data[emoji];\n        if (data) {\n            return \"\";\n        } else {\n            return emoji;\n        }\n    });\n};\n\nString.prototype.replaceEmoji = function () {\n    return this.replace(emoji_regexp, function (emoji) {\n        var data = emoji_data[emoji];\n        if (data) {\n            return \" \";\n        } else {\n            return emoji;\n        }\n    });\n};\n\n$.fn.emojify = function (selector, options) {\n    this.find(selector).each(function () {\n        var text = $(this).html();\n        $(this).html(text.emojify(options));\n    });\n    return this;\n};\n\nexport default {\n    all: all,\n    get: getEmoji,\n    getByIndex: getEmojiByIndex\n};\n","import deps from \"xabber-dependencies\"\n\nvar _ = deps._,\n    $ = deps.$,\n    hasher = deps.SHA1.b64_sha1;\n\nvar _image_cache = {};\n\nvar COLORS = [\n    \"#1abc9c\", \"#16a085\", \"#f1c40f\", \"#f39c12\",\n    \"#2ecc71\", \"#27ae60\", \"#e67e22\", \"#d35400\",\n    \"#3498db\", \"#2980b9\", \"#e74c3c\", \"#c0392b\",\n    \"#9b59b6\", \"#8e44ad\", \"#bdc3c7\", \"#34495e\",\n    \"#2c3e50\", \"#95a5a6\", \"#7f8c8d\", \"#ec87bf\",\n    \"#d870ad\", \"#f69785\", \"#9ba37e\", \"#b49255\",\n    \"#a94136\"\n];\n\nvar MAX_SIZE = 200;\nvar MAX_IMG_SIZE = 1280;\n\nvar b64toBlob = function (b64Data, contentType, sliceSize) {\n    contentType = contentType || '';\n    sliceSize = sliceSize || 512;\n    var byteCharacters = atob(b64Data);\n    var byteArrays = [];\n    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n        var slice = byteCharacters.slice(offset, offset + sliceSize);\n        var byteNumbers = new Array(slice.length);\n        for (var i = 0; i < slice.length; i++) {\n            byteNumbers[i] = slice.charCodeAt(i);\n        }\n        var byteArray = new Uint8Array(byteNumbers);\n        byteArrays.push(byteArray);\n    }\n    var blob = new Blob(byteArrays, {type: contentType});\n    return blob;\n};\n\nvar CachedImage = function (image) {\n    this.url = window.URL.createObjectURL(b64toBlob(image));\n    _image_cache[image] = this;\n    return this;\n};\n\nvar getCachedImage = function (image) {\n    // save often used image and get blob url for it\n    if (image instanceof CachedImage) {\n        return image;\n    } else if (image && (_.isString(image) && image.indexOf('http') == 0 || _.isObject(image) && image.url && image.url.indexOf('http') == 0)) {\n        if (_.isString(image))\n            return {url: image};\n        else if (_.isObject(image))\n            return image;\n    }\n    return _image_cache[image] || new CachedImage(image);\n};\n\nvar getDefaultAvatar = function (name, color, font, width, height) {\n    // generate colored avatar with first letters of username\n    var canvas = document.createElement('canvas'),\n        ctx = canvas.getContext('2d'),\n        _name = name ? name.trim() : '',\n        first_name, last_name, splitted_name = _name.split(' ', 2),\n        first_letter, second_letter;\n        // color_index;\n    first_name = splitted_name[0];\n    last_name = (splitted_name.length > 1 ? splitted_name[1] : '');\n    first_letter = first_name[0] || '';\n    if (last_name) {\n        second_letter = last_name[0];\n    } else {\n        second_letter = (first_name.length > 1 ? first_name[1] : '');\n    }\n    // color_index = Math.floor(hasher(_name).charCodeAt(0) % COLORS.length);\n    canvas.width = width || 256;\n    canvas.height = height || 256;\n    ctx.rect(0, 0, width || 256, height || 256);\n    ctx.fillStyle = color || getAccountColor(name);//COLORS[color_index];\n    ctx.fill();\n    ctx.font = font || \"bold 100px sans-serif\";\n    ctx.fillStyle = \"#FFF\";\n    ctx.textAlign = \"center\";\n    if (font){\n        ctx.textBaseline = 'ideographic';\n        ctx.fillText(_name, width/2 || 128, (height/2 + height *0.28) || 160);\n    }\n    else\n        ctx.fillText(first_letter.toUpperCase()+second_letter.toUpperCase(), 128, 160);\n    var image = canvas.toDataURL().replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n    return image;\n};\n\nvar getAccountColor = function (name) {\n    var _name = name ? name.trim() : '',\n        color_index = Math.floor(hasher(_name).charCodeAt(0) % COLORS.length);\n    return COLORS[color_index];\n};\n\nvar getImageSize = function (size, max_size) {\n    if (max_size){\n        if (size.width > size.height) {\n            if (size.width > max_size) {\n                size.height *= max_size / size.width;\n                size.width = max_size;\n            }\n        } else {\n            if (size.height > max_size) {\n                size.width *= max_size / size.height;\n                size.height = max_size;\n            }\n        }\n    }\n    return size;\n};\n\nvar compressImage = function (file) {\n    var image_obj = new Image(),\n        src = window.URL.createObjectURL(file),\n        deferred = new $.Deferred();\n    image_obj.onload = function () {\n        image_obj.onload = null;\n        var canvas = document.createElement('canvas'),\n            ctx = canvas.getContext('2d'),\n            width = image_obj.naturalWidth,\n            height = image_obj.naturalHeight,\n            file_type = file.type,\n            file_name = file.name,\n            new_size = getImageSize({width: width, height: height}, MAX_IMG_SIZE);\n        if (file.type === 'image/svg+xml' || file.type.includes('image/gif') || (width < MAX_IMG_SIZE && height < MAX_IMG_SIZE)) {\n            file.width = width;\n            file.height = height;\n            deferred.resolve(file);\n        }\n        canvas.width = new_size.width;\n        canvas.height = new_size.height;\n        ctx.drawImage(image_obj, 0, 0, new_size.width, new_size.height);\n        canvas.toBlob((blob) => {\n            const file = new File([blob], file_name, {\n                type: file_type,\n                lastModified: Date.now()\n            });\n            deferred.resolve(file);\n        }, file_type, 0.8);\n        window.URL.revokeObjectURL(src);\n    };\n    image_obj.onerror = function() {\n        image_obj.onerror = null;\n        window.URL.revokeObjectURL(src);\n        deferred.resolve(false);\n    };\n    image_obj.src = src;\n    return deferred.promise();\n};\n\nvar setCss = function (image_el, cached_image, img_size) {\n    var $image_el = $(image_el),\n        css = {\n            backgroundImage: 'url(\"' + cached_image.url + '\")',\n            backgroundSize: 'cover',\n            backgroundColor: '#FFF'\n        };\n    $image_el.css(css);\n};\n\nvar getCachedBackground = function (base64) {\n    if (base64.indexOf('http') == 0)\n        return base64;\n    return getCachedImage(base64.replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')).url;\n};\n\nvar getAvatarFromFile = function (file) {\n    var image_obj = new Image(),\n         src = window.URL.createObjectURL(file),\n         deferred = new $.Deferred();\n     image_obj.onload = function () {\n         image_obj.onload = null;\n         var canvas = document.createElement('canvas'),\n             ctx = canvas.getContext('2d'),\n             width = image_obj.naturalWidth,\n             height = image_obj.naturalHeight,\n             b64_image, hash,\n             new_size = getImageSize({width: width, height: height}, MAX_SIZE);\n         canvas.width = new_size.width;\n         canvas.height = new_size.height;\n         ctx.drawImage(image_obj, 0, 0, canvas.width, canvas.height);\n         b64_image = canvas.toDataURL().replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n         window.URL.revokeObjectURL(src);\n         canvas.toBlob((blob) => {\n             var reader = new FileReader();\n             reader.onload = function () {\n                 b64_image = reader.result.replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n                 let binary_file = atob(b64_image),\n                    bytes = new Uint8Array(binary_file.length);\n\n                 for (let i = 0; i < binary_file.length; i++)\n                     bytes[i] = binary_file.charCodeAt(i);\n\n                 hash = sha1(bytes);\n                 deferred.resolve(b64_image, hash, binary_file.length);\n             }.bind(this);\n             reader.readAsDataURL(blob);\n         }, file.type, 0.8);\n     };\n     image_obj.onerror = function() {\n         image_obj.onerror = null;\n         window.URL.revokeObjectURL(src);\n         deferred.resolve(false, false, false);\n     };\n     image_obj.src = src;\n     return deferred.promise();\n};\n\n$.fn.setAvatar = function (image, size) {\n    var cached_image = getCachedImage(image);\n    setCss(this, cached_image, size);\n};\n\nexport default {\n    getCachedImage: getCachedImage,\n    getBlobImage: b64toBlob,\n    getDefaultAvatar: getDefaultAvatar,\n    getAvatarFromFile: getAvatarFromFile,\n    getDefaultColor: getAccountColor,\n    getCachedBackground: getCachedBackground,\n    compressImage: compressImage\n};\n","import deps from \"xabber-dependencies\"\nimport templates from \"xabber-templates\";\nimport constants from \"xabber-constants\";\n\nvar _ = deps._,\n    $ = deps.$;\n\nvar $modal_container = $('<div>').attr('id', 'modals').appendTo(constants.CONTAINER_ELEMENT);\nvar modal_queue = [];\n\nvar Modal = function (modal_constructor, options) {\n    if (modal_constructor instanceof Function) {\n        this.$modal = $(modal_constructor());\n    } else {\n        this.$modal = $(modal_constructor);\n    }\n    this.options = options || {};\n    this.closed = new $.Deferred();\n};\n\nlet getString = function (id, params) {\n    if (deps.xabber_i18next.exists(id)) {\n        return deps.xabber_i18next.t(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n    } else if (deps.xabber_i18next.default_lang) {\n        return deps.xabber_i18next.default_lang(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n    } else\n        return \"\";\n};\n\n_.extend(Modal.prototype, {\n    open: function (options) {\n        if (this.options.use_queue) {\n            modal_queue.push(this);\n            (modal_queue.length === 1) && this.throw();\n        } else {\n            this.throw();\n        }\n        setTimeout(() => {\n            document.addEventListener(\"keyup\", this.clickHandler.bind(this));\n        }, 500);\n        return this.closed.promise();\n    },\n\n    throw: function () {\n        this.$modal.appendTo($('#modals')).prop('modal', this);\n        var modal_options = _.omit(this.options, ['use_queue']);\n        _.extend(modal_options, {\n            is_default_complete: true,\n            complete_data: null\n        });\n\n        if (this.options.use_queue) {\n            this.$modal.one('modal_close', function (ev, data) {\n                this.$modal.detach();\n                this.closed.resolve(data.value);\n                modal_queue.shift();\n                modal_queue.length && modal_queue[0].throw();\n            }.bind(this));\n        }\n\n        this.$modal._openModal(modal_options);\n    },\n\n    close: function (options) {\n        var modal_options = _.omit(options, ['use_queue', 'is_default_complete', 'complete_data']);\n        _.extend(modal_options, {\n            complete: function () {\n                if (this.options.use_queue) {\n                    var data = _.isUndefined(options.complete_data) ? null : options.complete_data;\n                    this.complete(data);\n                }\n                if (options.is_default_complete) {\n                    if (typeof(this.options.complete) === \"function\") {\n                        this.options.complete();\n                    }\n                } else {\n                    if (this.options.use_queue) {\n                        this.complete();\n                    }\n                    if (typeof(options.complete) === \"function\") {\n                        options.complete();\n                    }\n                }\n            }.bind(this)\n        });\n\n        this.$modal.prop('modal', null);\n        this.$modal._closeModal(modal_options);\n    },\n\n    complete: function (value) {\n        document.removeEventListener(\"keyup\", this.clickHandler);\n        this.$modal.trigger('modal_close', {value: value});\n    },\n\n    clickHandler: function (ev) {\n        if (ev.keyCode === 13) {\n            this.$modal.find('.modal-footer button.ok-button').click();\n            ev.preventDefault();\n        }\n    }\n});\n\n$.fn._openModal = $.fn.openModal;\n\n$.fn.openModal = function (options) {\n    var modal = new Modal(this, options);\n    return modal.open();\n};\n\n$.fn._closeModal = $.fn.closeModal;\n\n$.fn.closeModal = function (options) {\n    var modal = this.prop('modal');\n    if (modal) {\n        modal.close(options);\n    } else {\n        this._closeModal(options);\n    }\n};\n\nexport default {\n    Modal: Modal,\n\n    clear_queue: function () {\n        modal_queue = [];\n    },\n\n    dialogs: {\n        common: function (header, text, buttons, dialog_options, flag, modal_class) {\n            var dialog = new Modal(function () {\n                dialog_options || (dialog_options = []);\n                let options = dialog_options || [];\n                buttons || (buttons = {});\n                if (typeof dialog_options === \"object\")\n                    options = [];\n                var ok_button = buttons.ok_button,\n                    cancel_button = buttons.cancel_button,\n                    optional_buttons = (buttons.optional_buttons || []).reverse();\n                ok_button && (ok_button = {text: ok_button.text || getString(\"ok\")});\n                cancel_button && (cancel_button = {text: cancel_button.text || getString(\"cancel\")});\n                return templates.base.dialog({\n                    header: header,\n                    text: text,\n                    ok_button: ok_button,\n                    cancel_button: cancel_button,\n                    optional_buttons: optional_buttons,\n                    dialog_options: options,\n                    flag: flag || \"\",\n                    modal_class: modal_class || \"\"\n                });\n            }, {use_queue: true});\n\n            if (dialog_options.modal_class) {\n                dialog.$modal.addClass(dialog_options.modal_class)\n            }\n\n            if (dialog_options.no_dialog_options) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n            }\n            if (dialog_options.inverted_buttons) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.cancel-button').removeClass('btn-dark');\n                dialog.$modal.find('.ok-button').addClass('btn-dark');\n                dialog.$modal.find('.modal-footer').addClass('inverted-buttons');\n            }\n\n            if (dialog_options.img_details) {\n                dialog.$modal.find('.modal-content').append('<div class=\"modal-images-details\"/>').append('<div class=\"modal-images-details-btn btn-flat btn-dark btn-main\"/>');\n                dialog.$modal.find('.modal-images-details-btn').text(xabber.getString(\"details\"));\n                dialog.$modal.find('.modal-images-details').append('<div class=\"image-details-container hidden\"/>');\n                dialog.$modal.find('.image-details-container').html(dialog_options.img_details);\n                dialog.$modal.find('.modal-images-details-btn').click(function () {\n                    dialog.$modal.find('.image-details-container').switchClass('hidden', !dialog.$modal.find('.image-details-container').hasClass('hidden'));\n                });\n            }\n\n            if (dialog_options.blob_image_from_clipboard) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.img-from-clipboard')[0].src = dialog_options.blob_image_from_clipboard;\n                dialog.$modal.find('.container-for-img').removeClass('hidden');\n            }\n\n            if (dialog_options.canvas) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.container-for-img').html(\"\").removeClass('hidden')[0].appendChild(dialog_options.canvas);\n                if (dialog_options.bottom_text)\n                    $('<div class=\"dialog-bottom-text\"/>').html(dialog_options.bottom_text).appendTo(dialog.$modal.find('.container-for-img'));\n            }\n\n            if (dialog_options.escape_button) {\n                dialog.$modal.find('.modal-header').append('<i class=\"close-modal mdi mdi-close mdi-24px\"></i>');\n            }\n\n            if (dialog_options.input_placeholder_value || dialog_options.input_value) {\n                dialog.$modal.find('.dialog-options-wrap').html($('<input type=\"text\" placeholder=\"' + dialog_options.input_placeholder_value + '\" id=\"user_value\"/>').val(dialog_options.input_value));\n            }\n\n            dialog.$modal.find('.modal-footer button').click(function (ev) {\n                var option = $(ev.target).data('option'),\n                    $options = dialog.$modal.find('.dialog-option'),\n                    user_value_input = dialog.$modal.find('#user_value');\n                if (option && $options.length) {\n                    var result = {};\n                    _.each($options, function (item) {\n                        var $item = $(item);\n                        result[$item.data('name')] = $item.find('input').prop('checked');\n                    });\n                    dialog.close({complete_data: result});\n                } else {\n                    if (user_value_input.length) {\n                        if ($(ev.target).hasClass('btn-cancel')) {\n                            dialog.close({complete_data: false});\n                        } else if ($(ev.target).hasClass('optional-button')) {\n                            dialog.close({complete_data: option});\n                        }\n                        else {\n                            var user_value = user_value_input.val();\n                            dialog.close({complete_data: user_value});\n                        }\n                    }\n                    else\n                        dialog.close({complete_data: option});\n                }\n            });\n\n            dialog.$modal.find('.modal-header .close-modal').click(function () {\n                    dialog.close({complete_data: false});\n            });\n\n            return dialog.open();\n        },\n\n        warning: function (text, dialog_options) {\n            return this.common(getString(\"warning\"), text, {ok_button: true}, dialog_options);\n        },\n\n        error: function (text, dialog_options, header) {\n            return this.common(header || getString(\"xabber_account__login__dialog_error__header\"), text, {ok_button: true}, dialog_options);\n        },\n\n        ask: function (header, text, dialog_options, buttons, flag) {\n            var ok_text, cancel_text;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                cancel_text = buttons.cancel_button_text;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, cancel_button: {text: cancel_text}}, dialog_options, flag);\n        },\n\n        ask_extended: function (header, text, dialog_options, buttons) {\n            var ok_text, optional_button;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                optional_button = (buttons.optional_button) ? [{value: buttons.optional_button, name: buttons.optional_button_text}] : false;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, cancel_button: true, optional_buttons: optional_button}, dialog_options, 'extended');\n        },\n\n        ask_enter_value: function (header, text, dialog_options, buttons) {\n            var ok_text, resend_button;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                resend_button = (buttons.resend_button_text) ? [{value: buttons.resend_to, name: buttons.resend_button_text}] : false;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, optional_buttons: resend_button, cancel_button: true}, dialog_options);\n        },\n\n        notify: function (header, text) {\n            return this.common(header, text, {ok_button: true});\n        }\n    }\n};\n","import deps from \"xabber-dependencies\"\n\nvar _ = deps._,\n    $ = deps.$;\n\n$.fn.placeCaretAtEnd = function () {\n    if (!this.length) {\n        return this;\n    }\n    var el = this[0];\n    el.focus();\n    if (!_.isUndefined(window.getSelection) && !_.isUndefined(document.createRange)) {\n        var range = document.createRange();\n        range.selectNodeContents(el);\n        range.collapse(false);\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n    } else if (!_.isUndefined(document.body.createTextRange)) {\n        var textRange = document.body.createTextRange();\n        textRange.moveToElementText(el);\n        textRange.collapse(false);\n        textRange.select();\n    }\n    return this;\n};\n\n$.fn.updateRichTextarea = function () {\n    var text = this.getTextFromRichTextarea();\n    if (!text) {\n        this.html('');\n    }\n    return this;\n};\n\n$.fn.flushRichTextarea = function () {\n    this.html('');\n    return this;\n};\n\n$.fn.pasteHtmlAtCaret = function (html) {\n    var sel, range;\n    this[0].focus();\n    if (window.getSelection) {\n        // IE9 and non-IE\n        sel = window.getSelection();\n        if (sel.getRangeAt && sel.rangeCount) {\n            range = sel.getRangeAt(0);\n            range.deleteContents();\n\n            // Range.createContextualFragment() would be useful here but is\n            // non-standard and not supported in all browsers (IE9, for one)\n            var el = document.createElement(\"div\");\n            el.innerHTML = html;\n            var frag = document.createDocumentFragment(), node, lastNode;\n            while ( (node = el.firstChild) ) {\n                lastNode = frag.appendChild(node);\n            }\n            range.insertNode(frag);\n\n            // Preserve the selection\n            if (lastNode) {\n                range = range.cloneRange();\n                range.setStartAfter(lastNode);\n                range.collapse(true);\n                sel.removeAllRanges();\n                sel.addRange(range);\n            }\n        }\n    } else if (document.selection && document.selection.type != \"Control\") {\n        // IE < 9\n        document.selection.createRange().pasteHTML(html);\n    }\n    return this;\n};\n\n$.fn.getTextFromRichTextarea = function () {\n    var $div = $('<div>').html(this.html());\n    $div.find('.emoji').each(function () {\n        $(this).replaceWith($(this).data('emoji'));\n    });\n    $div.find('p').each(function () {\n        $(this).replaceWith($(this).html() + '\\n');\n    });\n    /*$div.find('blockquote').each(function () {\n        $(this).replaceWith($(this).html() + '\\n');\n    });*/\n    $div.find('span').each(function () {\n        $(this).replaceWith($(this).html());\n    });\n    $div.find('div').each(function () {\n        var $this = $(this);\n        $this.find('br').remove();\n        var html = $this.html();\n        if ($this.hasClass('emoji'))\n            $this.replaceWith(html);\n        else\n            $this.replaceWith('\\n'+html);\n    });\n    /*$div.find('br').each(function () {\n        $(this).replaceWith('\\n');\n    });*/\n    return $div.text();\n};\n\nexport default null;\n","import deps from \"xabber-dependencies\";\nimport emoji from \"xabber-emoji-utils\";\nimport images from \"xabber-image-utils\";\nimport modals from \"xabber-modal-utils\";\nimport constants from \"xabber-constants\";\nimport textarea from \"xabber-textarea-utils\";\n\nvar $ = deps.$,\n    _ = deps._,\n    moment = deps.moment;\n\n// jQuery extensions\n$.fn.switchClass = function (klass, condition) {\n    if (arguments.length === 1) {\n        condition = !this.hasClass(klass);\n    }\n    if (condition) {\n        this.addClass(klass);\n    } else {\n        this.removeClass(klass);\n    }\n    return this;\n};\n\n$.fn.showIf = function (condition) {\n    return this.switchClass('hidden', !condition);\n};\n\n$.fn.hideIf = function (condition) {\n    return this.switchClass('hidden', condition);\n};\n\n$.fn.isVisibleInViewport = function() {\n    let elementTop = $(this).offset().top,\n        elementBottom = elementTop + $(this).outerHeight();\n\n    let viewportTop = $(window).scrollTop(),\n        viewportBottom = viewportTop + $(window).height();\n\n    return elementBottom > viewportTop && elementTop < viewportBottom;\n};\n\n$.fn.isVisibleInContainer = function(container) {\n    if (!this.length || !container.length)\n        return;\n    container = container[0];\n    let eleTop = this[0].offsetTop,\n        eleBottom = eleTop + this[0].clientHeight;\n\n    let containerTop = container.scrollTop,\n        containerBottom = containerTop + container.clientHeight;\n\n    return (\n        (eleTop >= containerTop && eleBottom <= containerBottom) ||\n        // Some part of the element is visible in the container\n        (eleTop < containerTop && containerTop < eleBottom) ||\n        (eleTop < containerBottom && containerBottom < eleBottom)\n    );\n};\n\n$.fn.isFullyVisibleInContainer = function(container) {\n    if (!this.length || !container.length)\n        return;\n    container = container[0];\n    let eleTop = this[0].offsetTop,\n        eleBottom = eleTop + this[0].clientHeight;\n\n    let containerTop = container.scrollTop,\n        containerBottom = containerTop + container.clientHeight;\n\n    return (\n        eleTop >= containerTop && eleBottom <= containerBottom\n    );\n};\n\n$.fn.isBottomVisibleInContainer = function(container) {\n    if (!this.length || !container.length)\n        return;\n    container = container[0];\n    let eleTop = this[0].offsetTop,\n        eleBottom = eleTop + this[0].clientHeight;\n\n    let containerTop = container.scrollTop,\n        containerBottom = containerTop + container.clientHeight;\n\n    return (\n        eleBottom <= containerBottom\n    );\n};\n\nvar getHyperLink = function (url) {\n    var prot = (url.indexOf('http://') === 0 ||  url.indexOf('https://') === 0) ? '' : 'http://',\n        escaped_url = \"\";\n    try {\n        escaped_url = encodeURI(decodeURI(url)).replace(/[!'()]/g, escape).replace(/\\*/g, \"%2A\");\n    }\n    catch (e) {\n        escaped_url = url;\n    }\n    try {\n        url = decodeURI(url);\n    }\n    catch (e) {}\n    return \"<a target='_blank' class='msg-hyperlink' href='\"+prot+escaped_url + \"'>\"+url+\"</a>\";\n};\n\n$.fn.hyperlinkify = function (options) {\n    options || (options = {});\n    var $query = options.selector ? this.find(options.selector) : this;\n    $query.each(function (i, obj) {\n        var $obj = $(obj),\n            html_concat = \"\",\n            url_regexp = /(((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g;\n            // url_regexp = /((((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)|((\\b)((\\w+)([\\w#!:.?+=&%@!\\-\\/])(\\w+))?(\\.net|\\.edu|\\.cloud|\\.top|\\.vip|\\.cash|\\.im|\\.online|\\.chat|\\.com|\\.org|\\.ru|\\.travel|\\.info|\\.tv|\\.biz|\\.mobi|\\.tel|\\.ar|\\.al|\\.asia|\\.np|\\.ng|\\.io|\\.bb|\\.br|\\.ca|\\.tr|\\.co|\\.ec|\\.fr|\\.ht|\\.in|\\.eg|\\.ie|\\.et|\\.jo|\\.mr|\\.id|\\.iq|\\.nl|\\.ps|\\.ph|\\.sl|\\.si|\\.se|\\.af|\\.ag|\\.be|\\.bd|\\.bg|\\.cl|\\.cd|\\.my|\\.mz|\\.mx|\\.cz|\\.eu|\\.dz|\\.de|\\.hk|\\.it|\\.la|\\.no|\\.pl|\\.ro|\\.sg|\\.ke|\\.kr|\\.ch|\\.ug|\\.us|\\.ve|\\.vn|\\.at|\\.bo|\\.cm|\\.cn|\\.cg|\\.dk|\\.fi|\\.gr|\\.gh|\\.is|\\.ir|\\.jp|\\.lv|\\.ma|\\.me|\\.pk|\\.pe|\\.pt|\\.sa|\\.sk|\\.es|\\.tz|\\.tw|\\.ua|\\.uz|\\.ye)((\\/\\w+)|(\\S+)|\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)/g;\n        $obj[0].childNodes.forEach(function (node) {\n            let $node = $(node),\n                x = node.outerHTML;\n            if (node.tagName === 'A') {\n                html_concat += x;\n                return;\n            }\n            else {\n                if (node.nodeName === '#text')\n                    x = _.escape($node.text());\n                let list = x && x.match(url_regexp);\n                list = Array.from(new Set(list));\n                if (!list) {\n                    html_concat += x;\n                    return;\n                }\n                if (list.length === 1 && list[0] === x) {\n                    html_concat += options.decode_uri ? decodeURI(x) : getHyperLink(x);\n                } else {\n                    for (i = 0; i < list.length; i++) {\n                        if (options.decode_uri)\n                            x = x.replace(list[i], decodeURI(list[i]));\n                        else\n                            x = x.replaceAll(new RegExp(`(\\\\s|^)(${list[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')})`,\"g\"), '$1' + getHyperLink(list[i]));\n                    }\n                    html_concat += x;\n                }\n            }\n        }.bind(this));\n        $obj.html(html_concat);\n    });\n    return this;\n};\n\nvar utils = {\n    uuid: function () {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0,\n                v = c == 'x' ? r : r & 0x3 | 0x8;\n            return v.toString(16);\n        });\n    },\n\n    utoa: function (str) {\n        return window.btoa(_.unescape(encodeURIComponent(str)));\n    },\n\n    atou: function (str) {\n        return decodeURIComponent(_.escape(window.atob(str)));\n    },\n\n    now: function () {\n        return Math.floor(moment.now() / 1000);\n    },\n\n    pretty_time: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format('HH:mm:ss');\n    },\n\n    pretty_date: function (timestamp, format) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format(format || 'dddd, MMMM D, YYYY');\n    },\n\n    pretty_datetime: function (timestamp, format) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format(format || 'MMMM D, YYYY HH:mm:ss');\n    },\n\n    pretty_short_datetime_recent_chat: function (timestamp) {\n        timestamp = Number(timestamp ? moment(timestamp) : moment());\n        if (moment(timestamp).startOf('day').isSame(moment().startOf('day')) || Number(moment().subtract(12, 'hours') < timestamp)) {\n            return moment(timestamp).format(\"HH:mm:ss\");\n        }\n        if (Number(moment().subtract(12, 'hours')) > timestamp && Number(moment().subtract(7, 'days')) <= timestamp) {\n            return moment(timestamp).format(\"ddd\");\n        }\n        if (Number(moment().subtract(7, 'days')) > timestamp && Number(moment().subtract(1, 'year')) <= timestamp) {\n            return moment(timestamp).format(\"MMM D\");\n        }\n        if (timestamp && Number(moment().subtract(1, 'year')) > timestamp) {\n            return moment(timestamp).format(\"D MMM YYYY\");\n        }\n    },\n\n    pretty_short_datetime: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment(),\n            day = moment(datetime).startOf('day'),\n            year = moment(datetime).startOf('year');\n        if (day.isSame(moment().startOf('day'))) {\n            return datetime.format('HH:mm:ss');\n        } else if (year.isSame(moment().startOf('year'))) {\n            return datetime.format('MMM D');\n        } else {\n            return datetime.format('DD/MM/gg');\n        }\n    },\n\n    pretty_short_month_date: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment(),\n            day = moment(datetime).startOf('day');\n        if (day.isSame(moment().startOf('day'))) {\n            return datetime.format('HH:mm:ss');\n        } else {\n            return datetime.format('MMM D, YYYY HH:mm:ss');\n        }\n    },\n\n    isImageType: function(type) {\n        if (type.indexOf('image') > -1 && !(type.indexOf('application') > -1))\n            return true;\n        else\n            return false;\n    },\n\n    tryReadingFile: function(file) {\n        return new Promise((resolve, reject) => {\n            let r = new FileReader();\n            r.onload = (e) => {\n                resolve();\n            };\n            r.onerror = (e) => {\n                console.log(r.error);\n                reject(r.error);\n            };\n            r.readAsDataURL(file)\n        });\n    },\n\n    getDomainFromUrl: function(url) {\n        let a = document.createElement('a');\n        if (url && !/^https?:\\/\\//i.test(url))\n            url = 'http://' + url;\n        a.href = url;\n        return a.hostname;\n    },\n\n    isVideoType: function(type) {\n        if (type.indexOf('video') > -1)\n            return true;\n        else\n            return false;\n    },\n\n    file_type_icon: function (mime_type) {\n        let filetype = utils.pretty_file_type(mime_type);\n        if (filetype === 'image')\n            return 'mdi-image';\n        if (filetype === 'audio')\n            return 'mdi-music-note';\n        if (filetype === 'video')\n            return 'mdi-filmstrip';\n        if (filetype === 'document')\n            return 'mdi-file-document-box';\n        if (filetype === 'presentation')\n            return 'mdi-presentation';\n        if (filetype === 'archive')\n            return 'mdi-zip-box';\n        if (filetype === 'file')\n            return 'mdi-file';\n        if (filetype === 'pdf')\n            return 'mdi-file-pdf';\n        return 'mdi-file'\n    },\n\n    file_type_icon_svg: function (mime_type) {\n        let filetype = utils.pretty_file_type(mime_type);\n        if (filetype === 'image')\n            return 'image';\n        if (filetype === 'audio')\n            return 'file-audio';\n        if (filetype === 'video')\n            return 'file-video';\n        if (filetype === 'document')\n            return 'file-document';\n        if (filetype === 'presentation')\n            return 'file-presentation';\n        if (filetype === 'archive')\n            return 'file-zip';\n        if (filetype === 'file')\n            return 'file';\n        if (filetype === 'pdf')\n            return 'file-pdf';\n        return 'file'\n    },\n\n    pretty_file_type: function (mime_type) {\n        if (constants.MIME_TYPES.image.includes(mime_type))\n            return 'image';\n        if (constants.MIME_TYPES.audio.includes(mime_type))\n            return 'audio';\n        if (constants.MIME_TYPES.video.includes(mime_type))\n            return 'video';\n        if (constants.MIME_TYPES.document.includes(mime_type))\n            return 'document';\n        if (constants.MIME_TYPES.pdf.includes(mime_type))\n            return 'pdf';\n        if (constants.MIME_TYPES.presentation.includes(mime_type))\n            return 'presentation';\n        if (constants.MIME_TYPES.archive.includes(mime_type))\n            return 'archive';\n        if (constants.MIME_TYPES.table.includes(mime_type))\n            return 'electronic table';\n        return 'file';\n    },\n\n    pretty_file_type_with_article: function (mime_type) {\n        let type = utils.pretty_file_type(mime_type),\n            vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n        (type === 'pdf') && (type = 'document');\n        if (vowels.includes(type[0]))\n            return 'an ' + type;\n        else\n            return 'a ' + type;\n    },\n\n    pretty_size: function (size) {\n        if (!size && size != 0)\n            return \"\";\n        if (_.isNaN(Number(size)))\n            return size;\n        if (size < 1024) {\n            return size+' B';\n        } else if (size < 1048576) {\n            return (size/1024).toFixed(2)+' KiB';\n        } else if (size < 1073741824) {\n            return (size/1048576).toFixed(2)+' MiB';\n        } else {\n            return (size/1073741824).toFixed(2)+' GiB';\n        }\n    },\n\n    pretty_duration: function (duration) {\n        if (_.isNaN(Number(duration)))\n            return duration;\n        if (_.isUndefined(duration) || duration === \"\")\n            return \"\";\n        if (duration < 10)\n            return (\"0:0\" + duration);\n        if (duration < 60)\n            return (\"0:\" + duration);\n        if (duration >= 60)\n            return (Math.trunc(duration/60) + \":\" + ((duration%60 < 10) ? (\"0\" + (duration%60)) : duration%60));\n    },\n\n    pretty_name: function (name) {\n        return name ? (name[0].toUpperCase() + name.replace(/-/,' ').substr(1).toLowerCase()) : \"\";\n    },\n\n    getKeyByValue: function (object, value) {\n        return Object.keys(object).find(key => object[key] === value);\n    },\n\n    slice_string: function (str, from, to) {\n        to = _.isNumber(to) ? to : [...str].length;\n        if (str.length === [...str].length)\n            return str.slice(from, to);\n        else\n            return Array.from(str).slice(from, to).join(\"\");\n    },\n\n    slice_pretty_body: function (body, mutable_refs) {\n        if (!mutable_refs || !mutable_refs.length)\n            return body;\n        body = body || \"\";\n        mutable_refs = mutable_refs.filter(m => m.type === 'groupchat' || m.type === 'forward');\n        let pretty_body = Array.from(deps.Strophe.xmlescape(body));\n        mutable_refs && mutable_refs.forEach(function (ref) {\n            for (let idx = ref.start; idx < ref.end; idx++)\n                pretty_body[idx] = \"\";\n        }.bind(this));\n        return deps.Strophe.xmlunescape(pretty_body.join(\"\").trim());\n    },\n\n    markupBodyMessage: function (message, mention_tag) {\n        let attrs = _.clone(message.attributes),\n            mentions = attrs.mentions || [],\n            markups = attrs.markups || [],\n            mutable_refs = attrs.mutable_content || [],\n            blockquotes = attrs.blockquotes || [],\n            markup_body = Array.from(deps.Strophe.xmlescape(attrs.original_message || attrs.message || \"\"));\n        !mention_tag && (mention_tag = 'span');\n\n        mutable_refs.forEach(function (muted) {\n            for (let idx = muted.start; idx < muted.end; idx++)\n                markup_body[idx] = \"\";\n        }.bind(this));\n\n        mentions.forEach(function (mention) {\n            let start_idx = mention.start,\n                end_idx = mention.end > (markup_body.length - 1) ? (markup_body.length - 1) : (mention.end - 1), target = mention.target;\n            if (start_idx > markup_body.length - 1)\n                return;\n            if (mention.is_gc) {\n                let id = target.match(/\\?id=\\w*/),\n                    jid = target.match(/\\?jid=.*/);\n                if (id)\n                    target = id[0].slice(4);\n                else if (jid)\n                    target = jid[0].slice(5);\n                else {\n                    target = \"\";\n                    mention.me = true;\n                }\n            }\n            else\n                target = target.slice(5);\n            if (mention_tag === 'mention'){\n                markup_body[start_idx] = '<' + mention_tag + ' data-target=\"?jid=' + target + '\">' + markup_body[start_idx];\n                markup_body[end_idx] += '</' + mention_tag + '>';\n                return;\n            }\n            markup_body[start_idx] = '<' + mention_tag + ' data-target=\"' + target + '\" class=\"mention' + (mention.me ? ' ground-color-100' : '') + '\">' + markup_body[start_idx];\n            markup_body[end_idx] += '</' + mention_tag + '>';\n        }.bind(this));\n\n        markups.forEach(function (markup) {\n            let start_idx = markup.start,\n                end_idx = markup.end > (markup_body.length - 1) ? (markup_body.length - 1) : (markup.end - 1);\n            if (start_idx > markup_body.length - 1)\n                return;\n            if (markup.markup.length) {\n                let start_tags = \"\",\n                    end_tags = \"\";\n                markup.markup.forEach(function (mark_up_style) {\n                    if (typeof(mark_up_style) === 'object') {\n                        start_tags = '<a target=\"_blank\" class=\"msg-hyperlink\" href=\"' + mark_up_style.uri + '\">' + start_tags;\n                        end_tags += '</a>';\n                    } else {\n                        start_tags = '<' + mark_up_style[0].toLowerCase() + '>' + start_tags;\n                        end_tags += '</' + mark_up_style[0].toLowerCase() + '>';\n                    }\n                }.bind(this));\n                markup_body[start_idx] = start_tags + markup_body[start_idx];\n                markup_body[end_idx] += end_tags;\n            }\n        }.bind(this));\n\n        blockquotes.forEach(function (quote) {\n            let end_idx = quote.end > (markup_body.length - 1) ? (markup_body.length - 1) : (quote.end - 1);\n            for (let idx = quote.start; idx < (quote.start + constants.QUOTE_MARKER.length); idx++) {\n                if (idx === end_idx)\n                    markup_body[idx] = '<br>';\n                else\n                    markup_body[idx] = \"\";\n\n            }\n            for (let idx = quote.start; idx < end_idx; idx++) {\n                if (markup_body[idx] === '\\n') {\n                    for (let child_idx = idx + 1; child_idx <= (idx + constants.QUOTE_MARKER.length); child_idx++)\n                        markup_body[child_idx] = \"\";\n                    idx+= constants.QUOTE_MARKER.length - 1;\n                }\n            }\n            if (mention_tag === 'mention'){\n                markup_body[quote.start] = '<blockquote>';\n                markup_body[end_idx] += '</blockquote>';\n                return;\n            }\n            markup_body[quote.start] = '<div class=\"quote\">';\n            markup_body[end_idx] += '</div>';\n        }.bind(this));\n\n        return markup_body.join(\"\").trim();\n    },\n\n    getOS: function() {\n        let platform = window.navigator.platform,\n            macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],\n            windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],\n            os = null;\n\n        if (macosPlatforms.indexOf(platform) !== -1) {\n            os = 'mac OS';\n        } else if (windowsPlatforms.indexOf(platform) !== -1) {\n            os = 'Windows';\n        } else if (!os && /Linux/.test(platform)) {\n            os = 'Linux';\n        }\n\n        return os;\n    },\n\n    isOverflownWidth: function(element) {\n        return element.scrollWidth > element.clientWidth;\n    },\n\n    isOverflownHeight: function(element) {\n        return element.scrollHeight > element.clientHeight;\n    },\n\n    render_data_form: function (data_form) {\n        let $data_form = $('<div class=\"data-form\"/>');\n        data_form.fields.forEach(function (field) {\n            if (field.type === 'hidden')\n                return;\n            if (field.type === 'fixed') {\n                let $fixed_field = $('<div class=\"data-form-field fixed-field\"/>');\n                field.label && $fixed_field.append($('<div class=\"label\"/>').text(field.label));\n                field.values.forEach(function (value) {\n                    let $input = $('<div class=\"value\"/>').text(value);\n                    $fixed_field.append($input);\n                }.bind(this));\n                $data_form.append($fixed_field);\n            }\n            if (field.type === 'boolean') {\n                let $input = $(`<button id=${field.var} class=\"data-form-field ground-color-100 btn-dark btn-flat btn-main boolean-field\"/>`).text(field.label);\n                $data_form.append($input);\n            }\n        }.bind(this));\n        return $data_form;\n    },\n\n    copyTextToClipboard: function(text, callback_msg, errback_msg) {\n        if (!window.navigator.clipboard) {\n            return;\n        }\n        window.navigator.clipboard.writeText(text).then(function() {\n            if (callback_msg) {\n                let info_msg = callback_msg;\n                this.callback_popup_message(info_msg, 1500);\n            }\n        }.bind(this), function() {\n            if (errback_msg) {\n                let info_msg = errback_msg;\n                this.callback_popup_message(info_msg, 1500);\n            }\n        }.bind(this));\n    },\n\n    callback_popup_message: function (info_msg, time) {\n        let $body = $(document.body),\n            $popup_msg = $('<div class=\"callback-popup-message\"/>').text(info_msg);\n        time = time || 3000;\n        $body.find('.callback-popup-message').remove();\n        $body.append($popup_msg);\n        setTimeout( function() {\n            $popup_msg.remove();\n        }, time);\n    },\n\n    emoji_size: function (count) {\n        let size;\n        switch (count) {\n            case 1:\n                size = 56;\n                break;\n            case 2:\n                size = 44;\n                break;\n            case 3:\n                size = 32;\n                break;\n            case 4:\n                size = 24;\n                break;\n            case 5:\n                size = 22;\n                break;\n            default:\n                size = 20;\n                break;\n        }\n        return size;\n    },\n\n    openWindow: function (url, errback) {\n        let win = window.open(url, '_blank');\n        if (win) {\n            win.focus();\n        } else {\n            errback && errback();\n        }\n    },\n\n    clearSelection: function () {\n        var selection = window.getSelection();\n        if (selection.empty) {\n            selection.empty();\n        } else if (selection.removeAllRanges) {\n            selection.removeAllRanges();\n        }\n    },\n\n    getCookie: function (name) {\n        let matches = window.document.cookie.match(new RegExp(\n            \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n        ));\n        return matches ? decodeURIComponent(matches[1]) : undefined;\n    },\n\n    isMobile: {\n        Android: function () {\n            return navigator.userAgent.match(/Android/i);\n        },\n        BlackBerry: function () {\n            return navigator.userAgent.match(/BlackBerry/i);\n        },\n        iOS: function () {\n            return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n        },\n        Opera: function () {\n            return navigator.userAgent.match(/Opera Mini/i);\n        },\n        Windows: function () {\n            return navigator.userAgent.match(/IEMobile/i) || navigator.userAgent.match(/WPDesktop/i);\n        },\n        any: function () {\n            return (this.Android() || this.BlackBerry() || this.iOS() || this.Opera() || this.Windows());\n        }\n    },\n\n    fromBase64toArrayBuffer: function (b64_string) {\n        return Uint8Array.from(atob(b64_string), c => c.charCodeAt(0)).buffer;\n    },\n\n    ArrayBuffertoBase64: function (arrayBuffer) {\n        return btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n    },\n\n    generateHOTPKey: async function(secret, counter) {\n        let Crypto = window.crypto.subtle;\n        let counterArray = this.padCounter(counter);\n\n        let key = await Crypto.importKey(\n            'raw',\n            secret,\n            { name: 'HMAC', hash: { name: 'SHA-1' } },\n            false,\n            ['sign']\n        );\n\n        let HS = await Crypto.sign('HMAC', key, counterArray);\n\n        return HS;\n    },\n\n    padCounter: function(counter) {\n        let buffer = new ArrayBuffer(8);\n        let bView = new DataView(buffer);\n\n        let byteString = '0'.repeat(64); // 8 bytes\n        let bCounter = (byteString + counter.toString(2)).slice(-64);\n\n        for (let byte = 0; byte < 64; byte += 8) {\n            let byteValue = parseInt(bCounter.slice(byte, byte + 8), 2);\n            bView.setUint8(byte / 8, byteValue);\n        }\n\n        return buffer;\n    },\n\n    DT: function(HS) {\n        let offset = HS[19] & 0b1111;\n        let P = ((HS[offset] & 0x7f) << 24) | (HS[offset + 1] << 16) | (HS[offset + 2] << 8) | HS[offset + 3]\n        let pString = P.toString(2);\n\n        return pString;\n    },\n\n    truncate: function(uKey) {\n        let Sbits = this.DT(uKey);\n        let Snum = parseInt(Sbits, 2);\n\n        return Snum;\n    },\n\n    generateHOTP: async function(secret, counter) {\n        let key = await this.generateHOTPKey(secret, counter);\n        let uKey = new Uint8Array(key);\n\n        let Snum = this.truncate(uKey);\n        let padded = ('000000' + (Snum % (10 ** 8))).slice(-8);\n\n        return padded;\n    },\n\n    hmacSha256: async function(key, message) {\n\n        let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n\n        let hashBuffer = await crypto.subtle.sign(\n            algorithm.name,\n            key,\n            message\n        );\n\n        return hashBuffer;\n    },\n\n    stringToArrayBuffer: function (string) {\n        let { length } = string;\n        let buffer = new Uint8Array(length);\n\n        for (let i = 0; i < length; i++) {\n            buffer[i] = string.charCodeAt(i);\n        }\n\n        return buffer;\n    },\n\n    AES: {\n        ALGO_NAME: 'AES-GCM',\n\n        decoder: new window.TextDecoder('utf-8'),\n        encoder: new window.TextEncoder('utf-8'),\n\n        decrypt: async function (masterKey, HMACData, payload) {\n            let masterObj = await window.crypto.subtle.importKey('raw', masterKey, {name: 'HKDF'}, false, ['deriveKey', 'deriveBits']),\n                hkdfCtrParams = { name: 'HKDF', salt: new Uint8Array(32), info: utils.stringToArrayBuffer('OMEMO Payload'), hash: 'SHA-256'};\n\n            let key = await window.crypto.subtle.deriveBits(hkdfCtrParams, masterObj, 640);\n\n            key = new Uint8Array(key);\n\n            let encryptionKey = key.slice(0,32),\n                authenticationKey = key.slice(32,64),\n                iv = key.slice(64);\n\n            let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n\n            authenticationKey = await crypto.subtle.importKey(\n                \"raw\",\n                authenticationKey,\n                algorithm,\n                false, [\"sign\", \"verify\"]\n            );\n\n            let generatedHMAC = await utils.hmacSha256(authenticationKey, payload);\n\n            generatedHMAC = generatedHMAC.slice(0, generatedHMAC.byteLength - 16);\n\n            if (!(utils.ArrayBuffertoBase64(HMACData) === utils.ArrayBuffertoBase64(generatedHMAC)))\n                return;\n\n            encryptionKey = await window.crypto.subtle.importKey('raw', encryptionKey, { \"name\": 'AES-CBC' }, true, ['decrypt'])\n\n\n            let decryptedBuffer = await window.crypto.subtle.decrypt({\n                name: 'AES-CBC',\n                iv,\n            }, encryptionKey, payload);\n\n            return utils.AES.decoder.decode(decryptedBuffer);\n        },\n\n        encrypt: async function (plaintext) {\n            let masterKey = window.crypto.getRandomValues(new Uint8Array(32)),\n                masterObj = await window.crypto.subtle.importKey('raw', masterKey, {name: 'HKDF'}, false, ['deriveKey', 'deriveBits']),\n                hkdfCtrParams = { name: 'HKDF', salt: new Uint8Array(32), info: utils.stringToArrayBuffer('OMEMO Payload'), hash: 'SHA-256'};\n\n            let key = await window.crypto.subtle.deriveBits(hkdfCtrParams, masterObj, 640);\n\n            key = new Uint8Array(key);\n\n            let encryptionKey = key.slice(0,32),\n                authenticationKey = key.slice(32,64),\n                iv = key.slice(64);\n\n            encryptionKey = await window.crypto.subtle.importKey('raw', encryptionKey, { \"name\": 'AES-CBC' }, true, ['encrypt']);\n\n            let encrypted = await utils.AES.generateAESencryptedMessage(iv, encryptionKey, plaintext);\n\n            let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n            authenticationKey = await crypto.subtle.importKey(\n                \"raw\",\n                authenticationKey,\n                algorithm,\n                false, [\"sign\", \"verify\"]\n            );\n\n            let payload = await utils.hmacSha256(authenticationKey, encrypted);\n\n            payload = payload.slice(0, payload.byteLength - 16);\n\n            let keydata = new Uint8Array([...masterKey, ...new Uint8Array(payload)]);\n\n            return {\n                keydata: keydata.buffer,\n                payload: encrypted,\n            }\n        },\n\n        generateAESencryptedMessage: async function (iv, key, plaintext) {\n            let encryptOptions = {\n                name: 'AES-CBC',\n                iv,\n            };\n            let encodedPlaintext = utils.AES.encoder.encode(plaintext),\n                encrypted = await window.crypto.subtle.encrypt(encryptOptions, key, encodedPlaintext);\n\n            return encrypted;\n        },\n\n        arrayBufferConcat: function () {\n            let length = 0,\n                buffer = null;\n\n            for (let i in arguments) {\n                buffer = arguments[i];\n                length += buffer.byteLength;\n            }\n\n            let joined = new Uint8Array(length),\n                offset = 0;\n\n            for (let i in arguments) {\n                buffer = arguments[i];\n                joined.set(new Uint8Array(buffer), offset);\n                offset += buffer.byteLength;\n            }\n\n            return joined.buffer\n        },\n\n        generateAESKey: async function () {\n            let algo = {\n                name: utils.AES.ALGO_NAME,\n                length: constants.AES_KEY_LENGTH,\n            };\n            let keyUsage = ['encrypt', 'decrypt'],\n                key = await window.crypto.subtle.generateKey(algo, constants.AES_EXTRACTABLE, keyUsage);\n\n            return key;\n        }\n    },\n\n    getBrowser: function () {\n        // Get the user-agent string\n        let userAgentString =\n            navigator.userAgent;\n\n        // Detect Chrome\n        let chromeAgent =\n            userAgentString.indexOf(\"Chrome\") > -1;\n\n        // Detect Internet Explorer\n        let IExplorerAgent =\n            userAgentString.indexOf(\"MSIE\") > -1 ||\n            userAgentString.indexOf(\"Windows NT:\") > -1;\n\n        // Detect Firefox\n        let firefoxAgent =\n            userAgentString.indexOf(\"Firefox\") > -1;\n\n        // Detect Safari\n        let safariAgent =\n            userAgentString.indexOf(\"Safari\") > -1;\n\n        // Discard Safari since it also matches Chrome\n        if ((chromeAgent) && (safariAgent))\n            safariAgent = false;\n\n        // Detect Opera\n        let operaAgent =\n            userAgentString.indexOf(\"OP\") > -1;\n\n        // Discard Chrome since it also matches Opera\n        if ((chromeAgent) && (operaAgent))\n            chromeAgent = false;\n\n        if (safariAgent)\n            return 'Safari';\n        if (chromeAgent)\n            return 'Chrome';\n        if (IExplorerAgent)\n            return 'IE';\n        if (operaAgent)\n            return 'Opera';\n        if (firefoxAgent)\n            return 'Firefox';\n        return 'Unknown browser';\n    },\n\n    emoji: emoji,\n    images: images,\n    modals: modals,\n    dialogs: modals.dialogs\n};\n\n    export default utils;\n","// expands dependencies with internal xabber modules\nimport deps from \"xabber-dependencies\";\nimport constants from \"xabber-constants\";\nimport templates from \"xabber-templates\";\nimport sounds from \"xabber-sounds\";\nimport utils from \"xabber-utils\";\nimport client_translation_progress from \"xabber-translations-info\";\nimport version from \"xabber-version\";\nimport _ from \"underscore\";\n\nexport default _.extend({\n    constants: constants,\n    templates: templates,\n    sounds: sounds,\n    client_translation_progress: client_translation_progress,\n    utils: utils,\n    uuid: utils.uuid\n}, version, deps);","import env from \"xabber-environment\";\n\nlet constants = env.constants,\n    _ = env._,\n    $ = env.$,\n    moment = env.moment,\n    client_translation_progress = env.client_translation_progress,\n    xabber_i18next = env.xabber_i18next,\n    xabber_i18next_sprintf = env.xabber_i18next_sprintf,\n    uuid = env.uuid,\n    utils = env.utils,\n    bc = new BroadcastChannel(\"xabber-web\");\n\nbc.onmessage = (event) => {\n    if (event.data === `1` && !bc.disabled_client) {\n        bc.postMessage(`2`);\n    }\n    if (event.data === `2`) {\n        bc.disabled_client = true\n    }\n};\n\nbc.postMessage(`1`);\n\nlet Xabber = Backbone.Model.extend({\n    defaults: {\n        version_number: env.version_number,\n        actual_version_number: env.version_number,\n        audio: false,\n        video: false,\n        client_id: uuid().substring(0, 8),\n        client_name: 'Xabber for Web'\n    },\n\n    initialize: function () {\n        this.env = env;\n        this.fetchURLParams();\n        this.cleanUpStorage();\n        this.initDefaultLanguage();\n        this.detectMediaDevices();\n        window.navigator.mediaDevices && (window.navigator.mediaDevices.ondevicechange = this.detectMediaDevices.bind(this));\n        this.check_config = new $.Deferred();\n        this._settings = new this.Settings({id: 'settings'},\n                {storage_name: this.getStorageName(), fetch: 'before'});\n        this.settings = this._settings.attributes;\n        let url = window.location.host + window.location.pathname.replace(/\\//g, \"-\");\n        if (url[url.length - 1] == \"-\")\n            url.slice(0, url.length - 1);\n        this._cache = new Backbone.ModelWithStorage({id: `cache-${url}`},\n                {storage_name: this.getStorageName(), fetch: 'before'});\n        this.cache = this._cache.attributes;\n        this.cache.client_id && (this.set('client_id', this.cache.client_id));\n        this._cache.save('client_id', this.get('client_id'));\n        this.extendFunction();\n        this.plyr_players = [];\n        this.current_plyr_player = null;\n        this.on(\"change:actual_version_number\", this.throwNewVersion, this);\n        this.on(\"quit\", this.onQuit, this);\n        this._version_interval = setInterval(this.readActualVersion.bind(this), 600000);\n\n        window.ononline = () => {\n            this.disconnectWhenConnecting();\n        };\n    },\n\n    initDefaultLanguage: function () {\n        let lang = window.navigator.language,\n            progress = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));\n        if (progress != 100)\n            lang = 'en';\n        this.set(\"default_language\", lang);\n    },\n\n    loadTranslations: async function (lang) {\n        return new Promise((resolve, reject) => {\n            let language = {};\n            language.lang = lang;\n            !language.lang && (language.lang = this.settings.language);\n            if (language.lang == 'default' && this.default_translation) {\n                language.lang = this.get(\"default_language\");\n                language.translation  = this.default_translation;\n                resolve(language);\n                return;\n            }\n            import(`~/translations/${language.lang.replace(/-/g, \"-r\")}.js`).then(translation => {\n                language.translation  = translation;\n                resolve(language)\n            });\n        });\n    },\n\n    setLocale: function (lang, translations) {\n        let default_lang = this.get(\"default_language\"),\n            _translations = {\n                [default_lang]: {\n                    translation: this.default_translation\n                }\n            };\n        lang && (_translations[lang] = {translation: translations});\n        xabber_i18next.use(xabber_i18next_sprintf);\n        xabber_i18next.init({\n            lng: default_lang,\n            debug: false,\n            pluralSeparator: '-',\n            resources: _translations\n        });\n        if (lang) {\n            xabber_i18next.changeLanguage(lang);\n            moment.locale(lang);\n        }\n        xabber_i18next.default_lang = xabber_i18next.getFixedT(default_lang);\n    },\n    getOneLiners: function () {\n        if (xabber_i18next.exists(\"motivating_oneliner\")) {\n            return xabber_i18next.t(\"motivating_oneliner\").replace(/\\\\'/g, \"'\").split('\\n');\n        } else if (xabber_i18next.default_lang) {\n            return xabber_i18next.default_lang(\"motivating_oneliner\").replace(/\\\\'/g, \"'\").split('\\n');\n        } else\n            return [];\n    },\n    getString: function (id, params) {\n        if (xabber_i18next.exists(id)) {\n            return xabber_i18next.t(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n        } else if (xabber_i18next.default_lang) {\n            return xabber_i18next.default_lang(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n        } else\n            return \"\";\n    },\n\n    getQuantityString: function (id, count, params) {\n        let lang = xabber_i18next.language,\n            plurals = xabber_i18next.services.pluralResolver.getRule(lang);\n        if (!plurals)\n            return this.getString(`${id}_plural_0`, (params || [count]));\n        let _count = parseInt(count, 10);\n        xabber_i18next.services.pluralResolver.options.compatibilityJSON = 'v0';\n        let suffix = xabber_i18next.services.pluralResolver.getSuffix(lang, _count);\n        suffix = suffix.replace(/-/g, \"_\");\n        if (xabber_i18next.language == 'en' || !xabber_i18next.exists(`${id}_plural${suffix}`)) {\n            suffix = xabber_i18next.services.pluralResolver.getSuffix(\"en\", _count);\n            if (!suffix || suffix && !suffix.length)\n                suffix = '_0';\n            else\n                suffix = '_1';\n        }\n        return this.getString(`${id}_plural${suffix}`, (params || [count]));\n    },\n\n    error: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_ERROR) {\n            console.error(msg);\n        }\n    },\n\n    warn: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_WARN) {\n            console.warn(msg);\n        }\n    },\n\n    info: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_INFO) {\n            console.log(msg);\n        }\n    },\n\n    debug: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_DEBUG) {\n            console.log(msg);\n        }\n    },\n\n    pretty_last_seen: function (seconds) {\n        if (seconds >= 0 && seconds <= 120)\n            return this.getString(\"last_seen_now\");\n        if (seconds > 120 && seconds < 3600)\n            return this.getString(\"last_seen_minutes\", [Math.trunc(seconds/60)]);\n        if (seconds >= 3600 && seconds < 7200)\n            return this.getString(\"last_seen_hours\");\n        if (seconds >= 3600*48*2)\n            return this.getString(\"last_seen_date\", [env.moment().subtract(seconds, 'seconds').format('LL')]);\n        else\n            return this.getString(\"last_seen_date\", [env.moment().subtract(seconds, 'seconds').calendar().toLowerCase()]);\n    },\n\n    readActualVersion: function () {\n        if (!constants.CHECK_VERSION)\n            return;\n        // get version.js file from server and parse it\n        let rawFile = new XMLHttpRequest();\n        rawFile.open(\"GET\", \"version.js?\"+uuid(), true);\n        rawFile.onreadystatechange = () => {\n            if (rawFile.readyState === 4 && rawFile.status === 200) {\n                let text, json;\n                rawFile.onreadystatechange = null;\n                try {\n                    text = rawFile.responseText;\n                    json = JSON.parse(text.split('\\n')[1].slice(1, -1));\n                } catch (e) {\n                    return;\n                }\n                this.set({\n                    actual_version_number: json.version_number,\n                    version_description: json.version_description\n                });\n            }\n        };\n        rawFile.send();\n    },\n\n    extendFunction: function () {\n        if (!String.prototype.trimStart) {\n            String.prototype.trimStart = function () {\n                return this.replace(/^\\s+/, '');\n            }\n        }\n        if (!String.prototype.trimEnd) {\n            String.prototype.trimEnd = function () {\n                return Array.from(Array.from(this).reverse().join(\"\").trimStart(/\\s$/, '')).reverse().join(\"\");\n            }\n        }\n    },\n\n    onQuit: function () {\n        if (window.indexedDB.databases) {\n            window.indexedDB.databases().then((a) => {\n                a.forEach((db) => {\n                    window.indexedDB.deleteDatabase(db.name)\n                });\n            });\n        } else {\n            this.accounts.forEach((acc) => {\n                indexedDB.deleteDatabase(acc.cached_roster.database.name);\n                indexedDB.deleteDatabase(acc.cached_sync_conversations.database.name);\n                indexedDB.deleteDatabase(acc.cached_server_features.database.name);\n            });\n        }\n        let full_storage_name = this.getStorageName();\n        for (let key in window.localStorage) {\n            if (key.startsWith(full_storage_name) || key.startsWith(constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION + '-' + this.cache.id)) {\n                window.localStorage.removeItem(key);\n            }\n        }\n    },\n\n    cacheFavicons: async function () {\n        this._cache.save('favicon', URL.createObjectURL(await fetch(constants.FAVICON_DEFAULT).then(r => r.blob())));\n        this._cache.save('favicon_gray', URL.createObjectURL(await fetch(constants.FAVICON_DEFAULT_GREY).then(r => r.blob())));\n        this._cache.save('favicon_message', URL.createObjectURL(await fetch(constants.FAVICON_MESSAGE).then(r => r.blob())));\n    },\n\n    detectMediaDevices: function () {\n        this.getMediaDevices((media_devices) => {\n            this.set(media_devices);\n        });\n    },\n\n    getMediaDevices: function (callback, errback) {\n        if (window.navigator && window.navigator.mediaDevices) {\n            window.navigator.mediaDevices.enumerateDevices()\n                .then((devices) => {\n                    let media_devices = {audio: false, video: false};\n                    (devices.find(device => device.kind === 'audioinput')) && (media_devices.audio = true);\n                    (devices.find(device => device.kind === 'videoinput')) && (media_devices.video = true);\n                    callback && callback(media_devices);\n                })\n                .catch((err) => {\n                    errback && errback(err);\n                });\n        }\n    },\n\n    throwNewVersion: function () {\n        if (!constants.CHECK_VERSION)\n            return;\n        let version_number = this.get('actual_version_number'),\n            version_description = this.get('version_description');\n        utils.dialogs.common(this.getString(\"dialog_version_update__header\", [constants.CLIENT_NAME]), `${this.getString(\"dialog_version_update__confirm_text__new_version\", [version_number])}<div class=\"new-version-description client-text-color-500\">${version_description}</div>${this.getString(\"dialog_version_update__confirm_text__question_reload_page\")}`,\n            {ok_button: {text: this.getString(\"dialog_version_update__button_reload\")}, cancel_button: {text: this.getString(\"dialog_version_update__option_not_now\")}}\n        ).done((result) => {\n            if (result) {\n                window.location.reload(true);\n            }\n        });\n    },\n\n    Settings: Backbone.ModelWithStorage.extend({\n        defaults: {\n            max_connection_retries: -1,\n            idling: true,\n            idling_time: 'default',\n            notifications: true,\n            notifications_private: true,\n            notifications_group: true,\n            jingle_calls: true,\n            notifications_volume_enabled: true,\n            notifications_volume: 0.50,\n            message_preview_private: false,\n            message_preview_group: false,\n            private_sound: true,\n            group_sound: true,\n            background: {type: 'default'},\n            side_panel: {theme: 'dark', blur: false, transparency: 50},\n            appearance: {blur: 0, vignetting: 0, color: '#E0E0E0'},\n            main_color: 'default',\n            sound_on_private_message: 'beep_up',\n            sound_on_group_message: 'beep_up',\n            call_attention: true,\n            load_media: 'default',\n            typing_notifications: 'default',\n            mapping_service: 'default',\n            sound_on_call: 'marching-band-dave-girtsman',\n            sound_on_dialtone: 'marching-band-dave-girtsman',\n            sound_on_connection: '_alien-bomb-timer',\n            sound_on_attention: 'attention',\n            sound_on_auth_request: '_beep_a',\n            sound_on_call_busy: '_phone_busy',\n            hotkeys: 'enter',\n            avatar_shape: 'circle',\n            language: 'default',\n            load_history: true,\n            mam_requests_limit: 200,\n            mam_messages_limit_start: 1,\n            mam_messages_limit: 20,\n        }\n    }),\n\n    start: function () {\n        this.check_config.done((result) => {\n            this.cacheFavicons();\n            this.check_config = undefined;\n            result && this.trigger('start');\n        });\n    },\n\n    configure: function (config) {\n        this.loadTranslations(this.get('default_language')).then((language) => {\n            this.default_translation = language.translation ;\n            return this.loadTranslations();}).then((language) => {\n                this.setLocale(language.lang, language.translation);\n            _.extend(constants, _.pick(config, [\n                'CONNECTION_URL',\n                'PERSONAL_AREA_URL',\n                'LOG_LEVEL',\n                'SYNCHRONIZATION_RSM_MAX',\n                'ASSETS_URL_PREFIX',\n                'CONTAINER_ELEMENT',\n                'XABBER_ACCOUNT_URL',\n                'REGISTER_XMPP_ACCOUNT',\n                'REGISTER_XMPP_ACCOUNT_URL',\n                'REGISTER_XMPP_ACCOUNT_TEXT',\n                'USE_SOCIAL_AUTH',\n                'CONTAINER',\n                'CHECK_VERSION',\n                'DEFAULT_LOGIN_SCREEN',\n                'STORAGE_NAME_ENDING',\n                'CLIENT_NAME',\n                'SHORT_CLIENT_NAME',\n                'CLIENT_LOGO',\n                'TOOLBAR_LOGO',\n                'ENABLE_XABBER_ACCOUNT',\n                'SCREEN_ABOUT',\n                'DISABLE_LOOKUP_WS',\n                'PRIVACY_LOAD_MEDIA',\n                'PRIVACY_TYPING_NOTIFICATIONS',\n                'PRIVACY_MAPPING_SERVICE',\n            ]));\n\n            let log_level = constants['LOG_LEVEL_'+constants.LOG_LEVEL];\n            constants.LOG_LEVEL = log_level || constants.LOG_LEVEL_ERROR;\n            constants.MATERIAL_COLORS.includes(config.MAIN_COLOR) && (constants.MAIN_COLOR = config.MAIN_COLOR);\n            (this._settings.get(\"main_color\") == 'default') && this._settings.set(\"main_color\", constants.MAIN_COLOR);\n            this.trigger(\"update_main_color\");\n            if (this._settings.get(\"load_media\") === 'default' && config.PRIVACY_LOAD_MEDIA != null)\n                this._settings.set(\"load_media\", config.PRIVACY_LOAD_MEDIA);\n            else if (this._settings.get(\"load_media\") === 'default')\n                this._settings.set(\"load_media\", true);\n            if (this._settings.get(\"typing_notifications\") === 'default' && config.PRIVACY_TYPING_NOTIFICATIONS != null)\n                this._settings.set(\"typing_notifications\", config.PRIVACY_TYPING_NOTIFICATIONS);\n            else if (this._settings.get(\"typing_notifications\") === 'default')\n                this._settings.set(\"typing_notifications\", true);\n            if (this._settings.get(\"mapping_service\") === 'default' && config.PRIVACY_MAPPING_SERVICE != null)\n                this._settings.set(\"mapping_service\", config.PRIVACY_MAPPING_SERVICE);\n            else if (this._settings.get(\"mapping_service\") === 'default')\n                this._settings.set(\"mapping_service\", true);\n            if (this._settings.get(\"idling_time\") === 'default' && config.IDLING_DEFAULT_TIMEOUT != null)\n                this._settings.set(\"idling_time\", config.IDLING_DEFAULT_TIMEOUT);\n            else if (this._settings.get(\"idling_time\") === 'default')\n                this._settings.set(\"idling_time\", constants.IDLING_DEFAULT_TIMEOUT);\n\n            window.xabber = this;\n            _.extend(window, env);\n            if (config.SYNCHRONIZATION_RSM_MAX)\n                constants.SYNCHRONIZATION_RSM_MAX = config.SYNCHRONIZATION_RSM_MAX;\n            if (config.ASSETS_URL_PREFIX) {\n                constants.ASSETS_URL_PREFIX = config.ASSETS_URL_PREFIX;\n            }\n            if (config.BACKGROUND_IMAGES_XML_URL)\n                constants.BACKGROUND_IMAGES_XML_URL = config.BACKGROUND_IMAGES_XML_URL;\n            if (config.BACKGROUND_PATTERNS_XML_URL)\n                constants.BACKGROUND_PATTERNS_XML_URL = config.BACKGROUND_PATTERNS_XML_URL;\n            if (config.CONTAINER_ELEMENT)\n                constants.CONTAINER_ELEMENT = config.CONTAINER_ELEMENT;\n            if (config.REGISTRATION_DOMAINS)\n                constants.REGISTRATION_DOMAINS = config.REGISTRATION_DOMAINS;\n            if (config.LOGIN_DOMAINS)\n                constants.LOGIN_DOMAINS = config.LOGIN_DOMAINS;\n            if (config.TRUSTED_DOMAINS)\n                constants.TRUSTED_DOMAINS = config.TRUSTED_DOMAINS;\n            if (config.RECOMMENDED_DOMAIN)\n                constants.RECOMMENDED_DOMAIN = config.RECOMMENDED_DOMAIN;\n            if (config.DOWNTIME_RECONNECTION_TIMEOUT)\n                constants.DOWNTIME_RECONNECTION_TIMEOUT = config.DOWNTIME_RECONNECTION_TIMEOUT;\n            if (config.IDLING_MINIMAL_TIMEOUT)\n                constants.IDLING_MINIMAL_TIMEOUT = config.IDLING_MINIMAL_TIMEOUT;\n            if (config.IDLING_MAXIMUM_TIMEOUT)\n                constants.IDLING_MAXIMUM_TIMEOUT = config.IDLING_MAXIMUM_TIMEOUT;\n            if (config.PING_SENDING_INTERVAL)\n                constants.PING_SENDING_INTERVAL = config.PING_SENDING_INTERVAL;\n            if (config.REGISTRATION_BUTTON != null)\n                constants.REGISTRATION_BUTTON = config.REGISTRATION_BUTTON;\n            if (config.REGISTRATION_CUSTOM_DOMAIN != null)\n                constants.REGISTRATION_CUSTOM_DOMAIN = config.REGISTRATION_CUSTOM_DOMAIN;\n            if (config.LOGIN_CUSTOM_DOMAIN != null)\n                constants.LOGIN_CUSTOM_DOMAIN = config.LOGIN_CUSTOM_DOMAIN;\n            if (config.SHORT_CLIENT_DESCRIPTION)\n                constants.SHORT_CLIENT_DESCRIPTION = config.SHORT_CLIENT_DESCRIPTION;\n\n            if (config.CLIENT_NAME && !config.SHORT_CLIENT_NAME)\n                constants.SHORT_CLIENT_NAME = config.CLIENT_NAME;\n            else if (!config.CLIENT_NAME && config.SHORT_CLIENT_NAME)\n                constants.CLIENT_NAME = config.SHORT_CLIENT_NAME;\n\n            if (config.TURN_SERVERS_LIST) {\n                if (_.isArray(config.TURN_SERVERS_LIST))\n                    _.extend(constants, {TURN_SERVERS_LIST: config.TURN_SERVERS_LIST});\n                else if (_.isObject(config.TURN_SERVERS_LIST) && Object.keys(config.TURN_SERVERS_LIST).length)\n                    _.extend(constants, {TURN_SERVERS_LIST: [config.TURN_SERVERS_LIST]});\n            }\n\n            constants.FAVICON_DEFAULT = constants.ASSETS_URL_PREFIX + constants.FAVICON_DEFAULT;\n            constants.FAVICON_DEFAULT_GREY = constants.ASSETS_URL_PREFIX + constants.FAVICON_DEFAULT_GREY;\n            constants.FAVICON_MESSAGE = constants.ASSETS_URL_PREFIX + constants.FAVICON_MESSAGE;\n            constants.BACKGROUND_IMAGE = constants.ASSETS_URL_PREFIX + constants.BACKGROUND_IMAGE;\n\n\n            constants.CLIENT_LOGO = constants.ASSETS_URL_PREFIX + constants.CLIENT_LOGO;\n            constants.TOOLBAR_LOGO = constants.ASSETS_URL_PREFIX + constants.TOOLBAR_LOGO;\n\n            if (utils.isMobile.any()) {\n                let ios_msg = this.getString(\"warning__client_not_support_ios_browser\", [constants.CLIENT_NAME]),\n                    android_msg = this.getString(\"warning__client_not_support_android_browser\"),\n                    any_mobile_msg = this.getString(\"warning__client_not_support_mobile\", [constants.CLIENT_NAME]),\n                    msg;\n                if (utils.isMobile.iOS()) {\n                    msg = ios_msg;\n                } else if (utils.isMobile.Android()) {\n                    msg = any_mobile_msg + android_msg;\n                } else {\n                    msg = any_mobile_msg;\n                }\n                utils.dialogs.error(msg);\n                this.check_config.resolve(false);\n                return;\n            }\n            if (!constants.CONNECTION_URL) {\n                utils.dialogs.error(this.getString(\"client_error__missing_connection_url\"));\n                this.check_config.resolve(false);\n                return;\n            }\n            if (bc.disabled_client){\n                utils.dialogs.error(this.getString(\"client_error__another_tab_active\"));\n                this.check_config.resolve(false);\n                return;\n            }\n\n            let self = this;\n            if (!Backbone.useLocalStorage && !this.cache.ignore_localstorage_warning) {\n                utils.dialogs.warning(this.getString(\"client_warning__no_local_storage\"),\n                    [{name: this.getString(\"ignore\"), text: this.getString(\"client_error__option_show_msg_again\")}]\n                ).done(function (res) {\n                    res && res.ignore && self._cache.save('ignore_localstorage_warning', true);\n                });\n            }\n\n            this.requestNotifications().done(function (granted) {\n                self._cache.save('notifications', granted);\n                self._cache.save('endpoint_key', undefined);\n                self.check_config.resolve(true);\n            });\n        });\n    },\n\n    fetchURLParams: function () {\n        let splitted_url = window.location.href.split(/[?#]/),\n            splitted_url_anchor = window.location.href.split('#');\n        this.url_params = {};\n        if (splitted_url.length > 1) {\n            let idx, param, params = splitted_url[1].split('&');\n            for (idx = 0; idx < params.length; idx++) {\n                param = params[idx].split('=');\n                if (param.length === 1) {\n                    this.url_params[param[0]] = null;\n                } else {\n                    this.url_params[param[0]] = param[1];\n                }\n            }\n        }\n        if (splitted_url_anchor.length > 1) {\n            this.url_params['anchor'] = splitted_url[1];\n        }\n        window.history.pushState(null, null, window.location.pathname);\n    },\n\n    getStorageName: function () {\n        let name = constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION;\n        if (constants.STORAGE_NAME_ENDING) {\n            name = name + '-' + constants.STORAGE_NAME_ENDING;\n        }\n        return name;\n    },\n\n    cleanUpStorage: function () {\n        let full_storage_name = constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION;\n        for (let key in window.localStorage) {\n            if (key.startsWith('xabber') &&\n                    !key.startsWith(full_storage_name)) {\n                window.localStorage.removeItem(key);\n            }\n        }\n    },\n\n    requestNotifications: function () {\n        let result = new $.Deferred(),\n            self = this;\n        if (!window.Notification) {\n            result.resolve(null);\n        } else if (window.Notification.permission === 'granted') {\n            result.resolve(true);\n        } else {\n            if (!self.cache.ignore_notifications_warning)\n                self.notifications_placeholder = new self.NotificationsPlaceholder();\n            result.resolve(false);\n        }\n        return result.promise();\n    },\n\n    updateFaviconConnected: function () {\n        let is_disconnected = false;\n        this.accounts.each((account) => {\n            if (account.get('enabled') && (!account.isConnected() || (account.session && account.session.get('auth_failed')))){\n                is_disconnected = true;\n                return;\n            }\n        });\n        this.updateAllMessageCounterOnDisconnect(is_disconnected);\n    },\n\n    disconnectWhenConnecting: function (is_fast) {\n        this.accounts.each((account) => {\n            if (account.session && account.connection && account.get('enabled') && !account.session.get('reconnecting') && !account.session.get('connected')){\n                account.activate();\n            }\n        });\n    },\n\n    extendWith: function () {\n        return _.reduce(arguments, function (instance, module) {\n            return instance;\n        }, this);\n    }\n});\n\nexport default new Xabber();\n","import xabber from \"xabber-core\";\nimport { transliterate as query_transliterate } from 'transliteration';\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.base,\n    utils = env.utils,\n    uuid = env.uuid,\n    $ = env.$,\n    _ = env._;\n\nxabber.ViewPath = function (str) {\n    this.path = str.split('.');\n    this.applyTo = function (obj) {\n        let result = obj;\n        for (let idx = 0; idx < this.path.length; idx++) {\n            if (!(result = _.result(result, this.path[idx]))) {\n                return null;\n            }\n        }\n        return result;\n    };\n};\n\nxabber.BasicView = Backbone.View.extend({\n    template: function () {\n        return '';\n    },\n\n    initialize: function (options) {\n        options || (options = {});\n        this.parent = options.parent;\n        this.vname = options.vname;\n        this.children = {};\n        this.$el.addClass(options.classlist);\n        if (!options.el) {\n            this.$el.html(this.template(_.extend({view: this}, constants)));\n        }\n        if (!_.isUndefined(this.ps_selector)) {\n            this.ps_container = this.$(this.ps_selector);\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        this.data = new Backbone.Model({visible: false});\n        this.data.on(\"change:visible\", this.onChangedVisibility, this);\n        xabber.on(\"update_css\", function (options) {\n            this.updateCSS && this.updateCSS();\n            (options && options.size_changed && this.windowResized) && this.windowResized();\n        }, this);\n        this._initialize && this._initialize(options);\n        this.__initialize && this.__initialize(options);\n    },\n\n    isVisible: function () {\n        return this.data.get('visible');\n    },\n\n    onChangedVisibility: function () {},\n\n    show: function () {\n        this.onShow.apply(this, arguments);\n        this.data.set('visible', true);\n        this.trigger('after_show', this);\n        this.updateScrollBar();\n    },\n\n    hide: function () {\n        this.trigger('before_hide', this);\n        this.data.set('visible', false);\n        this.onHide.apply(this, arguments);\n    },\n\n    onShow: function () {\n        this.render.apply(this, arguments);\n        _.each(this.children, function (view) {\n            view.render.apply(view, arguments);\n        });\n    },\n\n    onHide: function () {\n        _.each(this.children, function (view) {\n            view.onHide.apply(view, arguments);\n        });\n    },\n\n    detach: function () {\n        this.$el.detach();\n    },\n\n    child: function (name) {\n        return this.children[name];\n    },\n\n    addChild: function (name, constructor, options) {\n        let view;\n        if (constructor instanceof Backbone.View) {\n            view = constructor;\n            view.parent = this;\n        } else {\n            view = new constructor(_.extend({\n                parent: this,\n                vname: name\n            }, options));\n        }\n        this.children[name] = view;\n        return view;\n    },\n\n    removeChild: function (name, options) {\n        options || (options = {});\n        let view = this.children[name];\n        if (view) {\n            delete this.children[name];\n            options.soft ? view.detach() : (view.trigger(\"remove\") && view.remove());\n        }\n    },\n\n    removeChildren: function () {\n        _.each(_.keys(this.children), (view_id) => {\n            this.removeChild(view_id);\n        });\n    },\n\n    setCustomCss: function (styles) {\n        this.$el.css(styles);\n    },\n\n    removeCustomCss: function () {\n        this.$el.removeAttr('style');\n    },\n\n    saveScrollBarOffset: function () {\n        if (this.ps_container && this.isVisible()) {\n            let scroll_top = this.data.get('scroll_top');\n            if (typeof scroll_top === \"undefined\") {\n                this.data.set('scroll_top', this.getScrollTop());\n            }\n        }\n    },\n\n    updateScrollBar: function () {\n        // let start_scrolled_bottom = this.getScrollBottom();\n        if (this.ps_container && this.isVisible()) {\n            let scroll_top = this.data.get('scroll_top');\n            if (typeof scroll_top === \"undefined\") {\n                this.ps_container.perfectScrollbar('update');\n            } else {\n                this.data.set('scroll_top', undefined);\n                this.scrollTo(scroll_top);\n            }\n        }\n        // this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - start_scrolled_bottom);\n        return this;\n    },\n\n    scrollTo: function (offset) {\n        this.ps_container[0].scrollTop = offset;\n        this.ps_container.perfectScrollbar('update');\n    },\n\n    scrollToTop: function () {\n        this.scrollTo(0);\n    },\n\n    scrollToBottom: function () {\n        let scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        this.scrollTo(scrollHeight - offsetHeight);\n    },\n\n    scrollToChild: function ($child) {\n        let scrollTop = _.reduce($child.prevAll(), function (sum, el) {\n            return sum + el.offsetHeight + 2;\n        }, 0);\n        this.scrollTo(scrollTop);\n    },\n\n    getScrollTop: function () {\n        return this.ps_container[0].scrollTop;\n    },\n\n    getScrollBottom: function () {\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollHeight - (scrollTop + offsetHeight);\n    },\n\n    getPercentScrolled: function () {\n        if (this.isScrolledToTop()) {\n            return 0;\n        }\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollTop / (scrollHeight - offsetHeight);\n    },\n\n    isScrolledToTop: function () {\n        return this.getScrollTop() === 0;\n    },\n\n    isScrolledToBottom: function () {\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollHeight === scrollTop + offsetHeight;\n    }\n});\n\nxabber.NodeView = xabber.BasicView.extend({\n    onShow: function (options, tree) {\n        if ((xabber.body.data.get('contact_details_view') && (this.vname === 'right_contact'))){\n            xabber.body.data.get('contact_details_view').scrollTo(xabber.body.data.get('contact_details_view').data.get('scroll_top'));\n            xabber.body.data.set('contact_details_view', null)\n            return;\n        }\n        if (options.close_settings && this.children.main_overlay){\n            this.children.main_overlay.hide();\n            this.children.main_overlay.$el.detach();\n            return;\n        }\n        if (!(tree && tree.main_overlay)){\n            _.each(this.children, function (view) {\n                view.hide();\n            });\n        }\n        if (!(tree && tree.main_overlay))\n            this.$el.children().detach();\n        tree = this.patchTree(tree, options) || tree;\n        _.each(this.children, (view, name) => {\n            if (tree.main_overlay && (name != 'main_overlay'))\n                return;\n            if (_.has(tree, name)) {\n                if (name !== 'login')\n                    this.$el.append(view.$el);\n                this.$el.switchClass('hidden', name === 'login');\n                view.show(options, tree[name]);\n            }\n        });\n        return this.render(options);\n    },\n\n    onHide: function (options) {\n        _.each(this.children, function (view) {\n            view.hide(options);\n        });\n    },\n\n    patchTree: function () {}\n});\n\nxabber.Container = xabber.BasicView.extend({\n    className: 'container',\n\n    render: function (options, path) {\n        if (_.isNull(path)){\n            this.$el.addClass('hidden');\n            return;\n        } else {\n            this.$el.removeClass('hidden');\n        }\n        let new_view = path.applyTo(options);\n        this.$el.children().detach();\n        if (this.view !== new_view) {\n            this.onHide(options);\n        }\n        this.view = new_view;\n        if (this.view) {\n            this.$el.append(this.view.$el);\n            this.view.show(options);\n        }\n        return this;\n    },\n\n    onHide: function (options) {\n        if (this.view) {\n            this.view.hide(options);\n        }\n        this.view = null;\n    }\n});\n\nxabber.SearchView = xabber.BasicView.extend({\n    events: {\n        \"keydown .search-input\": \"keyUpOnSearch\",\n        \"focusout .search-input\": \"clearSearchSelection\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .list-item\": \"onClickItem\"\n    },\n\n    keyUpOnSearch: function (ev) {\n        ev.stopPropagation();\n        this.ids = this.$('.list-item:not(.hidden)').map(function () {\n            return $(this).data('id');\n        }).toArray();\n        let $selection = this.getSelectedItem();\n        if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n            return this.selectNextItem();\n        }\n        if (ev.keyCode === constants.KEY_ARROW_UP) {\n            return this.selectPreviousItem();\n        }\n        if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n            ev.preventDefault();\n            return this.onEnterPressed($selection);\n        }\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            ev.preventDefault();\n            if ($(ev.target).val())\n                return this.clearSearch();\n            else\n                this.close();\n        }\n        this.updateSearch();\n    },\n\n    getSelectedItem: function () {\n        return this.$('.list-item[data-id=\"'+this.selection_id+'\"]');\n    },\n\n    selectItem: function (id, arrow) {\n        if (!id)\n            return;\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            this.ps_container[0].scrollTop = 0;\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        if (arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop || $selection[0].clientHeight + $selection[0].offsetTop < this.ps_container[0].scrollTop))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop;\n        if (arrow === 'up' && ($selection[0].offsetTop <= this.ps_container[0].scrollTop || $selection[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop;\n        $selection.addClass('selected');\n    },\n\n    selectNextItem: function () {\n        this.selectItem(this.ids[this.ids.indexOf(this.selection_id)+1], 'down');\n    },\n\n    selectPreviousItem: function () {\n        this.selectItem(this.ids[this.ids.indexOf(this.selection_id)-1], 'up');\n    },\n\n    updateSearch: function () {\n        if (!this._update_search_timeout) {\n            let query = this.$('.search-input').val();\n            this.$('.search-form').switchClass('active', query);\n            this.clearSearchSelection();\n            if (query)\n                this.search(query.toLowerCase());\n            else {\n                this.$('.list-item').removeClass('hidden');\n                this.onEmptyQuery();\n            }\n            this.updateScrollBar();\n            this.query = false;\n            this._update_search_timeout = setTimeout(() => {\n                this._update_search_timeout = null;\n                this.query && this.updateSearch();\n            }, 150);\n        } else {\n            this.query = true;\n        }\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.updateSearch();\n    },\n\n    clearSearchSelection: function (ev) {\n        this.selection_id = null;\n        this.$('.list-item.selected').removeClass('selected');\n    },\n\n    searchAll: function () {\n        this.$('.list-item').removeClass('hidden');\n    },\n\n    keyUpOnSearchWithQuery: function () {},\n\n    close: function () {},\n\n    search: function () {},\n\n    onEnterPressed: function () {},\n\n    onEmptyQuery: function () {},\n\n    onClickItem: function () {}\n});\n\n  xabber.SearchPanelView = xabber.SearchView.extend({\n      events: {\n          \"keydown .search-input\": \"keyUpOnSearch\",\n          \"focusout .search-input\": \"clearSearchSelection\",\n          \"click .close-search-icon\": \"clearSearch\",\n          \"click .list-item\": \"onClickItem\",\n          \"click .btn-search-messages\": \"updateSearchWithMessages\"\n      },\n\n      updateSearchWithMessages: function (ev) {\n          this.search_messages = true;\n          this.updateSearch();\n      },\n\n      keyUpOnSearch: function (ev) {\n          ev.stopPropagation();\n          if ($(ev.target).val()) {\n              this.keyUpOnSearchWithQuery(ev);\n              return;\n          }\n          this.ids = this.$('.list-item:not(.hidden)').map(function () {\n              return $(this).data('id');\n          }).toArray();\n          let $selection = this.getSelectedItem();\n          if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n              return this.selectNextItem();\n          }\n          if (ev.keyCode === constants.KEY_ARROW_UP) {\n              return this.selectPreviousItem();\n          }\n          if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n              ev.preventDefault();\n              return this.onEnterPressed($selection);\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              ev.preventDefault();\n              if ($(ev.target).val())\n                  return this.clearSearch();\n              else\n                  this.close();\n          }\n          this.updateSearch();\n      },\n\n      onScrollY: function (options) {\n          if (xabber.all_searched_messages && xabber.all_searched_messages.length && this.queryid && !this._loading_messages && !this._messages_loaded && this.isScrolledToBottom()) {\n              this._loading_messages = true;\n              options = options || {};\n              this.queryid = uuid();\n              options.query_id = this.queryid;\n              let accounts = xabber.accounts.connected;\n              accounts.forEach((account) => {\n                  let first_message = xabber.all_searched_messages.find(message => (message.account.get('jid') === account.get('jid')));\n                  if (!first_message || account.searched_msgs_loaded) {\n                      // this._loading_messages = false;\n                      return;\n                  }\n                  options.account = account;\n                  options.before = first_message.get('archive_id');\n                  this.MAMRequest(this.query_text, options, (messages) => {\n                      _.each(messages, (message) => {\n                          let message_from_stanza = account.chats.receiveChatMessage(message,\n                              _.extend({is_searched: true}, options)\n                              ),\n                              msg_idx = xabber.all_searched_messages.indexOf(message_from_stanza),\n                              $message_item_view;\n                          if (!message_from_stanza)\n                              return;\n                          else\n                              $message_item_view = new xabber.MessageItemView({model: message_from_stanza});\n                          if (msg_idx === 0) {\n                              $message_item_view.$el.appendTo(this.$('.messages-list-wrap .messages-list'));\n                          } else {\n                              $message_item_view.$el.insertBefore(this.$('.messages-list-wrap .message-item').eq(-msg_idx));\n                          }\n                      });\n                      this.$('.messages-list-wrap').switchClass('hidden', !this.$('.messages-list').children().length);\n                      this.updateScrollBar();\n                      this._loading_messages = false;\n                  });\n              });\n              (accounts.filter(account => account.searched_msgs_loaded).length === accounts.length) && (this._messages_loaded = true);\n          }\n      },\n\n      onScroll: function () {},\n\n      keyUpOnSearchWithQuery: function (ev) {\n          ev.stopPropagation();\n          this.ids = this.$('.searched-lists-wrap .list-item:not(.hidden)').map(function () {\n              return $(this).data('id');\n          }).toArray();\n          let $selection = this.getSelectedItemWithQuery();\n          if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n              return this.selectNextItemWithQuery();\n          }\n          if (ev.keyCode === constants.KEY_ARROW_UP) {\n              return this.selectPreviousItemWithQuery();\n          }\n          if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n              ev.preventDefault();\n              return this.onEnterPressed($selection);\n          }\n          else if (ev.keyCode === constants.KEY_ENTER){\n              this.search_messages = true;\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              ev.preventDefault();\n              if ($(ev.target).val())\n                  return this.clearSearch();\n              else\n                  this.close();\n          }\n          this.updateSearch();\n      },\n\n      getSelectedItemWithQuery: function () {\n          return this.$('.searched-lists-wrap .list-item[data-id=\"'+this.selection_id+'\"]');\n      },\n\n      selectItemWithQuery: function (id, arrow) {\n          if (!id) {\n              if (this.isScrolledToBottom())\n                  this.onScrollY();\n              return;\n          }\n          this.clearSearchSelection();\n          let $selection = this.$('.searched-lists-wrap .list-item[data-id=\"'+id+'\"]');\n          if ($selection.length) {\n              this.selection_id = id;\n          } else {\n              this.ps_container[0].scrollTop = 0;\n              $selection = this.$('.searched-lists-wrap .list-item:visible').first();\n              this.selection_id = $selection.data('id');\n          }\n          if (arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop\n          || $selection[0].clientHeight + $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop < this.ps_container[0].scrollTop))\n              this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop;\n          if (arrow === 'up' && ($selection[0].offsetTop + $selection.parent().parent()[0].offsetTop <= this.ps_container[0].scrollTop\n          || $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n              this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop;\n          $selection.addClass('selected');\n      },\n\n      selectNextItemWithQuery: function () {\n          this.selectItemWithQuery(this.ids[this.ids.indexOf(this.selection_id)+1], 'down');\n      },\n\n      selectPreviousItemWithQuery: function () {\n          this.selectItemWithQuery(this.ids[this.ids.indexOf(this.selection_id)-1], 'up');\n      },\n\n      search: function (query) {\n          this.$(this.main_container).addClass('hidden');\n          clearTimeout(this.keyup_timeout);\n          this.keyup_timeout = null;\n          this.query_text = query;\n          let query_transliterated = query_transliterate(query);\n          this.$('.contacts-list').html(\"\");\n          this.$('.chats-list').html(\"\");\n          xabber.accounts.connected.forEach((acc) => {\n              let saved_chat = acc.chats.getSavedChat();\n              saved_chat.set('opened', true);\n              saved_chat.item_view.updateLastMessage();\n          });\n          let query_chats = _.clone(xabber.chats);\n          query_chats.comparator = 'timestamp';\n          query_chats.sort('timestamp').forEach((chat) => {\n              let jid = chat.get('jid').toLowerCase(),\n                  name = chat.contact ? (chat.contact.get('roster_name') || chat.contact.get('name')) : chat.get('name');\n              name && (name = name.toLowerCase());\n              if (chat.get('timestamp') || chat.get('saved')) {\n                  if (name.indexOf(query) > -1 || jid.indexOf(query) > -1\n                      || name.indexOf(query_transliterated) > -1 || jid.indexOf(query_transliterated) > -1\n                      || (chat.get('saved') && query.includes('saved'))) {\n                      let searched_by = name.indexOf(query) > -1 || name.indexOf(query_transliterated) > -1 ? 'by-name' : 'by-jid',\n                          chat_item = xabber.chats_view.child(chat.get('id'));\n                      chat_item && (chat_item = chat_item.$el.clone().addClass(searched_by));\n                      if (chat_item) {\n                          this.$('.chats-list-wrap').removeClass('hidden');\n                          if (searched_by === 'by-name')\n                              this.$('.chats-list').prepend(chat_item);\n                          else if (this.$('.chats-list .by-jid').length)\n                              chat_item.insertBefore(this.$('.chats-list .by-jid').first());\n                          else\n                              this.$('.chats-list').append(chat_item);\n                          chat_item.click(() => {\n                              this.$('.list-item.active').removeClass('active');\n                              xabber.chats_view.openChat(chat.item_view, {screen: xabber.body.screen.get('name')});\n                              chat_item.addClass('active');\n                          });\n                      }\n                  }\n              }\n          });\n          xabber.accounts.each((account) => {\n              account.contacts.each((contact) => {\n                  let jid = contact.get('jid').toLowerCase(),\n                      name = contact.get('roster_name') || contact.get('name'),\n                      chat = account.chats.get(contact.hash_id),\n                      chat_id = chat && chat.id;\n                  name && (name = name.toLowerCase());\n                  if (!chat_id || chat_id && !this.$('.chat-item[data-id=\"' + chat_id + '\"]').length)\n                      if (name.indexOf(query) > -1 || jid.indexOf(query) > -1\n                          || name.indexOf(query_transliterated) > -1 || jid.indexOf(query_transliterated) > -1) {\n                          let searched_by = name.indexOf(query) > -1 || name.indexOf(query_transliterated) > -1 ? 'by-name' : 'by-jid',\n                              item_list = xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${account.get('jid')}\"] .list-item[data-jid=\"${jid}\"]`).first().clone().data('account-jid', account.get('jid'));\n                          item_list.attr({'data-color': account.settings.get('color'), 'data-account': account.get('jid')}).addClass(searched_by).prepend($('<div class=\"account-indicator ground-color-700\"/>'));\n                          if (searched_by === 'by-name')\n                              this.$('.contacts-list').prepend(item_list);\n                          else if (this.$('.contacts-list .by-jid').length)\n                              item_list.insertBefore(this.$('.contacts-list .by-jid').first());\n                          else\n                              this.$('.contacts-list').append(item_list);\n                          item_list.click(() => {\n                              this.$('.list-item.active').removeClass('active');\n                              let chat = account.chats.getChat(contact);\n                              chat && xabber.chats_view.openChat(chat.item_view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                              item_list.addClass('active');\n                          });\n                      }\n              });\n          });\n          this.$('.chats-list-wrap').switchClass('hidden', !this.$('.chats-list').children().length);\n          this.$('.pinned-chat-list').switchClass('hidden', query);\n          this.$('.contacts-list-wrap').switchClass('hidden', !this.$('.contacts-list').children().length);\n          this.$('.messages-list-wrap').addClass('hidden').find('.messages-list').html(\"\");\n          if (query.length >= 2 && this.search_messages) {\n              this.search_messages = false;\n              this.queryid = uuid();\n              this.searchMessages(query, {query_id: this.queryid});\n          }\n          else if (query.length >= 2 && !this.search_messages){\n              this.$('.btn-search-messages').showIf(query);\n          }\n      },\n\n      searchMessages: function (query, options) {\n          this._loading_messages = true;\n          this._messages_loaded = false;\n          this.$('.messages-list-wrap').showIf(query);\n          this.$('.btn-search-messages').hideIf(query);\n          this.$('.messages-list-wrap .messages-list').html(env.templates.contacts.preloader());\n          options = options || {};\n          !options.max && (options.max = xabber.settings.mam_messages_limit);\n          !options.before && (options.before = \"\");\n          xabber.all_searched_messages = new xabber.SearchedMessages();\n          let accounts = xabber.accounts.connected;\n          accounts.forEach((account) => {\n              account.searched_msgs_loaded = false;\n              options.account = account;\n              this.MAMRequest(query, options, (messages) => {\n                  this.$('.messages-list-wrap .messages-list').html('');\n                  if (!this.query_text)\n                      return;\n                  _.each(messages, (message) => {\n                      if (!this.query_text)\n                          return;\n                      let message_from_stanza = account.chats.receiveChatMessage(message,\n                          _.extend({is_searched: true}, options)\n                          ),\n                          msg_idx = xabber.all_searched_messages.indexOf(message_from_stanza), $message_item_view;\n                          if (!message_from_stanza)\n                              return;\n                          else\n                              $message_item_view = new xabber.MessageItemView({model: message_from_stanza});\n                      if (msg_idx === 0) {\n                          $message_item_view.$el.appendTo(this.$('.messages-list-wrap .messages-list'));\n                      } else {\n                          $message_item_view.$el.insertBefore(this.$('.messages-list-wrap .message-item').eq(-msg_idx));\n                      }\n                  });\n                  this.$('.messages-list-wrap').switchClass('hidden', !this.$('.messages-list').children().length);\n                  this.updateScrollBar();\n                  this._loading_messages = false;\n              });\n          });\n          (accounts.filter(account => account.searched_msgs_loaded).length === accounts.length) && (this._messages_loaded = true);\n      },\n\n      MAMRequest: function (query, options, callback, errback) {\n          let messages = [],\n              account = options.account,\n              queryid = uuid(),\n              iq = $iq({type: 'set'})\n                  .c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                  .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                  .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                  .c('value').t(Strophe.NS.MAM).up().up()\n                  .c('field', {'var': 'withtext'})\n                  .c('value').t(query).up().up().up().cnode(new Strophe.RSM(options).toXML()),\n              handler = account.connection.addHandler((message) => {\n                  let $msg = $(message);\n                  if ($msg.find('result').attr('queryid') === queryid && options.query_id === this.queryid) {\n                      messages.push(message);\n                  }\n                  return true;\n              }, env.Strophe.NS.MAM);\n          account.sendIQFast(iq,\n              function (res) {\n                  account.connection.deleteHandler(handler);\n                  let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                  if ($fin.length && $fin.attr('queryid') === queryid) {\n                      let rsm_complete = ($fin.attr('complete') === 'true') ? true : false;\n                      rsm_complete && (account.searched_msgs_loaded = true);\n                  }\n                  callback && callback(messages);\n              },\n              function () {\n                  account.connection.deleteHandler(handler);\n                  errback && errback();\n              }\n          );\n      },\n\n      clearSearch: function (ev) {\n          ev && ev.preventDefault();\n          this.$('.search-input').val('');\n          this.updateSearch();\n          this.onEmptyQuery();\n      },\n\n      onEmptyQuery: function () {\n          xabber.accounts.forEach(function (account) {\n              account.searched_msgs_loaded = false;\n          });\n          this.query_text = null;\n          this.queryid = null;\n          this._messages_loaded = false;\n          this._loading_messages = false;\n          this.$(this.main_container).removeClass('hidden');\n          this.$('.chats-list-wrap').addClass('hidden');\n          this.$('.pinned-chat-list').removeClass('hidden');\n          this.$('.contacts-list-wrap').addClass('hidden');\n          this.$('.messages-list-wrap').addClass('hidden');\n      }\n  });\n\n  xabber.InputWidget = Backbone.View.extend({\n    field_type: 'text',\n    template: templates.input_widget,\n\n    events: {\n        \"click .field-text\": \"showInput\",\n        \"click .btn-rename\": \"showInput\",\n        \"keydown .field-input\": \"keyDown\",\n        \"keyup .field-input\": \"keyUp\",\n        \"focusout .field-input\": \"changeValue\"\n    },\n\n    initialize: function () {\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n        this.data.on(\"change:input_mode\", this.onChangedInputMode, this);\n        this.bindModelEvents();\n    },\n\n    bindModelEvents: function () {\n        this.model.on(\"change:\"+this.model_field, this.updateValue, this);\n    },\n\n    showInput: function () {\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    onChangedInputMode: function () {\n        let input_mode = this.data.get('input_mode');\n        this.$value.hideIf(input_mode);\n        this.$btn.hideIf(input_mode);\n        this.$input.showIf(input_mode).focus();\n    },\n\n    keyDown: function (ev) {\n        ev.stopPropagation();\n        let value = this.getValue();\n        if (ev.keyCode === constants.KEY_ENTER) {\n            this.changeValue();\n        } else if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.$input.removeClass('changed').val(value);\n            this.data.set('input_mode', false);\n        }\n    },\n\n    keyUp: function (ev) {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        return this.model.get(this.model_field);\n    },\n\n    setValue: function (value) {\n        this.model.save(this.model_field, value);\n    },\n\n    changeValue: function () {\n        let value = this.getValue(),\n            new_value = this.$input.removeClass('changed').val();\n        new_value !== value && this.setValue(new_value);\n        this.data.set('input_mode', false);\n    },\n\n    updateValue: function () {\n        let value = this.getValue();\n        this.$value.text(value);\n        this.$input.val(value);\n    }\n});\n\nxabber.Body = xabber.NodeView.extend({\n    className: 'client-body-wrap',\n\n    _initialize: function () {\n        this.vname = 'body';\n        this.data.set('visible', true);\n        this.screen = new Backbone.Model();\n        this.screen_map = new Backbone.Model();\n        this.screen.on(\"change\", this.update, this);\n        this.screen_map.on(\"change\", this.onScreenMapChanged, this);\n        $(constants.CONTAINER_ELEMENT).append(this.$el);\n        this.updateBackground();\n        this.updateMainColor();\n        this.updateAvatarShape();\n        $('#modals').insertAfter(this.$el);\n        xabber.on('update_main_color', this.updateMainColor, this);\n        xabber.on('update_avatar_shape', this.updateAvatarShape, this);\n    },\n\n    addScreen: function (name, attrs) {\n        this.screen_map.set(name, attrs);\n    },\n\n    updateMainColor: function () {\n        this.$el.attr('data-main-color', xabber.settings.main_color);\n        this.$el.siblings('#modals').attr('data-main-color', xabber.settings.main_color);\n        $(window.document).find('.login-container').attr('data-main-color', xabber.settings.main_color);\n    },\n\n    updateAvatarShape: function () {\n        let shape = xabber.settings.avatar_shape;\n        $(constants.CONTAINER_ELEMENT).switchClass('non-circle-avatars', shape != 'circle');\n        $(constants.CONTAINER_ELEMENT).switchClass('octagon-avatars', shape === 'octagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('hexagon-avatars', shape === 'hexagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('pentagon-avatars', shape === 'pentagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('rounded-avatars', shape === 'rounded');\n        $(constants.CONTAINER_ELEMENT).switchClass('star-avatars', shape === 'star');\n        $(constants.CONTAINER_ELEMENT).switchClass('squircle-avatars', shape === 'squircle');\n    },\n\n    updateBackground: function () {\n        let background_settings = xabber.settings.background || {};\n        if (background_settings.image) {\n            if (background_settings.type === 'repeating-pattern') {\n                this.$el.css({\n                    'background-repeat': 'repeat',\n                    'background-size': 'unset',\n                    'background-image': `url(\"${utils.images.getCachedBackground(background_settings.image)}\")`\n                });\n            } else if (background_settings.type === 'image') {\n                this.$el.css({\n                    'background-repeat': 'no-repeat',\n                    'background-size': 'cover',\n                    'background-image': `url(\"${utils.images.getCachedBackground(background_settings.image)}\")`\n                });\n            }\n        } else {\n            this.$el.css({\n                'background-repeat': 'repeat',\n                'background-size': 'unset',\n                'background-image': `url(\"${constants.BACKGROUND_IMAGE}\")`,\n                'box-shadow': 'none'\n            });\n        }\n        this.updateBoxShadow(xabber.settings.appearance.vignetting);\n    },\n\n    updateBoxShadow: function (value) {\n        value = Number(value);\n        if (!value)\n            this.$el.css({\n                'box-shadow': `unset`\n            });\n        else\n            this.$el.css({\n            'box-shadow': `${value}px 0 100px 1px rgba(0, 0, 0, 0.7) inset, -${value}px 0 100px -1px rgba(0, 0, 0, 0.7) inset`\n        });\n    },\n\n    updateBlur: function (value) {\n        value = Number(value);\n        xabber.blur_overlay.$el.css({\n            \"backdrop-filter\": `blur(${value}px)`,\n            \"-webkit-backdrop-filter\": `blur(${value}px)`\n        });\n    },\n\n    setScreen: function (name, attrs, options) {\n        xabber.error(name);\n        options = options || {};\n        $(window).unbind(\"keydown.contact_panel\");\n        xabber.notifications_placeholder && xabber.main_panel.$el.addClass('notifications-request');\n        $(constants.CONTAINER_ELEMENT).switchClass('xabber-login', name === 'login');\n        $(constants.CONTAINER_ELEMENT).switchClass('on-xabber-login', name !== 'login');\n        let new_attrs = {stamp: _.uniqueId()};\n        if (name && !this.isScreen(name)) {\n            new_attrs.name = name;\n        }\n        if (!attrs || !attrs.show_placeholder) {\n            new_attrs.show_placeholder = null;\n        }\n        if ((attrs && attrs.right && attrs.right === 'group_invitation') || options.right_force_close)\n            new_attrs.right_contact = null;\n        else {\n            new_attrs.right_contact = xabber.body.screen.get('right_contact');\n        }\n        if ((!attrs && xabber.body.screen.get('right'))\n            || (attrs && !attrs.right && attrs.right !== null && xabber.body.screen.get('right')))\n            new_attrs.right = xabber.body.screen.get('right');\n        new_attrs = _.extend(new_attrs, attrs);\n        let chat_item_view;\n        if (_.isUndefined(new_attrs.chat_item)){\n            chat_item_view = this.screen.get('chat_item');\n            if (chat_item_view && chat_item_view.content)\n                chat_item_view.content._prev_scrolltop = chat_item_view.content.getScrollTop() || chat_item_view.content._scrolltop;\n        }\n        if (name){\n            let tree = this.screen_map.get(name);\n            if (tree && tree.main_overlay){\n                if (!this.screen.get('previous_screen'))\n                    new_attrs.previous_screen = {...this.screen.attributes};\n            } else {\n                new_attrs.previous_screen = undefined;\n            }\n        }\n        this.screen.set(_.extend(new_attrs, attrs), options);\n    },\n\n    isScreen: function (name) {\n        return this.screen.get('name') === name;\n    },\n\n    onScreenMapChanged: function () {\n        let name = this.screen.get('name');\n        if (_.has(this.screen_map.changed, name)) {\n            this.update();\n        }\n    },\n\n    showChatPlaceholder: function () {\n        try {\n            xabber.right_panel.$el.children().detach();\n            xabber.right_panel.$el.append(xabber.chat_placeholder.$el);\n        } catch (e) {\n            console.log(e)\n        }\n    },\n\n    update: function () {\n        let options = this.screen.attributes,\n            tree = this.screen_map.get(options.name);\n        if (typeof tree !== \"undefined\") {\n            this.onShow(options, tree);\n            this.model.trigger('update_screen', this.screen.get('name'));\n            this.model.trigger('update_layout', {screen_changed: options.name});\n        }\n    }\n});\n\nxabber.ToolbarView = xabber.BasicView.extend({\n    className: \"toolbar noselect\",\n    ps_selector: '.accounts',\n    template: templates.toolbar,\n\n    events: {\n        \"click .toolbar-logo\":             \"clickAllChats\",\n        \"click .all-chats\":             \"showAllChats\",\n        \"click .contacts\":              \"showContacts\",\n        \"click .archive-chats\":         \"showArchive\",\n        \"click .saved-chats\":           \"showSavedChats\",\n        \"click .mentions\":              \"showNotifications\",\n        \"click .settings\":              \"showSettings\",\n        \"click .settings-modal\":              \"showSettingsModal\",\n        \"click .jingle-calls\":              \"showPlaceholder\",\n        \"click .geolocation-chats\":              \"showPlaceholder\",\n        \"click .add-variant.contact\":   \"showAddContactView\",\n        \"click .add-variant.account\":   \"showAddAccountView\",\n        \"click .add-variant.public-groupchat\": \"showAddPublicGroupChatView\",\n        \"click .add-variant.incognito-groupchat\": \"showAddIncognitoGroupChatView\",\n    },\n\n    _initialize: function () {\n        this.$('.add-something').on(\"change_state\", function (ev, state) {\n            $(this).switchClass('active', state).find('.mdi')\n                    .switchClass('mdi-close', state)\n                    .switchClass('mdi-plus', !state);\n            if (state) {\n                this.setAttribute('data-title',  this.getAttribute('title'));\n                this.setAttribute('title', \"\");\n            } else {\n                this.setAttribute('title', this.getAttribute('data-title'));\n                this.removeAttribute('data-title');\n            }\n        });\n\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        this.data.on(\"change:all_msg_counter\", this.onChangedAllMessageCounter, this);\n        this.data.on(\"change:group_msg_counter\", this.onChangedGroupMessageCounter, this);\n        this.data.on(\"change:mentions_counter\", this.onChangedMentionsCounter, this);\n        this.data.on(\"change:msg_counter\", this.onChangedMessageCounter, this);\n        this.data.set({msg_counter: 0});\n        this.data.set({group_msg_counter: 0});\n        this.data.set({all_msg_counter: 0});\n        this.data.set({mentions_counter: 0});\n    },\n\n    render: function () {\n        this.$('.add-something').dropdown({\n            inDuration: 50,\n            outDuration: 50,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        this.$('.add-variant.account').hideIf(!constants.LOGIN_CUSTOM_DOMAIN && !constants.LOGIN_DOMAINS.length);\n    },\n\n    updateColor: function (color) {\n    },\n\n    onUpdatedScreen: function (name) {\n        if (name === 'account_settings_modal' || name === 'settings-modal'){\n            return;\n        }\n        if ((name === 'all-chats') &&\n            (this.$('.toolbar-item:not(.toolbar-logo).all-chats').hasClass('active') ||\n                this.$('.toolbar-item:not(.toolbar-logo).chats').hasClass('active')||\n                this.$('.toolbar-item:not(.toolbar-logo).saved-chats').hasClass('active')||\n                this.$('.toolbar-item:not(.toolbar-logo).mentions').hasClass('active')||\n                this.$('.toolbar-item:not(.toolbar-logo).archive-chats').hasClass('active'))) {\n            return;\n        }\n        this.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n        if (_.contains(['all-chats', 'contacts', 'mentions',\n                        'settings', 'settings-modal', 'search', 'jingle-calls', 'geolocation-chats', 'about'], name)) {\n            this.$('.toolbar-item:not(.toolbar-logo).'+name).addClass('active');\n        }\n    },\n\n    clickAllChats: function (ev) {\n        this.$('.all-chats').click();\n    },\n\n    showAllChats: function (ev, no_unread) {\n        let $el;\n        if (ev && ev.target)\n            $el = $(ev.target).closest('.toolbar-item:not(.toolbar-logo)');\n        else\n            $el = this.$('.all-chats');\n        let is_active = $el.hasClass('active') && !$el.hasClass('unread');\n        this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n            .filter('.all-chats').addClass('active').switchClass('unread', is_active);\n        let options = {}\n        no_unread && (options.no_unread = no_unread);\n        xabber.body.setScreen('all-chats', options);\n        xabber.trigger('show_all_chats', no_unread);\n        xabber.trigger('update_placeholder');\n    },\n\n    showArchive: function (ev, no_unread) {\n        this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n            .filter('.archive-chats').addClass('active');\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_archive_chats', no_unread);\n        xabber.trigger('update_placeholder');\n    },\n\n    showSavedChats: function (ev, no_unread) {\n        if (xabber.accounts.enabled.length === 1){\n            let saved_chat = xabber.accounts.enabled[0].chats.getSavedChat();\n            saved_chat.item_view && saved_chat.item_view.open({right_contact_save: true, clear_search: false, scroll_to_chat: true});\n            this.$('.active').removeClass('active');\n            this.$('.saved-chats').addClass('active');\n            saved_chat.once(\"change:active\", () => {\n                xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n                xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).'+xabber.body.screen.get('name')).addClass('active');\n            });\n        } else {\n            this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n                .filter('.saved-chats').addClass('active');\n            xabber.body.setScreen('all-chats',);\n            xabber.trigger('show_saved_chats', no_unread);\n            xabber.trigger('update_placeholder');\n        }\n    },\n\n    showNotifications: function (ev, no_unread) {\n        this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n            .filter('.mentions').addClass('active');\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_notification_chats', no_unread);\n        xabber.trigger('update_placeholder');\n    },\n\n    showChatsByAccount: function (account) {\n        if (this.data.get('account_filtering') === account.get('jid'))\n            this.data.set('account_filtering', null);\n        else\n            this.data.set('account_filtering', account.get('jid'));\n        if (this.$('.toolbar-item:not(.toolbar-logo).all-chats').hasClass('active')) {\n            this.showAllChats(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).archive-chats').hasClass('active')) {\n            this.showArchive(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).saved-chats').hasClass('active')) {\n            this.showSavedChats(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).mentions').hasClass('active')) {\n            this.showNotifications(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).jingle-calls').hasClass('active') ||\n            this.$('.toolbar-item:not(.toolbar-logo).geolocation-chats').hasClass('active')){\n            this.showAllChats(null, true);\n            return;\n        }\n    },\n\n    showContacts: function () {\n        xabber.body.setScreen('contacts', {right_contact: null});\n        xabber.trigger('update_placeholder');\n    },\n\n    showMentions: function () {\n        xabber.body.setScreen('mentions');\n        xabber.trigger('update_placeholder');\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    },\n\n    showSettingsModal: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    },\n\n    showPlaceholder: function (ev) {\n        if (xabber.chats_view && xabber.chats_view.active_chat){\n            xabber.chats_view.active_chat.model.trigger('hide_chat');\n            xabber.chats_view.active_chat = null;\n        }\n        let screen_name = this.$('.toolbar-item:not(.toolbar-logo).settings').hasClass('active') ? 'all-chats' : xabber.body.screen.get('name');\n        xabber.body.setScreen(screen_name, {chat_item: null});\n        let $el = $(ev.target).closest('.toolbar-item:not(.toolbar-logo)');\n        this.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n        $el.addClass('active');\n        xabber.trigger('update_placeholder');\n    },\n\n    showAddContactView: function () {\n        xabber.trigger('add_contact', {right: null});\n    },\n\n    showAddAccountView: function () {\n        xabber.trigger('add_account', {right: null});\n    },\n\n    showAddIncognitoGroupChatView: function () {\n        xabber.trigger('add_group_chat', {incognito: true, right: null});\n    },\n\n    showAddPublicGroupChatView: function () {\n        xabber.trigger('add_group_chat', {public: true, right: null});\n    },\n\n    setAllMessageCounter: function () {\n        let count_msg = 0, count_all_msg = 0, count_group_msg = 0, mentions = 0;\n        xabber.accounts.each((account) => {\n            account.chats.each((chat) => {\n                if (chat.contact && !chat.isMuted()) {\n                    count_all_msg += chat.get('unread') + chat.get('const_unread');\n                    if (chat.contact.get('group_chat'))\n                        count_group_msg += chat.get('unread') + chat.get('const_unread');\n                    else\n                        count_msg += chat.get('unread') + chat.get('const_unread');\n                }\n            });\n            let incoming_subscriptions = account.contacts.filter(item => (item.get('invitation') && !item.get('removed')) || (item.get('subscription_request_in') && item.get('subscription') != 'both')).length;\n            count_all_msg += incoming_subscriptions;\n            mentions += account.unread_mentions.length;\n        });\n        return { msgs: count_msg, all_msgs: count_all_msg, group_msgs: count_group_msg, mentions: mentions };\n    },\n\n    recountAllMessageCounter: function () {\n        let unread_messages = this.setAllMessageCounter();\n        this.data.set('all_msg_counter', unread_messages.all_msgs);\n        this.data.set('msg_counter', unread_messages.msgs);\n        this.data.set('group_msg_counter', unread_messages.group_msgs);\n        this.data.set('mentions_counter', unread_messages.mentions);\n    },\n\n    onChangedMessageCounter: function () {\n        let c = this.data.get('msg_counter');\n        this.$('.msg-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedGroupMessageCounter: function () {\n        let c = this.data.get('group_msg_counter');\n        this.$('.group-msg-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedMentionsCounter: function () {\n        let c = this.data.get('mentions_counter');\n        this.$('.mentions-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedAllMessageCounter: function () {\n        let c = this.data.get('all_msg_counter');\n        if (c >= 100)\n            c = '99+';\n        this.$('.all-msg-indicator').switchClass('unread', c).text(c);\n    },\n});\n\nxabber.JingleMessageView = xabber.BasicView.extend({\n    className: 'modal main-modal jingle-message-view',\n    template: templates.jingle_message_calling,\n    avatar_size: constants.AVATAR_SIZES.XABBER_VOICE_CALL_VIEW,\n\n    events: {\n        \"click\": \"clickOnWindow\",\n        \"click .btn-accept\": \"accept\",\n        \"click .btn-share-screen\": \"shareScreen\",\n        \"click .btn-microphone\": \"toggleMicrophone\",\n        \"click .btn-video\": \"videoCall\",\n        \"click .btn-volume\": \"toggleVolume\",\n        \"click .btn-collapse\": \"collapse\",\n        \"click .btn-cancel\": \"cancel\",\n        \"click .btn-full-screen\": \"setFullScreen\"\n    },\n\n    _initialize: function (options) {\n        this.model = options.model;\n        this.model.on('destroy', this.onDestroy, this);\n        this.contact = this.model.contact;\n        this.account = this.contact.account;\n        this.model.on('change:state', this.updateCallingStatus, this);\n        this.model.on('change:status', this.updateBackground, this);\n        this.model.on('change:volume_on', this.updateButtons, this);\n        this.model.on('change:video_live', this.updateButtons, this);\n        this.model.on('change:video_screen', this.updateButtons, this);\n        this.model.on('change:video_in', this.updateCollapsedWindow, this);\n        this.model.on('change:video', this.updateCollapsedWindow, this);\n        this.model.on('change:audio', this.updateButtons, this);\n    },\n\n    render: function (options) {\n        options = options || {};\n        this.updateName();\n        this.updateCallingStatus(options.status);\n        if (options.status === 'in') {\n            this.updateStatusText(xabber.getString(\"dialog_jingle_message__status_calling\"));\n        }\n        else {\n            this.model.set('status', 'calling');\n        }\n        this.updateAccountJid();\n        this.updateButtons();\n        this.$el.openModal({\n            dismissible: false,\n            ready: () => {\n                this.updateAvatar();\n                this.pos1 = 0;\n                this.pos2 = 0;\n                this.pos3 = 0;\n                this.pos4 = 0;\n                this.$('.collapsed-movable').mousedown((e) => {\n                    e = e || window.event;\n                    e.preventDefault();\n                    // get the mouse cursor position at startup:\n                    this.pos3 = e.clientX;\n                    this.pos4 = e.clientY;\n                    let didDrag = false;\n                    document.onmouseup = (e) => {\n                        document.onmouseup = null;\n                        document.onmousemove = null;\n                        if (!didDrag)\n                            this.collapse();\n                    };\n                    // call a function whenever the cursor moves:\n                    document.onmousemove = (e) => {\n                        e = e || window.event;\n                        e.preventDefault();\n                        // calculate the new cursor position:\n                        this.pos1 = this.pos3 - e.clientX;\n                        this.pos2 = this.pos4 - e.clientY;\n                        this.pos3 = e.clientX;\n                        this.pos4 = e.clientY;\n                        // set the element's new position:\n                        this.$el.css('top', (this.$el.offset().top - this.pos2) + \"px\");\n                        this.$el.css('left', (this.$el.offset().left - this.pos1) + \"px\");\n                        this.$el.css('transform', \"none\");\n                        this.$el.css('right', \"unset\");\n                        didDrag = true;\n                    };\n                });\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n\n    },\n\n    setFullScreen: function () {\n        let video = this.$el.find('.webrtc-remote-video')[0],\n            local_video = this.$el.find('.webrtc-local-video')[0],\n            buttons = this.$el.find('.buttons-panel')[0];\n        if (!video)\n            return;\n        if (video.requestFullScreen) {\n            video.requestFullScreen();\n            local_video.requestFullScreen();\n            buttons.requestFullScreen();\n        }\n        else if (video.webkitRequestFullScreen) {\n            video.webkitRequestFullScreen();\n            local_video.webkitRequestFullScreen();\n            buttons.webkitRequestFullScreen();\n        }\n        else if (video.mozRequestFullScreen) {\n            video.mozRequestFullScreen();\n            local_video.mozRequestFullScreen();\n            buttons.mozRequestFullScreen();\n        }\n        else if (video.msRequestFullScreen) {\n            video.msRequestFullScreen();\n            local_video.msRequestFullScreen();\n            buttons.msRequestFullScreen();\n        }\n    },\n\n    cancelFullScreen: function () {\n        if (document.exitFullscreen) {\n            let full_screen_el = document.fullscreenElement;\n            full_screen_el && document.exitFullscreen().then(() => {\n                document.fullscreenElement && this.cancelFullScreen();\n            });\n        } else if (document.mozCancelFullScreen) { /* Firefox */\n            let full_screen_el = document.mozFullScreenElement;\n            full_screen_el && document.mozCancelFullScreen();\n            document.mozFullScreenElement && this.cancelFullScreen();\n        } else if (document.webkitExitFullscreen) { /* Chrome, Safari and Opera */\n            let full_screen_el = document.webkitCurrentFullScreenElement;\n            full_screen_el && document.webkitExitFullscreen();\n            document.webkitCurrentFullScreenElement && this.cancelFullScreen();\n        } else if (document.msExitFullscreen) { /* IE/Edge */\n            let full_screen_el = document.msFullscreenElement;\n            full_screen_el && document.msExitFullscreen();\n            document.msFullscreenElement && this.cancelFullScreen();\n        }\n    },\n\n    windowResized: function () {\n        this.$el.hasClass('collapsed') && this.$el.css('right', parseInt(xabber.main_panel.$el.css('margin-right')) + 8 + 'px');\n    },\n\n    updateButtons: function () {\n        this.$('.btn-video .video').switchClass('hidden', !this.model.get('video'));\n        this.$('.btn-share-screen').switchClass('active', this.model.get('video_screen'));\n        this.$('.btn-full-screen').switchClass('hidden', !this.model.get('video_in'));\n        this.$('.btn-video').switchClass('mdi-video active', this.model.get('video_live'))\n            .switchClass('mdi-video-off', !this.model.get('video_live'));\n        this.$('.btn-volume').switchClass('mdi-volume-high active', this.model.get('volume_on'))\n            .switchClass('mdi-volume-off', !this.model.get('volume_on'));\n        this.$('.btn-microphone').switchClass('active mdi-microphone', this.model.get('audio'))\n            .switchClass('mdi-microphone-off', !this.model.get('audio'));\n    },\n\n    updateAvatar: function () {\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateBackground: function () {\n        let status = this.model.get('status');\n        this.$el.attr('data-state', status);\n    },\n\n    updateCallingStatus: function (status) {\n        this.$('.buttons-wrap').switchClass('incoming', (status === 'in'));\n    },\n\n    updateStatusText: function (status) {\n        this.$('.calling-status').text(status || \"\");\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.contact.get('name'));\n    },\n\n    updateAccountJid: function () {\n        this.$('.modal-footer .contact-info .jid').text(this.contact.get('jid'));\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    shareScreen: function () {\n        this.model.set('video_screen', !this.model.get('video_screen'));\n    },\n\n    isFullScreen: function () {\n        if (document.fullscreenElement)\n            return true;\n        else if (document.webkitFullscreenElement)\n            return true;\n        else if (document.mozFullScreenElement)\n            return true;\n        else return false;\n    },\n\n    accept: function () {\n        this.model.accept();\n        this.updateCallingStatus(constants.JINGLE_MSG_ACCEPT);\n        this.model.initSession();\n    },\n\n    clickOnWindow: function (ev) {\n        if ($(ev.target).closest('.collapsed-movable').length)\n            return;\n        if ($(ev.target).closest('.video-wrap').length && this.$el.hasClass('collapsed') && this.$el.hasClass('collapsed-video'))\n            this.collapse();\n    },\n\n    collapse: function (ev) {\n        ev && ev.stopPropagation();\n        if (this.isFullScreen()) {\n            this.cancelFullScreen();\n            return;\n        }\n        let $overlay = this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId'));\n        $overlay.toggle();\n        this.$el.toggleClass('collapsed');\n        if (this.$el.hasClass('collapsed')) {\n            this.$el.switchClass('collapsed-video', (this.model.get('video') || this.model.get('video_in')));\n            this.$el.switchClass('multiple-videos', this.model.get('video') && this.model.get('video_in'));\n        }\n        else {\n            this.$el.css('right', \"\");\n            this.$el.css('left', \"\");\n            this.$el.css('width', \"\");\n            this.$el.css('height', \"\");\n            this.$el.removeClass('collapsed-video');\n        }\n        this.windowResized();\n    },\n\n    updateCollapsedWindow: function () {\n        this.updateButtons();\n        if (this.$el.hasClass('collapsed')) {\n            this.$el.switchClass('collapsed-video', (this.model.get('video') || this.model.get('video_in')));\n            this.$el.switchClass('multiple-videos', this.model.get('video') && this.model.get('video_in'));\n        }\n    },\n\n    toggleMicrophone: function () {\n        this.model.set('audio', !this.model.get('audio'));\n    },\n\n    onDestroy: function () {\n        this.updateStatusText(xabber.getString(this.model.get('status') == 'device_busy' ? \"dialog_jingle_message__status_device_busy\" : this.model.get('status') == 'busy' ? \"dialog_jingle_message__status_busy\" : \"dialog_jingle_message__status_disconnected\"));\n        setTimeout(() => {\n            this.close();\n            this.$el.detach();\n        }, 3000);\n    },\n\n    videoCall: function () {\n        this.model.set('video_live', !this.model.get('video_live'));\n    },\n\n    toggleVolume: function (ev) {\n        let $target = $(ev.target);\n        $target.switchClass(this.model.set('volume_on', !this.model.get('volume_on')));\n    },\n\n    cancel: function () {\n        this.model.reject();\n        this.close();\n    }\n});\n\nxabber.PlyrPlayerPopupView = xabber.BasicView.extend({\n    className: 'modal main-modal player-overlay plyr-player-popup-view',\n    template: templates.plyr_player_popup,\n\n    events: {\n        \"click .mdi-close\": \"closePopup\",\n        \"click .mdi-minimize-float\": \"floatPopup\",\n        \"click .mdi-minimize-full\": \"fullPopup\",\n        \"click .mdi-plyr-hide\": \"hidePopup\",\n        \"click .btn-next-plyr\": \"nextPlyr\",\n        \"click .btn-previous-plyr\": \"previousPlyr\",\n        \"click .mdi-open-message\": \"openMessage\",\n        \"click .mdi-toggle-play\": \"togglePlay\",\n        \"click .mdi-toggle-mute\": \"toggleMute\",\n    },\n\n    _initialize: function (options) {\n        this.data.set('visibility_state', 0);\n        this.data.on('change:visibility_state', this.onVisibilityChange, this);\n        xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n    },\n\n    render: function (options) {\n        options = options || {};\n        this.$el.openModal({\n            dismissible: false,\n            ready: () => {\n                if (!this.player){\n                    this.player = new Plyr('.plyr-player-popup', {\n                        controls: [\n                            'play-large', 'play', 'progress', 'duration', 'mute', 'volume', 'settings', 'download', 'fullscreen',\n                        ],\n                        youtube: {controls: 0, disablekb: 1, iv_load_policy: 3, modestbranding: 1, rel: 0, showinfo: 0}\n                    });\n                    this.player.on('play',(event) => {\n                        let other_players = xabber.plyr_players.filter(other => other != this.player);\n                        other_players.forEach(function(other) {\n                            if (other.$audio_elem){\n                                if (other.$audio_elem.voice_message)\n                                    other.$audio_elem.voice_message.stopTime();\n                            }\n                        })\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('pause',(event) => {\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('timeupdate',(event) => {\n                        xabber.trigger('plyr_player_time_updated');\n                    });\n                    this.player.on('volumechange',(event) => {\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('statechange',(event) => {\n                        if (event.detail.code === 3) {\n                            this.$('.plyr-player-popup-draggable').removeClass('hidden');\n                            this.$('.plyr-player-popup-draggable').css({\n                                width: '',\n                                height: '',\n                            });\n                        }\n                        xabber.trigger('plyr_player_updated');\n                    });\n                }\n                this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId')).mousedown(() => {this.minimizePopup()});\n                this.showNewVideo(options);\n                this.onVisibilityChange();\n                this.updatePlyrControls();\n                this.pos1 = 0;\n                this.pos2 = 0;\n                this.pos3 = 0;\n                this.pos4 = 0;\n                this.$('.plyr-player-min-controls-tab').mousedown((e) => {\n                    e = e || window.event;\n                    if ($(e.target).closest('.plyr__control--overlaid').length || $(e.target).closest('.plyr__controls').length || $(e.target).closest('.mdi-close').length || $(e.target).closest('.plyr-player-min-controls-buttons').length)\n                        return;\n                    e.preventDefault();\n                    // get the mouse cursor position at startup:\n                    this.pos3 = e.clientX;\n                    this.pos4 = e.clientY;\n                    let didDrag = false;\n                    document.onmouseup = (e) => {\n                        document.onmouseup = null;\n                        document.onmousemove = null;\n                        if (!didDrag && !$(e.target).closest('.plyr__control--overlaid').length)\n                            this.$('.plyr__video-wrapper').click();\n                    };\n                    // call a function whenever the cursor moves:\n                    document.onmousemove = (e) => {\n                        e = e || window.event;\n                        didDrag = true;\n                        e.preventDefault();\n                        if (this.$el.hasClass('player-overlay'))\n                            return;\n                        // calculate the new cursor position:\n                        this.pos1 = this.pos3 - e.clientX;\n                        this.pos2 = this.pos4 - e.clientY;\n                        this.pos3 = e.clientX;\n                        this.pos4 = e.clientY;\n\n                        let xPercent = (((this.$el.offset().left - this.pos1)/window.innerWidth) * 100),\n                            yPercent = (((this.$el.offset().top - this.pos2)/window.innerHeight) * 100);\n\n\n                        // set the element's new position:\n                        this.$el.css('left', xPercent + '%');\n                        this.$el.css('top', yPercent + '%');\n                        this.$el.css('transform', \"none\");\n                        this.$el.css('right', \"unset\");\n                    };\n                });\n            },\n        });\n\n    },\n\n    showNewVideo: function (options) {\n        options = options || {};\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            if (options.player.provider === 'youtube'){\n                this.$('.plyr-player-popup-draggable').addClass('hidden');\n                this.$('.plyr-player-popup-draggable').css({\n                    width: 400,\n                    height: 200,\n                });\n            }\n            this.account = options.player.chat_item.account;\n            this.updateColorScheme();\n            this.player.chat_item = options.player.chat_item;\n            this.player.player_item = options.player;\n            this.player.message_unique_id = options.player.message_unique_id;\n            let video_sources = {\n                src: options.player.video_src,\n                provider: options.player.provider,\n            };\n            options.player.type && (video_sources.type = options.player.type);\n            this.player.source = {\n                type: 'video',\n                sources: [\n                    video_sources,\n                ],\n            }\n            xabber.current_plyr_player = this.player;\n            this.player.once('ready',(event) => {\n                let $minimize_element_float = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-minimize mdi-minimize-float mdi-svg-template\" data-svgname=\"player-float\"></svg>')\n                $minimize_element_float.append(env.templates.svg['player-float']())\n                $minimize_element_float.insertBefore(this.$('.plyr__controls__item[data-plyr=\"fullscreen\"]'));\n                let $minimize_element_full = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-minimize mdi-minimize-full mdi-svg-template\" data-svgname=\"player-full\"></svg>')\n                $minimize_element_full.append(env.templates.svg['player-full']())\n                $minimize_element_full.insertBefore(this.$('.plyr__controls__item[data-plyr=\"fullscreen\"]'));\n                let $show_message_element_full = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-open-message mdi-svg-template\" data-svgname=\"message-bookmark-outline\"></svg>')\n                $show_message_element_full.append(env.templates.svg['message-bookmark-outline']())\n                $show_message_element_full.insertAfter(this.$('.plyr__controls__item[data-plyr=\"download\"]'));\n                let $previous_element = $('<div class=\"btn-previous-plyr\"><i class=\"mdi mdi-skip-previous mdi-24px\"></i></div>')\n                $previous_element.insertBefore(this.$('.plyr__controls__item[data-plyr=\"play\"]'));\n                let $next_element = $('<div class=\"btn-next-plyr\"><i class=\"mdi mdi-skip-next mdi-24px\"></i></div>')\n                $next_element.insertAfter(this.$('.plyr__controls__item[data-plyr=\"play\"]'));\n                this.player.play();\n                xabber.trigger('plyr_player_updated');\n            });\n        });\n\n        if (options.player && options.player.video_file && options.player.video_file.key) {\n            options.player.key = options.player.video_file.key;\n            options.player.video_file.type && (options.player.type = options.player.video_file.type);\n        }\n\n        if (options.player && options.player.key && options.player.chat_item.model && options.player.video_src && !options.player.video_decrypted){\n            options.player.chat_item.model.messages.decryptFile(options.player.video_src, options.player.key).then((result) => {\n                options.player.video_src = result;\n                options.player.video_decrypted = true;\n                dfd.resolve();\n            });\n        } else\n            dfd.resolve();\n    },\n\n    closePopup: function () {\n        this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId')).detach();\n        this.$el.detach();\n        xabber.current_plyr_player = null;\n        xabber.plyr_player_popup = null;\n        xabber.trigger('plyr_player_updated');\n    },\n\n    minimizePopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        let visibility_state = this.data.get('visibility_state');\n        visibility_state = visibility_state + 1;\n        (visibility_state > 2) && (visibility_state = 0);\n        this.data.set('visibility_state', visibility_state);\n    },\n\n    hidePopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 2);\n    },\n\n    floatPopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 1);\n    },\n\n    fullPopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 0);\n    },\n\n    onVisibilityChange: function () {\n        let visibility_state = this.data.get('visibility_state'),\n            $overlay = this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId'));\n        $overlay.switchClass('hidden', visibility_state != 0);\n        this.$el.switchClass('player-overlay', visibility_state === 0);\n        this.$el.switchClass('hidden', visibility_state === 2);\n    },\n\n    nextPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n            let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n            if (!next_item.$audio_elem.voice_message){\n                let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                next_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n        }\n    },\n\n    previousPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n            let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n            if (!prev_item.$audio_elem.voice_message){\n                let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                prev_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n        }\n    },\n\n    updatePlyrControls: function () {\n        if (xabber.current_plyr_player) {\n            let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n            this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n            this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n            this.$('.mdi-plyr-play').switchClass('hidden', xabber.current_plyr_player.playing);\n            this.$('.mdi-plyr-pause').switchClass('hidden', !xabber.current_plyr_player.playing);\n            this.$('.mdi-mute-plyr').switchClass('hidden', !xabber.current_plyr_player.muted);\n            this.$('.mdi-unmute-plyr').switchClass('hidden', xabber.current_plyr_player.muted);\n        }\n    },\n\n    openMessage: function () {\n        if (!(this.player && this.player.chat_item && this.player.message_unique_id))\n            return;\n        this.floatPopup();\n        let chat = this.player.chat_item.model;\n        xabber.chats_view.openChat(chat.item_view, {right_contact_save: true, clear_search: false});\n        xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'message_context', model: chat });\n        if (xabber.right_contact_panel_saveable && xabber.body.screen.get('right_contact') && xabber.body.screen.get('right') === 'message_context') {\n            if (xabber.right_contact_panel_saveable)\n                chat.contact.showDetailsRight('all-chats', {right_saved: true});\n            else\n                chat.contact.showDetailsRight('all-chats', {right_saved: false});\n        }\n        chat.getMessageContext(this.player.message_unique_id, {message: true});\n    },\n\n    togglePlay: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        if (xabber.current_plyr_player.$audio_elem){\n            if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n            } else {\n                xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n            }\n        } else\n            xabber.current_plyr_player.togglePlay();\n    },\n\n    toggleMute: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        xabber.current_plyr_player.muted = !xabber.current_plyr_player.muted;\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n        this.account.settings.once(\"change:color\", this.updateColorScheme, this);\n    },\n});\n\nxabber.SettingsModalView = xabber.BasicView.extend({\n    className: 'settings-panel-wrap',\n    template: templates.settings_modal,\n    ps_selector: '.settings-panel',\n\n    events: {\n        \"click .background-overlay\": \"closeSettings\",\n        \"click .btn-back\": \"backToMenu\",\n        \"click .btn-back-subsettings\": \"backToSubMenu\",\n        \"click .settings-tabs-wrap.global-settings-tabs .settings-tab:not(.delete-all-accounts)\": \"jumpToBlock\",\n        \"click .desktop-notifications-clue-wrap b\": \"goToWebNotifications\",\n        \"click .btn-add-account\": \"showAddAccountView\",\n        \"click .setting.idling label\": \"setIdling\",\n        \"change #idle_timeout\": \"setIdlingTimeout\",\n        \"click .setting.notifications label\": \"setNotifications\",\n        // \"click .setting.volume-enable label\": \"setNotificationsVolumeEnabled\",\n        \"click .private-notifications label\": \"setPrivateNotifications\",\n        \"click .group-notifications label\": \"setGroupNotifications\",\n        \"click .notifications-lever label\": \"setNotifications\",\n        \"click .jingle-calls label\": \"setJingleCalls\",\n        \"click .setting.message-preview.private-preview label\": \"setPrivateMessagePreview\",\n        \"click .setting.message-preview.group-preview label\": \"setGroupMessagePreview\",\n        \"click .call-attention label\": \"setCallAttention\",\n        \"click .setting.load-media label\": \"setLoadMedia\",\n        \"click .setting.typing-notifications label\": \"setTypingNotifications\",\n        \"click .setting.mapping-service label\": \"setMappingService\",\n        \"change .sound input[type=radio][name=private_sound]\": \"setPrivateSound\",\n        \"change .sound input[type=radio][name=group_sound]\": \"setGroupSound\",\n        \"change .sound input[type=radio][name=call_sound]\": \"setCallSound\",\n        \"change .sound input[type=radio][name=dialtone_sound]\": \"setDialtoneSound\",\n        \"change .sound input[type=radio][name=attention_sound]\": \"setAttentionSound\",\n        \"change .languages-list input[type=radio][name=language]\": \"changeLanguage\",\n        \"change #vignetting\": \"changeVignetting\",\n        \"change #blur\": \"changeBlur\",\n        \"change #notifications_volume\": \"changeNotificationsVolume\",\n        \"change #blur_switch\": \"switchBlur\",\n        \"change #vignetting_switch\": \"switchVignetting\",\n        \"click .selected-color-wrap\": \"openColorPicker\",\n        \"click .client-main-color-item\": \"chooseMainColor\",\n        \"change .background input[type=radio][name=background]\": \"setBackground\",\n        \"click .current-background-wrap\": \"changeBackgroundImage\",\n        \"change .hotkeys input[type=radio][name=hotkeys]\": \"setHotkeys\",\n        \"change .avatar-shape input[type=radio][name=avatar_shape]\": \"setAvatarShape\",\n        \"click .settings-tab.delete-all-accounts\": \"deleteAllAccounts\"\n    },\n\n    _initialize: function (options) {\n        this.$('.xabber-info-wrap .version').text(xabber.get('version_number'));\n        xabber.on('update_main_color', this.updateMainColor, this);\n        this.model.on('change:language', this.updateLanguage, this);\n        this.model.on('change:avatar_shape', this.updateAvatarLabel, this);\n        this.model.on('change:notifications_private', this.updateSoundsLabel, this);\n        this.model.on('change:notifications_group', this.updateSoundsLabel, this);\n        this.model.on('change:call_attention', this.updateSoundsLabel, this);\n        this.model.on('change:private_sound', this.updateSoundsLabel, this);\n        this.model.on('change:group_sound', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_private_message', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_group_message', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_call', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_dialtone', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_attention', this.updateSoundsLabel, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        $(document).on(\"keyup\", (ev) => {\n            if (ev.keyCode === constants.KEY_ESCAPE && this.data.get('visible')) {\n                this.closeSettings();\n            }\n        });\n        xabber.once('accounts_ready',() => {\n            xabber.accounts.on(\"list_changed add change:enabled destroy\", this.updateAccounts, this);\n        })\n    },\n\n    render: function (options) {\n        let settings = this.model.attributes,\n            lang = settings.language;\n        this.updateSounds();\n        this.updateLanguages();\n        this.$('.notifications input[type=checkbox]').prop({\n            checked: settings.notifications && xabber._cache.get('notifications')\n        });\n        this.$('.notifications-lever input[type=checkbox]').prop({\n            checked: settings.notifications && xabber._cache.get('notifications')\n        });\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !settings.notifications_group)\n        this.$('.private-notifications input[type=checkbox]')\n            .prop({checked: settings.notifications_private});\n        this.$('.sound input[type=radio][name=private_sound]').prop('disabled', !settings.notifications_private)\n        this.$('.sound input[type=radio][name=call_sound]').prop('disabled', !settings.jingle_calls);\n        this.$('.sound input[type=radio][name=dialtone_sound]').prop('disabled', !settings.jingle_calls);\n        this.$('.group-notifications input[type=checkbox]')\n            .prop({checked: settings.notifications_group});\n        this.$('.jingle-calls input[type=checkbox]')\n            .prop({checked: settings.jingle_calls});\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !settings.notifications_group)\n        this.$('.sound input[type=radio][name=attention_sound]').prop('disabled', !settings.call_attention)\n        this.$('.message-preview.private-preview input[type=checkbox]')\n            .prop({checked: settings.message_preview_private}).prop('disabled', !(settings.notifications && xabber._cache.get('notifications') && settings.notifications_private));\n        this.$('.message-preview.group-preview input[type=checkbox]')\n            .prop({checked: settings.message_preview_group}).prop('disabled', !(settings.notifications && xabber._cache.get('notifications') && settings.notifications_group));\n        this.$('.desktop-notifications-clue-wrap').hideIf(settings.notifications);\n        this.$('.notifications-dependant').switchClass('notifications-dependant-two-line', !settings.notifications);\n        this.$('.call-attention input[type=checkbox]')\n            .prop({checked: settings.call_attention});\n        this.$('.load-media input[type=checkbox]')\n            .prop({checked: settings.load_media});\n        this.$('.typing-notifications input[type=checkbox]')\n            .prop({checked: settings.typing_notifications});\n        this.$('.idling input[type=checkbox]')\n            .prop({checked: settings.idling});\n        this.$('#idle_timeout')\n            .val(settings.idling_time).prop('disabled', !settings.idling);\n        // this.$(`#notifications_volume_enable`)\n        //     .prop('checked', settings.notifications_volume_enabled);\n        this.$('.mapping-service input[type=checkbox]')\n            .prop({checked: settings.mapping_service});\n        let sound_private_value = settings.private_sound ? settings.sound_on_private_message : '';\n        this.$(`.sound input[type=radio][name=private_sound][value=\"${sound_private_value}\"]`)\n                .prop('checked', true);\n        let sound_group_value = settings.group_sound ? settings.sound_on_group_message : '';\n        this.$(`.sound input[type=radio][name=group_sound][value=\"${sound_group_value}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=call_sound][value=\"${settings.sound_on_call}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=dialtone_sound][value=\"${settings.sound_on_dialtone}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=attention_sound][value=\"${settings.sound_on_attention}\"]`)\n                .prop('checked', true);\n        this.$(`.hotkeys input[type=radio][name=hotkeys][value=${settings.hotkeys}]`)\n                .prop('checked', true);\n        this.$(`.avatar-shape input[type=radio][name=avatar_shape][value=${settings.avatar_shape}]`)\n                .prop('checked', true);\n        (lang == xabber.get(\"default_language\")) && (lang = 'default');\n        this.$(`.languages-list input[type=radio][name=language][value=\"${lang}\"]`)\n            .prop('checked', true);\n        this.$(`.client-main-color-item`).removeClass('chosen-client-color');\n        this.$(`.client-main-color-item[data-value=\"${settings.main_color}\"]`).addClass('chosen-client-color');\n        let notifications_volume = !isNaN(settings.notifications_volume) ? settings.notifications_volume * 100 : 100;\n        this.$(`#notifications_volume`).val(notifications_volume);\n        // this.$('.volume-setting .disabled').switchClass('hidden', settings.notifications_volume_enabled);\n        // this.$('#notifications_volume').prop('disabled', !settings.notifications_volume_enabled);\n        this.$('.settings-panel-head span').text(this.$('.settings-block-wrap:not(.hidden)').attr('data-header'))\n        this.updateAvatarLabel();\n        this.updateSoundsLabel();\n        this.updateDescription();\n        this.updateBackgroundSetting();\n        this.updateColor();\n        this.updateMainColor();\n        this.updateLanguage();\n        this.$('.toolbar-main-color-setting-wrap .dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            belowOrigin: true,\n            hover: false\n        });\n        this.$('.left-column').removeClass('hidden');\n        this.$('.left-column .settings-tabs-wrap.global-settings-tabs').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.$('.btn-back').removeClass('hidden');\n        this.$('.btn-back-subsettings').addClass('hidden');\n        this.$('.settings-panel-head .description').addClass('hidden');\n        this.$('.desktop-notifications-clue-wrap b').addClass('client-text-color-500');\n        this.updateAccounts(options);\n        this.updateHeight();\n        this.updateSliders();\n        if (options && options.block_name) {\n            let $elem = this.$(`.settings-tab[data-block-name=\"${options.block_name}\"]`);\n            if ($elem.length)\n                this.jumpToBlock({target: $elem[0]});\n        }\n        return this;\n    },\n\n    updateAccounts: function (options) {\n        if (this.settings_single_account_modal){\n            this.settings_single_account_modal.removeChild('blocklist');\n            this.removeChild('single_account');\n        }\n        if (xabber.accounts.length === 1 && xabber.accounts.enabled.length){\n            this.$('.accounts-info-wrap').addClass('hidden');\n            this.$('.btn-add-account').addClass('hidden');\n            this.$('.single-account-info-wrap').removeClass('hidden');\n            let first_account = xabber.accounts.models[0];\n            this.single_account_has_rendered = false;\n            this.settings_single_account_modal = this.addChild('single_account', xabber.AccountSettingsSingleModalView, {\n                model: first_account,\n                forced_ps_container: this.ps_container,\n                single_account_modal: true,\n                el: this.$('.single-account-info-wrap .single-account-info')[0]\n            });\n            if (!this.single_account_has_rendered){\n                this.settings_single_account_modal.show(null, options);\n            }\n            first_account.trigger('render_single_settings', this.settings_single_account_modal);\n            this.settings_single_account_modal.addChild('blocklist', xabber.BlockListView, {\n                account: first_account,\n                el: this.settings_single_account_modal.$('.block-list-view-wrap')[0]\n            });\n        } else {\n            this.$('.btn-add-account').removeClass('hidden');\n            this.$('.accounts-info-wrap').removeClass('hidden');\n            this.$('.single-account-info-wrap').addClass('hidden');\n        }\n        this.updateHeight();\n    },\n\n    updateMainColor: function () {\n        this.$('.toolbar-main-color-setting').attr('data-color', this.model.get('main_color'));\n    },\n\n    updateBackgroundSetting: function () {\n        this.$(`.background input[type=radio][name=background][value=${this.model.get('background').type}]`)\n            .prop('checked', true);\n        if (this.model.get('background').image) {\n            this.$('.current-background').css('background-image', `url(${utils.images.getCachedBackground(this.model.get('background').image)})`);\n        }\n        this.$('.current-background-wrap').switchClass('hidden', !this.model.get('background').image);\n        let appearance = this.model.get('appearance'),\n            blur_switched = appearance.blur !== false,\n            vignetting_switched = appearance.vignetting !== false;\n        this.$('#blur_switch')[0].checked = blur_switched;\n        this.$('.blur-setting .disabled').switchClass('hidden', blur_switched);\n        if (blur_switched)\n            this.$('#blur')[0].value = appearance.blur;\n        this.$('#vignetting_switch')[0].checked = vignetting_switched;\n        this.$('.vignetting-setting .disabled').switchClass('hidden', vignetting_switched);\n        if (vignetting_switched)\n            this.$('#vignetting')[0].value = appearance.vignetting;\n        this.updateScrollBar();\n    },\n\n    updateColor: function () {\n        let color = this.model.get('appearance').color || '#E0E0E0';\n        this.$('.selected-color-item').css('background-color', color);\n        this.$('.selected-color-hex').text(color);\n        let material_color = xabber.ColorPicker.prototype.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == color.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == color.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n        xabber.toolbar_view.updateColor(color);\n    },\n\n    jumpToBlock: function (ev) {\n        if ($(ev.target).closest('.switch').length)\n            return;\n        let $tab = $(ev.target).closest('.settings-tab'),\n            $elem = this.$('.settings-block-wrap.' + $tab.attr('data-block-name'));\n        if ($tab.hasClass('link-button')) {\n            $tab.parent().siblings().removeClass('active');\n            this.scrollTo(0);\n            return;\n        }\n        this.$('.settings-block-wrap').addClass('hidden');\n        this.$('.left-column').addClass('hidden');\n        this.$('.right-column').removeClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span').text($elem.attr('data-header'))\n        $tab.addClass('active').siblings().removeClass('active');\n        if ($tab.closest('.right-column') && $tab.attr('data-subblock-parent-name')) {\n            this.$('.btn-back').addClass('hidden');\n            this.$('.btn-back-subsettings').removeClass('hidden');\n            this.$('.btn-back-subsettings').attr('data-subblock-parent-name', $tab.attr('data-subblock-parent-name'));\n        }\n        if ($tab.attr('data-block-name') === 'interface_language')\n            this.$('.settings-panel-head .description').removeClass('hidden');\n        else\n            this.$('.settings-panel-head .description').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    updateHeight: function () {\n        let height;\n        if (!this.$('.left-column.main-left-column').hasClass('hidden'))\n            height = this.$('.left-column.main-left-column').height();\n        if (!this.$('.right-column.main-right-column').hasClass('hidden'))\n            height = this.$('.right-column.main-right-column').height();\n        this.ps_container.css('height', height + 'px');\n        setTimeout(() => {\n            this.updateScrollBar();\n        }, 500)\n    },\n\n    updateSliders: function () {\n        this.$('.range-field.range-field-design').each((idx, item) => {\n            let $input = $(item).find('input'),\n                range_min = $input.attr('min'),\n                range_max = $input.attr('max'),\n                range_value = $input.val(),\n                left =  ((182 / (range_max - range_min)) * (range_value - range_min)) + 10;\n            $(item).find('span.thumb').css('left', left + 'px');\n            if ($input.hasClass('materialize-timer'))\n                $(item).find('span.value').text(range_value + 's');\n            else\n                $(item).find('span.value').text(range_value);\n        })\n\n    },\n\n    updateSounds: function () {\n\n        this.$('.notification-field').html('<form action=\"#\"></form>');\n\n        sounds.notifications.forEach((item,idx) => {\n            if (!item.not_selectable){\n                let element = $(templates.setting_radio_input({\n                    input_name: 'private_sound',\n                    input_id: `${this.cid}-private-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.notification-field:not(.group-notification-field)').append(element);\n                let group_element = $(templates.setting_radio_input({\n                    input_name: 'group_sound',\n                    input_id: `${this.cid}-group-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.group-notification-field').append(group_element);\n            }\n        });\n\n        let element_no_sound = $(templates.setting_radio_input({\n            input_name: 'private_sound',\n            input_id: `${this.cid}-private-sound-no`,\n            label: 'No sound',\n            value: '',\n        }));\n        this.$('.notification-field:not(.group-notification-field)').prepend(element_no_sound);\n\n        let group_element_no_sound = $(templates.setting_radio_input({\n            input_name: 'group_sound',\n            input_id: `${this.cid}-group-sound-no`,\n            label: 'No sound',\n            value: '',\n        }));\n        this.$('.group-notification-field').prepend(group_element_no_sound);\n\n        this.$('.dialtone-field').html('<form action=\"#\"></form>');\n        sounds.dialtones.forEach((item,idx) => {\n            if (!item.not_selectable){\n                let element = $(templates.setting_radio_input({\n                    input_name: 'dialtone_sound',\n                    input_id: `${this.cid}-dialtone-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.dialtone-field').append(element);\n            }\n        });\n\n        this.$('.ringtone-field').html('<form action=\"#\"></form>');\n        sounds.ringtones.forEach((item,idx) => {\n            if (!item.not_selectable){\n                let element = $(templates.setting_radio_input({\n                    input_name: 'call_sound',\n                    input_id: `${this.cid}-call-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.ringtone-field').append(element);\n            }\n        });\n\n        this.$('.attention-field').html('<form action=\"#\"></form>');\n        sounds.attention.forEach((item,idx) => {\n            if (!item.not_selectable){\n                let element = $(templates.setting_radio_input({\n                    input_name: 'attention_sound',\n                    input_id: `${this.cid}-attention-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.attention-field').append(element);\n            }\n        });\n\n    },\n\n    updateLanguages: function () {\n        this.$('.languages-list').html('<form action=\"#\"></form>');\n\n        let default_element = $(templates.setting_language_radio_input({\n            input_name: 'language',\n            input_id: `${this.cid}-default`,\n            label: xabber.getString(\"settings__languages_list___item_default\", [constants.languages[xabber.get(\"default_language\") || 'en']]),\n            value: 'default',\n            progress: {},\n        }));\n\n        this.$('.languages-list').append(default_element);\n\n        if (!window.navigator.language.includes('en')){\n            let second_lang = xabber.get(\"default_language\") === 'en' ? window.navigator.language : 'en',\n                second_prog, second_prog_text,\n                second_locale = Object.keys(client_translation_progress)\n                    .find(key => !second_lang.indexOf(key)) || constants.languages_another_locales[second_lang] && Object.keys(client_translation_progress)\n                    .find(key => !constants.languages_another_locales[second_lang].indexOf(key)); // < - check for locales that differ in names\n\n            if (second_locale) {\n                second_prog = client_translation_progress[second_locale];\n                second_prog_text = (second_prog == 100) ? xabber.getString(\"settings__section_interface_language__translation_progress_fully\")\n                    : xabber.getString(\"settings__section_interface_language__translation_progress\", [`${second_prog}%`]);\n\n                let second_element = $(templates.setting_language_radio_input({\n                    input_name: 'language',\n                    input_id: `${this.cid}-${second_lang}`,\n                    label: constants.languages[second_lang],\n                    value: second_lang,\n                    progress: {\n                        text: second_prog_text\n                    },\n                }));\n                this.$('.languages-list').append(second_element);\n            }\n        }\n\n\n        for (let lang in constants.languages) {\n            if (!lang || lang == xabber.get(\"default_language\") || lang == window.navigator.language)\n                continue;\n\n            let locale = Object.keys(client_translation_progress)\n                .find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress)\n                .find(key => !constants.languages_another_locales[lang].indexOf(key)); // < - check for locales that differ in names\n\n            if (locale) {\n                let progress = client_translation_progress[locale],\n                    progress_text = (progress == 100) ? xabber.getString(\"settings__section_interface_language__translation_progress_fully\")\n                        : xabber.getString(\"settings__section_interface_language__translation_progress\", [`${progress}%`]);\n\n                let element = $(templates.setting_language_radio_input({\n                    input_name: 'language',\n                    input_id: `${this.cid}-${lang}`,\n                    label: constants.languages[lang],\n                    value: lang,\n                    progress: {\n                        text: progress_text\n                    },\n                }));\n                this.$('.languages-list').append(element);\n            }\n        }\n    },\n\n    onScrollY: function () {\n        if (this.getScrollTop() === 0)\n            this.$('.settings-panel-head').removeClass('lined-head')\n        else\n            this.$('.settings-panel-head').addClass('lined-head')\n    },\n\n    closeSettings: function (ev) {\n        if (xabber.body.screen && xabber.body.screen.get('previous_screen')){\n            let previous_screen = xabber.body.screen.get('previous_screen');\n            previous_screen.close_settings = true;\n            xabber.body.setScreen(previous_screen.name, previous_screen);\n            xabber.body.screen.attributes.close_settings = undefined;\n        } else\n            xabber.toolbar_view.showAllChats();\n    },\n\n    backToMenu: function (ev) {\n        this.$('.left-column').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.$('.settings-panel-head .description').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    backToSubMenu: function (ev) {\n        let $tab = $(ev.target).closest('.btn-back-subsettings'),\n            block_name = $tab.attr('data-subblock-parent-name'),\n            $elem = this.$('.settings-block-wrap.' + block_name),\n            elem_parent = $elem.attr('data-parent-block');\n        this.$('.settings-block-wrap').addClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span.settings-panel-head-title').text($elem.attr('data-header'));\n        if (elem_parent) {\n            $tab.attr('data-subblock-parent-name', elem_parent)\n        } else {\n            this.$('.btn-back').removeClass('hidden');\n            this.$('.btn-back-subsettings').addClass('hidden');\n        }\n        this.$('.settings-panel-head .description').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    goToWebNotifications: function (ev) {\n        this.$('.settings-tab[data-block-name=\"web-notifications\"]').click();\n    },\n\n    setIdling: function (ev) {\n        let value = !this.model.get('idling');\n        this.model.save('idling', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.idling').find('input').prop('checked', value);\n        this.$('#idle_timeout').prop('disabled', !value);\n    },\n\n    setIdlingTimeout: function (ev) {\n        let $target = $(ev.target),\n            value = $(ev.target).val();\n        value = parseInt(value);\n        if (_.isNaN(value)){\n            value = constants.IDLING_DEFAULT_TIMEOUT;\n        } else if (value < constants.IDLING_MINIMAL_TIMEOUT){\n            value = constants.IDLING_MINIMAL_TIMEOUT;\n        }\n        this.model.save('idling_time', value);\n        $target.val(value);\n        ev.preventDefault();\n    },\n\n    setNotificationsVolumeEnabled: function (ev) {\n        ev.preventDefault();\n        let value = !this.model.get('notifications_volume_enabled');\n        this.model.save('notifications_volume_enabled', value);\n        this.$('#notifications_volume_enable').prop('checked', value);\n        this.$('.volume-setting .disabled').switchClass('hidden', value);\n        this.$('#notifications_volume').prop('disabled', !value);\n    },\n\n    setNotifications: function (ev) {\n        let value = this.model.get('notifications');\n        ev.preventDefault();\n        if (value === null) {\n            utils.callback_popup_message(xabber.getString(\"notifications__toast_notifications_not_supported\"), 1500);\n        } else {\n            value = value && xabber._cache.get('notifications');\n            if (!xabber._cache.get('notifications')) {\n                window.Notification.requestPermission((permission) => {\n                    xabber._cache.save({'notifications': (permission === 'granted'), 'ignore_notifications_warning': true});\n                    xabber.notifications_placeholder && xabber.notifications_placeholder.close();\n                    value = (permission === 'granted');\n                    this.model.save('notifications', value ? value : this.model.get('notifications'));\n                    this.$('.setting.notifications input[type=checkbox]').prop('checked', value);\n                    this.$('.notifications-lever input[type=checkbox]').prop('checked', value);\n                    this.$('.message-preview.private-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_private')));\n                    this.$('.message-preview.group-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_group')));\n                    this.$('.desktop-notifications-clue-wrap').hideIf(value);\n                    this.$('.notifications-dependant').switchClass('notifications-dependant-two-line', !value);\n                });\n            } else {\n                value = !value;\n                this.model.save('notifications', value);\n                this.$('.setting.notifications input[type=checkbox]').prop('checked', value);\n                this.$('.notifications-lever input[type=checkbox]').prop('checked', value);\n                this.$('.message-preview.private-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_private')));\n                this.$('.message-preview.group-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_group')));\n                this.$('.desktop-notifications-clue-wrap').hideIf(value);\n                this.$('.notifications-dependant').switchClass('notifications-dependant-two-line', !value);\n            }\n        }\n    },\n\n    setPrivateNotifications: function (ev) {\n        let value = !this.model.get('notifications_private');\n        this.model.save('notifications_private', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=private_sound]').prop('disabled', !value)\n        this.$('.message-preview.private-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_private')));\n        $(ev.target).closest('.private-notifications').find('input').prop('checked', value);\n    },\n\n    setGroupNotifications: function (ev) {\n        let value = !this.model.get('notifications_group');\n        this.model.save('notifications_group', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !value)\n        this.$('.message-preview.group-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_group')));\n        $(ev.target).closest('.group-notifications').find('input').prop('checked', value);\n    },\n\n    setJingleCalls: function (ev) {\n        let value = !this.model.get('jingle_calls');\n        this.model.save('jingle_calls', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=call_sound]').prop('disabled', !value)\n        this.$('.sound input[type=radio][name=dialtone_sound]').prop('disabled', !value)\n        $(ev.target).closest('.jingle-calls').find('input').prop('checked', value);\n    },\n\n    setPrivateMessagePreview: function (ev) {\n        let value = !this.model.get('message_preview_private');\n        this.model.save('message_preview_private', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.message-preview').find('input').prop('checked', value);\n    },\n\n    setGroupMessagePreview: function (ev) {\n        let value = !this.model.get('message_preview_group');\n        this.model.save('message_preview_group', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.message-preview').find('input').prop('checked', value);\n    },\n\n    setCallAttention: function (ev) {\n        let value = !this.model.get('call_attention');\n        this.model.save('call_attention', value);\n        ev.preventDefault();\n        $(ev.target).closest('.call-attention').find('input').prop('checked', value);\n    },\n\n    setLoadMedia: function (ev) {\n        let value = !this.model.get('load_media');\n        this.model.save('load_media', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.load-media').find('input').prop('checked', value);\n    },\n\n    setTypingNotifications: function (ev) {\n        let value = !this.model.get('typing_notifications');\n        this.model.save('typing_notifications', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.typing-notifications').find('input').prop('checked', value);\n    },\n\n    setMappingService: function (ev) {\n        let value = !this.model.get('mapping_service');\n        this.model.save('mapping_service', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.mapping-service').find('input').prop('checked', value);\n    },\n\n    setPrivateSound: function (ev) {\n        let value = ev.target.value;\n        if (value) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false, !this.model.get('notifications_volume_enabled') ? 0 : this.model.get('notifications_volume'));\n            this.model.save({private_sound: true, sound_on_private_message: value});\n        } else {\n            this.model.save('private_sound', false);\n        }\n    },\n\n    setGroupSound: function (ev) {\n        let value = ev.target.value;\n        if (value) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false, !this.model.get('notifications_volume_enabled') ? 0 : this.model.get('notifications_volume'));\n            this.model.save({group_sound: true, sound_on_group_message: value});\n        } else {\n            this.model.save('group_sound', false);\n        }\n    },\n\n    setCallSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_call: value});\n    },\n\n    setDialtoneSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_dialtone: value});\n    },\n\n    setAttentionSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_attention: value});\n    },\n\n    setBackground: function (ev) {\n        let value = ev.target.value;\n        if (value == 'default') {\n            this.model.save('background', {type: 'default'});\n            xabber.body.updateBackground();\n            this.updateBackgroundSetting();\n        } else if (value == 'repeating-pattern' || value == 'image') {\n            let background_view = new xabber.SetBackgroundView();\n            background_view.render({type: value, model: this.model});\n        }\n    },\n\n    changeBackgroundImage: function () {\n        let type = this.model.get('background').type;\n        if (type == 'repeating-pattern' || type == 'image') {\n            let background_view = new xabber.SetBackgroundView();\n            background_view.render({type: type, model: this.model});\n        }\n    },\n\n    openColorPicker: function () {\n        if (!this.colorPicker)\n            this.colorPicker = new xabber.ColorPicker({model: this.model});\n        this.colorPicker.render();\n    },\n\n    chooseMainColor: function (ev) {\n        let color = $(ev.target).closest('.client-main-color-item').attr('data-value');\n        this.model.save('main_color', color);\n        this.$(`.client-main-color-item`).removeClass('chosen-client-color');\n        this.$(`.client-main-color-item[data-value=\"${color}\"]`).addClass('chosen-client-color');\n        xabber.trigger('update_main_color');\n    },\n\n    changeBlur: function () {\n        let value = this.$('#blur')[0].value,\n            appearance = this.model.get('appearance');\n        xabber.body.updateBlur(value);\n        this.model.save('appearance', _.extend(appearance, {blur: value}));\n    },\n\n    changeNotificationsVolume: function () {\n        let volume = this.$('#notifications_volume')[0].value / 100,\n            sound = this.$('.sound input[type=radio][name=private_sound]:checked').val() || this.$('.sound input[type=radio][name=group_sound]:checked').val();\n        this.model.save('notifications_volume', volume);\n        if (sound) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(sound, false, volume);\n        }\n    },\n\n    changeVignetting: function () {\n        let value = this.$('#vignetting')[0].value,\n            appearance = this.model.get('appearance');\n        xabber.body.updateBoxShadow(value);\n        this.model.save('appearance', _.extend(appearance, {vignetting: value}));\n    },\n\n    switchVignetting: function () {\n        let is_switched = this.$('#vignetting_switch:checked').length,\n            appearance = this.model.get('appearance'),\n            value = is_switched ? this.$('#vignetting')[0].value : false;\n        this.$('.vignetting-setting .disabled').switchClass('hidden', is_switched);\n        this.model.save('appearance', _.extend(appearance, {vignetting: value}));\n        xabber.body.updateBoxShadow(value);\n    },\n\n    switchBlur: function () {\n        let is_switched = this.$('#blur_switch:checked').length,\n            appearance = this.model.get('appearance'),\n            value = is_switched ? this.$('#blur')[0].value : false;\n        this.$('.blur-setting .disabled').switchClass('hidden', is_switched);\n        this.model.save('appearance', _.extend(appearance, {blur: value}));\n        xabber.body.updateBlur(value);\n    },\n\n    setHotkeys: function (ev) {\n        this.model.save('hotkeys', ev.target.value);\n    },\n\n    setAvatarShape: function (ev) {\n        this.model.save('avatar_shape', ev.target.value);\n        xabber.trigger('update_avatar_shape');\n    },\n\n    deleteAllAccounts: function (ev) {\n        utils.dialogs.ask(xabber.getString(\"button_quit\"), xabber.getString(\"settings__dialog_quit_client__confirm\", [constants.CLIENT_NAME]), null, { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            res && xabber.trigger('quit');\n        });\n    },\n\n    changeLanguage: function (ev) {\n        let value = ev.target.value,\n            locale = Object.keys(client_translation_progress).find(key => !value.indexOf(key)) || constants.languages_another_locales[value] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[value].indexOf(key)),\n            progress = client_translation_progress[locale],\n            platform_text;\n\n        (value == 'default') && (progress = 100);\n\n        if (progress == 100 && ((xabber.get(\"default_language\") === 'en' && value === 'default') || value === 'en')) {\n            platform_text = xabber.getString(\"settings__dialog_change_language__confirm\");\n        } else if (progress == 100) {\n            platform_text = xabber.getString(\"settings__interface_language__change_language_text_full_translation\",\n                [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" href='${constants.PROJECT_CROWDIN_URL}'>${xabber.getString(\"settings__section_interface_language__text_description__text_translations\")}</a>`, constants.SHORT_CLIENT_NAME, ])\n             + '\\n\\n' +xabber.getString(\"settings__dialog_change_language__confirm\");\n        } else if (progress == 0) {\n            platform_text = xabber.getString(\"settings__interface_language__change_language_text_no_translation\",\n                [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" href='${constants.PROJECT_CROWDIN_URL}'>${xabber.getString(\"settings__section_interface_language__text_description__text_translation\")}</a>`]);\n        } else {\n            platform_text = xabber.getString(\"settings__interface_language__change_language_text_partial_translation\",\n                [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" href='${constants.PROJECT_CROWDIN_URL}'>${xabber.getString(\"settings__section_interface_language__text_description__text_translation_team\")}</a>`, constants.SHORT_CLIENT_NAME])\n                + '\\n\\n' +xabber.getString(\"settings__dialog_change_language__confirm\");\n        }\n        let modal_classes = ['change-language-modal'], inverted_buttons;\n        if (progress == 0){\n            modal_classes.push('change-language-modal-no-ok');\n        } else if (progress != 0 && progress < 70){\n            inverted_buttons = true;\n        }\n        utils.dialogs.ask(xabber.getString(\"settings__dialog_change_language__header\"),\n            platform_text,\n            {modal_class: modal_classes, no_dialog_options: true, inverted_buttons: inverted_buttons},\n            { ok_button_text: xabber.getString(\"settings__dialog_change_language__button_change\")}).done((result) => {\n\n            if (result) {\n                this.model.save('language', value);\n                window.location.reload(true);\n            } else {\n                this.$(`.languages-list input[type=radio][name=language][value=\"${this.model.get('language')}\"]`)\n                    .prop('checked', true);\n            }\n        });\n    },\n\n    updateLanguage: function () {\n        if (this.model.get('language') === 'default'){\n            this.$('.settings-tab[data-block-name=\"interface_language\"] .settings-block-label').text(xabber.getString(\"settings__languages_list___item_default\", [constants.languages[xabber.get(\"default_language\") || 'en']]));\n        } else {\n            this.$('.settings-tab[data-block-name=\"interface_language\"] .settings-block-label').text(constants.languages[this.model.get('language')]);\n        }\n    },\n\n    showAddAccountView: function () {\n        xabber.trigger('add_account', {right: null});\n    },\n\n    updateDescription: function () {\n\n        if (!xabber.settings.language)\n            return;\n\n        let lang = xabber.settings.language,\n            locale = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key)),\n            progress = client_translation_progress[locale];\n\n        (lang == 'default' || !lang.indexOf('en')) && (progress = 100);\n\n        if (!_.isUndefined(progress)) {\n            let progress_text, platform_text;\n            if (progress == 100 && ((xabber.get(\"default_language\") === 'en' && lang === 'default') || lang === 'en')) {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_full_translation_english\", [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" class=\"email-link\" href='mailto:${constants.EMAIL_FOR_JOIN_TRANSLATION}'>${constants.EMAIL_FOR_JOIN_TRANSLATION}</a>`, constants.SHORT_CLIENT_NAME]);\n            } else if (progress == 100) {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_full_translation\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n            } else if (progress == 0) {\n                progress_text = xabber.getString(\"settings__section_interface_language__text_description_no_translations\", [constants.SHORT_CLIENT_NAME]);\n            } else {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_unfull_translation\", [constants.SHORT_CLIENT_NAME]);\n            }\n            platform_text = xabber.getString(\"settings__interface_language__text_description_platform\",\n                [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" href='${constants.PROJECT_CROWDIN_URL}'>${constants.PROJECT_CROWDIN_URL}</a>`]);\n            this.$('.description').html(`${progress_text}<br><br>${platform_text}`);\n        }\n    },\n\n    updateAvatarLabel: function () {\n        let shape = this.model.get('avatar_shape'), label_text;\n        if (shape === 'circle')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_circle\");\n        if (shape === 'squircle')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_squircle\");\n        if (shape === 'octagon')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_octagon\");\n        if (shape === 'hexagon')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_hexagon\");\n        if (shape === 'pentagon')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_pentagon\");\n        if (shape === 'rounded')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_rounded\");\n        if (shape === 'star')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_star\");\n        this.$('.settings-tab[data-block-name=\"avatars\"] .settings-block-label').text(label_text);\n    },\n\n    updateSoundsLabel: function () {\n        let sound_private_value = this.model.get('private_sound') && this.model.get('notifications_private') ? this.model.get('sound_on_private_message') : '',\n            sound_group_value = this.model.get('group_sound') && this.model.get('notifications_group') ? this.model.get('sound_on_group_message') : '',\n            sound_on_attention = this.model.get('call_attention') ? this.model.get('sound_on_attention') : '',\n            sound_private_text, sound_group_text, sound_on_attention_text;\n\n\n        if (sound_private_value === '')\n            sound_private_text = 'No sound';\n        else\n            sound_private_text = sound_private_value.replace('_', ' ');\n\n        if (sound_group_value === '')\n            sound_group_text = 'No sound';\n        else\n            sound_group_text = sound_group_value.replace('_', ' ');\n\n        if (sound_on_attention === '')\n            sound_on_attention_text = 'No sound';\n        else\n            sound_on_attention_text = sound_on_attention.replace('_', ' ');\n\n        this.$('.settings-tab[data-block-name=\"chats-notifications\"] .settings-block-label').text(sound_private_text);\n        this.$('.settings-tab[data-block-name=\"groupchats-notifications\"] .settings-block-label').text(sound_group_text);\n        this.$('.settings-tab[data-block-name=\"attention-calls\"] .settings-block-label').text(sound_on_attention_text);\n    },\n});\n\nxabber.mainColorPicker = xabber.BasicView.extend({\n    className: 'modal main-modal main-color-picker',\n    template: templates.color_scheme,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .color-value\": \"setColor\"\n    },\n\n    _initialize: function (options) {\n        this.model = options.model;\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('max-height', Math.min(($(window).height() - 341), 456)).perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n    },\n\n    setColor: function (ev) {\n        let color = $(ev.target).closest('.color-value').attr('data-value');\n        this.model.save('main_color', color);\n        xabber.trigger('update_main_color');\n        this.close();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n\n});\n\nxabber.ColorPicker = xabber.BasicView.extend({\n    className: 'modal main-modal color-picker',\n    materialColors: [\n        {\n            color: \"red\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFEBEE\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFCDD2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#EF9A9A\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#E57373\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#EF5350\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#F44336\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#E53935\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#D32F2F\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#C62828\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#B71C1C\"\n                }\n            ]\n        },\n        {\n            color: \"pink\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FCE4EC\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F8BBD0\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#F48FB1\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#F06292\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#EC407A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#E91E63\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#D81B60\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#C2185B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#AD1457\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#880E4F\"\n                }\n            ]\n        },\n        {\n            color: \"purple\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F3E5F5\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#E1BEE7\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#CE93D8\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#BA68C8\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#AB47BC\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#9C27B0\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#8E24AA\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#7B1FA2\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#6A1B9A\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#4A148C\"\n                }\n            ]\n        },\n        {\n            color: \"deep-purple\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#EDE7F6\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#D1C4E9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#B39DDB\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#9575CD\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#7E57C2\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#673AB7\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#5E35B1\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#512DA8\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#4527A0\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#311B92\"\n                }\n            ]\n        },\n        {\n            color: \"indigo\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E8EAF6\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#C5CAE9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#9FA8DA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#7986CB\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#5C6BC0\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#3F51B5\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#3949AB\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#303F9F\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#283593\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#1A237E\"\n                }\n            ]\n        },\n        {\n            color: \"blue\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E3F2FD\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#BBDEFB\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#90CAF9\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#64B5F6\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#42A5F5\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#2196F3\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#1E88E5\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#1976D2\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#1565C0\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#0D47A1\"\n                }\n            ]\n        },\n        {\n            color: \"light-blue\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E1F5FE\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B3E5FC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#81D4FA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4FC3F7\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#29B6F6\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#03A9F4\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#039BE5\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#0288D1\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#0277BD\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#01579B\"\n                }\n            ]\n        },\n        {\n            color: \"cyan\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E0F7FA\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B2EBF2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#80DEEA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4DD0E1\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#26C6DA\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#00BCD4\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#00ACC1\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#0097A7\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#00838F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#006064\"\n                }\n            ]\n        },\n        {\n            color: \"teal\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E0F2F1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B2DFDB\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#80CBC4\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4DB6AC\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#26A69A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#009688\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#00897B\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#00796B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#00695C\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#004D40\"\n                }\n            ]\n        },\n        {\n            color: \"green\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E8F5E9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#C8E6C9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#A5D6A7\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#81C784\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#66BB6A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#4CAF50\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#43A047\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#388E3C\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#2E7D32\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#1B5E20\"\n                }\n            ]\n        },\n        {\n            color: \"light-green\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F1F8E9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#DCEDC8\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#C5E1A5\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#AED581\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#9CCC65\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#8BC34A\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#7CB342\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#689F38\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#558B2F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#33691E\"\n                }\n            ]\n        },\n        {\n            color: \"lime\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F9FBE7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F0F4C3\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#E6EE9C\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#DCE775\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#D4E157\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#CDDC39\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#C0CA33\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#AFB42B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#9E9D24\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#827717\"\n                }\n            ]\n        },\n        {\n            color: \"yellow\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFFDE7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFF9C4\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFF59D\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFF176\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFEE58\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FFEB3B\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FDD835\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#FBC02D\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#F9A825\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#F57F17\"\n                }\n            ]\n        },\n        {\n            color: \"amber\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFF8E1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFECB3\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFE082\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFD54F\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFCA28\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FFC107\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FFB300\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#FFA000\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#FF8F00\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#FF6F00\"\n                }\n            ]\n        },\n        {\n            color: \"orange\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFF3E0\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFE0B2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFCC80\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFB74D\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFA726\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FF9800\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FB8C00\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#F57C00\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#EF6C00\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#E65100\"\n                }\n            ]\n        },\n        {\n            color: \"deep-orange\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FBE9E7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFCCBC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFAB91\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FF8A65\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FF7043\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FF5722\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#F4511E\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#E64A19\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#D84315\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#BF360C\"\n                }\n            ]\n        },\n        {\n            color: \"brown\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#EFEBE9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#D7CCC8\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#BCAAA4\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#A1887F\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#8D6E63\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#795548\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#6D4C41\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#5D4037\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#4E342E\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#3E2723\"\n                }\n            ]\n        },\n        {\n            color: \"grey\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FAFAFA\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F5F5F5\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#EEEEEE\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#E0E0E0\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#BDBDBD\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#9E9E9E\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#757575\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#616161\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#424242\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#212121\"\n                }\n            ]\n        },\n        {\n            color: \"blue-grey\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#ECEFF1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#CFD8DC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#B0BEC5\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#90A4AE\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#78909C\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#607D8B\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#546E7A\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#455A64\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#37474F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#263238\"\n                }\n            ]\n        }\n    ],\n\n    ps_selector: '.material-color-picker-wrap',\n    events: {\n        \"click .color-palette-item\": \"selectColor\",\n        \"click .selected-color-hex\": \"updateInputField\",\n        \"focusout .selected-color-hex-input\": \"focusoutInputField\",\n        \"keyup .selected-color-hex-input\": \"keyUpInput\",\n        \"click .btn-set\": \"setColor\"\n    },\n\n    _initialize(options) {\n        this.model = options.model;\n        this.$el.html(templates.color_picker({materialColors: this.materialColors}));\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                let $input = this.$('.selected-color-hex-input'),\n                    $color_hex = this.$('.selected-color-hex'),\n                    value = this.model.get('appearance').color || '#E0E0E0';\n                let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n                if (material_color) {\n                    let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n                    this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n                } else {\n                    this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n                }\n                if (value) {\n                    this.$('.selected-color-wrap').removeClass('hidden');\n                    $input.addClass('hidden');\n                    $color_hex.removeClass('hidden').text(value);\n                    value && this.$('.selected-color-item').css('background-color', value);\n                }\n            },\n            complete: this.close.bind(this)\n        });\n\n    },\n\n    updateInputField: function () {\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex');\n        $input.removeClass('hidden');\n        $input[0].value = $color_hex.text();\n        $color_hex.addClass('hidden');\n    },\n\n    keyUpInput: function (ev) {\n        if (ev.keyCode == constants.KEY_ENTER) {\n            ev.preventDefault();\n            this.focusoutInputField();\n        }\n        let $input = this.$('.selected-color-hex-input'),\n            value = $input[0].value.trim();\n        this.$('.selected-color-item').css('background-color', value);\n        let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n    },\n\n    focusoutInputField: function () {\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex'),\n            value = $input[0].value.trim();\n        let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n        $input.addClass('hidden');\n        $color_hex.removeClass('hidden').text(value);\n        this.$('.selected-color-item').css('background-color', value);\n    },\n\n    selectColor: function (ev) {\n        let $target = $(ev.target),\n            hex = $target.attr('data-hex'),\n            color_name = $target.closest('.color-palette-wrapper').attr('data-color-name').replace(/-/g, \"_\"),\n            weight = $target.attr('data-weight');\n        this.$('.selected-color-wrap').removeClass('hidden');\n        this.$('.selected-color-item').css('background-color', hex);\n        this.$('.selected-color-name').text(xabber.getString(`account_color_name_${color_name}`).replace(/-/g, \" \").replace(/-/g, \" \") + ` ${weight}`);\n        this.$('.selected-color-hex').text(hex);\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex');\n        $input.addClass('hidden');\n        $color_hex.removeClass('hidden');\n    },\n\n    setColor: function () {\n        this.close();\n        let appearance = this.model.get('appearance');\n        this.model.save('appearance', _.extend(appearance, {color: this.$('.selected-color-hex').text()}));\n\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                xabber.settings_modal_view.updateColor();\n            }\n        });\n    }\n\n});\n\nxabber.SetBackgroundView = xabber.BasicView.extend({\n    className: 'modal main-modal settings-background background-panel',\n    template: templates.backgrounds_gallery,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .menu-btn\": \"updateActiveMenu\",\n        \"click .library-wrap .image-item\": \"setActiveImage\",\n        'change input[type=\"file\"]': \"onFileInputChanged\",\n        'keyup input.url': \"onInputChanged\",\n        \"click .btn-add\": \"addBackground\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n    },\n\n    render: function (options) {\n        this.model = options.model;\n        this.type = options.type;\n        this.createLibrary();\n        this.$('.menu-btn').removeClass('active');\n        this.$('.menu-btn[data-screen-name=\"library\"]').addClass('active');\n        if (this.type == 'repeating-pattern')\n            this.$('.modal-header span').text(xabber.getString(\"settings__dialog_background__header_pattern\"));\n        else\n            this.$('.modal-header span').text(xabber.getString(\"settings__dialog_background__header_image\"));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('max-height', Math.min(($(window).height() - 341), 456)).perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n        let draggable = this.$('.upload-wrap');\n        draggable[0].ondragenter = function (ev) {\n            ev.preventDefault();\n            draggable.addClass('file-drop');\n        };\n        draggable[0].ondragover = function (ev) {\n            ev.preventDefault();\n        };\n        draggable[0].ondragleave = function (ev) {\n            if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                return;\n            ev.preventDefault();\n            draggable.removeClass('file-drop');\n        };\n        draggable[0].ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            draggable.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [], file;\n            for (let i = 0; i < files.length; i++) {\n                if (utils.isImageType(files[i].type)) {\n                    file = files[i];\n                    break;\n                }\n            }\n            file && this.addFile(file);\n        };\n    },\n\n    onScrollY: function () {\n        if (this.$('.screen-wrap:not(.hidden)').attr('data-screen') === 'library' && this.getScrollBottom() < 5) {\n            this.loadMoreImages();\n        }\n    },\n\n    getImagesFromXML: function (callback) {\n        if (this.type == 'repeating-pattern' && this.model.patterns_library || this.type == 'images' && this.model.img_library) {\n            callback && callback();\n            return;\n        }\n        if (this.type == 'repeating-pattern') {\n            this.onGetPatternsCallback(env.backgroundPatternsXml)\n        } else {\n            this.onGetImagesCallback(env.backgroundImagesXml);\n        }\n        callback && callback();\n    },\n\n    onGetPatternsCallback: function (data) {\n        if (!(data && data['background-patterns'] && data['background-patterns'].image))\n            return;\n        let images = [];\n        data = data['background-patterns'].image;\n        data.forEach((item) => {\n            images.push({thumbnail: item});\n        });\n        this.model.patterns_library = images;\n    },\n\n    onGetImagesCallback: function (data) {\n        if (!(data && data['background-images'] && data['background-images'].image))\n            return;\n        let images = [];\n        data = data['background-images'].image;\n        data.forEach((item) => {\n            let thumbnail = item.thumbnail,\n                fs_img = item['fullscreen-image'];\n            images.push({thumbnail, fs_img});\n        });\n        this.model.img_library = images;\n    },\n\n    onPaste: function (ev) {\n        let url = ev.clipboardData.getData('text').trim();\n        this.$('.image-preview img')[0].onload = () => {\n            this.$('.image-preview img').removeClass('hidden');\n            this.updateActiveButton();\n        };\n        this.$('.image-preview img').addClass('hidden')[0].src = url;\n        this.updateActiveButton();\n    },\n\n    updateActiveMenu: function (ev) {\n        let screen_name = ev.target.getAttribute('data-screen-name');\n        this.$('.menu-btn').removeClass('active');\n        this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n        this.updateScreen(screen_name);\n    },\n\n    updateScreen: function (name) {\n        this.$('.screen-wrap').addClass('hidden');\n        this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n        this.scrollToTop();\n        this.updateActiveButton();\n    },\n\n    updateActiveButton: function () {\n        let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            non_active = true;\n        if ($active_screen.attr('data-screen') == 'library') {\n            $active_screen.find('div.active').length && (non_active = false);\n        } else {\n            $active_screen.find('img:not(.hidden)').length && (non_active = false);\n        }\n        this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n    },\n\n    createLibrary: function () {\n        this.getImagesFromXML(() => {\n            this.loadMoreImages(40);\n        });\n    },\n\n    loadMoreImages: function (count) {\n        if ((this.type == 'repeating-pattern' && !this.model.patterns_library) || (this.type == 'images' && !this.model.img_library))\n            return;\n        !count && (count = 20);\n        let current_count = this.$(`.image-item`).length;\n        if (this.type == 'repeating-pattern' && current_count >= this.model.patterns_library.length || this.type == 'images' && current_count >= this.model.img_library.length)\n            return;\n        for (let i = current_count; i < (current_count + count); i++) {\n            let img = $(`<div class=\"image-item\"/>`),\n                img_sources = this.type == 'repeating-pattern' ? this.model.patterns_library[i] : this.model.img_library[i];\n            if (!img_sources)\n                break;\n            img.css('background-image', `url(\"${img_sources.thumbnail}\")`);\n            img.attr('data-src', this.type == 'repeating-pattern' ? img_sources.thumbnail : img_sources.fs_img);\n            this.$('.library-wrap').append(img);\n        }\n    },\n\n    setActiveImage: function (ev) {\n        let $target = $(ev.target);\n        if ($target.hasClass('active'))\n            $target.removeClass('active');\n        else {\n            this.$('.library-wrap>div').removeClass('active');\n            $target.addClass('active');\n        }\n        this.updateActiveButton();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target, file;\n        for (let i = 0; i < target.files.length; i++) {\n            if (utils.isImageType(target.files[i].type)) {\n                file = target.files[i];\n                break;\n            }\n        }\n        file && this.addFile(file);\n        $(target).val('');\n    },\n\n    addFile: function (file) {\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            let image_prev = new Image(),\n                src = e.target.result;\n            image_prev.src = src;\n            this.$('.screen-wrap[data-screen=\"upload\"] img').detach();\n            this.$('.screen-wrap[data-screen=\"upload\"]').prepend(image_prev);\n            this.updateActiveButton();\n        };\n        reader.readAsDataURL(file);\n    },\n\n    onInputChanged: function (ev) {\n        if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n            return;\n        if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n            let url = ev.target.value.trim();\n            this.$('.image-preview img')[0].onload = () => {\n                this.$('.image-preview img').removeClass('hidden');\n                this.updateActiveButton();\n            };\n            this.$('.image-preview img').addClass('hidden')[0].src = url;\n            this.updateActiveButton();\n        } else {\n            this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n            this.updateActiveButton();\n        }\n    },\n\n    addBackground: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n        dfd.done((img) => {\n            if (img) {\n                this.model.save('background', {type: this.type, image: img});\n            }\n            else {\n                this.model.save('background', {type: 'default'});\n            }\n            xabber.body.updateBackground();\n            this.close();\n        });\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = $active_screen.find('div.active').attr('data-src');\n            dfd.resolve(image);\n        } else {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            if ($active_screen.attr('data-screen') == 'web-address') {\n                let request = {\n                    type: \"GET\",\n                    url: image,\n                    headers: {\"Access-Control-Allow-Origin\": \"*\"},\n                    dataType: 'blob',\n                    success: function (data) {\n                        image = data;\n                        dfd.resolve(image);\n                    },\n                    error: () => {\n                        dfd.resolve(image);\n                    }\n                };\n                $.ajax(request);\n            } else\n                dfd.resolve(image);\n        }\n    },\n\n    close: function () {\n        xabber.settings_modal_view.updateBackgroundSetting();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n});\n\nxabber.AboutView = xabber.BasicView.extend({\n    className: 'settings-panel about-panel',\n    template: templates.about,\n    ps_selector: '.panel-content',\n\n    _initialize: function () {\n        this.$('.xabber-info-wrap .version').text(this.model.get('version_number'));\n    },\n\n    render: function () {\n    }\n});\n\nxabber.DragManager = Backbone.Model.extend({\n    initialize: function () {\n        window.document.onmousedown = this.onMouseDown.bind(this);\n        window.document.onmousemove = this.onMouseMove.bind(this);\n        window.document.onmouseup = this.onMouseUp.bind(this);\n    },\n\n    onMouseDown: function (ev) {\n        if (ev.which != 1) {\n            return;\n        }\n        let draghandle_elem = ev && ev.target && ev.target.closest ? ev.target.closest('.drag-handle') : $(ev.target).closest('.drag-handle'),\n            elem = draghandle_elem && draghandle_elem.closest('.draggable');\n        if (!elem) {\n            return this.resetElem();\n        }\n        this.set({\n            elem: elem,\n            draghandle_elem: draghandle_elem,\n            downX: ev.pageX,\n            downY: ev.pageY\n        });\n    },\n\n    onMouseMove: function (ev) {\n        if (!this.get('elem')) {\n            return;\n        }\n        let avatar = this.get('avatar');\n        if (!avatar) {\n            if (    Math.abs(ev.pageX - this.get('downX')) < 3 &&\n                    Math.abs(ev.pageY - this.get('downY')) < 3) {\n                return;\n            }\n            avatar = this.createAvatar(ev);\n            if (!avatar) {\n                return this.resetElem();\n            }\n            this.set('avatar', avatar);\n            let coords = this.getCoords(avatar);\n            this.set({\n                shiftX: this.get('downX') - coords.left,\n                shiftY: this.get('downY') - coords.top\n            });\n            this.startDrag(ev);\n        }\n        avatar.style.left = ev.pageX - this.get('shiftX') + 'px';\n        avatar.style.top = ev.pageY - this.get('shiftY') + 'px';\n        let drop_elem = this.findDropElem(ev);\n        this.updateDropElem(drop_elem);\n        return;\n    },\n\n    onMouseUp: function (ev) {\n        let selector = document.querySelector('.recording');\n        if (selector) {\n            $(selector).removeClass('recording');\n            return;\n        }\n        this.get('avatar') && this.finishDrag(ev);\n        this.resetElem();\n    },\n\n    resetElem: function () {\n        this.set({elem: null, draghandle_elem: null, avatar: null});\n    },\n\n    getCoords: function (elem) {\n        let box = elem.getBoundingClientRect();\n        return {\n            top: box.top + window.pageYOffset,\n            left: box.left + window.pageXOffset\n        };\n    },\n\n    createAvatar: function () {\n        let avatar = this.get('elem'),\n            $avatar = $(avatar),\n            draghandle_elem = this.get('draghandle_elem');\n        let old = {\n            parent: avatar.parentNode,\n            nextSibling: avatar.nextSibling,\n            position: avatar.position || '',\n            left: avatar.left || '',\n            top: avatar.top || '',\n            zIndex: avatar.zIndex || '',\n            avatar_cursor: avatar.style.cursor || '',\n            draghandle_elem_cursor: draghandle_elem.style.cursor || ''\n        };\n\n        $avatar.addClass('dragging');\n        avatar.style.cursor = '-webkit-grabbing';\n        draghandle_elem.style.cursor = '-webkit-grabbing';\n\n        avatar.rollback = function () {\n            old.parent.insertBefore(avatar, old.nextSibling);\n            $avatar.removeClass('dragging');\n            avatar.style.position = old.position;\n            avatar.style.left = old.left;\n            avatar.style.top = old.top;\n            avatar.style.zIndex = old.zIndex;\n            avatar.style.cursor = old.avatar_cursor;\n            draghandle_elem.style.cursor = old.draghandle_elem_cursor;\n        };\n\n        return avatar;\n    },\n\n    startDrag: function (ev) {\n        let avatar = this.get('avatar');\n        window.document.body.appendChild(avatar);\n        avatar.style.zIndex = 9999;\n        avatar.style.position = 'absolute';\n    },\n\n    finishDrag: function (ev) {\n        let elem = this.get('elem'),\n            avatar = this.get('avatar'),\n            drop_elem = this.findDropElem(ev);\n        avatar.rollback();\n        this.updateDropElem(null);\n        if (elem && drop_elem) {\n            $(elem).trigger('drag_to', drop_elem);\n            $(drop_elem).trigger('drag_from', elem);\n        }\n    },\n\n    findDropElem: function (ev) {\n        let avatar = this.get('avatar');\n        avatar.hidden = true;\n        let elem = window.document.elementFromPoint(ev.clientX, ev.clientY);\n        avatar.hidden = false;\n        if (!elem) {\n            return null;\n        }\n        return elem.closest('.droppable');\n    },\n\n    updateDropElem: function (drop_elem) {\n        let old_drop_elem = this.get('drop_elem');\n        this.set('drop_elem', drop_elem);\n        old_drop_elem && $(old_drop_elem).removeClass('drag-on');\n        drop_elem && $(drop_elem).addClass('drag-on');\n    }\n});\n\n_.extend(xabber, {\n    modal_settings: {\n        open: {\n            in_duration: 10,\n            out_duration: 10,\n            opacity: 0.4\n        },\n        close: {out_duration: 10}\n    },\n\n    ps_settings: {\n        minScrollbarLength: 40,\n        suppressScrollX: true,\n        wheelSpeed: 0.5\n    },\n\n    startBlinkingFavicon: function (is_disconnected) {\n        if (this._blink_interval && is_disconnected === undefined)\n            return;\n        clearInterval(this._blink_interval);\n        this._blink_interval = setInterval(() => {\n            let $icon = $(\"link[rel='shortcut icon']\"), url;\n            if ($icon.attr('href').indexOf(this.cache.favicon) > -1 || $icon.attr('href').indexOf(constants.FAVICON_DEFAULT) > -1 || $icon.attr('href').indexOf(this.cache.favicon_gray) > -1 || $icon.attr('href').indexOf(constants.FAVICON_DEFAULT_GREY) > -1)\n                url = this.cache.favicon_message || constants.FAVICON_MESSAGE;\n            else\n                url = is_disconnected ? this.cache.favicon_gray || constants.FAVICON_DEFAULT_GREY : this.cache.favicon || constants.FAVICON_DEFAULT;\n            $icon.attr('href', url);\n        }, 1000);\n    },\n\n    stopBlinkingFavicon: function (is_disconnected) {\n        if (this._blink_interval || is_disconnected !== undefined) {\n            clearInterval(this._blink_interval);\n            this._blink_interval = null;\n            let url = is_disconnected ? this.cache.favicon_gray || constants.FAVICON_DEFAULT_GREY : this.cache.favicon || constants.FAVICON_DEFAULT;\n            $(\"link[rel='shortcut icon']\").attr(\"href\", url);\n        }\n    },\n\n    onChangedAllMessageCounter: function () {\n        if (this.get('all_msg_counter')) {\n            this.startBlinkingFavicon();\n            window.document.title = xabber.getString(\"notofications__desktop_notification__text\", [this.get('all_msg_counter')]);\n        } else {\n            this.stopBlinkingFavicon();\n            window.document.title = constants.CLIENT_NAME;\n        }\n    },\n\n    updateAllMessageCounterOnDisconnect: function (is_disconnected) {\n        if (this.get('all_msg_counter')) {\n            this.startBlinkingFavicon(is_disconnected);\n            window.document.title = xabber.getString(\"notofications__desktop_notification__text\", [this.get('all_msg_counter')]);\n        } else {\n            this.stopBlinkingFavicon(is_disconnected);\n            window.document.title = constants.CLIENT_NAME;\n        }\n    },\n\n    setAllMessageCounter: function () {\n        let count_msg = 0;\n        xabber.accounts.each((account) => {\n            account.chats.each((chat) => {\n                if (chat.contact && !chat.isMuted())\n                    count_msg += chat.get('unread') + chat.get('const_unread');\n            });\n            let incoming_subscriptions = account.contacts.filter(item => (item.get('invitation') && !item.get('removed')) || (item.get('subscription_request_in') && item.get('subscription') != 'both')).length;\n            count_msg += incoming_subscriptions;\n        });\n        return count_msg;\n    },\n\n    recountAllMessageCounter: function () {\n        this.set('all_msg_counter', this.setAllMessageCounter());\n    },\n\n    resetMessageCounter: function () {\n        this.set('all_msg_counter', 0);\n    },\n\n    onChangedFocusState: function () {\n        if (this.get('focused')) {\n            this.resetMessageCounter();\n        }\n    },\n\n    openWindow: function (url) {\n        utils.openWindow(url, () => {\n            utils.dialogs.error(xabber.getString(\"notifications__error__text_could_not_open_new_tab\"));\n        });\n    },\n\n    popupNotification: function (params) {\n        let notification = new window.Notification(params.title, {\n            body: params.text,\n            icon: params.icon\n        });\n        setTimeout(notification.close.bind(notification), 5000);\n        return notification;\n    },\n\n    playAudio: function (name, loop, volume) {\n        if (!((volume || volume === 0) && !isNaN(volume)))\n            volume = 1;\n        loop = loop || false;\n        let filename = sounds.all_sounds.find(item => item.file_name === name);\n        if (filename) {\n            let audio = new window.Audio(filename.audio);\n            audio.loop = loop;\n            audio.volume = volume;\n            audio.play();\n            return audio;\n        }\n        return;\n    },\n\n    stopAudio: function (audio) {\n        if (audio) {\n            audio.pause();\n            audio.remove();\n        }\n    },\n\n    registerDOMEvents: function () {\n        let self = this;\n\n        $(window).on(\"blur focus\", function (ev) {\n            self.set('focused', ev.type === 'focus');\n        });\n\n        $(window).on(\"resize\", function (ev) {\n            self.set({\n                width: window.innerWidth,\n                height: window.innerHeight\n            });\n            self.trigger('update_layout', {size_changed: true});\n        });\n\n        window.document.body.ondragover = (ev) => {\n            ev.preventDefault();\n        };\n\n        window.document.body.ondrop = (ev) => {\n            ev.preventDefault();\n        };\n    },\n\n\n    initIdleJS: function () {\n        if (this.idleJs)\n            this.idleJs.stop();\n        let self = this,\n            idling_time = self._settings.get('idling_time') * 1000\n\n        this.idleJs = new idleJs({\n            idle: idling_time, // idle time in ms\n            events: ['mousemove', 'keydown', 'mousedown', 'touchstart', 'focus', 'blur'], // events that will trigger the idle resetter\n            onIdle: () => {\n                if (self._settings.get('idling'))\n                    self.set('idle', true);\n                else\n                    self.set('idle', false);\n            } , // callback function to be executed after idle time\n            onActive:() => {\n                self.set('idle', false);\n            }  , // callback function to be executed after back form idleness\n            keepTracking: true, // set it to false if you want to be notified only on the first idleness change\n            startAtIdle: false // set it to true if you want to start in the idle state\n        })\n        this.idleJs.start();\n    },\n});\n\nxabber.once(\"start\", function () {\n    this.set('all_msg_counter', 0);\n    this.on(\"change:all_msg_counter\", this.onChangedAllMessageCounter, this);\n    this.on(\"change:focused\", this.onChangedFocusState, this);\n    this._settings.on(\"change:idling_time\", this.initIdleJS, this);\n    this.set({\n        focused: window.document.hasFocus(),\n        width: window.innerWidth,\n        height: window.innerHeight\n    });\n    this.registerDOMEvents();\n    this.initIdleJS();\n\n    Materialize.modalSettings = this.modal_settings;\n\n    this.drag_manager = new this.DragManager();\n\n    this.body = new this.Body({model: this});\n\n    this.login_page = this.body.addChild('login', this.NodeView, {\n        classlist: 'login-page-wrap', el: $(document).find('.login-container')[0]});\n\n    this.toolbar_view = this.body.addChild('toolbar', this.ToolbarView);\n    this.settings.appearance.color && this.toolbar_view.updateColor(this.settings.appearance.color);\n\n    this.blur_overlay = this.body.addChild('blur_overlay', this.NodeView, {\n        classlist: 'blur-overlay'});\n\n    this.main_panel = this.body.addChild('main', this.NodeView, {\n        classlist: 'main-wrap'});\n    this.main_overlay_panel = this.body.addChild('main_overlay', this.NodeView, {\n        classlist: 'main-overlay-wrap hidden'});\n    this.body.updateBlur(this.settings.appearance.blur);\n    this.left_panel = this.main_panel.addChild(\n        'left', this.NodeView, {classlist: 'panel-wrap left-panel-wrap'});\n    this.right_panel = this.main_panel.addChild(\n        'right', this.NodeView, {classlist: 'panel-wrap right-panel-wrap'});\n    this.right_contact_panel = this.main_panel.addChild(\n        'right_contact', this.NodeView, {classlist: 'panel-wrap right-contact-panel-wrap'});\n    this.wide_panel = this.main_panel.addChild(\n        'wide', this.NodeView, {classlist: 'panel-wrap wide-panel-wrap'});\n    this.placeholders_wrap = this.main_panel.addChild('placeholders', this.NodeView, {classlist: 'wide-placeholders-wrap'});\n    this.settings_modal_view = this.main_overlay_panel.addChild(\n        'settings_modal', this.SettingsModalView, {model: this._settings});\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    utils = env.utils;\n\n\nxabber.AccountSettings = Backbone.Model.extend({\n    idAttribute: 'jid',\n\n    defaults: {\n        timestamp: 0,\n        to_sync: false,\n        synced: false,\n        deleted: false\n    },\n\n    update_timestamp: function () {\n        this.save('timestamp', utils.now());\n    },\n\n    update_settings: function (settings) {\n        this.save(_.extend({timestamp: utils.now()}, settings));\n    },\n\n    request_data: function () {\n        return {\n            jid: this.get('jid'),\n            timestamp: this.get('timestamp'),\n            settings: _.omit(this.attributes, [\n                'jid', 'timestamp', 'order',\n                'to_sync', 'synced', 'deleted'\n            ])\n        };\n    }\n});\n\nxabber.AccountSettingsList = Backbone.CollectionWithStorage.extend({\n    model: xabber.AccountSettings,\n});\n\nxabber.AccountsOrderTimestamp = Backbone.ModelWithStorage.extend({\n    defaults: {\n        timestamp: 0\n    }\n});\n\nxabber.once(\"start\", function () {\n        this.account_settings_list = new this.AccountSettingsList(null, {\n            storage_name: this.getStorageName() + '-account-settings'\n        });\n        this.account_settings_list.fetch();\n        this.account_settings_list.order_timestamp = new this.AccountsOrderTimestamp(\n            {id: 'accounts-order-timestamp'},\n            {storage_name: this.getStorageName(), fetch: 'after'}\n        );\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    _ = env._,\n    uuid = env.uuid,\n    $iq = env.$iq,\n    utils = env.utils,\n    Strophe = env.Strophe,\n    constants = env.constants;\n\nStrophe.log = function (log_level, msg) {\n    let do_log = (constants.LOG_LEVEL === constants.LOG_LEVEL_DEBUG) ||\n        (constants.LOG_LEVEL >= constants.LOG_LEVEL_WARN &&\n            log_level >= Strophe.LogLevel.WARN) ||\n        (constants.LOG_LEVEL >= constants.LOG_LEVEL_ERROR &&\n            log_level >= Strophe.LogLevel.ERROR);\n    if (do_log) {\n        console.info('Strophe log: ');\n        console.info(msg);\n    }\n    if (msg && msg.includes && msg.includes('policy-violation') && log_level === Strophe.LogLevel.ERROR)\n        utils.dialogs.error(msg);\n};\n\nStrophe.addConnectionPlugin('register', {\n    _connection: null,\n\n    //The plugin must have the init function.\n    init: function(conn) {\n        this._connection = conn;\n\n        // compute free emun index number\n        let i = 0;\n        Object.keys(Strophe.Status).forEach(function (key) {\n            i = Math.max(i, Strophe.Status[key]);\n        });\n\n        /* extend name space\n         *  NS.REGISTER - In-Band Registration\n         *              from XEP 77.\n         */\n        Strophe.addNamespace('REGISTER', 'jabber:iq:register');\n        Strophe.Status.REGIFAIL        = i + 1;\n        Strophe.Status.REGISTER        = i + 2;\n        Strophe.Status.REGISTERED      = i + 3;\n        Strophe.Status.CONFLICT        = i + 4;\n        Strophe.Status.NOTACCEPTABLE   = i + 5;\n\n        if (conn.disco) {\n            if(conn.disco.addFeature)\n                conn.disco.addFeature(Strophe.NS.REGISTER);\n            if(conn.disco.addNode)\n                conn.disco.addNode(Strophe.NS.REGISTER, {items:[]});\n        }\n\n        // hooking strophe's connection.reset\n        var self = this, reset = conn.reset.bind(conn);\n        conn.reset = function () {\n            reset();\n            self.instructions = \"\";\n            self.fields = {};\n            self.registered = false;\n        };\n\n        // hooking strophe's _connect_cb\n        var connect_cb = conn._connect_cb.bind(conn);\n        conn._connect_cb = function (req, callback, raw) {\n            if (!self._registering) {\n                if (self.processed_features) {\n                    // exchange Input hooks to not print the stream:features twice\n                    var xmlInput = conn.xmlInput;\n                    conn.xmlInput = Strophe.Connection.prototype.xmlInput;\n                    var rawInput = conn.rawInput;\n                    conn.rawInput = Strophe.Connection.prototype.rawInput;\n                    connect_cb(req, callback, raw);\n                    conn.xmlInput = xmlInput;\n                    conn.rawInput = rawInput;\n                    delete self.processed_features;\n                } else {\n                    connect_cb(req, callback, raw);\n                }\n            } else {\n                if(!self._check_user) {\n                    // Save this request in case we want to authenticate later\n                    self._connect_cb_data = {\n                        req: req,\n                        raw: raw\n                    };\n                    if (self._register_cb(req, callback, raw)) {\n                        // remember that we already processed stream:features\n                        self.processed_features = true;\n                        delete self._registering;\n                    }\n                }\n                else {\n                    if (self._register_cb_check_user(req, callback, raw)) {\n                        // remember that we already processed stream:features\n                        self.processed_features = true;\n                        delete self._registering;\n                    }\n\n                }\n            }\n        };\n\n        // hooking strophe`s authenticate\n        var auth_old = conn.authenticate.bind(conn);\n        conn.authenticate = function(matched) {\n            if (typeof matched === \"undefined\") {\n                var conn = this._connection;\n\n                if (!this.fields.username || !this.domain || !this.fields.password) {\n                    Strophe.info(\"Register a JID first!\");\n                    return;\n                }\n\n                var jid = this.fields.username + \"@\" + this.domain;\n\n                conn.jid = jid;\n                conn.authzid = Strophe.getBareJidFromJid(conn.jid);\n                conn.authcid = Strophe.getNodeFromJid(conn.jid);\n                conn.pass = this.fields.password;\n\n                var req = this._connect_cb_data.req;\n                var callback = conn.connect_callback;\n                var raw = this._connect_cb_data.raw;\n                conn._connect_cb(req, callback, raw);\n            } else {\n                auth_old(matched);\n            }\n        }.bind(this);\n\n    },\n\n    /** Function: connect\n     *  Starts the registration process.\n     *\n     *  As the registration process proceeds, the user supplied callback will\n     *  be triggered multiple times with status updates.  The callback\n     *  should take two arguments - the status code and the error condition.\n     *\n     *  The status code will be one of the values in the Strophe.Status\n     *  constants.  The error condition will be one of the conditions\n     *  defined in RFC 3920 or the condition 'strophe-parsererror'.\n     *\n     *  Please see XEP 77 for a more detailed explanation of the optional\n     *  parameters below.\n     *\n     *  Parameters:\n     *    (String) domain - The xmpp server's Domain.  This will be the server,\n     *      which will be contacted to register a new JID.\n     *      The server has to provide and allow In-Band Registration (XEP-0077).\n     *    (Function) callback The connect callback function.\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n     *      time the server will wait before returning an empty result for\n     *      a request.  The default setting of 60 seconds is recommended.\n     *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n     *      number of connections the server will hold at one time.  This\n     *      should almost always be set to 1 (the default).\n     */\n    connect: function(domain, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(domain);\n        this.instructions = \"\";\n        this.fields = {};\n        this.registered = false;\n\n        this._registering = true;\n\n        conn.connect(this.domain, \"\", callback, wait, hold, route);\n    },\n\n\n    connect_check_user: function(domain, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(domain);\n        this.instructions = \"\";\n        this.fields = {};\n        this.registered = false;\n\n        this._registering = true;\n        this._check_user = true;\n\n        conn.connect(this.domain, \"\", callback, wait, hold, route);\n    },\n\n    connect_change_password: function(jid, password, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(jid);\n        this.instructions = \"\";\n        this.fields = {};\n        conn.registerSASLMechanisms([Strophe.SASLAnonymous,\n            Strophe.SASLExternal,\n            Strophe.SASLMD5,\n            Strophe.SASLPlain,\n            Strophe.SASLSHA1]);\n\n        conn.connect(jid, password, callback, wait, hold, route);\n    },\n\n    /** PrivateFunction: _register_cb\n     *  _Private_ handler for initial registration request.\n     *\n     *  This handler is used to process the initial registration request\n     *  response from the BOSH server. It is used to set up a bosh session\n     *  and requesting registration fields from host.\n     *\n     *  Parameters:\n     *    (Strophe.Request) req - The current request.\n     */\n    _register_cb: function (req, _callback, raw) {\n        var conn = this._connection;\n\n        Strophe.info(\"_register_cb was called\");\n        conn.connected = true;\n\n        var bodyWrap = conn._proto._reqToData(req);\n        if (!bodyWrap) { return; }\n\n        if (conn.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (bodyWrap.nodeName === conn._proto.strip && bodyWrap.childNodes.length) {\n                conn.xmlInput(bodyWrap.childNodes[0]);\n            } else {\n                conn.xmlInput(bodyWrap);\n            }\n        }\n        if (conn.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                conn.rawInput(raw);\n            } else {\n                conn.rawInput(Strophe.serialize(bodyWrap));\n            }\n        }\n\n        var conncheck = conn._proto._connect_cb(bodyWrap);\n        if (conncheck === Strophe.Status.CONNFAIL) {\n            return false;\n        }\n\n        // Check for the stream:features tag\n        var register = bodyWrap.getElementsByTagName(\"register\");\n        var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n        if (register.length === 0 && mechanisms.length === 0) {\n            conn._proto._no_auth_received(_callback);\n            return false;\n        }\n\n        if (register.length === 0) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, null);\n            return true;\n        }\n\n        // send a get request for registration, to get all required data fields\n        conn._addSysHandler(this._get_register_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send($iq({type: \"get\", id: uuid(), to: this.domain }).c(\"query\",\n            {xmlns: Strophe.NS.REGISTER}).tree());\n\n        return true;\n    },\n    _register_cb_check_user: function (req, _callback, raw) {\n        var conn = this._connection;\n\n        Strophe.info(\"_register_cb was called\");\n        conn.connected = true;\n\n        var bodyWrap = conn._proto._reqToData(req);\n        if (!bodyWrap) { return; }\n\n        if (conn.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (bodyWrap.nodeName === conn._proto.strip && bodyWrap.childNodes.length) {\n                conn.xmlInput(bodyWrap.childNodes[0]);\n            } else {\n                conn.xmlInput(bodyWrap);\n            }\n        }\n        if (conn.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                conn.rawInput(raw);\n            } else {\n                conn.rawInput(Strophe.serialize(bodyWrap));\n            }\n        }\n\n        var conncheck = conn._proto._connect_cb(bodyWrap);\n        if (conncheck === Strophe.Status.CONNFAIL) {\n            return false;\n        }\n\n        // Check for the stream:features tag\n        var register = bodyWrap.getElementsByTagName(\"register\");\n        var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n        if (register.length === 0 && mechanisms.length === 0) {\n            conn._proto._no_auth_received(_callback);\n            return false;\n        }\n\n        if (register.length === 0) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, null);\n            return true;\n        }\n        conn._changeConnectStatus(Strophe.Status.REGISTER, null);\n\n        return true;\n    },\n\n    /** PrivateFunction: _get_register_cb\n     *  _Private_ handler for Registration Fields Request.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The query stanza.\n     *\n     *  Returns:\n     *    false to remove SHOULD contain the registration information currentlSHOULD contain the registration information currentlSHOULD contain the registration information currentlthe handler.\n     */\n    _get_register_cb: function (stanza) {\n        var i, query, field, conn = this._connection;\n        query = stanza.getElementsByTagName(\"query\");\n\n        if (query.length !== 1) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n            return false;\n        }\n        query = query[0];\n        // get required fields\n        for (i = 0; i < query.childNodes.length; i++) {\n            field = query.childNodes[i];\n            if (field.tagName.toLowerCase() === 'instructions') {\n                // this is a special element\n                // it provides info about given data fields in a textual way.\n                conn.register.instructions = Strophe.getText(field);\n                continue;\n            } else if (field.tagName.toLowerCase() === 'x') {\n                // ignore x for now\n                continue;\n            }\n            conn.register.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n        }\n        conn._changeConnectStatus(Strophe.Status.REGISTER, null);\n        return false;\n    },\n\n    /** Function: submit\n     *  Submits Registration data.\n     *\n     *  As the registration process proceeds, the user supplied callback will\n     *  be triggered with status code Strophe.Status.REGISTER. At this point\n     *  the user should fill all required fields in connection.register.fields\n     *  and invoke this function to procceed in the registration process.\n     */\n    submit: function () {\n        var lang = xabber.settings.language;\n        (lang === 'default') && (lang = xabber.get('default_language'));\n        var i, name, query, fields, conn = this._connection;\n        query = $iq({type: \"set\", 'xml:lang': lang, id: uuid()}).c(\"query\", {xmlns:Strophe.NS.REGISTER});\n\n        // set required fields\n        fields = Object.keys(this.fields);\n        for (i = 0; i < fields.length; i++) {\n            name = fields[i];\n            query.c(name).t(this.fields[name]).up();\n        }\n\n        // providing required information\n        conn._addSysHandler(this._submit_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send(query);\n    },\n\n    /** PrivateFunction: _submit_cb\n     *  _Private_ handler for submitted registration information.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The query stanza.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    _submit_cb: function (stanza) {\n        var i, query, field, error = null, conn = this._connection;\n\n        query = stanza.getElementsByTagName(\"query\");\n        if (query.length > 0) {\n            query = query[0];\n            // update fields\n            for (i = 0; i < query.childNodes.length; i++) {\n                field = query.childNodes[i];\n                if (field.tagName.toLowerCase() === 'instructions') {\n                    // this is a special element\n                    // it provides info about given data fields in a textual way\n                    this.instructions = Strophe.getText(field);\n                    continue;\n                }\n                this.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n            }\n        }\n\n        if (stanza.getAttribute(\"type\") === \"error\") {\n            error = stanza.getElementsByTagName(\"error\");\n            let error_text = stanza.getElementsByTagName(\"text\");\n            if (error_text.length > 0)\n                error_text = error_text[0].innerHTML;\n            if (error.length !== 1) {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n                return false;\n            }\n\n            Strophe.info(\"Registration failed.\");\n\n            // this is either 'conflict' or 'not-acceptable'\n            error = error[0].firstChild.tagName.toLowerCase();\n            if (error === 'conflict') {\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, error, error_text);\n            } else if (error === 'not-acceptable') {\n                conn._changeConnectStatus(Strophe.Status.NOTACCEPTABLE, error, error_text);\n            } else {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, error, error_text);\n            }\n        } else {\n            Strophe.info(\"Registration successful.\");\n\n            conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n\n        return false;\n    },\n\n    submit_unregister: function () {\n        var lang = xabber.settings.language;\n        (lang === 'default') && (lang = xabber.get('default_language'));\n        var i, name, query, fields, conn = this._connection;\n        query = $iq({type: \"set\", 'xml:lang': lang, id: uuid()}).c(\"query\", {xmlns:Strophe.NS.REGISTER}).c('remove');\n\n        conn._addSysHandler(this._submit_unregister_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send(query);\n    },\n\n    _submit_unregister_cb: function (stanza) {\n        var i, error = null, conn = this._connection;\n\n        if (stanza.getAttribute(\"type\") === \"error\") {\n            error = stanza.getElementsByTagName(\"error\");\n            let error_text = stanza.getElementsByTagName(\"text\");\n            if (error_text.length > 0)\n                error_text = error_text[0].innerHTML;\n            if (error.length !== 1) {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n                return false;\n            }\n\n            Strophe.info(\"Unregistration failed.\");\n\n            // this is either 'conflict' or 'not-acceptable'\n            error = error[0].firstChild.tagName.toLowerCase();\n            if (error === 'conflict') {\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, error, error_text);\n            } else if (error === 'not-acceptable') {\n                conn._changeConnectStatus(Strophe.Status.NOTACCEPTABLE, error, error_text);\n            } else {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, error, error_text);\n            }\n        } else {\n            Strophe.info(\"Unregistration successful.\");\n\n            conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n\n        return false;\n    }\n});\n\n\nlet utf16to8 = function (str) {\n    let i, c;\n    let out = \"\";\n    let len = str.length;\n    for (i = 0; i < len; i++) {\n        c = str.charCodeAt(i);\n        if ((c >= 0x0000) && (c <= 0x007F)) {\n            out += str.charAt(i);\n        } else if (c > 0x07FF) {\n            out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));\n            out += String.fromCharCode(0x80 | ((c >>  6) & 0x3F));\n            out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n        } else {\n            out += String.fromCharCode(0xC0 | ((c >>  6) & 0x1F));\n            out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n        }\n    }\n    return out;\n};\n\nStrophe.SASLHOTP = function() {};\nStrophe.SASLHOTP.prototype = new Strophe.SASLMechanism(\"HOTP\", true, 100);\n\nStrophe.SASLHOTP.prototype.test = function (connection) {\n    return true;\n};\n\nStrophe.SASLHOTP.prototype.onChallenge = function (connection) {\n    let auth_str = String.fromCharCode(0) + connection.authcid +\n        String.fromCharCode(0) + connection.hotp_pass;\n    return utf16to8(auth_str);\n};\n\nStrophe.ConnectionManager = function (CONNECTION_URL, options) {\n    options = options || {};\n    this.connection = new Strophe.Connection(CONNECTION_URL, options);\n};\n\nStrophe.ConnectionManager.prototype = {\n    connect: function (auth_type, jid, password, callback) {\n        this.connection.mechanisms = {};\n        this.auth_type = auth_type || 'password';\n        if (this.auth_type === 'password') {\n            this.connection.registerSASLMechanisms([Strophe.SASLAnonymous,\n                Strophe.SASLExternal,\n                Strophe.SASLMD5,\n                Strophe.SASLPlain,\n                Strophe.SASLSHA1]);\n        } else if (this.auth_type === 'x-token') {\n            this.connection.registerSASLMechanism(Strophe.SASLHOTP);\n            delete this.connection._sasl_data[\"server-signature\"];\n            utils.generateHOTP(utils.fromBase64toArrayBuffer(password), this.connection.counter).then((pass) => {\n                this.connection.hotp_pass = pass;\n            }).then(() => {\n                this.connection.connect(jid, password, callback)\n            });\n            return;\n        } else {\n            this.connection.registerSASLMechanisms([Strophe.SASLXOAuth2]);\n            delete this.connection._sasl_data[\"server-signature\"];\n        }\n        this.connection.connect(jid, password, callback);\n    },\n\n    reconnect: function (callback) {\n        if (this.auth_type === 'x-token') {\n            if (!this.connection.mechanisms[\"HOTP\"]) {\n                this.connection.registerSASLMechanism(Strophe.SASLHOTP);\n                delete this.connection._sasl_data[\"server-signature\"];\n            }\n            if (this.connection.account && this.connection.account.get('hotp_counter'))\n                this.connection.counter = this.connection.account.get('hotp_counter');\n            utils.generateHOTP(utils.fromBase64toArrayBuffer(this.connection.pass), this.connection.counter).then((pass) => {\n                this.connection.hotp_pass = pass;\n            }).then(() => {\n                this.connection.connect(this.connection.jid, this.connection.pass, callback)\n            });\n            return;\n        }\n        this.connection.connect(this.connection.jid, this.connection.pass, callback);\n    }\n};\n\n_.extend(Strophe.Connection.prototype, {\n\n    _attemptSASLAuth: function (mechanisms) {\n        mechanisms = this.sortMechanismsByPriority(mechanisms || []);\n        var i = 0, mechanism_found = false;\n        for (i = 0; i < mechanisms.length; ++i) {\n            if (!mechanisms[i].prototype.test(this)) {\n                continue;\n            }\n            this._sasl_success_handler = this._addSysHandler(\n                this._sasl_success_cb.bind(this), null,\n                \"success\", null, null);\n            this._sasl_failure_handler = this._addSysHandler(\n                this._sasl_failure_cb.bind(this), null,\n                \"failure\", null, null);\n            this._sasl_challenge_handler = this._addSysHandler(\n                this._sasl_challenge_cb.bind(this), null,\n                \"challenge\", null, null);\n\n            this._sasl_mechanism = new mechanisms[i]();\n            this._sasl_mechanism.onStart(this);\n\n            var request_auth_exchange = $build(\"auth\", {\n                xmlns: Strophe.NS.SASL,\n                mechanism: this._sasl_mechanism.name\n            });\n            if (this._sasl_mechanism.isClientFirst) {\n                var response = this._sasl_mechanism.onChallenge(this, null);\n                request_auth_exchange.t(btoa(response));\n            }\n            this.send(request_auth_exchange.tree());\n            mechanism_found = true;\n            if (this.account && this.counter && this.account.get('x_token') && this._sasl_mechanism.name === \"HOTP\") {\n                this.counter++;\n                this.account.save({\n                    hotp_counter: this.counter,\n                });\n            }\n            break;\n        }\n        return mechanism_found;\n    },\n\n    _sasl_auth1_cb: function (elem) {\n        this.features = elem;\n        let i, child;\n        for (i = 0; i < elem.childNodes.length; i++) {\n            child = elem.childNodes[i];\n            if (child.nodeName === 'bind') {\n                this.do_bind = true;\n            }\n\n            if (child.nodeName === 'session') {\n                this.do_session = true;\n            }\n\n            if ((child.nodeName === 'devices') && child.namespaceURI === Strophe.NS.AUTH_DEVICES && this.options['x-token']) {\n                this.x_token_auth = true;\n            }\n\n            if ((child.nodeName === 'synchronization') && (child.namespaceURI === Strophe.NS.SYNCHRONIZATION)) {\n                this.account.server_features.create({\n                    'var': child.namespaceURI,\n                    from: this.domain\n                });\n                this.do_synchronization = true;\n            }\n\n            if ((child.nodeName === 'sub') && (child.namespaceURI === Strophe.NS.SUBSCRIPTION_PREAPPROVAL)) {\n                this.account.server_features.create({\n                    'var': child.namespaceURI,\n                    from: this.domain\n                });\n            }\n        }\n\n        if (!this.do_bind) {\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\n            return false;\n        } else {\n            if (this.x_token_auth && (!this.x_token || (parseInt(this.x_token.expire)*1000 < env.moment.now()))) {\n                this.getXToken((success) => {\n                    let token = $(success).find('secret').text(),\n                        expires_at = $(success).find('expire').text(),\n                        token_uid = $(success).find('device').attr('id');\n                    this.x_token = {token: token, expire: expires_at, token_uid: token_uid,};\n                    this.counter = 1;\n                    this.pass = token;\n                    this._send_auth_bind();\n                    if (this.account) {\n                        this.account.save({\n                            hotp_counter: this.counter,\n                            password: null,\n                        });\n                    }\n                }, () => {\n                    this._send_auth_bind();\n                });\n            }\n            else {\n                this._send_auth_bind();\n            }\n        }\n        return false;\n    },\n\n    _send_auth_bind() {\n        this._addSysHandler(this._sasl_bind_cb.bind(this), null, null,\n            null, \"_bind_auth_2\");\n\n        let resource = Strophe.getResourceFromJid(this.jid);\n        if (resource) {\n            this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                .c('bind', {xmlns: Strophe.NS.BIND})\n                .c('resource', {}).t(resource).tree());\n        } else {\n            this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                .c('bind', {xmlns: Strophe.NS.BIND})\n                .tree());\n        }\n    },\n\n    getXToken: function (callback, errback) {\n        let uniq_id = uuid(), old_token,\n            iq = $iq({\n            type: 'set',\n            to: this.domain,\n            id: uniq_id\n        }).c('register', { xmlns: Strophe.NS.AUTH_DEVICES});\n        this.account && (old_token = this.account.get('old_device_token'));\n        if (old_token && old_token.token && old_token.token_uid){\n            iq.c('device', { xmlns: Strophe.NS.AUTH_DEVICES, id: old_token.token_uid})\n                .c('client').t(xabber.get('client_name')).up()\n                .c('secret').t(old_token.token).up()\n                .c('info').t(`PC, ${utils.getOS()}, ${env.utils.getBrowser()}`);\n            this.account.save('old_device_token', null);\n        } else {\n            iq.c('device', { xmlns: Strophe.NS.AUTH_DEVICES})\n                .c('client').t(xabber.get('client_name')).up()\n                .c('info').t(`PC, ${utils.getOS()}, ${env.utils.getBrowser()}`);\n        }\n        let handler = function (stanza) {\n            let iqtype = stanza.getAttribute('type');\n            if (iqtype == 'result') {\n                if (callback) {\n                    callback(stanza);\n                }\n            } else if (iqtype == 'error') {\n                if (errback) {\n                    errback(stanza);\n                }\n            } else {\n                throw {\n                    name: \"StropheError\",\n                    message: \"Got bad IQ type of \" + iqtype\n                };\n            }\n        };\n\n        this._addSysHandler(handler.bind(this), Strophe.NS.AUTH_DEVICES, 'iq', 'result' , uniq_id);\n\n        this.send(iq.tree());\n    }\n});\n\n_.extend(Strophe.Websocket.prototype, {\n\n    _onIdle: function () {\n        var data = this._conn._data;\n        if (data.length > 0 && !this._conn.paused) {\n            for (var i = 0; i < data.length; i++) {\n                if (data[i] !== null) {\n                    var stanza, rawStanza;\n                    if (data[i] === \"restart\") {\n                        stanza = this._buildStream().tree();\n                    } else {\n                        stanza = data[i];\n                    }\n                    rawStanza = Strophe.serialize(stanza);\n                    this._conn.xmlOutput(stanza);\n                    this._conn.rawOutput(rawStanza);\n                    if (this.socket && this.socket.readyState === 1){\n                        this.socket.send(rawStanza);\n                    } else {\n                        console.log('data went to pending');\n                        console.log(this._conn._data.slice(i));\n                        this._conn.account._pending_stanzas.push(this._conn._data.slice(i))\n                        this._conn._data = [];\n                        return;\n                    }\n                }\n            }\n            this._conn._data = [];\n        }\n    },\n});\n\nStrophe.xmlunescape = function (text) {\n    let reg_exp = {\n        '&amp;': '&',\n        '&lt;': '<',\n        '&gt;': '>',\n        '&quot;': '\"',\n        '&apos;': \"'\"\n    };\n    let escaper = function(match) {\n        return reg_exp[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    let source = '(?:' + _.keys(reg_exp).join('|') + ')',\n        testRegexp = RegExp(source),\n        replaceRegexp = RegExp(source, 'g');\n    text = text == null ? '' : '' + text;\n    return testRegexp.test(text) ? text.replace(replaceRegexp, escaper) : text;\n};\n\nStrophe.addNamespace('ATTENTION', 'urn:xmpp:attention:0');\nStrophe.addNamespace('CARBONS', 'urn:xmpp:carbons:2');\nStrophe.addNamespace('FORWARD', 'urn:xmpp:forward:0');\nStrophe.addNamespace('HASH', 'urn:xmpp:hashes:2');\nStrophe.addNamespace('HINTS', 'urn:xmpp:hints');\nStrophe.addNamespace('SCE', 'urn:xmpp:sce:1');\nStrophe.addNamespace('RECEIPTS', 'urn:xmpp:receipts');\nStrophe.addNamespace('JINGLE', 'urn:xmpp:jingle:1');\nStrophe.addNamespace('JINGLE_SECURITY_STUB', 'urn:xmpp:jingle:security:stub:0');\nStrophe.addNamespace('JINGLE_MSG', 'urn:xmpp:jingle-message:0');\nStrophe.addNamespace('JINGLE_RTP', 'urn:xmpp:jingle:apps:rtp:1');\nStrophe.addNamespace('JINGLE_TRANSPORTS_ICE', 'urn:xmpp:jingle:transports:ice-udp:1');\nStrophe.addNamespace('ADDRESS', 'http://jabber.org/protocol/address');\nStrophe.addNamespace('CHATSTATES', 'http://jabber.org/protocol/chatstates');\nStrophe.addNamespace('EXTENDED_CHATSTATES', 'https://xabber.com/protocol/extended-chatstates');\nStrophe.addNamespace('HTTP_AUTH', 'http://jabber.org/protocol/http-auth');\nStrophe.addNamespace('AUTH_TOKENS', 'https://xabber.com/protocol/auth-tokens');\nStrophe.addNamespace('AUTH_DEVICES', 'https://xabber.com/protocol/devices');\nStrophe.addNamespace('SYNCHRONIZATION', 'https://xabber.com/protocol/synchronization');\nStrophe.addNamespace('SYNCHRONIZATION_REGULAR_CHAT', 'urn:xabber:chat');\nStrophe.addNamespace('SYNCHRONIZATION_CHANNEL', 'https://xabber.com/protocol/channels');\nStrophe.addNamespace('SYNCHRONIZATION_OLD_OMEMO', 'urn:xmpp:omemo:1');\nStrophe.addNamespace('SYNCHRONIZATION_OMEMO', 'urn:xmpp:omemo:2');\nStrophe.addNamespace('XABBER_CHAT', 'urn:xabber:chat');\nStrophe.addNamespace('EXPLICIT_MESSAGE_ENCRYPTION', 'urn:xmpp:eme:0');\nStrophe.addNamespace('DELIVERY', 'https://xabber.com/protocol/delivery');\nStrophe.addNamespace('ARCHIVE', 'https://xabber.com/protocol/archive');\nStrophe.addNamespace('MAM', 'urn:xmpp:mam:2');\nStrophe.addNamespace('RSM', 'http://jabber.org/protocol/rsm');\nStrophe.addNamespace('DATAFORM', 'jabber:x:data');\nStrophe.addNamespace('CHAT_MARKERS', 'urn:xmpp:chat-markers:0');\nStrophe.addNamespace('VCARD_UPDATE', 'vcard-temp:x:update');\nStrophe.addNamespace('HTTP_UPLOAD', 'urn:xmpp:http:upload');\nStrophe.addNamespace('BLOCKING', 'urn:xmpp:blocking');\nStrophe.addNamespace('SEARCH', 'jabber:iq:search');\nStrophe.addNamespace('PRIVATE_STORAGE', 'jabber:iq:private');\nStrophe.addNamespace('MEDIA', 'urn:xmpp:media-element');\nStrophe.addNamespace('LAST', 'jabber:iq:last');\nStrophe.addNamespace('GROUP_CHAT', 'https://xabber.com/protocol/groups');\nStrophe.addNamespace('GROUP_CHAT_INVITE', 'https://xabber.com/protocol/groups#invite');\nStrophe.addNamespace('GROUP_CHAT_INVITE_HTTP', 'http://xabber.com/protocol/groups#invite');\nStrophe.addNamespace('WEBCHAT', 'https://xabber.com/protocol/webchat');\nStrophe.addNamespace('INDEX', 'https://xabber.com/protocol/index');\nStrophe.addNamespace('PUBSUB', 'http://jabber.org/protocol/pubsub');\nStrophe.addNamespace('PUBSUB_AVATAR_DATA', 'urn:xmpp:avatar:data');\nStrophe.addNamespace('PUBSUB_AVATAR_METADATA', 'urn:xmpp:avatar:metadata');\nStrophe.addNamespace('PUBSUB_AVATAR_METADATA_THUMBNAIL', 'urn:xmpp:thumbs:1');\nStrophe.addNamespace('REWRITE', 'https://xabber.com/protocol/rewrite');\nStrophe.addNamespace('REFERENCE', 'https://xabber.com/protocol/references');\nStrophe.addNamespace('GEOLOC', 'http://jabber.org/protocol/geoloc');\nStrophe.addNamespace('MARKUP', 'https://xabber.com/protocol/markup');\nStrophe.addNamespace('VOICE_MESSAGE', 'https://xabber.com/protocol/voice-messages');\nStrophe.addNamespace('FILES', 'https://xabber.com/protocol/files');\nStrophe.addNamespace('SUBSCRIPTION_PREAPPROVAL', 'urn:xmpp:features:pre-approval');\nStrophe.addNamespace('OGP', 'https://xabber.com/protocol/ogp');\nStrophe.addNamespace('URLDISCO', 'urn:xabber:http:url');\nStrophe.addNamespace('MEDIAGALLERY', 'urn:xabber:http:url:mediagallery');\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.vcard,\n    $ = env.$,\n    _ = env._,\n    moment = env.moment,\n    Strophe = env.Strophe,\n    $iq = env.$iq,\n    $build = env.$build,\n    utils = env.utils;\n\nlet xmlToObject = function ($vcard) {\n    let vcard = {\n        nickname: $vcard.find('NICKNAME').text().trim(),\n        fullname: $vcard.find('FN').text().trim(),\n        first_name: $vcard.find('N GIVEN').text().trim(),\n        middle_name: $vcard.find('N MIDDLE').text().trim(),\n        last_name: $vcard.find('N FAMILY').text().trim(),\n        birthday: $vcard.find('BDAY').text().trim(),\n        job_title: $vcard.find('TITLE').text().trim(),\n        role: $vcard.find('ROLE').text().trim(),\n        url: $vcard.find('URL').text().trim(),\n        description: $vcard.find('DESC').text().trim(),\n        jabber_id: $vcard.find('JABBERID').text().trim(),\n        org: {},\n        photo: {},\n        phone: {},\n        address: {},\n        email: {}\n    };\n\n    if ($vcard.find('X-PRIVACY').length || $vcard.find('X-MEMBERSHIP').length || $vcard.find('X-INDEX').length) {\n        vcard.group_info = {\n            jid: vcard.jabber_id,\n            description: vcard.description,\n            name: vcard.nickname,\n            anonymous: $vcard.find('X-PRIVACY').text().trim(),\n            searchable: $vcard.find('X-INDEX').text().trim(),\n            model: $vcard.find('X-MEMBERSHIP').text().trim(),\n            status_msg: $vcard.find('X-STATUS').text().trim(),\n            members_num: $vcard.find('X-MEMBERS').text().trim()\n        };\n    }\n\n    let $org = $vcard.find('ORG');\n    if ($org.length) {\n        vcard.org.name = $org.find('ORGNAME').text().trim();\n        vcard.org.unit = $org.find('ORGUNIT').text().trim();\n    }\n\n    let $photo = $vcard.find('PHOTO');\n    if ($photo.length) {\n        vcard.photo.image = $photo.find('BINVAL').text().trim();\n        vcard.photo.type = $photo.find('TYPE').text().trim();\n    }\n\n    $vcard.find('TEL').each(function () {\n        let $this = $(this),\n            number = $this.find('NUMBER').text().trim();\n        if (!number) {\n            return;\n        }\n        if ($this.find('WORK').length) {\n            vcard.phone.work = number;\n        } else if ($this.find('HOME').length) {\n            vcard.phone.home = number;\n        } else if ($this.find('MOBILE').length) {\n            vcard.phone.mobile = number;\n        } else {\n            vcard.phone.default = number;\n        }\n    });\n\n    $vcard.find('EMAIL').each(function () {\n        let $this = $(this);\n        let email = $this.find('USERID').text().trim();\n        if (!email) {\n            return;\n        }\n        if ($this.find('WORK').length) {\n            vcard.email.work = email;\n        } else if ($this.find('HOME').length) {\n            vcard.email.home = email;\n        } else {\n            vcard.email.default = email;\n        }\n    });\n\n    $vcard.find('ADR').each(function () {\n        let $this = $(this);\n        let address = {\n            pobox: $this.find('POBOX').text().trim(),\n            extadd: $this.find('EXTADR').text().trim(),\n            street: $this.find('STREET').text().trim(),\n            locality: $this.find('LOCALITY').text().trim(),\n            region: $this.find('REGION').text().trim(),\n            pcode: $this.find('PCODE').text().trim(),\n            country: $this.find('CTRY').text().trim()\n        };\n        if ($this.find('WORK').length) {\n            vcard.address.work = address;\n        } else if ($this.find('HOME').length) {\n            vcard.address.home = address;\n        } else {\n            vcard.address.default = address;\n        }\n    });\n\n    return vcard;\n};\n\nlet objectToXml = function (vcard) {\n    let $vcard = $build(\"vCard\", {xmlns: Strophe.NS.VCARD});\n    vcard.nickname && $vcard.c(\"NICKNAME\").t(vcard.nickname).up();\n    vcard.fullname && $vcard.c(\"FN\").t(vcard.fullname).up();\n    if (vcard.first_name || vcard.last_name || vcard.middle_name) {\n        $vcard.c(\"N\");\n        vcard.first_name && $vcard.c(\"GIVEN\").t(vcard.first_name).up();\n        vcard.last_name && $vcard.c(\"FAMILY\").t(vcard.last_name).up();\n        vcard.middle_name && $vcard.c(\"MIDDLE\").t(vcard.middle_name).up();\n        $vcard.up();\n    }\n    vcard.birthday && $vcard.c(\"BDAY\").t(vcard.birthday).up();\n    vcard.job_title && $vcard.c(\"TITLE\").t(vcard.job_title).up();\n    vcard.role && $vcard.c(\"ROLE\").t(vcard.role).up();\n    if (vcard.org.name || vcard.org.unit) {\n        $vcard.c(\"ORG\");\n        vcard.org.name && $vcard.c(\"ORGNAME\").t(vcard.org.name).up();\n        vcard.org.unit && $vcard.c(\"ORGUNIT\").t(vcard.org.unit).up();\n        $vcard.up();\n    }\n    vcard.url && $vcard.c(\"URL\").t(vcard.url).up();\n    if (vcard.photo.image) {\n        $vcard.c(\"PHOTO\").c(\"BINVAL\").t(vcard.photo.image).up();\n        $vcard.c(\"TYPE\").t(vcard.photo.type || 'image/jpeg').up();\n        $vcard.up();\n    }\n    vcard.description && $vcard.c(\"DESC\").t(vcard.description).up();\n    vcard.jabber_id && $vcard.c(\"JABBERID\").t(vcard.jabber_id).up();\n\n    _.each(vcard.phone, function (phone, type) {\n        $vcard.c(\"TEL\").c(\"NUMBER\").t(phone).up();\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        $vcard.up();\n    });\n\n    _.each(vcard.email, function (email, type) {\n        $vcard.c(\"EMAIL\").c(\"USERID\").t(email).up();\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        $vcard.up();\n    });\n\n    _.each(vcard.address, function (address, type) {\n        $vcard.c(\"ADR\");\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        address.pobox && $vcard.c(\"POBOX\").t(address.pobox).up();\n        address.extadd && $vcard.c(\"EXTADR\").t(address.extadd).up();\n        address.street && $vcard.c(\"STREET\").t(address.street).up();\n        address.locality && $vcard.c(\"LOCALITY\").t(address.locality).up();\n        address.region && $vcard.c(\"REGION\").t(address.region).up();\n        address.pcode && $vcard.c(\"PCODE\").t(address.pcode).up();\n        address.country && $vcard.c(\"CTRY\").t(address.country).up();\n        $vcard.up();\n    });\n\n    return $vcard.tree();\n};\n\nStrophe.addConnectionPlugin('vcard', {\n    _connection: null,\n\n    init: function(conn) {\n        this._connection = conn;\n        return Strophe.addNamespace('VCARD', 'vcard-temp');\n    },\n\n    get: function(jid, callback, errback) {\n        let iq = $iq({type: 'get', to: jid}).c('vCard', {xmlns: Strophe.NS.VCARD});\n        this._connection.sendIQ(iq, function (res) {\n            if (!callback) { return; }\n            let vcard = xmlToObject($(res).find('vCard[xmlns='+Strophe.NS.VCARD+']'));\n            vcard.jabber_id || (vcard.jabber_id = jid);\n            return callback(vcard);\n        }, errback);\n    },\n\n    set: function(jid, vcard, callback, errback) {\n        vcard.jabber_id || (vcard.jabber_id = jid);\n        let iq = $iq({type: 'set', to: jid}).cnode(objectToXml(vcard));\n        this._connection.sendIQ(iq, callback, errback);\n    }\n});\n\nutils.vcard = {\n    getBlank: function (jid) {\n        let vcard = xmlToObject($('<div/>'));\n        vcard.jabber_id = jid;\n        return vcard;\n    }\n};\n\nxabber.VCardView = xabber.BasicView.extend({\n    template: templates.vcard,\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.model.on(\"change:vcard_updated\", this.update, this);\n        this.data.on(\"change:refresh\", this.updateRefreshButton, this);\n    },\n\n    render: function () {\n        this.$('.block-header .block-name').text(this.model.get('group_chat') ? 'Group chat details' : xabber.getString(\"vcard_screen__header\"));\n        this.data.set('refresh', false);\n        this.model.getVCard(() => {\n            this.update();\n        });\n    },\n\n    update: function () {\n        let $info, vcard = this.model.get('vcard');\n\n        $info = this.$('.jid-info-wrap');\n        $info.find('.jabber-id').showIf(vcard.jabber_id).find('.value').text(vcard.jabber_id);\n        $info.showIf(vcard.jabber_id);\n\n        $info = this.$('.personal-info-wrap');\n        $info.find('.fullname').showIf(vcard.fullname).find('.value').text(vcard.fullname);\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.middle-name').showIf(vcard.middle_name).find('.value').text(vcard.middle_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.fullname || vcard.first_name || vcard.middle_name || vcard.last_name);\n\n        $info = this.$('.nickname-info-wrap');\n        $info.find('.nickname').showIf(vcard.nickname).find('.value').text(vcard.nickname);\n        $info.showIf(vcard.nickname);\n\n        $info = this.$('.birthday-info-wrap');\n        $info.find('.birthday').showIf(vcard.birthday).find('.value').text(vcard.birthday);\n        $info.showIf(vcard.birthday);\n\n        $info = this.$('.job-info-wrap');\n        $info.find('.role').showIf(vcard.role).find('.value').text(vcard.role);\n        $info.find('.job-title').showIf(vcard.job_title).find('.value').text(vcard.job_title);\n        $info.find('.org-name').showIf(vcard.org.name).find('.value').text(vcard.org.name);\n        $info.find('.org-unit').showIf(vcard.org.unit).find('.value').text(vcard.org.unit);\n        $info.showIf(vcard.role || vcard.job_title || vcard.org.name || vcard.org.unit);\n\n        $info = this.$('.site-info-wrap');\n        $info.find('.url').showIf(vcard.url).find('.value').text(vcard.url).hyperlinkify();\n        $info.showIf(vcard.url);\n\n        $info = this.$('.description-info-wrap');\n        $info.find('.description').showIf(vcard.description).find('.value').text(vcard.description);\n        $info.showIf(vcard.description);\n\n        let $addr_info = this.$('.address-info-wrap'),\n            address = _.clone(vcard.address),\n            show_addr_block = false;\n        $addr_info.find('.info').addClass('hidden');\n        _.each(address, function (addr, type) {\n            $info = $addr_info.find('.address-'+type);\n            $info.find('.pobox').showIf(addr.pobox).text(addr.pobox);\n            $info.find('.extadd').showIf(addr.extadd).text(addr.extadd);\n            $info.find('.street').showIf(addr.street).text(addr.street);\n            $info.find('.locality').showIf(addr.locality).text(addr.locality);\n            $info.find('.region').showIf(addr.region).text(addr.region);\n            $info.find('.pcode').showIf(addr.pcode).text(addr.pcode);\n            $info.find('.country').showIf(addr.country).text(addr.country);\n            let show = (addr.pobox || addr.extadd || addr.street || addr.locality ||\n                         addr.region || addr.pcode || addr.country);\n            show && (show_addr_block = true);\n            $info.showIf(show);\n        });\n        $addr_info.showIf(show_addr_block);\n\n        $info = this.$('.phone-info-wrap');\n        let phone = vcard.phone;\n        if (phone) {\n            $info.find('.phone-work').showIf(phone.work).find('.value').text(phone.work);\n            $info.find('.phone-home').showIf(phone.home).find('.value').text(phone.home);\n            $info.find('.phone-mobile').showIf(phone.mobile).find('.value').text(phone.mobile);\n            $info.find('.phone-default').showIf(phone.default).find('.value').text(phone.default);\n        }\n        $info.showIf(phone && (phone.work || phone.home || phone.mobile || phone.default));\n\n        $info = this.$('.email-info-wrap');\n        let email = vcard.email;\n        if (email) {\n            $info.find('.email-work').showIf(email.work).find('.value').text(email.work);\n            $info.find('.email-home').showIf(email.home).find('.value').text(email.home);\n            $info.find('.email-default').showIf(email.default).find('.value').text(email.default);\n        }\n        $info.showIf(email && (email.work || email.home || email.default));\n\n        this.parent.updateScrollBar();\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target).closest('.info-wrap'),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n    updateRefreshButton: function () {\n        this.$('.btn-vcard-refresh .button').hideIf(this.data.get('refresh'));\n        this.$('.btn-vcard-refresh .preloader-wrapper').showIf(this.data.get('refresh'));\n    },\n\n    refresh: function () {\n        if (!this.data.get('refresh')) {\n            this.data.set('refresh', true);\n            this.model.getVCard(() => {\n                this.data.set('refresh', false);\n            });\n        }\n    }\n});\n\nxabber.VCardRightView = xabber.VCardView.extend({\n    template: templates.vcard_right,\n\n    __initialize: function (ev) {\n        this.ps_container = this.$('.full-vcard-content');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.set('vcard_hidden', true)\n    },\n\n    render: function () {\n        this.data.set('refresh', false);\n        this.update();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        if (this.parent.ps_container.length) {\n            if(!this.model.get('vcard_hidden'))\n                this.parent.ps_container.perfectScrollbar('destroy')\n            else\n                this.parent.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n        }\n        this.model.updateName();\n        this.model.updateAvatar();\n        this.model.getVCard(() => {\n            this.update();\n        });\n    },\n\n    update: function () {\n        let $info, vcard = this.model.get('vcard');\n\n        $info = this.$('.jid-info-wrap');\n        $info.find('.jabber-id').showIf(vcard.jabber_id).find('.value').text(vcard.jabber_id);\n        $info.showIf(vcard.jabber_id);\n\n        $info = this.$('.vcard-wrap .personal-info-wrap');\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.first_name || vcard.last_name);\n\n        $info = this.$('.full-vcard-wrap .personal-info-wrap');\n        $info.find('.fullname').showIf(vcard.fullname).find('.value').text(vcard.fullname);\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.middle-name').showIf(vcard.middle_name).find('.value').text(vcard.middle_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.fullname || vcard.first_name || vcard.middle_name || vcard.last_name);\n\n        $info = this.$('.nickname-info-wrap');\n        $info.find('.nickname').showIf(vcard.nickname).find('.value').text(vcard.nickname);\n        $info.showIf(vcard.nickname);\n\n        $info = this.$('.birthday-info-wrap');\n        $info.find('.birthday').showIf(vcard.birthday).find('.value').text(vcard.birthday);\n        $info.showIf(vcard.birthday);\n\n        $info = this.$('.job-info-wrap');\n        $info.find('.role').showIf(vcard.role).find('.value').text(vcard.role);\n        $info.find('.job-title').showIf(vcard.job_title).find('.value').text(vcard.job_title);\n        $info.find('.org-name').showIf(vcard.org.name).find('.value').text(vcard.org.name);\n        $info.find('.org-unit').showIf(vcard.org.unit).find('.value').text(vcard.org.unit);\n        $info.showIf(vcard.role || vcard.job_title || vcard.org.name || vcard.org.unit);\n\n        $info = this.$('.site-info-wrap');\n        $info.find('.url').showIf(vcard.url).find('.value').text(vcard.url).hyperlinkify();\n        $info.showIf(vcard.url);\n\n        $info = this.$('.description-info-wrap');\n        $info.find('.description').showIf(vcard.description).find('.value').text(vcard.description);\n        $info.showIf(vcard.description);\n\n        let $addr_info = this.$('.address-info-wrap'),\n            address = _.clone(vcard.address),\n            show_addr_block = false;\n        $addr_info.find('.info').addClass('hidden');\n        _.each(address, function (addr, type) {\n            $info = $addr_info.find('.address-'+type);\n            $info.find('.pobox').showIf(addr.pobox).text(addr.pobox);\n            $info.find('.extadd').showIf(addr.extadd).text(addr.extadd);\n            $info.find('.street').showIf(addr.street).text(addr.street);\n            $info.find('.locality').showIf(addr.locality).text(addr.locality);\n            $info.find('.region').showIf(addr.region).text(addr.region);\n            $info.find('.pcode').showIf(addr.pcode).text(addr.pcode);\n            $info.find('.country').showIf(addr.country).text(addr.country);\n            let show = (addr.pobox || addr.extadd || addr.street || addr.locality ||\n                addr.region || addr.pcode || addr.country);\n            show && (show_addr_block = true);\n            $info.showIf(show);\n        });\n        $addr_info.showIf(show_addr_block);\n\n        $info = this.$('.phone-info-wrap');\n        let phone = vcard.phone;\n        if (phone) {\n            $info.find('.phone-work').showIf(phone.work).find('.value').text(phone.work);\n            $info.find('.phone-home').showIf(phone.home).find('.value').text(phone.home);\n            $info.find('.phone-mobile').showIf(phone.mobile).find('.value').text(phone.mobile);\n            $info.find('.phone-default').showIf(phone.default).find('.value').text(phone.default);\n        }\n        $info.showIf(phone && (phone.work || phone.home || phone.mobile || phone.default));\n\n        $info = this.$('.email-info-wrap');\n        let email = vcard.email;\n        if (email) {\n            $info.find('.email-work').showIf(email.work).find('.value').text(email.work);\n            $info.find('.email-home').showIf(email.home).find('.value').text(email.home);\n            $info.find('.email-default').showIf(email.default).find('.value').text(email.default);\n        }\n        $info.showIf(email && (email.work || email.home || email.default));\n\n        this.parent.updateScrollBar();\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.vcard-header-title').addClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n        }\n        else {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        }\n\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n});\n\nxabber.VCardEditModalView = xabber.BasicView.extend({\n    className: 'account-vcard-edit-modal-wrap account-vcard-edit-wrap',\n    template: templates.vcard_edit_modal,\n    ps_selector: '.panel-content',\n\n    events: {\n        \"keyup input\": \"keyUp\",\n        \"keyup textarea\": \"keyUp\",\n        \"input .first-name input\": \"changePlaceholder\",\n        \"input .middle-name input\": \"changePlaceholder\",\n        \"input .last-name input\": \"changePlaceholder\",\n        \"click .btn-vcard-save\": \"save\",\n    },\n\n    _initialize: function () {\n        let self = this,\n            $input = this.$('.datepicker').pickadate({\n            selectMonths: true,\n            selectYears: 100,\n            autoOk: false,\n            // min = 100 years ago\n            min: new Date(moment.now() - 3153600000000),\n            max: new Date(moment.now() - 86400000),\n            format: 'dd.mm.yyyy',\n            allowKeyboardControl: false,\n            today: '',\n            onClose: function(){\n                $(document.activeElement).blur();\n                self.$('.btn-vcard-back').removeClass('hidden');\n                self.$('.btn-vcard-save').removeClass('hidden');\n            },\n            klass: {\n                weekday_display: 'picker__weekday-display ground-color-700',\n                date_display: 'picker__date-display ground-color-500',\n                navPrev: 'picker__nav--prev hover-ground-color-100',\n                navNext: 'picker__nav--next hover-ground-color-100',\n                selected: 'picker__day--selected ground-color-500',\n                now: 'picker__day--today text-color-700',\n                buttonClear: 'btn-flat btn-main btn-dark',\n                buttonClose: 'btn-flat btn-main text-color-700'\n            }\n        });\n        $input.on('mousedown', function cancelEvent(evt) {\n            evt.preventDefault();\n        });\n        this.data.on(\"change:saving\", this.updateSaveButton, this);\n    },\n\n    render: function (options) {\n        options.$el.html('');\n        options.$el.append(this.$el);\n        this.data.set('saving', false);\n        this.setData();\n        Materialize.updateTextFields();\n        this.changePlaceholder();\n        this.updateScrollBar();\n        this.$('.btn-vcard-save').addClass('hidden');\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    changePlaceholder: function () {\n        let nickname_placeholder = ((this.$('.first-name input').val() + \" \" + this.$('.middle-name input').val()).trim() + \" \" + this.$('.last-name input').val()).trim() || this.model.get('jid');\n        this.$('.nickname input').attr('placeholder', nickname_placeholder);\n    },\n\n    setData: function () {\n        let vcard = this.model.get('vcard');\n\n        this.$('.nickname input').val(vcard.nickname);\n        this.$('.fullname input').val(vcard.fullname);\n        this.$('.first-name input').val(vcard.first_name);\n        this.$('.last-name input').val(vcard.last_name);\n        this.$('.middle-name input').val(vcard.middle_name);\n\n        this.$('.birthday input').val(vcard.birthday);\n\n        this.$('.role input').val(vcard.role);\n        this.$('.job-title input').val(vcard.job_title);\n        this.$('.org-name input').val(vcard.org.name);\n        this.$('.org-unit input').val(vcard.org.unit);\n\n        this.$('.url input').val(vcard.url);\n\n        this.$('.description textarea').val(vcard.description);\n\n        this.$('.phone-work input').val(vcard.phone.work);\n        this.$('.phone-home input').val(vcard.phone.home);\n        this.$('.phone-mobile input').val(vcard.phone.mobile);\n\n        this.$('.email-work input').val(vcard.email.work);\n        this.$('.email-home input').val(vcard.email.home);\n\n        let addr = vcard.address.work || {},\n            $info = this.$('.address-work-wrap');\n        $info.find('.pobox input').val(addr.pobox);\n        $info.find('.extadd input').val(addr.extadd);\n        $info.find('.street input').val(addr.street);\n        $info.find('.locality input').val(addr.locality);\n        $info.find('.region input').val(addr.region);\n        $info.find('.pcode input').val(addr.pcode);\n        $info.find('.country input').val(addr.country);\n\n        addr = vcard.address.home || {};\n        $info = this.$('.address-home-wrap');\n        $info.find('.pobox input').val(addr.pobox);\n        $info.find('.extadd input').val(addr.extadd);\n        $info.find('.street input').val(addr.street);\n        $info.find('.locality input').val(addr.locality);\n        $info.find('.region input').val(addr.region);\n        $info.find('.pcode input').val(addr.pcode);\n        $info.find('.country input').val(addr.country);\n    },\n\n    getData: function () {\n        let vcard = utils.vcard.getBlank(this.model.get('jid'));\n\n        vcard.nickname = this.$('.nickname input').val();\n        vcard.fullname = this.$('.fullname input').val();\n        vcard.first_name = this.$('.first-name input').val();\n        vcard.last_name = this.$('.last-name input').val();\n        vcard.middle_name = this.$('.middle-name input').val();\n\n        vcard.birthday = this.$('.birthday input').val();\n\n        vcard.role = this.$('.role input').val();\n        vcard.job_title = this.$('.job-title input').val();\n        vcard.org.name = this.$('.org-name input').val();\n        vcard.org.unit = this.$('.org-unit input').val();\n\n        vcard.url = this.$('.url input').val();\n\n        vcard.description = this.$('.description textarea').val();\n\n        vcard.phone.work = this.$('.phone-work input').val();\n        vcard.phone.home = this.$('.phone-home input').val();\n        vcard.phone.mobile = this.$('.phone-mobile input').val();\n\n        vcard.email.work = this.$('.email-work input').val();\n        vcard.email.home = this.$('.email-home input').val();\n\n        vcard.address.work = {};\n        let addr = vcard.address.work,\n            $info = this.$('.address-work-wrap');\n        addr.pobox = $info.find('.pobox input').val();\n        addr.extadd = $info.find('.extadd input').val();\n        addr.street = $info.find('.street input').val();\n        addr.locality = $info.find('.locality input').val();\n        addr.region = $info.find('.region input').val();\n        addr.pcode = $info.find('.pcode input').val();\n        addr.country = $info.find('.country input').val();\n\n        vcard.address.home = {};\n        addr = vcard.address.home;\n        $info = this.$('.address-home-wrap');\n        addr.pobox = $info.find('.pobox input').val();\n        addr.extadd = $info.find('.extadd input').val();\n        addr.street = $info.find('.street input').val();\n        addr.locality = $info.find('.locality input').val();\n        addr.region = $info.find('.region input').val();\n        addr.pcode = $info.find('.pcode input').val();\n        addr.country = $info.find('.country input').val();\n        return vcard;\n    },\n\n    updateSaveButton: function () {\n        this.$('.btn-vcard-save').text(this.data.get('saving') ? xabber.getString(\"saving\") : xabber.getString(\"vcard_edit__button_save\"));\n    },\n\n    save: function () {\n        if (this.data.get('saving')) {\n            return;\n        }\n        this.data.set('saving', true);\n        this.model.setVCard(this.getData(),\n            () => {\n                this.model.getVCard();\n                this.data.set('saving', false);\n                this.$('.btn-vcard-back').addClass('hidden');\n                this.$('.btn-vcard-save').addClass('hidden');\n            },\n            function () {\n                utils.dialogs.error(xabber.getString(\"account_user_info_save_fail\"));\n                this.data.set('saving', false);\n            }\n        );\n    },\n\n    keyUp: function () {\n        this.$('.btn-vcard-back').removeClass('hidden');\n        this.$('.btn-vcard-save').removeClass('hidden');\n    },\n});\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.accounts,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $pres = env.$pres,\n    uuid = env.uuid,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    Images = utils.images,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')},\n    pretty_datetime_date = (timestamp) => { return utils.pretty_datetime(timestamp, 'MMM DD, YYYY')};\n\n\nxabber.Account = Backbone.Model.extend({\n        idAttribute: 'jid',\n\n        defaults: () => {\n            return {\n                enabled: true,\n                auth_type: \"password\",\n                status: \"online\",\n                status_message: \"\",\n                priority: 67,\n                auto_login_xa: false,\n                account_unique_id: uuid().substring(0, 8),\n                groupchat_servers_list: []\n            }\n        },\n\n        initialize: function (_attrs, options) {\n            this.retraction_version = null;\n            options || (options = {});\n            if (_attrs.is_new && !options.auth_view) {\n                this.is_invalid = true;\n                this.on(\"destroy\", this.onDestroy, this);\n                return;\n            }\n            this.last_msg_timestamp = 0;\n            this.settings = xabber.account_settings_list.get(_attrs.jid);\n            if (!this.settings) {\n                this.settings = xabber.account_settings_list.create({\n                    jid: _attrs.jid,\n                    timestamp: utils.now(),\n                });\n            }\n            let settings = _.clone(this.settings.attributes);\n            settings.color || (settings.color = this.collection.getDefaultColor());\n            settings.order || (settings.order = this.collection.getLastOrder() + 1);\n            this.settings.save(settings);\n            this.settings.on(\"delete_account\", this.deleteAccount, this);\n            let attrs = _.clone(_attrs);\n            attrs.name || (attrs.name = attrs.jid);\n            attrs.image || (attrs.image = Images.getDefaultAvatar(attrs.name));\n            this.cached_image = Images.getCachedImage(attrs.image);\n            attrs.vcard = utils.vcard.getBlank(attrs.jid);\n            attrs.photo_hash = '';\n            this.save(attrs);\n            this.auth_view = options.auth_view || null;\n            this.session = new Backbone.Model({\n                connected: false,\n                reconnected: false,\n                ready_to_send: false,\n                conn_retries: 0,\n                conn_feedback: xabber.getString(\"connection__error__text_disconnected\")\n            });\n            this._waiting_code = false;\n            this.code_requests = [];\n            this.gallery_code_requests = [];\n            this.xabber_auth = {};\n            this.session.on(\"change:connected\", this.onChangedConnected, this);\n            this.CONNECTION_URL = _attrs.websocket_connection_url || constants.CONNECTION_URL;\n            this.conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL, {'x-token': true});\n            this.connection = this.conn_manager.connection;\n            this.get('x_token') && (this.connection.x_token = this.get('x_token'));\n            if (this.connection.x_token && this.connection.x_token.counter && !this.get('hotp_counter'))\n                this.save({\n                    hotp_counter: this.connection.x_token.counter,\n                });\n            this.get('hotp_counter') && (this.connection.counter = this.get('hotp_counter'));\n            this.on(\"destroy\", this.onDestroy, this);\n            this._added_pres_handlers = [];\n            this._pending_stanzas = [];\n            this._pending_messages = [];\n            this.dfd_presence = new $.Deferred();\n            this.resources = new xabber.AccountResources(null, {account: this});\n            this.password_view = new xabber.ChangePasswordView({model: this});\n            this.updateColorScheme();\n            this.settings.on(\"change:color\", this.updateColorScheme, this);\n            this.on(\"change:photo_hash\", this.getVCard, this);\n            _.each(this._init_plugins, (plugin) => {\n                plugin.call(this);\n            });\n            this.connection.xmlInput = function (xml) {\n                xabber.info('input main connection');\n                xabber.info(xml);\n            };\n            this.connection.xmlOutput = function (xml) {\n                xabber.info('output main connection');\n                xabber.info(xml);\n            };\n            this.once(\"start\", this.start, this);\n            xabber.on(\"start_accounts\", () => {\n                this.trigger('start');\n            }, this);\n        },\n\n        start: function () {\n            this.get('enabled') && this.isOnline() && this.connect();\n        },\n\n        _init_plugins: [],\n\n        getPassword: function () {\n            try {\n                return utils.atou(this.get('password'));\n            } catch (e) {\n                return '';\n            }\n        },\n\n        isConnected: function () {\n            return this.session && this.session.get('connected');\n        },\n\n        isReconnecting: function () {\n            return this.session && this.session.get('reconnecting');\n        },\n\n        isOnline: function () {\n            return this.get('status') !== 'offline';\n        },\n\n        sendMsg: function (stanza, callback) {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.session.get('ready_to_send') && this.get('status') !== 'offline';\n            if (res) {\n                this.connection.send(stanza);\n            }\n            callback && callback();\n            return res;\n        },\n\n        sendMsgPending: function (stanza) {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline';\n            if (res) {\n                this.connection.send(stanza);\n            }\n            return res;\n        },\n\n        sendMsgFast: function (stanza, callback) {\n            return this.sendMsg(stanza, callback);\n        },\n\n        getConnectionForIQ: function () {\n            let res = this.fast_connection && !this.fast_connection.disconnecting && this.fast_connection.authenticated && this.fast_connection.connected && this.get('status') !== 'offline';\n            if (res) {\n                return this.fast_connection;\n            } else\n                return this.connection;\n        },\n\n        sendIQFast: function () {\n            let res = this.fast_connection && !this.fast_connection.disconnecting && this.fast_connection.authenticated && this.fast_connection.connected && this.get('status') !== 'offline';\n            if (res) {\n                this.fast_connection.sendIQ.apply(this.fast_connection, arguments);\n                return res;\n            } else\n                return this.sendIQ.apply(this, arguments);\n        },\n\n        sendFast: function (stanza, callback, errback) {\n            if ($(stanza.nodeTree).first().is('message')) {\n                this.sendMsgFast(stanza, callback);\n            } else {\n                this.sendIQFast(stanza, callback, errback);\n            }\n        },\n\n        pubAvatar: function (image, callback, errback) {\n            if (!image) {\n                this.removeAvatar(callback, errback);\n                return;\n            }\n            let dfd = new $.Deferred();\n\n            dfd.done((data, http_avatar) => {\n                if (http_avatar) {\n                    let avatar_hash = data.hash || image.hash || sha1(image.base64),\n                        iq_pub_metadata = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('item', {id: avatar_hash})\n                            .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('info', {bytes: data.size, id: avatar_hash, type: data.type, url: data.file});\n                    data.thumbnails && data.thumbnails.forEach((thumbnail) => {\n                        iq_pub_metadata.c('thumbnail', {\n                            xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA_THUMBNAIL,\n                            url: thumbnail.url,\n                            width: thumbnail.width,\n                            height: thumbnail.height,\n                        }).up()\n                    })\n                    this.sendIQFast(iq_pub_metadata, () => {\n                            callback && callback(avatar_hash);\n                        },\n                        function (data_error) {\n                            errback && errback(data_error);\n                        });\n                }\n                else {\n                    let avatar_hash = image.hash || sha1(image.base64),\n                        iq_pub_data = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_DATA})\n                            .c('item', {id: avatar_hash})\n                            .c('data', {xmlns: Strophe.NS.PUBSUB_AVATAR_DATA}).t(data),\n                        iq_pub_metadata = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('item', {id: avatar_hash})\n                            .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('info', {bytes: image.size, id: avatar_hash, type: image.type});\n                    this.sendIQFast(iq_pub_data, () => {\n                            this.sendIQFast(iq_pub_metadata, () => {\n                                    callback && callback(avatar_hash);\n                                },\n                                function (data_error) {\n                                    errback && errback(data_error);\n                                });\n                        },\n                        (data_error) => {\n                            errback && errback(data_error);\n                        });\n                }\n            });\n            if (image.uploaded){\n                dfd.resolve(image, true)\n            }\n            else if (this.get('gallery_token') && this.get('gallery_url') && !image.generated && !image.uploaded){\n                let file = image.name ? image : image.file;\n                this.uploadAvatar(file, (res) => {\n                    if (res.thumbnails && res.thumbnails.length || res.file){\n                        res.type = file.type;\n                        dfd.resolve(res, true)\n                    } else\n                        dfd.resolve(image.base64)\n                }, (res) => {\n                    dfd.resolve(image.base64)\n                });\n            } else\n                dfd.resolve(image.base64)\n        },\n\n        removeAvatar: function (callback, errback) {\n            let iq_pub_metadata = $iq({type: 'set'})\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                .c('item')\n                .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA});\n            this.sendIQFast(iq_pub_metadata, () => {\n                    callback && callback();\n                },\n                function () {\n                    errback && errback();\n                });\n        },\n\n        getAvatar: function (avatar, callback, errback) {\n            let iq_request_avatar = $iq({type: 'get', to: this.get('jid')})\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('items', {node: Strophe.NS.PUBSUB_AVATAR_DATA})\n                .c('item', {id: avatar});\n            this.sendIQFast(iq_request_avatar, (iq) => {\n                let pubsub_avatar = $(iq).find('data').text();\n                if (pubsub_avatar == \"\")\n                    errback && errback(xabber.getString(\"pubsub__error__text_empty_node\"));\n                else\n                    callback && callback(pubsub_avatar);\n            });\n        },\n\n        sendIQ: function () {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline';\n            if (res) {\n                let elem = arguments[0];\n                if (typeof(elem.tree) === \"function\" && elem.tree().getAttribute('type') == 'get') {\n                    let lang = xabber.settings.language;\n                    (lang == 'default') && (lang = xabber.get('default_language'));\n                    elem.tree().setAttribute('xml:lang', lang);\n                }\n                this.connection.sendIQ.apply(this.connection, arguments);\n            } else {\n                if (!(arguments[0] && $(arguments[0].nodeTree).find('query[xmlns=\"' + Strophe.NS.MAM + '\"]').length)) {\n                    this._pending_stanzas.push({stanza: arguments, is_iq: true});\n                }\n            }\n            return res;\n        },\n\n        parseDataForm: function ($dataform, options) {\n            options = options || {};\n            let type = $dataform.attr('type'),\n                title = $dataform.children('title').text(),\n                instructions = $dataform.children('instructions').text(),\n                fields = [],\n                data_form = {};\n            $dataform.children('field').each((idx, field) => {\n                let $field = $(field),\n                    attrs = {},\n                    field_var = $field.attr('var'),\n                    field_type = $field.attr('type'),\n                    field_label = $field.attr('label'),\n                    field_value = [], field_options = [];\n                $field.children('value').each((i, value) => {\n                    field_value.push($(value).text());\n                });\n                $field.children('option').each((i, option) => {\n                    let $option = $(option),\n                        val = $option.children('value').text(),\n                        lbl = $option.attr('label');\n                    field_options.push({value: val, label: lbl});\n                });\n                field_var && (attrs.var = field_var);\n                field_type && (attrs.type = field_type);\n                field_label && (attrs.label = field_label);\n                field_value.length && (attrs.values = field_value);\n                field_options.length && (attrs.options = field_options);\n                fields.push(attrs);\n            });\n            type && (data_form.type = type);\n            title && (data_form.title = title);\n            instructions && (data_form.instructions = instructions);\n            fields.length && (data_form.fields = fields);\n            return data_form;\n        },\n\n        addDataFormToStanza: function ($stanza, data_form) {\n            $stanza.c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'});\n            data_form.title && $stanza.c('title').t(data_form.title).up();\n            data_form.instructions && $stanza.c('instructions').t(data_form.instructions).up();\n            data_form.fields.forEach((field) => {\n                let field_attrs = _.clone(field);\n                delete field_attrs.values;\n                delete field_attrs.options;\n                $stanza.c('field', field_attrs);\n                field.values && field.values.forEach((value) => {\n                    $stanza.c('value').t(value).up();\n                });\n                $stanza.up();\n            });\n            return $stanza;\n        },\n\n        sendPres: function (stanza) {\n            if (this.connection.authenticated && this.session.get('connected')) {\n                this.connection.send(stanza);\n            } else {\n                this._pending_stanzas.push({stanza: stanza});\n            }\n            return this.connection.authenticated;\n        },\n\n        createFastConnection: function () {\n            let jid = this.get('jid'),\n                auth_type = this.conn_manager.auth_type,\n                password;\n            if (auth_type === 'token') {\n                password = this.settings.get('token');\n            } else if (auth_type === 'x-token') {\n                if (this.get('x_token') && (Number(this.get('x_token').expire)*1000 > moment.now() || !this.get('x_token').expire))\n                    password = this.get('x_token').token;\n                else\n                    password = undefined;\n            } else {\n                password = this.getPassword();\n            }\n            if (!password) {\n                let attrs = {login: true};\n                options.token_invalidated && (attrs.token_invalidated = true);\n                this.password_view.show(attrs);\n                return;\n            }\n            if (!this.fast_conn_manager) {\n                this.fast_conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL);\n                this.fast_connection = this.fast_conn_manager.connection;\n                this.fast_connection.account = this;\n                this.fast_connection.xmlInput = function (xml) {\n                    xabber.info('input fast connection');\n                    xabber.info(xml);\n                };\n                this.fast_connection.xmlOutput = function (xml) {\n                    xabber.info('output fast connection');\n                    xabber.info(xml);\n                };\n            } else{\n                this.fast_connection.disconnect();\n                return this.createFastConnection();\n            }\n            if (auth_type === 'x-token' && this.fast_connection) {\n                this.fast_connection.x_token = this.get('x_token');\n                this.fast_connection.counter = this.get('hotp_counter');\n                this.fast_connection.x_token_auth = true;\n            }\n            this.fast_conn_manager.connect(auth_type, jid, password, this.onFastConnected.bind(this));\n        },\n\n        connect: function (options) {\n            options = options || {};\n            let jid = this.get('jid'),\n                auth_type = this.get('auth_type'),\n                password;\n            jid += '/xabber-web-' + xabber.get('client_id');\n            this.connection.x_token = this.get('x_token');\n            this.connection.counter = this.get('hotp_counter');\n            this.connection.account = this;\n            if (this.connection.x_token && !this.connection.counter)\n                this.connection.counter = 0;\n            if (auth_type === 'token') {\n                password = this.settings.get('token');\n            } else if (auth_type === 'x-token') {\n                if (this.get('x_token') && (Number(this.get('x_token').expire)*1000 > moment.now() || !this.get('x_token').expire))\n                    password = this.get('x_token').token;\n                else\n                    password = undefined;\n            } else {\n                password = this.getPassword();\n            }\n            if (!password) {\n                let attrs = {login: true};\n                options.token_invalidated && (attrs.token_invalidated = true);\n                this.password_view.show(attrs);\n                return;\n            }\n            this.session.set({\n                connected: false,\n                reconnected: false,\n                reconnecting: false,\n                ready_to_send: false,\n                conn_retries: 0,\n                conn_feedback: xabber.getString(\"application_state_connecting\"),\n                auth_failed: false\n            });\n            this.restoreStatus();\n            this.conn_manager.connect(auth_type, jid, password, this.connectionCallback.bind(this));\n        },\n\n        reconnect: function (is_fast) {\n            let conn_retries = this.session.get('conn_retries'),\n                timeout = conn_retries < 3 ? constants.RECONNECTION_TIMEOUTS[conn_retries] : 20000;\n            is_fast && (timeout = 1500);\n            this.session.set({\n                connected: false,\n                reconnected: false,\n                ready_to_send: false,\n                reconnecting: true,\n                conn_retries: ++conn_retries,\n                conn_feedback:  xabber.getString(\"application_state_reconnect_after_some_seconds\", [timeout/1000]),\n                auth_failed: false\n            });\n            if (this.get('x_token'))\n                this.connection.x_token = this.get('x_token');\n            this.connection.account = this;\n            setTimeout(() => {\n                this.connFeedback(xabber.getString(\"application_state_connecting\"));\n                this.restoreStatus();\n                this.connection.reset();\n                this.conn_manager.reconnect(this.reconnectionCallback.bind(this));\n            }, timeout);\n        },\n\n        connectionCallback: function (status, condition, elem) {\n            if (this.session.get('reconnecting')) {\n                xabber.info('ignore connection callback for status: '+constants.CONN_STATUSES[status]);\n                return;\n            }\n            this.auth_view && this.loginCallback(status, condition);\n            this.session.set({conn_status: status, conn_condition: condition});\n            if ((status === Strophe.Status.ERROR) && (condition === 'conflict') && !this.session.get('delete')) {\n                this.onConnectionConflict();\n            }\n            if (status === Strophe.Status.CONNECTED) {\n                this.session.set('on_token_revoked', false);\n                if (this.connection.x_token) {\n                    this.save({\n                        auth_type: 'x-token',\n                        x_token: this.connection.x_token,\n                        hotp_counter: this.connection.counter,\n                    });\n                    this.conn_manager.auth_type = 'x-token';\n                }\n\n                if (this.get('registration_nickname')){\n                    let vcard = utils.vcard.getBlank(this.get('jid'));\n                    vcard.nickname = this.get('registration_nickname');\n                    this.setVCard(vcard,\n                        () => {\n                            this.getVCard();\n                            this.set('registration_nickname', null)\n                        },\n                        function () {\n                            utils.dialogs.error(xabber.getString(\"account_user_info_save_fail\"));\n                            this.set('registration_nickname', null)\n                        }\n                    );\n                }\n                this.createFastConnection();\n                this.session.set({connected: true, reconnected: false});\n            } else if (status === Strophe.Status.AUTHFAIL || ((status === Strophe.Status.ERROR) && (condition === 'not-authorized'))) {\n                if ((this.get('auth_type') === 'x-token' || this.connection.x_token)){\n                    if (this.session.get('conn_retries') <= 3 && $(elem).find('credentials-expired').length === 0)\n                        this.reconnect(true);\n                    else\n                        this.onTokenRevoked();\n                }\n                else\n                    this.onAuthFailed();\n            } else if (status === Strophe.Status.DISCONNECTED) {\n                if (this.session.get('on_token_revoked'))\n                    return;\n                this.connection.flush();\n                if (this._main_interval_worker)\n                    this._main_interval_worker.terminate();\n                this.session.set({\n                    connected: false,\n                    ready_to_send: false,\n                });\n            }\n        },\n\n        reconnectionCallback: function (status, condition, elem) {\n            if (!this.session.get('reconnecting')) {\n                xabber.info('ignore reconnection callback for status: '+constants.CONN_STATUSES[status]);\n                return;\n            }\n            this.session.set({conn_status: status, conn_condition: condition});\n            if (status === Strophe.Status.CONNECTED) {\n                this.session.set('on_token_revoked', false);\n                if (this.connection.x_token) {\n                    this.save({\n                        auth_type: 'x-token',\n                        x_token: this.connection.x_token,\n                        hotp_counter: this.connection.counter,\n                    });\n                }\n                this.createFastConnection();\n                this.connection.connect_callback = this.connectionCallback.bind(this);\n                this.session.set({connected: true, reconnected: true,\n                    reconnecting: false, conn_retries: 0});\n            } else if (status === Strophe.Status.AUTHFAIL || ((status === Strophe.Status.ERROR) && (condition === 'not-authorized'))) {\n                if ((this.get('auth_type') === 'x-token' || this.connection.x_token)) {\n                    if ($(elem).find('credentials-expired').length > 0)\n                        this.onTokenRevoked();\n                    else if (this.session.get('conn_retries') > 2 )\n                        this.onAuthFailed();\n                    else\n                        this.reconnect(true);\n                }\n                else\n                    this.onAuthFailed();\n            } else if (status === Strophe.Status.DISCONNECTED) {\n                if (this.session.get('on_token_revoked'))\n                    return;\n                this.connection.flush();\n                if (this._main_interval_worker)\n                    this._main_interval_worker.terminate();\n                let max_retries = xabber.settings.max_connection_retries;\n                if (max_retries === -1 || this.session.get('conn_retries') < max_retries) {\n                    this.reconnect();\n                } else {\n                    this.connFeedback(xabber.getString(\"connection__error__connection_lost\"));\n                }\n            }\n        },\n\n        registerCallback: function (status, condition, error_text) {\n            if (status === Strophe.Status.REGISTER) {\n                this.connection.register.fields.username = Strophe.getNodeFromJid(this.get('jid'));\n                this.connection.register.fields.password = this.getPassword();\n                if (xabber.url_params && xabber.url_params.rkey) {\n                    this.connection.register.fields.key = xabber.url_params.rkey;\n                }\n                this.connection.register.submit();\n            } else if (status === Strophe.Status.REGISTERED) {\n                let nickname = this.auth_view.$nickname_input.val()\n                this.auth_view.data.set('step',6);\n                if(nickname){\n                    this.set('registration_nickname', nickname)\n                }\n            } else if (status === Strophe.Status.CONFLICT) {\n                this.auth_view.errorRegistrationFeedback({jid: xabber.getString(\"label_xmpp_id\")});\n                this.auth_view.data.set('step', 3)\n            } else if (status === Strophe.Status.NOTACCEPTABLE) {\n                if (error_text)\n                    this.auth_view.errorRegistrationFeedback({password: error_text});\n                else {\n                    condition = condition ? ': ' + condition : '';\n                    this.auth_view.errorRegistrationFeedback({password: xabber.getString(\"xmpp_login__registration_not_filled\") + condition});\n                }\n                this.auth_view.data.set('step', 4)\n            } else if (status === Strophe.Status.REGIFAIL) {\n                if (error_text)\n                    this.auth_view.errorRegistrationFeedback({password: error_text});\n                else {\n                    condition = condition ? ': ' + condition : '';\n                    this.auth_view.errorRegistrationFeedback({password: xabber.getString(\"xmpp_login__registration_failed\") + condition});\n                }\n                this.auth_view.data.set('step', 4)\n            }\n        },\n\n        changePasswordCallback: function (status, condition) {\n            if (this.change_password_view){\n                if (status === Strophe.Status.REGISTERED) {\n                    this.change_password_view.successFeedback();\n                } else if (status === Strophe.Status.CONFLICT\n                    || status === Strophe.Status.NOTACCEPTABLE\n                    || status === Strophe.Status.REGIFAIL) {\n                    condition = condition ? ': ' + condition : '';\n                    this.change_password_view.errorFeedback({password: xabber.getString(\"password_changed_fail\") + condition});\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    this.change_password_view.errorFeedback({old_password: xabber.getString(\"AUTHENTICATION_FAILED\")});\n                } else if (status === Strophe.Status.CONNECTED) {\n                    this.change_password_connection.register.fields.username = Strophe.getNodeFromJid(this.get('jid'));\n                    this.change_password_connection.register.fields.password = this.change_password_view.$password_input.val().trim();\n                    this.change_password_connection.register.submit();\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    this.change_password_connection_manager = undefined;\n                    this.change_password_connection = undefined;\n                }\n            }\n        },\n\n        unregisterAccountCallback: function (status, condition) {\n            if (this.unregister_account_view){\n                if (status === Strophe.Status.REGISTERED) {\n                    this.unregister_account_view.close();\n                    this.trigger('deactivate', this);\n                    this.deleteAccount();\n                    xabber.settings_modal_view.closeSettings();\n                } else if (status === Strophe.Status.CONFLICT\n                    || status === Strophe.Status.NOTACCEPTABLE\n                    || status === Strophe.Status.REGIFAIL) {\n                    condition = condition ? ': ' + condition : '';\n                    this.unregister_account_view.errorFeedback({password: xabber.getString(\"account_unregister_failed\") + condition});\n                    this.unregister_account_view.data.set('step', 0);\n                    this.unregister_account_connection && this.unregister_account_connection.disconnect();\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    this.unregister_account_view.errorFeedback({password: xabber.getString(\"wrong_password\")});\n                    this.unregister_account_view.data.set('step', 0);\n                    this.unregister_account_connection && this.unregister_account_connection.disconnect();\n                } else if (status === Strophe.Status.CONNECTED) {\n                    this.unregister_account_view.data.set('step', 1);\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    this.unregister_account_connection_manager = undefined;\n                    this.unregister_account_connection = undefined;\n                }\n            }\n        },\n\n        loginCallback: function (status, condition) {\n            if (status === Strophe.Status.CONNECTING) {\n                if (this.auth_view.stepped_auth){\n                    this.auth_view.resetAuthStepper()\n                }\n            } else if (status === Strophe.Status.CONNECTED) {\n                this.save('is_new', undefined);\n                if (this.auth_view.stepped_auth && !this.auth_view.data.get('registration'))\n                    this.auth_view.authStepperStart();\n                else{\n                    this.auth_view.endAuth();\n                }\n\n            } else if (_.contains(constants.BAD_CONN_STATUSES, status)) {\n                let stepper_auth_error = false;\n                if (status === Strophe.Status.ERROR) {\n                    status = xabber.getString(\"CONNECTION_FAILED\");\n                } else if (status === Strophe.Status.CONNFAIL) {\n                    status = xabber.getString(\"CONNECTION_FAILED\");\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    status = xabber.getString(\"AUTHENTICATION_FAILED\");\n                    stepper_auth_error = true;\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    status = xabber.getString(\"connection__error__text_disconnected\");\n                } else if (status === Strophe.Status.CONNTIMEOUT) {\n                    status = xabber.getString(\"connection__error__text_timeout_expired\");\n                }\n                condition = condition ? ': ' + condition : '';\n                if (this.auth_view.stepped_auth)\n                    this.auth_view.authStepperError(stepper_auth_error, {password: status + condition});\n                else\n                    this.auth_view.errorFeedback({password: status + condition});\n                this.get('is_new') && this.destroy();\n            }\n        },\n\n        onAuthFailed: function () {\n            if (!this.auth_view){\n                utils.dialogs.error(xabber.getString(\"connection__error__text_authentication_failed\", [this.get('jid')]));\n                this.password_view.show();\n            }\n            this.session.set({\n                auth_failed: true,\n                connected: false,\n                ready_to_send: false,\n                no_reconnect: true\n            });\n            this.save({old_device_token: this.get('x_token'), auth_type: 'password', password: null, x_token: null});\n            this.connection.pass = \"\";\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_authentication_failed_short\"));\n        },\n\n        onConnectionConflict: function () {\n            utils.dialogs.error(xabber.getString(\"connection__error__text_connection_conflict\", [this.get('jid')]));\n            this.session.set({\n                auth_failed: true,\n                no_reconnect: true\n            });\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_connection_conflict_short\"));\n        },\n\n        getAllXTokens: function (callback) {\n            let tokens_list = [],\n                iq = $iq({\n                    type: 'get',\n                    to: this.connection.domain\n                }).c('query', {xmlns: `${Strophe.NS.AUTH_DEVICES}#items`});\n            this.sendIQFast(iq, (tokens) => {\n                $(tokens).find('device').each((idx, token) => {\n                    let $token = $(token),\n                        client = $token.find('client').text(),\n                        device = $token.find('info').text(),\n                        description = $token.find('public-label').text(),\n                        omemo_id = $token.find('omemo-id').text(),\n                        token_uid = $token.attr('id'),\n                        expire = Number($token.find('expire').text())*1000,\n                        last_auth = Number($token.find('last-auth').text())*1000,\n                        ip_address = $token.find('ip').text();\n                    tokens_list.push({client: client, device: device, description: description, token_uid: token_uid, last_auth: last_auth, expire: expire, ip: ip_address, omemo_id: omemo_id});\n                });\n                this.x_tokens_list = tokens_list;\n                callback && callback();\n            });\n        },\n\n        onTokenRevoked: function () {\n            if (!this.auth_view) {\n                utils.dialogs.error(xabber.getString(\"connection__error__text_token_invalidated\", [this.get('jid')]));\n            }\n            this.session.set({\n                on_token_revoked: true,\n                auth_failed: true,\n                connected: false,\n                no_reconnect: true\n            });\n            this.save({auth_type: 'password', password: null, x_token: null});\n            this.connection.pass = \"\";\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_token_invalidated_short\"));\n            this.deleteAccount()\n        },\n\n        onChangedConnected: function () {\n            if (this.isConnected()) {\n                this.session.get('reconnected') ? this.onReconnected() : this.onConnected();\n            } else {\n                this.onDisconnected();\n            }\n        },\n\n        onConnected: function () {\n            this.connFeedback(xabber.getString(\"account_state_connected\"));\n            this.jid = this.connection.jid;\n            this.resource = Strophe.getResourceFromJid(this.jid);\n            this.domain = Strophe.getDomainFromJid(this.jid);\n            this.trigger('activate', this);\n            this.session.get('no_reconnect') && this.session.set('no_reconnect', false);\n            this.afterConnected();\n            _.each(this._after_connected_plugins, (plugin) => {\n                plugin.call(this);\n            });\n        },\n\n        onFastConnected: function (status) {\n            if (status === Strophe.Status.CONNECTED) {\n                if (this.fast_connection.x_token) {\n                    this.save({\n                        x_token: this.fast_connection.x_token,\n                        hotp_counter: this.fast_connection.counter,\n                    });\n                    this.fast_conn_manager.auth_type = 'x-token';\n                    this.fast_connection.x_token_auth = true;\n                    if (this.connection && this.connection.pass)\n                        this.fast_connection.pass = this.connection.pass;\n                }\n                _.each(this._after_fast_connected_plugins, (plugin) => {\n                    plugin.call(this);\n                });\n            } else if (status === Strophe.Status.AUTHFAIL || status === Strophe.Status.DISCONNECTED) {\n                if (this._fast_interval_worker)\n                    this._fast_interval_worker.terminate();\n                this.fast_conn_manager = undefined;\n                this.fast_connection = undefined;\n                if (this.connection && !this.connection.disconnecting\n                    && this.connection.authenticated && this.connection.connected){\n                    this.getVCard();\n                    if (!(this.auth_view && this.auth_view.data.get('authentication')))\n                        this.trigger('ready_to_get_roster');\n                }\n            }\n        },\n\n        onReconnected: function () {\n            this.connFeedback(xabber.getString(\"account_state_connected\"));\n            this.afterConnected();\n            _.each(this._after_reconnected_plugins, (plugin) => {\n                plugin.call(this);\n            });\n        },\n\n        afterConnected: function () {\n            this.dfd_presence.done(() => {\n                this.sendPendingStanzas();\n                this.sendPendingMessages();\n                this.session.set({\n                    ready_to_send: true\n                })\n            });\n            this.registerPresenceHandler();\n            this.enableCarbons();\n        },\n\n        getAllMessageRetractions: function (callback) {\n            let query_options = {xmlns: Strophe.NS.REWRITE, version: this.retraction_version};\n            let retractions_query = $iq({type: 'get'})\n                .c('query', query_options);\n            this.sendIQ(retractions_query, callback);\n        },\n\n        sendPendingStanzas: function () {\n            console.log('pending stanzas');\n            console.log(this._pending_stanzas);\n            _.each(this._pending_stanzas, (item) => {\n                console.log(item);\n                if ((item.stanza instanceof Strophe.Builder) || item.is_msg) {\n                    this.connection.send(item.stanza);\n                    item.callback && item.callback();\n                } else if (item && item.stanza && item.is_iq){\n                    this.connection.sendIQ.apply(this.connection, item.stanza);\n                }\n            });\n            this._pending_stanzas = [];\n        },\n\n        sendPendingMessages: function () {\n            console.log('pending messages');\n            console.log(this._pending_messages);\n            this._pending_messages.sort((a,b) => (a.timestamp > b.timestamp) ? 1 : ((b.timestamp > a.timestamp) ? -1 : 0));\n            _.each(this._pending_messages, (item) => {\n                console.log(item)\n                let msg = this.messages.get(item.unique_id), msg_iq;\n                msg && (msg_iq = msg.get('xml'));\n                if (msg.collection && msg.collection.chat && msg.collection.chat.get('group_chat'))\n                    $(msg_iq).append(\"<retry to='\" + msg.collection.chat.get('jid') + \"' xmlns='\" + Strophe.NS.DELIVERY + \"'/>\");\n                else\n                    $(msg_iq).append(\"<retry xmlns='\" + Strophe.NS.DELIVERY + \"'/>\");\n                msg_iq && this.sendMsgPending(msg_iq);\n            });\n            this.trigger('send_pending_messages');\n        },\n\n        _after_connected_plugins: [],\n        _after_reconnected_plugins: [],\n        _after_fast_connected_plugins: [],\n\n        onDisconnected: function () {\n            this.disconnected_timestamp = this.last_stanza_timestamp;\n            if (this.session.get('delete')) {\n                this.destroy();\n                return;\n            }\n            let deactivate = this.session.get('deactivate');\n            if (deactivate) {\n                this.connFeedback(xabber.getString(\"settings_account__label_state_disconnected\"));\n                this.session.set('deactivate', null);\n                if (deactivate === 'set_off') {\n                    this.trigger('deactivate', this);\n                }\n            } else {\n                if (this.session.get('no_reconnect')) {\n                    this.session.set('no_reconnect', false);\n                } else {\n                    this.fast_connection && this.fast_connection.connected && this.fast_connection.disconnect();\n                    this.reconnect();\n                }\n            }\n        },\n\n        connFeedback: function (message) {\n            this.session.set(\"conn_feedback\", message);\n        },\n\n        enableCarbons: function () {\n            let iq = $iq({type: 'set'}).c('enable', {xmlns: Strophe.NS.CARBONS});\n            this.sendIQFast(iq);\n        },\n\n        getVCard: function (callback) {\n            let jid = this.get('jid'),\n                is_callback = _.isFunction(callback);\n            if (this.connection && this.connection.connected) {\n                this.getConnectionForIQ().vcard.get(jid,\n                    (vcard) => {\n                        let attrs = {\n                            vcard: vcard,\n                            vcard_updated: moment.now()\n                        };\n                        attrs.name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || jid;\n                        if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n                            if (vcard.photo.image) {\n                                attrs.avatar_priority = constants.AVATAR_PRIORITIES.VCARD_AVATAR;\n                                attrs.image = vcard.photo.image;\n                            }\n                            else\n                                attrs.image = Images.getDefaultAvatar(attrs.name);\n                            this.cached_image = Images.getCachedImage(attrs.image);\n                        }\n                        this.save(attrs);\n                        is_callback && callback(vcard);\n                    },\n                    function () {\n                        is_callback && callback(null);\n                    }\n                );\n            }\n        },\n\n        setVCard: function (data, callback, errback) {\n            let vcard = _.extend(_.clone(this.get('vcard')), data);\n            this.connection.vcard.set(this.get('jid'), vcard, () => {\n                this.vcardPhotoUpdated(vcard.photo.image);\n                callback && callback();\n            }, errback);\n        },\n\n        getStatusMessage: function () {\n            return this.get('status_message') || xabber.getString([this.get('status')]);\n        },\n\n        setStatus: function (status, message) {\n            let attrs = { status_updated: moment.now() };\n            status !== null && (attrs.status = status);\n            message !== null && (attrs.status_message = message || '');\n            if (status === 'offline' && this.get('status') !== 'offline')\n                attrs.status_prev = this.get('status');\n            this.save(attrs);\n            if (!this.get('enabled'))\n                return;\n            if (status === 'offline') {\n                this.deactivate('set_offline');\n            } else if (!this.isConnected()) {\n                this.activate();\n            } else {\n                this.sendPresence();\n            }\n        },\n\n        restoreStatus: function () {\n            if (this.get('status') === 'offline') {\n                this.save({\n                    status_updated: moment.now(),\n                    status: this.get('status_prev') || 'online',\n                    status_prev: undefined\n                });\n            }\n        },\n\n        getAvatarHash: function (avatar) {\n            let from_avatar = avatar || this.get('vcard').photo.image;\n            if (from_avatar) {\n                let decoded_raw = atob(from_avatar),\n                    bin = Uint8Array.from(Array.prototype.map.call(decoded_raw,function(x) {\n                        return x.charCodeAt(0);\n                    }));\n                return sha1(bin);\n            }\n            else\n                return \"\";\n        },\n\n        vcardPhotoUpdated: function (photo) {\n            let stanza = $pres().c('x', {xmlns: Strophe.NS.VCARD_UPDATE}).c('photo').t(this.getAvatarHash(photo)).up().up();\n            return this.sendPres(stanza);\n        },\n\n        sendPresence: function (type, message) {\n            type = type || this.get('status');\n            let status_message = message || this.get('status_message'), stanza = $pres();\n            if (type === 'offline') {\n                stanza.attrs({'type': 'unavailable'});\n            } else {\n                if (type !== 'online') {\n                    stanza.c('show').t(type).up();\n                }\n                stanza.c('status').t(status_message).up();\n                stanza.c('priority').t(this.get('priority')).up();\n                if(this.get('x_token'))\n                    stanza.c('device', {xmlns: Strophe.NS.AUTH_DEVICES, id: this.get('x_token').token_uid}).up();\n            }\n            stanza.cnode(this.connection.caps.createCapsNode({\n                node: 'https://www.xabber.com/clients/xabber/web'\n            }).tree());\n            return this.sendPres(stanza);\n        },\n\n        showSettings: function (right, block_name) {\n            this.showSettingsModal(block_name);\n        },\n\n        showSettingsModal: function (block_name) {\n            if (xabber.accounts.length === 1){\n                xabber.body.setScreen('settings-modal', {account_block_name: block_name});\n                xabber.trigger('update_placeholder');\n                return;\n            }\n            let has_modal_settings = !_.isUndefined(this.settings_account_modal);\n            if (!has_modal_settings)\n                this.settings_account_modal = new xabber.AccountSettingsModalView({model: this});\n            this.updateColorScheme();\n            xabber.body.setScreen('account_settings_modal', {\n                account: this, block_name: block_name\n            });\n            this.trigger('open_settings');\n            if (!has_modal_settings) {\n                this.trigger('render_settings');\n                this.settings_account_modal.addChild('blocklist', xabber.BlockListView, {\n                    account: this,\n                    el: this.settings_account_modal.$('.block-list-view-wrap')[0]\n                });\n            }\n            this.settings_account_modal.updateHeight();\n        },\n\n        updateColorScheme: function () {\n            let color = this.settings.get('color');\n            this.settings_account_modal && this.settings_account_modal.$el.attr('data-color', color);\n        },\n\n        revokeXToken: function (token_uid, callback) {\n            let iq = $iq({\n                type: 'set',\n                to: this.connection.domain\n            }).c('revoke', {xmlns:Strophe.NS.AUTH_DEVICES});\n            for (let token_num = 0; token_num < token_uid.length; token_num++)\n                iq.c('device', {id: token_uid[token_num]}).up();\n            this.sendIQFast(iq, () => {\n                callback && callback();\n            });\n        },\n\n        revokeAllXTokens: function (callback, errback) {\n            let iq = $iq({\n                type: 'set',\n                to: this.connection.domain\n            }).c('revoke-all', {xmlns:Strophe.NS.AUTH_DEVICES});\n            this.sendIQFast(iq, (success) => {\n                    callback & callback(success);\n                },\n                function (error) {\n                    errback && errback(error);\n                });\n        },\n\n        deleteAccount: function (show_settings, dont_change_screen) {\n            this.show_settings_after_delete = show_settings;\n            this.dont_change_screen_after_delete = dont_change_screen;\n            let screen = xabber.body.screen;\n            if (screen.get('account') && screen.get('account') === this && screen.get('name') === 'account_settings_modal')\n                this.show_settings_after_delete = true;\n            if (this.get('x_token'))\n                this.revokeXToken([this.get('x_token').token_uid]);\n            this.session.set('delete', true);\n            this.deactivate();\n        },\n\n        activate: function () {\n            if (!this.isConnected())\n                this.connect();\n        },\n\n        deactivate: function (type) {\n            type || (type = 'set_off');\n            this.session.set('deactivate', type);\n            if (this.isConnected()) {\n                this.connFeedback(xabber.getString(\"settings_account__label_state_disconnecting\"));\n                this.sendPresence('offline');\n                this.connection.disconnect();\n                if (this.fast_conn_manager) this.fast_connection.disconnect();\n            } else {\n                this.onDisconnected();\n            }\n        },\n\n        onDestroy: function () {\n            if (this.connection && !this.connection.register._registering)\n                this.connection.connect_callback = null;\n            if (this.omemo){\n                this.omemo.destroy();\n                this.omemo = undefined;\n            }\n            this.groups_settings\n            if (this.groups_settings){\n                this.groups_settings.clearStorage();\n            }\n            if (this.groupchat_settings){\n                this.groupchat_settings.destroy();\n                this.groupchat_settings = undefined;\n            }\n            if (this.chat_settings){\n                this.chat_settings.destroy();\n                this.chat_settings = undefined;\n            }\n            if (this.settings)\n                this.settings.destroy();\n            if (this.isConnected()) {\n                this.connection.disconnect();\n                if (this.fast_conn_manager) this.fast_connection.disconnect();\n            }\n            this.cached_sync_conversations && this.cached_sync_conversations.deleteDataBase();\n            this.cached_roster && this.cached_roster.deleteDataBase();\n            this.cached_server_features && this.cached_server_features.deleteDataBase();\n            this.trigger('remove_saved_chat');\n        },\n\n        registerIQHandler: function () {\n            this.connection.deleteHandler(this._stanza_handler);\n            this._stanza_handler = this.connection.addHandler((iq) => {\n                    this.onGetIQ(iq);\n                    return true;\n                }, null, 'iq', \"get\");\n        },\n\n\n        registerSyncedIQHandler: function () {\n            this.connection.deleteHandler(this._synced_stanza_handler);\n            this._synced_stanza_handler = this.connection.addHandler(\n                this.onSyncedIQ.bind(this),\n                Strophe.NS.SYNCHRONIZATION, 'iq', \"set\");\n        },\n\n        registerPresenceHandler: function () {\n            this.connection.deleteHandler(this._pres_handler);\n            this._pres_handler = this.connection.addHandler(\n                (presence) => {\n                    this.onPresence(presence);\n                    return true;\n                }, null, 'presence', null);\n        },\n\n        onSetIQResult: function (iq) {\n            let to = $(iq).attr('to');\n            if (this.fast_connection && this.fast_connection.jid === to\n                && !this.fast_connection.disconnecting && this.fast_connection.authenticated\n                && this.fast_connection.connected && this.get('status') !== 'offline'){\n                this.sendIQFast($iq({\n                    type: 'result', id: iq.getAttribute('id'),\n                }));\n            } else if (this.connection && this.connection.jid === to && this.connection.authenticated\n                && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline') {\n                this.sendIQ($iq({\n                    type: 'result', id: iq.getAttribute('id'),\n                }));\n            }\n        },\n\n        onSyncedIQ: function (iq) {\n            this.onSetIQResult(iq);\n            this.roster.syncConversations(iq);\n            return true;\n        },\n\n        onGetIQ: function (iq) {\n            let $incoming_iq = $(iq),\n                $confirm = $incoming_iq.find(`confirm[xmlns=\"${Strophe.NS.HTTP_AUTH}\"]`),\n                $session_availability = $incoming_iq.find(`query[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n                request_code,\n                from_jid = $incoming_iq.attr('from');\n            if ($confirm.length) {\n                request_code = $confirm.attr('id');\n                if (this.get('gallery_auth_request_code')) {\n                    this.onAuthCode(request_code)\n                }\n                else {\n                    this.gallery_code_requests.push({\n                        id: $incoming_iq.attr('id'),\n                        code: request_code\n                    });\n                }\n            }\n            if ($session_availability.length) {\n                let session_id = $session_availability.children('session').attr('id'), $session_availability_response;\n                if (session_id && xabber.current_voip_call && session_id === xabber.current_voip_call.get('session_id') && !xabber.current_voip_call.get('state')) {\n                    $session_availability_response = $iq({to: from_jid, type: 'result', id: $incoming_iq.attr('id')})\n                        .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n                        .c('session', {id: session_id});\n                    xabber.current_voip_call.updateStatus(xabber.getString(\"dialog_jingle_message__status_calling\"));\n                }\n                else {\n                    $session_availability_response = $iq({to: from_jid, type: 'error', id: $incoming_iq.attr('id')})\n                        .c('error', {xmlns: Strophe.NS.JINGLE_MSG});\n\n                }\n                this.sendIQFast($session_availability_response);\n            }\n        },\n\n        testGalleryTokenExpire: function(callback, errback) {\n            let currentTime = new Date(),\n                tokenExpireTime = new Date(this.get('gallery_token_expires'));\n            if (this.get('gallery_auth')){\n                this.once('gallery_token_authenticated', callback)\n            }\n            else if (currentTime < tokenExpireTime){\n                callback && callback();\n            }\n            else if (this.server_features.get('media-gallery')){\n                this.initGalleryAuth(this.server_features.get('media-gallery'), errback)\n                this.once('gallery_token_authenticated', callback)\n            }\n            else if (!this.server_features.get('media-gallery')){\n                this.set('gallery_url', undefined);\n                this.set('gallery_token', undefined);\n                this.set('gallery_token_expires', undefined);\n                callback && callback();\n            }\n        },\n\n        testGalleryFileSlot: function(file, callback) {\n            if (this.get('gallery_token') && this.get('gallery_url')){\n                let reader = new FileReader();\n                reader.onloadend = () => {\n                    let b64 = reader.result.split('base64,'),\n                        binary_file = atob(b64[1]),\n                        bytes = new Uint8Array(binary_file.length);\n                    for (let i = 0; i < binary_file.length; i++)\n                        bytes[i] = binary_file.charCodeAt(i);\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/slot/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: {size: file.size, name: file.name, hash: sha1(bytes)},\n                        success: (response) => {\n                            console.log(response);\n                            callback && callback(response);\n                        },\n                        error: (response) => {\n                            console.log(response);\n                            callback && callback(response.responseJSON);\n                        }\n                    });\n                }\n                reader.onerror = (e) => {\n                    console.log(reader.error);\n                    callback && callback(false)\n                };\n                reader.readAsDataURL(file);\n            }\n        },\n\n        initGalleryAuth: function(gallery_feature, errback) {\n            this.set('gallery_url', gallery_feature.get('from'));\n            if (this.get('gallery_url') && !this.get('gallery_auth')) {\n                this.set('gallery_token', undefined);\n                this.set('gallery_token_expires', undefined);\n                this.set('gallery_auth', true)\n                this.gallery_iq_answered = false;\n                $.ajax({\n                    type: 'POST',\n                    url: this.get('gallery_url') + 'v1/account/xmpp_code_request/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({jid: this.jid, type: \"iq\"}),\n                    success: (response) => {\n                        if (response.request_id){\n                            this.set('gallery_auth_request_code', response.request_id)\n                            this.gallery_auth_errback = errback;\n                            if (this.gallery_code_requests.length){\n                                let verifying_code = this.gallery_code_requests.find(verifying_mess => (verifying_mess.id === this.get('gallery_auth_request_code')));\n                                if (verifying_code && verifying_code.code)\n                                    this.onAuthCode(verifying_code.code)\n                            }\n                            setTimeout(() => {\n                                if (!this.gallery_iq_answered)\n                                    this.handleCommonGalleryErrors({status: 500}, errback)\n                            }, 5000)\n                        }\n                    },\n                    error: (response) => {\n                        this.handleCommonGalleryErrors(response, errback)\n                        this.set('gallery_auth', false)\n                        this.gallery_code_requests = [];\n                        console.log(response)\n                    }\n                });\n            }\n        },\n\n        onAuthCode: function (confirm_code) {\n            this.gallery_code_requests = [];\n            this.set('gallery_auth_request_code', undefined);\n            if (confirm_code) {\n                this.gallery_iq_answered = true;\n                $.ajax({\n                    type: 'POST',\n                    url: this.get('gallery_url') + 'v1/account/xmpp_auth/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({jid: this.id, code: confirm_code}),\n                    success: (response) => {\n                        if (response.token)\n                            this.set('gallery_token', response.token);\n                        if (response.expires)\n                            this.set('gallery_token_expires', response.expires);\n                        this.trigger('gallery_token_authenticated')\n                        this.set('gallery_auth', false)\n                    },\n                    error: (response) => {\n                        this.set('gallery_auth', false)\n                        this.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n            }\n        },\n\n        prepareFiles: function (files, callback) {\n            files.forEach((file) => {\n                let reader = new FileReader();\n                reader.onloadend = () => {\n                    let b64 = reader.result.split('base64,'),\n                        binary_file = atob(b64[1]),\n                        bytes = new Uint8Array(binary_file.length);\n                    for (let i = 0; i < binary_file.length; i++)\n                        bytes[i] = binary_file.charCodeAt(i);\n                    this.testFile({size: file.size, name: file.name, hash: sha1(bytes)}, file, callback)\n                }\n                reader.readAsDataURL(file);\n            })\n        },\n\n        handleCommonGalleryErrors: function (response, errback) {\n            !errback && (errback = this.gallery_auth_errback);\n            this.gallery_auth_errback = undefined;\n            let err_text;\n            response && response.responseJSON && response.responseJSON.error && (err_text = response.responseJSON.error);\n            if (response.status === 401){\n                if (this.server_features.get('media-gallery')){\n                    this.initGalleryAuth(this.server_features.get('media-gallery'), errback)\n                } else {\n                    this.set('gallery_url', null);\n                    this.set('gallery_token', null);\n                    errback && errback('No Media Gallery server feature');\n                }\n            } else if (response.status === 500) {\n                this.set('gallery_url', null);\n                this.set('gallery_token', null);\n                errback && errback(xabber.getString(\"media_gallery_server_error\"));\n            } else {\n                errback && errback('Media Gallery error - ' + (err_text || response.status));\n            }\n        },\n\n        getStorageStats: function (params, callback) {\n            this.testGalleryTokenExpire(() => {\n                params && (params = {});\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/stats/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: params,\n                        success: (response) => {\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                        }\n                    });\n            });\n        },\n\n        testFile: function (params, file, callback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/slot/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: params,\n                        success: (response) => {\n                            this.uploadFile(file , callback)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                        }\n                    });\n\n            });\n        },\n\n        uploadFile: function (file, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url')) {\n                    let formData = new FormData(),\n                        metadata = {};\n                    file.duration && (metadata.duration = file.duration);\n                    formData.append('file', file, file.name);\n                    formData.append('metadata', JSON.stringify(metadata));\n                    if (file.size)\n                        formData.append('size', file.size);\n                    if (file.voice)\n                        formData.append('media_type', file.type + '+voice');\n                    else\n                        formData.append('media_type', file.type);\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/upload/',\n                        data: formData,\n                        contentType: false,\n                        processData: false,\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        uploadAvatar: function (file, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url')) {\n                    if (!file)\n                        errback && errback('no file')\n                    let formData = new FormData();\n                    formData.append('file', file, file.name);\n                    formData.append('media_type', file.type);\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/avatar/upload/',\n                        data: formData,\n                        contentType: false,\n                        processData: false,\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        deleteFile: function (file_id, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url') && file_id)\n                    $.ajax({\n                        type: 'DELETE',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: JSON.stringify({id: file_id}),\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n            });\n        },\n\n        getOpenGraphData: function (url, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token'), \"Content-Type\": \"application/json\"},\n                        url: this.get('gallery_url') + 'v1/opengraph/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: JSON.stringify({url: url}),\n                        success: (response) => {\n                            response.site = $(response.ogp).closest('meta[property=\"og:site_name\"]').attr('content')\n                            response.type = $(response.ogp).closest('meta[property=\"og:type\"]').attr('content')\n                            response.url = $(response.ogp).closest('meta[property=\"og:url\"]').attr('content')\n                            response.description = $(response.ogp).closest('meta[property=\"og:description\"]').attr('content')\n                            response.title = $(response.ogp).closest('meta[property=\"og:title\"]').attr('content')\n                            response.image = $(response.ogp).closest('meta[property=\"og:image\"]').attr('content')\n                            response.image_height = $(response.ogp).closest('meta[property=\"og:image:height\"]').attr('content')\n                            response.image_width = $(response.ogp).closest('meta[property=\"og:image:width\"]').attr('content')\n                            response.video_url = $(response.ogp).closest('meta[property=\"og:video:url\"]').attr('content')\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            errback && errback(response)\n                            console.log(response)\n                        }\n                    });\n            });\n        },\n\n        createMessageFromIQ: function (attrs) {\n            let contact = this.contacts.mergeContact(attrs.from_jid),\n                chat = this.chats.getChat(contact);\n            chat.messages.create(attrs);\n        },\n\n        onPresence: function (presence) {\n            let $presence = $(presence),\n                type = presence.getAttribute('type');\n            if (type === 'error') { return; }\n            let jid = presence.getAttribute('from'),\n                bare_jid = Strophe.getBareJidFromJid(jid);\n            if (bare_jid !== this.get('jid')) {\n                _.each(this._added_pres_handlers, function (handler) {\n                    handler(presence, bare_jid);\n                });\n                return;\n            };\n            let resource = Strophe.getResourceFromJid(jid),\n                priority = Number($presence.find('priority').text()),\n                status = $presence.find('show').text() || 'online',\n                status_message = $presence.find('status').text();\n            _.isNaN(priority) && (priority = 0);\n            let $vcard_update = $presence.find(`x[xmlns=\"${Strophe.NS.VCAD_UPDATE}\"]`);\n            if ($vcard_update.length && this.get('avatar_priority') && this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR)\n                this.save('photo_hash', $vcard_update.find('photo').text());\n            if (resource) {\n                let resource_obj = this.resources.get(resource);\n                if (type === 'unavailable') {\n                    if (resource_obj) { resource_obj.destroy(); }\n                } else {\n                    let attrs = {\n                        resource: resource,\n                        priority: priority,\n                        status: status,\n                        status_message: status_message\n                    };\n                    let $device = $presence.find(`device[xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`);\n                    if ($device && this.x_tokens_list && $device.attr('id')) {\n                        attrs.token_uid = $device.attr('id')\n                    }\n                    if (!resource_obj)\n                        resource_obj = this.resources.create(attrs);\n                    else\n                        resource_obj.set(attrs);\n                }\n            }\n        }\n    },\n    {\n        addInitPlugin: function (func) {\n            this.prototype._init_plugins.push(func);\n        },\n\n        addConnPlugin: function (func, conn, reconn) {\n            conn && this.prototype._after_connected_plugins.push(func);\n            reconn && this.prototype._after_reconnected_plugins.push(func);\n        },\n\n        addFastConnPlugin: function (func, conn, reconn) {\n            conn && this.prototype._after_fast_connected_plugins.push(func);\n        }\n    });\n\nxabber.Accounts = Backbone.CollectionWithStorage.extend({\n    model: xabber.Account,\n    comparator: function (acc1, acc2) {\n        return acc1.settings.get('order') < acc2.settings.get('order') ? -1 : 1;\n    },\n\n    _initialize: function (models, options) {\n        this.settings_list = xabber.account_settings_list;\n        this.getEnabledList();\n        this.getConnectedList();\n        this.on(\"add\", this.onAdd, this);\n        this.on(\"destroy\", this.onDestroy, this);\n        this.on(\"change:enabled\", this.getEnabledList, this);\n        this.on(\"update_order\", this.onUpdatedOrder, this);\n        this.on(\"add destroy activate deactivate\", this.onListChanged, this);\n        this.on(\"destroy deactivate\", this.onAccountDisconnected, this);\n        xabber.on(\"quit\", this.onQuit, this);\n        xabber.on(\"quit_accounts\", this.onQuitAccounts, this);\n        this.settings_list.on(\"add_settings\", this.onSettingsAdded, this);\n    },\n\n    onQuit: function () {\n        _.each(_.clone(this.models), function (account) {\n            account.deleteAccount();\n            account.password_view.closeModal();\n            utils.modals.clear_queue();\n        });\n        !this.models.length && xabber.body.setScreen('login');\n    },\n\n    onQuitAccounts: function () {\n        _.each(_.clone(this.models), function (account) {\n            if (account.settings.get('to_sync')) {\n                account.deleteAccount();\n                account.password_view.closeModal();\n                utils.modals.clear_queue();\n            }\n        });\n        !this.models.length && xabber.body.setScreen('login');\n    },\n\n    getEnabledList: function () {\n        this.enabled = this.filter(account => account.get('enabled'));\n    },\n\n    getConnectedList: function () {\n        this.connected = this.filter(account => account.isConnected());\n    },\n\n    onListChanged: function () {\n        this.getEnabledList();\n        this.getConnectedList();\n        this.trigger('list_changed', this);\n    },\n\n    onAdd: function (account) {\n        if (account.is_invalid)\n            account.destroy();\n    },\n\n    onDestroy: function (account) {\n        if (!account.get('is_new')) {\n            let no_accounts = !(this.length);\n            if (no_accounts) {\n                xabber.body.setScreen('login');\n            } else if (account.show_settings_after_delete) {\n                xabber.body.setScreen('settings-modal', {account_block_name: null});\n            } else if (account.dont_change_screen_after_delete) {\n                return;\n            } else {\n            }\n        }\n    },\n\n    onAccountDisconnected: function () {\n        xabber.toolbar_view.recountAllMessageCounter();\n        xabber.recountAllMessageCounter();\n    },\n\n    onSettingsAdded: function (settings) {\n        let jid = settings.get('jid');\n        if (!this.get(jid))\n            this.create({jid: jid});\n    },\n\n    onUpdatedOrder: function () {\n        this.sort();\n        this.getEnabledList();\n        this.getConnectedList();\n    },\n\n    getLastOrder: function () {\n        return this.length ? this.last().settings.get('order') : 0;\n    },\n\n    getDefaultColor: function () {\n        let used_colors = {}, colors = constants.MATERIAL_COLORS;\n        this.each(function (account) {\n            used_colors[account.settings.get('color')] = true;\n        });\n        for (let idx = 0; idx < colors.length; idx++) {\n            if (!used_colors[colors[idx]])\n                return colors[idx];\n        }\n        return 'red';\n    },\n\n    moveBefore: function (acc1, acc2) {\n        let index2 = this.indexOf(acc2),\n            prev_order = index2 > 0 ? this.at(index2-1).settings.get('order') : 0;\n        acc1.settings.save('order', (acc2.settings.get('order') + prev_order)/2);\n        this._updateOrder();\n    },\n\n    moveToBottom: function (acc) {\n        acc.settings.save('order', this.getLastOrder() + 1);\n        this._updateOrder();\n    },\n\n    _updateOrder: function () {\n        this.sort();\n        this.each(function (acc, index) {\n            acc.settings.save({order: index + 1});\n        });\n        this.trigger('update_order');\n    }\n});\n\nxabber.AccountToolbarItemView = xabber.BasicView.extend({\n    className: 'toolbar-item account-item',\n    template: templates.toolbar_item,\n    avatar_size: constants.AVATAR_SIZES.TOOLBAR_ACCOUNT_ITEM,\n\n    events: {\n        'click .filter-chats': 'filterChats',\n        'click .account-item-avatar-wrap': 'showSettings'\n    },\n\n    _initialize: function () {\n        this.updateConnected();\n        this.updateAuthState();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.$el.attr('data-jid', this.model.get('jid'));\n        this.model.session.on(\"change:auth_failed\", this.updateAuthState, this);\n        this.model.session.on(\"change:connected\", this.updateConnected, this);\n        this.model.on(\"change:status\", this.updateStatus, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"open_settings\", this.setActive, this);\n    },\n\n    updateConnected: function () {\n        this.$el.switchClass('disconnected', !this.model.isConnected());\n        xabber.updateFaviconConnected();\n    },\n\n    updateAuthState: function () {\n        let auth_failed = this.model.session.get('auth_failed');\n        xabber.updateFaviconConnected();\n        this.$('.status').hideIf(auth_failed);\n        this.$('.auth-failed').showIf(auth_failed);\n    },\n\n    updateStatus: function () {\n        this.$('.status').attr('data-status', this.model.get('status'));\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    filterChats: function (ev) {\n        ev.stopPropagation();\n        let is_single = $(ev.target).closest('.single-item').length;\n        if (is_single){\n            xabber.body.setScreen('settings-modal', {account_block_name: null});\n            xabber.trigger('update_placeholder');\n            return;\n        }\n        xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        if (xabber.toolbar_view.data.get('account_filtering') != this.model.get('jid'))\n            this.$el.addClass('active');\n        xabber.toolbar_view.showChatsByAccount(this.model);\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    },\n});\n\nxabber.ToolbarAccountsBlockView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.updateList();\n        this.model.on(\"add change:enabled\", this.updateOneInList, this);\n        this.model.on(\"update_order\", this.updateList, this);\n        this.model.on(\"destroy\", this.onAccountRemoved, this);\n    },\n\n    updateList: function (account) {\n        this.$el.find('.single-item').removeClass('single-item');\n        _.each(this.children, function (view) { view.detach(); });\n        _.each(this.model.enabled, (account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            !view && (view = this.addChild(jid, xabber.AccountToolbarItemView, {model: account}));\n            this.$el.append(view.$el);\n            if (this.model.enabled.length === 1)\n                this.$el.find('.toolbar-item.account-item').addClass('single-item');\n        });\n        this.$el.find('.toolbar-item.settings-modal').switchClass('hidden', this.model.enabled.length != 0);\n        this.parent.updateScrollBar();\n    },\n\n    updateOneInList: function (account) {\n        let jid = account.get('jid');\n        if (account.get('enabled')) {\n            let view = this.child(jid);\n            if (view) {\n                view.$el.detach();\n            } else {\n                view = this.addChild(jid, xabber.AccountToolbarItemView,\n                    {model: account});\n            }\n            let index = this.model.enabled.indexOf(account);\n            if (index === 0) {\n                this.$el.prepend(view.$el);\n            } else {\n                this.$('.account-item').eq(index - 1).after(view.$el);\n            }\n        } else {\n            account.last_msg_timestamp = 0;\n            this.removeChild(jid);\n        }\n        this.$el.find('.single-item').removeClass('single-item');\n        if (this.model.enabled.length === 1)\n            this.$el.find('.toolbar-item.account-item').addClass('single-item');\n        this.$el.find('.toolbar-item.settings-modal').switchClass('hidden', this.model.enabled.length != 0);\n        this.parent.updateScrollBar();\n    },\n\n    onAccountRemoved: function (account) {\n        this.removeChild(account.get('jid'));\n        this.parent.updateScrollBar();\n        if (this.model.enabled.length === 1)\n            this.$el.find('.toolbar-item.account-item').addClass('single-item');\n        this.$el.find('.toolbar-item.settings-modal').switchClass('hidden', this.model.enabled.length != 0);\n    }\n});\n\nxabber.Resource = Backbone.Model.extend({\n    idAttribute: 'resource',\n    defaults: {\n        priority: 0\n    }\n});\n\nxabber.ResourceView = xabber.BasicView.extend({\n    className: 'resource-wrap',\n    template: templates.resource,\n\n    _initialize: function (options) {\n        this.update();\n        this.model.on(\"change\", this.update, this);\n    },\n\n    update: function () {\n        let attrs = this.model.attributes;\n        this.$('.status').attr('data-status', attrs.status);\n        this.$('.status-message').text(attrs.status_message || xabber.getString(attrs.status));\n        this.$('.client').text(attrs.client || xabber.getString(\"please_wait\"));\n        this.$('.resource').text(attrs.resource);\n        this.$('.priority').text(attrs.priority);\n        return this;\n    }\n});\n\nxabber.ResourceRightView = xabber.BasicView.extend({\n    className: 'resource-wrap',\n    template: templates.resource_right,\n\n    _initialize: function (options) {\n        this.update();\n        this.model.on(\"change\", this.update, this);\n    },\n\n    update: function () {\n        let attrs = this.model.attributes;\n        this.$('.status').attr('data-status', attrs.status);\n        this.$('.status-message').text(attrs.status_message || xabber.getString(attrs.status));\n        this.$('.client').text(attrs.client || xabber.getString(\"please_wait\"));\n        this.$('.resource').text(attrs.resource);\n        this.$('.priority').text(attrs.priority);\n        return this;\n    }\n});\n\nxabber.Resources = Backbone.Collection.extend({\n    model: xabber.Resource,\n    comparator: function (r1, r2) {\n        let p1 = r1.get('priority'), p2 = r2.get('priority');\n        return p1 > p2 ? -1 : (p1 < p2 ? 1 : 0);\n    },\n\n    requestInfo: function (resource, callback) {\n        let jid = this.jid + '/' + resource.get('resource');\n        if (this.connection && this.connection.connected) {\n            this.connection.disco.info(jid, null, (iq) => {\n                let $identity = $(iq).find('identity[category=client]');\n                if ($identity.length)\n                    resource.set('client', $identity.attr('name'));\n                this.attention_supported = this.isFeatureSupported(iq, Strophe.NS.ATTENTION);\n                callback && callback();\n            });\n        }\n    },\n\n    isFeatureSupported: function (stanza, ns) {\n        let $stanza = $(stanza), is_supported = false;\n        $stanza.find('feature').each(function () {\n            let namespace = $(this).attr('var');\n            if (namespace === ns)\n                is_supported = true;\n        });\n        return is_supported;\n    },\n});\n\nxabber.ResourcesView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.renderByInit();\n        this.model.on(\"add\", this.onResourceAdded, this);\n        this.model.on(\"remove\", this.onResourceRemoved, this);\n        this.model.on(\"reset\", this.onReset, this);\n        this.model.on(\"change:priority\", this.onPriorityChanged, this);\n    },\n\n    renderByInit: function () {\n        this.model.each((resource) => {\n            this.onResourceAdded(resource);\n        });\n    },\n\n    onResourceAdded: function (resource) {\n        this.model.requestInfo(resource);\n        this.addChild(resource.get('resource'),\n            xabber.ResourceView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    onPriorityChanged: function (resource) {\n        this.model.sort();\n        this.updatePosition(resource);\n    }\n});\n\nxabber.AccountResources = xabber.Resources.extend({\n    initialize: function (models, options) {\n        this.jid = options.account.get('jid');\n        this.connection = options.account.connection;\n    }\n});\n\nxabber.AccountResourcesView = xabber.ResourcesView.extend({\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.parent.updateScrollBar();\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.parent.updateScrollBar();\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.main-resource').after(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.AccountVCardModalView = xabber.VCardView.extend({\n    template: env.templates.vcard.vcard_modal,\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .btn-vcard-edit\": \"showEditView\",\n        \"click .details-icon\": \"onClickIcon\"\n    },\n\n    __initialize: function () {\n        this.updateButtons();\n        this.model.on(\"activate deactivate\", this.updateButtons, this);\n    },\n\n    updateButtons: function () {\n        let connected = this.model.isConnected();\n        this.$('.btn-vcard-edit').showIf(connected);\n        this.$('.btn-vcard-refresh').showIf(connected);\n    },\n\n    showEditView: function ($el) {\n        this.vcard_edit_modal = new xabber.VCardEditModalView({model: this.model});\n        this.vcard_edit_modal.show({$el: $el});\n    }\n});\n\nxabber.AccountMediaGalleryView = xabber.BasicView.extend({\n    template: templates.media_gallery_account,\n    events: {\n        \"change input.gallery-upload\": \"onFileInputChanged\",\n        \"click .gallery-file:not(.gallery-avatar) .btn-delete\": \"deleteFile\",\n        \"click .gallery-file.gallery-avatar .btn-delete\": \"deleteAvatar\",\n        \"click .gallery-file .checkbox-field\": \"selectFile\",\n        \"click .btn-delete-selection\": \"deleteSelectedFiles\",\n        \"click .settings-tab:not(.settings-deletion-button)\": \"onTabClick\",\n        \"click .show-deletion\": \"showDeleteFilesView\",\n        \"click .btn-back-gallery\": \"backToMain\",\n        \"click .gallery-file\": \"onClickFile\",\n        \"click .btn-close-selection\": \"disableFilesSelect\",\n    },\n\n    _initialize: function () {\n        this.account = this.model;\n        this.$el.html(this.template());\n        this.parent.ps_container.on(\"ps-scroll-y\", this.onScroll.bind(this));\n        this.account.on(\"update_avatar_list\", this.onUpdateAvatars.bind(this));\n    },\n\n    render: function () {\n        this.updateStorage();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n    },\n\n    onScroll: function () {\n        if (this.$el.hasClass('hidden'))\n            return;\n        let scrollTop = this.parent.ps_container[0].scrollTop,\n            scrollHeight = this.parent.ps_container[0].scrollHeight,\n            offsetHeight = this.parent.ps_container[0].offsetHeight,\n            persentScrolled = scrollTop / (scrollHeight - offsetHeight);\n        if (persentScrolled > 0.8 && !this.loading_files && (this.current_page < this.total_pages)){\n            this.current_page++;\n            this.current_options.page = this.current_page;\n            this.getFiles(this.current_options)\n        }\n    },\n\n    updateStorage: function (after_deletion, after_avatar_update) {\n        this.account.getStorageStats(null,(response) => {\n            let used_storage = utils.pretty_size(response.total.used) || '0';\n            this.$('.btn-delete-files-dropdown').hideIf(!(response.total && response.total.used))\n            this.$('.gallery-manage-storage').hideIf(!(response.total && response.total.used))\n            this.$('.storage-usage').html(used_storage + xabber.getString(\"of\") + utils.pretty_size(response.quota))\n            this.$('.storage-usage-images').hideIf(!(response.images && response.images.used))\n            this.$('.storage-usage-images .storage-usage-amount').html(utils.pretty_size(response.images.used))\n            this.$('.storage-label-videos').hideIf(!(response.videos && response.videos.used))\n            this.$('.storage-usage-videos').hideIf(!(response.videos && response.videos.used))\n            this.$('.storage-usage-videos .storage-usage-amount').html(utils.pretty_size(response.videos.used))\n            this.$('.storage-label-voices').hideIf(!(response.voices && response.voices.used))\n            this.$('.storage-usage-voices').hideIf(!(response.voices && response.voices.used))\n            this.$('.storage-usage-voices .storage-usage-amount').html(utils.pretty_size(response.voices.used))\n            this.$('.storage-label-files').hideIf(!(response.files && response.files.used))\n            this.$('.storage-usage-files').hideIf(!(response.files && response.files.used))\n            this.$('.storage-usage-files .storage-usage-amount').html(utils.pretty_size(response.files.used))\n            if (response.images){\n                this.$('.storage-progress-images').css('width', ((response.images.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.videos){\n                this.$('.storage-progress-videos').css('width', ((response.videos.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.voices){\n                this.$('.storage-progress-voices').css('width', ((response.voices.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.files){\n                this.$('.storage-progress-files').css('width', ((response.files.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (this.parent){\n                this.parent.$('.settings-tab[data-block-name=\"media-gallery\"] .settings-block-label')\n                    .text(xabber.getString(\"settings_account__storage_label\", [utils.pretty_size(response.total.used), utils.pretty_size(response.quota)]));\n                this.parent.updateHeight();\n            }\n            if (xabber.settings_modal_view.$('.settings-tab[data-block-name=\"media-gallery\"] .settings-block-label').length){\n                xabber.settings_modal_view.$('.settings-tab[data-block-name=\"media-gallery\"] .settings-block-label')\n                    .text(xabber.getString(\"settings_account__storage_label\", [utils.pretty_size(response.total.used), utils.pretty_size(response.quota)]));\n                xabber.settings_modal_view.updateHeight();\n            }\n        });\n    },\n\n    filterType: function (file_type, sorting) {\n        this.$('.gallery-files').html('')\n        if (file_type === 'image' || file_type === 'video' || file_type === 'avatars') {\n            this.$('.gallery-files').removeClass('voice');\n            this.$('.gallery-files').removeClass('file');\n            this.$('.gallery-files').addClass('grid');\n        } else if (file_type === 'voice') {\n            this.$('.gallery-files').addClass('voice')\n            this.$('.gallery-files').removeClass('file');\n            this.$('.gallery-files').removeClass('grid')\n        } else {\n            this.$('.gallery-files').removeClass('voice')\n            this.$('.gallery-files').addClass('file');\n            this.$('.gallery-files').removeClass('grid')\n        }\n        let options = {type: file_type}\n        sorting && (options.order_by = sorting)\n        this.current_options = options\n        if (file_type === 'avatars')\n            this.getAvatars(options)\n        else\n            this.getFiles(options)\n    },\n\n    onTabClick: function (ev) {\n        let $target = $(ev.target).closest('.settings-tab'),\n            file_type = $target.attr('data-media-type'),\n            tab_header = $target.attr('data-header-text');\n        this.current_page = 1;\n        this.total_pages = 0;\n        this.parent.$('.btn-back-settings').addClass('hidden');\n        this.parent.$('.settings-panel-head-title').text(tab_header);\n        this.parent.$('.btn-select-files').removeClass('hidden');\n        this.parent.$('.btn-sorting').removeClass('hidden');\n        this.parent.$('.btn-more.media-gallery-button').removeClass('hidden');\n        this.$('.gallery-wrap').addClass('hidden');\n        this.$('.media-gallery-items-wrap').removeClass('hidden');\n        this.$('.media-gallery-items-wrap').attr('data-value', file_type);\n        this.$('.gallery-files').html('')\n        this.filterType(file_type);\n        if (this.parent){\n            this.parent.updateHeight();\n        }\n        if (xabber.settings_modal_view){\n            xabber.settings_modal_view.updateHeight();\n        }\n    },\n\n    backToMain: function (ev) {\n        this.parent.$('.btn-back-settings').removeClass('hidden');\n        this.parent.$('.btn-select-files').addClass('hidden');\n        this.parent.$('.btn-sorting').addClass('hidden');\n        this.parent.$('.settings-panel-head-title').text(xabber.getString(\"account_cloud_storage\"));\n        this.parent.$('.btn-more.media-gallery-button').addClass('hidden');\n        this.$('.gallery-wrap').removeClass('hidden');\n        this.$('.media-gallery-items-wrap').addClass('hidden');\n        this.updateStorage();\n        if (this.parent){\n            this.parent.updateHeight();\n        }\n        if (xabber.settings_modal_view){\n            xabber.settings_modal_view.updateHeight();\n        }\n    },\n\n    onUpdateAvatars: function (ev) {\n        this.updateStorage(false, true);\n        if (this.$('.media-gallery-items-wrap').attr('data-value') === 'avatars'){\n            this.current_page = 1;\n            this.total_pages = 0;\n            this.$('.gallery-files').html('');\n            this.filterType('avatars');\n        }\n    },\n\n    showDeleteFilesView: function (ev) {\n        xabber.trigger('show_delete_files', {model: this.account, gallery_view: this});\n    },\n\n    sortFiles: function (ev) {\n        let $target = $(ev.target).closest('.btn-gallery-sorting'),\n            file_type = this.$('.media-gallery-items-wrap').attr('data-value'),\n            sort_type = $target.attr('data-value');\n        this.current_page = 1;\n        this.total_pages = 0;\n        this.$('.gallery-files').html('')\n        this.filterType(file_type, sort_type);\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('uploaded-video')) {\n            let $file = $elem.closest('.gallery-file'),\n                f_url = $file.attr('data-file');\n\n            utils.dialogs.common('', '<video class=\"gallery-video-frame\" controls autoplay=1 width=\"420\" height=\"315\" src=\"' + f_url +'\"></video>', null, null, null, 'gallery-video-modal')\n            return;\n        }\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n\n        if ($elem.hasClass('mdi-play')) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n\n        if ($elem.hasClass('mdi-pause')) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.gallery-file');\n        $elem.addClass('voice-message-rendering').html($(templates.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, unique_id);\n\n        aud.on('ready', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('no-uploaded');\n            $msg_element.find('.gallery-file-placeholder-background').removeClass('gallery-audio-file-not-uploaded');\n            let duration = Math.round(aud.getDuration());\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n            aud.play();\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').addClass('mdi-pause').removeClass('mdi-play');\n            $msg_element.addClass('playing');\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n        });\n\n        aud.on('finish', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createAudio: function(file_url, unique_id) {\n        let audio = WaveSurfer.create({\n            container: \"#\" + unique_id,\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n\n    getFiles: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            options = Object.assign({obj_per_page: 50, order_by: '-id'}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                if (this.loading_files && this.current_rendered_type === options.type && !options.page)\n                    return;\n                this.current_rendered_type = options.type;\n                this.loading_files = true\n                $(env.templates.contacts.preloader()).appendTo(this.$('.gallery-files'))\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        response.type = options.type\n                        this.renderFiles(response)\n                        this.loading_files = false\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        this.current_rendered_type = undefined;\n                        console.log(response)\n                        this.loading_files = false\n                        this.$('.gallery-files .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    getAvatars: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            options = Object.assign({obj_per_page: 50, order_by: '-id', type: \"avatars\"}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                if (this.loading_files && this.current_rendered_type === options.type && !options.page)\n                    return;\n                this.current_rendered_type = options.type;\n                this.loading_files = true\n                $(env.templates.contacts.preloader()).appendTo(this.$('.gallery-files'))\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        response.type = options.type\n                        this.renderFiles(response)\n                        this.loading_files = false\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        this.current_rendered_type = undefined\n                        console.log(response)\n                        this.loading_files = false\n                        this.$('.gallery-files .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    renderFiles: function (response) {\n        if (response.type != this.$('.media-gallery-items-wrap').attr('data-value'))\n            return;\n        this.total_pages = response.total_pages;\n        this.$('.gallery-files .preloader-wrapper').remove();\n        if (response.items && response.items.length){\n            response.items.forEach((item) => {\n                item.thumbnail && item.thumbnail.url && (item.thumbnail = item.thumbnail.url);\n                let duration;\n                item.metadata && item.metadata.duration && (duration = utils.pretty_duration(item.metadata.duration));\n                let $gallery_file = $(templates.media_gallery_account_file({\n                    file: item,\n                    svg_icon: utils.file_type_icon_svg(item.media_type),\n                    filesize: utils.pretty_size(item.size),\n                    created_at: utils.pretty_date(item.created_at),\n                    duration: duration,\n                    download_only: false,\n                }));\n                (response.type === 'avatars') && $gallery_file.addClass('gallery-avatar');\n                $gallery_file.appendTo(this.$('.gallery-files'));\n                $gallery_file.find('.uploaded-img').length && $gallery_file.find('.uploaded-img').magnificPopup({\n                    type: 'image',\n                    closeOnContentClick: true,\n                    fixedContentPos: true,\n                    mainClass: 'mfp-no-margins mfp-with-zoom',\n                    image: {\n                        verticalFit: true,\n                        titleSrc: function(item) {\n                            return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                        }\n                    },\n                    zoom: {\n                        enabled: true,\n                        duration: 300\n                    }\n                });\n            });\n        }\n        else {\n            this.$('.gallery-files').html(`<div class=\"no-files\">${xabber.getString(\"no_files\")}</div>`)\n        }\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings)\n        if (this.parent && this.parent.updateHeight)\n            this.parent.updateHeight();\n    },\n\n    deleteFile: function (ev) {\n        let $target = $(ev.target).closest('.gallery-file'),\n            file_id = $target.attr('data-id');\n        this.account.deleteFile(file_id,(response) => {\n            $target.detach();\n        }, (err) => {\n        })\n    },\n\n    deleteAvatar: function (ev) {\n        this.account.testGalleryTokenExpire(() => {\n            let $target = $(ev.target).closest('.gallery-file'),\n                file_id = $target.attr('data-id');\n            if (this.account.get('gallery_token') && this.account.get('gallery_url') && file_id)\n                $.ajax({\n                    type: 'DELETE',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({id: file_id}),\n                    success: (response) => {\n                        $target.detach();\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n        });\n    },\n\n    enableFilesSelect: function (ev) {\n        this.$('.media-gallery-items-wrap').addClass('select-items-state');\n        this.parent.$('.settings-panel-head-title').addClass('hidden');\n        this.parent.$('.btn-more.media-gallery-button').addClass('hidden');\n        this.parent.$('.btn-back-settings').addClass('hidden');\n        this.onSelectFile();\n    },\n\n    disableFilesSelect: function (ev) {\n        this.$('.media-gallery-items-wrap').removeClass('select-items-state');\n        this.parent.$('.settings-panel-head-title').removeClass('hidden');\n        this.parent.$('.btn-more.media-gallery-button').removeClass('hidden');\n        this.parent.$('.btn-back-settings').removeClass('hidden');\n        this.$('.gallery-file .checkbox-field input:checked').prop('checked', false);\n    },\n\n    selectFile: function (ev) {\n        let $target_input = $(ev.target).closest('.checkbox-field').find('input');\n        $target_input.prop('checked', !$target_input.prop('checked'));\n        this.onSelectFile();\n    },\n\n    onSelectFile: function () {\n        if (!this.$('.media-gallery-items-wrap').attr('data-value'))\n            return;\n        let selected_count = this.$('.gallery-file .checkbox-field input:checked').length,\n            selected_header;\n        selected_header = xabber.getQuantityString(`media_gallery_selected_${this.$('.media-gallery-items-wrap').attr('data-value')}_header`, selected_count);\n        this.$('.gallery-selection-head').text(selected_header);\n\n        this.$('.gallery-file .checkbox-field input:checked').closest('.gallery-file').addClass('selected-gallery-file');\n        this.$('.gallery-file .checkbox-field input:not(:checked)').closest('.gallery-file').removeClass('selected-gallery-file');\n    },\n\n    deleteSelectedFiles: function () {\n        this.$('.gallery-file .checkbox-field input:checked').each((idx, item) => {\n            let file_id = $(item).closest('.gallery-file').attr('data-id');\n            if (file_id){\n                if (this.$('.media-gallery-items-wrap').attr('data-value') === 'avatars'){\n                    this.deleteAvatar({target: item});\n                } else {\n                    this.deleteFile({target: item});\n                }\n            }\n        })\n        this.disableFilesSelect();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target,\n            files = [];\n        for (let i = 0; i < target.files.length; i++) {\n            files.push(target.files[i]);\n        }\n\n        if (files) {\n            this.account.prepareFiles(files, this.openStoragePanel.bind(this));\n            $(target).val('')\n        }\n    },\n});\n\nxabber.DeleteFilesFromGalleryView = xabber.BasicView.extend({\n    className: 'modal main-modal delete-files-modal',\n    ps_selector: '.modal-content',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    template: templates.delete_files_media_gallery,\n    events: {\n        \"click .btn-confirm\": \"deleteFilesFiltered\",\n        \"click .btn-delete-files-percent\": \"deletePercent\",\n        \"click .btn-cancel\": \"close\",\n        \"click .gallery-file\": \"onClickFile\",\n    },\n\n    render: function (options) {\n        this.account = options.model;\n        this.gallery_view = options.gallery_view;\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function (options) {\n        this.$el.removeClass('wide-deletion');\n        this.$('.media-gallery-delete-items-wrap').addClass('hidden');\n        this.$('.deletion-variants').removeClass('hidden');\n        this.$('.modal-footer').addClass('hidden');\n        this.$('.gallery-files').addClass('hidden');\n        this.$('.list-variant.tab').addClass('hidden');\n        this.$('.delete-files-preview-container').addClass('hidden');\n        this.$('.setting-name').addClass('hidden');\n        this.$('.delete-files-preview-wrap .gallery-files').html('');\n        this.$('.media-gallery-delete-items-wrap .no-files').addClass('hidden');\n        this.$('.modal-header').text(xabber.getString(\"media_gallery_delete_files\"));\n        this.updateScrollBar();\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target),\n            gallery;\n\n        if ($elem.hasClass('uploaded-video')) {\n            let $file = $elem.closest('.gallery-file'),\n                f_url = $file.attr('data-file');\n\n            utils.dialogs.common('', '<video class=\"gallery-video-frame\" controls autoplay=1 width=\"420\" height=\"315\" src=\"' + f_url +'\"></video>', null, null, null, 'gallery-video-modal')\n            return;\n        }\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.gallery_view.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n\n        if ($elem.hasClass('mdi-play')) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n\n        if ($elem.hasClass('mdi-pause')) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n    },\n\n    deletePercent: function (ev) {\n        let $target = $(ev.target).closest('.btn-delete-files-percent'),\n            percent = $target.attr('data-value');\n        this.$el.addClass('wide-deletion');\n        this.$('.deletion-variants').addClass('hidden');\n        this.$('.modal-header').text(xabber.getString(\"media_gallery_delete_files_header\"));\n        this.updateScrollBar();\n        let options = {percent: percent}\n        this.current_page_preview = 1\n        $(env.templates.contacts.preloader()).appendTo(this.$('.modal-content'))\n        this.getFilesForDeletion(options);\n    },\n\n    getFilesForDeletion: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            options = Object.assign({obj_per_page: 50, order_by: '-id'}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        console.log(response)\n                        let current_page = this.current_page_preview;\n                        if (current_page < response.total_pages){\n                            this.current_page_preview++;\n                            options.page = this.current_page_preview;\n                            this.getFilesForDeletion(options)\n                        } else {\n                            this.$('.preloader-wrapper').remove();\n                            this.$('.modal-footer').removeClass('hidden');\n                            this.$('.media-gallery-delete-items-wrap').removeClass('hidden');\n                            this.updateScrollBar();\n                        }\n                        this.renderForDeletion(response);\n                        if (current_page === 1 && response.items && response.items.length){\n                            this.date_lte_for_deletion = response.items[0].created_at;\n                        } else if (current_page === 1) {\n                            this.$('.media-gallery-delete-items-wrap .no-files').removeClass('hidden');\n                        }\n                    },\n                    error: (response) => {\n                        console.log(response)\n                        this.$('.preloader-wrapper').remove();\n                        this.$('.media-gallery-delete-items-wrap .no-files').removeClass('hidden');\n                        this.updateScrollBar();\n                    }\n                });\n            }\n        });\n    },\n\n    renderForDeletion: function (response) {\n        if (response.items && response.items.length){\n            response.items.forEach((item) => {\n                item.thumbnail && item.thumbnail.url && (item.thumbnail = item.thumbnail.url);\n                let duration;\n                item.metadata && item.metadata.duration && (duration = utils.pretty_duration(item.metadata.duration));\n                let $gallery_file = $(templates.media_gallery_account_file({\n                    file: item,\n                    svg_icon: utils.file_type_icon_svg(item.media_type),\n                    filesize: utils.pretty_size(item.size),\n                    created_at: utils.pretty_date(item.created_at),\n                    duration: duration,\n                    download_only: true,\n                }));\n                if (item.media_type && item.media_type.includes('image')){\n                    $gallery_file.appendTo(this.$('.gallery-files.delete-files-images'));\n                    this.$('.delete-files-images').removeClass('hidden');\n                } else if (item.media_type && item.media_type.includes('video')){\n                    $gallery_file.appendTo(this.$('.gallery-files.delete-files-videos'));\n                    this.$('.delete-files-videos').removeClass('hidden');\n                } else if (item.media_type && item.media_type.includes('+voice')){\n                    $gallery_file.appendTo(this.$('.gallery-files.delete-files-voices'));\n                    this.$('.delete-files-voices').removeClass('hidden');\n                } else {\n                    $gallery_file.appendTo(this.$('.gallery-files.delete-files-files'));\n                    this.$('.delete-files-files').removeClass('hidden');\n                }\n                $gallery_file.find('.uploaded-img').length && $gallery_file.find('.uploaded-img').magnificPopup({\n                    type: 'image',\n                    closeOnContentClick: true,\n                    fixedContentPos: true,\n                    mainClass: 'mfp-no-margins mfp-with-zoom',\n                    image: {\n                        verticalFit: true,\n                        titleSrc: function(item) {\n                            return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                        }\n                    },\n                    zoom: {\n                        enabled: true,\n                        duration: 300\n                    }\n                });\n            });\n            let dropdown_settings = {\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'right'\n            };\n            this.$('.dropdown-button').dropdown(dropdown_settings)\n            this.$('.list-variant.tab:not(.hidden)').length && this.$('.list-variant.tab:not(.hidden)').first().click();\n            this.updateScrollBar();\n        }\n    },\n\n    deleteFilesFiltered: function (ev) {\n        if (!this.date_lte_for_deletion)\n            return\n\n        utils.dialogs.ask(xabber.getString(\"media_gallery_delete_files_confirm_delete_header\"), xabber.getString(\"media_gallery_delete_files_confirm_delete_text\"),\n            null, { ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n            if (!res)\n                return;\n            $(env.templates.contacts.preloader()).appendTo(this.$('.modal-footer'))\n            this.account.testGalleryTokenExpire(() => {\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    $.ajax({\n                        type: 'DELETE',\n                        headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                        url: this.account.get('gallery_url') + 'v1/files/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: JSON.stringify({date_lte: this.date_lte_for_deletion}),\n                        success: (response) => {\n                            console.log(response);\n                            this.close();\n                        },\n                        error: (response) => {\n                            this.account.handleCommonGalleryErrors(response)\n                            console.log(response)\n                        }\n                    });\n            });\n        });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n        this.gallery_view.updateStorage();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.AccountSettingsModalView = xabber.BasicView.extend({\n    className: 'settings-panel-wrap',\n    template: templates.account_settings_modal,\n    ps_selector: '.settings-panel',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    avatar_size: constants.AVATAR_SIZES.ACCOUNT_SETTINGS_LEFT,\n\n    events: {\n        \"click .background-overlay\": \"closeSettings\",\n        \"change .main-info-wrap .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-back\": \"showSettings\",\n        \"click .btn-back-settings\": \"backToMenu\",\n        \"click .btn-back-subsettings-account\": \"backToSubMenu\",\n        \"click .btn-emoji-panel\": \"openEmojiPanel\",\n        \"click .btn-selfie\": \"openWebcamPanel\",\n        \"click .settings-tab[data-block-name='status']\": \"openChangeStatus\",\n        \"click .settings-tabs-wrap .settings-tab:not(.delete-account):not(.settings-non-tab)\": \"jumpToBlock\",\n        \"click .tokens-wrap .settings-tab.token-wrap\": \"jumpToBlock\",\n        \"click .settings-tab.delete-account\": \"deleteAccount\",\n        \"click .settings-tab.unregister-account\": \"unregisterAccount\",\n\n        \"change .enabled-state input\": \"setEnabled\",\n        \"change .setting-send-chat-states input\": \"setTypingNotification\",\n        \"change .setting-use-omemo input\": \"setEnabledOmemo\",\n        \"click .btn-change-password\": \"showPasswordView\",\n        \"click .btn-reconnect\": \"reconnect\",\n        \"click\": \"hideResources\",\n        \"change .sync-account\": \"changeSyncSetting\",\n        \"click .btn-delete-settings\": \"deleteSettings\",\n        \"click .color-picker-button\": \"changeColor\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-revoke-token\": \"revokeXToken\",\n        \"click .devices-wrap .btn-revoke-all-tokens\": \"revokeAllXTokens\",\n        \"click .btn-manage-devices\": \"openDevicesWindow\",\n        \"click .btn-block\": \"openBlockWindow\",\n        \"click .btn-unblock-selected\": \"unblockSelected\",\n        \"click .btn-deselect-blocked\": \"deselectBlocked\",\n        \"click .btn-gallery-sorting\": \"sortFiles\",\n        \"click .btn-select-files\": \"enableFilesSelect\",\n        \"click .all-sessions .device-encryption.active\": \"openFingerprint\",\n        \"click .device-information-trust\": \"openFingerprintDevice\",\n        \"click .btn-purge-keys\": \"purgeKeys\"\n    },\n\n    _initialize: function (options) {\n        if (options.forced_ps_container){\n            this.ps_container = options.forced_ps_container;\n        }\n        this.status_field = new xabber.StatusMessageModalWidget({\n            el: this.$('.status-wrap')[0],\n            model: this.model\n        });\n        this.updateName();\n        this.updateAvatar();\n        this.updateBlocks();\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.on(\"change:gallery_token\", this.updateGallery, this);\n        this.model.on(\"activate deactivate\", this.updateBlocks, this);\n        this.model.on(\"destroy\", this.remove, this);\n\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n\n        this.vcard_view = this.addChild('vcard', xabber.AccountVCardModalView,\n            {model: this.model,});\n        this.gallery_view = this.addChild('media-gallery', xabber.AccountMediaGalleryView,\n            {model: this.model, el: this.$('.media-gallery')[0]});\n        this.$('.account-name .value').text(this.model.get('jid'));\n        this.updateStatus();\n        this.updateView();\n        this.showConnectionStatus();\n        this.updateSynchronizationBlock();\n\n        this.model.resources.on(\"change\", this.updateXTokens, this);\n        this.model.resources.on(\"add\", this.updateXTokens, this);\n        this.model.resources.on(\"destroy\", this.updateXTokens, this);\n        this.model.groups.on(\"change\", this.updateGroupsLabel, this);\n        this.model.groups.on(\"add\", this.updateGroupsLabel, this);\n        this.model.groups.on(\"destroy\", this.updateGroupsLabel, this);\n        this.model.session.on(\"change:reconnecting\", this.updateReconnectButton, this);\n        this.model.session.on(\"change:conn_feedback\", this.showConnectionStatus, this);\n        this.model.settings.on(\"change:to_sync\", this.updateSyncOption, this);\n        this.model.settings.on(\"change:deleted\", this.updateDelSettingsButton, this);\n        this.model.settings.on(\"change:to_sync change:synced\", this.updateSyncState, this);\n        this.model.on(\"change:enabled\", this.updateEnabled, this);\n        this.model.on(\"update_omemo_devices\", this.updateOmemoDevices, this);\n        this.model.on('trusting_updated', this.updateOmemoDevices, this);\n        this.model.on('trusting_updated', this.updateXTokens, this);\n        this.model.settings.on(\"change:omemo\", this.updateEnabledOmemo, this);\n        this.model.settings.on(\"change:encrypted_chatstates\", this.updateEncryptedChatstates, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"activate deactivate\", this.updateView, this);\n        this.model.on(\"change:auth_type\", this.updateView, this);\n        this.model.on(\"destroy\", this.remove, this);\n        if (options && !options.single_account_modal) {\n            $(document).on(\"keyup.account_settings_modal\", (ev) => {\n                if (ev.keyCode === constants.KEY_ESCAPE && this.data.get('visible') && !options.single_account_modal) {\n                    this.closeSettings();\n                }\n            });\n        }\n    },\n\n    render: function (options) {\n        this.$('.circle-avatar.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        this.updateCSS();\n\n        this.updateEnabledOmemo();\n        this.updateEncryptedChatstates();\n        this.updateEnabled();\n        this.updateXTokens();\n        this.updateGroupsLabel();\n        this.updateView();\n        this.$('.main-resource .client').text(xabber.get('client_name'));\n        this.$('.main-resource .resource').text(this.model.resource);\n        this.$('.main-resource .priority').text(this.model.get('priority'));\n        this.$(`.color-scheme input[type=radio][name=account_color][value=\"${this.model.settings.get('color')}\"]`)\n            .prop('checked', true);\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n        this.$('.panel-content-wrap').removeClass('hidden');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.updateOmemoDevices;\n        this.$('.left-column').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.$('.btn-back-settings').removeClass('hidden');\n        this.$('.btn-back-subsettings-account').addClass('hidden');\n        this.$('.btn-sorting').addClass('hidden');\n        this.$('.settings-panel-head-title').removeClass('hidden');\n        this.$('.media-gallery-button.btn-more').addClass('hidden');\n        this.updateHeight();\n        this.updateBlockedLabel();\n        if (options && options.block_name) {\n            let $elem = this.$(`.settings-tab[data-block-name=\"${options.block_name}\"]`);\n            if ($elem.length)\n                this.jumpToBlock({target: $elem[0]});\n        }\n        return this;\n    },\n\n    updateHeight: function () {\n        let height;\n        if (!this.$('.left-column').hasClass('hidden'))\n            height = this.$('.left-column').height();\n        if (!this.$('.right-column').hasClass('hidden'))\n            height = this.$('.right-column').height();\n        this.ps_container.css('height', height + 'px');\n        this.updateScrollBar();\n    },\n\n    updateBlockedLabel: function () {\n        if (!(this.model.blocklist && this.model.blocklist.list))\n            return;\n\n        let blocked_count = Object.keys(this.model.blocklist.list).length,\n            label_text = blocked_count === 0 ? xabber.getString(\"no_entries\") : xabber.getQuantityString(\"entry_count\", blocked_count);\n        this.$('.settings-tab[data-block-name=\"blocklist\"] .settings-block-label').text(label_text);\n    },\n\n    onScrollY: function () {\n        if (this.getScrollTop() === 0)\n            this.$('.settings-panel-head').removeClass('lined-head');\n        else\n            this.$('.settings-panel-head').addClass('lined-head');\n        if (this.getScrollTop() >= 180)\n            this.$('.settings-account-head').addClass('head-scrolled');\n        else\n            this.$('.settings-account-head').removeClass('head-scrolled');\n    },\n\n    jumpToBlock: function (ev) {\n        this.jumpToBlockHandler(ev);\n    },\n\n    jumpToBlockHandler: function (ev) {\n        if ($(ev.target).closest('.device-encryption').length || $(ev.target).closest('.btn-revoke-token').length)\n            return;\n\n        let $tab = $(ev.target).closest('.settings-tab'),\n            $elem = this.$('.settings-block-wrap.' + $tab.attr('data-block-name')),\n            block_name = $tab.attr('data-block-name');\n        if (block_name){\n            this.$('.device-more-button.btn-more').hideIf(block_name != 'encryption');\n            if (block_name != 'media-gallery'){\n                this.$('.media-gallery-button.btn-more').addClass('hidden');\n            }\n        }\n        if (block_name === 'password'){\n            xabber.trigger('change_account_password', this.model);\n            return;\n        }\n        this.$('.settings-block-wrap').addClass('hidden');\n        this.$('.left-column').addClass('hidden');\n        this.$('.right-column').removeClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span.settings-panel-head-title').text($elem.attr('data-header'));\n        if (block_name === 'media-gallery'){\n            this.gallery_view.$('.media-gallery-items-wrap:not(.delete-files-preview-wrap)').removeClass('select-items-state');\n            this.gallery_view.disableFilesSelect();\n            this.gallery_view.backToMain();\n        }\n        if (block_name === 'blocklist'){\n            this.$('.blocklist-tabs-wrap .tabs .indicator').remove();\n            this.$('.blocklist-tabs-wrap .tabs').tabs();\n            this.$('.blocklist-tabs-wrap .indicator').addClass('ground-color-500');\n        }\n        if (block_name === 'vcard-tab'){\n            this.vcard_view.showEditView(this.$('.vcard'));\n        }\n        if (block_name === 'device-information'){\n            $elem.attr('data-token-uid', $tab.attr('data-token-uid'));\n            this.updateDeviceInformation($tab.attr('data-token-uid'));\n        }\n        this.$('.btn-back-subsettings-account').attr('data-subblock-parent-name', '');\n        if ($tab.closest('.right-column') && $tab.attr('data-subblock-parent-name')) {\n            this.$('.btn-back-settings').addClass('hidden');\n            this.$('.btn-back-subsettings-account').removeClass('hidden');\n            this.$('.btn-back-subsettings-account').attr('data-subblock-parent-name', $tab.attr('data-subblock-parent-name'));\n        }\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    backToMenu: function (ev) {\n        this.backToMenuHandler(ev);\n    },\n\n    backToMenuHandler: function (ev) {\n        this.$('.left-column').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    backToSubMenu: function (ev) {\n        this.backToSubMenuHandler(ev);\n    },\n\n    backToSubMenuHandler: function (ev) {\n        let $tab = $(ev.target).closest('.btn-back-subsettings-account'),\n            block_name = $tab.attr('data-subblock-parent-name');\n        if (!block_name){\n            this.backToMenu(ev);\n            return;\n        }\n        let $elem = this.$('.settings-block-wrap.' + block_name),\n            elem_parent = $elem.attr('data-parent-block');\n        if (block_name){\n            this.$('.device-more-button.btn-more').hideIf(block_name != 'encryption');\n        }\n        this.$('.settings-block-wrap').addClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span.settings-panel-head-title').text($elem.attr('data-header'));\n        if (elem_parent) {\n            $tab.attr('data-subblock-parent-name', elem_parent);\n            this.deselectBlocked();\n        } else {\n            this.$('.btn-back-settings').removeClass('hidden');\n            this.$('.btn-back-subsettings-account').addClass('hidden');\n        }\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.model.get('name'));\n        this.$('.jid').text(this.model.get('jid'));\n        this.updateNameCSS();\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateBlocks: function () {\n        let connected = this.model.isConnected();\n        this.$('.main-info-wrap').switchClass('disconnected', !connected);\n        this.$('.settings-tab[data-block-name=\"profile\"]').showIf(connected);\n        this.$('.settings-tab[data-block-name=\"encryption\"]').showIf(connected);\n        this.$('.profile-image-dropdown').showIf(connected);\n        this.$('.set-groupchat-avatar').showIf(connected);\n        this.updateGallery();\n        this.updateScrollBar();\n    },\n\n    updateGallery: function () {\n        let connected = this.model.isConnected();\n        this.$('.settings-tab[data-block-name=\"media-gallery\"]').showIf(connected && this.model.get('gallery_token'));\n    },\n\n    updateNameCSS: function () {\n        if (!this.isVisible())\n            return;\n        let $name = this.$('.name');\n        $name.removeAttr('style');\n        let wrap_width = this.$('.name-wrap').width(),\n            width = $name.width(),\n            font_size = 22;\n        while (width > wrap_width && font_size > 12) {\n            $name.css({'font-size': font_size});\n            width = $name.width();\n            font_size -= 2;\n        }\n        $name.css({'margin-left': (wrap_width - width) / 2});\n    },\n\n    chooseAvatar: function () {\n        if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n            let avatar_view = new xabber.SetAvatarView();\n            avatar_view.render({model: this.model});\n        } else\n            this.$('.main-info-wrap .circle-avatar input').click();\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    },\n\n    closeSettings: function (ev) {\n        xabber.settings_modal_view.closeSettings();\n    },\n\n    openEmojiPanel: function () {\n        let emoji_panel_view = new xabber.EmojiProfileImageView();\n        emoji_panel_view.open({model: this.model});\n    },\n\n    openWebcamPanel: function () {\n        let webcam_panel_view = new xabber.WebcamProfileImageView();\n        webcam_panel_view.open({model: this.model});\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE && !(this.model.get('gallery_token') && this.model.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        this.$('.circle-avatar').find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image, hash, size) => {\n            if (image) {\n                this.model.pubAvatar({base64: image, hash: hash, size: size, type: file.type, file: file}, () => {\n                    this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                    this.$('.circle-avatar').find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                }, () => {\n                    this.$('.circle-avatar').find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            } else\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n        });\n    },\n\n    updateCSS: function () {\n        this.updateNameCSS();\n    },\n\n    openChangeStatus: function () {\n        !xabber.change_status_view && (xabber.change_status_view = new xabber.ChangeStatusView());\n        xabber.change_status_view.open(this.model);\n    },\n\n    deleteAccount: function () {\n        utils.dialogs.ask(xabber.getString(\"settings_account__button_quit_account\"), xabber.getString(\"dialog_quit_account__confirm\"),\n            [], { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            if (!res)\n                return;\n            this.model.deleteAccount(true);\n        });\n    },\n\n    unregisterAccount: function () {\n        xabber.trigger('unregister_account', this.model);\n    },\n\n\n\n\n\n    updateStatus: function () {\n        let account = this.model,\n            status = account.get('status');\n        this.$('.settings-block-wrap.status .settings-subblock-wrap .status').attr('data-status', status);\n\n        this.$('.settings-tab[data-block-name=\"status\"] .settings-block-label').text(this.model.getStatusMessage());\n    },\n\n    updateOmemoDevices: function () {\n        if (this.model.omemo && this.model.omemo.store){\n            let identity_key = this.model.omemo.store.get('identityKey');\n            if (identity_key){\n                this.$('.btn-manage-devices').removeClass('hidden2');\n            } else {\n                this.model.omemo.store.once('change:identityKey', () => {\n                    this.$('.btn-manage-devices').removeClass('hidden2');\n                }, this);\n            }\n        }\n        else\n            this.$('.btn-manage-devices').addClass('hidden2');\n    },\n\n    updateView: function () {\n        let connected = this.model.isConnected();\n        this.$('.connection-wrap .buttons-wrap .btn-change-password').hideIf(this.model.get('auth_type') === 'x-token');\n        this.$('.connection-wrap .buttons-wrap .btn-reconnect').hideIf(this.model.get('auth_type') === 'x-token');\n        this.updateScrollBar();\n    },\n\n    updateSynchronizationBlock: function () {\n        this.updateSyncState();\n        this.updateSyncOption();\n        this.updateDelSettingsButton();\n    },\n\n    showResources: function (ev) {\n        this.$(`.token-resource-wrap`).hideIf(true)\n        let resource_id = $(ev.target).attr('data-resource-id');\n        this.$(`.token-resource-wrap[data-resource-id=\"${resource_id}\"]`).hideIf(false)\n    },\n\n    hideResources: function (ev) {\n        if (!($(ev.target).hasClass('last-auth') && $(ev.target).hasClass('resource') || $(ev.target).closest(\".token-resource-wrap\").length > 0))\n            this.$(`.token-resource-wrap`).hideIf(true)\n    },\n\n    renderAllXTokens: function () {\n        this.$('.sessions-wrap').html(\"\");\n        this.$('.orphaned-fingerprints-wrap').html(\"\");\n        this.$('.device-encryption-warning').addClass('hidden');\n        this.$('.device-encryption-warning').attr('data-not-trusted-count', 0);\n        this.$('.settings-tab[data-block-name=\"devices\"] .settings-block-label').text(xabber.getQuantityString(\"settings_account__devices_subheader_label\", this.model.x_tokens_list.length));\n        $(_.sortBy(this.model.x_tokens_list, '-last_auth')).each((idx, token) => {\n            let pretty_token = {\n                resource_obj: undefined,\n                client: token.client,\n                device: token.device,\n                token_uid: token.token_uid,\n                ip: token.ip,\n                last_auth: pretty_datetime_date(token.last_auth),\n                expire: pretty_datetime(token.expire)\n            };\n            let resource_obj = this.model.resources.findWhere({ token_uid: token.token_uid });\n            if (resource_obj)\n                pretty_token.resource_obj = resource_obj.toJSON();\n            if (this.model.get('x_token')) {\n                if (this.model.get('x_token').token_uid == token.token_uid) {\n                    pretty_token.is_omemo = this.model.omemo ? true : false\n                    let $cur_token_html = $(templates.current_token_item_modal(pretty_token));\n                    this.$('.current-session').append($cur_token_html);\n                    return;\n                }\n            }\n            let $token_html = $(templates.token_item_modal(pretty_token));\n            this.$('.all-sessions').append($token_html);\n            if (this.model.omemo) {\n                !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n                let omemo_device_id = token.omemo_id ? token.omemo_id : Number(pretty_token.token_uid.slice(0,8));\n                this.omemo_own_devices.updateTrustDevice(Number(omemo_device_id), $token_html, this, () => {\n                    if (this.$(`.settings-block-wrap.device-information[data-token-uid=\"${pretty_token.token_uid}\"]`).length\n                        && !this.$(`.settings-block-wrap.device-information[data-token-uid=\"${pretty_token.token_uid}\"]`).hasClass('hidden')){\n                        this.updateDeviceInformation(pretty_token.token_uid);\n                    }\n                });\n            } else {\n                if (token.omemo_id){\n                    $token_html.find('.device-encryption span').text(xabber.getString(\"settings_account__unverified_device\"));\n                    $token_html.find('.device-encryption .mdi-lock').removeClass('hidden');\n                }\n            }\n        });\n        if (this.$('.all-sessions').children().length){\n            this.$('.all-sessions-wrap').removeClass('hidden');\n            this.$('.active-sessions-label').removeClass('hidden');\n            this.$('.btn-revoke-all-tokens').removeClass('hidden');\n        }\n        else {\n            this.$('.all-sessions-wrap').addClass('hidden');\n            this.$('.active-sessions-label').addClass('hidden');\n            this.$('.btn-revoke-all-tokens').addClass('hidden');\n        }\n        this.$('.devices-wrap').removeClass('hidden')\n        !this._single_account  && this.$('.token-wrap').attr('data-subblock-parent-name', '');\n        this.updateHeight();\n    },\n\n    updateDeviceInformation: function (token_uid) {\n        let token = this.model.x_tokens_list.find(item => (item.token_uid === token_uid));\n        this.$('.device-information-last-seen').showIf(pretty_datetime(token.last_auth)).find('.device-information-text').text(pretty_datetime(token.last_auth));\n        this.$('.device-information-device').showIf(token.device).find('.device-information-text').text(token.device);\n        this.$('.device-information-client').showIf(token.client).find('.device-information-text').text(token.client);\n        this.$('.device-information-ip').showIf(token.ip).find('.device-information-text').text(token.ip);\n        this.$('.device-information-expires').showIf(pretty_datetime(token.expire)).find('.device-information-text').text(pretty_datetime(token.expire));\n        this.$('.device-information-device-id').showIf(token.omemo_id).find('.device-information-text').text(token.omemo_id);\n        this.$('.device-information-security-label').showIf(token.omemo_id);\n        let resource_obj = this.model.resources.findWhere({ token_uid: token_uid }),\n            status_text;\n        if (resource_obj){\n            status_text = resource_obj.get('status_message') || resource_obj.get('status') && xabber.getString(resource_obj.get('status')) || xabber.getString(\"account_state_connected\");\n        } else if (this.model.get('x_token').token_uid == token.token_uid){\n            status_text = this.model.get('status_message') || this.model.get('status') && xabber.getString(this.model.get('status')) || xabber.getString(\"account_state_connected\")\n        } else\n            status_text = xabber.getString(\"offline\");\n\n        this.$('.device-information-status .device-information-text').text(status_text);\n\n        if (this.model.get('x_token')) {\n            this.$('.btn-revoke-token').hideIf(this.model.get('x_token').token_uid == token.token_uid);\n            this.$('.device-information-trust')\n                .switchClass('hidden', this.model.get('x_token').token_uid == token.token_uid)\n        }\n        if (token.omemo_id && this.model.omemo){\n            let dfd = new $.Deferred(),\n                device = this.model.omemo.own_devices[token.omemo_id];\n            dfd.done((fing) => {\n                if (fing.match(/.{1,8}/g))\n                    fing = fing.match(/.{1,8}/g).join(\" \");\n                this.$('.device-information-fingerprint').showIf(fing).find('.device-information-text').text(fing);\n\n                let $this_device = this.$(`.token-wrap[data-token-uid=\"${token_uid}\"]`)\n\n                this.$('.device-information-trust').removeClass('hidden');\n                this.$('.device-information-trust-text').text($this_device.attr('data-trust-text'));\n                this.$('.device-information-trust').attr('data-trust', $this_device.attr('data-trust'));\n                this.$('.device-information-trust-text').attr('data-trust', $this_device.attr('data-trust'));\n                if (this.model.get('x_token') && this.model.get('x_token').token_uid == token.token_uid){\n                    this.$('.device-information-trust-text').text(xabber.getString(\"settings_account__omemo_enabled\"));\n                    this.$('.device-information-trust').addClass('hidden');\n                    this.$('.device-information-trust').attr('data-trust', 'trust');\n                    this.$('.device-information-trust-text').attr('data-trust', 'trust');\n                }\n            })\n            if (device.get('fingerprint')) {\n                dfd.resolve(device.get('fingerprint'));\n            } else if (device.get('ik')) {\n                device.set('fingerprint', device.generateFingerprint());\n                dfd.resolve(device.get('fingerprint'));\n            } else {\n                device.getBundle().then(({pk, spk, ik}) => {\n                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                    let fingerprint = device.generateFingerprint();\n                    if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                        device.set('fingerprint', fingerprint);\n                    dfd.resolve(device.get('fingerprint'));\n                });\n            }\n        } else {\n            this.$('.device-information-fingerprint').addClass('hidden');\n            this.$('.device-information-trust').addClass('hidden');\n            this.$('.device-information-trust-text').text('');\n            this.$('.device-information-trust').attr('data-trust', '');\n            this.$('.device-information-trust-text').attr('data-trust', '');\n        }\n        this.$('.settings-panel-head span.settings-panel-head-title').text(token.device);\n    },\n\n    openFingerprint: function (ev) {\n        if (this.model.omemo){\n            let $target = $(ev.target).closest('.device-encryption'),\n                is_own = $target.hasClass('is-own');\n            !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n            let token = this.model.x_tokens_list.find(item => (item.token_uid === $target.closest('.token-wrap').attr('data-token-uid'))),\n                omemo_device_id = token && token.omemo_id ? token.omemo_id : Number($target.closest('.token-wrap').attr('data-token-uid').slice(0,8));\n            this.omemo_own_devices.open(Number(omemo_device_id), is_own);\n        }\n    },\n\n    openFingerprintDevice: function (ev) {\n        if (this.model.omemo){\n            if ($(ev.target).closest('.device-information-trust.device-information-trust-own').length)\n                return;\n            let $target = $(ev.target).closest('.device-information');\n            !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n            let token = this.model.x_tokens_list.find(item => (item.token_uid === $target.attr('data-token-uid'))),\n                omemo_device_id = token && token.omemo_id ? token.omemo_id : Number($target.attr('data-token-uid').slice(0,8));\n            this.omemo_own_devices.open(Number(omemo_device_id), false);\n        }\n    },\n\n    updateXTokens: function () {\n        if (this.model.get('auth_type') !== 'x-token') {\n            this.$('.tokens').addClass('hidden');\n            this.$('.sessions-wrap').children().html(\"\");\n            return;\n        }\n        this.model.getAllXTokens(() => {\n            this.$('.sessions-wrap').html(\"\");\n            if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                this.renderAllXTokens();\n            }\n        });\n    },\n\n    updateGroupsLabel: function () {\n        let groups_count = this.model.groups.length,\n            label_text = groups_count === 0 ? xabber.getString(\"contact_circles_empty\") : xabber.getQuantityString(\"settings_account__section_header_circles\", groups_count);\n\n        this.$('.settings-tab[data-block-name=\"circles-groups\"] .settings-block-label').text(label_text);\n    },\n\n    revokeXToken: function (ev) {\n        utils.dialogs.ask(xabber.getString(\"terminate_session_title\"), xabber.getString(\"terminate_session_text\"),\n            {}, { ok_button_text: xabber.getString(\"button_terminate\")}).done((res) => {\n            if (!res)\n                return;\n            let $target = $(ev.target).closest('.settings-block-wrap.device-information'),\n                token_uid = $target.attr('data-token-uid');\n            this.model.revokeXToken([token_uid], () => {\n                if (this.model.get('x_token')){\n                    if (this.model.get('x_token').token_uid === token_uid) {\n                        this.model.deleteAccount(true);\n                        return;\n                    }\n                    this.model.getAllXTokens(() => {\n                        this.$('.sessions-wrap').html(\"\");\n                        this.$('.btn-back-subsettings-account').length && this.backToSubMenu({target: this.$('.btn-back-subsettings-account')[0]})\n                        if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                            this.renderAllXTokens();\n                        }\n                    });\n                }\n            });\n        });\n    },\n\n    revokeAllXTokens: function () {\n        utils.dialogs.ask(xabber.getString(\"settings_account__dialog_terminate_sessions__header\"), xabber.getString(\"terminate_all_sessions_title\"), null, { ok_button_text: xabber.getString(\"button_terminate\")}).done((result) => {\n            if (result && this.model.x_tokens_list)\n                this.model.revokeAllXTokens(() => {\n                    this.model.getAllXTokens(() => {\n                        this.$('.sessions-wrap').html(\"\");\n                        if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                            this.renderAllXTokens();\n                        }\n                    });\n                });\n        });\n    },\n\n    updateSyncState: function () {\n        let state;\n        if (!this.model.settings.get('to_sync'))\n            state = 'off';\n        else\n            state = this.model.settings.get('synced') ? 'yes' : 'no';\n        this.$('.sync-status').text(xabber.getString(constants.SYNCED_STATUS_DATA[state].tip));\n        let mdiclass = constants.SYNCED_STATUS_DATA[state].icon,\n            $sync_icon = this.$('.sync-status-icon');\n        $sync_icon.removeClass($sync_icon.attr('data-mdiclass'))\n            .attr('data-mdiclass', mdiclass).addClass(mdiclass);\n    },\n\n    updateSyncOption: function () {\n        this.$('.sync-account').prop('checked', this.model.settings.get('to_sync'));\n    },\n\n    updateDelSettingsButton: function () {\n        this.$('.btn-delete-settings').hideIf(this.model.settings.get('deleted'));\n    },\n\n    updateEnabled: function () {\n        let enabled = this.model.get('enabled');\n        this.$('.enabled-state input[type=checkbox]').prop('checked', enabled);\n    },\n\n    updateEnabledOmemo: function () {\n        let enabled = this.model.settings.get('omemo'), has_keys = false;\n        if (_.isUndefined(enabled))\n            enabled = false;\n        if (enabled && this.model.omemo_enable_view)\n            this.model.omemo_enable_view.close();\n        this.$('.setting-use-omemo input[type=checkbox]').prop('checked', enabled);\n        this.$('.omemo-settings-wrap .setting-wrap:not(.omemo-enable)').switchClass('hidden', !enabled);\n        this.$('.device-more-button').switchClass('hidden', !enabled);\n        this.$('.label-encryption-enabled').switchClass('hidden', !enabled);\n        this.$('.label-encryption-disabled').switchClass('hidden', enabled);\n        if (!this.model.omemo){\n            this.$('.btn-manage-devices').addClass('hidden2');\n        }\n        this.updateHeight();\n    },\n\n    updateEncryptedChatstates: function () {\n        let enabled = this.model.settings.get('encrypted_chatstates');\n        this.$('.setting-send-chat-states input[type=checkbox]').prop('checked', enabled);\n    },\n\n    updateReconnectButton: function () {\n        this.$('.btn-reconnect').switchClass('disabled', this.model.session.get('reconnecting'));\n    },\n\n    setEnabled: function (ev) {\n        let enabled = this.$('.enabled-state input').prop('checked');\n        this.model.save('enabled', enabled);\n        enabled ? this.model.activate() : this.model.deactivate();\n        if (xabber.accounts.length !== 1){\n            this.showSettings();\n        }\n    },\n\n    setEnabledOmemo: function () {\n        let enabled = this.$('.setting-use-omemo input').prop('checked');\n        this.model.settings.save('omemo', enabled);\n        this.$('.omemo-settings-wrap .setting-wrap:not(.omemo-enable)').switchClass('hidden', !enabled);\n        if (enabled)\n            this.initOmemo();\n        else\n            this.destroyOmemo();\n    },\n\n    setTypingNotification: function () {\n        let enabled = this.$('.setting-send-chat-states input').prop('checked');\n        this.model.settings.save('encrypted_chatstates', enabled);\n    },\n\n    initOmemo: function () {\n        this.model.omemo = new xabber.Omemo({id: 'omemo'}, {\n            account: this.model,\n            storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n            fetch: 'before'\n        });\n        setTimeout(() => {\n            this.model.omemo.onConnected();\n            this.updateXTokens();\n        }, 1000);\n    },\n\n    destroyOmemo: function () {\n        this.model.omemo.destroy();\n        this.model.omemo = undefined;\n        this.updateXTokens();\n    },\n\n    openDevicesWindow: function () {\n        if (this.model.omemo) {\n            !this.omemo_devices && (this.omemo_devices = new xabber.Fingerprints({model: this.model.omemo}));\n            this.omemo_devices.open();\n        }\n        else\n            utils.dialogs.error(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\"));\n    },\n\n    purgeKeys: function () {\n        utils.dialogs.ask(xabber.getString('omemo__dialog_purge_keys__header'), xabber.getString('omemo__dialog_purge_keys__text'),\n            null, { ok_button_text: xabber.getString('omemo__dialog_purge_keys__button_purge_keys')}).done((result) => {\n            if (result) {\n                if (this.model.omemo) {\n                    let device_id = this.model.omemo.get('device_id');\n                    this.model.omemo.save('prekeys', {});\n                    this.model.omemo.bundle && (this.model.omemo.bundle.preKeys = []);\n                    if (this.model.omemo.own_devices[device_id]) {\n                        this.model.omemo.own_devices[device_id].preKeys = [];\n                        this.model.omemo.own_devices[device_id].set({ik: null, fingerprint: null});\n                    }\n                    this.model.getConnectionForIQ().omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                } else {\n                    let omemo = new xabber.Omemo({id: 'omemo'}, {\n                        account: this.model,\n                        storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n                        fetch: 'before'\n                    });\n                    omemo.save('prekeys', {});\n                    this.model.getConnectionForIQ().omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, omemo.get('device_id'));\n                    omemo.destroy();\n                }\n            }\n        });\n    },\n\n    showConnectionStatus: function () {\n        this.$('.conn-status').text(this.model.session.get('conn_feedback'));\n    },\n\n    showPasswordView: function () {\n        this.model.password_view.show();\n    },\n\n    reconnect: function () {\n        if (this.model.session.get('reconnecting'))\n            return;\n        this.model.save('enabled', true);\n        if (this.model.connection.connected)\n            this.model.connection.disconnect();\n        else\n            this.model.connect();\n    },\n\n    changeSyncSetting: function (ev) {\n        let to_sync = $(ev.target).prop('checked'),\n            settings = this.model.settings;\n        settings.save('to_sync', to_sync);\n        if (to_sync) {\n            settings.update_timestamp();\n        }\n    },\n\n    deleteSettings: function () {\n        utils.dialogs.ask(xabber.getString(\"progress_title_delete_settings\"), xabber.getString(\"delete_settings_summary\"),\n            [{name: 'delete_account', checked: this.model.settings.get('to_sync'),\n                text: xabber.getString(\"delete_settings__optional_button__delete_synced_account\")}],{ ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n            if (res) {\n                if (!res.delete_account) {\n                    this.model.settings.save('to_sync', false);\n                } else if (!this.model.settings.get('to_sync')) {\n                    this.model.deleteAccount(true);\n                }\n            }\n        });\n    },\n\n    changeColor: function (ev) {\n        let value = $(ev.target).closest('.color-picker-button').attr('data-color-value');\n        this.model.settings.update_settings({color: value});\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    openBlockWindow: function () {\n        utils.dialogs.ask_enter_value(xabber.getString(\"dialog_block_xmpp_address__text\"), null, {modal_class: 'account-add-blocked', input_placeholder_value: xabber.getString(\"dialog_block_xmpp_address__hint_address\")}, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done((result) => {\n            if (result) {\n                let contact = this.model.contacts.get(result);\n                if (contact)\n                    contact.block();\n                else {\n                    this.model.contacts.blockContact(result);\n                }\n            }\n        });\n    },\n\n    unblockSelected: function () {\n        if (this.children && this.children.blocklist){\n            this.children.blocklist.unblockSelected();\n        }\n    },\n\n    deselectBlocked: function () {\n        if (this.children && this.children.blocklist)\n            this.children.blocklist.deselectBlocked();\n    },\n\n    sortFiles: function (ev) {\n        if (this.gallery_view)\n            this.gallery_view.sortFiles(ev);\n    },\n\n    enableFilesSelect: function () {\n        if (this.gallery_view)\n            this.gallery_view.enableFilesSelect();\n    },\n});\n\nxabber.AccountSettingsSingleModalView = xabber.AccountSettingsModalView.extend({\n    className: 'single-account-settings-panel-wrap',\n    template: templates.single_account_settings_modal,\n    // ps_selector: '.right-column',\n    // ps_settings: {\n    //     wheelPropagation: true\n    // },\n\n    render: function (view, options, args) {\n        if (!_.isNull(view))\n            return;\n        this.$el.detach();\n        this.parent.$('.single-account-info-wrap').append(this.$el);\n        this.ps_container = this.parent.ps_container;\n        this.gallery_view.render();\n        this._single_account = true;\n\n        this.$el.attr('data-color', this.model.settings.get('color'));\n        this.$('.circle-avatar.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        this.updateCSS();\n\n        this.updateEnabledOmemo();\n        this.updateEncryptedChatstates();\n        this.updateEnabled();\n        this.updateXTokens();\n        this.updateGroupsLabel();\n        this.updateView();\n        this.$('.main-resource .client').text(xabber.get('client_name'));\n        this.$('.main-resource .resource').text(this.model.resource);\n        this.$('.main-resource .priority').text(this.model.get('priority'));\n        this.$(`.color-scheme input[type=radio][name=account_color][value=\"${this.model.settings.get('color')}\"]`)\n            .prop('checked', true);\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n        this.$('.panel-content-wrap').removeClass('hidden');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.updateOmemoDevices;\n        this.$('.left-column').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.$('.btn-back-settings').removeClass('hidden');\n        this.$('.btn-back-subsettings-account').addClass('hidden');\n        this.updateHeight();\n        this.updateBlockedLabel();\n        if (options && options.account_block_name) {\n            let $elem = this.$(`.settings-tab[data-block-name=\"${options.account_block_name}\"]`);\n            if ($elem.length)\n                this.jumpToBlock({target: $elem[0]});\n        }\n\n        this.parent.single_account_has_rendered = true;\n        return this;\n    },\n\n    jumpToBlock: function (ev) {\n        this.parent.$('.left-column .settings-tabs-wrap.global-settings-tabs').addClass('hidden');\n        this.jumpToBlockHandler(ev);\n    },\n\n    backToMenu: function (ev) {\n        this.parent.$('.left-column .settings-tabs-wrap.global-settings-tabs').removeClass('hidden');\n        this.backToMenuHandler(ev);\n    },\n\n    backToSubMenu: function (ev) {\n        this.parent.$('.left-column .settings-tabs-wrap.global-settings-tabs').addClass('hidden');\n        this.backToSubMenuHandler(ev);\n    },\n\n    updateHeight: function () {\n        this.parent.updateHeight();\n    },\n});\n\nxabber.StatusMessageWidget = xabber.InputWidget.extend({\n    field_name: 'status-message',\n    placeholder: 'Set custom status',\n\n    bindModelEvents: function () {\n        this.model.on(\"change:status_updated\", this.updateValue, this);\n    },\n\n    getValue: function () {\n        return this.model.getStatusMessage();\n    },\n\n    setValue: function (value) {\n        this.model.setStatus(null, value);\n    }\n});\n\nxabber.StatusMessageModalWidget = xabber.InputWidget.extend({\n    field_name: 'status-message',\n    placeholder: 'Set custom status',\n    template: templates.status_message_input_widget,\n\n    showInput: function () {\n        if (this.$input.prop('disabled'))\n            return;\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    bindModelEvents: function () {\n        this.model.on(\"change:status_updated\", this.updateValue, this);\n    },\n\n    getValue: function () {\n        return this.model.getStatusMessage();\n    },\n\n    setValue: function (value) {\n        this.model.setStatus(null, value);\n    }\n});\n\nxabber.AccountSettingsItemModalView = xabber.BasicView.extend({\n    className: 'xmpp-account draggable droppable',\n    template: templates.global_settings_item_modal,\n    avatar_size: constants.AVATAR_SIZES.SETTINGS_ACCOUNT_ITEM,\n\n    events: {\n        \"click .account-info-wrap\": \"showSettings\",\n        \"change .enabled-state input\": \"setEnabled\",\n    },\n\n    _initialize: function () {\n        this.updateEnabled();\n        this.updateNickname();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.updateSyncState();\n        this.showConnectionStatus();\n        this.model.on(\"change:enabled\", this.updateEnabled, this);\n        this.model.on(\"change:vcard\", this.updateNickname, this);\n        this.model.settings.on(\"change:omemo\", this.updateEnabledOmemo, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.session.on(\"change:conn_feedback\", this.showConnectionStatus, this);\n        this.$el.on('drag_to', this.onDragTo.bind(this));\n        this.$('.move-account-to-this')\n            .on('move_xmpp_account', this.onMoveAccount.bind(this));\n        this.model.settings.on(\"change:to_sync\", this.updateSyncState, this);\n    },\n\n    updateNickname: function () {\n        let nickname;\n        if (this.model.get('vcard')) {\n            if (this.model.get('vcard').nickname)\n                nickname = this.model.get('vcard').nickname;\n            else if (this.model.get('vcard').fullname)\n                nickname = this.model.get('vcard').fullname;\n            else if (this.model.get('vcard').first_name || this.model.get('vcard').last_name)\n                nickname = this.model.get('vcard').first_name + ' ' + this.model.get('vcard').last_name;\n        }\n        if (nickname){\n            this.$('.nickname').text(nickname);\n            this.$('.jid').text(this.model.get('jid'));\n            this.$('.nickname-wrap').removeClass('single-row');\n            this.$('.jid-wrap').removeClass('hidden');\n        } else {\n            this.$('.nickname').text(this.model.get('jid'));\n            this.$('.nickname-wrap').addClass('single-row');\n            this.$('.jid-wrap').addClass('hidden');\n        }\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    showConnectionStatus: function () {\n        // this.$('.status').attr('data-status', this.model.get('status'));\n        // this.$('.conn-status').text(this.model.session.get('conn_feedback'));\n    },\n\n    updateEnabled: function () {\n        let enabled = this.model.get('enabled');\n        this.$el.switchClass('disabled', !enabled);\n        this.$('.enabled-state input[type=checkbox]').prop('checked', enabled);\n    },\n\n    setEnabled: function (ev) {\n        let enabled = this.$('.enabled-state input').prop('checked');\n        this.model.save('enabled', enabled);\n        enabled ? this.model.activate() : this.model.deactivate();\n    },\n\n    onDragTo: function (ev, drop_elem) {\n        drop_elem && $(drop_elem).trigger('move_xmpp_account', this.model);\n    },\n\n    onMoveAccount: function (ev, account) {\n        this.model.collection.moveBefore(account, this.model);\n    },\n\n    updateSyncState: function () {\n    },\n\n    showSettings: function () {\n        if (this.model.get('enabled'))\n            this.model.showSettingsModal();\n        else {\n            utils.dialogs.ask_extended(xabber.getString(\"settings_account__enable_account_label\"), xabber.getString(\"settings_account__enable_account_text\", [this.model.get('jid')]),\n                {modal_class: 'modal-offline-account', no_dialog_options: true},\n                {\n                    ok_button_text: xabber.getString(\"button_enable\"),\n                    optional_button: 'delete-account',\n                    optional_button_text: xabber.getString(\"settings_account__button_quit_account\")\n                }).done((res) => {\n                    if (res){\n                        if (res === 'delete-account')\n                            this.model.deleteAccount(null, true);\n                        else {\n                            this.model.save('enabled', true);\n                            this.model.activate();\n                        }\n                    }\n            });\n        }\n    }\n});\n\nxabber.SettingsAccountsModalBlockView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.updateList();\n        this.updateSyncState();\n        this.model.on(\"add\", this.updateOneInList, this);\n        this.model.on(\"update_order\", this.updateList, this);\n        this.model.on(\"destroy\", this.onAccountRemoved, this);\n        this.model.on(\"add\", this.parent.updateAccounts, this.parent);\n        this.model.on(\"update_order\", this.parent.updateAccounts, this.parent);\n        this.model.on(\"destroy\", this.parent.updateAccounts, this.parent);\n        this.$('.move-account-to-bottom')\n            .on('move_xmpp_account', this.onMoveAccountToBottom.bind(this));\n    },\n\n    updateList: function () {\n        _.each(this.children, function (view) { view.detach(); });\n        this.model.each((account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            if (!view) {\n                view = this.addChild(jid, xabber.AccountSettingsItemModalView, {model: account});\n            }\n            this.$('.no-accounts-tip').before(view.$el);\n        });\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    updateOneInList: function (account) {\n        let jid = account.get('jid'),\n            view = this.child(jid);\n        if (view)\n            view.$el.detach();\n        else\n            view = this.addChild(jid, xabber.AccountSettingsItemModalView, {model: account});\n        let index = this.model.indexOf(account);\n        if (index === 0)\n            this.$('.no-accounts-tip').after(view.$el);\n        else\n            this.$('.xmpp-account').eq(index - 1).after(view.$el);\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    onAccountRemoved: function (account) {\n        this.removeChild(account.get('jid'));\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    render: function () {\n        this.updateHtml();\n        _.each(this.children, function (view) {\n            view.updateEnabled();\n        });\n    },\n\n    updateHtml: function () {\n        this.$('.no-accounts-tip').hideIf(this.model.length);\n    },\n\n    updateSyncState: function () {\n    },\n\n    onMoveAccountToBottom: function (ev, account) {\n        this.model.moveToBottom(account);\n    }\n});\n\nxabber.ChangeStatusView = xabber.BasicView.extend({\n    className: 'modal main-modal change-status-modal',\n    template: templates.change_status,\n\n    events: {\n        \"click .status-values li\": \"changeStatus\",\n        \"click .status-message-wrap .clear-input\": \"clearStatusMessageInput\",\n        \"keyup .status-message\": \"keyUp\",\n        \"change .apply-to-all\": \"changeApplyToAll\"\n    },\n\n    open: function (account) {\n        this.account = account;\n        this.highlightStatus(account.get('status'));\n        this.restoreStatusMessageInput();\n        this.show();\n    },\n\n    highlightStatus: function (status) {\n        this.$('.status-values li[data-value=\"'+status+'\"]').addClass('active')\n            .siblings().removeClass('active');\n    },\n\n    changeStatus: function (ev) {\n        let status = $(ev.target).closest('li').data('value');\n        this.highlightStatus(status);\n        this.do_change();\n        this.closeModal();\n    },\n\n    restoreStatusMessageInput: function () {\n        let status_message = this.account.get('status_message');\n        this.$('.status-message').val(status_message)\n            .switchClass('filled', status_message);\n        if (!status_message) {\n            this.$('.status-message').attr('placeholder', this.account.getStatusMessage());\n        }\n    },\n\n    clearStatusMessageInput: function () {\n        let verbose_status = xabber.getString(this.account.get('status'));\n        this.$('.status-message').val('').attr('placeholder', verbose_status)\n            .removeClass('filled');\n    },\n\n    keyUp: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            this.do_change();\n            this.closeModal();\n        } else {\n            let value = this.$('.status-message').val();\n            this.$('.status-message').switchClass('filled', value);\n        }\n    },\n\n    do_change: function () {\n        let status = this.$('.status-values li.active').data('value'),\n            status_message = this.$('.status-message').val();\n        if (this.apply_to_all) {\n            xabber.accounts.each(function (account) {\n                account.setStatus(status, status_message);\n            });\n        } else {\n            this.account.setStatus(status, status_message);\n        }\n    },\n\n    changeApplyToAll: function (ev) {\n        this.apply_to_all = $(ev.target).prop('checked');\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        Materialize.updateTextFields();\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        let value = this.$('.status-message').val();\n        if (!value)\n            this.do_change();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.SetAvatarView = xabber.BasicView.extend({\n    className: 'modal main-modal avatar-picker background-panel',\n    template: templates.avatars_gallery,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .menu-btn\": \"updateActiveMenu\",\n        \"click .library-wrap .image-item\": \"setActiveImage\",\n        'change input[type=\"file\"]': \"onFileInputChanged\",\n        'keyup input.url': \"onInputChanged\",\n        \"click .btn-add\": \"addAvatar\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n    },\n\n    render: function (options) {\n        this.model = options.model;\n        this.createLibrary();\n        this.$('.menu-btn').removeClass('active');\n        this.$('.menu-btn[data-screen-name=\"library\"]').addClass('active');\n        this.$('.modal-header span').text(xabber.getString(\"account_set_avatar_header\"));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n        let draggable = this.$('.upload-wrap');\n        draggable[0].ondragenter = function (ev) {\n            ev.preventDefault();\n            draggable.addClass('file-drop');\n        };\n        draggable[0].ondragover = function (ev) {\n            ev.preventDefault();\n        };\n        draggable[0].ondragleave = function (ev) {\n            if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                return;\n            ev.preventDefault();\n            draggable.removeClass('file-drop');\n        };\n        draggable[0].ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            draggable.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [], file;\n            for (let i = 0; i < files.length; i++) {\n                if (utils.isImageType(files[i].type)) {\n                    file = files[i];\n                    break;\n                }\n            }\n            file && this.addFile(file);\n        };\n    },\n\n    onPaste: function (ev) {\n        let url = ev.clipboardData.getData('text').trim();\n        this.$('.image-preview img')[0].onload = () => {\n            this.$('.image-preview img').removeClass('hidden');\n            this.updateActiveButton();\n        };\n        this.$('.image-preview img').addClass('hidden')[0].src = url;\n        this.updateActiveButton();\n    },\n\n    updateActiveMenu: function (ev) {\n        let screen_name = ev.target.getAttribute('data-screen-name');\n        this.$('.menu-btn').removeClass('active');\n        this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n        this.updateScreen(screen_name);\n    },\n\n    updateScreen: function (name) {\n        this.$('.screen-wrap').addClass('hidden');\n        this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n        this.scrollToTop();\n        this.updateActiveButton();\n    },\n\n    updateActiveButton: function () {\n        let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            non_active = true;\n        if ($active_screen.attr('data-screen') == 'library') {\n            $active_screen.find('div.active').length && (non_active = false);\n        } else {\n            $active_screen.find('img:not(.hidden)').length && (non_active = false);\n        }\n        this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n    },\n\n    renderFiles: function (response) {\n        this.$('.library-wrap .preloader-wrapper').remove()\n        if (response.items.length){\n            this.current_items = response.items\n            response.items.forEach((item, idx) => {\n                let img = $(`<div class=\"image-item\"/>`);\n                img.css('background-image', `url(\"${item.thumbnail.url}\")`);\n                img.attr('data-src', item.file);\n                img.attr('data-id', idx);\n                this.$('.library-wrap').append(img);\n            });\n        }\n    },\n\n    createLibrary: function () {\n        this.model.testGalleryTokenExpire(() => {\n            let options = {order_by: '-id'};\n            if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n                this.$('.library-wrap').html(env.templates.contacts.preloader())\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                    url: this.model.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        console.log(response)\n                        this.renderFiles(response)\n                    },\n                    error: (response) => {\n                        this.model.handleCommonGalleryErrors(response)\n                        console.log(response)\n                        this.$('.library-wrap .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    setActiveImage: function (ev) {\n        let $target = $(ev.target);\n        if ($target.hasClass('active'))\n            $target.removeClass('active');\n        else {\n            this.$('.library-wrap>div').removeClass('active');\n            $target.addClass('active');\n        }\n        this.updateActiveButton();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target, file;\n        for (let i = 0; i < target.files.length; i++) {\n            if (utils.isImageType(target.files[i].type)) {\n                file = target.files[i];\n                break;\n            }\n        }\n        file && this.addFile(file);\n        $(target).val('');\n    },\n\n    addFile: function (file) {\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            let image_prev = new Image(),\n                src = e.target.result;\n            image_prev.src = src;\n            this.$('.screen-wrap[data-screen=\"upload\"] img').detach();\n            this.$('.screen-wrap[data-screen=\"upload\"]').prepend(image_prev);\n            this.current_file = file;\n            this.updateActiveButton();\n        };\n        reader.readAsDataURL(file);\n    },\n\n    onInputChanged: function (ev) {\n        if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n            return;\n        if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n            let url = ev.target.value.trim();\n            this.$('.image-preview img')[0].onload = () => {\n                this.$('.image-preview img').removeClass('hidden');\n                this.updateActiveButton();\n            };\n            this.$('.image-preview img').addClass('hidden')[0].src = url;\n            this.updateActiveButton();\n        } else {\n            this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n            this.updateActiveButton();\n        }\n    },\n\n    addAvatar: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n        dfd.done((img, img_from_gallery) => {\n            if (img_from_gallery){\n                image.type = image.media_type;\n                this.model.pubAvatar(image, () => {\n                    this.current_items = [];\n                    this.close();\n                    this.model.trigger('update_avatar_list');\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            } else {\n                utils.images.getAvatarFromFile(img).done((image, hash, size) => {\n                    if (image) {\n                        this.model.pubAvatar({base64: image, hash: hash, size: size, type: img.type, file: img}, () => {\n                            this.close();\n                            this.model.trigger('update_avatar_list');\n                        }, () => {\n                            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                        });\n                    } else\n                        utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        });\n        this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n        this.$('.btn-add').addClass('hidden-disabled');\n\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = this.current_items[$active_screen.find('div.active').attr('data-id')]\n            image.uploaded = true;\n            dfd.resolve(image, true);\n        }\n        else if ($active_screen.attr('data-screen') == 'web-address') {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            this.createFileFromURL(image).then((file) => {\n                dfd.resolve(file);\n            }, (e) => {\n                this.$('.preloader-wrapper').remove();\n                this.$('.btn-add').removeClass('hidden-disabled');\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            })\n        } else\n            dfd.resolve(this.current_file);\n    },\n\n    createFileFromURL: async function (url) {\n        let response = await fetch(url);\n        let data = await response.blob();\n        let metadata = {\n            type: 'image/png'\n        };\n        let file = new File([data], \"avatar.png\", metadata);\n        return file\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n});\n\nxabber.WebcamProfileImageView = xabber.BasicView.extend({\n    className: 'modal main-modal webcam-panel',\n    template: templates.webcam_panel,\n\n    events: {\n        \"click .btn-save\": \"saveAvatar\",\n        \"click .btn-cancel\": \"close\",\n    },\n\n    open: function (options) {\n        this.account = options.model;\n        this.registration = options.registration;\n        this.registration_view = options.registration_view;\n\n        this.width = 171;\n        this.height = 128;\n        this.streaming = false;\n        this.video = null;\n        this.canvas = null;\n        this.photo = null;\n        this.startbutton = null;\n\n        this.show();\n        this.startupStream();\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    onHide: function () {\n        if (this.video && this.video.srcObject && this.video.srcObject.getTracks()){\n            let tracks = this.video.srcObject.getTracks()\n            tracks.forEach(function(track) {\n                track.stop();\n            });\n            this.video.srcObject = null\n        }\n        this.$el.detach();\n\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    startupStream: function (ev) {\n        this.video = this.$('.webcam-video')[0];\n        this.canvas = this.$('#canvas')[0];\n        this.photo = this.$('.webcam-photo')[0];\n        this.startbutton = this.$('.btn-take-photo')[0];\n        navigator.mediaDevices.getUserMedia({video: true, audio: false})\n            .then((stream) => {\n                this.video.srcObject = stream;\n                this.video.play();\n            })\n            .catch((err) => {\n                console.log(\"An error occurred: \" + err);\n            });\n\n        this.video.addEventListener('canplay', (ev) => {\n            if (!this.streaming) {\n                if (isNaN(this.height)) {\n                    this.height = this.width / (4/3);\n                }\n                this.video.setAttribute('width', this.width);\n                this.video.setAttribute('height', this.height);\n                this.canvas.setAttribute('width', this.width);\n                this.canvas.setAttribute('height', this.height);\n                this.streaming = true;\n            }\n        }, false);\n\n        this.startbutton.addEventListener('click', (ev) =>{\n            this.takePicture();\n            ev.preventDefault();\n        }, false);\n\n        this.$('.circle-icon')[0].addEventListener('click', (ev) =>{\n            if ($(ev.target).closest('.circle-icon').hasClass('disabled'))\n                return;\n            this.clearPhoto();\n            ev.preventDefault();\n        }, false);\n\n        this.clearPhoto();\n\n    },\n\n\n    clearPhoto: function (ev) {\n        let context = this.canvas.getContext('2d');\n        context.fillStyle = \"#AAA\";\n        context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n        let data = this.canvas.toDataURL('image/png');\n        this.photo.setAttribute('src', data);\n        this.$('.btn-take-photo').hideIf(false)\n        this.$('.btn-save').hideIf(true)\n        this.$('.output').hideIf(true)\n    },\n\n\n    takePicture: function (ev) {\n        let context = this.canvas.getContext('2d');\n        this.$('.btn-take-photo').hideIf(true)\n        this.$('.btn-save').hideIf(false)\n        this.$('.output').hideIf(false)\n        if (this.width && this.height) {\n            this.canvas.width = this.width;\n            this.canvas.height = this.height;\n            context.drawImage(this.video, 0, 0, this.width, this.height);\n            context.globalCompositeOperation='destination-in';\n            context.beginPath();\n            context.arc(this.width/2,this.height/2,this.height/2,0,Math.PI*2);\n            context.closePath();\n            context.fill();\n\n            let data = this.canvas.toDataURL('image/png');\n            this.photo.setAttribute('src', data);\n        } else {\n            this.clearPhoto();\n        }\n    },\n\n\n    saveAvatar: function () {\n        let blob = Images.getBlobImage(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')),\n            file = new File([blob], \"avatar.png\", {\n                type: \"image/png\",\n            });\n        file.base64 = this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n        if (file && file.base64) {\n            if (this.registration && this.registration_view){\n                this.registration_view.avatar = file;\n                this.registration_view.$('.btn-next').prop('disabled', false);\n                this.registration_view.$('.circle-avatar').addClass('changed');\n                this.registration_view.$('.circle-avatar').setAvatar(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, ''), this.member_details_avatar_size);\n                this.close();\n            } else {\n                this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n                this.$('.btn-save').addClass('hidden-disabled');\n                this.$('.circle-icon').addClass('disabled');\n                this.account.pubAvatar(file, () => {\n                    this.close();\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        }\n    },\n});\n\nxabber.EmojiProfileImageView = xabber.BasicView.extend({\n    className: 'modal main-modal emoji-panel',\n    template: templates.emoji_panel,\n\n    events: {\n        \"click .profile-image-background-color\": \"changeColor\",\n        \"click .avatar-wrap\": \"openEmojiPicker\",\n        \"click .close-modal\": \"close\",\n        \"click .btn-save\": \"saveAvatar\",\n        \"click .btn-cancel\": \"close\",\n    },\n\n    open: function (options) {\n        this.account = options.model;\n        this.registration = options.registration;\n        this.registration_view = options.registration_view;\n        this.emoji_panel_view = this.addChild('emoji_picker_panel', xabber.EmojiPickerView,{})\n        this.show();\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    openEmojiPicker: function () {\n        this.emoji_panel_view.open(this);\n    },\n\n    changeColor: function (ev) {\n        let color = $(ev.target).data('value');\n        this.$('.profile-image-background-color').removeClass('chosen-background-color');\n        $(ev.target).addClass('chosen-background-color');\n        this.$('.circle-avatar').attr('class', 'circle-avatar');\n        this.$('.circle-avatar').attr('data-value', color);\n        this.$('.circle-avatar').addClass('ground-color-' + color + '-100');\n    },\n\n    saveAvatar: function (ev) {\n        if (this.registration && this.registration_view){\n            let blob = Images.getDefaultAvatar(this.$('.chosen-emoji').data('value') ,this.$('.circle-avatar').css( \"background-color\" ), \"bold 96px sans-serif\", 176, 176),\n                file = new File([blob], \"avatar.png\", {\n                    type: \"image/png\",\n                });\n            file.generated = true;\n            file.base64 = blob;\n            if (file && file.base64) {\n                this.registration_view.avatar = file;\n                this.registration_view.$('.btn-next').prop('disabled', false);\n                this.registration_view.$('.circle-avatar').addClass('changed');\n                this.registration_view.$('.circle-avatar').setAvatar(blob, this.member_details_avatar_size);\n                xabber._settings.save('main_color', this.$('.circle-avatar').attr('data-value'));\n                xabber.trigger('update_main_color');\n                this.close();\n            }\n        } else {\n            let blob = Images.getBlobImage(Images.getDefaultAvatar(this.$('.chosen-emoji').data('value') ,this.$('.circle-avatar').css( \"background-color\" ), \"bold 96px sans-serif\", 176, 176)),\n                file = new File([blob], \"avatar.png\", {\n                    type: \"image/png\",\n                });\n            file.base64 = blob;\n            if (file && file.base64) {\n                this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n                this.$('.btn-save').addClass('hidden-disabled');\n                this.account.pubAvatar(file, () => {\n                    this.close();\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        }\n    },\n});\n\nxabber.EmojiPickerView = xabber.BasicView.extend({\n    className: 'modal main-modal emoji-panel emoji-picker',\n    template: templates.emoji_picker,\n\n    events: {\n        \"click .emojis-bottom-tab-selector\": \"pickEmojiTab\",\n        \"click .emoji-picker-emoji\": \"pickEmoji\",\n        \"click .close-modal\": \"close\",\n    },\n\n    open: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n        this.readEmojisJSON()\n        this.show();\n    },\n\n    readEmojisJSON: function () {\n        this.emojis = templates.emojis;\n\n        if (this.emojis.length) {\n            this.$('.emoji-picker-wrap').html(templates.emoji_picker_tabs({\n                emojis: this.emojis\n            }));\n            this.ps_container = this.$('.emojis-tab');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n    },\n\n    render: function () {\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    scrollTo: function (offset) {\n        this.ps_container.each((index) => {\n            this.ps_container[index].scrollTop = offset;\n        });\n        this.ps_container.perfectScrollbar('update');\n    },\n\n    scrollToTop: function () {\n        this.scrollTo(0);\n    },\n\n    pickEmojiTab: function (ev) {\n        let tab = $(ev.target).data('value');\n        this.$('.emojis-bottom-tab-selector').removeClass('chosen-emoji-selector');\n        $(ev.target).addClass('chosen-emoji-selector');\n        this.$('.emojis-tab').removeClass('chosen-emoji-tab').addClass('hidden');\n        this.$(`.emojis-tab[data-value=\"${tab}\"]`).removeClass('hidden').addClass('chosen-emoji-tab');\n        this.scrollToTop();\n    },\n\n    pickEmoji: function (ev) {\n        let emoji = $(ev.target).closest('.emoji-picker-emoji').data('value');\n        this.parent.$('.chosen-emoji').attr('data-value', emoji).text(emoji);\n        this.close();\n    },\n});\n\nxabber.ChangePasswordView = xabber.BasicView.extend({\n    className: 'modal main-modal change-password-modal',\n    template: templates.change_password,\n\n    events: {\n        \"click .btn-change\": \"submit\",\n        \"click .btn-cancel\": \"close\",\n        \"keyup input[name=password]\": \"keyUp\"\n    },\n\n    _initialize: function () {\n        this.$('input[name=jid]').val(this.model.get('jid'));\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.updateButtons, this);\n        xabber.on(\"quit\", this.onQuit, this);\n        return this;\n    },\n\n    render: function (options) {\n        options || (options = {});\n        this.is_login = options.login;\n        this.token_invalidated = options.token_invalidated;\n        this.$('.modal-header span').text(this.is_login ? xabber.getString(\"xabber_account__social_links__button_log_in\") : xabber.getString(\"button_set_pass\"));\n        this.$('.btn-cancel').text(this.is_login ? xabber.getString(\"skip\") : xabber.getString(\"cancel\"));\n        this.$('.btn-change').text(this.is_login ? xabber.getString(\"xabber_account__social_links__button_log_in\") : xabber.getString(\"set\"));\n        this.$el.openModal({\n            use_queue: true,\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        Materialize.updateTextFields();\n        this.authFeedback({});\n        this.$password_input.val('').focus();\n    },\n\n    getActionName: function () {\n        return this.is_login ? xabber.getString(\"login\") : xabber.getString(\"set\")\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let jid = this.model.get('jid'),\n            password = this.$password_input.val();\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        password = password.trim();\n        this.authFeedback({password: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\")});\n        if (this.model.connection.connected) {\n            this.model.once('deactivate', () => {\n                this.setPassword(password);\n            });\n            this.model.deactivate();\n        } else {\n            this.setPassword(password);\n        }\n    },\n\n    setPassword: function (password) {\n        this.model.last_msg_timestamp = 0;\n        this.model.save({\n            auth_type: 'password',\n            password: utils.utoa(password),\n            enabled: true\n        });\n        this.model.auth_view = this;\n        this.model.connect();\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-change').text(authentication ? xabber.getString(\"stop\") : this.getActionName());\n    },\n\n    authFeedback: function (options) {\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    successFeedback: function () {\n        this.data.set('authentication', false);\n        this.closeModal();\n    },\n\n    endAuth: function (account) {\n        this.model.save('is_new', undefined);\n        this.successFeedback(this.model)\n        this.model.auth_view = null;\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    onQuit: function () {\n        this.closeModal();\n    },\n\n    close: function () {\n        if (this.is_login)\n            this.model.save('enabled', false);\n        if (this.token_invalidated)\n            this.model.deleteAccount();\n        this.cancel();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.model.auth_view = null;\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.ChangeAccountPasswordView = xabber.BasicView.extend({\n    className: 'modal main-modal change-account-password-modal',\n    template: templates.change_account_password,\n    events: {\n        \"click .btn-change\": \"submit\",\n        \"click .btn-cancel\": \"close\",\n        \"keyup input\": \"keyUp\",\n    },\n\n    render: function (options) {\n        this.account = options.model;\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function (options) {\n        this.$('.original-state').removeClass('hidden');\n        this.$('.success-state').addClass('hidden');\n        this.$old_password_input = this.$('input[name=old_password]');\n        this.$password_input = this.$('input[name=password]');\n        this.$password_confirm_input = this.$('input[name=password_confirm]');\n        this.authFeedback({});\n        this.$password_input.val('');\n        this.$password_confirm_input.val('');\n        this.$old_password_input.val('').focus();\n        this.keyUp();\n    },\n\n    keyUp: function (ev) {\n        ev && ev.keyCode === constants.KEY_ENTER && this.submit();\n        if (this.$old_password_input.val() && this.$password_input.val() && this.$password_confirm_input.val()){\n            this.$('.btn-change').prop('disabled', false);\n        } else {\n            this.$('.btn-change').prop('disabled', true);\n        }\n        this.authFeedback({});\n    },\n\n    submit: function () {\n        this.authFeedback({});\n        let jid = this.account.get('jid'),\n            old_password = this.$old_password_input.val(),\n            password = this.$password_input.val(),\n            password_confirm = this.$password_confirm_input.val();\n        if (!old_password)\n            return this.errorFeedback({old_password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        if (password != password_confirm)\n            return this.errorFeedback({password_confirm: xabber.getString(\"settings_account__alert_passwords_do_not_match\")});\n        old_password = old_password.trim();\n        this.authFeedback({password_confirm: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\"), password_not_error: true});\n        if (!this.account.change_password_connection_manager) {\n            this.account.change_password_view = this;\n            this.account.change_password_connection_manager = new Strophe.ConnectionManager(this.account.CONNECTION_URL);\n            this.account.change_password_connection = this.account.change_password_connection_manager.connection;\n            this.account.change_password_connection.account = this.account;\n            this.account.change_password_connection.register.connect_change_password(jid, old_password, this.account.changePasswordCallback.bind(this.account))\n        }\n    },\n\n    authFeedback: function (options) {\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n        this.$old_password_input.switchClass('invalid', options.old_password)\n            .siblings('span.errors').text(options.old_password || '');\n        this.$password_confirm_input.switchClass('invalid', options.password_confirm && !options.password_not_error)\n            .siblings('span.errors').switchClass('non-error', options.password_not_error).text(options.password_confirm || '');\n        this.parent && this.parent.updateHeight();\n    },\n\n    errorFeedback: function (options) {\n        if (this.account.change_password_connection)\n            this.account.change_password_connection.disconnect()\n        this.authFeedback(options);\n    },\n\n    successFeedback: function () {\n        if (this.account.change_password_connection)\n            this.account.change_password_connection.disconnect()\n        this.$('.original-state').addClass('hidden');\n        this.$('.success-state').removeClass('hidden');\n    },\n\n    onHide: function () {\n        this.$el.detach();\n        if (this.account && this.account.unregister_account_connection_manager && this.account.unregister_account_connection) {\n            this.account.unregister_account_connection.disconnect();\n        }\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.AuthView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.updateButtons, this);\n        return this;\n    },\n\n    render: function () {\n        this.onRender();\n    },\n\n    onRender: function () {\n        this.account = null;\n        this.authFeedback({});\n        Materialize.updateTextFields();\n        this.$jid_input.val('').focus();\n        this.$password_input.val('');\n        this.updateButtons();\n        this.updateOptions && this.updateOptions();\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let jid = this.$jid_input.val(),\n            password = this.$password_input.val();\n        if (this.data.get('registration')){\n            let domain = this.$('#new_account_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-xmpp-server .property-value').text();\n            if (!constants.REGISTRATION_CUSTOM_DOMAIN && !(constants.REGISTRATION_DOMAINS.indexOf(domain) > -1))\n                return this.errorRegistrationFeedback({domain: xabber.getString(\"account_auth__error__registration_custom_domain\")});\n            jid = jid + '@' + domain\n        }\n        else if(\n            (this.$('.input-field-jid .xmpp-server-dropdown-wrap').length && !this.$('.input-field-jid .xmpp-server-dropdown-wrap').hasClass('hidden')) &&\n            (this.$('#sign_in_domain') && this.$('#sign_in_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-auth-xmpp-server .property-value').text())\n        ){\n            let domain = this.$('#sign_in_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-auth-xmpp-server .property-value').text();\n            jid = jid + '@' + domain\n        }\n        if (!jid) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n            }\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n        }\n        jid = jid.trim();\n        if (!password)  {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n            }\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        }\n        if (!this.data.get('registration') && !constants.LOGIN_CUSTOM_DOMAIN && !(constants.LOGIN_DOMAINS.indexOf(Strophe.getDomainFromJid(jid)) > -1))\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__login_custom_domain\")});\n        password = password.trim();\n        let at_idx = jid.indexOf('@');\n        if (at_idx <= 0 || at_idx === jid.length - 1) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"account_auth__error__text_wrong_username\")});\n            }\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__text_wrong_username\")});\n        }\n        jid = Strophe.getBareJidFromJid(jid).toLowerCase();\n        let account = xabber.accounts.get(jid);\n        if (account) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"settings_account__alert_account_exists\")});\n            }\n            this.errorFeedback({jid: xabber.getString(\"settings_account__alert_account_exists\")});\n        } else {\n            if (this.data.get('registration'))\n                this.registerFeedback({registration_success: true, password: xabber.getString(\"account_registration__feedback__text_registration\")});\n            else\n                this.authStepperShow();\n            this.getWebsocketURL(jid, (response) => {\n                this.account = xabber.accounts.create({\n                    jid: jid,\n                    websocket_connection_url: response || constants.CONNECTION_URL,\n                    password: utils.utoa(password),\n                    is_new: true\n                }, {auth_view: this});\n\n                if (this.data.get('registration')) {\n                    this.account.connection.register.connect(jid, this.account.registerCallback.bind(this.account))\n                }\n                else\n                    this.account.trigger('start');\n            });\n        }\n    },\n\n    getWebsocketURL: function (jid, callback) {\n        if (!constants.DISABLE_LOOKUP_WS) {\n            let domain = Strophe.getDomainFromJid(jid),\n                request = {\n                    type: 'GET',\n                    url: window.location.protocol + '//' + domain + '/.well-known/host-meta',\n                    dataType: 'xml',\n                    success: (success) => {\n                        let socket_url = $(success).find('Link').attr('href');\n                        if (socket_url)\n                            callback && callback(socket_url);\n                        else\n                            callback && callback(null);\n                    },\n                    error: () => {\n                        callback && callback(null);\n                    },\n                    timeout: 5000\n                };\n            $.ajax(request);\n        }\n        else\n            callback && callback(null);\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n        this.onRender();\n        if (this.account) {\n            this.account.destroy();\n            this.account = null;\n        }\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid)\n            .siblings('span.errors').text(options.jid || '');\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    authStepperShow: function (){\n        this.authFeedback({password: xabber.getString(\"account_auth__feedback__text_authentication\")});\n    },\n\n    endAuth: function (account) {\n        this.account.save('is_new', undefined);\n        this.successFeedback(this.account)\n        this.account.auth_view = null;\n    },\n\n    socialAuth: function (ev) {\n        let origin = window.location.href,\n            provider = $(ev.target).closest('.btn-social').data('provider');\n        if (provider == 'email')\n            xabber.body.setScreen('login', {'login_screen': 'xabber'});\n        else\n            window.location.href = constants.XABBER_ACCOUNT_URL + '/social/login/' + provider + '/?origin=' + origin + '&source=Xabber Web';\n    }\n});\n\nxabber.XmppLoginPanel = xabber.AuthView.extend({\n    className: 'login-panel',\n    template: templates.xmpp_login,\n\n    events: {\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-sign-up-instead\": \"logoutAndRegister\",\n        \"click .btn-register-form\": \"openRegisterForm\",\n        \"click .btn-login-form\": \"openLoginForm\",\n        \"click .btn-register\": \"register\",\n        \"click .btn-cancel\": \"cancel\",\n        \"click .btn-go-back-menu\": \"openButtonsMenu\",\n        \"click .btn-go-back\": \"openPreviousStep\",\n        \"click .btn-next\": \"openNextStep\",\n        \"click .btn-skip\": \"registerWithoutAvatar\",\n        \"click .btn-finish-log-in\": \"endAuth\",\n        \"keyup input[name=register_nickname]\": \"keyUpNickname\",\n        \"keyup input[name=register_jid]\": \"keyUpJid\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"keyup input[name=register_domain]\": \"keyUpDomain\",\n        \"focusout input[name=register_domain]\": \"focusoutDomain\",\n        \"keyup input[name=register_password]\": \"keyUpPassword\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-emoji-panel\": \"openEmojiPanel\",\n        \"click .btn-selfie\": \"openWebcamPanel\",\n        \"click #select-xmpp-server .property-variant\": \"changePropertyValueRegistration\",\n        \"click #select-auth-xmpp-server .property-variant\": \"changePropertyValueAuth\",\n    },\n\n    __initialize: function () {\n        this.$nickname_input = this.$('input[name=register_nickname]');\n        this.$domain_input = this.$('input[name=register_domain]');\n        this.data.on(\"change:step\", this.handleRegistrationStep, this);\n        return this;\n    },\n\n    onRender: function () {\n        this.data.set('step', 1)\n        this.account = null;\n        this.stepped_auth = true;\n        this.stepped_auth_complete = false;\n        this.authFeedback({});\n        this.registerFeedback({});\n        Materialize.updateTextFields();\n        this.$('.btn-go-back').hideIf(false);\n        this.$('.btn-skip').hideIf(true)\n        this.$nickname_input.val('');\n        this.$jid_input.val('');\n        this.$password_input.val('');\n        this.$('.circle-avatar').css({'background-image': ''});\n        this.$('.circle-avatar').css({'background-color': ''});\n        this.updateButtons();\n        this.updateDomains();\n        this.updateAuthDomains();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.property-field .select-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.avatar-wrap.dropdown-button').dropdown(dropdown_settings);\n        this.$('.btn-register-form').hideIf(!constants.REGISTRATION_BUTTON);\n        this.$('.btn-login-form').hideIf(!constants.LOGIN_CUSTOM_DOMAIN && !constants.LOGIN_DOMAINS.length);\n        this.$('.register-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.REGISTRATION_CUSTOM_DOMAIN);\n        this.$('.login-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.LOGIN_CUSTOM_DOMAIN);\n        this.updateOptions && this.updateOptions();\n        this.$('#select-xmpp-server').hideIf(xabber.url_params.rkey)\n        this.$('.select-xmpp-server .caret').hideIf(xabber.url_params.rkey)\n        if (xabber.url_params.anchor == 'signup' || xabber.url_params.rkey)\n            this.data.set('step', 2)\n        else if (xabber.url_params.anchor == 'signin')\n            this.data.set('step', 0)\n    },\n\n    openButtonsMenu: function () {\n        this.data.set('step', 1)\n    },\n\n    register: function () {\n        if (this.data.get('registration')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('registration', true);\n        this.$jid_input.prop('disabled', true);\n        this.$password_input.prop('disabled', true);\n        this.submit();\n    },\n\n    login: function () {\n        this.submit();\n    },\n\n    keyUpNickname: function (ev) {\n        if(this.$nickname_input.val()){\n            this.$('.btn-next').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-next').prop('disabled', true);\n        }\n        if (this.$nickname_input.val() && ev)\n            ev.keyCode === constants.KEY_ENTER && this.openNextStep();\n    },\n\n    keyUpJid: function (ev) {\n        clearTimeout(this._check_user_timeout);\n        if (!this.$('.btn-next').prop('disabled') && ev && ev.keyCode === constants.KEY_ENTER) {\n            this.openNextStep();\n            return;\n        }\n        if (this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.REGISTRATION_CUSTOM_DOMAIN){\n            this.setCustomDomainRegistration(this.$('.register-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'))\n            this.$domain_input.val(this.$jid_input.val().split('@')[1]);\n            this.$jid_input.val(this.$jid_input.val().split('@')[0]);\n            this.$domain_input.focus();\n            return;\n        }\n        this.$('.btn-next').prop('disabled', true);\n        if(this.$jid_input.val()){\n            let regexp_local_part = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))$/,\n                regexp_domain = /^((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                domain = this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text();\n            if (!regexp_local_part.test(this.$jid_input.val()))\n                return this.registerFeedback({jid: xabber.getString(\"account_add__alert_localpart_invalid\")});\n            else if (!(regexp_domain.test(domain)))\n                return this.registerFeedback({domain: xabber.getString(\"account_add__alert_invalid_domain\")});\n            else\n                this.registerFeedback({});\n            if (!constants.REGISTRATION_CUSTOM_DOMAIN && !(constants.REGISTRATION_DOMAINS.indexOf(domain) > -1))\n                return this.registerFeedback({domain: xabber.getString(\"account_auth__error__registration_custom_domain\")});\n            this._check_user_timeout = setTimeout(() => {\n                domain = this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text();\n                this.$('.btn-next').prop('disabled', true);\n                this._registration_username = this.$jid_input.val()\n                this._registration_domain = domain\n                if (domain) {\n                    if (this.auth_connection && this.auth_connection.domain != domain)\n                        this.auth_connection.disconnect()\n                    if (!this.auth_connection) {\n                        this.getWebsocketURL(domain, (response) => {\n                            this.CONNECTION_URL = response || constants.CONNECTION_URL;\n                            this.auth_conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL);\n                            this.auth_connection = this.auth_conn_manager.connection;\n                            this.auth_connection.register.connect_check_user(domain, this.checkUserCallback.bind(this))\n                        });\n                    }\n                    else if(this.auth_connection && this.auth_connection.connected) {\n                        this.auth_connection.register._connection._addSysHandler(this.handleRegisterStanza.bind(this.auth_connection.register),\n                            null, \"iq\", null, null);\n                        this.auth_connection.register._connection.send($iq({type: \"get\", id: uuid(), to: this.auth_connection.register.domain }).c(\"query\",\n                            {xmlns: Strophe.NS.REGISTER}).c(\"username\").t(this._registration_username.trim()).tree());\n                    }\n                }\n                else {\n                    this.registerFeedback({jid: xabber.getString(\"account_add__alert_invalid_domain\")});\n                }\n            }, 1000);\n        }\n        else\n            this.registerFeedback({});\n    },\n\n    keyUpPassword: function (ev) {\n        if(this.$password_input.val()){\n            this.$('.btn-next').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-next').prop('disabled', true);\n        }\n        if (this.$password_input.val() && ev)\n            ev.keyCode === constants.KEY_ENTER && this.openNextStep();\n    },\n\n    keyUpDomain: function () {\n    },\n\n    keyUpLogin: function (ev) {\n        if(this.$jid_input.val() && this.$password_input.val()){\n            this.$('.btn-log-in').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-log-in').prop('disabled', true);\n        }\n        this.$('.login-step-wrap').hideIf(true);\n        this.authFeedback({});\n        this.$('.input-field-jid .xmpp-server-dropdown-wrap').hideIf(this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.LOGIN_CUSTOM_DOMAIN)\n        if (this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.LOGIN_CUSTOM_DOMAIN){\n            this.$('.input-field-jid').addClass('input-field-jid-borders')\n        }else {\n            this.$('.input-field-jid').removeClass('input-field-jid-borders')\n        }\n        if (ev && this.$jid_input.val() && this.$password_input.val())\n            ev.keyCode === constants.KEY_ENTER && this.login();\n    },\n\n    focusoutDomain: function () {\n        if(this.$jid_input.val() && (this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text()))\n            this.keyUpJid();\n    },\n\n    handleRegisterStanza: function (stanza) {\n        let i, query, field, username_taken, conn = this._connection;\n        query = stanza.getElementsByTagName(\"query\");\n        if (query.length !== 1) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n            return false;\n        }\n        query = query[0];\n        for (i = 0; i < query.childNodes.length; i++) {\n            field = query.childNodes[i];\n            if (field.tagName.toLowerCase() === 'instructions') {\n                conn.register.instructions = Strophe.getText(field);\n                continue;\n            } else if (field.tagName.toLowerCase() === 'username') {\n                if (Strophe.getText(field))\n                    this._supports_check_user = true\n                continue;\n            } else if (field.tagName.toLowerCase() === 'registered') {\n                username_taken = true\n                continue;\n            } else if (field.tagName.toLowerCase() === 'x') {\n                continue;\n            }\n            conn.register.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n        }\n        if (this._supports_check_user){\n            if (username_taken)\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, null);\n            else\n                conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n        else\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"not-supported\");\n\n        return false;\n    },\n\n    checkUserCallback: function (status, condition) {\n        if (status === Strophe.Status.REGISTER || status === Strophe.Status.REGIFAIL) {\n            if (!this.$('.select-xmpp-server .property-variant[data-value=\"' + this.auth_connection.register.domain + '\"]').length && constants.REGISTRATION_CUSTOM_DOMAIN) {\n                $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                    .text(this.auth_connection.register.domain)\n                    .attr('data-value', this.auth_connection.register.domain)\n                    .insertBefore(this.$('.register-form-jid .dropdown-content .set-custom-domain'));\n            }\n            this.$('.select-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#new_account_domain').val(\"\");\n            this.$('.select-xmpp-server .xmpp-server-item-wrap .property-value').text(this.auth_connection.register.domain)\n                .removeClass('hidden').attr('data-value', this.auth_connection.register.domain);\n        }\n        if (status === Strophe.Status.REGISTER) {\n            if (this.auth_connection && this.auth_connection.connected) {\n                this.auth_connection.register._connection._addSysHandler(this.handleRegisterStanza.bind(this.auth_connection.register),\n                    null, \"iq\", null, null);\n                this.auth_connection.register._connection.send($iq({type: \"get\", id: uuid(), to: this.auth_connection.register.domain }).c(\"query\",\n                    {xmlns: Strophe.NS.REGISTER}).c(\"username\").t(this._registration_username.trim()).tree());\n            }\n        } else if (status === Strophe.Status.REGISTERED) {\n            this.registerFeedback({user_success: true, jid: xabber.getString(\"xmpp_login__registration_jid_available\")});\n            this.$('.btn-next').prop('disabled', false);\n        } else if (status === Strophe.Status.CONFLICT) {\n            this.registerFeedback({jid: xabber.getString(\"xmpp_login__registration_jid_occupied\")});\n            this.$('.btn-next').prop('disabled', true);\n        } else if (status === Strophe.Status.CONNFAIL) {\n            this.registerFeedback({jid: xabber.getString(\"CONNECTION_FAILED\") + ': ' + condition});\n            this.$('.btn-next').prop('disabled', true);\n        } else if (status === Strophe.Status.REGIFAIL) {\n            if (condition === 'not-supported'){\n                this.registerFeedback({});\n                this.$('.btn-next').prop('disabled', false);\n            }\n            else {\n                this.registerFeedback({jid: xabber.getString(\"xmpp_login__registration_jid_not_supported\")});\n                this.$('.btn-next').prop('disabled', true);\n            }\n            this.auth_connection.disconnect()\n        } else if (status === Strophe.Status.CONNECTING) {\n            clearTimeout(this._check_user_connection_timeout);\n                this._check_user_connection_timeout = setTimeout(() => {\n                    if(this.auth_connection && !this.auth_connection.connected){\n                        this.auth_connection._no_response = true\n                        this.auth_connection.disconnect()\n                    }\n                }, 10000);\n        } else if (status === Strophe.Status.DISCONNECTED) {\n            if (this.auth_connection && this.auth_connection._no_response) {\n                this.registerFeedback({jid: xabber.getString(\"account_add__alert_invalid_domain\")});\n                this.$('.btn-next').prop('disabled', true);\n            }\n            this.auth_conn_manager = undefined;\n            this.auth_connection = undefined;\n        }\n    },\n\n    openPreviousStep: function () {\n        let step = this.data.get('step')\n        if(typeof step === 'number') {\n            step--;\n            this.data.set('step', step)\n        }\n    },\n\n    openNextStep: function () {\n        let step = this.data.get('step')\n        if(typeof step === 'number') {\n            step++;\n            this.data.set('step', step)\n        }\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step')\n        if (step === -1){\n            this.$(`.server-feature .preloader-wrapper`).addClass('active').addClass('visible');\n            this.$(`.server-feature .mdi`).hideIf(true);\n            this.$(`.server-feature`).removeClass('active-feature')\n            this.$(`.server-feature .mdi`).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n            this.$('.login-form-header').text(xabber.getString(\"signin_server_features\"));\n            this.$('.login-form-server-features .register-form-step-header').text(xabber.getString(\"signin_checking_features_message\", [this.account.domain]));\n            this.$('.btn-go-back-menu').hideIf(true);\n            this.$('.login-form-jid').hideIf(true);\n            this.$('.login-form-server-features').hideIf(false);\n            this.$('.btn-log-in').hideIf(true);\n            this.checkFeaturesStepper();\n        }\n        if (step === 0){\n            this.$jid_input = this.$('input[name=jid]');\n            this.$password_input = this.$('input[name=password]');\n            this.$domain_input = this.$('input[name=sign_in_domain]');\n            this.$domain_input.val('')\n            this.$jid_input.val('')\n            this.$password_input.val('')\n            this.keyUpLogin();\n            this.$('.login-step-wrap').hideIf(true);\n            this.authFeedback({});\n            this.resetAuthStepper();\n            this.$('.login-panel-form.xmpp-login-form .buttons-wrap').removeClass('server-features-additional-button')\n            this.$('.login-form-header').text(xabber.getString(\"title_login_xabber_account\"));\n            this.$('.btn-go-back-menu').hideIf(false);\n            this.$('.login-panel-intro').hideIf(true);\n            this.$('.register-form').hideIf(true);\n            this.$('.xmpp-login-form').hideIf(false);\n            this.$('.login-form-jid').hideIf(false);\n            this.$('.login-form-server-features').hideIf(true);\n            this.$('.btn-log-in').hideIf(false);\n            this.$('.btn-finish-log-in').hideIf(true);\n            this.$('.btn-sign-up-instead').hideIf(true);\n            this.$jid_input.focus();\n        }\n        else if (step === 1){\n            this.$('.login-panel-intro').hideIf(false);\n            this.$('.register-form').hideIf(true);\n            this.$('.xmpp-login-form').hideIf(true);\n        }\n        else if (step === 2){\n            this.$jid_input = this.$('input[name=register_jid]');\n            this.$password_input = this.$('input[name=register_password]');\n            this.$domain_input = this.$('input[name=register_domain]');\n            this.keyUpNickname();\n            this.$('.login-form-header').text(xabber.getString(\"title_register_xabber_account\"));\n            this.$('.login-form-url').hideIf(false);\n            this.$('.login-panel-intro').hideIf(true);\n            this.$('.register-form').hideIf(false);\n            this.$('.xmpp-login-form').hideIf(true);\n            this.$('.register-form-nickname').hideIf(false);\n            this.$('.register-form-jid').hideIf(true);\n            this.$('.register-form-password').hideIf(true);\n            this.$('.register-form-picture').hideIf(true);\n            this.$nickname_input.focus();\n        }\n        else if (step === 3){\n            if (this.$nickname_input.val()) {\n                this.$('.login-form-header').text(xabber.getString(\"hint_username\"));\n                this.$('.register-form-nickname').hideIf(true);\n                this.$('.register-form-jid').hideIf(false);\n                this.$('.register-form-password').hideIf(true);\n                this.$('.register-form-picture').hideIf(true);\n                this.keyUpJid();\n                this.$jid_input.focus();\n                this.$password_input.val('');\n            }\n            else {\n                this.registerFeedback({nickname: xabber.getString(\"dialog_add_circle__error__text_input_name\")});\n                return this.data.set('step', 2);\n            }\n\n        }\n        else if (step === 4){\n            if (this.$jid_input.val()) {\n                this.$('.login-form-header').text(xabber.getString(\"hint_pass\"));\n                this.$('.register-form-nickname').hideIf(true);\n                this.$('.register-form-jid').hideIf(true);\n                this.$('.register-form-password').hideIf(false);\n                this.$('.register-form-picture').hideIf(true);\n                this.keyUpPassword();\n                this.$password_input.focus();\n            }\n            else {\n                this.registerFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n                return this.data.set('step', 3);\n            }\n\n        }\n        else if (step === 5){\n            if (this.$password_input.val()) {\n                this.register();\n            }\n            else {\n                this.registerFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n                return this.data.set('step', 4);\n            }\n        }\n        else if (step === 6){\n            this.$('.login-form-header').text(xabber.getString(\"xmpp_login__registration_header_avatar\"));\n            this.$('.login-form-url').hideIf(true);\n            this.$('.btn-go-back').hideIf(true);\n            this.$('.btn-skip').hideIf(false)\n            this.$('.register-form-nickname').hideIf(true);\n            this.$('.register-form-jid').hideIf(true);\n            this.$('.register-form-password').hideIf(true);\n            this.$('.register-form-picture').hideIf(false);\n            this.$('.btn-next').prop('disabled', true);\n        }\n        else if (step >= 7){\n            if(this.avatar)\n                this.account.pubAvatar(this.avatar, () => {\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            this.successRegistrationFeedback();\n        }\n    },\n\n    registerWithoutAvatar: function () {\n        this.successRegistrationFeedback();\n    },\n\n    logoutAndRegister: function () {\n        this.account.session.set('delete', true);\n        this.account.deactivate();\n        this.openRegisterForm()\n    },\n\n    openRegisterForm: function () {\n        this.data.set('step', 2)\n    },\n\n    openLoginForm: function () {\n        this.data.set('step', 0)\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-log-in').prop('disabled', authentication);\n    },\n\n    updateDomains: function () {\n        let all_servers = constants.REGISTRATION_DOMAINS;\n        if (xabber.url_params.rkey && all_servers.length){\n            for (let i = all_servers.length - 1; i >= 0; i--) {\n                if (!sha1(all_servers[i]).substr(0, 10).includes(xabber.url_params.rkey.substr(0, 10))){\n                    all_servers.splice(i, 1)\n                }\n            }\n        }\n        this.$('.register-form-jid .field-jid.property-variant').remove()\n        if (all_servers.length)\n            this.$('.register-form-jid .xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n        else\n            this.setCustomDomainRegistration(this.$('.register-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.register-form-jid .modal-content .jid-field .set-default-domain').remove();\n\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                .text(all_servers[i])\n                .attr('data-value', all_servers[i])\n                .insertBefore(this.$('.register-form-jid .dropdown-content .set-custom-domain'));\n        }\n    },\n\n    updateAuthDomains: function () {\n        let all_servers = constants.LOGIN_DOMAINS;\n\n        this.$('.login-form-jid .field-jid.property-variant').remove()\n        if (all_servers.length)\n            this.$('.login-form-jid .xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n        else\n            this.setCustomDomainAuth(this.$('.login-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.login-form-jid .modal-content .jid-field .set-default-domain').remove();\n\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                .text(all_servers[i])\n                .attr('data-value', all_servers[i])\n                .insertBefore(this.$('.login-form-jid .dropdown-content .set-custom-domain'));\n        }\n    },\n\n    setCustomDomainRegistration: function ($property_value) {\n        this.$('#new_account_domain').val(\"\");\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.select-xmpp-server .caret').addClass('hidden');\n        this.$('.select-xmpp-server .input-group-chat-domain').removeClass('hidden');\n    },\n\n    setCustomDomainAuth: function ($property_value) {\n        this.$('#sign_in_domain').val(\"\");\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.select-auth-xmpp-server .caret').addClass('hidden');\n        this.$('.select-auth-xmpp-server .input-group-chat-domain').removeClass('hidden');\n    },\n\n    changePropertyValueRegistration: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomainRegistration($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.select-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#new_account_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-xmpp-server .caret').removeClass('hidden');\n        if(this.$jid_input.val() && (this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text()))\n            this.keyUpJid();\n    },\n\n    changePropertyValueAuth: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomainAuth($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.select-auth-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#sign_in_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-auth-xmpp-server .caret').removeClass('hidden');\n    },\n\n    chooseAvatar: function () {\n        this.$('.circle-avatar input').click();\n    },\n\n    openEmojiPanel: function () {\n        let emoji_panel_view = new xabber.EmojiProfileImageView();\n        emoji_panel_view.open({model: this.account, registration: true, registration_view: this});\n    },\n\n    openWebcamPanel: function () {\n        let webcam_panel_view = new xabber.WebcamProfileImageView();\n        webcam_panel_view.open({model: this.account, registration: true, registration_view: this});\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.avatar = file;\n                this.$('.btn-next').prop('disabled', false);\n                this.$('.circle-avatar').addClass('changed');\n                this.$('.circle-avatar').setAvatar(image, this.member_details_avatar_size);\n            }\n        });\n    },\n\n    successFeedback: function () {\n        this.data.set('step', -1)\n    },\n\n    checkFeaturesStepper: function () {\n        this.$('.server-features-error').text('');\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            if (this.account.server_features.get(Strophe.NS.MAM)){\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"]`).addClass('active-feature');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n            }\n            else\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n            setTimeout(() => {\n                if (this.account.server_features.get(Strophe.NS.SYNCHRONIZATION)){\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).addClass('active-feature');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                }\n                else\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                setTimeout(() => {\n                    if (this.account.server_features.get(Strophe.NS.REWRITE)){\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"]`).addClass('active-feature');\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                    }\n                    else\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                    setTimeout(() => {\n                        if (this.account.server_features.get(Strophe.NS.AUTH_DEVICES)) {\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`).addClass('active-feature');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                        }\n                        else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');;\n                        setTimeout(() => {\n                            if (this.account.server_features.get(Strophe.NS.PUBSUB)){\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"]`).addClass('active-feature');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                            }\n                            else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                            setTimeout(() => {\n                                if (this.account.server_features.get(Strophe.NS.HTTP_UPLOAD)){\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`).addClass('active-feature');\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                }\n                                else\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                                setTimeout(() => {\n                                    if (constants.RECOMMENDED_DOMAIN && (this.$('.server-feature.active-feature').length != 6)){\n                                        this.$('.server-features-error').text(xabber.getString('signin_not_all_features', [constants.RECOMMENDED_DOMAIN]));\n                                        this.$('.login-panel-form.xmpp-login-form .buttons-wrap').addClass('server-features-additional-button');\n                                        this.$('.btn-sign-up-instead').hideIf(false);\n                                    }\n                                    if (this.$('.server-feature.active-feature').length != 6) {\n                                        this.$('.btn-finish-log-in').text(xabber.getString('signin_proceed_anyway'))\n                                        this.$('.btn-finish-log-in').addClass('btn-main').removeClass('btn-main-filled')\n                                    }\n                                    else {\n                                        this.$('.btn-finish-log-in').text(xabber.getString('xaccount_next'))\n                                        this.$('.btn-finish-log-in').removeClass('btn-main').addClass('btn-main-filled')\n                                    }\n                                    this.$('.btn-finish-log-in').hideIf(false);\n                                }, timeout_timer);\n                            }, timeout_timer);\n                        }, timeout_timer);\n                    }, timeout_timer);\n                }, timeout_timer);\n            }, timeout_timer);\n        }, timeout_timer);\n    },\n\n    endAuth: function (account) {\n        this.account.save('is_new', undefined);\n        this.data.set('registration', false);\n        this.data.set('authentication', false);\n        xabber.body.setScreen('all-chats', {right: null});\n        this.account.sendPresence();\n        this.account.trigger('ready_to_get_roster');\n        this.account.auth_view = null;\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid);\n        this.$('.login-form-jid .login-jid-error').text(options.jid || '').showIf(options.jid);\n        this.$password_input.switchClass('invalid', options.password);\n        this.$('.login-form-jid .login-password-error').text(options.password || '').showIf(options.password);\n        this.$('.login-form-jid .register-form-step-description').hideIf(options.password || options.jid);\n    },\n\n    resetAuthStepper: function (){\n        this.$(`.login-step .preloader-wrapper`).addClass('active').addClass('visible');\n        this.$(`.login-step .mdi`).hideIf(true);\n        this.$(`.login-step`).removeClass('active-feature')\n        this.$(`.login-step .mdi`).addClass('mdi-alert-circle').removeClass('mdi-checkbox-marked-circle')\n    },\n\n    authStepperShow: function (){\n        this.$('.login-step-wrap').hideIf(false);\n        this.$(`.login-step`).hideIf(true);\n    },\n\n    authStepperStart: function (){\n        this.$(`.login-step.connecting-step`).hideIf(false);\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            this.$(`.login-step.connecting-step`).addClass('active-feature');\n            this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n            this.$(`.login-step.connecting-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n            this.$(`.login-step.credentials-step`).hideIf(false);\n            setTimeout(() => {\n                this.$(`.login-step.credentials-step`).addClass('active-feature');\n                this.$(`.login-step.credentials-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.credentials-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n                setTimeout(() => {\n                    if (constants.TRUSTED_DOMAINS.indexOf(this.account.connection.domain) > -1){\n                        this.endAuth();\n                    } else {\n                        this.stepped_auth_complete = true\n                        if (this.first_features_received)\n                            this.successFeedback();\n                    }\n                },timeout_timer)\n            },timeout_timer)\n        },timeout_timer)\n    },\n\n    authStepperError: function (auth_error, options){\n        let timeout_timer = 1000;\n        this.$('.login-step-wrap').hideIf(false);\n        this.$(`.login-step.connecting-step`).hideIf(false);\n        setTimeout(() => {\n            if (auth_error){\n                this.$(`.login-step.connecting-step`).addClass('active-feature');\n                this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.connecting-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n                this.$(`.login-step.credentials-step`).hideIf(false);\n            }\n            else {\n                this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.connecting-step .mdi`).hideIf(false);\n                this.errorFeedback(options);\n                return;\n            }\n            setTimeout(() => {\n                this.$(`.login-step.credentials-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.credentials-step .mdi`).hideIf(false);\n                this.errorFeedback(options);\n            },timeout_timer)\n        },timeout_timer)\n    },\n\n    registerFeedback: function (options) {\n        if(options.user_success) {\n            this.$('.register-form-jid .register-form-step-error').addClass('available').text(options.jid || '').showIf(options.jid);\n            this.$jid_input.removeClass('invalid');\n            this.$('.register-form-jid .register-form-step-description').hideIf(options.jid);\n        }\n        else if(options.registration_success) {\n            this.$('.register-form-password .register-form-step-error').addClass('available').text(options.password || '').showIf(options.password);\n            this.$password_input.removeClass('invalid');\n            this.$('.register-form-password .register-form-step-description').hideIf(options.password);\n        }\n        else {\n            this.$nickname_input.switchClass('invalid', options.nickname);\n            this.$('.register-form-nickname.register-form-step-error').text(options.nickname || '').showIf(options.nickname);\n            this.$('.register-form-nickname .register-form-step-description').hideIf(options.nickname);\n            this.$jid_input.switchClass('invalid', options.jid);\n            this.$domain_input.switchClass('invalid', options.domain);\n            this.$('.register-form-jid .register-form-step-error').removeClass('available').text(options.jid || options.domain || '').showIf(options.jid || options.domain);\n            this.$('.register-form-jid .register-form-step-description').hideIf(options.jid || options.domain);\n            this.$password_input.switchClass('invalid', options.password);\n            this.$('.register-form-password .register-form-step-error').removeClass('available').text(options.password || '').showIf(options.password);\n            this.$('.register-form-password .register-form-step-description').hideIf(options.password);\n        }\n    },\n\n    errorRegistrationFeedback: function (options) {\n        this.registerFeedback(options);\n        this.data.set('registration', false);\n        this.data.set('authentication', false);\n        this.$jid_input.prop('disabled', false);\n        this.$password_input.prop('disabled', false);\n        if(this.account)\n            this.account.destroy();\n    },\n\n    successRegistrationFeedback: function () {\n        this.$jid_input.prop('disabled', false);\n        this.$password_input.prop('disabled', false)\n        this.account.trigger('start');\n    },\n});\n\n\nxabber.AddAccountView = xabber.XmppLoginPanel.extend({\n    className: 'modal main-modal add-account-modal',\n    template: templates.add_account,\n\n    events: {\n        \"click .login-type\": \"changeLoginType\",\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-cancel\": \"logout\",\n        \"click .btn-go-back-menu\": \"close\",\n        \"click .btn-finish-log-in\": \"endAuth\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"click .property-variant\": \"changePropertyValueAuth\"\n    },\n\n    render: function (options) {\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        this.data.set('step', 0)\n        this.account = null;\n        this.stepped_auth = true;\n        this.stepped_auth_complete = false;\n        this.authFeedback({});\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.$domain_input = this.$('input[name=sign_in_domain]');\n        this.$jid_input.val('')\n        this.$password_input.val('')\n        this.keyUpLogin();\n        this.updateAuthDomains();\n        this.$('.login-step-wrap').hideIf(true);\n        this.resetAuthStepper();\n        this.$('.login-panel-form.xmpp-login-form .buttons-wrap').removeClass('server-features-additional-button')\n        this.$('.modal-header').text(xabber.getString(\"account_add\"));\n        this.$('.login-form-jid').hideIf(false);\n        this.$('.login-form-server-features').hideIf(true);\n        this.$('.btn-log-in').hideIf(false);\n        this.$('.btn-cancel').hideIf(true);\n        this.$('.btn-finish-log-in').hideIf(true);\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.property-field .select-auth-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.login-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.LOGIN_CUSTOM_DOMAIN);\n        Materialize.updateTextFields();\n        this.updateButtons();\n        this.updateOptions && this.updateOptions();\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step')\n        if (step === -1){\n            this.$(`.server-feature .preloader-wrapper`).addClass('active').addClass('visible');\n            this.$(`.server-feature .mdi`).hideIf(true);\n            this.$(`.server-feature`).removeClass('active-feature')\n            this.$(`.server-feature .mdi`).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n            this.$('.modal-header').text(xabber.getString(\"signin_server_features\"));\n            this.$('.login-form-jid').hideIf(true);\n            this.$('.login-form-server-features').hideIf(false);\n            this.$('.btn-log-in').hideIf(true);\n            this.checkFeaturesStepper();\n        }\n    },\n\n    logout: function () {\n        this.account.session.set('delete', true);\n        this.account.deactivate();\n        this.closeModal();\n    },\n\n    endAuth: function () {\n        this.account.save('is_new', undefined);\n        this.data.set('authentication', false);\n        this.account.sendPresence();\n        this.account.trigger('ready_to_get_roster');\n        this.account.auth_view = null;\n        this.closeModal();\n    },\n\n    checkFeaturesStepper: function () {\n        this.$('.server-features-error').text('');\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            if (this.account.server_features.get(Strophe.NS.MAM)){\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"]`).addClass('active-feature');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n            }\n            else\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n            setTimeout(() => {\n                if (this.account.server_features.get(Strophe.NS.SYNCHRONIZATION)){\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).addClass('active-feature');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                }\n                else\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                setTimeout(() => {\n                    if (this.account.server_features.get(Strophe.NS.REWRITE)){\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"]`).addClass('active-feature');\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                    }\n                    else\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                    setTimeout(() => {\n                        if (this.account.server_features.get(Strophe.NS.AUTH_DEVICES)) {\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`).addClass('active-feature');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                        }\n                        else\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');;\n                        setTimeout(() => {\n                            if (this.account.server_features.get(Strophe.NS.PUBSUB)){\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"]`).addClass('active-feature');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                            }\n                            else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                            setTimeout(() => {\n                                if (this.account.server_features.get(Strophe.NS.HTTP_UPLOAD)){\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`).addClass('active-feature');\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                }\n                                else\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                                setTimeout(() => {\n                                    if (constants.RECOMMENDED_DOMAIN && (this.$('.server-feature.active-feature').length != 6)){\n                                        this.$('.server-features-error').text(xabber.getString('signin_not_all_features', [constants.RECOMMENDED_DOMAIN]));\n                                    }\n                                    if (this.$('.server-feature.active-feature').length != 6)\n                                        this.$('.btn-finish-log-in').text(xabber.getString('signin_proceed_anyway'))\n                                    else\n                                        this.$('.btn-finish-log-in').text(xabber.getString('xaccount_next'))\n                                    this.$('.btn-finish-log-in').hideIf(false);\n                                    this.$('.btn-cancel').hideIf(false);\n                                }, timeout_timer);\n                            }, timeout_timer);\n                        }, timeout_timer);\n                    }, timeout_timer);\n                }, timeout_timer);\n            }, timeout_timer);\n        }, timeout_timer);\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.cancel();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\n\nxabber.UnregisterAccountView = xabber.XmppLoginPanel.extend({\n    className: 'modal main-modal unregister-account-modal',\n    template: templates.unregister_account,\n\n    events: {\n        \"click .login-type\": \"changeLoginType\",\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-submit-unregister\": \"submitUnregister\",\n        \"click .btn-cancel\": \"close\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"change input[type=checkbox]\": \"keyUpLogin\",\n        \"click .property-variant\": \"changePropertyValueAuth\"\n    },\n\n    render: function (options) {\n        this.account = options.model;\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function (options) {\n        this.authFeedback({});\n        this.data.set('step', 0);\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.$('input[type=checkbox]').prop('checked', false);\n        this.$jid_input.val('')\n        this.$password_input.val('')\n        this.keyUpLogin();\n        Materialize.updateTextFields();\n    },\n\n    keyUpLogin: function (ev) {\n        let checked_count = this.$('input[type=checkbox]:checked').length;\n        if(this.$password_input.val() && checked_count === 2){\n            this.$('.btn-log-in').prop('disabled', false);\n        } else {\n            this.$('.btn-log-in').prop('disabled', true);\n        }\n        if(this.$jid_input.val() && this.$jid_input.val() === `delete ${this.account.get('jid')} account`){\n            this.$('.btn-submit-unregister').prop('disabled', false);\n        } else {\n            this.$('.btn-submit-unregister').prop('disabled', true);\n        }\n        this.authFeedback({});\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid);\n        this.$('.login-form-jid .login-jid-error').text(options.jid || '').showIf(options.jid);\n        this.$password_input.switchClass('invalid', options.password && !options.password_not_error);\n        this.$('.login-form-jid .login-password-error').switchClass('non-error', options.password_not_error).text(options.password || '');\n    },\n\n    unregisterAccount: function (callback, errback) {\n        let iq = $iq({\n            type: 'set',\n            to: this.connection.domain,\n            from: this.get('jid')\n        }).c('query', {xmlns:Strophe.NS.REGISTER}).c('remove');\n        this.sendIQFast(iq, (success) => {\n                callback & callback(success);\n            },\n            function (error) {\n                errback && errback(error);\n            });\n    },\n\n    login: function (callback, errback) {\n        this.submit()\n    },\n\n    submit: function () {\n        this.authFeedback({});\n        let password = this.$password_input.val();\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        this.authFeedback({password: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\"), password_not_error: true});\n        if (!this.account.unregister_account_connection_manager) {\n            this.account.unregister_account_view = this;\n            this.account.unregister_account_connection_manager = new Strophe.ConnectionManager(this.account.CONNECTION_URL);\n            this.account.unregister_account_connection = this.account.unregister_account_connection_manager.connection;\n            this.account.unregister_account_connection.account = this.account;\n            this.account.unregister_account_connection.register.connect_change_password(this.account.get('jid'), password, this.account.unregisterAccountCallback.bind(this.account))\n        }\n    },\n\n    submitUnregister: function () {\n        this.authFeedback({});\n        if (this.$jid_input.val() !== this.account.get('jid'))\n            return this.errorFeedback({jid: xabber.getString(\"settings_account__unregister_jid_mismatch\")});\n        if (this.account && this.account.unregister_account_connection_manager && this.account.unregister_account_connection) {\n            this.account.unregister_account_connection.register.submit_unregister();\n        } else {\n            this.data.set('step', 0);\n            return this.errorFeedback({password: xabber.getString(\"settings_account__connection_broken\")});\n        }\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step');\n        if (step === 0){\n            this.$('.login-form-step-wrap').removeClass('hidden');\n            this.$('.btn-log-in').removeClass('hidden');\n            this.$('.btn-submit-unregister').addClass('hidden');\n            this.$('.login-confirm-form-step-wrap').addClass('hidden');\n            this.$('.modal-header span').text(xabber.getString('settings_account__delete_account_modal_title'));\n            this.$('.modal-description-text').text(xabber.getString('settings_account__delete_account_modal_text'));\n        } else if (step === 1) {\n            this.$('.login-form-step-wrap').addClass('hidden');\n            this.$('.btn-log-in').addClass('hidden');\n            this.$('.btn-submit-unregister').removeClass('hidden');\n            this.$('.login-confirm-form-step-wrap').removeClass('hidden');\n            this.$('.modal-header span').text(xabber.getString('settings_account__confirm_delete_account_modal_title'));\n            this.$('.modal-description-text').html(xabber.getString('settings_account__confirm_delete_account_modal_text', [`<nobr>delete ${this.account.get('jid')} account</nobr>`]));\n        }\n    },\n\n    endAuth: function () {\n    },\n\n    checkFeaturesStepper: function () {\n    },\n\n    onHide: function () {\n        this.$el.detach();\n        if (this.account && this.account.unregister_account_connection_manager && this.account.unregister_account_connection) {\n            this.account.unregister_account_connection.disconnect();\n        }\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.xmpp_login_panel = xabber.login_page.addChild('xmpp_login', this.XmppLoginPanel);\n    this.account_settings_modal = xabber.main_overlay_panel.addChild('account_settings_modal',\n        this.Container, {classlist: 'account-settings-panel'});\n\n    this.accounts = new this.Accounts(null, {\n        storage_name: this.getStorageName() + '-accounts'\n    });\n    this.accounts.fetch();\n\n    this.trigger('accounts_ready');\n\n    this.toolbar_view.addChild('accounts', this.ToolbarAccountsBlockView,\n        {model: this.accounts, el: this.toolbar_view.$('.accounts')[0]});\n    this.settings_modal_view.addChild('accounts_modal', this.SettingsAccountsModalBlockView,\n        {model: this.accounts, el: this.settings_modal_view.$('.accounts-info-wrap')[0]});\n\n\n    this.on(\"add_account\", function () {\n        if (!this.add_account_view)\n            this.add_account_view = new this.AddAccountView();\n        this.add_account_view.show();\n    }, this);\n\n    this.on(\"unregister_account\", function (account) {\n        if (!this.unregister_account_view)\n            this.unregister_account_view = new this.UnregisterAccountView();\n        this.unregister_account_view.show({model: account});\n    }, this);\n\n    this.on(\"change_account_password\", function (account) {\n        if (!this.change_account_password_view)\n            this.change_account_password_view = new this.ChangeAccountPasswordView();\n        this.change_account_password_view.show({model: account});\n    }, this);\n\n    this.on(\"show_delete_files\", function (options) {\n        if (!this.delete_files_view)\n            this.delete_files_view = new this.DeleteFilesFromGalleryView();\n        this.delete_files_view.show(options);\n    }, this);\n\n    $(window).bind('beforeunload',function(){\n        xabber.current_voip_call && xabber.current_voip_call.reject();\n        return;\n    });\n\n    window.onbeforeunload = () => {\n        _.each(this.accounts.connected, function (account) {\n            account.sendPresence('offline');\n        });\n    };\n\n    this.login_page.patchTree = function (tree, options) {\n        let login_screen = options.login_screen || constants.DEFAULT_LOGIN_SCREEN;\n        return login_screen === 'xmpp' ? { xmpp_login: null } : { xabber_login: null };\n    };\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    $ = env.$,\n    _ = env._,\n    moment = env.moment,\n    Strophe = env.Strophe,\n    $iq = env.$iq;\n\nxabber.ClientFeature = Backbone.Model.extend({\n    idAttribute: 'namespace'\n});\n\nxabber.FeatureView = xabber.BasicView.extend({\n    className: 'client-feature',\n    template: function () {\n        this.$el.append('<div class=\"feature-check-icon mdi mdi-24px\"/>')\n                .append('<div class=\"feature-name one-line\"/>');\n        this.$('.feature-check-icon').append(env.templates.svg['check-circle']());\n    },\n\n    _initialize: function (options, attrs) {\n        this.render();\n        this.model.collection.account.settings_account_modal && this.$el.appendTo(this.model.collection.account.settings_account_modal.$('.capabilities'));\n        if (options.single_account && options.single_account.$('.capabilities').length){\n            this.$el.appendTo(options.single_account.$('.capabilities'));\n        }\n        this.model.on(\"change\", this.render, this);\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    render: function () {\n        let name = this.model.get('verbose_name'),\n            supports = this.model.get('supports');\n        this.$('.feature-name').text(name);\n        this.$('.feature-check-icon').showIf(supports);\n    }\n});\n\nxabber.ClientFeatures = Backbone.Collection.extend({\n    model: xabber.ClientFeature,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on('render_settings', this.render, this);\n        this.account.on('render_single_settings', this.renderSingleAccount, this);\n        this.connection = this.account.connection;\n        this.connection.disco.addIdentity(\n            'client',\n            'web',\n            xabber.get('client_name'),\n            'en'\n        );\n        this.addFeature(Strophe.NS.LAST, 'XEP-0012: Last Activity');\n        this.addFeature(Strophe.NS.VCARD, 'XEP-0054: vCard-temp');\n        this.addFeature(Strophe.NS.RSM, 'XEP-0059: Result Set Management');\n        this.addFeature(Strophe.NS.PUBSUB, 'XEP-0060: Publish-Subscribe');\n        this.addFeature(Strophe.NS.REGISTER, 'XEP-0077: In-Band Registration');\n        this.connection.disco.addFeature(Strophe.NS.CHATSTATES);\n        this.addFeature(Strophe.NS.BLOCKING, 'XEP-0191: Blocking Command');\n        this.addFeature(Strophe.NS.PING, 'XEP-0199: XMPP Ping');\n        this.connection.disco.addFeature(Strophe.NS.ATTENTION, 'XEP-0244: Attention');\n        this.addFeature(Strophe.NS.CARBONS, 'XEP-0280: Message carbons');\n        this.addFeature(Strophe.NS.MAM, 'XEP-0313: Message archive management');\n        this.connection.disco.addFeature(Strophe.NS.CHAT_MARKERS);\n        this.connection.disco.addFeature(Strophe.NS.PUBSUB_AVATAR_METADATA + '+notify');\n        this.addFeature(Strophe.NS.HTTP_UPLOAD, 'XEP-0363: HTTP File Upload');\n        this.addFeature(Strophe.NS.SYNCHRONIZATION, 'XEP-SYNC: Client Synchronization');\n        this.addFeature(Strophe.NS.AUTH_DEVICES, 'XEP-DEVICES: HOTP and Device Management');\n        this.addFeature(Strophe.NS.ARCHIVE, 'XEP-ARCHIVED: Archived Chats');\n        this.addFeature(Strophe.NS.DELIVERY, 'XEP-DELIVERY: Reliable message delivery');\n        this.addFeature(Strophe.NS.GROUP_CHAT, 'XEP-GROUPS: Groups');\n        this.addFeature(Strophe.NS.REWRITE, 'XEP-RETRACT: Message Delete and Rewrite');\n    },\n\n    addFeature: function (namespace, verbose_name) {\n        let feature = this.create({\n            namespace: namespace,\n            verbose_name: verbose_name\n        });\n        this.connection.disco.addFeature(namespace);\n    },\n\n    render: function () {\n        this.models.forEach((feature) => {\n            let view = new xabber.FeatureView({model: feature});\n        });\n    },\n\n    renderSingleAccount: function (single_account) {\n        single_account.$('.capabilities').html('');\n        this.models.forEach((feature) => {\n            let view = new xabber.FeatureView({model: feature, single_account: single_account});\n        });\n    },\n});\n\nxabber.ServerFeature = Backbone.Model.extend({\n    idAttribute: 'var'\n});\n\nxabber.ServerFeatures = Backbone.Collection.extend({\n    model: xabber.ServerFeature,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.connection = this.account.connection;\n        this.on(\"add\", this.onFeatureAdded, this);\n    },\n\n    request: function () {\n        this.account.cached_server_features.getAllFromCachedFeatures((res) => {\n            if (res && res.length){\n                res.forEach((item) => {\n                    this.create({\n                        'var': item.var,\n                        from: item.from\n                    });\n                });\n                this.is_cached = true;\n            } else {\n                this.connection.disco.info(this.account.domain, null, this.onInfo.bind(this));\n            }\n            this.connection.disco.items(this.account.domain, null, this.onItems.bind(this));\n        });\n    },\n\n    onItems: function (stanza) {\n        let groupchat_servers_list = [];\n        $(stanza).find('query item').each((idx, item) => {\n            let jid = $(item).attr('jid'),\n                name = $(item).attr('name'),\n                node = $(item).attr('node');\n            if (node === Strophe.NS.GROUP_CHAT) {\n                groupchat_servers_list.push(jid);\n                this.account.set('groupchat_servers_list', groupchat_servers_list);\n            }\n            this.connection.disco.addItem(jid, name, node, () => {});\n            (!this.is_cached) && this.connection.disco.info(\n                jid,\n                null,\n                this.onInfo.bind(this));\n        });\n    },\n\n    onInfo: function (stanza) {\n        let $stanza = $(stanza),\n            from = $stanza.attr('from'),\n            self = this;\n        $stanza.find('feature').each(function () {\n            let namespace = $(this).attr('var');\n            self.create({\n                'var': namespace,\n                from: from\n            });\n        });\n        $stanza.find('x').each(function () {\n            let form_type_val = $(this).find('field[var=\"FORM_TYPE\"] value');\n            if (form_type_val.length && form_type_val.text() === Strophe.NS.URLDISCO && self.account.domain === from){\n                let media_gallery_url = $(this).find('field[var=\"' + Strophe.NS.MEDIAGALLERY + '\"] value');\n                if (media_gallery_url.length && media_gallery_url.text()){\n                    self.create({\n                        'var': 'media-gallery',\n                        from: media_gallery_url.text()\n                    });\n                }\n            }\n        });\n        if (this.account.auth_view && !(constants.TRUSTED_DOMAINS.indexOf(this.account.connection.domain) > -1)){\n            this.account.auth_view.first_features_received = true\n            if (this.account.auth_view.stepped_auth_complete)\n                this.account.auth_view.successFeedback();\n        }\n    },\n\n    onFeatureAdded: function (feature) {\n        let _var = feature.get('var'),\n            client_feature = this.account.client_features.get(_var);\n        client_feature && client_feature.set('supports', true);\n        (_var != Strophe.NS.SUBSCRIPTION_PREAPPROVAL && _var != Strophe.NS.SYNCHRONIZATION) && this.account.cached_server_features.putInCachedFeatures({\n            var: _var,\n            from: feature.get('from'),\n        });\n        if (_var === 'media-gallery') {\n            this.account.set('gallery_auth', false)\n            if (!(this.account.get('gallery_token') && this.account.get('gallery_url')) || (this.account.get('gallery_url') != feature.get('from')))\n                this.account.initGalleryAuth(feature);\n        }\n    },\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.client_features = new xabber.ClientFeatures(null, {account: this});\n    this.server_features = new xabber.ServerFeatures(null, {account: this});\n});\n\nxabber.Account.addConnPlugin(function () {\n    this.last_stanza_timestamp = moment.now();\n\n    this.connection.deleteHandler(this._last_stanza_handler);\n    this._last_stanza_handler = this.connection.addHandler(() => {\n        this.last_stanza_timestamp = moment.now();\n        return true;\n    });\n\n    this.connection.deleteHandler(this._pong_handler);\n    this._pong_handler = this.connection.ping.addPingHandler((ping) => {\n        this.last_stanza_timestamp = moment.now();\n        this.connection.ping.pong(ping);\n        return true;\n    });\n\n    if (this._main_interval_worker)\n        this._main_interval_worker.terminate();\n\n    this._main_interval_worker = new Worker(new URL('./worker.js', import.meta.url));\n\n    this._main_interval_worker.onmessage = () => {\n        let downtime = (moment.now() - this.last_stanza_timestamp) / 1000;\n        if (!navigator.onLine || downtime > (constants.DOWNTIME_RECONNECTION_TIMEOUT || 15)) {\n            if (!navigator.onLine){\n                console.log('navigator: ' + navigator.onLine)\n                console.log('this.connection.connected: ' + this.connection.connected)\n            }\n            console.log('downtime main to disconnect: ' + downtime);\n            console.log(this.connection.connected);\n            if (this.connection.connected)\n                this.connection.disconnect();\n            else\n                this.connect();\n            this._main_interval_worker.terminate();\n        }\n        if (downtime > (constants.PING_SENDING_INTERVAL || 10)) {\n            console.log('downtime main to ping: ' + downtime);\n            this.connection && this.connection.ping.ping(this.get('domain'));\n        }\n    };\n\n    this._main_interval_worker.postMessage({});\n\n    this.server_features.request();\n}, true, true);\n\nxabber.Account.addFastConnPlugin(function () {\n    this.last_fast_stanza_timestamp = moment.now();\n\n    this.fast_connection.deleteHandler(this._last_fast_stanza_handler);\n    this._last_fast_stanza_handler = this.fast_connection.addHandler(() => {\n        this.last_fast_stanza_timestamp = moment.now();\n        return true;\n    });\n\n    this.fast_connection.deleteHandler(this._fast_pong_handler);\n    this._fast_pong_handler = this.fast_connection.ping.addPingHandler((ping) => {\n        this.last_fast_stanza_timestamp = moment.now();\n        this.fast_connection.ping.pong(ping);\n        return true;\n    });\n\n    if (this._fast_interval_worker)\n        this._fast_interval_worker.terminate();\n\n    this._fast_interval_worker = new Worker(new URL('./worker.js', import.meta.url));\n\n    this._fast_interval_worker.onmessage = () => {\n        let downtime = (moment.now() - this.last_fast_stanza_timestamp) / 1000;\n        if (!navigator.onLine || downtime > (constants.DOWNTIME_RECONNECTION_TIMEOUT || 15)) {\n            if (!navigator.onLine){\n                console.log('navigator: ' + navigator.onLine)\n                console.log('this.connection.connected: ' + this.connection.connected)\n            }\n            console.log('downtime fast to disconnect: ' + downtime);\n            console.log(this.connection.connected);\n            if (this.fast_connection.connected)\n                this.fast_connection.disconnect();\n            else\n                this.fast_connection.connect('password', this.fast_connection.jid, this.fast_connection.pass);\n            this._fast_interval_worker.terminate();\n        }\n        if (downtime > (constants.PING_SENDING_INTERVAL || 10)) {\n            console.log('downtime fast to ping: ' + downtime);\n            this.fast_connection && this.fast_connection.ping.ping(this.get('domain'));\n        }\n    };\n    this._fast_interval_worker.postMessage({});\n}, true, true);\n\nxabber.Account.addConnPlugin(function () {\n    let disco = this.connection.disco;\n    this.connection.addHandler(disco._onDiscoInfo.bind(disco),\n            Strophe.NS.DISCO_INFO, 'iq', 'get', null, null);\n    this.connection.addHandler(disco._onDiscoItems.bind(disco),\n            Strophe.NS.DISCO_ITEMS, 'iq', 'get', null, null);\n}, false, true);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.contacts,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $pres = env.$pres,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    VanillaQR = env.VanillaQR,\n    uuid = env.uuid,\n    Images = utils.images,\n    Emoji = utils.emoji,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\nxabber.Contact = Backbone.Model.extend({\n    idAttribute: 'jid',\n    defaults: {\n        status: \"offline\",\n        status_message: \"\",\n        subscription: undefined,\n        subscription_request_in: false,\n        subscription_request_out: false,\n        groups: [],\n        group_chat: false\n    },\n\n    initialize: function (_attrs, options) {\n        this.on(\"change:group_chat\", this.onChangedGroupchat, this);\n        this.account = options.account;\n        if (_attrs.avatar) {\n            _attrs.image = _attrs.avatar;\n            delete _attrs.avatar;\n        }\n        let attrs = _.clone(_attrs);\n        if (attrs.resource) {\n            attrs.full_jid = attrs.jid + '/' + attrs.resource;\n        } else if (attrs.group_chat) {\n            attrs.full_jid = attrs.jid + '/Group';\n        }\n        (this.account && this.account.domain === attrs.jid) && _.extend(attrs, {server: true, status: 'online'});\n        attrs.name = attrs.roster_name || attrs.name || attrs.jid;\n        if (!attrs.image) {\n            attrs.photo_hash = \"\";\n            attrs.image = Images.getDefaultAvatar(attrs.name);\n        }\n        if (this.account.blocklist.isBlocked(attrs.jid))\n            attrs.blocked = true;\n        this.cached_image = Images.getCachedImage(attrs.image);\n        attrs.vcard = utils.vcard.getBlank(attrs.jid);\n        this.set(attrs);\n        this.onChangedGroupchat();\n        this.domain = Strophe.getDomainFromJid(this.get('jid'));\n        !this.get('group_chat') && this.account && this.account.chat_settings && this.set('group_chat', _.contains(this.account.chat_settings.get('group_chat'), this.get('jid')));\n        this.hash_id = env.b64_sha1(this.account.get('jid') + '-' + attrs.jid);\n        this.resources = new xabber.ContactResources(null, {contact: this});\n        this.on(\"update_avatar\", this.updateAvatar, this);\n        this.on(\"change:full_jid\", this.updateCachedInfo, this);\n        this.on(\"change:name\", this.updateCachedInfo, this);\n        this.on(\"change:roster_name\", this.updateName, this);\n        this.on(\"destroy\", this.onDestroy, this);\n        this.account.dfd_presence.done(() => {\n            if (!this.get('blocked') && !this.get('vcard_updated') && !attrs.is_deleted)\n                this.getVCard();\n        });\n    },\n\n    getStatusMessage: function () {\n        let subscription = this.get('subscription'),\n            in_request = this.get('subscription_request_in'),\n            out_request = this.get('subscription_request_out'),\n            status_text = \"\";\n        if (this.get('blocked'))\n            status_text = xabber.getString(\"action_contact_blocked\");\n        else if (this.get('group_chat')) {\n            if (this.get('group_info')) {\n                if (this.get('group_info').members_num)\n                    status_text += xabber.getQuantityString(\"contact_groupchat_status_member\", this.get('group_info').members_num);\n                if (this.get('group_info').online_members_num > 0)\n                    status_text += xabber.getString(\"contact_groupchat_status_online\", [this.get('group_info').online_members_num || 0]);\n            } else if (!subscription)\n                status_text = xabber.getString(\"contact_state_no_subscriptions\");\n            else\n                status_text = this.get('status_message') || xabber.getString(this.get('status'));\n        } else {\n            if (subscription === 'from') {\n                if (out_request)\n                    status_text = xabber.getString(\"contact_state_outgoing_request\");\n                else\n                    status_text = xabber.getString(\"chat_receives_presence_updates\");\n            } else if (subscription === 'none') {\n                if (out_request)\n                    status_text = xabber.getString(\"contact_state_outgoing_request\");\n                else if (in_request)\n                    status_text = xabber.getString(\"contact_state_in_contact_list\");\n                else\n                    status_text = xabber.getString(\"contact_state_in_contact_list\");\n            }\n            else if (!subscription)\n                status_text = xabber.getString(\"contact_state_not_in_contact_list\");\n            else\n                status_text = this.get('status_message') || xabber.getString(this.get('status'));\n        }\n        return status_text;\n    },\n\n    getSubscriptionStatuses: function () {\n        let subscription = this.get('subscription'),\n            subscription_preapproved = this.get('subscription_preapproved'),\n            in_request = this.get('subscription_request_in'),\n            out_request = this.get('subscription_request_out'),\n            status_description = \"\",\n            status_out_color = \"\",\n            status_in_color = \"\",\n            status_out_text = \"\",\n            status_in_text = \"\";\n        if (this.get('blocked'))\n            status_out_text = xabber.getString(\"action_contact_blocked\");\n        if (subscription === 'both') {\n            status_out_text = xabber.getString(\"subscription_status_out_to\");\n            status_in_text = xabber.getString(\"subscription_status_in_from\");\n            status_description = xabber.getString(\"subscription_status_description_both\");\n        }\n        else if (subscription === 'from') {\n            if (out_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_from\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_from\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_from\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_from\");\n            }\n        }\n        else if (subscription === 'to') {\n            if (in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_to\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_to_in_request_incoming\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_to\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_to_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_to_in_allowed\");\n                }\n            }\n        } else if (subscription === 'none') {\n            if (out_request && in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_request_incoming\");\n            }\n            else if (out_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_request_in_allowed\");\n                }\n            }\n            else if (in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_request_incoming\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_none_in_allowed\");\n                }\n            }\n        }\n        else if (!subscription)\n            status_out_text = xabber.getString(\"contact_add\");\n\n        if (out_request)\n            status_out_color = \"request\";\n        if (in_request)\n            status_in_color = \"request\";\n        if (subscription === 'to')\n            status_out_color = \"subbed\";\n        if (subscription === 'from')\n            status_in_color = \"subbed\";\n        if (subscription === 'both') {\n            status_out_color = \"subbed\";\n            status_in_color = \"subbed\";\n        }\n        return {\n            status_out: status_out_text,\n            status_in: status_in_text,\n            status_out_color: status_out_color,\n            status_in_color: status_in_color,\n            status_description: status_description,\n        };\n    },\n\n    getIcon: function () {\n        if (this.get('blocked'))\n            return 'blocked';\n        if (this.get('invitation'))\n            return 'group-invite';\n        if (this.get('group_chat')) {\n            if (this.get('jid').includes('redmine_issue_'))\n                return 'task';\n            if (this.get('private_chat'))\n                return 'group-private';\n            if (this.get('incognito_chat'))\n                return 'group-incognito';\n            return 'group-public';\n        }\n        if (this.get('server'))\n            return 'server';\n        if (this.get('bot'))\n            return 'bot';\n        return;\n    },\n\n    updateAvatar: function () {\n        this.account.cached_roster.getFromRoster(this.get('jid'), (cached_info) => {\n            if (cached_info && this.get('photo_hash') === cached_info.photo_hash)\n                return;\n            this.getVCard();\n        });\n    },\n\n    getVCard: function (callback) {\n        let jid = this.get('jid'),\n            is_callback = _.isFunction(callback);\n        this.account.getConnectionForIQ().vcard.get(jid,\n             (vcard) => {\n                if (vcard.group_info) {\n                    let group_info = this.get('group_info') || {};\n                    group_info = _.extend(group_info, vcard.group_info);\n                    this.set({group_info});\n                    delete vcard.group_info;\n                }\n                let attrs = {\n                    vcard: vcard,\n                    vcard_updated: moment.now(),\n                    name: this.get('roster_name')\n                };\n                if (!attrs.name) {\n                    if (this.get('group_chat'))\n                        attrs.name = vcard.nickname || this.get('name');\n                    else\n                        attrs.name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || jid;\n                }\n                if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n                    if (vcard.photo.image) {\n                        attrs.avatar_priority = constants.AVATAR_PRIORITIES.VCARD_AVATAR;\n                        attrs.image = vcard.photo.image;\n                    }\n                    else\n                        attrs.image = Images.getDefaultAvatar(attrs.name);\n                    this.cached_image = Images.getCachedImage(attrs.image);\n                }\n                this.set(attrs);\n                is_callback && callback(vcard);\n            },\n            function () {\n                is_callback && callback(null);\n            }\n        );\n    },\n\n    updateCachedInfo: function () {\n        this.account.cached_roster.getFromRoster(this.get('jid'), (cached_info) => {\n            cached_info = cached_info || {};\n            let roster_info = {\n                jid: this.get('jid'),\n                in_roster: !_.isUndefined(this.get('in_roster')) ? this.get('in_roster') : cached_info.in_roster,\n                groups: this.get('groups'),\n                subscription: !_.isUndefined(this.get('subscription')) ? this.get('subscription') : cached_info.subscription,\n                roster_name: !_.isUndefined(this.get('roster_name')) ? this.get('roster_name') : cached_info.roster_name,\n                subscription_request_out: this.get('subscription_request_out'),\n                subscription_request_in: this.get('subscription_request_in'),\n                name: this.get('name'),\n                vcard_updated: this.get('vcard_updated')\n            }, full_jid = this.get('full_jid');\n            if (this.get('photo_hash') || this.get('image'))\n                _.extend(roster_info, {\n                    photo_hash: (this.get('photo_hash') || this.account.getAvatarHash(this.get('image'))),\n                    avatar_priority: this.get('avatar_priority'),\n                    avatar: this.get('image')\n                });\n            if (full_jid)\n                roster_info.resource = Strophe.getResourceFromJid(full_jid);\n            this.account.cached_roster.putInRoster(roster_info);\n        });\n    },\n\n    onChangedGroupchat: function () {\n        if (this.get('group_chat') && this.get('removed')) {\n            xabber.error(\"removed contact became groupchat\")\n        }\n        if (this.get('group_chat')) {\n            this.updateCounters();\n            this.participants = new xabber.Participants(null, {contact: this});\n        }\n    },\n\n    onDestroy: function () {\n        if (this.account && this.account.groupchat_settings && this.participants) {\n            this.participants.reset();\n            this.account.groupchat_settings.resetParticipantsList(this.get('jid'));\n        }\n    },\n\n    getBlockedParticipants: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.get('full_jid') || this.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#block'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    updateCounters: function () {\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    getLastSeen: function() {\n        if (this.get('status') == 'offline') {\n            if (!Strophe.getNodeFromJid(this.get('jid'))) {\n                this.set({status_message: 'Server'});\n                return;\n            }\n            let iq = $iq({type: 'get', to: this.get('jid') }).c('query', {xmlns: Strophe.NS.LAST});\n            this.account.sendIQFast(iq, (iq) => {\n                let last_seen = this.getLastSeenStatus(iq);\n                if (this.get('status') == 'offline')\n                    this.set({status_message: last_seen});\n                return this;\n            });\n        }\n    },\n\n    getMyInfo: function (callback) {\n        this.participants.participantsRequest({id: '', properties: true}, (response) => {\n            let $item = $($(response).find('query user')),\n                cached_avatar = this.account.chat_settings.getAvatarInfoById($item.find('id').text());\n            $item.length && this.participants && this.participants.createFromStanza($item, {my_info: true});\n            cached_avatar && (cached_avatar.avatar_hash == this.my_info.get('avatar')) && this.my_info.set('b64_avatar', cached_avatar.avatar_b64);\n            this.trigger('update_my_info');\n            this.participants.participantsRequest({id: ''}, (response) => {\n                let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                this.my_rights = data_form;\n                this.trigger('permissions_changed');\n                callback && callback();\n            });\n        });\n    },\n\n    getAvatar: function (avatar, node, callback, errback) {\n        let jid = this.get('group_chat') ? this.get('full_jid') : this.get('jid'),\n            iq_request_avatar = $iq({type: 'get', to: jid})\n            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n            .c('items', {node: node})\n            .c('item', {id: avatar});\n        this.account.sendIQFast(iq_request_avatar, (iq) => {\n            let pubsub_avatar = $(iq).find('data').text();\n            if (pubsub_avatar == \"\")\n                errback && errback(xabber.getString(\"pubsub__error__text_empty_node\"));\n            else\n                callback && callback(pubsub_avatar);\n        });\n    },\n\n    pubAvatar: function (image, node, callback, errback) {\n        let avatar_hash = sha1(image.base64),\n            iq_pub_data = $iq({type: 'set', to: this.get('jid') })\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_DATA + node})\n                .c('item', {id: avatar_hash})\n                .c('data', {xmlns: Strophe.NS.PUBSUB_AVATAR_DATA}).t(image.base64),\n            iq_pub_metadata = $iq({type: 'set', to: this.get('jid') })\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA + node})\n                .c('item', {id: avatar_hash})\n                .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                .c('info', {bytes: image.size, id: avatar_hash, type: image.type});\n        this.account.sendIQFast(iq_pub_data, () => {\n                this.account.sendIQFast(iq_pub_metadata, () => {\n                        callback && callback(avatar_hash);\n                    },\n                    function (data_error) {\n                        errback && errback(data_error);\n                    });\n            }, (data_error) => {\n                errback && errback(data_error);\n            });\n    },\n\n    getLastSeenStatus: function(iq) {\n        let seconds = $(iq).children('query').attr('seconds'),\n            message_time = moment.now() - 1000*seconds;\n        this.set({ last_seen: message_time });\n        return xabber.pretty_last_seen(seconds);\n    },\n\n    pres: function (type) {\n        let pres = $pres({to: this.get('jid'), type: type});\n        this.account.sendPres(pres);\n        return this;\n    },\n\n    pushInRoster: function (attrs, callback, errback) {\n        attrs || (attrs = {});\n        let name = attrs.name || this.get('roster_name'),\n            groups = attrs.groups || this.get('groups');\n        let iq = $iq({type: 'set'})\n            .c('query', {xmlns: Strophe.NS.ROSTER})\n            .c('item', {jid: this.get('jid'), name: name});\n        _.each(groups, function (group) {\n            iq.c('group').t(group).up();\n        });\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('known', true);\n        this.set('removed', false);\n        return this;\n    },\n\n    removeFromRoster: function (callback, errback) {\n        if (!this.get('removed')){\n            let iq = $iq({type: 'set'})\n                .c('query', {xmlns: Strophe.NS.ROSTER})\n                .c('item', {jid: this.get('jid'), subscription: \"remove\"});\n            this.account.cached_roster.removeFromRoster(this.get('jid'));\n            this.account.sendIQFast(iq, callback, errback);\n            this.set('known', false);\n            this.set('removed', true);\n            if (this.get('group_chat')){\n                this.set('group_chat', false);\n                this.participants.reset();\n                this.account.groupchat_settings.resetParticipantsList(this.get('jid'));\n            }\n        }\n        return this;\n    },\n\n    acceptRequest: function (callback) {\n        this.pres('subscribed');\n        callback && callback();\n    },\n\n    askRequest: function (callback) {\n        this.pres('subscribe');\n        callback && callback();\n    },\n\n    blockRequest: function (callback) {\n        this.block(callback);\n    },\n\n    declineRequest: function (callback) {\n        this.pres('unsubscribed');\n        this.removeFromRoster(callback);\n    },\n\n    declineSubscription: function () {\n        this.pres('unsubscribe');\n        this.set('subscription_request_out', false);\n    },\n\n    declineSubscribe: function () {\n        this.pres('unsubscribed');\n        !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && this.set('subscription_preapproved', false)\n    },\n\n    deleteWithDialog: function () {\n        let is_group = this.get('group_chat'),\n            header = is_group ? xabber.getString(\"group_remove\") : xabber.getString(\"remove_contact\"),\n            msg_text = is_group ? xabber.getString(\"group_remove_confirm\", [this.get('name').bold()]) : xabber.getString(\"contact_delete_confirm_short\", [this.get('name').bold()]),\n            optional_buttons = is_group ? null : [{ name: 'delete_history', checked: false, text: xabber.getString(\"delete_contact__label_delete_history\")}];\n        utils.dialogs.ask(header, msg_text, optional_buttons, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (is_group) {\n                    let domain = this.domain,\n                        localpart = Strophe.getNodeFromJid(this.get('jid')),\n                        iq = $iq({to: domain, type: 'set'})\n                            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#delete`}).t(localpart);\n                    this.account.sendIQFast(iq, () => {\n                        this.declineSubscription();\n                        let chat = this.account.chats.getChat(this);\n                        this.removeFromRoster();\n                        chat.trigger(\"close_chat\");\n                        xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n                    });\n                } else {\n                    let chat = this.account.chats.getChat(this);\n                    this.removeFromRoster();\n                    if (result.delete_history) {\n                        chat.retractAllMessages(false);\n                        chat.deleteFromSynchronization();\n                        xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n                    }\n                    xabber.trigger(\"clear_search\");\n                }\n            }\n        });\n    },\n\n    blockWithDialog: function () {\n        let is_group = this.get('group_chat'),\n            contact = this,\n            header = is_group ? xabber.getString(\"block_group__header\") : xabber.getString(\"contact_block\"),\n            buttons = { ok_button_text: xabber.getString(\"contact_bar_block\")},\n            msg_text = xabber.getString(\"block_contact_confirm_short\", [this.get('name').bold()]);\n        if (!is_group) {\n            buttons.optional_button = xabber.getString(\"contact_block_and_delete\");\n            msg_text += `\\n${xabber.getString(\"block_contact_warning\", [this.get('jid')])}`;\n        }\n        utils.dialogs.ask(header, msg_text, null, buttons).done(function (result) {\n            if (result) {\n               if (!is_group) {\n                    let chat = contact.account.chats.getChat(contact);\n                    if (result === 'block & delete') {\n                        contact.removeFromRoster();\n                        chat.retractAllMessages(false);\n                        chat.deleteFromSynchronization();\n                        chat.set('active', false);\n                    }\n                }\n                contact.blockRequest();\n                xabber.trigger(\"clear_search\");\n                if (!is_group)\n                    xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n            }\n        });\n    },\n\n    unblockWithDialog: function () {\n        let contact = this;\n        utils.dialogs.ask(xabber.getString(\"chat_settings__button_unblock_contact\"), xabber.getString(\"unblock_contact_confirm_short\", [this.get('name')]), null, { ok_button_text: xabber.getString(\"contact_bar_unblock\")}).done(function (result) {\n            if (result) {\n                contact.unblock();\n                xabber.trigger(\"clear_search\");\n            }\n        });\n    },\n\n    block: function (callback, errback) {\n        let iq = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.get('jid')});\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('blocked', true);\n        this.set('known', false);\n    },\n\n    unblock: function (callback, errback) {\n        let iq = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.get('jid')});\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('blocked', false);\n    },\n\n    setActiveStateSendInterval: function () {\n        let stanza = $msg({to: this.get('jid'), type: 'chat'}).c('active', {xmlns: Strophe.NS.CHATSTATES});\n        clearTimeout(this._sending_active_chatstate_timeout);\n        clearInterval(this._sending_active_chatstate_interval);\n        this._sending_active_chatstate_timeout = setTimeout(() => {\n            this._sending_active_chatstate_interval = setInterval(() => {\n                this.account.sendMsg(stanza);\n            }, constants.PRESENT_INTERVAL);\n        }, constants.PRESENT_INTERVAL)\n    },\n\n    handlePresence: function (presence) {\n        let $presence = $(presence),\n            type = presence.getAttribute('type'),\n            $vcard_update = $presence.find(`x[xmlns=\"${Strophe.NS.VCARD_UPDATE}\"]`);\n        if ($vcard_update.length && this.get('avatar_priority') && this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n            this.set('photo_hash', $vcard_update.find('photo').text());\n            this.trigger('update_avatar');\n        }\n        let $group_chat_info = $(presence).find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`);\n        if ($group_chat_info.length > 0 && $group_chat_info.children().length) {\n            this.set('full_jid', $presence.attr('from'));\n            if (!this.get('group_chat')) {\n                this.set('group_chat', true);\n                this.account.chat_settings.updateGroupChatsList(this.get('jid'), this.get('group_chat'));\n            }\n            let group_chat_info = this.parseGroupInfo($(presence)),\n                prev_group_info = this.get('group_info') || {};\n            _.extend(prev_group_info, group_chat_info);\n            this.set('group_info', prev_group_info);\n            if (!this.get('roster_name') && (prev_group_info.name !== this.get('name')))\n                this.set('name', prev_group_info.name);\n            this.set({status: prev_group_info.status, status_updated: moment.now(), status_message: (prev_group_info.members_num + ' members' + xabber.getString(\"contact_groupchat_status_online\", [prev_group_info.online_members_num || 0]))});\n        }\n        if (type === 'subscribe') {\n            this.set('subscription_request_in', true);\n            if (this.get('subscription_preapproved')) {\n                this.pres('subscribed');\n            } else {\n                this.trigger('presence', this, 'subscribe');\n            }\n        } else if (type === 'subscribed') {\n            if (this.get('group_chat') && (this.get('subscription_request_out') || this.get('subscription') === 'to')) {\n\n            }\n            if (this.get('subscription') === 'to') {\n                // this.pres('subscribed');\n            }\n            this.trigger('presence', this, 'subscribed');\n        } else if (type === 'unsubscribe') {\n            this.set('subscription_request_in', false);\n            if (this.get('group_chat')) {\n                let chat = this.account.chats.getChat(this),\n                    sync_deleted = this.get('sync_deleted');\n                this.removeFromRoster();\n                if (!sync_deleted){\n                    chat.deleteFromSynchronization(() => {\n                        chat.trigger(\"close_chat\");\n                    }, () => {\n                        chat.trigger(\"close_chat\");\n                    });\n                } else {\n                    chat.trigger(\"close_chat\");\n                }\n            }\n        } else if (type === 'unsubscribed') {\n            this.set('subscription_request_out', false);\n            // this.trigger('presence', this, 'unsubscribed');\n        } else {\n            let jid = presence.getAttribute('from'),\n                resource = Strophe.getResourceFromJid(jid),\n                priority = Number($presence.find('priority').text()),\n                status = $presence.find('show').text() || 'online',\n                $status_message = $presence.find('status'),\n                status_message = $status_message.text();\n            _.isNaN(priority) && (priority = 0);\n            clearTimeout(this._reset_status_timeout);\n            let resource_obj = this.resources.get(resource);\n            if (type === 'unavailable') {\n                this.set({ last_seen: moment.now() });\n                resource_obj && resource_obj.destroy();\n            } else {\n                this.set({ last_seen: undefined });\n                let attrs = {\n                    resource: resource,\n                    priority: priority,\n                    status: status\n                };\n                $status_message.length && (attrs.status_message = status_message);\n                if (!resource_obj) {\n                    resource_obj = this.resources.create(attrs);\n                } else {\n                    resource_obj.set(attrs);\n                }\n            }\n        }\n    },\n\n    parseGroupInfo: function ($presence) {\n        let jid = this.get('jid'),\n            $group_chat = $presence.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`),\n            name = $group_chat.find('name').text(),\n            $model = $group_chat.find('membership'),\n            status = $presence.children('show').text() || (($presence.attr('type') === 'unavailable') ? 'unavailable' : 'online'),\n            status_msg = $presence.children('status').text(),\n            privacy = $group_chat.find('privacy').text(),\n            $index = $group_chat.find('index'),\n            $description = $group_chat.find('description'),\n            pinned_message = Number($group_chat.find('pinned-message').text()),\n            prev_pinned_message = this.get('pinned_message') ? this.get('pinned_message').get('stanza_id') : 0,\n            private_chat = $group_chat.find('parent-chat').text() || false,\n            members_num = Number($group_chat.find('members').text()),\n            $online_members_num = $group_chat.find('present'),\n            info = {jid, name, status_msg, privacy, status, members_num};\n        $index.length && (info.searchable = $index.text());\n        $model.length && (info.model = $model.text());\n        $description.length && (info.description = $description.text());\n        $online_members_num.length && (info.online_members_num = Number($online_members_num.text()));\n        private_chat && this.set('private_chat', private_chat);\n        privacy === 'incognito' && this.set('incognito_chat', true);\n        let chat = this.account.chats.get(this.hash_id), pinned_msg_elem;\n        if ($group_chat.find('pinned-message').length) {\n            if (prev_pinned_message != pinned_message) {\n                if (chat) {\n                    if (chat.item_view && !chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    pinned_msg_elem = chat.item_view.content.$pinned_message;\n                }\n                if (pinned_msg_elem) {\n                    if (pinned_message) {\n                        this.getMessageByStanzaId(pinned_message, ($message) => {\n                            this.parsePinnedMessage($message, pinned_msg_elem);\n                        });\n                    }\n                    else {\n                        this.set('pinned_message', undefined);\n                        this.parsePinnedMessage(undefined, pinned_msg_elem);\n                    }\n                }\n            }\n        }\n        return info;\n    },\n\n    getAllRights: function (callback) {\n        let iq_get_rights = $iq({type: 'get', to: this.get('full_jid') || this.get('jid') })\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#rights` });\n        this.account.sendIQFast(iq_get_rights, (iq_all_rights) => {\n            let all_permissions = $(iq_all_rights).find('permission'),\n                all_restrictions = $(iq_all_rights).find('restriction');\n            this.all_rights = {permissions: all_permissions, restrictions: all_restrictions};\n            callback && callback();\n        });\n    },\n\n    getMessageByStanzaId: function (stanza_id, callback, options) {\n        options = options || {};\n        let queryid = uuid(),\n            account = this.account,\n            is_fast = account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n            conn = is_fast ? account.fast_connection : account.connection,\n            receiver = this.get('group_chat') ? this.get('full_jid') || this.get('jid') : this.account.get('jid'),\n            iq = $iq({type: 'set', to: receiver})\n                .c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                .c('value').t(Strophe.NS.MAM).up().up()\n                .c('field', {'var': 'ids'})\n                .c('value').t(stanza_id).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE))    {\n            iq.c('field', {'var': `conversation-type`});\n            if (options.encrypted){\n                iq.c('value').t(Strophe.NS.OMEMO).up().up();\n            } else {\n                iq.c('value').t(Strophe.NS.XABBER_CHAT).up().up();\n            }\n        }\n        let handler = conn.addHandler((message) => {\n            let $msg = $(message);\n            if ($msg.find('result').attr('queryid') === queryid)\n                callback && callback($msg);\n            return true;\n        }, Strophe.NS.MAM);\n        this.account.sendIQFast(iq, () => {\n                conn.deleteHandler(handler);\n            }, () => {\n                conn.deleteHandler(handler);\n            }\n        );\n    },\n\n    MAMRequest: function (options, callback, errback) {\n        let account = this.account,\n            is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n            conn = is_fast ? account.fast_connection : account.connection,\n            contact = this,\n            messages = [], queryid = uuid(),\n            is_groupchat = contact && contact.get('group_chat'), success = true, iq;\n        delete options.fast;\n        if (is_groupchat)\n            iq = $iq({type: 'set', to: contact.get('full_jid') || contact.get('jid')});\n        else\n            iq = $iq({type: 'set'});\n        iq.c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n            .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n            .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n            .c('value').t(Strophe.NS.MAM).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE))    {\n            iq.c('field', {'var': `conversation-type`});\n            if (options.encrypted){\n                iq.c('value').t(Strophe.NS.OMEMO).up().up();\n            } else {\n                iq.c('value').t(Strophe.NS.XABBER_CHAT).up().up();\n            }\n            iq.c('field', {'var': `with-tags`});\n            if (options.filter_image)\n                iq.c('value').t('image').up();\n            if (options.filter_video)\n                iq.c('value').t('video').up();\n            if (options.filter_voice)\n                iq.c('value').t('voice').up();\n            if (options.filter_files)\n                iq.c('value').t('document').up();\n            iq.up();\n        }\n        if (!is_groupchat)\n            iq.c('field', {'var': 'with'})\n                .c('value').t(this.get('jid')).up().up();\n        if (options.var)\n            options.var.forEach((opt_var) => {\n                iq.c('field', {'var': opt_var.var})\n                    .c('value').t(opt_var.value).up().up();\n            });\n        iq.up().cnode(new Strophe.RSM(options).toXML());\n        let deferred = new $.Deferred();\n        account.chats.onStartedMAMRequest(deferred);\n        deferred.done(function () {\n            let handler = conn.addHandler(function (message) {\n                if ((contact && is_groupchat == contact.get('group_chat'))) {\n                    let $msg = $(message);\n                    if ($msg.find('result').attr('queryid') === queryid) {\n                        messages.push(message);\n                    }\n                }\n                else {\n                    messages = [];\n                    success = false;\n                }\n                return true;\n            }, Strophe.NS.MAM);\n            let callb = function (res) {\n                    conn.deleteHandler(handler);\n                    account.chats.onCompletedMAMRequest(deferred);\n                    let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                    if ($fin.length && $fin.attr('queryid') === queryid) {\n                        let rsm = new Strophe.RSM({xml: $fin.find('set')[0]});\n                        rsm.complete = ($fin.attr('complete') === 'true') ? true : false;\n                        callback && callback(success, messages, rsm);\n                    }\n                },\n                errb = function (err) {\n                    conn.deleteHandler(handler);\n                    xabber.error(\"MAM error\");\n                    xabber.error(err);\n                    account.chats.onCompletedMAMRequest(deferred);\n                    errback && errback(err);\n                };\n            if (is_fast)\n                account.sendFast(iq, callb, errb);\n            else\n                account.sendIQ(iq, callb, errb);\n        });\n    },\n\n    getFilesFromStanza: function ($message, options) {\n        $message = options && options.cached_message? $message.find('content') : $message.find('message')\n        let references = $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n            $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`) :\n            $message.children('envelope').children('content').children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`),\n            items = [], cached_stanza_id;\n        options && options.cached_stanza_id && (cached_stanza_id = options.cached_stanza_id);\n\n        references.each((idx, reference) => {\n            let $reference = $(reference),\n                type = $reference.attr('type');\n            if (type === 'mutable') {\n                let $file_sharing = $reference.find(`file-sharing[xmlns=\"${Strophe.NS.FILES}\"]`).first();\n                if ($file_sharing.length) {\n                    let type = $file_sharing.parent(`voice-message[xmlns=\"${Strophe.NS.VOICE_MESSAGE}\"]`).length ? 'voice' : 'file',\n                        $file = $file_sharing.children('file'), file_attrs = {}, sources = [];\n                    $file_sharing.children('sources').children('uri').each((i, uri) => {sources.push($(uri).text());});\n                    file_attrs = {\n                        name: $file.children('name').text(),\n                        hash: $file.children(`hash[xmlns=\"${Strophe.NS.HASH}\"]`).text(),\n                        size: $file.children('size').text(),\n                        uniqueid: $message.attr('id') || cached_stanza_id ,\n                        id: $file.children('gallery-id').text(),\n                        created_at: $file.children('created').text(),\n                        thumbnail: $file.children('thumbnail-uri').text(),\n                        media_type: $file.children('media-type').text(),\n                        duration: $file.children('duration').text(),\n                        description: $file.children('desc').text(),\n                        height: $file.children('height').text(),\n                        width: $file.children('width').text(),\n                        voice: type === 'voice',\n                        sources: sources\n                    };\n                    if (sources[0].indexOf('aescbc') == 0) {\n                        let uri = sources[0].replace(/^aescbc/, 'https'),\n                            key = utils.fromBase64toArrayBuffer(uri.slice(uri.length - 64));\n                        uri = uri.slice(0, uri.length - 64 - 1);\n                        _.extend(file_attrs, {sources: [uri], key: key});\n                        file_attrs.has_encrypted_files = true;\n                    }\n                    items.push(file_attrs);\n                }\n            }\n        });\n        return items\n    },\n\n    parsePinnedMessage: function ($message, pinned_msg_elem) {\n        if (!$message) {\n            this.renderPinnedMessage(null, pinned_msg_elem);\n        }\n        else {\n            let $msg = $message.find('result message').first();\n            if (this.get('pinned_message'))\n                if (this.get('pinned_message').stanza_id === $msg.find('stanza-id').attr('id'))\n                    return;\n            let message = this.account.chats.receiveChatMessage($message, {pinned_message: true});\n            this.set('pinned_message', message);\n            this.renderPinnedMessage(message, pinned_msg_elem);\n        }\n    },\n\n    renderPinnedMessage: function (message, pinned_msg_elem) {\n        if (!message) {\n            pinned_msg_elem.html(\"\");\n            pinned_msg_elem.siblings('.chat-content').css({'height':'100%'});\n        }\n        else {\n            let images = message.get('images') || [],\n                files = message.get('files') || [],\n                locations = message.get('locations'),\n                fwd_message = message.get('forwarded_message'),\n                fwd_msg_author = null,\n                msg_text = _.escape(message.get('message'));\n            message.get('videos') && message.get('videos').length && (files = files.concat(message.get('videos')));\n            if (fwd_message) {\n                let user_info = fwd_message[0].get('user_info') || {};\n                if (msg_text) {\n                } else if (fwd_message.length > 1)\n                    msg_text = xabber.getQuantityString(\"forwarded_messages_count\", fwd_message.length);\n                else {\n                    msg_text = fwd_message[0].get('message') || fwd_message[0].get('forwarded_message') && xabber.getString(\"forwarded_messages_count_plural_0\", [fwd_message[0].get('forwarded_message').length]);\n                    fwd_msg_author = user_info.nickname || fwd_message[0].get('from_jid') || user_info.id;\n                }\n            }\n            if ((images && images.length) && (files && files.length))\n                msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__attachments\", [images.length + files.length])}</span>`;\n            else {\n                if (images && images.length) {\n                    if (images.length == 1)\n                        msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__images_plural_0\")}: </span>` + images[0].name;\n                    if (images.length > 1)\n                        msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__images\", images.length)}</span>`;\n                }\n                if (files && files.length) {\n                    if (files.length == 1)\n                        msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__files_plural_0\")}: </span>` + files[0].name + ' (' + files[0].size + ')';\n                    if (files.length > 1)\n                        msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__files\", files.length)}</span>`;\n                }\n            }\n            if (locations && locations.length) {\n                if (locations.length == 1)\n                    msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__locations_plural_0\")}</span>`;\n                if (locations.length > 1)\n                    msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__locations\", locations.length)}</span>`;\n            }\n            let participant_info = this.participants.get(message.get('user_info')),\n                participant_nickname = participant_info && participant_info.get('nickname') ? participant_info.get('nickname') : null;\n            let user_info = message.get('user_info') || {},\n                chat_content = this.account.chats.get(this.hash_id).item_view.content,\n                is_scrolled = chat_content.isScrolledToBottom(),\n                msg_author = participant_nickname || user_info.nickname || message.get('from_jid') || user_info.id,\n                pinned_msg = {\n                    author: msg_author,\n                    time: pretty_datetime(message.get('time')),\n                    message: msg_text,\n                    fwd_author: fwd_msg_author\n                },\n                pinned_msg_html = $(templates.group_chats.pinned_message(pinned_msg));\n            pinned_msg_elem.html(pinned_msg_html).emojify('.chat-msg-content', {emoji_size: 18});\n            let height_pinned_msg = pinned_msg_elem.height();\n            pinned_msg_elem.siblings('.chat-content').css({\n                'height': 'calc(100% - ' + height_pinned_msg + 'px)'\n            });\n            if (is_scrolled)\n                chat_content.scrollToBottom();\n            pinned_msg_elem.attr('data-uniqueid', message.get('unique_id'));\n        }\n    },\n\n    resetStatus: function (timeout) {\n        clearTimeout(this._reset_status_timeout);\n        this._reset_status_timeout = setTimeout(() => {\n            this.set({\n                status_updated: moment.now(),\n                status: 'offline',\n                status_message: ''\n            });\n        }, timeout || 5000);\n    },\n\n    searchByParticipants: function (query, callback) {\n        if (!this.participants.version) {\n            this.participants.participantsRequest({}, () => {\n                let participants_list = this.participants.search(query);\n                callback && callback(participants_list);\n            });\n        } else {\n            let participants_list = this.participants.search(query);\n            callback && callback(participants_list);\n        }\n    },\n\n    updateName: function () {\n        if (this.get('roster_name') && this.get('name') !== this.get('roster_name'))\n            this.set('name', this.get('roster_name'));\n    },\n\n    showDetails: function (screen) {//34\n        if (!this.details_view)\n            this.details_view = (this.get('group_chat')) ? new xabber.GroupChatDetailsView({model: this}) : new xabber.ContactDetailsView({model: this});\n        screen || (screen = 'contacts');\n        xabber.body.setScreen(screen, {right: 'contact_details', contact: this});\n    },\n\n    showDetailsRight: function (screen, options) {\n        let chat = this.account.chats.getChat(this),\n             scrolled_top_chats_view, scrolled_top_chat;\n        if (chat)\n            if (!chat.item_view.content)\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n            scrolled_top_chat = chat.item_view.content.getScrollTop()\n        if (xabber.chats_view)\n            scrolled_top_chats_view = xabber.chats_view.getScrollTop();\n        options = options || {};\n        if (!this.details_view_right && !options.encrypted)\n            this.details_view_right = (this.get('group_chat')) ? new xabber.GroupChatDetailsViewRight({model: this}) : new xabber.ContactDetailsViewRight({model: this});\n        if (!this.details_view_right_encrypted && options.encrypted)\n            this.details_view_right_encrypted = new xabber.ContactDetailsViewRight({model: this, encrypted: true});\n        screen || (screen = 'contacts');\n        if (xabber.body.screen.get('right_contact') && options.type != 'search' && options.type != 'members' && options.type != 'participant' && !options.right_saved) {\n            this.set('search_hidden', true)\n            xabber.body.setScreen(screen, {right_contact: '', contact: this});\n        }\n        else {\n            if (options.encrypted)\n                xabber.body.setScreen(screen, {right_contact: 'contact_details_encrypted', contact: this});\n            else\n                xabber.body.setScreen(screen, {right_contact: 'contact_details', contact: this});\n            if (this.details_view_right && this.details_view_right.contact_searched_messages_view){\n                this.details_view_right.contact_searched_messages_view.hideSearch();\n                if (options.type === 'search') {\n                    this.details_view_right.contact_searched_messages_view.clearSearch();\n                    this.details_view_right.showSearchMessages();\n                }\n                if (options.type === 'members') {\n                    this.details_view_right.$('.tabs:not(.participant-tabs) .list-variant[data-value=\"participants\"]').click()\n                }\n                this.details_view_right.onScroll()\n            }\n        }\n        if (scrolled_top_chat)\n            chat.item_view.content.scrollTo(scrolled_top_chat);\n        if (scrolled_top_chats_view)\n            xabber.chats_view.scrollTo(scrolled_top_chats_view);\n    },\n});\n\nxabber.SetGroupchatStatusView = xabber.BasicView.extend({\n    className: 'modal main-modal change-status-modal',\n    template: templates.group_chats.set_status,\n\n    events: {\n        \"click .status-values li\": \"changeStatus\"\n    },\n\n    open: function (contact) {\n        this.contact = contact;\n        this.account = this.contact.account;\n        this.show();\n        this.getStatuses();\n    },\n\n    updateIcons: function () {\n        let ic_name = this.contact.getIcon();\n        this.$('.status-bulb').addClass('hidden');\n        ic_name && this.$('.status-bulb').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    highlightStatus: function (status) {\n        this.$(`.status-values li[data-value=\"${status}\"]`).addClass('active')\n            .siblings().removeClass('active');\n        this.updateIcons();\n    },\n\n    getStatuses: function () {\n        let iq_get_properties = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'get'})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#status`});\n        this.account.sendFast(iq_get_properties, (properties) => {\n            this.data_form = this.account.parseDataForm($(properties).find('x[xmlns=\"' + Strophe.NS.DATAFORM + '\"]'));\n            let status_field = this.data_form.fields.find(field => field.var == 'status'),\n                options = (this.data_form.fields.find(field => field.var == 'status') || []).options || [];\n            if (!options.length || status_field.type == 'fixed') {\n                this.closeModal();\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                return;\n            }\n            this.renderStatuses(options);\n        }, () => {\n            this.closeModal();\n            utils.dialogs.error(xabber.getString(\"set_group_status__error__service_unavailable\"));\n            return;\n        });\n    },\n\n    renderStatuses: function (options) {\n        this.$('.status-values').html(\"\");\n        options.forEach((option) => {\n            let status = option,\n                status_field = this.data_form.fields.find(f => f.var == status.value);\n            if (status_field)\n                status.show = status_field.values[0];\n            else\n                status.show = status.value;\n            let $status_item = $(templates.group_chats.status_item({status}));\n            this.$('.status-values').append($status_item);\n        });\n        this.highlightStatus(this.contact.get('status'));\n    },\n\n    changeStatus: function (ev) {\n        let status = $(ev.target).closest('li').data('value');\n        this.highlightStatus(status);\n        this.do_change();\n        this.closeModal();\n    },\n\n    do_change: function () {\n        let status = this.$('.status-values li.active').data('value');\n        this.setStatus(status);\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    setStatus: function (status) {\n        if (!this.data_form || this.contact.get('group_info').status === status)\n            return;\n        let iq_set_status = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#status`}),\n            status_field = this.data_form.fields.find(field => field.var === 'status'),\n            idx = this.data_form.fields.indexOf(status_field);\n        status_field.values = [status];\n        this.data_form.fields[idx] = status_field;\n        iq_set_status = this.account.addDataFormToStanza(iq_set_status, this.data_form);\n        this.account.sendFast(iq_set_status);\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        let value = this.$('.status-message').val();\n        if (!value)\n            this.do_change();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.ContactItemView = xabber.BasicView.extend({\n    className: 'roster-contact list-item',\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.$el.attr({'data-id': uuid(), 'data-jid': this.model.get('jid')});\n        this.$('.jid').text(this.model.get('jid'));\n        this.interval_last;\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.selectView();\n        this.updateGroupChat();\n        this.updateIcon();\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"change:subscription\", this.updateStatus, this);\n        this.model.on(\"change:subscription_preapproved\", this.updateStatus, this);\n        this.model.on(\"change:subscription_request_in\", this.updateStatus, this);\n        this.model.on(\"change:subscription_request_out\", this.updateStatus, this);\n        this.model.on(\"change:private_chat\", this.updateIcon, this);\n        this.model.on(\"change:incognito_chat\", this.updateIcon, this);\n        this.model.on(\"change:bot\", this.updateIcon, this);\n        this.model.on(\"change:blocked\", this.onBlocked, this);\n        this.model.on(\"change:status_message\", this.updateStatusMsg, this);\n        this.model.on(\"change:last_seen\", this.lastSeenUpdated, this);\n        this.model.on(\"change:group_chat\", this.updateGroupChat, this);\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.model.get('name'));\n    },\n\n    updateAvatar: function () {\n        this.$('.circle-avatar').setAvatar(this.model.cached_image, this.avatar_size);\n    },\n\n    updateStatus: function () {\n        this.$('.status').attr('data-status', this.model.get('status'));\n        this.$('.chat-icon').attr('data-status', this.model.get('status'));\n        this.$('.status-message').text(this.model.getStatusMessage());\n        if (this.model.get('status') == 'offline') {\n            if (!Strophe.getNodeFromJid(this.model.get('jid'))) {\n                this.model.set({status_message: 'Server'});\n                return;\n            }\n            if (this.model.get('last_seen')) {\n            let seconds = (moment.now() - this.model.get('last_seen'))/1000,\n                new_status = xabber.pretty_last_seen(seconds);\n            this.model.set({ status_message: new_status });\n            }\n        }\n    },\n\n    onBlocked: function () {\n        this.updateIcon();\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n\n    selectView: function () {\n        if (this.model.get('group_chat')) {\n            this.$('.private-chat').addClass('hidden');\n            this.$('.group_chat').removeClass('hidden');\n        }\n    },\n\n    lastSeenUpdated: function () {\n        if (this.model.get('status') == 'offline' && this.model.get('last_seen') && _.isUndefined(this.interval_last)) {\n            this.interval_last = setInterval(() => {\n                let seconds = (moment.now() - this.model.get('last_seen'))/1000,\n                    new_status = xabber.pretty_last_seen(seconds);\n                this.model.set({ status_message: new_status });\n            }, 60000);\n        }\n        else\n        {\n            clearInterval(this.interval_last);\n        }\n    },\n\n    updateGroupChat: function () {\n        let is_group_chat = this.model.get('group_chat');\n        this.$('.status').hideIf(is_group_chat);\n        this.updateIcon();\n    },\n\n    updateIcon: function () {\n        let ic_name = this.model.getIcon();\n        this.$('.chat-icon').addClass('hidden');\n        if (this.model.get('invitation'))\n            return;\n        ic_name && this.$('.chat-icon').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    updateStatusMsg: function() {\n        this.$('.status-message').text(this.model.getStatusMessage());\n    }\n});\n\nxabber.ContactItemRightView = xabber.ContactItemView.extend({\n    template: templates.contact_right_item,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_RIGHT_ITEM,\n\n    events: {\n        \"click\": \"clickOnItem\",\n        \"mouseover\": \"showJid\",\n        \"mouseleave\": \"hideJid\",\n    },\n\n    showJid: function () {\n        if (this.$('.name').text() !== this.model.get('jid')) {\n            this.$('.status-message').addClass('hidden');\n            this.$('.jid').removeClass('hidden');\n        }\n    },\n\n    hideJid: function () {\n        this.$('.jid').addClass('hidden');\n        this.$('.status-message').removeClass('hidden');\n    },\n\n    clickOnItem: function () {\n        this.model.trigger(\"open_chat\", this.model);\n    }\n});\n\nxabber.ContactItemLeftView = xabber.ContactItemView.extend({\n    template: templates.contact_left_item,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_LEFT_ITEM,\n\n    events: {\n        \"click\": \"clickOnItem\"\n    },\n\n    __initialize: function () {\n        this.updateDisplayStatus();\n        this.updateBlockedState();\n        this.updateMutedState();\n        this.updateGroupChat();\n        this.model.on(\"change:display\", this.updateDisplayStatus, this);\n        this.model.on(\"change:blocked\", this.updateBlockedState, this);\n        this.model.on(\"change:group_chat\", this.updateGroupChat, this);\n    },\n\n    updateDisplayStatus: function () {\n        this.$el.switchClass('active', this.model.get('display'));\n    },\n\n    updateBlockedState: function () {\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n    updateMutedState: function () {\n        this.$('.muted-icon').hide();\n    },\n\n    clickOnItem: function () {\n        let options = {};\n        (xabber.chats_view.active_chat && xabber.chats_view.active_chat.model.get('jid') === this.model.get('jid') && xabber.chats_view.active_chat.model.get('encrypted')) && (options.encrypted = true);\n        this.model.trigger(\"open_chat\", this.model, options);\n    }\n});\n\nxabber.ContactResources = xabber.Resources.extend({\n    initialize: function (models, options) {\n        this.contact = options.contact;\n        this.jid = options.contact.get('jid');\n        this.connection = options.contact.account.connection;\n        this.on(\"add change\", this.onResourceUpdated, this);\n        this.on(\"remove\", this.onResourceRemoved, this);\n    },\n\n    onResourceUpdated: function (resource) {\n        if (resource === this.first()) {\n            this.contact.set({\n                status_updated: moment.now(),\n                status: resource.get('status'),\n                status_message: resource.get('status_message')\n            });\n        }\n    },\n\n    onResourceRemoved: function () {\n        let attrs = {status_updated: moment.now()};\n        if (this.length) {\n            attrs.status = this.first().get('status');\n            attrs.status_message = this.first().get('status_message');\n        } else {\n            attrs.status = 'offline';\n            attrs.status_message = '';\n        }\n        this.contact.set(attrs);\n    }\n});\n\nxabber.ContactResourcesView = xabber.ResourcesView.extend({\n    onResourceAdded: function (resource) {\n        this.addChild(resource.get('resource'),\n            xabber.ResourceView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.$el.showIf(this.model.length);\n        this.parent.updateScrollBar();\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.$el.addClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.resources-wrap').prepend(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.ContactResourcesRightView = xabber.ResourcesView.extend({\n    className: 'modal main-modal resource-modal',\n\n    _initialize: function () {\n        this.model.on(\"remove\", this.onResourceRemoved, this);\n        this.model.on(\"reset\", this.onReset, this);\n        this.model.on(\"change:priority\", this.onPriorityChanged, this);\n    },\n\n    renderByInit: function () {\n        this.model.each((resource) => {\n            this.onResourceAdded(resource);\n        });\n    },\n\n    open: function () {\n        if (this.model.length) {\n            this.$el.openModal({\n                ready: () => {\n                    this.$el.html('<svg class=\"details-icon mdi mdi-24px \"></svg><div class=\"resources-wrap\"></div>')\n                    this.$el.find('.details-icon').html(env.templates.svg['ic-jabber']())\n                    this.renderByInit();\n                },\n                // complete: () => {\n                //     this.$el.detach();\n                //     this.data.set('visible', false);\n                // }\n            });\n        }\n    },\n\n    onResourceAdded: function (resource) {\n        this.model.requestInfo(resource);\n        this.addChild(resource.get('resource'),\n            xabber.ResourceRightView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n    },\n\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.$el.showIf(this.model.length);\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.$el.addClass('hidden');\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.resources-wrap').prepend(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.ContactVCardView = xabber.VCardView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .details-icon\": \"onClickIcon\"\n    }\n});\n\nxabber.ContactRightVCardView = xabber.VCardRightView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .info-wrap.more\": \"showVCard\",\n        \"click .btn-back\": \"hideVCard\"\n    },\n\n\n    showVCard: function (ev) {\n        this.model.set('vcard_hidden', false);\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n        });\n        this.parent.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.vcard-header').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideVCard: function (ev) {\n        this.model.set('vcard_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.scrollToTop();\n        this.onScroll();\n        this.parent.onScroll();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n});\n\nxabber.ContactDetailsViewRight = xabber.BasicView.extend({\n    className: 'details-panel-right contact-details-panel',\n    template: templates.contact_details_right,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-escape:not(.btn-top)\": \"openChat\",\n        \"click .btn-escape.btn-top\": \"scrollToTopSmooth\",\n        \"click .btn-edit\": \"showEdit\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .panel-background-clickable\": \"openChat\",\n        \"click .btn-search\": \"showSearchMessages\",\n        \"click .btn-voice-call\": \"voiceCall\",\n        \"click .btn-add\": \"addContact\",\n        \"click .btn-delete\": \"deleteContact\",\n        \"click .btn-block\": \"blockContact\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-unblock\": \"unblockContact\",\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-mute.muted\": \"unmuteChat\",\n        \"click .list-variant\": \"changeList\",\n        \"click .btn-auth-request\": \"requestAuthorization\",\n    },\n\n    _initialize: function (options) {\n        this.encrypted = options.encrypted;\n        this.ps_container = this.$('.panel-content-wrap');\n        this.account = this.model.account;\n        this.chat = this.account.chats.getChat(this.model, options.encrypted && 'encrypted');\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.name_field.$('.contact-name-input').prop('disabled', true)\n        if (!this.encrypted){\n            this.contact_edit_view = this.addChild('edit', xabber.ContactEditView,\n                {model: this.model, el: this.$('.edit-block-wrap')[0]});\n        }\n        this.contact_searched_messages_view = this.addChild('search', xabber.ContactSearchedMessagesView,\n            {model: this.account.chats.getChat(this.model), query_text: '1', el: this.$('.search-messages-block-wrap')[0]});\n        this.vcard_view = this.addChild('vcard', xabber.ContactRightVCardView,\n            {model: this.model, el: this.$('.vcard')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateButtons();\n        this.updateColorScheme();\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScroll.bind(this));\n        this.model.on(\"change\", this.update, this);\n        this.chat.on(\"change:muted\", this.updateNotifications, this);\n        xabber.on(\"change:video\", this.updateJingleButtons, this);\n        xabber.on(\"change:audio\", this.updateJingleButtons, this);\n    },\n\n    render: function (options) {\n        if (!this.model.get('vcard_updated')) {\n            this.vcard_view.refresh();\n        }\n        if (!this.model.get('saved_search_panel')) {\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        else {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.$('.btn-mute').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        if (this.encrypted){\n            this.$('.btn-search-messages').remove()\n            this.$('.btn-edit').remove()\n            this.$('.btn-qr-code').remove()\n        }\n        this.updateChilds();\n        this.updateSubscriptions();\n        this.updateJingleButtons();\n        this.updateStatusMsg();\n        this.updateName();\n        this.updateNotifications();\n        this.setButtonsWidth();\n        this.updateList('image');\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        this.onScroll();\n        this.model.resources.models.forEach((resource) => {this.model.resources.requestInfo(resource)});\n        $(window).bind(\"keydown.contact_panel\", this.keydownHandler.bind(this));\n    },\n\n    updateChilds: function () {\n        if (this.vcard_view && !this.model.get('vcard_hidden'))\n            this.vcard_view.hideVCard();\n        if (this.contact_edit_view && !this.model.get('edit_hidden'))\n            this.contact_edit_view.hideEdit();\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n\n    keydownHandler: function (ev) {\n        if (!xabber.body.$el.siblings('.mfp-ready').length && !$.magnificPopup.instance.isOpen && ev.keyCode === constants.KEY_ESCAPE && !xabber.body.$el.siblings('#modals').children('.open').length) {\n            this.model.showDetailsRight('all-chats');\n            $(window).unbind(\"keydown.contact_panel\");\n        }\n    },\n\n    openChat: function (ev) {\n        this.model.showDetailsRight('all-chats');\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.header-buttons .block-name').addClass('fade-out');\n        this.$('.btn-escape').removeClass('btn-top');\n        this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    onChangedVisibility: function () {\n        this.model.set('display', this.isVisible());\n    },\n\n    updateJingleButtons: function () {\n        this.$('.btn-voice-call').switchClass('non-active', !xabber.get('audio'));\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        if (_.has(changed, 'status_updated')) this.updateStatus();\n        if (_.has(changed, 'subscription')) this.updateSubscriptions();\n        if (_.has(changed, 'subscription_request_in')) this.updateSubscriptions();\n        if (_.has(changed, 'blocked')) this.updateStatusMsg();\n        if (_.has(changed, 'status_message')) this.updateStatusMsg();\n        if (_.has(changed, 'in_roster') || _.has(changed, 'blocked') ||\n            _.has(changed, 'subscription')) {\n            this.updateButtons();\n        }\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('roster_name') && this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n\n    onScroll: function () {\n        if (this.model.get('saved_search_panel') && !this.model.get('search_hidden')){\n            this.ps_container.perfectScrollbar('destroy');\n            return true;\n        }\n        let bottom_block_scroll;\n        if (this.$('.bottom-block:not(.edit-bottom-block)'))\n            bottom_block_scroll = this.$('.bottom-block:not(.edit-bottom-block)').get(0).getBoundingClientRect().top;\n\n        if(this.ps_container[0].scrollTop >= 250) {\n            this.$('.header-buttons').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.main-info').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n            this.$('.header-buttons .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.header-buttons').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        else{\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        if (!_.isUndefined(bottom_block_scroll) && bottom_block_scroll <= 160){\n            this.$('.btn-escape').addClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.header-buttons .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').text(this.$('.list-variant .active').text())\n        }\n        else {\n            this.$('.btn-escape').removeClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status').attr('data-status', this.model.get('status'));\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateStatusMsg: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateButtons: function () {\n        let in_roster = this.model.get('in_roster'),\n            is_blocked = this.model.get('blocked'),\n            is_server = this.model.get('server'),\n            subscription = this.model.get('subscription');\n        this.$('.btn-add').hideIf(in_roster);\n        this.$('.btn-block-wrap .contact-btn').switchClass('btn-block', !is_blocked).switchClass('btn-unblock', is_blocked);\n        this.$('.btn-block-wrap .btn-name').text(is_blocked ? xabber.getString(\"contact_bar_unblock\") : xabber.getString(\"contact_bar_block\"));\n        this.$('.buttons-wrap .button-wrap:not(.btn-block-wrap):not(.btn-search-messages)').switchClass('non-active', is_blocked);\n        this.$('.contact-mute-dropdown').hideIf(is_blocked);\n        this.$('.btn-auth-request').showIf(!is_server && in_roster && !is_blocked &&\n            subscription !== 'both' && subscription !== 'to');\n    },\n\n    updateNotifications: function () {\n        if (this.chat.isMuted()) {\n            if (this.chat.isMuted() > 4800000000)\n                this.$('.btn-mute').html(env.templates.svg['bell-off']());\n            else\n                this.$('.btn-mute').html(env.templates.svg['bell-sleep']());\n            this.$('.btn-mute').addClass('muted').addClass('active')\n        }\n        else {\n            this.$('.btn-mute').html(env.templates.svg['bell']());\n            this.$('.btn-mute').removeClass('muted')\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.chat.isMuted());\n        this.$('.btn-unmute-dropdown').hideIf(!this.chat.isMuted());\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    updateSubscriptions: function () {\n        let subscription = this.model.get('subscription'),\n            in_request = this.model.get('subscription_request_in'),\n            out_request = this.model.get('subscription_request_out'),\n            $label_outcoming = this.$('label[for=\"outcoming-subscription\"]'),\n            $label_incoming = this.$('label[for=\"incoming-subscription\"]');\n        if (subscription === 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        } else if (subscription === 'from') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        } else if (subscription === 'to') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        }\n        else if (!subscription || subscription === 'none') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        }\n        if (in_request && subscription !== 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', false);\n        }\n        if (out_request) {\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', true);\n        }\n    },\n\n    showEdit: function (ev) {\n        this.contact_edit_view.showEdit();\n    },\n\n    voiceCall: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return;\n        if (xabber.get('audio'))\n            this.initCall(ev);\n    },\n\n    initCall: function () {\n        if (xabber.current_voip_call) {\n            utils.callback_popup_message(xabber.getString(\"jingle__error__call_in_progress\"), 1000);\n            return;\n        }\n        let chat = this.account.chats.getChat(this.model);\n        if (!chat.item_view.content)\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        chat.item_view.content.initJingleMessage();\n    },\n\n    deleteContact: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    muteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n            muted_seconds;\n        if (mute_type === 'minutes15')\n            muted_seconds = 900\n        if (mute_type === 'hours1')\n            muted_seconds = 3600\n        if (mute_type === 'hours2')\n            muted_seconds = 7200\n        if (mute_type === 'day')\n            muted_seconds = 86400\n        if (mute_type === 'forever')\n            muted_seconds = 0\n        this.chat.muteChat(muted_seconds);\n    },\n\n    unmuteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        this.chat.muteChat('');\n    },\n\n    showSearchMessages: function (ev) {\n        this.scrollToTop();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.model.set('search_hidden', false);\n        this.$('.search-wrap').hideIf(this.model.get('search_hidden'));\n        this.contact_searched_messages_view.$search_form.find('input').focus();\n    },\n\n    addContact: function () {\n        xabber.add_contact_view.show({account: this.account, jid: this.model.get('jid')});\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.$('.tabs').animate({scrollLeft: $target.position().left}, 400);\n        this.ps_container.animate(\n            {scrollTop: this.$('.bottom-block:not(.edit-bottom-block)').position().top + this.ps_container.scrollTop() - 120},\n            200,\n            () => {\n                this.onScroll();\n        });\n        this.$('.header-buttons .block-name.second-text').text($target.text())\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, encrypted: this.encrypted, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    requestAuthorization: function () {\n        this.model.pres('subscribe');\n        this.model.trigger('presence', this.model, 'subscribe_from');\n        this.openChat();\n    }\n});\n\nxabber.GroupChatDetailsViewRight = xabber.BasicView.extend({\n    className: 'details-panel-right groupchat-details-panel',\n    template: templates.group_chats.group_chat_details_right,\n    ps_selector: '.panel-content-wrap',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-mute.muted\": \"unmuteChat\",\n        \"click .btn-edit\": \"showEdit\",\n        \"click .btn-search\": \"showSearchMessages\",\n        \"click .btn-clear-history-chat\": \"clearHistory\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-leave\": \"leaveGroupChat\",\n        \"click .btn-invite\": \"inviteUser\",\n        \"click .btn-delete-group\": \"deleteGroup\",\n        \"click .btn-edit-settings\": \"editProperties\",\n        \"click .btn-default-restrictions\": \"showRestrictions\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .panel-background-clickable\": \"openChat\",\n        \"click .btn-escape:not(.btn-top)\": \"openChat\",\n        \"click .btn-escape.btn-top\": \"scrollToTopSmooth\",\n        \"click .btn-clear-history\": \"retractAllMessages\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .tabs:not(.participant-tabs) .list-variant\": \"changeList\",\n        \"click .edit-pictured-buttons .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.chat = this.account.chats.getChat(this.model);\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.name_field.$('.contact-name-input').prop('disabled', true)\n        this.participants = this.addChild('participants', xabber.ParticipantsViewRight, {model: this.model, el: this.$('.participants-wrap')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.contact_edit_view = this.addChild('edit', xabber.GroupEditView,\n            {model: this.model, el: this.$('.edit-block-wrap')[0]});\n        this.group_chat_properties = this.addChild('properties_view', xabber.GroupChatPropertiesViewRight, {model:this.model, el: this.$('.group-chat-properties-wrap')[0]});\n        this.group_chat_status = this.addChild('status_view', xabber.GroupChatStatusViewRight, {model:this.model, el: this.$('.status-block-wrap')[0]});\n        this.contact_searched_messages_view = this.addChild('search', xabber.ContactSearchedMessagesView,\n            {model: this.account.chats.getChat(this.model), query_text: '1', el: this.$('.search-messages-block-wrap')[0]});\n        this.group_chat_properties_edit = new xabber.GroupChatPropertiesEditView({model: this.model});\n        this.default_restrictions_edit_right = this.addChild('restrictions',\n            xabber.DefaultRestrictionsRightView,\n            {model: this.model, el: this.$('.restrictions-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.ps_container.on(\"ps-scroll-y\", this.onScroll.bind(this));\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"change\", this.update, this);\n        this.chat.on(\"change:muted\", this.updateNotifications, this);\n        this.model.on(\"permissions_changed\", this.updateButtons, this);\n        this.model.on(\"change:subscription\", this.updateButtons, this);\n    },\n\n    render: function () {\n        this.updateName();\n        this.updateButtons();\n        if (!this.model.my_rights)\n            this.model.getMyInfo(() => {\n                this.updateButtons();\n            });\n        if (!this.model.get('saved_search_panel')) {\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        else {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.$('.btn-mute').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.btn-delete').showIf(this.model.get('subscription') === \"both\");\n        this.$('.btn-join').showIf(this.model.get('subscription') !== \"both\");\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.select-users-list-wrap .dropdown-button').dropdown(dropdown_settings);\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n        this.onScroll();\n        this.updateChilds();\n        this.updateNotifications();\n        this.updateList('participants');\n        this.setButtonsWidth();\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        $(window).bind(\"keydown.contact_panel\", this.keydownHandler.bind(this));\n        return this;\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs.not-edit .indicator').remove();\n        this.$('.tabs.not-edit').tabs();\n        this.$('.tabs.not-edit .indicator').addClass('ground-color-500');\n    },\n\n    updateChilds: function () {\n        if (!this.model.get('vcard_hidden'))\n            this.group_chat_properties.hideVCard();\n        if (!this.model.get('edit_hidden'))\n            this.contact_edit_view.hideEdit();\n        if (!this.model.get('restrictions_hidden'))\n            this.default_restrictions_edit_right.hideRestrictions();\n        this.model.set('participant_hidden', true);\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'))\n    },\n\n    showEdit: function (ev) {\n        this.contact_edit_view.showEdit();\n    },\n\n    showRestrictions: function (ev) {\n        this.default_restrictions_edit_right.showRestrictions();\n    },\n\n    hideRestrictions: function (ev) {\n        this.model.set('restrictions_hidden', true);\n        this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'));\n        this.showEdit();\n    },\n\n\n    keydownHandler: function (ev) {\n        if (!xabber.body.$el.siblings('.mfp-ready').length && !$.magnificPopup.instance.isOpen && ev.keyCode === constants.KEY_ESCAPE && !xabber.body.$el.siblings('#modals').children('.open').length) {\n            this.model.showDetailsRight('all-chats');\n            $(window).unbind(\"keydown.contact_panel\");\n        }\n    },\n\n    updateNotifications: function () {\n        if (this.chat.isMuted()) {\n            if (this.chat.isMuted() > 4800000000)\n                this.$('.btn-mute').html(env.templates.svg['bell-off']());\n            else\n                this.$('.btn-mute').html(env.templates.svg['bell-sleep']());\n            this.$('.btn-mute').addClass('muted').addClass('active')\n        }\n        else {\n            this.$('.btn-mute').html(env.templates.svg['bell']());\n            this.$('.btn-mute').removeClass('muted')\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.chat.isMuted());\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        // if (_.has(changed, 'muted')) this.updateNotifications();\n        if (_.has(changed, 'status_updated') || _.has(changed, 'status_message')) this.updateStatus();\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    updateButtons: function () {\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values),\n            change_group = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'change-group' && permission.values),\n            is_blocked = this.model.get('blocked');\n        this.$('.btn-settings-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-edit-settings').switchClass('hidden', !(is_owner || change_group));\n        this.$('.btn-leave-wrap').switchClass('non-active', this.model.get('subscription') != 'both');\n        this.$('.btn-invite-wrap').switchClass('non-active', this.model.get('private_chat') || this.model.get('subscription') != 'both');\n        this.$('.btn-default-restrictions-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-block').hideIf(is_blocked);\n        this.$('.btn-unblock').showIf(is_blocked);\n    },\n\n    updateName: function () {\n        this.$('.main-info .contact-name').text(this.model.get('name'));\n    },\n\n    muteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n            muted_seconds;\n        if (mute_type === 'minutes15')\n            muted_seconds = 900\n        if (mute_type === 'hours1')\n            muted_seconds = 3600\n        if (mute_type === 'hours2')\n            muted_seconds = 7200\n        if (mute_type === 'day')\n            muted_seconds = 86400\n        if (mute_type === 'forever')\n            muted_seconds = 0\n        this.chat.muteChat(muted_seconds);\n    },\n\n    unmuteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        this.chat.muteChat('');\n    },\n\n    showSearchMessages: function (ev) {\n        this.scrollToTop();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.model.set('search_hidden', false);\n        this.$('.search-wrap').hideIf(this.model.get('search_hidden'));\n        this.contact_searched_messages_view.$search_form.find('input').focus();\n    },\n\n    onScroll: function () {\n        if (this.model.get('saved_search_panel') && !this.model.get('search_hidden')){\n            this.ps_container.perfectScrollbar('destroy');\n            return true;\n        }\n        let bottom_block_scroll;\n        if (this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)'))\n            bottom_block_scroll = this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').get(0).getBoundingClientRect().top;\n\n        if(this.ps_container[0].scrollTop >= 250) {\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.main-info').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n            this.$('.header-buttons .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        else{\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        if (!_.isUndefined(bottom_block_scroll) && bottom_block_scroll <= 160) {\n            this.$('.btn-escape').addClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.header-buttons .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').text(this.$('.tabs:not(.participant-tabs) .list-variant .active').text())\n        }\n        else {\n            this.$('.btn-escape').removeClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    clearHistory: function () {\n        if (this.chat && this.chat.item_view && this.chat.item_view.content && this.chat.item_view.content.head){\n            this.chat.item_view.content.head.clearHistory()\n        }\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    editProperties: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n                let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n                    .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n                this.account.sendIQFast(iq_get_properties, (properties) => {\n                    let data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                    this.group_chat_properties_edit.open(data_form);\n                }, () => {\n                    utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n                });\n        }\n    },\n\n    leaveGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"groupchat_leave_full\"), xabber.getString(\"groupchat_leave_confirm\", [contact.get('name')]), null, { ok_button_text: xabber.getString(\"groupchat_leave\")}).done((result) => {\n            if (result) {\n                contact.declineSubscription();\n                let chat = this.account.chats.getChat(contact);\n                contact.removeFromRoster();\n                chat.deleteFromSynchronization(() => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                }, () => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                });\n            }\n        });\n    },\n\n    inviteUser: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            if (!xabber.invite_panel)\n                xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n            xabber.invite_panel.open(this.account, this.model);\n        }\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.header-buttons .block-name').addClass('fade-out');\n        this.$('.btn-escape').removeClass('btn-top');\n        this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        if (list_name != 'blocked' && list_name != 'invitations') {\n            this.$('.tabs').animate({scrollLeft: $target.position().left - 80}, 400);\n            this.ps_container.animate(\n                {scrollTop: this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').position().top + this.ps_container.scrollTop() - 120},\n                400,\n                () => {\n                    this.onScroll();\n                });\n            this.$('.header-buttons .block-name.second-text').text($target.text())\n        }\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            if (name === 'invitations' || name === 'blocked'){\n                this.$('.edit-wrap .tabs .list-variant a').removeClass('active');\n                this.$('.edit-wrap .tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            }\n            else {\n                this.$('.tabs.not-edit .list-variant a').removeClass('active');\n                this.$('.tabs.not-edit .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            }\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func, edit_view;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n            case 'blocked':\n                constructor_func = xabber.BlockedView;\n                edit_view = true;\n                break;\n            case 'invitations':\n                constructor_func = xabber.InvitationsView;\n                edit_view = true;\n                break;\n        };\n        if (constructor_func && edit_view)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-edit-wrap')[0]});\n        else if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    getInvitations: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.model.get('full_jid') || this.model.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#invite'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    deleteGroup: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    openChat: function (ev) {\n        this.model.showDetailsRight('all-chats');\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length) {\n            return;\n        }\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        $(field).siblings('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.model.pubAvatar(file, \"\", function () {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                }, function (error) {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                    let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                    utils.dialogs.error(error_text);\n                });\n            }\n        });\n    },\n\n    retractAllMessages: function () {\n        let group_chat = this.account.chats.getChat(this.model);\n        utils.dialogs.ask(xabber.getString(\"delete_messages__header\"), xabber.getString(\"delete_messages__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                group_chat.retractAllMessages(true);\n            }\n        });\n    }\n});\n\nxabber.GroupChatStatusView = xabber.BasicView.extend({\n    template: templates.group_chats.group_status,\n    events: {\n        \"click .status-wrap\": \"setStatus\",\n        \"click .btn-edit-status\": \"setStatus\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.render();\n        this.model.on(\"change:status\", this.render, this);\n        this.model.on(\"change:group_info\", this.render, this);\n    },\n\n    render: function () {\n        let group_info = this.model.get('group_info');\n        if (!group_info)\n            return;\n        this.$('.status').attr('data-status', group_info.status || this.model.get('status'));\n        this.$('.status-message').text(group_info.status_msg);\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.model);\n    }\n});\n\nxabber.GroupChatStatusViewRight = xabber.BasicView.extend({\n    template: templates.group_chats.group_status_right,\n    events: {\n        \"click .group-chat-status-wrap\": \"setStatus\",\n        \"click .btn-edit-status\": \"setStatus\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.render();\n        this.model.on(\"change:status\", this.render, this);\n        this.model.on(\"change:group_info\", this.render, this);\n    },\n\n    render: function () {\n        let group_info = this.model.get('group_info');\n        if (!group_info)\n            return;\n        this.updateIcon()\n        this.$('.status').attr('data-status', group_info.status || this.model.get('status'));\n        this.$('.status-message').text(group_info.status_msg);\n    },\n\n    updateIcon: function () {\n        let ic_name = this.model.getIcon();\n        this.$('.status-bulb').addClass('hidden');\n        if (this.model.get('invitation'))\n            return;\n        ic_name && this.$('.status-bulb').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.model);\n    }\n});\n\nxabber.GroupChatPropertiesView = xabber.BasicView.extend({\n    template: templates.group_chats.group_chat_properties,\n\n    events: {\n        \"click .group-chat-properties .details-icon\": \"onClickIcon\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.contact = this.model;\n        this.account = this.model.account;\n        this.model.on(\"change:group_info\", this.update, this);\n        this.model.on(\"change:vcard_updated\", this.update, this);\n    },\n\n    render: function () {\n        if (!this.model.get('vcard_updated'))\n            this.model.vcard && this.model.vcard.refresh();\n        this.update();\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {};\n        this.$('.block-name').text(this.model.get('incognito_group') ? xabber.getString(\"incognito_group_settings__header\") : xabber.getString(\"public_group_settings__header\"));\n        this.$('.jabber-id .value').text(info.jid);\n        this.$('.name .value').text(info.name);\n        this.$('.description .value').text(info.description);\n        this.$('.model .value').text(utils.pretty_name(info.model));\n        this.$('.status .value').text(utils.pretty_name(info.status));\n        this.$('.searchable .value').text((info.searchable === 'none') ? xabber.getString(\"groupchat_index_type_none\") : utils.pretty_name(info.searchable));\n        this.$('.name-info-wrap').switchClass('hidden', !info.name);\n        this.$('.description-info-wrap').switchClass('hidden', !info.description);\n        this.$('.model-info-wrap').switchClass('hidden', !info.model);\n        this.$('.status-info-wrap').switchClass('hidden', !info.status);\n        this.$('.searchable-info-wrap').switchClass('hidden', !info.searchable);\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target).closest('.info-wrap'),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            if ($target_info.hasClass('searchable-info-wrap')) {\n                let label_name = $target_info.find('.label').first().text();\n                if (value_text === xabber.getString(\"groupchat_index_type_none\"))\n                    value_text += ' ' + label_name.toLowerCase();\n            }\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    }\n});\n\nxabber.GroupChatPropertiesViewRight = xabber.BasicView.extend({\n    template: templates.group_chats.group_chat_properties_right,\n\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .btn-back\": \"hideVCard\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.contact = this.model;\n        this.account = this.model.account;\n        this.model.on(\"change:group_info\", this.update, this);\n        this.model.on(\"change:vcard_updated\", this.update, this);\n        this.ps_container = this.$('.full-vcard-content');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.set('vcard_hidden', true)\n    },\n\n    render: function () {\n        if (!this.model.get('vcard_updated'))\n            this.model.vcard && this.model.vcard.refresh();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        if (this.parent.ps_container.length) {\n            if(!this.model.get('vcard_hidden'))\n                this.parent.ps_container.perfectScrollbar('destroy')\n            else\n                this.parent.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n        }\n        this.model.updateName();\n        this.model.updateAvatar();\n        this.hideMoreDescription();\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.update();\n        });\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.vcard-header-title').addClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n        }\n        else {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        }\n\n    },\n\n    hideMoreDescription: function (ev) {\n        if (!this.$('.vcard-wrap .info.description').hasClass('short')) {\n            this.$('.vcard-wrap .info.description').addClass('short');\n            this.$('.show-vcard').hideIf(false);\n        }\n    },\n\n\n    showVCard: function (ev) {\n        this.model.set('vcard_hidden', false);\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n        });\n        this.parent.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.vcard-header').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideVCard: function (ev) {\n        this.model.set('vcard_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.scrollToTop();\n        this.onScroll();\n        this.parent.onScroll();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {};\n        this.$('.block-name').text(this.model.get('incognito_group') ? xabber.getString(\"incognito_group_settings__header\") : xabber.getString(\"public_group_settings__header\"));\n        this.$('.jabber-id .value').text(info.jid);\n        this.$('.name .value').text(info.name);\n        this.$('.description .value').text(info.description);\n        this.$('.model .value').text(utils.pretty_name(info.model));\n        this.$('.status .value').text(utils.pretty_name(info.status));\n        this.$('.searchable .value').text((info.searchable === 'none') ? xabber.getString(\"groupchat_index_type_none\") : utils.pretty_name(info.searchable));\n        this.$('.name-info-wrap').switchClass('hidden', !info.name);\n        this.$('.description-info-wrap').switchClass('hidden', !info.description);\n        this.$('.model-info-wrap').switchClass('hidden', !info.model);\n        this.$('.status-info-wrap').switchClass('hidden', !info.status);\n        this.$('.searchable-info-wrap').switchClass('hidden', !info.searchable);\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    }\n});\n\nxabber.GroupChatPropertiesEditView = xabber.BasicView.extend({\n    className: 'modal dialog-modal group-chat-properties-edit',\n\n    events: {\n        \"click .btn-save\": \"saveChanges\",\n        \"click .btn-cancel\": \"close\",\n        \"change input\": \"updateSaveButton\",\n        \"keyup .property-wrap .text-field\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model;\n        this.model.on(\"change:name\", this.updateName, this);\n    },\n\n    open: function (data_form) {\n        this.data_form = data_form;\n        let all_fixed = this.data_form.fields.filter(f => f.type == 'fixed' || f.type == 'hidden').length == this.data_form.fields.length;\n        this.$el.html(templates.group_chats.group_chat_properties_edit({all_fixed: all_fixed, fields: data_form.fields, privacy: this.contact.get('incognito_group'), jid: this.model.get('jid')}));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('height', this.$el.height() - 115).perfectScrollbar({theme: 'item-list'});\n                this.updateScrollBar();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.$('.modal-content').css('height', '100%');\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.$el.detach();\n                this.$('.modal-content').css('height', '100%');\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateName: function () {\n        this.$('.name-info-wrap').find('.name').find('.value').text(this.model.get('name'));\n    },\n\n    saveChanges: function() {\n        if (this.$('.btn-save').hasClass('non-active'))\n            return;\n\n        let has_changes = false,\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null,\n                checked_inp = this.$('.' + field.var + '-field input:checked'),\n                text_inp = this.$('.' + field.var + '-field input[type=\"text\"]'),\n                textarea = this.$('.' + field.var + '-field textarea'),\n                new_value = \"\";\n            checked_inp.length && (new_value = checked_inp[0].id);\n            text_inp.length && (new_value = text_inp.val());\n            textarea.length && (new_value = textarea.val());\n            if (value !== new_value) {\n                let field_idx = this.data_form.fields.indexOf(field);\n                field.values = [new_value];\n                this.data_form.fields[field_idx] = field;\n                has_changes = true;\n            }\n        });\n\n        if (has_changes) {\n            iq = this.account.addDataFormToStanza(iq, this.data_form);\n            this.account.sendIQFast(iq, (result) => {\n                let $result  = $(result),\n                    group_info = _.clone(this.contact.get('group_info')),\n                    attrs = {\n                        name: $result.find('field[var=\"name\"] value').text(),\n                        searchable: $result.find('field[var=\"index\"]').children('value').text(),\n                        model: $result.find('field[var=\"membership\"]').children('value').text(),\n                        description: $result.find('field[var=\"description\"] value').text(),\n                        status: $result.find('field[var=\"status\"]').children('value').text()\n                };\n                this.$('button').addClass('non-active');\n                this.close();\n                _.extend(group_info, attrs);\n                this.model.set('group_info', group_info);\n            }, (error) => {\n                this.$('button').addClass('non-active');\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        } else\n            this.$('button').removeClass('non-active');\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null,\n                checked_inp = this.$('.' + field.var + '-field input:checked'),\n                text_inp = this.$('.' + field.var + '-field input[type=\"text\"]'),\n                textarea = this.$('.' + field.var + '-field textarea'),\n                new_value = \"\";\n            checked_inp.length && (new_value = checked_inp[0].id);\n            text_inp.length && (new_value = text_inp.val());\n            textarea.length && (new_value = textarea.val());\n            (value !== new_value) && (has_changes = true);\n        });\n        this.$('.btn-save').switchClass('non-active', !has_changes);\n    }\n\n});\n\nxabber.InvitationsView = xabber.BasicView.extend({\n    events: {\n    },\n    status: 'invitations',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.contact.participants.on(\"participants_updated\", this._render, this);\n        this.contact.on(\"invitations_send\", this._render, this);\n        this.account = this.contact.account;\n        this.$error = $('<p class=\"errors\"/>');\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-edit-wrap')\n        this.$el.html($(templates.preloader()));\n        this.updateInvitations();\n    },\n\n    updateInvitations: function () {\n        this.parent.$('.block-name-panel:not(.second-text)').html(xabber.getString(\"groupchat_invitations\"))\n        this.parent.getInvitations((response) => {\n            this.$el.html(\"\");\n            $(response).find('query').find('user').each((idx, item) => {\n                let user = {jid: $(item).attr('jid'), status: this.status},\n                    $item_view = $(templates.group_chats.invited_member_item(user)),\n                    avatar = Images.getDefaultAvatar(user.jid);\n                this.$el.append($item_view);\n                $item_view.find('.circle-avatar').setAvatar(avatar, this.member_avatar_size);\n            });\n            if (!$(response).find('query').find('user').length)\n                this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.showInviteButton();\n        }, (err) => {\n\n            this.$el.html(this.$error.text($(err).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\")));\n        });\n    },\n\n    revokeInvitation: function (ev) {\n        let $member_item = $(ev.target).closest('.invitations-user'),\n            member_jid = $member_item.data('jid'),\n            iq = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('revoke', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(member_jid);\n        this.account.sendIQFast(iq, () => {\n            $member_item.remove();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.updateRemoveParticipantButton();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n        });\n    },\n\n    revokeInvitationByElement: function ($member_item) {\n        let member_jid = $member_item.data('jid'),\n            iq = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('revoke', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(member_jid);\n        this.account.sendIQFast(iq, () => {\n            $member_item.remove();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n        });\n    }\n});\n\nxabber.MediaBaseView = xabber.BasicView.extend({\n    status: 'base',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.participant = options.participant;\n        this.encrypted = options.encrypted;\n        this.account = this.contact.account;\n        this.chat = this.account.chats.getChat(this.contact, this.encrypted && 'encrypted');\n        this.temporary_items = []\n        this.parent.ps_container.on(\"ps-scroll-up.mediagallery ps-scroll-down.mediagallery\", this.onScroll.bind(this));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        xabber.on(\"update_layout\", this.onUpdatedScreen, this);\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.all_messages_loaded = false;\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({}, () => {\n                this.$el.html(\"<div class='gallery-files'></div>\");\n                this.updateMedia();\n            });\n        }\n    },\n\n    onScroll: function () {\n        if (!this.active)\n            return\n        let scrollTop = this.parent.ps_container[0].scrollTop,\n            scrollHeight = this.parent.ps_container[0].scrollHeight,\n            offsetHeight = this.parent.ps_container[0].offsetHeight,\n            persentScrolled = scrollTop / (scrollHeight - offsetHeight);\n        if (persentScrolled > 0.8 && this.last_rsm_message && !this.all_messages_loaded && !this.loading_messages){\n            this.loadMoreFiles();\n        }\n    },\n\n    onUpdatedScreen: function () {\n        let block_height = xabber.body.$el.height() - 320;\n        this.$el.css('min-height', `${block_height}px`);\n    },\n\n    updateForParticipant: function () {\n        this.delegateEvents({})\n        this.parent.ps_container.off('ps-scroll-up.mediagallery').off('ps-scroll-down.mediagallery').on(\"ps-scroll-up.mediagallery ps-scroll-down.mediagallery\", this.onScroll.bind(this));\n        this.$('.gallery-file').on('click', (ev) => {\n            this.onClickFile(ev);\n        });\n    },\n\n    getMediaFromDecryptedMessages: function () {\n\n        let dfd = new $.Deferred();\n\n        dfd.done(() => {\n            if (this.filter_type === 'filter_image')\n                this.$el.html(\"<div class='gallery-files images grid'></div>\");\n            else if (this.filter_type === 'filter_video')\n                this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n            else if (this.filter_type === 'filter_voice')\n                this.$el.html(\"<div class='gallery-files voice'></div>\");\n            else if (this.filter_type === 'filter_files')\n                this.$el.html(\"<div class='gallery-files files'></div>\");\n            else\n                this.$el.html(\"<div class='gallery-files'></div>\");\n            this.updateMedia();\n        }).fail(() => {\n            this.temporary_items = [];\n            this.$el.html(\"<div class='gallery-files'></div>\");\n            this.updateMedia()\n        });\n\n        if (this.account.omemo && this.account.omemo.cached_messages){\n\n            let cached_messages = this.account.omemo.cached_messages.getMessages(this.contact);\n\n            for (let [key, value] of Object.entries(cached_messages)) {\n                let msg_items = this.contact.getFilesFromStanza($(value), {cached_message: true, cached_stanza_id: key});\n                if (msg_items.length)\n                    this.temporary_items = this.temporary_items.concat(msg_items);\n            }\n\n            if (this.temporary_items.length){\n\n                let filtered_items = [],\n                    items_count = 0;\n\n                this.temporary_items.forEach((item, idx) => {\n                    if (this.filter_type === 'filter_image' && constants.MIME_TYPES.image.includes(item.media_type) ||\n                        this.filter_type === 'filter_video' && constants.MIME_TYPES.video.includes(item.media_type) ||\n                        this.filter_type === 'filter_voice' && constants.MIME_TYPES.audio.includes(item.media_type) ||\n                        this.filter_type === 'filter_files' &&\n                        !(\n                            constants.MIME_TYPES.image.includes(item.media_type) ||\n                            constants.MIME_TYPES.video.includes(item.media_type) ||\n                            constants.MIME_TYPES.audio.includes(item.media_type)\n                        )){\n                        if (this.filter_type === 'filter_image' && item.sources && item.sources[0]){\n                            this.chat.messages.decryptFile(item.sources[0], item.key).then((result) => {\n                                item.sources[0] = result;\n                                item.thumbnail = null;\n                                filtered_items = filtered_items.concat([item]);\n                                items_count++;\n                                if (items_count === this.temporary_items.length){\n                                    this.temporary_items = filtered_items;\n                                    dfd.resolve();\n                                }\n                            });\n\n                        } else {\n                            filtered_items = filtered_items.concat([item]);\n                            items_count++;\n                        }\n                    } else\n                        items_count++;\n                    if (items_count === this.temporary_items.length){\n                        this.temporary_items = filtered_items;\n                        dfd.resolve();\n                    }\n                });\n            } else {\n                dfd.reject();\n            }\n        } else {\n            dfd.reject();\n        }\n\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.updateMedia(true);\n        });\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items;\n    },\n\n    encryptedFilesHandler: function () {\n        let files_count = 0;\n        this.temporary_items = this.filterEncryptedFiles();\n\n        if (this.temporary_items.length)\n            this.temporary_items.forEach((item, idx) => {\n                let source = item.sources[0];\n                if (!item.key){\n                    files_count++;\n                    return;\n                }\n                this.chat.messages.decryptFile(source, item.key).then((result) => {\n                    if (!this.active)\n                        return\n                    item.sources[0] = result\n                    files_count++;\n                    if (files_count === this.temporary_items.length) {\n                        this.updateEncryptedMedia()\n                        this.loading_messages = false;\n                    }\n                });\n            });\n        else {\n            this.updateEncryptedMedia()\n            this.loading_messages = false;\n            if (!this.all_messages_loaded){\n                this.loadMoreFiles();\n            }\n        }\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files').length && this.$el.html(\"<div class='gallery-files'></div>\");\n        this.updateMedia();\n    },\n\n    updateMedia: function (is_loaded) {\n        if (!this.active)\n            return;\n        if (this.temporary_items.length){\n            this.temporary_items.reverse();\n            this.temporary_items.forEach((item) => {\n                if (this.filter_type === 'filter_voice')\n                    item.true_voice = true;\n                let $gallery_file = $(templates.media_item({file: item, is_encrypted: this.encrypted, svg_icon: utils.file_type_icon_svg(item.media_type), filesize: utils.pretty_size(item.size), duration: utils.pretty_duration(item.duration)}));\n                $gallery_file.appendTo(this.$('.gallery-files'));\n            });\n        }\n        this.temporary_items = [];\n        this.$('.gallery-files .gallery-empty').remove();\n        $(templates.media_items_empty()).appendTo(this.$('.gallery-files'));\n        if (this.filter_type === 'filter_image')\n            this.$('.gallery-files .gallery-empty-text').html(`${xabber.getString(\"no_images\")}`);\n        else if (this.filter_type === 'filter_video')\n            this.$('.gallery-files .gallery-empty-text').html(`${xabber.getString(\"no_videos\")}`);\n        else if (this.filter_type === 'filter_voice')\n            this.$('.gallery-files .gallery-empty-text').html(`${xabber.getString(\"no_voice_messages\")}`);\n        this.$('.gallery-files .preloader-wrapper').remove();\n    },\n\n    messagesFileRequest: function (query, callback) {\n        if (!this.active || this.loading_messages)\n            return;\n        let options = query || {},\n            queryid = uuid();\n        this.loading_messages = true;\n        !options.max && (options.max = xabber.settings.mam_messages_limit);\n        !options.after && !options.before && (options.before = '');\n        this.encrypted && (options.encrypted = this.encrypted)\n        this.parent.participant && (options.var = [{var: 'with', value: this.parent.participant.id}]);\n        this.contact.MAMRequest(options, (success, messages, rsm) => {\n            let messages_count = 0;\n            if (this.encrypted) {\n                if (messages.length)\n                    $(templates.preloader()).appendTo(this.$('.gallery-files'));\n                else {\n                    this.loading_messages = false;\n                    callback && callback();\n                    return;\n                }\n            }\n            $(messages).each((idx, message) => {\n                let $message = $(message),\n                    msg_items = [];\n                if (this.encrypted) {\n                    let deferred = new $.Deferred();\n                    deferred.done(($msg) => {\n                        msg_items = this.contact.getFilesFromStanza($msg);\n                        if (msg_items.length)\n                            this.temporary_items = this.temporary_items.concat(msg_items)\n                        messages_count++;\n                        if (messages_count === messages.length){\n                            this.last_rsm_message = rsm.first;\n                            this.encryptedFilesHandler();\n                        }\n                    }).fail(() => {\n                        messages_count++;\n                        if (messages_count === messages.length){\n                            this.last_rsm_message = rsm.first;\n                            this.all_messages_loaded = true;\n                            this.encryptedFilesHandler();\n                        }\n                    });\n                    this.account.omemo.receiveChatMessage($message, {\n                        searched_message: true,\n                        gallery: true,\n                        query: query\n                    }, deferred);\n                } else{\n                    msg_items = this.contact.getFilesFromStanza($message);\n                    this.account.chats.receiveChatMessage($message, {\n                        searched_message: true,\n                        query: query\n                    });\n                    if (msg_items.length)\n                        this.temporary_items = this.temporary_items.concat(msg_items)\n                }\n            });\n            if (!this.encrypted){\n                this.last_rsm_message = rsm.first;\n                if (!messages.length)\n                    this.all_messages_loaded = true;\n                this.loading_messages = false;\n                (this.filter_type === 'filter_files') && (this.temporary_items = this.temporary_items.filter(file => !(file.media_type && (file.media_type.includes('image') || (file.media_type.includes('video') && !file.has_encrypted_files)))));\n                if (!(this.temporary_items.length >= xabber.settings.mam_messages_limit) && this.filter_type === 'filter_files' && !this.all_messages_loaded) {\n                    this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, callback);\n                }else\n                    callback && callback();\n            }\n        }, () => {\n\n        });\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n        else if ($elem.hasClass('mdi-play') || $elem.children('.mdi-play').length) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n        else if ($elem.hasClass('mdi-pause') || $elem.children('.mdi-pause').length) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n        else if (!$elem.parents('.gallery-file-audio-container').length || $elem.closest('.audio-control-time').length) {\n            let $file = $elem.closest('.gallery-file');\n            this.parent.saveScrollBarOffset()\n            xabber.body.data.set('contact_details_view', this.parent)\n            this.chat.getMessageContext($file.data('uniqueid'), {searched_messages: true, encrypted: this.encrypted});\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.gallery-file');\n        $elem.addClass('voice-message-rendering').html($(templates.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, unique_id);\n\n        aud.on('ready', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('no-uploaded');\n            $msg_element.find('.gallery-file-placeholder-background').removeClass('gallery-audio-file-not-uploaded');\n            let duration = Math.round(aud.getDuration());\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n            aud.play();\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').length && $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').addClass('mdi-pause').removeClass('mdi-play');\n            $msg_element.addClass('playing');\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n        });\n\n        aud.on('finish', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createAudio: function(file_url, unique_id) {\n        let audio = WaveSurfer.create({\n            container: \"#\" + unique_id,\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n});\n\nxabber.MediaImagesView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.images .gallery-file\": \"onClickFile\",\n    },\n    status: 'image',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_image';\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image')\n                this.$el.html(\"<div class='gallery-files images grid'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image');\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.images.grid').length && this.$el.html(\"<div class='gallery-files images grid'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image')\n            this.updateMedia(true);\n        });\n    },\n\n});\n\nxabber.MediaVideosView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.videos .gallery-file\": \"onClickFile\",\n    },\n    status: 'video',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_video';\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video')\n                this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video');\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.videos.grid').length && this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video')\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.MediaFilesView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.files .gallery-file\": \"onClickFile\",\n    },\n    status: 'files',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_files';\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'))\n                this.$el.html(\"<div class='gallery-files files'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'));\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.files').length && this.$el.html(\"<div class='gallery-files files'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'))\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.MediaVoiceView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.voice .gallery-file\": \"onClickFile\",\n    },\n    status: 'files',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_voice'\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => item.voice)\n                this.$el.html(\"<div class='gallery-files voice'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => item.voice);\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.voice').length && this.$el.html(\"<div class='gallery-files voice'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => item.voice)\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.BlockedView = xabber.BasicView.extend({\n    status: 'blocked',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.account = this.contact.account;\n        this.$error = $('<p class=\"errors\"/>');\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-edit-wrap')\n        this.$el.html($(templates.preloader()));\n        this.updateBlockedParticipants();\n    },\n\n    updateBlockedParticipants: function () {\n        this.parent.$('.block-name-panel:not(.second-text)').html(xabber.getString(\"group_settings__block_list__header\"))\n        this.contact.getBlockedParticipants((response) => {\n            this.$el.html(\"\");\n            $(response).find('query').children().each((idx, item) => {\n                let jid = $(item).attr('jid') ? $(item).attr('jid') : $(item).text(),\n                    user = {jid: jid, status: this.status},\n                    $item_view = $(templates.group_chats.invited_member_item(user)),\n                    avatar = Images.getDefaultAvatar(user.jid);\n                this.$el.append($item_view);\n                $item_view.find('.circle-avatar').setAvatar(avatar, this.member_avatar_size);\n            });\n            if (!$(response).find('query').children.length)\n                this.$el.append(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.showBlockButton();\n        }, (err) => {\n\n            this.$el.html(this.$error.text($(err).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\")));\n        });\n    },\n\n    unblockUser: function (ev) {\n        let $member_item = $(ev.target).closest('.blocked-user'),\n            member_jid = $member_item.data('jid'),\n            tag = member_jid.toString().includes('@') ? 'jid' : 'domain',\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('unblock', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c(tag).t(member_jid);\n        this.account.sendFast(iq, () => {\n            $member_item.remove();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.updateRemoveParticipantButton();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n        });\n    },\n\n    unblockUserByElement: function ($member_item) {\n        let member_jid = $member_item.data('jid'),\n            tag = member_jid.toString().includes('@') ? 'jid' : 'domain',\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('unblock', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c(tag).t(member_jid);\n        this.account.sendFast(iq, () => {\n            $member_item.remove();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n        });\n    },\n\n    blockId: function () {\n        utils.dialogs.ask_enter_value(xabber.getString(\"contact_bar_block\"), xabber.getString(\"groupchat_dialog_block__text\"), {input_placeholder_value: xabber.getString(\"groupchat_dialog_block__input_placeholder\")}, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done((result) => {\n            if (result) {\n                let tag = result.includes('@') ? 'jid' : 'domain',\n                    iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                        .c('block', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                        .c(tag).t(result);\n                this.account.sendIQFast(iq, () => {\n                    this.updateBlockedParticipants()\n                }, function (err) {\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n            }\n        });\n    },\n});\n\nxabber.ParticipantsView = xabber.BasicView.extend({\n    className: 'overflow-visible',\n    ps_selector: '.members-list-wrap',\n    ps_settings: {theme: 'item-list'},\n    template: templates.group_chats.participants,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .participant-wrap\": \"showParticipantProperties\",\n        \"keyup .participants-search-form\" : \"keyUpSearch\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .btn-block\": \"blockParticipant\",\n        \"click .btn-kick\": \"kickParticipant\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.participants = this.model.participants;\n        this.participants.on(\"participants_updated\", this.onParticipantsUpdated, this);\n        this.model.on(\"change:status_updated\", this.updateParticipantsList, this);\n        this.$(this.ps_selector).perfectScrollbar(this.ps_settings);\n    },\n\n    _render: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.participant_properties_panel = new xabber.ParticipantPropertiesView({model: this.model});\n        this.updateParticipants();\n        this.$('.members-list-wrap').perfectScrollbar({theme: 'item-list'});\n        return this;\n    },\n\n    updateParticipants: function () {\n        this.model.participants.participantsRequest({version: this.participants.version }, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            if (this.participants.version > version)\n                return;\n            version && this.account.groupchat_settings.setParticipantsListVersion(this.model.get('jid'), version);\n            (this.participants.version < version) && this.participants.updateVersion();\n            this.renderParticipants();\n        }, () => {\n            this.$el.removeClass('request-waiting');\n        });\n    },\n\n    updateParticipantsList: function () {\n        this.$el.find('.members-list-wrap tbody').html('');\n        this.updateParticipants();\n    },\n\n    onParticipantsUpdated: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.renderParticipants();\n    },\n\n    renderParticipants: function () {\n        this.participants.each((participant) => {\n            this.renderMemberItem(participant);\n        });\n        this.$el.removeClass('request-waiting');\n    },\n\n    blockParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.kick(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    renderMemberItem: function (participant) {\n        if (!participant || !participant.attributes || !participant.attributes.id){\n            participant && participant.destroy();\n            participant && participant.attributes && this.account.groupchat_settings.removeParticipantFromList(this.model.get('jid'), participant.attributes.id);\n            return;\n        }\n        let attrs = _.clone(participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_me = attrs.jid == this.account.get('jid');\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        let $item_view = $(templates.group_chats.group_member_item(attrs)),\n            view = this.$('tr[data-id=\"' + attrs.id + '\"]');\n        $item_view.emojify('.badge', {emoji_size: 16});\n        if (view.length) {\n            view.hasClass('active') && $item_view.addClass('active');\n            $item_view.insertBefore(view);\n            view.detach();\n        }\n        else {\n            if (attrs.is_me) {\n                $item_view.prependTo(this.$('.members-list-wrap tbody'));\n            }\n            else\n                $item_view.appendTo(this.$('.members-list-wrap tbody'));\n        }\n        this.updateMemberAvatar(attrs);\n    },\n\n    updateMemberAvatar: function (member) {\n        let image = Images.getDefaultAvatar(member.nickname || member.jid || member.id),\n            $avatar = (member.id) ? this.$('tr[data-id=\"'+ member.id +'\"] .circle-avatar') : this.$('.list-item[data-jid=\"'+ member.jid +'\"] .circle-avatar');\n        $avatar.setAvatar(image, this.member_avatar_size);\n        if (member.avatar) {\n            let cached_avatar = this.account.chat_settings.getB64Avatar(member.id);\n            if (this.account.chat_settings.getHashAvatar(member.id) == member.avatar && cached_avatar)\n                $avatar.setAvatar(cached_avatar, this.member_avatar_size);\n            else {\n                if (member.avatar_url){\n                    this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, member.avatar_url);\n                    this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(member.avatar_url, this.member_avatar_size);\n                    if (this.account.get('jid') === member.jid) {\n                        this.model.my_info.set({avatar: member.avatar, 'b64_avatar': member.avatar_url});\n                        this.model.trigger('update_my_info');\n                    }\n                }\n                else {\n                    let node = `${Strophe.NS.PUBSUB_AVATAR_DATA}#${member.id}`;\n                    this.model.getAvatar(member.avatar, node, (avatar) => {\n                        this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, avatar);\n                        this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(avatar, this.member_avatar_size);\n                        if (this.account.get('jid') === member.jid) {\n                            this.model.my_info.set('b64_avatar', avatar);\n                            this.model.trigger('update_my_info');\n                        }\n                    });\n                }\n            }\n        }\n    },\n\n    showParticipantProperties: function (ev) {\n        let $target = $(ev.target);\n        if ($target.closest('.buttons-wrap').length)\n            return;\n        let participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    keyUpSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact'))\n            this.clearSearch(ev);\n        else\n            this.searchParticipant();\n    },\n\n    searchParticipant: function () {\n        let query = this.$('.participants-search-form input').val().toLowerCase();\n        this.$('.members-list-wrap .participant-wrap').each((idx, item) => {\n            let $this = $(item),\n                participant_id = $this.data('id'),\n                participant = this.model.participants.find(participant => participant.get('id') === participant_id),\n                jid = participant.get('jid').toLowerCase(),\n                name = participant.get('nickname').toLowerCase();\n            $this.hideIf(name.indexOf(query) < 0 && jid.indexOf(query) < 0);\n        });\n        if (query)\n            this.$('.close-search-icon').show();\n        else\n            this.$('.close-search-icon').hide();\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.searchParticipant();\n    }\n});\n\nxabber.ParticipantsViewRight = xabber.BasicView.extend({\n    className: 'overflow-visible',\n    ps_settings: {theme: 'item-list'},\n    template: templates.group_chats.participants_right_panel,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .participant-wrap\": \"showParticipantProperties\",\n        \"keyup .participants-search-form\" : \"keyUpSearch\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .btn-kick\": \"kickParticipantDialog\",\n        \"click .btn-edit-member\": \"showParticipantPropertiesEdit\",\n        \"click .btn-mute\": \"kickParticipantDialog\",\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.participants = this.model.participants;\n        this.participants.on(\"change\", this.onParticipantsChanged, this);\n        this.participants.on(\"participants_updated\", this.onParticipantsUpdated, this);\n        this.model.on(\"change:status_updated\", this.updateParticipantsList, this);\n        this.participant_properties_panel = this.addChild('participant_properties_panel', xabber.ParticipantPropertiesViewRight, {model: this.model, el: this.parent.$('.participant-view-wrap')[0], parent: this.parent});\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        xabber.on(\"update_layout\", this.onUpdatedScreen, this);\n    },\n\n    _render: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.updateParticipants();\n        return this;\n    },\n\n    onUpdatedScreen: function () {\n        let block_height = xabber.body.$el.height() - 320;\n        this.$el.css('min-height', `${block_height}px`);\n    },\n\n    updateParticipants: function () {\n        this.model.participants.participantsRequest({version: this.participants.version }, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            if (this.participants.version > version)\n                return;\n            version && this.account.groupchat_settings.setParticipantsListVersion(this.model.get('jid'), version);\n            (this.participants.version < version) && this.participants.updateVersion();\n            this.renderParticipants();\n        }, () => {\n            this.$el.removeClass('request-waiting');\n        });\n    },\n\n    updateParticipantsList: function () {\n        this.updateParticipants();\n    },\n\n    onParticipantsUpdated: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.renderParticipants();\n    },\n\n    onParticipantsChanged: function () {\n        this.updateParticipants();\n    },\n\n    renderParticipants: function () {\n        this.participants.each((participant) => {\n            this.renderMemberItem(participant);\n        });\n        if (this.$('.participants-search-form input').val())\n            this.searchParticipant();\n        this.$el.removeClass('request-waiting');\n    },\n\n    blockParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.kick(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipantDialog: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask_extended(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]), null, { ok_button_text: xabber.getString(\"groupchat_kick\"), optional_button: 'block', optional_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                if (result === 'block'){\n                    let participant = this.participants.get($target.attr('data-id'));\n                    if (participant)\n                        participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                }\n                else{\n                    let participant = this.participants.get($target.attr('data-id'));\n                    participant.kick(() => {\n                        $target.remove();\n                        this.parent.updateScrollBar();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n                }\n            }\n        });\n    },\n\n    renderMemberItem: function (participant) {\n        if (!participant || !participant.attributes || !participant.attributes.id){\n            participant && participant.destroy();\n            participant && participant.attributes && this.account.groupchat_settings.removeParticipantFromList(this.model.get('jid'), participant.attributes.id);\n            return;\n        }\n        let attrs = _.clone(participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_me = attrs.jid == this.account.get('jid');\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        let $item_view = $(templates.group_chats.group_member_item_right(attrs)),\n            view = this.$('tr[data-id=\"' + attrs.id + '\"]');\n        if (view.length) {\n            view.hasClass('active') && $item_view.addClass('active');\n            $item_view.insertBefore(view);\n            view.detach();\n        }\n        else {\n            if (attrs.is_me) {\n                $item_view.prependTo(this.$('.members-list-wrap tbody'));\n            }\n            else\n                $item_view.appendTo(this.$('.members-list-wrap tbody'));\n        }\n        this.updateMemberAvatar(attrs);\n    },\n\n    updateMemberAvatar: function (member) {\n        let image = Images.getDefaultAvatar(member.nickname || member.jid || member.id),\n            $avatar = (member.id) ? this.$('tr[data-id=\"'+ member.id +'\"] .circle-avatar') : this.$('.list-item[data-jid=\"'+ member.jid +'\"] .circle-avatar');\n        $avatar.setAvatar(image, this.member_avatar_size);\n        if (member.avatar) {\n            let cached_avatar = this.account.chat_settings.getB64Avatar(member.id);\n            if (this.account.chat_settings.getHashAvatar(member.id) == member.avatar && cached_avatar)\n                $avatar.setAvatar(cached_avatar, this.member_avatar_size);\n            else {\n                if (member.avatar_url){\n                    this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, member.avatar_url);\n                    this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(member.avatar_url, this.member_avatar_size);\n                    if (this.account.get('jid') === member.jid) {\n                        this.model.my_info.set({avatar: member.avatar, 'b64_avatar': member.avatar_url});\n                        this.model.trigger('update_my_info');\n                    }\n                }\n                else {\n                    let node = `${Strophe.NS.PUBSUB_AVATAR_DATA}#${member.id}`;\n                    this.model.getAvatar(member.avatar, node, (avatar) => {\n                        this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, avatar);\n                        this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(avatar, this.member_avatar_size);\n                        if (this.account.get('jid') === member.jid) {\n                            this.model.my_info.set('b64_avatar', avatar);\n                            this.model.trigger('update_my_info');\n                        }\n                    });\n                }\n            }\n        }\n    },\n\n    showParticipantProperties: function (ev) {\n        let $target = $(ev.target);\n        if ($target.closest('.buttons-wrap').length)\n            return;\n        let participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    showParticipantPropertiesEdit: function (ev) {\n        let $target = $(ev.target),\n            participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n            this.participant_properties_panel.showNamePanel();\n            this.participant_properties_panel.changeBackButton();\n        });\n    },\n\n    keyUpSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact'))\n            this.clearSearch(ev);\n        else\n            this.searchParticipant();\n    },\n\n    searchParticipant: function () {\n        let query = this.$('.participants-search-form input').val().toLowerCase();\n        this.$('.members-list-wrap .participant-wrap').each((idx, item) => {\n            let $this = $(item),\n                participant_id = $this.data('id'),\n                participant = this.model.participants.find(participant => participant.get('id') === participant_id),\n                jid = participant.get('jid').toLowerCase(),\n                name = participant.get('nickname').toLowerCase();\n            $this.hideIf(name.indexOf(query) < 0 && jid.indexOf(query) < 0);\n        });\n        if (query)\n            this.$('.close-search-icon').show();\n        else\n            this.$('.close-search-icon').hide();\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.searchParticipant();\n    }\n});\n\nxabber.ParticipantPropertiesView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-rights',\n    template: templates.group_chats.participant_rights,\n    member_details_avatar_size: constants.AVATAR_SIZES.PARTICIPANT_DETAILS_ITEM,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .btn-cancel-changes\": \"close\",\n        \"change .clickable-field input\": \"changeRights\",\n        \"click .btn-save-user-rights\": \"saveRights\",\n        \"click .participant-details-item:not(.unsubscribed) .nickname\": \"editNickname\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-block-participant\": \"block\",\n        \"click .btn-kick-participant\": \"kick\",\n        \"click .btn-set-badge\": \"editBadge\",\n        \"click .btn-participant-messages\": \"getMessages\",\n        \"click .btn-chat\": \"getPrivateChat\",\n        \"click .property-variant\": \"changeTimerValue\",\n        \"keydown .rich-textarea\": \"checkKeydown\",\n        \"keyup .rich-textarea\": \"checkKeyup\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.model.account;\n    },\n\n    open: function (participant, data_form) {\n        if (!participant) return;\n        this.participant = participant;\n        this.participant.on(\"change:badge\", this.onBadgeUpdated, this);\n        this.data_form = data_form;\n        this.render();\n        this.$el.openModal({\n            ready: () => {\n                this.$el.css('height', \"\");\n                if (($(window).height() * 0.1 + this.$el.height()) > $(window).height())\n                    this.$el.css('height', $(window).height() * 0.9);\n                this.$('.modal-content').css('max-height', 'calc(100% - ' + (64 + this.$('.header').height()) + 'px)');\n                this.scrollToTop();\n                this.updateSaveButton();\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                };\n                this.$('.select-timer .dropdown-button').dropdown(dropdown_settings);\n                this.$('.participant-details-item .dropdown-button').dropdown(_.extend(dropdown_settings, {alignment: 'right'}));\n            },\n            complete: () => {\n                this.render();\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.render();\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    render: function () {\n        this.new_avatar = \"\";\n        let attrs = _.clone(this.participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.blocked = attrs.blocked;\n        attrs.subscription = attrs.subscription === null ? null : 'both';\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_myself = attrs.jid === this.account.get('jid');\n        attrs.is_blocked_contact = this.account.blocklist.isBlocked(attrs.jid);\n        attrs.incognito_chat = (this.contact.get('group_info') && this.contact.get('group_info').privacy === 'incognito') ? true : false;\n        let $member_info_view;\n        if (this.contact.get('private_chat')) {\n            this.$el.addClass('edit-rights-private');\n            $member_info_view = $(templates.group_chats.private_participant_details(attrs));\n        }\n        else\n            $member_info_view = $(templates.group_chats.participant_details_item(attrs));\n        this.$('.header').html($member_info_view);\n        this.$('.buttons-wrap .button-wrap:not(.btn-chat-wrap):not(.btn-participant-messages-wrap)').switchClass('non-active', attrs.subscription === null);\n        this.$('.btn-chat-wrap').switchClass('non-active', this.participant.get('jid') === this.account.get('jid'));\n        this.updateMemberAvatar(this.participant);\n        this.participant_messages = [];\n        this.actual_rights = [];\n        if (!this.contact.get('private_chat'))\n            this.setActualRights();\n        else {\n            this.$('.modal-content').addClass('hidden');\n            this.$('.modal-footer').switchClass('hidden', this.participant.get('jid') !== this.account.get('jid'));\n        }\n        this.updateScrollBar();\n        this.$('.participant-info #edit-nickname').on(\"focusout\", () => {\n            let new_nickname = this.$('#edit-nickname').getTextFromRichTextarea().trim();\n            if (new_nickname === \"\")\n                new_nickname = this.participant.get('nickname');\n            this.$('.participant-info #edit-nickname').hide();\n            this.$('.participant-info .nickname').show();\n            this.updateNickname(new_nickname);\n        });\n        this.$('.content').perfectScrollbar({theme: 'item-list'});\n    },\n\n    updateMemberAvatar: function (member) {\n        let participant_id = member.get('id'),\n            $avatar = this.$(`.participant-details-item[data-id=\"${participant_id}\"] .circle-avatar`);\n        member.image = Images.getDefaultAvatar(member.get('nickname') || member.get('jid') || participant_id);\n        $avatar.setAvatar(member.image, this.member_details_avatar_size);\n        this.$('.participant-details-item[data-id=\"'+ member.id +'\"]').emojify('.badge', {emoji_size: 18});\n        if (member.get('avatar')) {\n            if (this.account.chat_settings.getHashAvatar(participant_id) == member.get('avatar') && (this.account.chat_settings.getB64Avatar(participant_id)))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n            else {\n                if (member.get('avatar_url')){\n                    $avatar.setAvatar(member.get('avatar_url'), this.member_details_avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + participant_id;\n                    this.contact.getAvatar(member.get('avatar'), node, (avatar) => {\n                        this.$(`.circle-avatar`).setAvatar(avatar, this.member_details_avatar_size);\n                    });\n                }\n            }\n        }\n        else {\n            if (this.account.chat_settings.getHashAvatar(participant_id))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n        }\n    },\n\n    updateRightsView: function (ev) {\n        !$(ev.target).hasClass('non-active') && this.render(this.participant);\n    },\n\n    getMessages: function (options) {\n        let chat = this.account.chats.getChat(this.contact);\n        chat.messages_view = new xabber.ParticipantMessagesView({ model: chat, contact: this.contact, participant: this.participant.attributes });\n        chat.messages_view.messagesRequest(options, () => {\n            this.close();\n            xabber.body.setScreen('all-chats', {right: 'participant_messages', model: chat});\n        });\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.new_avatar = file;\n                this.$('.circle-avatar').addClass('changed').setAvatar(image, this.member_details_avatar_size);\n                this.updateSaveButton();\n            }\n        });\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        if ($property_item.attr('data-value') !== $property_value.attr('data-value')) {\n            $property_item.closest('.right-item').addClass('changed-timer changed');\n            this.updateSaveButton();\n        }\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') === '0') {\n            $property_value.addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked')) {\n            $input_item.click();\n        }\n    },\n\n    onBadgeUpdated: function (participant) {\n        let badge = _.escape(participant.get('badge'));\n        this.updateBadge(badge);\n    },\n\n    updateBadge: function (badge) {\n        this.$('.badge').html(badge).switchClass('hidden', !badge);\n        this.$('.participant-info').emojify('.badge');\n    },\n\n    updateButtons: function (has_changes) {\n        this.$('.btn-save-user-rights').switchClass('non-active', !has_changes);\n    },\n\n    updateSaveButton: function () {\n        let has_changes = this.$('.changed').length;\n        this.updateButtons(has_changes);\n    },\n\n    updateNickname: function (nickname) {\n        let $member_item = this.$('.participant-details-item[data-id=\"' + this.participant.get('id') + '\"]'),\n            $member_item_nickname = $member_item.find('.nickname');\n        $member_item_nickname.html(Strophe.xmlescape(nickname));\n        $member_item.emojify('.nickname');\n        if (nickname !== this.participant.get('nickname'))\n            $member_item_nickname.addClass('changed');\n        else\n            $member_item_nickname.removeClass('changed');\n        this.updateSaveButton();\n    },\n\n    editNickname: function () {\n        if (this.contact.get('private_chat') && this.account.get('jid') !== this.participant.get('jid'))\n            return;\n        this.$('.participant-info .nickname').hide();\n        this.$('.participant-info #edit-nickname').text(this.$('.participant-info .nickname').text()).show().placeCaretAtEnd();\n    },\n\n    editBadge: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        this.edit_badge_panel = new xabber.EditBadgeView({model: this});\n    },\n\n    checkKeydown: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            $(document.activeElement).blur();\n        }\n    },\n\n    checkKeyup: function (ev) {\n        let $richtextarea = $(ev.target),\n            new_value = $richtextarea.getTextFromRichTextarea().trim();\n        if (ev.target.id === 'edit-nickname') {\n            let has_changes = (new_value !== this.participant.get('nickname'));\n            this.updateButtons(has_changes);\n        }\n    },\n\n    retractUserMessages: function () {\n        utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__header\", [this.participant.get('nickname') || this.participant.get('jid') || this.participant.get('id')]), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (this.participant.get('id')) {\n                    let group_chat = this.account.chats.getChat(this.contact);\n                    group_chat.retractMessagesByUser(this.participant.get('id'));\n                }\n            }\n        });\n    },\n\n    block: function () {\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                this.participant.block(() => {this.close();},\n                    function (error) {\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kick: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                this.participant.kick(() => {\n                        this.close();\n                    }, (error) => {\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    setActualRights: function () {\n        this.$('.rights-wrap').html(\"\");\n        this.data_form.fields && this.data_form.fields.forEach((field) => {\n            field = _.clone(field);\n            if (field.type  === 'list-single' || field.type  === 'fixed' && (!field.values || field.values[0] == 0)) {\n                !field.values && (field.values = []);\n                let attrs = {\n                        pretty_name: field.label,\n                        name: field.var,\n                        expires: field.values ? field.values[0] : undefined\n                    },\n                    restriction_item = $(templates.group_chats.restriction_item({name: attrs.name, pretty_name: attrs.pretty_name, type: field.type})),\n                    restriction_expire;\n                if (field.options) {\n                    restriction_expire = $(templates.group_chats.right_expire_variants({\n                        right_name: ('default-' + attrs.name),\n                        expire_options: field.options\n                    }));\n                    restriction_item.append(restriction_expire);\n                }\n                this.$('.rights-wrap').append(restriction_item);\n                if (attrs.expires) {\n                    this.actual_rights.push({name: attrs.name, expires: attrs.expires});\n                    this.$('.right-item #' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                    if (attrs.expires != 0) {\n                        let $current_restriction = this.$('.right-item.restriction-' + attrs.name);\n                        $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                            .removeClass('default-value')\n                            .text(moment(Number(attrs.expires)*1000).fromNow());\n                    }\n                }\n            } else if (field.type  === 'fixed')\n                field.values && this.$('.rights-wrap').append($('<div class=\"rights-header\"/>').text(field.values[0]));\n        });\n    },\n\n    getPrivateChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let participant_jid = this.participant.get('jid'),\n            participant_in_roster = this.account.contacts.get(participant_jid);\n        if (!participant_jid || this.contact.get('incognito_chat')) {\n            let iq = $iq({to: this.contact.domain, type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#create`})\n                .c('peer-to-peer', { jid: this.contact.get('jid'),  id: this.participant.get('id')});\n            this.account.sendIQFast(iq, (iq_response) => {\n                let group_jid = $(iq_response).find('query localpart').text() + '@' + this.contact.domain,\n                    contact = this.account.contacts.mergeContact(group_jid);\n                contact.set('group_chat', true);\n                contact.set('subscription_preapproved', true);\n                contact.pres('subscribed');\n                contact.set('known', true);\n                contact.set('removed', false);\n                setTimeout(() => {\n                    contact.pres('subscribe');\n                }, 500);\n                this.close();\n                this.account.chats.openChat(contact);\n                let chat = this.account.chats.getChat(contact);\n                chat.messages.createSystemMessage({\n                    from_jid: group_jid,\n                    message: xabber.getString(\"groupchat__private_chat__text_message_init\", [this.participant.get('nickname'), this.contact.get('jid')])\n                });\n            }, (error) => {\n                let $error = $(error),\n                    private_chat_jid = $error.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"] jid`).text();\n                if (private_chat_jid) {\n                    let contact = this.account.contacts.mergeContact(private_chat_jid),\n                        chat = this.account.chats.getChat(contact);\n                    this.close();\n                    chat && chat.trigger('open');\n                    return;\n                }\n                let err_text = $(error).find('text[lang=\"en\"]').text() || $(error).find('text').first().text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        }\n        else {\n            if (participant_in_roster)\n                if (participant_in_roster.get('in_roster')) {\n                    this.close();\n                    participant_in_roster.trigger('open_chat', participant_in_roster);\n                    return;\n                }\n            this.close();\n            xabber.add_contact_view.show({\n                account: this.account,\n                jid: participant_jid\n            });\n        }\n    },\n\n    changeRights: function (ev) {\n        let $target = $(ev.target),\n            $right_item = $target.closest('.right-item'),\n            right_name = $target.prop('id');\n        if ($target.prop('checked')) {\n            if (!this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.addClass('changed');\n                else\n                    $right_item.removeClass('changed');\n        }\n        else {\n            if (this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else {\n                $right_item.removeClass('changed');\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.find('.timer-item-wrap .property-value').addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\")).attr('data-value', \"\");\n            }\n        }\n        this.updateSaveButton();\n    },\n\n    saveRights: function (ev) {\n        if ($(ev.target).hasClass('non-active'))\n            return;\n        let $btn = $(ev.target),\n            jid = this.account.get('jid'),\n            member_id = this.participant.get('id'),\n            $participant_avatar = this.$('.participant-details-item .circle-avatar'),\n            nickname_value = this.$('.participant-info .nickname').text(),\n            changed_avatar = this.new_avatar,\n            rights_changed = false,\n            has_changes = false,\n            iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + \"#members\"})\n                .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: member_id});\n        this.$('.buttons-wrap .btn-save-user-rights').addClass('non-active');\n        changed_avatar && $participant_avatar.find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        if (nickname_value != this.participant.get('nickname')) {\n            has_changes = true;\n            iq_changes.c('nickname').t(nickname_value).up();\n        }\n        this.$('.right-item').each((idx, right_item) => {\n            if ($(right_item).hasClass('changed')) {\n                let $right_item = $(right_item),\n                    right_name = $right_item.find('.field input')[0].id;\n                if ($right_item.find('.field input:checked').val()) {\n                    let right_expire = $right_item.find('.select-timer .timer-item-wrap .property-value').attr('data-value'),\n                        field = this.data_form.fields.find(f => f.var === right_name),\n                        field_idx = this.data_form.fields.indexOf(field);\n                    field.values = [right_expire];\n                    this.data_form.fields[field_idx] = field;\n                    rights_changed = true;\n                }\n                else {\n                    let field = this.data_form.fields.find(f => f.var === right_name);\n                    if (field.values.length) {\n                        let field_idx = this.data_form.fields.indexOf(field);\n                        field.values = [];\n                        this.data_form.fields[field_idx] = field;\n                        rights_changed = true;\n                    }\n                }\n            }\n        });\n        if (changed_avatar)\n            this.contact.pubAvatar(changed_avatar, ('#' + member_id), () => {\n                this.$('.buttons-wrap button').removeClass('non-active');\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.$(`.participant-details-item[data-id=\"${member_id}\"] .circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.close();\n            }, function (error) {\n                this.$('.buttons-wrap button').removeClass('non-active');\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                !has_changes && utils.dialogs.error(error_text);\n            });\n        if (has_changes)\n            this.account.sendIQFast(iq_changes,\n                () => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.participant.set('nickname', nickname_value);\n                    this.close();\n                },\n                (error) => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.close();\n\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        if (rights_changed) {\n            let iq_rights_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#rights'});\n            iq_rights_changes = this.account.addDataFormToStanza(iq_rights_changes, this.data_form);\n            this.account.sendIQFast(iq_rights_changes, () => {\n                    this.close();\n                },\n                (error) => {\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        }\n        $btn.blur();\n    }\n});\n\nxabber.ParticipantPropertiesViewRight = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-rights',\n    template: templates.group_chats.participant_details_right,\n    member_details_avatar_size: constants.AVATAR_SIZES.PARTICIPANT_DETAILS_ITEM,\n\n    events: {\n        \"click .btn-back:not(.btn-top)\": \"close\",\n        \"click .btn-back.btn-top\": \"scrollToTopSmooth\",\n        'click .btn-edit-participant': 'showNamePanel',\n        'click .btn-back-name': 'hidePanel',\n        \"change .clickable-field input\": \"changeRights\",\n        \"click .btn-reset\": \"render\",\n        \"click .btn-reset-name\": \"resetPanel\",\n        \"click .btn-save-user-rights\": \"saveRights\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-kick-participant\": \"kickParticipantDialog\",\n        \"click .btn-set-visibility-wrap\": \"setVisibility\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .btn-set-badge\": \"editBadge\",\n        \"click .btn-participant-messages\": \"getMessages\",\n        \"click .btn-chat-participant\": \"getPrivateChat\",\n        \"click .property-variant\": \"changeTimerValue\",\n        \"click .set-groupchat-avatar-text\": \"clickAvatarInput\",\n        \"keydown .rich-textarea\": \"checkKeydown\",\n        \"keyup .rich-textarea\": \"checkKeyup\",\n        \"click .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.model.account;\n    },\n\n    open: function (participant, data_form) {\n        this.model.set('participant_hidden', false);\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'))\n        if (!participant) return;\n        this.participant = participant;\n        this.participant.on(\"change:badge\", this.onBadgeUpdated, this);\n        this.data_form = data_form;\n        this.render();\n        this.updateSaveButton();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.select-timer .dropdown-button').dropdown(dropdown_settings);\n        this.$('.participant-details-item .dropdown-button').dropdown(_.extend(dropdown_settings, {alignment: 'right'}));\n    },\n\n    close: function () {\n        this.model.set('participant_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n            this.parent.onScroll();\n        };\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'));\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.new_avatar = \"\";\n        let attrs = _.clone(this.participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.blocked = attrs.blocked;\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        attrs.subscription = attrs.subscription === null ? null : 'both';\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_myself = attrs.jid === this.account.get('jid');\n        attrs.is_blocked_contact = this.account.blocklist.isBlocked(attrs.jid);\n        attrs.incognito_chat = (this.contact.get('group_info') && this.contact.get('group_info').privacy === 'incognito') ? true : false;\n        let $member_info_view;\n        if (this.contact.get('private_chat')) {\n            this.$el.addClass('edit-rights-private');\n            $member_info_view = $(templates.group_chats.private_participant_details_item_right(attrs));\n        }\n        else\n            $member_info_view = $(templates.group_chats.participant_details_item_right(attrs));\n        this.$('.participant-details-info-wrap').html($member_info_view);\n        this.$('.buttons-wrap .button-wrap:not(.btn-chat-wrap):not(.btn-participant-messages-wrap)').switchClass('non-active', attrs.subscription === null);\n        this.$('.btn-chat-wrap').switchClass('non-active', this.participant.get('jid') === this.account.get('jid'));\n        this.updateMemberAvatar(this.participant);\n        this.participant_messages = [];\n        this.actual_rights = [];\n        if (!this.contact.get('private_chat'))\n            this.setActualRights();\n        else {\n            this.$('.modal-content').addClass('hidden');\n            this.$('.modal-footer').switchClass('hidden', this.participant.get('jid') !== this.account.get('jid'));\n        }\n        this.updateScrollBar();\n        this.$('.participant-info #edit-nickname').on(\"focusout\", () => {\n            let new_nickname = this.$('#edit-nickname').getTextFromRichTextarea().trim();\n            if (new_nickname === \"\")\n                new_nickname = this.participant.get('nickname');\n            this.$('.participant-info #edit-nickname').hide();\n            this.$('.participant-info .nickname').show();\n            this.updateNickname(new_nickname);\n        });\n        this.ps_container = this.$('.participant-details-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-y\", this.onScroll.bind(this));\n        this.onScroll();\n        this.participant_name_field = new xabber.ParticipantNameRightWidget({\n            el: this.$('.edit-participant-name-wrap')[0],\n            model: this.participant,\n            parent: this,\n        });\n        this.participant_badge_field = new xabber.ParticipantBadgeRightWidget({\n            el: this.$('.edit-participant-badge-wrap')[0],\n            model: this.participant,\n            parent: this,\n        });\n        this.updateList('image');\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        this.updateIndicator()\n        this.$('.participant-details-edit-wrap').hideIf(true);\n        this.$('.block-name:not(.second-text)').hideIf(true);\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n    showNamePanel: function () {\n        this.$('.participant-details-edit-wrap').hideIf(false)\n        this.$('.btn-edit-participant').hideIf(true)\n        this.$('.parent-btn').hideIf(true)\n        this.$('.child-btn').hideIf(false)\n        this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.block-name.second-text').text('');\n        this.$('.block-name:not(.second-text)').text(xabber.getString(\"groupchat_member_edit\"));\n        this.$('.block-name:not(.second-text)').hideIf(false);\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.ps_container = this.$('.participant-details-edit-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    changeBackButton: function () {\n        this.$('.parent-btn').hideIf(false)\n        this.$('.child-btn').hideIf(true)\n    },\n\n    hidePanel: function () {\n        this.$('.participant-details-edit-wrap').hideIf(true)\n        this.$('.btn-edit-participant').hideIf(false)\n        this.$('.parent-btn').hideIf(false)\n        this.$('.child-btn').hideIf(true)\n        this.$('.block-name:not(.second-text)').hideIf(true);\n        this.ps_container = this.$('.participant-details-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.onScroll();\n    },\n\n    resetPanel: function () {\n        this.participant_name_field.updateValue(true);\n        this.participant_badge_field.updateValue(true);\n        this.new_avatar = \"\";\n        this.updateMemberAvatar(this.participant);\n        this.updateSaveButton()\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.$('.tabs').animate({scrollLeft: $target.position().left}, 400);\n        this.ps_container.animate(\n            {scrollTop: this.$('.bottom-block').position().top + this.ps_container.scrollTop() - 120},\n            400,\n            () => {\n                this.onScroll();\n            });\n        this.$('.block-header .block-name.second-text').text($target.text())\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, participant: true, el: this.$('.participants-details-media-wrap')[0]});\n        else\n            return;\n    },\n\n    changeName: function (value) {\n        this.updateSaveButton()\n    },\n\n    changeBadge: function (value) {\n        this.updateSaveButton()\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.block-name.second-text').text('');\n        this.$('.block-name.second-text').addClass('fade-out');\n        this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        this.$('.btn-back').removeClass('btn-top');\n        this.$('.btn-back i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 220) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.block-name.second-text').text(this.participant.get('nickname'));\n            this.$('.block-name.second-text').removeClass('fade-out');\n            this.$('.block-name:not(.second-text)').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 1) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        else {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.block-name.second-text').text('');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        let bottom_block_scroll\n        if (this.$('.bottom-block'))\n            bottom_block_scroll = this.$('.bottom-block').get(0).getBoundingClientRect().top;\n        if (!_.isUndefined(bottom_block_scroll) && bottom_block_scroll <= 170) {\n            this.$('.btn-back').addClass('btn-top');\n            this.$('.participant-details-item .buttons-wrap').addClass('hidden2');\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.btn-edit-participant').hideIf(true);\n            this.$('.block-header .block-name.second-text').text(this.$('.tabs .list-variant .active').text())\n        }\n        else {\n            this.$('.btn-back').removeClass('btn-top');\n            this.$('.participant-details-item .buttons-wrap').removeClass('hidden2');\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n            this.$('.btn-edit-participant').hideIf(false);\n        }\n    },\n\n    clickAvatarInput: function (ev) {\n        this.$('.circle-avatar input').click();\n    },\n\n    updateMemberAvatar: function (member) {\n        let participant_id = member.get('id'),\n            $avatar = this.$(`.circle-avatar`);\n        member.image = Images.getDefaultAvatar(member.get('nickname') || member.get('jid') || participant_id);\n        $avatar.setAvatar(member.image, this.member_details_avatar_size);\n        $avatar.removeClass('changed');\n        if (member.get('avatar')) {\n            if (this.account.chat_settings.getHashAvatar(participant_id) == member.get('avatar') && (this.account.chat_settings.getB64Avatar(participant_id)))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n            else {\n                if (member.get('avatar_url')){\n                    $avatar.setAvatar(member.get('avatar_url'), this.member_details_avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + participant_id;\n                    this.contact.getAvatar(member.get('avatar'), node, (avatar) => {\n                        this.$(`.circle-avatar`).setAvatar(avatar, this.member_details_avatar_size);\n                    });\n                }\n            }\n        }\n        else {\n            if (this.account.chat_settings.getHashAvatar(participant_id))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n        }\n    },\n\n    updateRightsView: function (ev) {\n        !$(ev.target).hasClass('non-active') && this.render(this.participant);\n    },\n\n    getMessages: function (options) {\n        let chat = this.account.chats.getChat(this.contact);\n        chat.messages_view = new xabber.ParticipantMessagesView({ model: chat, contact: this.contact, participant: this.participant.attributes });\n        chat.messages_view.messagesRequest(options, () => {\n            xabber.body.setScreen('all-chats', {right: 'participant_messages', model: chat});\n            this.open(this.participant, this.data_form);\n        });\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.new_avatar = file;\n                this.$('.participant-details-edit-wrap .circle-avatar').addClass('changed');\n                this.$('.circle-avatar').setAvatar(image, this.member_details_avatar_size);\n                this.updateSaveButton();\n            }\n        });\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        if ($property_item.attr('data-value') !== $property_value.attr('data-value')) {\n            $property_item.closest('.right-item').addClass('changed-timer changed');\n            this.updateSaveButton();\n        }\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') === '0') {\n            $property_value.addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked')) {\n            $input_item.click();\n        }\n    },\n\n    onBadgeUpdated: function (participant) {\n        let badge = _.escape(participant.get('badge'));\n        this.updateBadge(badge);\n    },\n\n    updateBadge: function (badge) {\n        this.$('.badge').html(badge).switchClass('hidden', !badge);\n        this.$('.participant-info').emojify('.badge');\n        this.$('.participant-info').emojify('.participant-edit-badge');\n    },\n\n    updateButtons: function (has_changes) {\n        this.$('.btn-save-user-rights').switchClass('non-active', !has_changes);\n        this.$('.btn-save-user-rights').switchClass('fade-out', !has_changes);\n        this.$('.btn-edit-participant').switchClass('fade-out', has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.block-header .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.block-header .details-icon.parent-btn').removeClass('btn-back').addClass('btn-reset')\n            this.$('.block-header .details-icon.child-btn').removeClass('btn-back-name').addClass('btn-reset-name')\n            this.$('.block-header .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.block-header .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.block-header .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.block-header .details-icon.parent-btn').addClass('btn-back').removeClass('btn-reset')\n            this.$('.block-header .details-icon.child-btn').addClass('btn-back-name').removeClass('btn-reset-name')\n            this.$('.block-header .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.block-header .block-name.second-text').addClass('fade-out');\n        }\n    },\n\n    updateSaveButton: function () {\n        let has_changes = this.$('.changed').length;\n        this.updateButtons(has_changes);\n    },\n\n    updateNickname: function (nickname) {\n        let $member_item = this.$('.participant-details-item[data-id=\"' + this.participant.get('id') + '\"]'),\n            $member_item_nickname = $member_item.find('.nickname');\n        $member_item_nickname.html(Strophe.xmlescape(nickname));\n        $member_item.emojify('.nickname');\n        if (nickname !== this.participant.get('nickname'))\n            $member_item_nickname.addClass('changed');\n        else\n            $member_item_nickname.removeClass('changed');\n        this.updateSaveButton();\n    },\n\n    editNickname: function () {\n        if (this.contact.get('private_chat') && this.account.get('jid') !== this.participant.get('jid'))\n            return;\n        this.$('.participant-info .nickname').hide();\n        this.$('.participant-info #edit-nickname').text(this.$('.participant-info .nickname').text()).show().placeCaretAtEnd();\n    },\n\n    editBadge: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        this.edit_badge_panel = new xabber.EditBadgeView({model: this});\n    },\n\n    checkKeydown: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            $(document.activeElement).blur();\n        }\n    },\n\n    checkKeyup: function (ev) {\n        let $richtextarea = $(ev.target),\n            new_value = $richtextarea.getTextFromRichTextarea().trim();\n        if (ev.target.id === 'edit-nickname') {\n            let has_changes = (new_value !== this.participant.get('nickname'));\n            this.updateButtons(has_changes);\n        }\n    },\n\n    retractUserMessages: function () {\n        utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__header\", [this.participant.get('nickname') || this.participant.get('jid') || this.participant.get('id')]), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (this.participant.get('id')) {\n                    let group_chat = this.account.chats.getChat(this.contact);\n                    group_chat.retractMessagesByUser(this.participant.get('id'));\n                }\n            }\n        });\n    },\n\n    block: function () {\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                this.participant.block(() => {this.close();},\n                    function (error) {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kick: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                this.participant.kick(() => {\n                        this.close();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kickParticipantDialog: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask_extended(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]), null, { ok_button_text: xabber.getString(\"groupchat_kick\"), optional_button: 'block', optional_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                if (result === 'block'){\n                    this.participant.block(() => {\n                            this.close();\n                            this.parent.participants._render();\n                        },\n                        (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                }\n                else{\n                    this.participant.kick(() => {\n                        this.close();\n                        this.parent.participants._render();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n                }\n            }\n        });\n    },\n\n    setVisibility: function (ev) {\n            utils.dialogs.error('Feature not yet implemented')\n    },\n\n    setActualRights: function () {\n        this.$('.rights-wrap').html(\"\");\n        this.data_form.fields && this.data_form.fields.forEach((field) => {\n            field = _.clone(field);\n            if (field.type  === 'list-single' || field.type  === 'fixed' && (!field.values || field.values[0] == 0 || field.values && field.label)) {\n                !field.values && (field.values = []);\n                let attrs = {\n                        pretty_name: field.label,\n                        name: field.var,\n                        expires: field.values ? field.values[0] : undefined\n                    },\n                    restriction_item = $(templates.group_chats.restriction_item({name: attrs.name, pretty_name: attrs.pretty_name, type: field.type})),\n                    restriction_expire;\n                if (field.options) {\n                    restriction_expire = $(templates.group_chats.right_expire_variants({\n                        right_name: ('default-' + attrs.name),\n                        expire_options: field.options\n                    }));\n                    restriction_item.append(restriction_expire);\n                }\n                this.$('.rights-wrap').append(restriction_item);\n                if (attrs.expires) {\n                    this.actual_rights.push({name: attrs.name, expires: attrs.expires});\n                    this.$('.right-item #' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                    if (attrs.expires != 0) {\n                        let $current_restriction = this.$('.right-item.restriction-' + attrs.name);\n                        if ($current_restriction.find('.select-timer .property-value').length)\n                            $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                                .removeClass('default-value')\n                                .text(moment(Number(attrs.expires)*1000).fromNow());\n                        else{\n                            $current_restriction.append($('<div class=\"select-timer\"/>'));\n                            $current_restriction.find('.select-timer').attr('data-value', attrs.expires)\n                                .text(moment(Number(attrs.expires)*1000).fromNow())\n                        }\n                    }\n                }\n            } else if (field.type  === 'fixed')\n                field.values && this.$('.rights-wrap').append($('<div class=\"rights-header\"/>').text(field.values[0]));\n        });\n    },\n\n    getPrivateChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let participant_jid = this.participant.get('jid'),\n            participant_in_roster = this.account.contacts.get(participant_jid);\n        if (!participant_jid || this.contact.get('incognito_chat')) {\n            let iq = $iq({to: this.contact.domain, type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#create`})\n                .c('peer-to-peer', { jid: this.contact.get('jid'),  id: this.participant.get('id')});\n            this.account.sendIQFast(iq, (iq_response) => {\n                let group_jid = $(iq_response).find('query localpart').text() + '@' + this.contact.domain,\n                    contact = this.account.contacts.mergeContact(group_jid);\n                contact.set('group_chat', true);\n                contact.set('subscription_preapproved', true);\n                contact.pres('subscribed');\n                contact.set('known', true);\n                contact.set('removed', false);\n                setTimeout(() => {\n                    contact.pres('subscribe');\n                }, 500);\n                this.close();\n                contact.set('in_roster', true);\n                contact.trigger(\"open_chat\", contact);\n                contact.trigger('remove_invite', contact);\n                let chat = this.account.chats.getChat(contact);\n                chat.messages.createSystemMessage({\n                    from_jid: group_jid,\n                    message: xabber.getString(\"groupchat__private_chat__text_message_init\", [this.participant.get('nickname'), this.contact.get('jid')])\n                });\n            }, (error) => {\n                let $error = $(error),\n                    private_chat_jid = $error.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"] jid`).text();\n                if (private_chat_jid) {\n                    let contact = this.account.contacts.mergeContact(private_chat_jid),\n                        chat = this.account.chats.getChat(contact);\n                    this.close();\n                    chat && chat.trigger('open');\n                    return;\n                }\n                let err_text = $(error).find('text[lang=\"en\"]').text() || $(error).find('text').first().text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        }\n        else {\n            if (participant_in_roster)\n                if (participant_in_roster.get('in_roster')) {\n                    this.close();\n                    participant_in_roster.trigger('open_chat', participant_in_roster);\n                    return;\n                }\n            this.close();\n            xabber.add_contact_view.show({\n                account: this.account,\n                jid: participant_jid\n            });\n        }\n    },\n\n    changeRights: function (ev) {\n        let $target = $(ev.target),\n            $right_item = $target.closest('.right-item'),\n            right_name = $target.prop('id');\n        if ($target.prop('checked')) {\n            if (this.actual_rights && !this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.addClass('changed');\n                else\n                    $right_item.removeClass('changed');\n        }\n        else {\n            if (this.actual_rights && this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else {\n                $right_item.removeClass('changed');\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.find('.timer-item-wrap .property-value').addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\")).attr('data-value', \"\");\n            }\n        }\n        this.updateSaveButton();\n    },\n\n    saveRights: function (ev) {\n        if ($(ev.target).hasClass('non-active'))\n            return;\n        let $btn = $(ev.target),\n            jid = this.account.get('jid'),\n            member_id = this.participant.get('id'),\n            $participant_avatar = this.$('.participant-details-item .circle-avatar'),\n            nickname_value = this.$('.participant-name-input').val(),\n            new_badge = this.$('.participant-badge-input').val(),\n            changed_avatar = this.new_avatar,\n            rights_changed = false,\n            has_changes = false,\n            iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + \"#members\"})\n                .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: member_id});\n        this.$('.buttons-wrap .btn-save-user-rights').addClass('non-active');\n        changed_avatar && $participant_avatar.find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        if (nickname_value != this.participant.get('nickname')) {\n            has_changes = true;\n            iq_changes.c('nickname').t(nickname_value).up();\n        }\n        if (Array.from(new_badge).length > 32)\n            utils.dialogs.error(xabber.getString(\"groupchat__set_badge__error_length\"));\n        else {\n            if (new_badge != this.participant.get('badge')) {\n                has_changes = true;\n                iq_changes.c('badge').t(new_badge).up();\n            }\n        }\n        this.$('.right-item').each((idx, right_item) => {\n            if ($(right_item).hasClass('changed')) {\n                let $right_item = $(right_item),\n                    right_name = $right_item.find('.field input')[0].id;\n                if ($right_item.find('.field input:checked').val()) {\n                    let right_expire = $right_item.find('.select-timer .timer-item-wrap .property-value').attr('data-value'),\n                        field = this.data_form.fields.find(f => f.var === right_name),\n                        field_idx = this.data_form.fields.indexOf(field);\n                    field.values = [right_expire];\n                    this.data_form.fields[field_idx] = field;\n                    rights_changed = true;\n                }\n                else {\n                    let field = this.data_form.fields.find(f => f.var === right_name);\n                    if (field.values.length) {\n                        let field_idx = this.data_form.fields.indexOf(field);\n                        field.values = [];\n                        this.data_form.fields[field_idx] = field;\n                        rights_changed = true;\n                    }\n                }\n            }\n        });\n        if (changed_avatar)\n            this.contact.pubAvatar(changed_avatar, ('#' + member_id), () => {\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                // this.$(`.participant-details-item[data-id=\"${member_id}\"] .circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.$(`.circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.close();\n            }, function (error) {\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                !has_changes && utils.dialogs.error(error_text);\n                this.close();\n            });\n        if (has_changes)\n            this.account.sendIQFast(iq_changes,\n                () => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.participant.set('nickname', nickname_value);\n                    this.close();\n                },\n                (error) => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        if (rights_changed) {\n            let iq_rights_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#rights'});\n            iq_rights_changes = this.account.addDataFormToStanza(iq_rights_changes, this.data_form);\n            this.account.sendIQFast(iq_rights_changes, () => {\n                    this.close();\n                },\n                (error) => {\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        }\n        $btn.blur();\n    }\n});\n\nxabber.EditBadgeView = xabber.BasicView.extend({\n    className: 'modal edit-badge',\n    template: templates.group_chats.badge_edit_view,\n\n    events: {\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-save\": \"saveNewBadge\",\n        \"keydown .badge-text\": \"checkKey\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.participant = this.model.participant;\n        this.$el.openModal({\n            ready: () => {\n                if (this.participant.get('badge'))\n                    this.typeEmoticon(this.participant.get('badge'));\n                else\n                    this.$('.badge-text').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            $target.length && this.typeEmoticon($target.data('emoji'));\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n        }});\n    },\n\n    saveNewBadge: function () {\n        let new_badge = this.$('.badge-text').getTextFromRichTextarea();\n        if (Array.from(new_badge).length > 32)\n            this.$('.modal-content .error').text(xabber.getString(\"groupchat__set_badge__error_length\"));\n        else {\n            if (new_badge != this.participant.get('badge')) {\n                let iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                    .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`})\n                    .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: this.participant.get('id')})\n                    .c('badge').t(new_badge);\n                this.account.sendIQFast(iq_changes, () => {\n                    this.model.updateBadge(new_badge);\n                    this.close();\n                }, () => {\n                    this.$('.modal-content .error').text(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                })\n            }\n        }\n    },\n\n    typeEmoticon: function (emoji) {\n        let emoji_node = emoji.emojify({tag_name: 'span'}),\n            $textarea = this.$('.badge-text');\n        $textarea.focus().pasteHtmlAtCaret(emoji_node);\n    },\n\n    checkKey: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            this.saveNewBadge();\n        }\n    }\n\n});\n\nxabber.DefaultRestrictionsView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-default-restrictions',\n    template: templates.group_chats.default_restrictions,\n    events: {\n        \"click .btn-default-restrictions-save\": \"saveChanges\",\n        \"click .btn-default-restrictions-cancel\": \"close\",\n        \"change #default_restriction_expires\": \"changeExpiresTime\",\n        \"click .group-info-editor .property-variant\": \"changePropertyValue\",\n        \"click .select-timer .property-variant\": \"changeTimerValue\",\n        \"click .clickable-field input\": \"changeRestriction\",\n        \"keyup .clickable-field input\": \"keyUpInput\",\n        \"change .clickable-field input\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.contact.account;\n    },\n\n    open: function () {\n        this.update(() => {\n            this.$el.openModal({\n                ready: () => {\n                    this.$('.select-timer .dropdown-button').dropdown({\n                        inDuration: 100,\n                        outDuration: 100,\n                        constrainWidth: false,\n                        hover: false,\n                        alignment: 'left'\n                    });\n                    this.updateScrollBar();\n                },\n                complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.hide.bind(this);\n            }\n        });\n    },\n\n    update: function (callback) {\n        this.$('.btn-default-restrictions-save').addClass('non-active');\n        this.default_restrictions = [];\n        this.actual_default_restrictions = [];\n        this.$('button').blur();\n        let iq_get_rights = $iq({type: 'get', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n        this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n            this.showDefaultRestrictions(iq_all_rights);\n            callback && callback();\n        }, () => {\n            utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n        });\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked'))\n                    has_changes = true;\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name))\n                    has_changes = true;\n            }\n        });\n        this.$('.btn-default-restrictions-save').switchClass('non-active', !has_changes);\n    },\n\n    changeRestriction: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.prop('checked')) {\n            $target.closest('.right-item').find('.select-timer .property-value').attr('data-value', \"\").addClass('default-value')\n                .text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        }\n    },\n\n    keyUpInput: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER)\n            $(ev.target).click();\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') == 0) {\n            $property_value.addClass('default-value');\n            $property_value.text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked'))\n            $input_item.prop('checked', true);\n        this.updateSaveButton();\n    },\n\n    showDefaultRestrictions: function (iq_all_rights) {\n        let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n        data_form && (this.default_restrictions = _.clone(data_form));\n        data_form.fields.forEach((field) => {\n            if (field.type === 'fixed' || field.type === 'hidden')\n                return;\n            let attrs = {\n                    pretty_name: field.label,\n                    name: field.var,\n                    expires: field.values ? field.values[0] : undefined\n                },\n                view = this.$('.default-restrictions-list-wrap .right-item.restriction-default-' + attrs.name),\n                restriction_item = $(templates.group_chats.restriction_item({name: ('default-' + attrs.name), pretty_name: attrs.pretty_name, type: field.type})),\n                restriction_expire = $(templates.group_chats.right_expire_variants({right_name: ('default-' + attrs.name), expire_options: field.options}));\n            if (view.length)\n                view.detach();\n            restriction_item.append(restriction_expire);\n            this.$('.default-restrictions-list-wrap').append(restriction_item);\n            if (attrs.expires) {\n                this.actual_default_restrictions.push({name: attrs.name, expires: attrs.expires});\n                this.$('.right-item #default-' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                if (attrs.expires != 0) {\n                    let $current_restriction = this.$('.right-item.restriction-default-' + attrs.name);\n                    $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                        .removeClass('default-value')\n                        .text(field.options.find(x => x.value === attrs.expires).label);\n                }\n            }\n        });\n    },\n\n    saveChanges: function () {\n        if (this.$('.btn-default-restrictions-save').hasClass('non-active'))\n            return;\n        this.$('button').blur();\n        let iq_change_default_rights = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`}),\n            has_new_default_restrictions = false,\n            data_form = _.clone(this.default_restrictions);\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked')) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [restriction_expires];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name)) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [\"\"];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n            }\n        });\n\n        if (has_new_default_restrictions) {\n            this.account.addDataFormToStanza(iq_change_default_rights, data_form);\n            this.account.sendIQFast(iq_change_default_rights, () => {\n                this.close();\n            }, (error) => {\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                utils.dialogs.error(err_text);\n                this.close();\n            });\n        }\n    },\n\n    changeExpiresTime: function (ev) {\n        let expire_time_item = $(ev.target),\n            new_expire_time = expire_time_item.val(),\n            $restriction_item = expire_time_item.prev();\n        if (expire_time_item.val() == '0')\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__indefinitely\"));\n        else\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__text_expire\", [Number(new_expire_time)]));\n        $restriction_item .find('input').removeClass().addClass(new_expire_time);\n        expire_time_item.remove();\n    }\n});\n\nxabber.DefaultRestrictionsRightView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-default-restrictions',\n    template: templates.group_chats.default_restrictions_right,\n    events: {\n        \"click .btn-default-restrictions-save\": \"saveChanges\",\n        \"click .btn-default-restrictions-cancel\": \"hideRestrictions\",\n        \"click .btn-back\": \"hideRestrictions\",\n        \"click .btn-reset\": \"showRestrictions\",\n        \"change #default_restriction_expires\": \"changeExpiresTime\",\n        \"click .group-info-editor .property-variant\": \"changePropertyValue\",\n        \"click .select-timer .property-variant\": \"changeTimerValue\",\n        \"click .clickable-field input\": \"changeRestriction\",\n        \"keyup .clickable-field input\": \"keyUpInput\",\n        \"change .clickable-field input\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.contact.account;\n        this.model.set('restrictions_hidden', true)\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'))\n    },\n\n    showRestrictions: function (ev) {\n        this.model.set('restrictions_hidden', false);\n        this.update(() => {\n            this.$('.select-timer .dropdown-button').dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'left'\n            });\n            this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'))\n            this.updateSaveButton()\n        });\n    },\n\n    hideRestrictions: function (ev) {\n        this.parent.hideRestrictions();\n    },\n\n    open: function () {\n        this.update(() => {\n            this.$el.openModal({\n                ready: () => {\n                    this.$('.select-timer .dropdown-button').dropdown({\n                        inDuration: 100,\n                        outDuration: 100,\n                        constrainWidth: false,\n                        hover: false,\n                        alignment: 'left'\n                    });\n                    this.updateScrollBar();\n                },\n                complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n        });\n    },\n\n    update: function (callback) {\n        this.$('.btn-default-restrictions-save').addClass('fade-out');\n        this.default_restrictions = [];\n        this.actual_default_restrictions = [];\n        this.$('button').blur();\n        let iq_get_rights = $iq({type: 'get', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n        this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n            this.showDefaultRestrictions(iq_all_rights);\n            callback && callback();\n        }, () => {\n\n            utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n        });\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked'))\n                    has_changes = true;\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name))\n                    has_changes = true;\n            }\n        });\n        this.$('.btn-default-restrictions-save').switchClass('fade-out', !has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.restrictions-header .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.restrictions-header .details-icon').removeClass('btn-back').addClass('btn-reset')\n            this.$('.restrictions-header .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.restrictions-header .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.restrictions-header .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.restrictions-header .details-icon').addClass('btn-back').removeClass('btn-reset')\n            this.$('.restrictions-header .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.restrictions-header .block-name.second-text').addClass('fade-out');\n        }\n    },\n\n    changeRestriction: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.prop('checked')) {\n            $target.closest('.right-item').find('.select-timer .property-value').attr('data-value', \"\").addClass('default-value')\n                .text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        }\n    },\n\n    keyUpInput: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER)\n            $(ev.target).click();\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') == 0) {\n            $property_value.addClass('default-value');\n            $property_value.text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked'))\n            $input_item.prop('checked', true);\n        this.updateSaveButton();\n    },\n\n    showDefaultRestrictions: function (iq_all_rights) {\n        let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n        data_form && (this.default_restrictions = _.clone(data_form));\n        data_form.fields.forEach((field) => {\n            if (field.type === 'fixed' || field.type === 'hidden')\n                return;\n            let attrs = {\n                    pretty_name: field.label,\n                    name: field.var,\n                    expires: field.values ? field.values[0] : undefined\n                },\n                view = this.$('.default-restrictions-list-wrap .right-item.restriction-default-' + attrs.name),\n                restriction_item = $(templates.group_chats.restriction_item({name: ('default-' + attrs.name), pretty_name: attrs.pretty_name, type: field.type})),\n                restriction_expire = $(templates.group_chats.right_expire_variants({right_name: ('default-' + attrs.name), expire_options: field.options}));\n            if (view.length)\n                view.detach();\n            restriction_item.append(restriction_expire);\n            this.$('.default-restrictions-list-wrap').append(restriction_item);\n            if (attrs.expires) {\n                this.actual_default_restrictions.push({name: attrs.name, expires: attrs.expires});\n                this.$('.right-item #default-' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                if (attrs.expires != 0) {\n                    let $current_restriction = this.$('.right-item.restriction-default-' + attrs.name);\n                    $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                        .removeClass('default-value')\n                        .text(field.options.find(x => x.value === attrs.expires).label);\n                }\n            }\n        });\n    },\n\n    saveChanges: function () {\n        if (this.$('.btn-default-restrictions-save').hasClass('fade-out'))\n            return;\n        this.$('.btn-default-restrictions-save').addClass('fade-out')\n        this.$('.edit-save-preloader.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        this.$('button').blur();\n        let iq_change_default_rights = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`}),\n            has_new_default_restrictions = false,\n            data_form = _.clone(this.default_restrictions);\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked')) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [restriction_expires];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name)) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [\"\"];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n            }\n        });\n\n        if (has_new_default_restrictions) {\n            this.account.addDataFormToStanza(iq_change_default_rights, data_form);\n            this.account.sendIQFast(iq_change_default_rights, () => {\n                this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.hideRestrictions();\n            }, (error) => {\n\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                utils.dialogs.error(err_text);\n                this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.hideRestrictions();\n            });\n        }\n    },\n\n    changeExpiresTime: function (ev) {\n        let expire_time_item = $(ev.target),\n            new_expire_time = expire_time_item.val(),\n            $restriction_item = expire_time_item.prev();\n        if (expire_time_item.val() == '0')\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__indefinitely\"));\n        else\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__text_expire\", [Number(new_expire_time)]));\n        $restriction_item .find('input').removeClass().addClass(new_expire_time);\n        expire_time_item.remove();\n    }\n});\n\nxabber.Participant = Backbone.Model.extend({\n    idAttribute: 'id',\n\n    initialize: function (_attrs, options) {\n        let attrs = _.clone(_attrs);\n        this.model = options.model;\n        this.contact = options.contact ? options.contact : this.model.contact;\n        this.account = this.contact.account;\n        this.on(\"change:avatar\", this.getBase64Avatar, this);\n        this.set(attrs);\n        this.getBase64Avatar();\n    },\n\n    getBase64Avatar: function () {\n        if (!this.get('id'))\n            return;\n        if (this.get('avatar')) {\n            let cached_info = this.account.chat_settings.getAvatarInfoById(this.get('id'));\n            if (cached_info) {\n                if (cached_info.avatar_hash == this.get('avatar')) {\n                    this.set('b64_avatar', cached_info.avatar_b64);\n                    (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n                    return;\n                }\n            }\n            if (this.get('avatar_url')){\n                this.account.chat_settings.updateCachedAvatars(this.get('id'), this.get('avatar'), this.get('avatar_url'));\n                this.set('b64_avatar', this.get('avatar_url'));\n                (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n\n            } else {\n                let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + this.get('id');\n                this.contact.getAvatar(this.get('avatar'), node, (avatar) => {\n                    this.account.chat_settings.updateCachedAvatars(this.get('id'), this.get('avatar'), avatar);\n                    this.set('b64_avatar', avatar);\n                    (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n                });\n\n            }\n        }\n    },\n\n    kick: function (callback, errback) {\n        let id = this.get('id'),\n            jid = this.get('jid'),\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('kick', {xmlns: Strophe.NS.GROUP_CHAT});\n        if (jid)\n            iq.c('jid').t(jid);\n        else\n            iq.c('id').t(id);\n        this.account.sendIQFast(iq, () => {\n            callback && callback();\n        }, (err) => {\n            errback && errback(err);\n        });\n    },\n\n    block: function (callback, errback) {\n        let id = this.get('id'),\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('block', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c('id').t(id);\n        this.account.sendIQFast(iq, () => {\n            callback && callback();\n        }, function (err) {\n            errback && errback(err);\n        });\n    }\n});\n\nxabber.Participants = Backbone.Collection.extend({\n    model: xabber.Participant,\n    comparator: 'nickname',\n\n    initialize: function (models, options) {\n        this.contact = options.contact;\n        this.account = this.contact.account;\n        this.version = this.account.groupchat_settings.getParticipantsListVersion(this.contact.get('jid'));\n        this.getCachedParticipants();\n        this.contact.on(\"update_participants\", this.updateParticipants, this);\n        this.on(\"change:nickname\", this.sort, this);\n    },\n\n    updateVersion: function () {\n        this.version = this.account.groupchat_settings.getParticipantsListVersion(this.contact.get('jid')) || this.version;\n    },\n\n    getCachedParticipants: function () {\n        this.account.groupchat_settings.getParticipantsList(this.contact.get('jid')).forEach((participant) => {\n            this.mergeParticipant(participant);\n        });\n    },\n\n    mergeParticipant: function (attrs) {\n        if (typeof attrs !== \"object\")\n            attrs = {id: attrs};\n        let participant = this.get(attrs.id);\n        if (participant)\n            participant.set(attrs);\n        else {\n            participant = this.create(attrs, {model: this});\n        }\n        return participant;\n    },\n\n    resetParticipants: function () {\n        this.version = 0;\n        _.each(_.clone(this.models), function (participant) {\n            participant.destroy();\n        });\n    },\n\n    getRights: function (rights) {\n        let pretty_rights = [];\n        $(rights).each((idx, permission) => {\n            let name = $(permission).attr('name'),\n                pretty_name = $(permission).attr('translation'),\n                issued_time = $(permission).attr('issued-at'),\n                expires_time = $(permission).attr('expires');\n            pretty_rights.push({\n                name: name,\n                pretty_name: pretty_name,\n                issued_time: issued_time,\n                expires_time: expires_time\n            });\n        });\n        return pretty_rights;\n    },\n\n        updateParticipants: function () {\n            this.participantsRequest({version: this.version}, () => {\n                this.trigger(\"participants_updated\");\n                let chat = this.account.chats.getChat(this.contact);\n                if (chat.item_view) {\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.updatePinnedMessage()\n                }\n            });\n        },\n\n    participantsRequest: function (options, callback, errback) {\n        options = options || {};\n        let participant_id = options.id,\n            version = options.version || 0,\n            iq = $iq({to: this.contact.get('full_jid'), type: 'get'});\n        if (participant_id != undefined) {\n            if (options.properties)\n                iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`, id: participant_id});\n            else\n                iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#rights`}).c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: participant_id});\n        }\n        else\n            iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`, version: version});\n        this.account.sendFast(iq, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            version && (this.version = Number(version));\n            $response.find(`query user`).each((idx, item) => {\n                let $item = $(item),\n                    subscription = $item.find('subscription').text(),\n                    id = $item.attr('id');\n                if (subscription === 'none') {\n                    this.get(id) && this.get(id).destroy();\n                    this.account.groupchat_settings.removeParticipantFromList(this.contact.get('jid'), id);\n                    this.trigger(\"participants_updated\");\n                }\n                else\n                    this.createFromStanza($item);\n            });\n            callback && callback(response);\n        }, (error) => {\n            errback && errback(error);\n        });\n    },\n\n    search: function (query) {\n        let list = [];\n        this.models.forEach((participant) => {\n            let jid = participant.get('jid');\n            if (query) {\n                query = query.toLowerCase();\n                let nickname = participant.get('nickname');\n                if (jid && jid.toLowerCase().indexOf(query) > -1 || nickname && nickname.toLowerCase().indexOf(query) > -1)\n                    list.push(participant);\n            } else\n                list.push(participant);\n        });\n        return list;\n    },\n\n    createFromStanza: function ($item, options) {\n        let jid = $item.find('jid').text(),\n            nickname = $item.find('nickname').text(),\n            id = $item.attr('id'),\n            badge = $item.find('badge').text(),\n            present = $item.find('present').text(),\n            photo = $item.find(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).find('info').attr('id'),\n            photo_url = $item.find(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).find('info').attr('url'),\n            role = $item.find('role').text();\n        !nickname.trim().length && (nickname = jid || id);\n\n        let attrs = {\n            jid: jid,\n            id: id,\n            avatar: photo,\n            avatar_url: photo_url,\n            nickname: nickname,\n            badge: badge,\n            present: present,\n            role: role\n        };\n        (this.contact.get('incognito_chat') && options && options.my_info === true) && (attrs.jid = this.account.get('jid'));\n\n        let participant = this.mergeParticipant(attrs);\n        (this.account.get('jid') === participant.get('jid')) && (this.contact.my_info = participant) && this.contact.trigger('update_my_info');\n        this.account.groupchat_settings.updateParticipant(this.contact.get('jid'), attrs);\n        return participant;\n    }\n});\n\nxabber.GroupChatSettings = Backbone.ModelWithStorage.extend({\n    defaults: {\n        participants_lists: []\n    },\n\n    getParticipantsListVersion: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            result = all_participants_lists.find(list => list.jid === jid);\n        if (result)\n            return result.version;\n        else\n            return 0;\n    },\n\n    setParticipantsListVersion: function (jid, version) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list = all_participants_lists.find(list => list.jid === jid),\n            participants_list_idx = all_participants_lists.indexOf(participants_list);\n        if (participants_list_idx != -1) {\n            all_participants_lists.splice(participants_list_idx, 1);\n        }\n        if (!participants_list) {\n            participants_list = {jid: jid, participants_list: [], version: 0};\n        }\n        else\n            participants_list.version = version;\n        all_participants_lists.push(participants_list);\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    getParticipantsList: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            result = all_participants_lists.find(list => list.jid === jid);\n        if (result && result.participants_list)\n            return result.participants_list;\n        else\n            return [];\n    },\n\n    updateParticipant: function (jid, participant_info) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            chat_participants = all_participants_lists.find(list => list.jid === jid),\n            version = chat_participants && chat_participants.version || 0,\n            participants_list = chat_participants && chat_participants.participants_list || [],\n            participants_list_idx = all_participants_lists.indexOf(chat_participants);\n        if (participants_list.length) {\n            let participant = participants_list.find(participant_item => participant_item.id === participant_info.id),\n                participant_idx = participants_list.indexOf(participant);\n            if (participant_idx != -1)\n                participants_list[participant_idx] = participant_info;\n            else\n                participants_list.push(participant_info);\n        }\n        else\n            participants_list.push(participant_info);\n        if (participants_list_idx != -1) {\n            all_participants_lists.splice(participants_list_idx, 1);\n        }\n        all_participants_lists.push({jid: jid, participants_list: participants_list, version: version});\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    setParticipantsList: function (jid, updated_participants_list) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list = all_participants_lists.find(list => list.jid === jid) || [],\n            participants_list_idx = all_participants_lists.indexOf(participants_list);\n        if (participants_list_idx != -1)\n            all_participants_lists.splice(participants_list_idx, 1);\n        all_participants_lists.push({jid: jid, participants_list: updated_participants_list, version: participants_list.version});\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    removeParticipantFromList: function (jid, participant_id) {\n        let participants_list = this.getParticipantsList(jid);\n        if (participants_list.length) {\n            let participant_idx = participants_list.indexOf(participants_list.find(participant => participant.id === participant_id));\n            if (participant_idx != -1)\n                participants_list.splice(participant_idx, 1);\n            this.setParticipantsList(jid, participants_list);\n        }\n    },\n\n    resetParticipantsList: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list_idx = all_participants_lists.indexOf(all_participants_lists.find(list => list.jid === jid));\n        if (participants_list_idx != -1)\n            all_participants_lists.splice(participants_list_idx, 1);\n        all_participants_lists.push({jid: jid, participants_list: [], version: 0});\n        this.save('participants_lists', all_participants_lists);\n    }\n});\n\nxabber.GroupchatInvitationView = xabber.BasicView.extend({\n    className: 'details-panel invitation-view',\n    template: templates.group_chats.invitation,\n    ps_selector: '.panel-content',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-join\": \"join\",\n        \"click .btn-decline\": \"reject\",\n        \"click .btn-block\": \"blockContact\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.$('.msg-text').text(options.message && options.message.get('message') ? options.message.get('message') : xabber.getString(\"groupchat__public_group__text_invitation\", [this.account.get('jid')]));\n        this.message = options.message;\n        this.model.on(\"change\", this.update, this);\n    },\n\n    render: function () {\n        this.model.set('visible', true);\n        this.updateAvatar();\n        this.updateName();\n    },\n\n    hide: function () {\n        this.trigger('before_hide', this);\n        this.data.set('visible', false);\n        this.model.set('visible', false);\n        this.onHide.apply(this, arguments);\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n    },\n\n    openChat: function () {\n        this.model.set('in_roster', true);\n        this.model.trigger(\"open_chat\", this.model);\n    },\n\n    closeChat: function () {\n        let chat = this.account.chats.getChat(this.model);\n        chat.set({'opened': false, 'display': false, 'active': false, 'is_accepted': undefined});\n        xabber.body.setScreen('all-chats', { right: undefined });\n        chat.item_view.content.readMessages();\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateName: function () {\n        this.$('.main-info  .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name-wrap') == this.model.get('jid')) {\n            this.$('.main-info .name-wrap').addClass('name-is-jid');\n            this.$('.main-info  .jid').text('');\n        }\n        else {\n            this.$('.main-info .name-wrap').removeClass('name-is-jid');\n            this.$('.main-info  .jid').text(this.model.get('jid'));\n        }\n    },\n\n    blockInvitation: function () {\n        if (this.account.connection && this.account.connection.do_synchronization)\n            return;\n        let contact_jid = this.model.get('jid'),\n            iq_get_blocking = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING}),\n            iq_unblocking = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING}),\n            iq_set_blocking = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.model.get('jid') + '/' + moment.now()});\n        this.account.sendIQFast(iq_get_blocking, (iq_blocking_items) => {\n            let items = $(iq_blocking_items).find('item');\n            if (items.length > 0) {\n                items.each(function (idx, item) {\n                    let item_jid = $(item).attr('jid');\n                    if (item_jid.indexOf(contact_jid) > -1)\n                        iq_unblocking.c('item', {jid: item_jid}).up();\n                });\n            }\n            if ($(iq_unblocking.nodeTree).find('item').length)\n                this.account.sendIQFast(iq_unblocking, () => {\n                    this.account.sendIQFast(iq_set_blocking);\n                });\n            else\n                this.account.sendIQFast(iq_set_blocking);\n        });\n    },\n\n    join: function () {\n        let contact = this.model;\n        contact.set('subscription_preapproved', true);\n        contact.pres('subscribed');\n        contact.set('known', true);\n        contact.set('removed', false);\n        setTimeout(() => {\n            contact.pres('subscribe');\n        }, 500);\n        this.blockInvitation();\n        contact.getMyInfo();\n        this.openChat();\n        contact.trigger('remove_invite', contact);\n        let chat = this.account.chats.getChat(this.model);\n    },\n\n    reject: function () {\n        let contact = this.model;\n        this.closeChat();\n        let iq = $iq({to: contact.get('full_jid') || contact.get('jid'), type: 'set'})\n            .c('decline', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`});\n        this.account.sendFast(iq, () => {}, () => {\n            contact.declineRequest();\n            this.blockInvitation();\n        });\n        contact.trigger('remove_invite', contact);\n    },\n\n    blockContact: function () {\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"contact_block\"), xabber.getString(\"block_contact_confirm\", [contact.get('name'), this.account.get('jid')]), null, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done(function (result) {\n            if (result) {\n                contact.trigger('remove_invite', contact);\n                contact.block();\n                xabber.trigger(\"clear_search\");\n            }\n        });\n        this.blockInvitation();\n        this.closeChat();\n        contact.trigger('remove_invite', contact);\n    }\n});\n\nxabber.ContactNameWidget = xabber.InputWidget.extend({\n    field_name: 'contact-name',\n    placeholder: \"\",\n    model_field: 'name',\n\n    setValue: function (value) {\n        if (name === \"\") {\n            this.model.set('roster_name', null);\n            let name = this.getDefaultName();\n            this.model.set('name', name);\n        }\n        this.model.pushInRoster({name: value});\n    },\n\n    showInput: function () {\n        if (this.$input.prop('disabled'))\n            return;\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info'))\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        else {\n            let vcard = this.model.get('vcard');\n            name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || this.model.get('jid');\n        }\n        return name;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n    }\n});\n\nxabber.ContactNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'contact-name',\n    placeholder: \"\",\n    model_field: 'name',\n    template: templates.group_chats.group_name_input_widget,\n\n    setValue: function (value) {\n        if (name === \"\") {\n            this.model.set('roster_name', null);\n            let name = this.getDefaultName();\n            this.model.set('name', name);\n        }\n        this.model.pushInRoster({name: value});\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info'))\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        else {\n            let vcard = this.model.get('vcard');\n            name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || this.model.get('jid');\n        }\n        return name;\n    },\n\n    updateValue: function () {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val()) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('roster_name'))\n                this.$input.val(this.model.get('roster_name'))\n        }\n        if (!this.model.get('roster_name'))\n            this.$value.addClass('name-is-default');\n        else\n            this.$value.removeClass('name-is-default');\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n    },\n});\n\nxabber.GroupNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'group-name',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        if (this.$input.val())\n            this.parent.changeName(value);\n        else\n            this.parent.changeName(this.getDefaultName());\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info') && this.model.get('group_info').name)\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('group_info') && this.model.get('group_info').name)\n                this.$input.val(this.model.get('group_info').name)\n            if (force_reset)\n                this.changeValue();\n        }\n    },\n\n    getValue: function () {\n        if (this.model.get('group_info'))\n            return this.model.get('group_info').name;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n        else\n            this.changeValue();\n\n    },\n});\n\nxabber.ParticipantNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'participant-name',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.updateValue();\n        if (this.$input.val())\n            this.parent.changeName(value);\n        else\n            this.parent.changeName(this.getDefaultName());\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('nickname'))\n            name = this.model.get('nickname');\n        else\n            name = this.model.get('jid');\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('nickname'))\n                this.$input.val(this.model.get('nickname'))\n            if (force_reset)\n                this.changeValue();\n        }\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        if (this.model.get('nickname'))\n            return this.model.get('nickname');\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n        else\n            this.changeValue();\n\n    },\n});\n\nxabber.ParticipantBadgeRightWidget = xabber.InputWidget.extend({\n    field_name: 'participant-badge',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue(true);\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.updateValue();\n        this.parent.changeBadge(value);\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_member_badge\"));\n        if (force_reset) {\n            this.$input.val(value);\n            this.changeValue();\n        }\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        let badge = _.escape(this.model.get('badge'));\n        return badge;\n    },\n\n    keyUp: function () {\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_member_badge\"));\n        this.changeValue();\n    },\n});\n\nxabber.GroupDescriptionRightWidget = xabber.InputWidget.extend({\n    field_name: 'group-description',\n    template: templates.group_chats.description_input_widget,\n    placeholder: \"\",\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.parent.changeDescription(value);\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info') && this.model.get('group_info').description)\n                name = this.model.get('group_info').description;\n        }\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_example_description\"));\n            if (force_reset && this.model.get('group_info'))\n                this.$input.val(this.model.get('group_info').description)\n            if (force_reset)\n                this.changeValue();\n        }\n    },\n\n    keyDown: function (ev) {\n        ev.stopPropagation();\n        let value = this.getValue();\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.$input.removeClass('changed').val(value);\n            this.data.set('input_mode', false);\n        }\n    },\n\n    getValue: function () {\n        if (this.model.get('group_info'))\n            return this.model.get('group_info').description;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_example_description\"));\n        this.changeValue();\n    },\n});\n\nxabber.ContactEditGroupsView = xabber.BasicView.extend({\n    template: templates.groups,\n    events: {\n        'click .group': 'removeGroup',\n        'click .existing-group-field': 'editGroup',\n        'change .new-group-name input': 'checkNewGroup',\n        'keyup .new-group-name input': 'checkNewGroup',\n        'click .new-group-checkbox': 'addNewGroup',\n        \"keyup #new-group-name\": \"keyupAddNewGroup\",\n        \"focusin #new-group-name\": \"focusinAddNewGroup\",\n        \"focusout #new-group-name\": \"focusoutAddNewGroup\",\n        \"keydown #new-group-name\": \"keydownAddNewGroup\",\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('groups_hidden', true)\n        this.model.on(\"change:in_roster update_groups\", this.onUpdate, this);\n    },\n\n    render: function (view, args) {\n        this.$el.html(this.template());\n        if (this.model.get('in_roster')) {\n            let groups = _.clone(this.model.get('groups')),\n                all_groups = _.map(this.account.groups.notSpecial(), function (group) {\n                    let name = group.get('name');\n                    return {name: name, checked: _.contains(groups, name), id: uuid()};\n                }),\n                all_groups_unchecked = all_groups.filter(function(group) {\n                    if (group.checked)\n                        return false;\n                    return true;\n                }).length;\n            if (all_groups_unchecked)\n                this.$('.groups-wrap').removeClass('empty-groups-wrap')\n            else\n                this.$('.groups-wrap').addClass('empty-groups-wrap')\n\n            this.$('.checkbox-list').html(templates.groups_checkbox_list({\n                groups: all_groups\n            })).appendTo(this.$('.groups-wrap'));\n            this.ps_container = this.$('.checkbox-list');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.scrollToTop();\n            if (groups.length)\n                this.$('.groups').html(templates.groups_list({\n                    groups: all_groups\n                })).appendTo(this.$('.groups-wrap-list'));\n            else\n                this.$('.groups').html('<div class=\"empty-groups\">'+ xabber.getString(\"contact_circles_empty\") + '</div>')\n            this.$('.groups').append(templates.groups_new_group());\n\n        }\n        this.$el.showIf(this.model.get('in_roster'));\n        if (args && args.on_add) {\n            this.$('.groups-wrap').hideIf(false)\n            this.$('.input-field input').focus();\n        }\n        else\n            this.$('.groups-wrap').hideIf(true)\n        this._update_template = false;\n        this.parent.updateScrollBar();\n    },\n\n    onUpdate: function (ev) {\n        if (this._update_template){\n            this.render(this, {on_add: true});\n            this.$('.new-group-name input').focus();\n        }\n        else{\n            this.render();\n        }\n\n    },\n\n    removeGroup: function (ev) {\n        let $target = $(ev.target).closest('.group'),\n            group_name = $target.attr('data-groupname'),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(group_name);\n        if (idx >= 0) {\n            groups.splice(idx, 1);\n        }\n        this._update_template = false\n        this.model.pushInRoster({groups: groups});\n    },\n\n    removeLastGroup: function (ev) {\n        let groups = _.clone(this.model.get('groups'));\n        if (groups.length) {\n            groups.pop();\n            this._update_template = true\n            this.model.pushInRoster({groups: groups});\n        }\n    },\n\n    editGroup: function (ev) {\n        clearTimeout(this._hide_timeout)\n        let $target = $(ev.target).closest('.input-field'),\n            $input = $target.find('input'),\n            checked = !$input.prop('checked'),\n            group_name = $input.attr('data-groupname'),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(group_name);\n        $input.prop('checked', checked);\n        if (checked) {\n            groups.push(group_name);\n        } else if (idx >= 0) {\n            groups.splice(idx, 1);\n        }\n        this._update_template = true\n        this.model.pushInRoster({groups: groups});\n    },\n\n    checkNewGroup: function (ev) {\n        let name = $(ev.target).val(),\n            $checkbox = this.$('.new-group-checkbox');\n        $checkbox.showIf(name && !this.account.groups.get(name));\n    },\n\n    keyupAddNewGroup: function (ev) {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val();\n        if (ev.keyCode === constants.KEY_ENTER && name) {\n            this.addNewGroup();\n        }\n    },\n\n    keydownAddNewGroup: function (ev) {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val();\n        if (ev.keyCode === constants.KEY_BACKSPACE && !name) {\n            this.removeLastGroup();\n        }\n    },\n\n    focusinAddNewGroup: function (ev) {\n        clearTimeout(this._hide_timeout)\n        this.$('.groups-wrap').hideIf(false)\n        this.$('.empty-groups').hideIf(true)\n    },\n\n    focusoutAddNewGroup: function (ev) {\n        this.$('.empty-groups').hideIf(false)\n        if (this.$('.new-group-name input').val())\n            this.addNewGroup();\n        this._hide_timeout = setTimeout(() => {\n            this.$('.groups-wrap').hideIf(true)\n            this.$('.new-group-name input').val('')\n        }, 100)\n    },\n\n    addNewGroup: function () {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val(),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(name);\n        if (idx < 0) {\n            groups.push(name);\n        }\n        this.model.pushInRoster({groups: groups});\n        this._update_template = true\n    }\n});\n\nxabber.ContactEditView = xabber.BasicView.extend({\n    template: templates.edit_contact,\n    events: {\n        'click .btn-back': 'hideEdit',\n        'click .btn-request': 'requestSubscription',\n        'click .btn-allow': 'allowSubscription',\n        'click .btn-cancel-request': 'cancelSubscriptionRequest',\n        'click .btn-allow-request': 'handleSubscriptionRequest',\n        'click .btn-disallow-request': 'cancelSubscriptionIn',\n        'click .btn-disallow-preapproved': 'cancelSubscriptionIn',\n        'click .btn-cancel-subscription-out': 'cancelSubscriptionOut',\n        'click .btn-cancel-subscription-in': 'cancelSubscriptionIn',\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('edit_hidden', true)\n        this.model.on(\"change:status_updated\", this.updateStatuses, this);\n        this.model.on(\"change:subscription\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_preapproved\", this.updateStatuses, this);\n        this.model.on(\"change:blocked\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_request_in\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_request_out\", this.updateStatuses, this);\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n        this.name_field = new xabber.ContactNameRightWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.$('.status-out.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.status-in.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.updateStatuses();\n    },\n\n    showEdit: function () {\n        this.model.set('edit_hidden', false);\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n    },\n\n    updateStatuses: function () {\n        let statuses = this.model.getSubscriptionStatuses(),\n            subscription_preapproved = this.model.get('subscription_preapproved');\n        if (statuses){\n            this.$('.status-out').addClass(statuses.status_out_class)\n            this.$('.status-out .value').text(statuses.status_out)\n            this.$('.status-out').showIf(statuses.status_out)\n            this.$('.status-in').addClass(statuses.status_in_class)\n            this.$('.status-in  .value').text(statuses.status_in)\n            this.$('.status-in').showIf(statuses.status_in)\n            this.$('.status-description .value').html(statuses.status_description)\n            this.$('.status-description').showIf(statuses.status_description)\n            this.$('.btn-delete').hideIf(!this.model.get('in_roster'));\n            if (statuses.status_out_color === 'request') {\n                this.$('.status-out').addClass('text-color-500').addClass('request').removeClass('subbed')\n                this.$('.status-out').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === 'request') {\n                this.$('.status-in').addClass('text-color-500').addClass('request').removeClass('subbed')\n                this.$('.status-in').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_out_color === 'subbed') {\n                this.$('.status-out').addClass('text-color-500').addClass('subbed').removeClass('request')\n                this.$('.status-out').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === 'subbed') {\n                this.$('.status-in').addClass('text-color-500').addClass('subbed').removeClass('request')\n                this.$('.status-in').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_out_color === '') {\n                this.$('.status-out').removeClass('text-color-500').removeClass('request').removeClass('subbed')\n                this.$('.status-out').removeClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === '') {\n                this.$('.status-in').removeClass('text-color-500').removeClass('request').removeClass('subbed')\n                this.$('.status-in').removeClass('text-decoration-color-300')\n            }\n            this.$('.btn-request').hideIf(!(statuses.status_out_color === ''))\n            this.$('.btn-allow').hideIf(!(statuses.status_in_color === '' && !subscription_preapproved))\n            this.$('.btn-disallow-preapproved').hideIf(!(statuses.status_in_color === '' && subscription_preapproved))\n            this.$('.btn-cancel-request').hideIf(!(statuses.status_out_color === 'request'))\n            this.$('.btn-allow-request').hideIf(!(statuses.status_in_color === 'request'))\n            this.$('.btn-disallow-request').hideIf(!(statuses.status_in_color === 'request'))\n            this.$('.btn-cancel-subscription-out').hideIf(!(statuses.status_out_color === 'subbed'))\n            this.$('.btn-cancel-subscription-in').hideIf(!(statuses.status_in_color === 'subbed'))\n        }\n    },\n\n    requestSubscription: function () {\n        this.model.askRequest();\n    },\n\n    allowSubscription: function () {\n        this.model.acceptRequest();\n        !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && this.set('subscription_preapproved', true)\n    },\n\n    cancelSubscriptionRequest: function () {\n        this.model.declineSubscription();\n    },\n\n    handleSubscriptionRequest: function () {\n        this.model.acceptRequest();\n    },\n\n    cancelSubscriptionOut: function () {\n        this.model.declineSubscription();\n    },\n\n    cancelSubscriptionIn: function () {\n        this.model.declineSubscribe();\n        this.model.set('subscription_request_in', false);\n    },\n\n    hideEdit: function (ev) {\n        this.model.set('edit_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        };\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'));\n    },\n});\n\nxabber.GroupEditView = xabber.BasicView.extend({\n    template: templates.edit_group,\n    events: {\n        \"click .btn-save\": \"saveChanges\",\n        'click .edit-header:not(.property-header) .btn-back': 'hideEdit',\n        'click .btn-reset': 'resetPanel',\n        'click .btn-edit': 'showDescriptionProperty',\n        'click .btn-back-panel': 'hidePanel',\n        'click .membership-field .property-radio input': 'changeMembership',\n        'click .index-field .property-radio input ': 'changeIndex',\n        'click .index-property:not(.property-disabled)': 'showIndexProperty',\n        'click .membership-property:not(.property-disabled)': 'showMembershipProperty',\n        'click .btn-back.btn-property-back': 'hideProperty',\n        \"click .list-variant\": \"showPanel\",\n        \"click .revoke-invitation\": \"revokeInvitation\",\n        \"click .btn-reset-panel\": \"deselectParticipants\",\n        \"click .btn-remove-selected\": \"actionSelectedParticipants\",\n        \"click .participants-edit-wrap .list-item\": \"selectParticipant\",\n        \"click .unblock-user\": \"unblockUser\",\n        \"click .set-groupchat-avatar-text\": \"clickAvatarInput\",\n        \"click .btn-add-block\": \"blockId\",\n        \"keydown .field-input\": \"keyDownName\",\n        \"keyup .field-input\": \"keyUp\",\n        \"focusout .field-input\": \"changeValue\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('edit_hidden', true)\n        this.model.on('change:group_info', this.update, this)\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n        this.$('.index-property-edit-wrap').hideIf(true)\n        this.$('.membership-property-edit-wrap').hideIf(true)\n        this.$('.description-edit-wrap').hideIf(true)\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.property-dropdown').dropdown(dropdown_settings);\n        // this.name_field = new xabber.ContactNameRightWidget({\n        //     el: this.$('.name-wrap')[0],\n        //     model: this.model\n        // });\n        this.group_name_field = new xabber.GroupNameRightWidget({\n            el: this.$('.edit-group-name-wrap')[0],\n            model: this.model,\n            parent: this,\n        });\n        this.group_description_field = new xabber.GroupDescriptionRightWidget({\n            el: this.$('.edit-group-description-wrap')[0],\n            model: this.model,\n            parent: this,\n        });\n        this.update();\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {},\n            model, searchable, privacy;\n        if (info){\n            if (info.privacy === 'public')\n                privacy = xabber.getString(\"groupchat_public_group\");\n            if (info.privacy === 'incognito')\n                privacy = xabber.getString(\"groupchat_incognito_group\");\n            if (info.searchable === 'none') {\n                searchable = xabber.getString(\"groupchat_index_type_none\");\n                this.$('.property-wrap #none').prop(\"checked\", true);\n            }\n            if (info.searchable === 'local') {\n                searchable = xabber.getString(\"groupchat_index_type_local\");\n                this.$('.property-wrap #local').prop(\"checked\", true);\n            }\n            if (info.searchable === 'global') {\n                searchable = xabber.getString(\"groupchat_index_type_global\");\n                this.$('.property-wrap #global').prop(\"checked\", true);\n            }\n            if (info.model === 'open') {\n                model = xabber.getString(\"groupchat_membership_type_open\");\n                this.$('.property-wrap #open').prop(\"checked\", true);\n            }\n            if (info.model === 'member-only') {\n                model = xabber.getString(\"groupchat_membership_type_members_only\");\n                this.$('.property-wrap #member-only').prop(\"checked\", true);\n            }\n        }\n        this.$('.main-edit-header .block-name:not(.second-text)').text(privacy);\n        this.$('.membership-property span').text(model);\n        this.$('.index-property span').text(searchable);\n        this.$('.edit-group-name').text(info.name);\n        this.$('.edit-group-description').text(info.description);\n        this.group_name_field && this.group_name_field.updateValue(true);\n        this.group_description_field && this.group_description_field.updateValue(true);\n        this.$('.btn-save').switchClass('fade-out', true);\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values);\n        if (is_owner){\n            let iq_get_rights = $iq({type: 'get', to: this.model.get('full_jid') || this.model.get('jid')})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n            this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n                let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`)),\n                    restrictions_count = 0;\n                data_form.fields.forEach((field) => {\n                    if (field.type === 'fixed' || field.type === 'hidden')\n                        return;\n                    let expires = field.values ? field.values[0] : undefined;\n                    if (expires) {\n                        restrictions_count++;\n                    }\n                });\n                if (restrictions_count === 0)\n                    restrictions_count = '';\n                this.$('.btn-default-restrictions .edit-button-value').text(restrictions_count);\n            }, () => {\n                utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n            });\n        }\n        this.updateAvatar();\n\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    showMembershipProperty: function () {\n        this.$('.membership-property-edit-wrap').hideIf(false)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    showIndexProperty: function () {\n        this.$('.index-property-edit-wrap').hideIf(false)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    showDescriptionProperty: function () {\n        this.$('.description-edit-wrap').hideIf(false)\n        this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideProperty: function () {\n        this.$('.index-property-edit-wrap').hideIf(true)\n        this.$('.description-edit-wrap').hideIf(true)\n        this.$('.membership-property-edit-wrap').hideIf(true)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    revokeInvitation: function (ev) {\n        let $member_item = $(ev.target).closest('.invitations-user');\n        if (this.parent.children && this.parent.children.invitations)\n            this.parent.children.invitations.revokeInvitation(ev)\n    },\n\n    showBlockButton: function (ev) {\n        this.$('.edit-bottom-block .btn-add-block').hideIf(false);\n    },\n\n    showInviteButton: function (ev) {\n        this.$('.edit-bottom-block .btn-invite').hideIf(false);\n    },\n\n    unblockUser: function (ev) {\n        if (this.parent.children && this.parent.children.blocked)\n            this.parent.children.blocked.unblockUser(ev)\n    },\n\n    actionSelectedParticipants: function (ev) {\n        let selected = this.$('.list-item.selected');\n        selected.each((index, item) => {\n            if ($(item).hasClass('invitations-user') && this.parent.children && this.parent.children.invitations)\n                this.parent.children.invitations.revokeInvitationByElement($(item))\n            if ($(item).hasClass('blocked-user') && this.parent.children && this.parent.children.blocked)\n                this.parent.children.blocked.unblockUserByElement($(item))\n            if ($(item).hasClass('blocked-user') || $(item).hasClass('invitations-user'))\n                $(item).removeClass('selected')\n        });\n        this.updateRemoveParticipantButton();\n    },\n\n    blockId: function () {\n        if (this.parent.children && this.parent.children.blocked)\n            this.parent.children.blocked.blockId()\n    },\n\n    deselectParticipants: function (ev) {\n        this.$('.list-item.selected').removeClass('selected')\n        this.updateRemoveParticipantButton();\n    },\n\n    selectParticipant: function (ev) {\n        if ($(ev.target).parent().hasClass('revoke-invitation') || $(ev.target).parent().hasClass('unblock-user') ||\n            $(ev.target).hasClass('revoke-invitation') || $(ev.target).hasClass('unblock-user'))\n            return;\n        let $member_item = $(ev.target).closest('.list-item'),\n            is_selected = $member_item.hasClass('selected');\n        $member_item.switchClass('selected', !is_selected)\n        this.updateRemoveParticipantButton();\n    },\n\n    updateRemoveParticipantButton: function () {\n        let has_changes = this.$('.list-item.selected').length;\n        this.$('.block-name-panel.second-text span').html(has_changes)\n        if (has_changes) {\n            this.$('.participants-edit-back').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.participants-edit-back').removeClass('btn-back-panel').addClass('btn-reset-panel')\n            this.$('.block-name-panel:not(.second-text)').addClass('fade-out');\n            this.$('.edit-bottom-block .btn-invite').addClass('fade-out');\n            this.$('.edit-bottom-block .btn-add-block').addClass('fade-out');\n            this.$('.block-name-panel.second-text').removeClass('fade-out');\n            this.$('.btn-remove-selected').removeClass('fade-out');\n        }\n        else{\n            this.$('.participants-edit-back').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.participants-edit-back').addClass('btn-back-panel').removeClass('btn-reset-panel')\n            this.$('.block-name-panel:not(.second-text)').removeClass('fade-out');\n            this.$('.edit-bottom-block .btn-invite').removeClass('fade-out');\n            this.$('.edit-bottom-block .btn-add-block').removeClass('fade-out');\n            this.$('.block-name-panel.second-text').addClass('fade-out');\n            this.$('.btn-remove-selected').addClass('fade-out');\n        }\n    },\n\n    clickAvatarInput: function (ev) {\n        this.$('.circle-avatar input').click();\n    },\n\n    hidePanel: function () {\n        this.parent.getInvitations((response) => {\n            let inv_count = $(response).find('query').find('user').length;\n            if (inv_count === 0)\n                inv_count = '';\n            this.$('.invitations-variant .counted').html(inv_count);\n        });\n        this.model.getBlockedParticipants((response) => {\n            let blocked_count = $(response).find('query').children().length;\n            if (blocked_count === 0)\n                blocked_count = '';\n            this.$('.blocked-variant .counted').html(blocked_count);\n        });\n        this.$('.btn-back-panel').hideIf(true)\n        this.$('.block-name-panel').hideIf(true)\n        this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n        this.$('.edit-bottom-block .btn-invite').hideIf(true)\n        this.$('.btn-remove-selected').hideIf(true)\n        this.$('.participants-edit-wrap').hideIf(true)\n        // if (this.ps_container.length) {\n        //     this.ps_container.perfectScrollbar('destroy')\n        // }\n        // this.ps_container = this.$('.edit-wrap');\n        // if (this.ps_container.length) {\n        //     this.ps_container.perfectScrollbar(\n        //         _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n        //     );\n        // }\n        // this.hideEdit();\n    },\n\n    showPanel: function () {\n        this.$('.btn-back-panel').hideIf(false)\n        this.$('.block-name-panel').hideIf(false)\n        this.$('.btn-remove-selected').hideIf(false)\n        this.$('.participants-edit-wrap').hideIf(false)\n        this.updateRemoveParticipantButton();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.ps_container = this.$('.participants-edit-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    resetPanel: function () {\n        this.updateSaveButton()\n        this.showEdit()\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null;\n            if ((field.var in this.original_data_form_values) && this.original_data_form_values[field.var] != value) {\n                has_changes = true;\n            }\n        });\n        this.$('.btn-save').switchClass('fade-out', !has_changes);\n        this.$('.btn-qr-code').hideIf(has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.edit-header:not(.main-edit-header) .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.edit-header:not(.main-edit-header) .details-icon').removeClass('btn-back').addClass('btn-reset')\n            this.$('.edit-header:not(.main-edit-header) .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.edit-header:not(.main-edit-header) .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.edit-header:not(.main-edit-header) .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.edit-header:not(.main-edit-header) .details-icon').addClass('btn-back').removeClass('btn-reset')\n            this.$('.edit-header:not(.main-edit-header) .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.edit-header:not(.main-edit-header) .block-name.second-text').addClass('fade-out');\n        }\n        let info = this.model.get('group_info') || {};\n        if (info){\n            if (info.privacy === 'public')\n                this.$('.main-edit-header .block-name:not(.second-text)').html(xabber.getString(\"groupchat_public_group\"));\n            if (info.privacy === 'incognito')\n                this.$('.main-edit-header .block-name:not(.second-text)').html(xabber.getString(\"groupchat_incognito_group\"));\n        }\n    },\n\n    changeName: function (value) {\n        if (this.data_form && value){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'name')\n            if (!this.original_data_form_values.name)\n                this.original_data_form_values.name = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [value]\n            this.updateSaveButton()\n        }\n    },\n\n    changeDescription: function (value) {\n        if (this.data_form){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'description')\n            if (!this.original_data_form_values.description)\n                this.original_data_form_values.description = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [value]\n            this.updateSaveButton()\n        }\n    },\n\n    changeMembership: function (ev) {\n        let membership = $(ev.target).attr('id'),\n            membership_text;\n        if (this.data_form && membership){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'membership')\n            if (!this.original_data_form_values.membership)\n                this.original_data_form_values.membership = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [membership]\n            if (membership === 'open')\n                membership_text = xabber.getString(\"groupchat_membership_type_open\");\n            if (membership === 'member-only')\n                membership_text = xabber.getString(\"groupchat_membership_type_members_only\");\n            this.$('.membership-property span').text(membership_text);\n            this.updateSaveButton()\n        }\n    },\n\n    changeIndex: function (ev) {\n        let index = $(ev.target).attr('id'),\n            index_text;\n        if (this.data_form && index){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'index')\n            if (!this.original_data_form_values.index)\n                this.original_data_form_values.index = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [index]\n            if (index === 'none')\n                index_text = xabber.getString(\"groupchat_index_type_none\");\n            if (index === 'local')\n                index_text = xabber.getString(\"groupchat_index_type_local\");\n            if (index === 'global')\n                index_text = xabber.getString(\"groupchat_index_type_global\");\n            this.$('.index-property span').text(index_text);\n            this.updateSaveButton()\n        }\n    },\n\n\n    saveChanges: function() {\n        if (this.$('.btn-save').hasClass('fade-out'))\n            return;\n        this.$('.btn-save').addClass('fade-out')\n        this.group_name_field.$input.prop('disabled', true);\n        this.group_description_field.$input.prop('disabled', true);\n        this.$('.edit-save-preloader.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        let iq = $iq({type: 'set', to: this.model.get('full_jid') || this.model.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        iq = this.account.addDataFormToStanza(iq, this.data_form);\n        this.account.sendIQFast(iq, (result) => {\n            let $result  = $(result),\n                group_info = _.clone(this.model.get('group_info')),\n                attrs = {\n                    name: $result.find('field[var=\"name\"] value').text(),\n                    searchable: $result.find('field[var=\"index\"]').children('value').text(),\n                    model: $result.find('field[var=\"membership\"]').children('value').text(),\n                    description: $result.find('field[var=\"description\"] value').text(),\n                    status: $result.find('field[var=\"status\"]').children('value').text()\n                };\n            _.extend(group_info, attrs);\n            this.model.set('group_info', group_info);\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.hideProperty()\n            this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n            this.resetPanel()\n        }, (error) => {\n\n            let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n            utils.dialogs.error(err_text);\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.hideProperty()\n            this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n        });\n    },\n\n    showEdit: function (ev) {\n        let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        this.parent.$('.group-edit-preloader').html(env.templates.contacts.preloader())\n        this.account.sendIQFast(iq_get_properties, (properties) => {\n            this.data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.original_data_form_values = {}\n            this.model.set('edit_hidden', false);\n            this.parent.scrollToTop();\n            if (this.parent.ps_container.length) {\n                this.parent.ps_container.perfectScrollbar('destroy')\n            }\n            this.ps_container = this.$('.edit-wrap');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.update()\n            this.$('.group-property:not(.privacy-property)').removeClass('disabled')\n            this.group_name_field.$input.hideIf(false)\n            this.group_description_field.$input.hideIf(false)\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.$('.circle-avatar input').prop('disabled', false);\n            this.$('.set-groupchat-avatar-text').hideIf(false);\n            this.$('.group-property').removeClass('property-disabled');\n            this.$('.membership-property .details-icon-right').hideIf(false);\n            this.$('.index-property .details-icon-right').hideIf(false);\n            this.$('.circle-avatar .set-groupchat-avatar').hideIf(false);\n            this.$('.btn-edit').hideIf(false)\n            this.$('.edit-bottom-block').hideIf(false)\n            this.$('.btn-default-restrictions').hideIf(false)\n            this.$('.btn-delete-group').hideIf(false)\n            this.$('.btn-clear-history-chat').hideIf(false)\n            this.$('.btn-back-panel').hideIf(true)\n            this.$('.block-name-panel').hideIf(true)\n            this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n            this.$('.edit-bottom-block .btn-invite').hideIf(true)\n            this.$('.btn-remove-selected').hideIf(true)\n            this.$('.participants-edit-wrap').hideIf(true)\n            this.parent.getInvitations((response) => {\n                let inv_count = $(response).find('query').find('user').length;\n                if (inv_count === 0)\n                    inv_count = '';\n                this.$('.invitations-variant .counted').html(inv_count);\n            });\n            this.model.getBlockedParticipants((response) => {\n                let blocked_count = $(response).find('query').children().length;\n                if (blocked_count === 0)\n                    blocked_count = '';\n                this.$('.blocked-variant .counted').html(blocked_count);\n            });\n            this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n            this.parent.$('.group-edit-preloader').html('')\n            this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n            this.$('.tabs .indicator').remove();\n        }, () => {\n            this.model.set('edit_hidden', false);\n            this.parent.scrollToTop();\n            if (this.parent.ps_container.length) {\n                this.parent.ps_container.perfectScrollbar('destroy')\n            }\n            this.ps_container = this.$('.edit-wrap');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.update()\n            this.group_name_field.$input.prop('disabled', true);\n            this.group_description_field.$input.prop('disabled', true);\n            if (!this.group_description_field.$input.val())\n                this.group_description_field.$input.hideIf(true)\n            this.$('.circle-avatar input').prop('disabled', true);\n            this.$('.set-groupchat-avatar-text').hideIf(true);\n            this.$('.group-property').addClass('property-disabled');\n            this.$('.membership-property .details-icon-right').hideIf(true);\n            this.$('.index-property .details-icon-right').hideIf(true);\n            this.$('.circle-avatar .set-groupchat-avatar').hideIf(true);\n            this.$('.group-property:not(.privacy-property)').addClass('disabled')\n            this.$('.btn-edit').hideIf(true)\n            this.$('.edit-bottom-block').hideIf(true)\n            this.$('.btn-default-restrictions').hideIf(true)\n            this.$('.btn-delete-group').hideIf(true)\n            this.$('.btn-clear-history-chat').hideIf(true)\n            this.$('.btn-back-panel').hideIf(true)\n            this.$('.block-name-panel').hideIf(true)\n            this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n            this.$('.edit-bottom-block .btn-invite').hideIf(true)\n            this.$('.btn-remove-selected').hideIf(true)\n            this.$('.participants-edit-wrap').hideIf(true)\n            let info = this.model.get('group_info') || {};\n            this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n            this.parent.$('.group-edit-preloader').html('')\n            this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n            this.$('.tabs .indicator').remove();\n        });\n    },\n\n    hideEdit: function (ev) {\n        this.model.set('edit_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        };\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'));\n    },\n});\n\nxabber.ContactsBase = Backbone.Collection.extend({\n    model: xabber.Contact\n});\n\nxabber.GroupContacts = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.group = options.group;\n        this.on(\"change\", this.onContactChanged, this);\n    },\n\n    comparator: function (contact1, contact2) {\n        if (xabber.settings.roster.sorting === 'online-first') {\n            let s1 = contact1.get('status'),\n                s2 = contact2.get('status'),\n                sw1 = constants.STATUS_WEIGHTS[s1],\n                sw2 = constants.STATUS_WEIGHTS[s2],\n                sw1_offline = sw1 >= constants.STATUS_WEIGHTS.offline,\n                sw2_offline = sw2 >= constants.STATUS_WEIGHTS.offline;\n            if (sw1_offline ^ sw2_offline) {\n                return sw1_offline ? 1 : -1;\n            }\n        }\n        let name1, name2;\n        name1 = contact1.get('name').toLowerCase();\n        name2 = contact2.get('name').toLowerCase();\n        return name1 < name2 ? -1 : (name1 > name2 ? 1 : 0);\n    },\n\n    onContactChanged: function (contact) {\n        let changed = contact.changed;\n        if (_.has(changed, 'name') || _.has(changed, 'status_updated')) {\n            this.sort();\n            this.trigger('update_contact_item', contact);\n        }\n    }\n});\n\nxabber.Group = Backbone.Model.extend({\n    defaults: {\n        counter: {all: 0, online: 0}\n    },\n\n    initialize: function (attrs, options) {\n        this.account = options.account;\n        attrs.name || (attrs.name = attrs.id);\n        this.set(attrs);\n        this._settings = this.account.groups_settings.get(attrs.name);\n        if (!this._settings)\n            this._settings = this.account.groups_settings.create({name: attrs.name});\n        this.settings = this._settings.attributes;\n        this.contacts = new xabber.GroupContacts(null, {group: this});\n        this.settings_view = new xabber.GroupSettingsView({model: this});\n        this.contacts.on(\"add update_contact_item\", this.updateCounter, this);\n        this.contacts.on(\"destroy\", this.onContactRemoved, this);\n        xabber._roster_settings.on(\"change\", this.onChangedRosterSettings, this);\n    },\n\n    isSpecial: function () {\n        return _.isNumber(this.get('id'));\n    },\n\n    updateCounter: function () {\n        let all = this.contacts.length,\n            online = all - this.contacts.where({status: 'offline'}).length;\n        this.set('counter', {all: all, online: online});\n    },\n\n    renameGroup: function (new_name) {\n        let name = this.get('name'),\n            attrs = _.clone(this.settings);\n        attrs.name = new_name;\n        this._settings.destroy();\n        this._settings = this.account.groups_settings.create(attrs);\n        this.settings = this._settings.attributes;\n        this.set({id: new_name, name: new_name});\n        this.trigger('rename', this, name);\n        _.each(_.clone(this.contacts.models), function (contact) {\n            let groups = _.clone(contact.get('groups')),\n                index = groups.indexOf(name);\n            if (index >= 0) {\n                groups.splice(index, 1);\n            }\n            index = groups.indexOf(new_name);\n            if (index < 0) {\n                groups.push(new_name);\n            }\n            contact.pushInRoster({groups: groups});\n        });\n    },\n\n    deleteGroup: function () {\n        let name = this.get('name');\n        this._settings.destroy();\n        _.each(_.clone(this.contacts.models), function (contact) {\n            let groups = _.clone(contact.get('groups')),\n                index = groups.indexOf(name);\n            if (index >= 0) {\n                groups.splice(index, 1);\n            }\n            contact.pushInRoster({groups: groups});\n        });\n    },\n\n    removeContact: function (contact) {\n        if (this.contacts.get(contact)) {\n            this.contacts.remove(contact);\n            this.onContactRemoved(contact);\n        }\n    },\n\n    onContactRemoved: function (contact) {\n        this.updateCounter();\n        this.trigger('remove_contact', contact);\n        this.contacts.length || this.destroy();\n    },\n\n    onChangedRosterSettings: function () {\n        let changed = xabber._roster_settings.changed;\n        if (_.has(changed, 'show_offline')) {\n            this._settings.trigger('change:show_offline');\n        }\n        if (_.has(changed, 'sorting')) {\n            this.contacts.sort();\n            this._settings.trigger('change:sorting');\n        }\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    }\n});\n\nxabber.GroupView = xabber.BasicView.extend({\n    className: 'roster-group',\n    events: {\n        \"click .group-head\": \"toggle\",\n        \"click .group-head .group-icon\": \"showGroupSettings\",\n        \"mouseover .group-head\": \"showSettingsIcon\",\n        \"mouseleave .group-head\": \"updateGroupIcon\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.updateName();\n        this.updateGroupIcon();\n        this.updateMembersCounter();\n        this.model.contacts.on(\"add\", this.onContactAdded, this);\n        this.model.on(\"remove_contact\", this.onContactRemoved, this);\n        this.model.contacts.on(\"update_contact_item\", this.updateContactItem, this);\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:counter\", this.updateMembersCounter, this);\n        this.model._settings.on(\"change:show_offline\", this.onChangedOfflineSetting, this);\n        this.model._settings.on(\"change:sorting\", this.onChangedSortingSetting, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$el.switchClass('shrank', !expanded);\n        this.$('.arrow').switchClass('mdi-chevron-down', expanded);\n        this.$('.arrow').switchClass('mdi-chevron-right', !expanded);\n        this.$('.roster-contact').showIf(expanded);\n        this.parent.parent.onListChanged();\n    },\n\n    updateGroupIcon: function () {\n        let mdi_icon, show_offline = this.model.settings.show_offline;\n        if (show_offline === 'default') {\n            mdi_icon = 'settings';\n        } else if (show_offline === 'yes') {\n            mdi_icon = 'group-filled';\n        } else if (show_offline === 'no') {\n            mdi_icon = 'group-outline';\n        }\n        this.$('.group-icon').attr('data-mdi', mdi_icon).hideIf(mdi_icon === 'settings');\n    },\n\n    updateName: function () {\n        this.$('.group-name').text(this.model.get('name'));\n    },\n\n    updateMembersCounter: function () {\n        let counter = this.model.get('counter');\n        this.$('.participant-counter').text('('+counter.online+'/'+counter.all+')');\n    },\n\n    onContactAdded: function (contact) {\n        let view = this.addChild(contact.get('jid'), this.item_view, {model: contact});\n        this.updateContactItem(contact);\n    },\n\n    onContactRemoved: function (contact) {\n        this.removeChild(contact.get('jid'));\n        this.parent.parent.onListChanged();\n    },\n\n    updateContactItem: function (contact) {\n        let view = this.child(contact.get('jid'));\n        if (!view) return;\n        let roster_settings = xabber.settings.roster,\n            group_settings = this.model.settings,\n            is_default_show_offline = group_settings.show_offline === 'default',\n            show_offline = group_settings.show_offline === 'yes' ||\n                (is_default_show_offline && roster_settings.show_offline === 'yes'),\n            is_offline = constants.STATUS_WEIGHTS[contact.get('status')] >= 6;\n\n        view.$el.switchClass('invisible', is_offline && !show_offline).detach();\n        let index = this.model.contacts.indexOf(contact);\n        if (index === 0) {\n            this.$('.group-head').after(view.$el);\n        } else {\n            this.$('.roster-contact').eq(index - 1).after(view.$el);\n        }\n        view.$el.showIf(this.data.get('expanded'));\n        this.parent.parent.onListChanged();\n        return view;\n    },\n\n    showSettingsIcon: function () {\n        this.$('.group-icon').attr('data-mdi', 'settings').removeClass('hidden');\n    },\n\n    showGroupSettings: function (ev) {\n        ev.stopPropagation();\n        this.model.showSettings();\n    },\n\n    onChangedOfflineSetting: function () {\n        this.updateGroupIcon();\n        let roster_settings = xabber.settings.roster,\n            group_settings = this.model.settings,\n            is_default_show_offline = group_settings.show_offline === 'default',\n            show_offline = group_settings.show_offline === 'yes' ||\n                (is_default_show_offline && roster_settings.show_offline === 'yes');\n        _.each(this.children, function (view) {\n            let is_offline = constants.STATUS_WEIGHTS[view.model.get('status')] >= 6;\n            view.$el.switchClass('invisible', is_offline && !show_offline);\n        });\n        this.parent.parent.onListChanged();\n    },\n\n    onChangedSortingSetting: function () {\n        _.each(this.children, function (view) { view.$el.detach(); });\n        this.model.contacts.each((c) => { this.updateContactItem(c); });\n        this.parent.parent.onListChanged();\n    }\n});\n\nxabber.GroupRightView = xabber.GroupView.extend({\n    template: templates.group_right,\n    item_view: xabber.ContactItemRightView,\n\n    __initialize: function () {\n        this.data.set('expanded', this.model.settings.expanded);\n    },\n\n    toggle: function () {\n        let expanded = !this.data.get('expanded');\n        this.data.set('expanded', expanded);\n        this.model._settings.save('expanded', expanded);\n    }\n});\n\nxabber.GroupLeftView = xabber.GroupView.extend({\n    template: templates.group_left,\n    item_view: xabber.ContactItemLeftView,\n\n    __initialize: function () {\n        this.data.set('expanded', true);\n    },\n\n    toggle: function (ev) {\n        ev.stopPropagation();\n        this.data.set('expanded', !this.data.get('expanded'));\n    }\n});\n\nxabber.GroupSettingsView = xabber.BasicView.extend({\n    className: 'modal main-modal group-settings',\n    template: templates.group_settings,\n    ps_selector: '.modal-content',\n    avatar_size: constants.AVATAR_SIZES.GROUP_SETTINGS,\n\n    events: {\n        \"change .offline input[type=radio][name=offline]\": \"setOffline\",\n        \"click .btn-apply\": \"applySettings\",\n        \"click .btn-delete\": \"deleteGroup\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this._settings = this.model._settings;\n        let name = this.model.get('name');\n        if (this.model.isSpecial()) {\n            this.$('.group-name input').attr('readonly', true);\n            this.$('.btn-delete').addClass('hidden');\n        }\n        this.model.on(\"destroy\", this.onDestroy, this);\n    },\n\n    render: function () {\n        this.$('.group-name input').val(this.model.get('name'));\n        this.$('.group-name .errors').addClass('hidden');\n        this.$('.offline input[type=radio][name=offline][value='+\n            (this.model.settings.show_offline)+']').prop('checked', true);\n        this.$el.openModal({\n            ready: function () {\n                Materialize.updateTextFields();\n            },\n            complete: this.hide.bind(this)\n        });\n    },\n\n    setOffline: function (ev) {\n        this.model._settings.save('show_offline', ev.target.value);\n    },\n\n    validateName: function (name) {\n        if (!name) {\n            return xabber.getString(\"dialog_add_circle__error__text_input_name\");\n        }\n        if (this.model.collection.get(name)) {\n            return xabber.getString(\"dialog_add_circle__error__text_wrong_name\");\n        }\n    },\n\n    applySettings: function () {\n        let new_name = this.$('.group-name input').val();\n        if (new_name !== this.model.get('name')) {\n            let name_error = this.validateName(new_name);\n            if (name_error) {\n                this.$('.group-name .errors').text(name_error).removeClass('hidden');\n                return;\n            } else {\n                this.model.renameGroup(new_name);\n            }\n        }\n        this.close();\n    },\n\n    deleteGroup: function () {\n        let name = this.model.get('name');\n        utils.dialogs.ask(xabber.getString(\"circle_remove\"), xabber.getString(\"circle_remove_confirm\", [name]), null, { ok_button_text: xabber.getString(\"remove\")})\n            .done((result) => {\n                result && this.model.deleteGroup();\n            });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    onDestroy: function () {\n        this.$el.closeModal({ complete: this.remove.bind(this) });\n    }\n});\n\nxabber.Groups = Backbone.Collection.extend({\n    model: xabber.Group,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.on(\"change:id\", this.sort, this);\n        this.account.on('render_settings', this.render, this);\n        this.account.on('render_single_settings', this.renderSingleAccount, this);\n    },\n\n    comparator: function (a, b) {\n        if (a.isSpecial() === b.isSpecial()) {\n            return a.get('id') < b.get('id') ? -1 : 1;\n        }\n        return a.isSpecial() ? 1 : -1;\n    },\n\n    notSpecial: function () {\n        return this.filter(function (group) { return !group.isSpecial(); });\n    },\n\n    onGroupAdded: function (group) {\n        group.acc_view = new xabber.AccountGroupView({model: group});\n    },\n\n    onGroupAddedSingleAccount: function (group) {\n        group.acc_view = new xabber.AccountGroupView({model: group, single_account: this.single_account});\n    },\n\n    render: function () {\n        this.on(\"add\", this.onGroupAdded, this);\n        this.models.forEach((group) => {\n            group.acc_view = new xabber.AccountGroupView({model: group});\n        });\n    },\n\n    renderSingleAccount: function (single_account) {\n        single_account.$('.groups').html('');\n        !this.rendered_once && this.on(\"add\", this.onGroupAddedSingleAccount, this);\n        this.single_account = single_account\n        this.rendered_once = true\n        this.models.forEach((group) => {\n            group.acc_view = new xabber.AccountGroupView({model: group, single_account: single_account});\n        });\n    }\n});\n\nxabber.Contacts = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on(\"deactivate destroy\", this.removeAllContacts, this);\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    },\n\n    mergeContact: function (attrs) {\n        if (typeof attrs !== \"object\") {\n            attrs = {jid: attrs};\n        }\n        let contact = this.get(attrs.jid);\n        if (contact) {\n            if (attrs.avatar) {\n                attrs.image = attrs.avatar;\n                delete attrs.avatar;\n                contact.cached_image = Images.getCachedImage(attrs.image);\n            }\n            if (attrs.group_chat && attrs.is_deleted) {\n                delete attrs.group_chat;\n            }\n            contact.set(attrs);\n        } else {\n            contact = this.create(attrs, {account: this.account});\n        }\n        return contact;\n    },\n\n    blockContact: function (jid, callback, errback) {\n        let iq = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: jid});\n        this.account.sendIQFast(iq, callback, errback);\n    },\n\n    unblockContact: function (jid, callback, errback) {\n        let iq = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: jid});\n        this.account.sendIQFast(iq, callback, errback);\n    },\n\n    removeAllContacts: function () {\n        _.each(_.clone(this.models), function (contact) {\n            contact.destroy();\n        });\n        this.account.trigger('remove_saved_chat');\n    },\n\n    handlePresence: function (presence, jid) {\n        let contact = this.mergeContact(jid);\n        contact.handlePresence(presence);\n    }\n});\n\nxabber.BlockList = Backbone.Model.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.list = {};\n        this.contacts = this.account.contacts;\n        this.contacts.on(\"add_to_blocklist\", this.onContactAdded, this);\n        this.contacts.on(\"remove_from_blocklist\", this.onContactRemoved, this);\n    },\n\n    length: function () {\n        return Object.keys(this.list).length;\n    },\n\n    isBlocked: function (jid) {\n        return this.list.hasOwnProperty(jid);\n    },\n\n    onContactRemoved: function (jid) {\n        delete this.list[jid];\n    },\n\n    onContactAdded: function (attrs) {\n        this.list[attrs.jid] = attrs;\n    },\n\n    registerHandler: function () {\n        this.account.connection.deleteHandler(this._stanza_handler);\n        this._stanza_handler = this.account.connection.addHandler(\n            this.onBlockingIQ.bind(this),\n            Strophe.NS.BLOCKING, 'iq', \"set\", null, this.account.get('jid')\n        );\n    },\n\n    getFromServer: function () {\n        let iq = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING});\n        this.account.sendIQFast(iq, this.onBlockingIQ.bind(this));\n    },\n\n    onBlockingIQ: function (iq) {\n        let $elem = $(iq).find(`[xmlns=\"${Strophe.NS.BLOCKING}\"]`),\n            tag = $elem[0].tagName.toLowerCase(),\n            blocked = tag.startsWith('block');\n        $elem.find('item').each((idx, item) => {\n            let jid = item.getAttribute('jid'),\n                resource = Strophe.getResourceFromJid(jid),\n                domain = Strophe.getDomainFromJid(jid),\n                attrs = {jid},\n                contact = this.contacts.get(jid);\n            resource && (attrs.resource = true);\n            (domain === jid) && (attrs.domain = true);\n            if (blocked)\n                this.contacts.trigger(\"add_to_blocklist\", attrs);\n            else {\n                this.contacts.trigger(\"remove_from_blocklist\", jid);\n                contact && contact.trigger(\"remove_from_blocklist\", contact);\n            }\n            contact && contact.set('blocked', blocked);\n        });\n        return true;\n    }\n});\n\nxabber.Roster = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.roster_version = options.roster_version || 0;\n        this.groups = this.account.groups;\n        this.contacts = this.account.contacts;\n        this.contacts.on(\"add_to_roster\", this.onContactAdded, this);\n        this.contacts.on(\"change_in_roster\", this.onContactChanged, this);\n        this.contacts.on(\"remove_from_roster\", this.onContactRemoved, this);\n    },\n\n    update: function (contact, event) {\n        let contains = contact.get('in_roster') || contact.get('known');\n        if (contains) {\n            if (!this.get(contact)) {\n                this.add(contact);\n                contact.trigger(\"add_to_roster\", contact);\n            } else if (event === 'change') {\n                contact.trigger(\"change_in_roster\", contact);\n            }\n        } else if (this.get(contact)) {\n            this.remove(contact);\n            contact.trigger(\"remove_from_roster\", contact);\n        }\n    },\n\n    onContactAdded: function (contact) {\n        if (!contact.get('in_roster'))\n            return;\n        let groups = contact.get('groups');\n        if (!groups.length) {\n            this.addContactToGroup(contact, constants.GENERAL_GROUP_ID);\n        } else {\n            _.each(groups, _.bind(this.addContactToGroup, this, contact));\n        }\n    },\n\n    onContactChanged: function (contact) {\n        let changed = contact.changed,\n            known_changed = _.has(changed, 'known'),\n            in_roster_changed = _.has(changed, 'in_roster'),\n            groups_changed = _.has(changed, 'groups');\n        if (in_roster_changed || known_changed || groups_changed) {\n            let groups;\n            if (contact.get('in_roster')) {\n                groups = _.clone(contact.get('groups'));\n                if (!groups.length) {\n                    groups.push(constants.GENERAL_GROUP_ID);\n                }\n            } else if (contact.get('known')) {\n                groups = [];\n            }\n            // TODO: optimize\n            let groups_to_remove = this.groups.filter(function (group) {\n                return !_.contains(groups, group.get('id'));\n            });\n            _.each(groups_to_remove, function (group) {\n                group.removeContact(contact);\n            });\n            _.each(groups, _.bind(this.addContactToGroup, this, contact));\n            contact.trigger('update_groups');\n        }\n    },\n\n    onContactRemoved: function (contact) {\n        _.each(this.groups.filter(), function (group) {\n            group.removeContact(contact);\n        });\n    },\n\n    getGroup: function (name) {\n        let group = this.groups.get(name);\n        if (group)\n            return group;\n        let attrs = {id: name};\n        if (name === constants.GENERAL_GROUP_ID) {\n            attrs.name = xabber.settings.roster.general_group_name;\n        } else if (name === constants.NON_ROSTER_GROUP_ID) {\n            attrs.name = xabber.settings.roster.non_roster_group_name;\n        }\n        return this.groups.create(attrs, {account: this.account});\n    },\n\n    addContactToGroup: function (contact, name) {\n        let group = this.getGroup(name);\n        group.contacts.add(contact);\n    },\n\n    registerHandler: function () {\n        this.account.connection.deleteHandler(this._stanza_handler);\n        this._stanza_handler = this.account.connection.addHandler(\n            this.onRosterIQ.bind(this),\n            Strophe.NS.ROSTER, 'iq', \"set\", null, this.account.get('jid')\n        );\n    },\n\n    syncFromServer: function (options, synchronization_with_stamp, is_first_sync) {\n        options = options || {};\n        let request_attrs = {xmlns: Strophe.NS.SYNCHRONIZATION},\n            cached_conversations_exclude = options.cached_conversations_exclude || [];\n        if (options.stamp)\n            request_attrs.stamp = options.stamp;\n        delete(options.stamp);\n        delete(options.cached_conversations_exclude);\n        let iq = $iq({type: 'get'}).c('query', request_attrs).cnode(new Strophe.RSM(options).toXML());\n        this.account.sendFast(iq, (response) => {\n            this.onSyncIQ(response, request_attrs.stamp, synchronization_with_stamp, is_first_sync, options.last_version_sync, cached_conversations_exclude).then(() => {\n            });\n        });\n    },\n\n    syncCachedConversations: function (iq, request_with_stamp, is_first_sync, cached_conversations) {\n        $(cached_conversations).each((idx, item) => {\n            this.syncConversation(null, null, item.conversation, is_first_sync);\n        });\n    },\n\n    syncConversations: function (iq, request_with_stamp, is_first_sync, cached_conversations) {\n        $(iq).find('conversation').each((idx, item) => {\n            this.syncConversation(iq, request_with_stamp, item, is_first_sync, cached_conversations);\n        });\n    },\n\n    syncConversation: function (iq, request_with_stamp, item, is_first_sync, cached_conversations) {\n        if (!$(item).length){\n            return;\n        }\n        if (!iq)\n            item = $($.parseXML(item)).find('conversation')[0];\n        let $item = $(item),\n            jid = $item.attr('jid'), saved = false;\n        if (cached_conversations){\n            $(cached_conversations).each((idx, conv) => {\n                if (!(conv.account_conversation_type && conv.account_conversation_type.split))\n                    return;\n                let cached_conv_type_jid = conv.account_conversation_type.split('/')[0];\n                if ((cached_conv_type_jid === jid) && (conv.account_conversation_type !== ($(item).attr('jid') +  '/' + $(item).attr('type')))){\n                    if ($item.attr('type') === Strophe.NS.GROUP_CHAT || conv.account_conversation_type.includes(Strophe.NS.GROUP_CHAT)){\n                        this.account.cached_sync_conversations.removeFromCachedConversations(conv.account_conversation_type);\n                    }\n                };\n            });\n        }\n        if (jid === this.account.get('jid'))\n            saved = true;\n        if ($item.attr('type') === Strophe.NS.SYNCHRONIZATION_OLD_OMEMO)\n            return true;\n        let $sync_metadata = $item.children('metadata[node=\"' + Strophe.NS.SYNCHRONIZATION + '\"]'),\n            type = $item.attr('type'),\n            presence = $item.children('presence'),\n            $group_metadata = $item.children('metadata[node=\"' + Strophe.NS.GROUP_CHAT + '\"]'),\n            is_incognito =  type === Strophe.NS.GROUP_CHAT && $group_metadata.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').children('privacy').text() === 'incognito',\n            is_private = is_incognito && $group_metadata.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').children('parent').text(),\n            is_group_chat =  type === Strophe.NS.GROUP_CHAT || is_private || is_incognito,\n            encrypted = type === Strophe.NS.SYNCHRONIZATION_OMEMO,\n            contact = !saved && this.contacts.mergeContact({jid: jid, group_chat: is_group_chat, private_chat: is_private, incognito_chat: is_incognito, is_deleted: $item.attr('status') === 'deleted'}),\n            chat = saved ? this.account.chats.getSavedChat() : this.account.chats.getChat(contact, encrypted && 'encrypted', true),\n            message = $sync_metadata.children('last-message').children('message'),\n            current_call = $item.children('metadata[node=\"' + Strophe.NS.JINGLE_MSG + '\"]').children('call'),\n            $unread_messages = $sync_metadata.children('unread'),\n            chat_timestamp = Math.trunc(Number($item.attr('stamp'))/1000),\n            last_read_msg = $unread_messages.attr('after'),\n            last_delivered_msg = $sync_metadata.children('delivered').attr('id'),\n            last_displayed_msg = $sync_metadata.children('displayed').attr('id'),\n            unread_msgs_count = Number($unread_messages.attr('count')) || 0,\n            is_invite =  message.find('invite').length,\n            msg_retraction_version = $item.children('metadata[node=\"' + Strophe.NS.REWRITE + '\"]').children('retract').attr('version'),\n            msg, options = {synced_msg: true,},\n            current_chat_timestamp = chat.get('last_sync_timestamp');\n        if (current_chat_timestamp && current_chat_timestamp > chat_timestamp){\n            console.log('old_sync_conv');\n            console.log(item);\n            return;\n        }\n        chat.set('last_sync_timestamp', chat_timestamp);\n        if (message.children('stanza-id').length\n            && message.children('stanza-id').attr('id')\n            && chat.retracted_msg_id_list.includes(message.children('stanza-id').attr('id'))){\n            return;\n        };\n        chat.set('sync_type', type);\n        (iq && !($item.attr('status') === 'deleted')) && this.account.cached_sync_conversations.putInCachedConversations({\n            account_conversation_type: $(item).attr('jid') +  '/' + $(item).attr('type'),\n            conversation: item.outerHTML,\n        });\n        if (!chat.item_view.content && (is_invite || encrypted && this.account.omemo)) {\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        }\n        if ($item.attr('pinned') || $item.attr('pinned') === '0'){\n            chat.set('pinned', $item.attr('pinned'));\n        }\n        if (encrypted && this.account.omemo) {\n            chat.set('timestamp', chat_timestamp);\n            chat.set('opened', true);\n            if (!(chat.last_message && chat.last_message.get('message')))\n                chat.item_view.updateEncryptedChat();\n        }\n        if (!saved) {\n            if ($item.attr('mute') || $item.attr('mute') === '0') {\n                if ($item.attr('mute') < (Date.now() / 1000))\n                    chat.set('muted', false);\n                else\n                    chat.set('muted', $item.attr('mute'));\n                this.account.chat_settings.updateMutedList(contact.get('jid'), $item.attr('mute'));\n                if (contact.details_view_right)\n                    contact.details_view_right.updateNotifications();\n            } else {\n                chat.set('muted', false);\n            }\n        }\n        if ($item.attr('status') === 'archived')\n            chat.set('archived', true);\n        else if ($item.attr('status') === 'active' && !saved)\n            chat.set('archived', false);\n        if ($item.attr('status') === 'deleted') {\n            chat.get('display') && xabber.body.setScreen(xabber.body.screen.get('name'), {right_contact: '', right: undefined});\n            chat.set('opened', false);\n            chat.set('const_unread', 0);\n            this.account.cached_sync_conversations.removeFromCachedConversations($(item).attr('jid') +  '/' + $(item).attr('type'));\n            this.account.chat_settings.updateGroupChatsList(contact.get('jid'), false);\n            xabber.toolbar_view.recountAllMessageCounter();\n            xabber.chats_view.clearSearch();\n            contact && contact.set('sync_deleted', true);\n            if (is_group_chat) {\n                contact && contact.set('in_roster', false);\n                contact && contact.set('known', false);\n                contact && contact.set('removed', true);\n                this.account.cached_roster.removeFromRoster(jid);\n                contact.participants && contact.participants.reset();\n                this.account.groupchat_settings.resetParticipantsList(contact.get('jid'));\n            }\n        }\n        else\n            contact && contact.set('sync_deleted', false);\n        if (current_call.length) {\n            let $jingle_message = current_call.children('message'),\n                full_jid = $jingle_message.attr('from'),\n                session_id = $jingle_message.children('propose').attr('id');\n            chat.getCallingAvailability(full_jid, session_id, () => {\n                if (xabber.current_voip_call) {\n                    let reason = Strophe.getBareJidFromJid(full_jid) === Strophe.getBareJidFromJid(xabber.current_voip_call.get('contact_full_jid')) ? 'device_busy' : 'busy';\n                    chat.sendReject({session_id: session_id, reason: reason});\n                    chat.messages.createSystemMessage({\n                        from_jid: this.account.get('jid'),\n                        message: xabber.getString(\"jingle__system_message__cancelled_call\")\n                    });\n                } else {\n                    chat.initIncomingCall(full_jid, session_id);\n                }\n            });\n        }\n        chat.set('last_delivered_id', last_delivered_msg);\n        chat.set('last_displayed_id', last_displayed_msg);\n        chat.set('last_read_msg', last_read_msg);\n        chat.trigger('update_last_read_msg', {sync_update: true});\n        if (!message.length) {\n            chat.set('timestamp', chat_timestamp);\n            if (!(Number(last_delivered_msg) || Number(last_displayed_msg) || Number(last_read_msg))\n                && !chat.item_view.content && !chat.get('group_chat')){\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n            }\n            chat.item_view.updateEmptyChat();\n        }\n        if (request_with_stamp && chat.retraction_version !== 0 && chat.retraction_version < msg_retraction_version)\n            chat.trigger(\"get_retractions_list\");\n        msg_retraction_version && (chat.retraction_version = msg_retraction_version);\n        if (request_with_stamp && chat.item_view && chat.item_view.content && !is_invite) {\n            chat.trigger('get_missed_history', request_with_stamp/1000);\n        }\n        unread_msgs_count && (options.is_unread = true);\n        options.delay = message.children('time');\n        message.length && (msg = this.account.chats.receiveChatMessage(message, options));\n        if (!(encrypted && !this.account.omemo)){\n            chat.messages_unread.reset();\n            chat.set('unread', 0);\n            chat.set('const_unread', unread_msgs_count);\n        }\n        if (msg) {\n            if (!msg.get('is_unread') && $unread_messages.attr('count') > 0 && !msg.isSenderMe() && !(msg.get('type') === 'system') && ($unread_messages.attr('after') < msg.get('stanza_id') || $unread_messages.attr('after') < msg.get('contact_stanza_id')))//TODO: change to timestamp checking\n                msg.set('is_unread', true);\n            if(!(is_invite || encrypted && this.account.omemo)) {\n                if (msg.isSenderMe() && msg.get('stanza_id') == last_displayed_msg)\n                    msg.set('state', constants.MSG_DISPLAYED);\n                else if (msg.isSenderMe() && msg.get('stanza_id') == last_delivered_msg)\n                    msg.set('state', constants.MSG_DELIVERED);\n                this.account.messages.add(msg);\n                if ((chat.last_message && (msg.get('timestamp') > chat.last_message.get('timestamp'))) || !chat.last_message){\n                    chat.last_message = msg;\n                    chat.item_view.updateLastMessage(msg);\n                    msg.get('stanza_id') && chat.set('synced_msg', msg);\n                }\n            }\n            chat.set('first_archive_id', msg.get('stanza_id'));\n        }\n        if (presence.length)\n            contact && contact.handlePresence(presence[0]);\n        else {\n            contact && contact.set('subscription_request_in', false)\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    onSyncIQ: async function (iq, request_with_stamp, synchronization_with_stamp, is_first_sync, is_last_sync, cached_conversations_exclude) {\n        let sync_timestamp = Number($(iq).children(`query[xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).attr('stamp')),\n            sync_rsm_after = $(iq).find(`query set[xmlns=\"${Strophe.NS.RSM}\"]`).children('last').text();\n        this.account.last_msg_timestamp = Math.round(sync_timestamp/1000);\n        let last_chat_msg_id = $(iq).find('set last');\n        if (!request_with_stamp)\n            last_chat_msg_id.length ? (this.last_chat_msg_id = last_chat_msg_id.text()) : (this.conversations_loaded = true);\n        this.account.set('last_sync', sync_timestamp);\n        this.account.settings.update_settings({last_sync_timestamp: sync_timestamp});\n        xabber.chats_view.hideChatsFeedback();\n        if (!request_with_stamp)\n            this.account.chats.getSavedChat();\n        if (is_first_sync)\n            this.account.set('first_sync', sync_timestamp);\n        if (!$(iq).find('conversation').length || $(iq).find('conversation').length < constants.SYNCHRONIZATION_RSM_MAX ){\n            this.account.cached_sync_conversations.getAllFromCachedConversations((res) => {\n                if (!is_last_sync){\n                    cached_conversations_exclude = cached_conversations_exclude.concat($(iq).find('conversation').map(function () {\n                        return $(this).attr('jid') +  '/' + $(this).attr('type');\n                    }).toArray());\n                    res = res.filter(item => !cached_conversations_exclude.includes(item.account_conversation_type));\n                    this.syncCachedConversations(null, request_with_stamp, is_first_sync, res);\n                }\n                this.syncConversations(iq, request_with_stamp, is_first_sync, res);\n                this.account.cached_sync_conversations.putInCachedConversations({\n                    account_conversation_type: 'last_sync_timestamp',\n                    timestamp: sync_timestamp,\n                });\n                if (!is_last_sync){\n                    this.account.sendPresence();\n                    let saved_chat = this.account.chats.getSavedChat();\n                    saved_chat.set('opened', true);\n                    saved_chat.item_view.updateLastMessage();\n                    this.account.getAllMessageRetractions((result) => {\n                        let retract_version = $(result).find(`query[xmlns=\"${Strophe.NS.REWRITE}\"]`).attr('version');\n                        if (retract_version > this.account.retraction_version)\n                            this.account.retraction_version = retract_version;\n                    })\n                    this.account.get('first_sync') && this.syncFromServer({stamp: this.account.get('first_sync'), max: constants.SYNCHRONIZATION_RSM_MAX, last_version_sync: true}, true);\n                }\n            });\n        }\n        else if ($(iq).find('conversation').length) {\n            this.account.cached_sync_conversations.getAllFromCachedConversations((res) => {\n                cached_conversations_exclude = cached_conversations_exclude.concat($(iq).find('conversation').map(function () {\n                    return $(this).attr('jid') +  '/' + $(this).attr('type');\n                }).toArray());\n                this.syncConversations(iq, request_with_stamp, is_first_sync, res);\n                let sync_options = {max: constants.SYNCHRONIZATION_RSM_MAX, after: sync_rsm_after};\n                if (request_with_stamp)\n                    sync_options.stamp = request_with_stamp;\n                if (is_last_sync)\n                    sync_options.last_version_sync = true;\n                if (cached_conversations_exclude && cached_conversations_exclude.length)\n                    sync_options.cached_conversations_exclude = cached_conversations_exclude;\n                this.syncFromServer(sync_options);\n            });\n        }\n    },\n\n    getRoster: function () {\n        let request_ver = this.roster_version;\n        this.account.cached_roster.getAllFromRoster((roster_items) => {\n            // $(roster_items).each((idx, roster_item) => {\n            //     this.contacts.mergeContact(roster_item);\n            // });\n            if (!roster_items.length && request_ver != 0) {\n                this.roster_version = 0;\n            }\n            this.getFromServer();\n        });\n    },\n\n    getFromServer: function () {\n        let iq = $iq({type: 'get'}).c('query', {xmlns: Strophe.NS.ROSTER, ver: this.roster_version});\n        this.account.sendIQFast(iq, (iq) => {\n            this.onRosterIQ(iq);\n            this.account.dfd_presence.resolve();\n        });\n    },\n\n    onRosterIQ: function (iq) {\n        let new_roster_version = $(iq).children('query').attr('ver');\n        $(iq).children('query').find('item').each((idx, item) => {\n            this.onRosterItem(item);\n        });\n        if (iq.getAttribute('type') === 'set') {\n            this.account.onSetIQResult(iq);\n        }\n        else {\n            if (iq.getAttribute('type') === 'result') {\n                new_roster_version && (this.roster_version = new_roster_version);\n                this.account.cached_roster.putInRoster({\n                    jid: 'roster_version',\n                    is_version: true,\n                    version: this.roster_version\n                });\n            }\n        }\n        return true;\n    },\n\n    onRosterItem: function (item) {\n        let jid = item.getAttribute('jid');\n        if (jid === this.account.get('jid'))\n            return;\n        let contact = this.contacts.mergeContact(jid),\n            subscription = item.getAttribute(\"subscription\"),\n            subscription_preapproved = item.getAttribute(\"approved\"),\n            ask = item.getAttribute(\"ask\");\n        if (contact.get('invitation') && (subscription === 'both' || subscription === 'to')) {\n            contact.set('invitation', false);\n            contact.trigger('remove_invite');\n        }\n        if (subscription === 'remove') {\n            contact.set({\n                in_roster: false,\n                known: false,\n                name: contact.get('jid'),\n                subscription: undefined,\n                subscription_request_out: false\n            });\n            contact.set('subscription_preapproved', false)\n            this.account.cached_roster.removeFromRoster(jid);\n            return;\n        }\n        let groups = [];\n        $(item).find('group').each(function () {\n            let group = $(this).text();\n            groups.indexOf(group) < 0 && groups.push(group);\n        });\n        let attrs = {\n            subscription: subscription || 'none',\n            in_roster: true,\n            roster_name: item.getAttribute(\"name\"),\n            groups: groups\n        };\n        if (subscription === 'both') {\n            attrs.subscription_request_out = false;\n            attrs.subscription_request_in = false;\n        }\n        if (subscription === 'from')\n            attrs.subscription_request_in = false;\n        if (subscription === 'to')\n            attrs.subscription_request_out = false;\n        if (ask === 'subscribe')\n            attrs.subscription_request_out = true;\n        else\n            attrs.subscription_request_out = false;\n        attrs.roster_name && (attrs.name = attrs.roster_name);\n        this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && (attrs.subscription_preapproved = subscription_preapproved ? true : subscription_preapproved);\n        contact.set(attrs);\n        contact.updateCachedInfo();\n    }\n});\n\nxabber.AccountRosterView = xabber.BasicView.extend({\n    className: 'account-roster-wrap',\n\n    events: {\n        \"click .roster-account-info-wrap .status-button\": \"openChangeStatus\",\n        \"click .roster-account-info\": \"toggle\"\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.groups = this.account.groups;\n        this.roster = this.account.roster;\n        this.contacts = this.account.contacts;\n        this.$el.attr('data-jid', this.account.get('jid'));\n        this.$el.appendTo(this.parent.$('.contact-list'));\n        this.$info = this.$('.roster-account-info-wrap');\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.account.on(\"change:name\", this.updateName, this);\n        this.account.on(\"change:image\", this.updateAvatar, this);\n        this.account.on(\"change:status_updated\", this.updateStatus, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.groups.on(\"add\", this.onGroupAdded, this);\n        this.groups.on(\"rename\", this.onGroupRenamed, this);\n        this.groups.on(\"destroy\", this.onGroupRemoved, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n        this.data.set('expanded', true);\n    },\n\n    updateName: function () {\n        this.$info.find('.name').text(this.account.get('name'));\n    },\n\n    updateStatus: function () {\n        this.$info.find('.status').attr('data-status', this.account.get('status'));\n        this.$info.find('.status-message').text(this.account.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.account.cached_image;\n        this.$info.find('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$el.switchClass('shrank', !expanded);\n        this.parent.updateScrollBar();\n    },\n\n    updateGroupPosition: function (view) {\n        view.$el.detach();\n        let index = this.groups.indexOf(view.model);\n        if (index === 0) {\n            this.$info.after(view.$el);\n        } else {\n            this.$('.roster-group').eq(index - 1).after(view.$el);\n        }\n        this.parent.updateScrollBar();\n    },\n\n    onGroupAdded: function (group) {\n        let view = this.addChild(group.get('id'), this.group_view, {model: group});\n        this.updateGroupPosition(view);\n    },\n\n    onGroupRenamed: function (group, old_name) {\n        let view = this.child(old_name);\n        delete this.children[old_name];\n        this.children[group.get('name')] = view;\n        view && this.updateGroupPosition(view);\n    },\n\n    onGroupRemoved: function (group) {\n        this.removeChild(group.get('id'));\n    },\n\n    toggle: function (ev) {\n        this.data.set('expanded', !this.data.get('expanded'));\n    },\n\n    openChangeStatus: function (ev) {\n        if (!xabber.change_status_view)\n            xabber.change_status_view = new xabber.ChangeStatusView();\n        xabber.change_status_view.open(this.account);\n    }\n});\n\nxabber.AccountRosterRightView = xabber.AccountRosterView.extend({\n    template: templates.account_roster_right,\n    group_view: xabber.GroupRightView,\n    avatar_size: constants.AVATAR_SIZES.ROSTER_RIGHT_ACCOUNT_ITEM,\n\n    __initialize: function () {\n        this.contacts.on(\"add_to_roster change_in_roster remove_from_roster\",\n            this.updateCounter, this);\n        this.contacts.on(\"add_to_roster remove_from_roster\",\n            this.updateGlobalCounter, this);\n    },\n\n    updateCounter: function () {\n        if (!this.roster)\n            this.roster = this.account.roster;\n        let all = this.roster.length,\n            online = all - this.roster.where({status: 'offline'}).length;\n        this.$info.find('.counter').text(online + '/' + all);\n    },\n\n    updateGlobalCounter: function () {\n        this.parent.updateCounter();\n    }\n});\n\nxabber.AccountRosterLeftView = xabber.AccountRosterView.extend({\n    template: templates.account_roster_left,\n    group_view: xabber.GroupLeftView,\n    avatar_size: constants.AVATAR_SIZES.ROSTER_LEFT_ACCOUNT_ITEM,\n\n    __initialize: function () {\n        this.$info.find('.jid').text(this.account.get('jid'));\n    },\n\n    search: function (query) {\n        this.$el.removeClass('shrank');\n        this.$('.group-head').addClass('hidden');\n        let count = 0, hashes = {};\n        this.$('.roster-contact').each((idx, item) => {\n            let $item = $(item),\n                jid = $item.data('jid'),\n                contact = this.roster.get(jid);\n            if (!contact) return;\n            if (hashes[contact.hash_id]) {\n                $item.addClass('hidden');\n                return;\n            }\n            hashes[contact.hash_id] = true;\n            let name = contact.get('name').toLowerCase(),\n                hide = name.indexOf(query) < 0 && jid.indexOf(query) < 0;\n            $item.hideIf(hide);\n            hide || count++;\n        });\n        this.$('.roster-account-info-wrap').showIf(count);\n    },\n\n    searchAll: function () {\n        this.$el.switchClass('shrank', !this.data.get('expanded'));\n        this.$('.roster-account-info-wrap').removeClass('hidden');\n        this.$('.group-head').removeClass('hidden');\n        this.$('.list-item').removeClass('hidden');\n    }\n});\n\nxabber.BlockListView = xabber.BasicView.extend({\n    avatar_size: constants.AVATAR_SIZES.CONTACT_BLOCKED_ITEM,\n    events: {\n        \"click .btn-reset-panel\": \"deselectParticipants\",\n        \"click .btn-remove-selected\": \"actionSelectedParticipants\",\n        \"click .blocked-contact input\": \"selectUnblock\",\n        \"click .btn-unblock-selected\": \"unblockSelected\"\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        for (let jid in this.account.blocklist.list) {\n            this.onContactAdded(this.account.blocklist.list[jid], false);\n        };\n        this.updateTabsLabel();\n        this.account.contacts.on(\"add_to_blocklist\", this.onContactAdded, this);\n        this.account.contacts.on(\"remove_from_blocklist\", this.onContactRemoved, this);\n    },\n\n    render: function (options) {\n        this.deselectBlocked();\n    },\n\n    selectUnblock: function (ev) {\n        this.updateUnblockButton();\n    },\n\n    deselectBlocked: function (ev) {\n        this.$('.blocked-contact input').prop('checked', false)\n        this.updateUnblockButton();\n    },\n\n    updateUnblockButton: function () {\n        let has_changes = this.$('.blocked-contact input:checked').length;\n        this.$('.btn-unblock-selected').hideIf(!has_changes);\n        this.$('.btn-deselect-blocked').hideIf(!has_changes);\n        this.$('.btn-block').hideIf(has_changes);\n    },\n\n    unblockSelected: function (ev) {\n        let $current_tab = this.$('.settings-block-wrap:not(.hidden)'),\n            selected = $current_tab.find('.blocked-contact input:checked').closest('.blocked-contact');\n        selected.each((index, item) => {\n            this.unblockContactByJid($(item).attr('data-jid'))\n        });\n    },\n\n    unblockContactByJid: function (jid) {\n        let contact = this.account.contacts.get(jid);\n        if (contact)\n            contact.unblock();\n        else {\n            this.account.contacts.unblockContact(jid);\n        }\n    },\n\n    hideEmptyContainers: function () {\n        let tabs = this.$('.blocked-list:empty');\n        tabs.each((idx, item) => {\n            let $tab = $(item).closest('.settings-block-wrap');\n            $tab.find('.placeholder').removeClass('hidden');\n        });\n        this.updateUnblockButton();\n    },\n\n    onContactAdded: function (attrs) {\n        let rendered;\n        this.$('.blocked-contact').each((idx, item) => { //this construction avoids being destroyed by stupid domain and jid names in blocklist\n            ($(item).attr('data-jid') === attrs.jid) && (rendered = true);\n        });\n        if (rendered)\n            return;\n        let tmp = templates.contact_blocked_item({jid: attrs.jid});\n        if (attrs.resource) {\n            this.$('.blocked-invitations').append(tmp);\n            this.$('.settings-tab[data-block-name=\"blocklist-invitations\"]').removeClass('hidden');\n            this.$('.blocked-invitations-placeholder').addClass('hidden');\n        }\n        else if (attrs.domain) {\n            this.$('.blocked-domains').append(tmp);\n            this.$('.blocked-domains-placeholder').addClass('hidden');\n        }\n        else {\n            this.$('.blocked-contacts').append(tmp);\n            this.$('.blocked-contacts-placeholder').addClass('hidden');\n        }\n        if (this.parent && this.parent.updateHeight){\n            this.parent.updateBlockedLabel();\n            this.parent.updateHeight();\n            setTimeout(() => {\n                this.parent.updateScrollBar();\n            }, 250)\n        }\n        this.updateTabsLabel();\n    },\n\n    onContactRemoved: function (jid) {\n        let $elem = this.$(`.blocked-contact[data-jid=\"${jid}\"]`);\n        $elem.detach();\n\n        if (this.parent && this.parent.updateHeight){\n            this.parent.updateBlockedLabel();\n            this.parent.updateHeight();\n            setTimeout(() => {\n                this.parent.updateScrollBar();\n            }, 250)\n        }\n        this.updateTabsLabel();\n        this.hideEmptyContainers();\n    },\n\n    updateTabsLabel: function () {\n        if (!(this.account.blocklist && this.account.blocklist.list))\n            return;\n        let contacts, domains, invitations;\n        contacts = domains = invitations = 0;\n\n        for (let jid in this.account.blocklist.list) {\n            let item = this.account.blocklist.list[jid];\n            if (item.resource)\n                invitations++;\n            else if (item.domain)\n                domains++;\n            else\n                contacts++;\n        }\n\n        let contact_label_text = contacts === 0 ? xabber.getString(\"blocked_contacts_empty\") : xabber.getQuantityString(\"blocked_contacts_number_tab_label\", contacts),\n            domains_label_text = domains === 0 ? xabber.getString(\"blocked_domains_empty\") : xabber.getQuantityString(\"blocked_domains_number\", domains),\n            invitations_label_text = invitations === 0 ? xabber.getString(\"blocked_invitations_empty\") : xabber.getQuantityString(\"blocked_invitations_number\", invitations);\n        this.$('.settings-tab[data-block-name=\"blocklist-contacts\"] .settings-block-label').text(contact_label_text);\n        this.$('.settings-tab[data-block-name=\"blocklist-domains\"] .settings-block-label').text(domains_label_text);\n        this.$('.settings-tab[data-block-name=\"blocklist-invitations\"] .settings-block-label').text(invitations_label_text);\n    },\n});\n\nxabber.RosterView = xabber.SearchPanelView.extend({\n    ps_selector: '.contact-list-wrap',\n\n    _initialize: function () {\n        this._settings = xabber._roster_settings;\n        this.model.on(\"activate\", this.updateOneRosterView, this);\n        this.model.on(\"update_order\", this.updateRosterViews, this);\n        this.model.on(\"deactivate destroy\", this.removeRosterView, this);\n        this.on(\"before_hide\", this.saveScrollBarOffset, this);\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    updateOneRosterView: function (account) {\n        let jid = account.get('jid'),\n            view = this.child(jid);\n        if (view) {\n            view.$el.detach();\n        } else if (account.isConnected()) {\n            view = this.addChild(jid, this.account_roster_view, {account: account});\n        } else {\n            return;\n        }\n        let index = this.model.connected.indexOf(account);\n        if (index === 0) {\n            this.$('.contact-list').prepend(view.$el);\n        } else {\n            this.$('.contact-list').children().eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    },\n\n    updateRosterViews: function () {\n        _.each(this.children, function (view) { view.detach(); });\n        this.model.each((account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            view && this.$('.contact-list').append(view.$el);\n        });\n        this.updateScrollBar();\n    },\n\n    removeRosterView: function (account) {\n        this.removeChild(account.get('jid'));\n        this.updateScrollBar();\n    }\n});\n\n\nxabber.RosterLeftView = xabber.RosterView.extend({\n    className: 'roster-left-container container',\n    template: templates.roster_left,\n    ps_settings: {theme: 'item-list'},\n    main_container: '.contact-list',\n    account_roster_view: xabber.AccountRosterLeftView,\n\n    __initialize: function () {\n        this.model.on(\"list_changed\", this.updateLeftIndicator, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n    },\n\n    updateLeftIndicator: function () {\n        this.$el.attr('data-indicator', this.model.connected.length > 1);\n    },\n\n    getContactForItem: function (item) {\n        let $item = $(item),\n            account_jid = $item.parent().parent().data('jid'),\n            jid = $item.data('jid'),\n            roster_view = this.child(account_jid);\n        return roster_view && roster_view.roster.get(jid);\n    },\n\n    render: function (options) {\n        (options.right !== 'chat' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search && options.right === 'chat') && this.clearSearch();\n    },\n\n    searchAll: function () {\n        _.each(this.children, function (view) {\n            view.searchAll();\n        });\n    },\n\n    selectItem: function (id, arrow) {\n        if (!id) {\n            (arrow === 'up') && (this.ps_container[0].scrollTop = 0);\n            return;\n        }\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            this.ps_container[0].scrollTop = 0;\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        if ($selection.length && arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop\n        || $selection[0].clientHeight + $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop < this.ps_container[0].scrollTop))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop;\n        if ($selection.length && arrow === 'up' && ($selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop <= this.ps_container[0].scrollTop\n        || $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop;\n        $selection.addClass('selected');\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = xabber.chats_view.child(selection.data('id'));\n                view && view.open({screen: xabber.body.screen.get('name'), clear_search: false});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.get(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')).hash_id);\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n        }\n    },\n\n    onListChanged: function () {\n        this.updateSearch();\n    }\n});\n\nxabber.RosterSettingsView = xabber.BasicView.extend({\n    className: 'roster-settings-wrap',\n    template: templates.roster_settings,\n\n    events: {\n        \"change .offline-contacts input\": \"setOfflineSetting\",\n        \"change .sorting-contacts input\": \"setSortingSetting\"\n    },\n\n    _initialize: function () {\n        this.$el.appendTo(this.parent.$('.settings-subblock-wrap.contact-list'));\n    },\n\n    render: function () {\n        this.$('.offline-contacts input[type=radio][name=offline-contacts][value='+\n            (this.model.get('show_offline'))+']').prop('checked', true);\n        this.$('.sorting-contacts input[type=radio][name=sorting-contacts][value='+\n            (this.model.get('sorting'))+']').prop('checked', true);\n    },\n\n    setOfflineSetting: function () {\n        this.model.save('show_offline',\n            this.$('.offline-contacts input[type=radio][name=offline-contacts]:checked').val());\n    },\n\n    setSortingSetting: function () {\n        this.model.save('sorting',\n            this.$('.sorting-contacts input[type=radio][name=sorting-contacts]:checked').val());\n    }\n});\n\nxabber.AccountGroupView = xabber.BasicView.extend({\n    className: 'group',\n    template: function () {\n        this.$el.append('<div class=\"group-name one-line\"/><span class=\"group-members-count\"/>');\n    },\n\n    events: {\n        \"click\": \"showGroupSettings\"\n    },\n\n    _initialize: function (options, attrs) {\n        this.$('.group-name').text(this.model.get('name'));\n        this.$('.group-members-count').text(this.model.get('counter').all);\n        let index = this.model.collection.indexOf(this.model),\n            $parent_el;\n        if (options.single_account && options.single_account.model.get('jid') != this.model.account.get('jid'))\n            return;\n        if (options.single_account)\n            $parent_el = options.single_account.$('.groups');\n        else\n            $parent_el = this.model.account.settings_account_modal.$('.groups');\n        if (index === 0) {\n            $parent_el.prepend(this.$el);\n        } else {\n            $parent_el.children().eq(index - 1).after(this.$el);\n        }\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    showGroupSettings: function () {\n        this.model.showSettings();\n    }\n});\n\nxabber.ContactPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap contact-placeholder-wrap noselect',\n    template: templates.contact_placeholder,\n\n    _initialize: function (options) {\n        xabber.on('update_placeholder',this.onPlaceholderUpdate, this);\n    },\n\n    onPlaceholderUpdate: function () {\n        if (xabber.toolbar_view.$('.toolbar-item.jingle-calls.active').length || xabber.toolbar_view.$('.toolbar-item.geolocation-chats.active').length){\n            this.$('.text').text(xabber.getString(\"message_manager_error_not_implemented\"));\n        } else {\n            this.$('.text').text(xabber.getString(\"contact_list__placeholder\"));\n        }\n    },\n});\n\nxabber.AddContactView = xabber.BasicView.extend({\n    className: 'modal main-modal add-contact-modal',\n    template: templates.add_contact,\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .dropdown-content#select-account-for-add-contact\": \"selectAccount\",\n        \"click .existing-group-field label\": \"editGroup\",\n        \"change .new-group-name input\": \"checkNewGroup\",\n        \"keyup .new-group-name input\": \"checkNewGroup\",\n        \"keyup .name-field #new_contact_username\": \"checkJid\",\n        \"focusout .name-field #new_contact_username\": \"focusoutInputField\",\n        \"focusout .new-group-name #new-group-name\": \"addNewGroup\",\n        \"click .btn-add\": \"stepForward\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.group_data = new Backbone.Model;\n        this.group_data.on(\"change\", this.updateGroups, this);\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        let accounts = options.account ? [options.account] : xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('input[name=\"username\"]').val(jid).attr('readonly', !!jid)\n            .removeClass('invalid');\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.dropdown-content#select-account-for-add-contact').empty();\n        _.each(accounts, (account) => {\n            this.$('.dropdown-content#select-account-for-add-contact').append(\n                this.renderAccountItem(account));\n        });\n        this.$('.account-dropdown-wrap').hideIf(accounts.length < 2)\n        this.bindAccount(accounts[0]);\n        this.$('span.errors').text('');\n        this.$el.openModal({\n            ready: () => {\n                Materialize.updateTextFields();\n                this.$('.account-dropdown-wrap').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                });\n                this.$('input[name=\"username\"]').focus();\n            },\n            complete: this.close.bind(this)\n        });\n        return this;\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.account-dropdown-wrap .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n        this.renderGroupsForAccount(account);\n    },\n\n    stepForward: function () {\n        let jid = this.$('input[name=username]').val().trim();\n        this.$el.append($(templates.preloader()))\n        this.$('.btn-add').addClass('hidden-disabled')\n        this.$('input[name=contact_name]').val('');\n        if (this.account.connection && this.account.connection.connected) {\n            this.account.getConnectionForIQ().vcard.get(jid, (vcard) => {\n                    let username = vcard.username ? vcard.username : vcard.fullname ? vcard.fullname : ''\n                    username && this.$('input[name=contact_name]').val(username);\n                    this.$('.preloader-wrapper').remove();\n                    this.$('.btn-add').removeClass('hidden-disabled');\n                    this.addContact()\n                },\n                (err) => {\n                    this.$('.preloader-wrapper').remove();\n                    this.$('.btn-add').removeClass('hidden-disabled');\n                    this.$('input[name=username]').addClass('invalid')\n                        .siblings('.errors').text($(err).find('error text').text());\n                });\n        }\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.add_contact_account_item({jid: account.get('jid'), name: account.get('name')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    renderGroupsForAccount: function (account) {\n        this.group_data.set({\n            selected: [],\n            groups: _.map(account.groups.notSpecial(), function (group) {\n                return group.get('name');\n            })\n        }, {silent: true});\n        this.updateGroups();\n    },\n\n    updateGroups: function () {\n        let selected = this.group_data.get('selected');\n        this.$('.groups').html(templates.groups_checkbox_list_contact({\n            groups: _.map(this.group_data.get('groups'), function (name) {\n                return { name: name, id: uuid(), checked: _.contains(selected, name) };\n            })\n        }));\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    editGroup: function (ev) {\n        ev.preventDefault();\n        let $target = $(ev.target),\n            $input = $target.siblings('input'),\n            checked = !$input.prop('checked'),\n            group_name = $input.attr('data-groupname'),\n            selected = _.clone(this.group_data.get('selected')),\n            idx = selected.indexOf(group_name);\n        $input.prop('checked', checked);\n        if (checked) {\n            idx < 0 && selected.push(group_name);\n        } else if (idx >= 0) {\n            selected.splice(idx, 1);\n        }\n        this.group_data.set('selected', selected);\n    },\n\n    checkNewGroup: function (ev) {\n        let name = $(ev.target).val(),\n            $checkbox = this.$('.new-group-checkbox #new_group_checkbox');\n        $checkbox.prop('disabled', !(name && !_.contains(this.group_data.get('groups'), name)));\n        if (ev.keyCode === constants.KEY_ENTER)\n            this.addNewGroup();\n    },\n\n    addNewGroup: function (ev) {\n        ev && ev.preventDefault();\n        if (this.$('.new-group-checkbox #new_group_checkbox').prop('disabled'))\n            return;\n        let $input = this.$('.new-group-name input'),\n            name = $input.val(),\n            groups = _.clone(this.group_data.get('groups')),\n            idx = groups.indexOf(name);\n        if (idx < 0) {\n            let selected = _.clone(this.group_data.get('selected'));\n            selected.push(name);\n            groups.push(name);\n            this.group_data.set({groups: groups, selected: selected});\n        }\n    },\n\n    focusoutInputField: function () {\n        if (!this.$('input[name=username]').val().trim()) {\n            this.$('input[name=username]').removeClass('invalid');\n            this.$('span.errors').text('').addClass('hidden');\n        }\n    },\n\n    checkJid: function (ev) {\n        let jid = this.$('input[name=username]').val().trim(),\n            error_text,\n            regexp_full_jid = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))|(([0-9]{1,3}\\.){3}[0-9]{1,3})|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!regexp_full_jid.test(jid) && jid) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_invalid_jid\");\n        }\n        if (error_text) {\n            this.$('input[name=username]').addClass('invalid')\n                .siblings('.errors').text(error_text);\n        }\n        else {\n            this.$('input[name=username]').removeClass('invalid');\n            this.$('span.errors').text('').addClass('hidden');\n            if (ev.keyCode === constants.KEY_ENTER)\n                this.stepForward();\n        }\n    },\n\n    addContact: function () {\n        this.$('span.errors').text('').addClass('hidden');\n        let jid = this.$('input[name=username]').removeClass('invalid').val().trim(),\n            name = this.$('input[name=contact_name]').removeClass('invalid').val(),\n            groups = this.group_data.get('selected'),\n            contact, error_text,\n            regexp = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (jid)\n            jid = jid.toLowerCase()\n        jid = Strophe.getBareJidFromJid(jid);\n        if (!jid) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_input_username\");\n        } else if (jid === this.account.get('jid')) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_can_not_add_youself\");\n        } else if (!regexp.test(jid)) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_invalid_jid\");\n        }\n        else {\n            contact = this.account.contacts.mergeContact(jid);\n            if (contact.get('in_roster')) {\n                error_text = xabber.getString(\"dialog_add_contact__error__text_already_in_roster\");\n            }\n        }\n        if (error_text) {\n            this.$('input[name=username]').addClass('invalid')\n                .siblings('.errors').text(error_text);\n        } else {\n            !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && contact.set('subscription_preapproved', true);\n            contact.pres('subscribed');\n            contact.set('known', true);\n            contact.set('removed', false);\n            setTimeout(() => {\n                contact.pres('subscribe');\n            }, 500);\n            contact.trigger('presence', contact, 'subscribe_from');\n            contact.trigger(\"open_chat\", contact, {right_force_close: true, force_opened_state: true});\n            this.close();\n        }\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.GroupSettings = Backbone.Model.extend({\n    idAttribute: 'name',\n    defaults: {\n        expanded: true,\n        show_offline: 'default',\n        sorting: 'default',\n        custom_notifications: false,\n        notifications: false,\n        message_preview: false\n    }\n});\n\nxabber.GroupsSettings = Backbone.CollectionWithStorage.extend({\n    model: xabber.GroupSettings,\n\n    _initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on(\"destroy\", this.clearStorage, this);\n        this.fetch();\n    }\n});\n\nxabber.RosterSettings = Backbone.ModelWithStorage.extend({\n\n    defaults: function () {\n        let general_group_name = xabber.getString(\"circles__name_general_circle\"),\n            non_roster_group_name = xabber.getString(\"circles__name_non_roster_circle\");\n        return {\n            pinned: false,\n            show_offline: 'yes',\n            sorting: 'online-first',\n            general_group_name,\n            non_roster_group_name\n        };\n    }\n});\n\nxabber.CachedRoster = Backbone.ModelWithDataBase.extend({\n    putInRoster: function (value, callback) {\n        this.database.put('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromRoster: function (value, callback) {\n        this.database.get('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromRoster: function (callback) {\n        this.database.get_all('roster_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromRoster: function (value, callback) {\n        this.database.remove('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('roster_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('roster_items');\n    }\n});\n\nxabber.CachedSyncСonversations = Backbone.ModelWithDataBase.extend({\n    putInCachedConversations: function (value, callback) {\n        this.database.put('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromCachedConversations: function (value, callback) {\n        this.database.get('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromCachedConversations: function (callback) {\n        this.database.get_all('conversation_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromCachedConversations: function (value, callback) {\n        this.database.remove('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('conversation_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('conversation_items');\n    }\n});\n\nxabber.CachedServerFeatures = Backbone.ModelWithDataBase.extend({\n    putInCachedFeatures: function (value, callback) {\n        this.database.put('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromCachedFeatures: function (value, callback) {\n        this.database.get('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromCachedFeatures: function (callback) {\n        this.database.get_all('server_features_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromCachedFeatures: function (value, callback) {\n        this.database.remove('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('server_features_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('server_features_items');\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.groups_settings = new xabber.GroupsSettings(null, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-groups-settings-' + this.get('jid')\n    });\n    this.cached_roster = new xabber.CachedRoster(null, {\n        name:'cached-roster-list-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'roster_items',\n        primKey: 'jid'\n    });\n    this.cached_sync_conversations = new xabber.CachedSyncСonversations(null, {\n        name:'cached-conversation-list-v108-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'conversation_items',\n        primKey: 'account_conversation_type'\n    });\n    this.cached_server_features = new xabber.CachedServerFeatures(null, {\n        name:'cached-features-list-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'server_features_items',\n        primKey: 'var'\n    });\n\n    this.groupchat_settings = new xabber.GroupChatSettings({id: 'group-chat-settings'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-group-chat-settings-' + this.get('jid'),\n        fetch: 'after'\n    });\n    this.groups = new xabber.Groups(null, {account: this});\n    this.contacts = new xabber.Contacts(null, {account: this});\n\n    this.cached_roster.on(\"database_open_failed\", () => {\n        this.contacts.addCollection(this.roster = new xabber.Roster(null, {account: this, roster_version: 0}));\n        this.trigger('roster_created');\n    });\n\n    this.cached_roster.on(\"database_opened\", () => {\n        this.cached_roster.getFromRoster('roster_version', (res) => {\n            let roster_version = res && res.version ? res.version : 0;\n            this.contacts.addCollection(this.roster = new xabber.Roster(null, {account: this, roster_version: roster_version}));\n            this.trigger('roster_created');\n        });\n    });\n\n    this.blocklist = new xabber.BlockList(null, {account: this});\n\n    this._added_pres_handlers.push(this.contacts.handlePresence.bind(this.contacts));\n\n    this.on(\"ready_to_get_roster\", function () {\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            this.resources.reset();\n            this.contacts.each(function (contact) {\n                contact.resources.reset();\n                contact.resetStatus();\n            });\n            this.cached_roster.getAllFromRoster((roster_items) => {\n                $(roster_items).each((idx, roster_item) => {\n                    if (roster_item.jid === 'roster_version'){\n                        return;\n                    }\n                    this.contacts.mergeContact(roster_item);\n                });\n                if (this.connection && this.connection.do_synchronization && xabber.chats_view) {\n                    let options = {};\n                    this.cached_sync_conversations.getFromCachedConversations('last_sync_timestamp', (res) => {\n                        let last_sync_timestamp = res && res.timestamp ? res.timestamp : null;\n                        !this.roster.last_chat_msg_id && (options.max = constants.SYNCHRONIZATION_RSM_MAX);\n                        last_sync_timestamp && (options.stamp = last_sync_timestamp);\n                        this.roster.syncFromServer(options, Boolean(last_sync_timestamp), true);\n                        this.roster.getRoster();\n                    });\n                }\n                else {\n                    this.roster.getRoster();\n                }\n                this.blocklist.getFromServer();\n            });\n        });\n        console.log(this.roster);\n        if (this.roster) {\n            dfd.resolve();\n        } else {\n            this.once('roster_created', () => {\n                dfd.resolve();\n            });\n        }\n    }, this);\n});\n\nxabber.Account.addConnPlugin(function () {\n    this.registerIQHandler();\n    this.registerSyncedIQHandler();\n    if (this.roster) {\n        this.roster.registerHandler();\n    } else {\n        this.once('roster_created', () => {\n            this.roster.registerHandler();\n        });\n    }\n    this.blocklist.registerHandler();\n}, true, true);\n\nxabber.once(\"start\", function () {\n    this._roster_settings = new this.RosterSettings({id: 'roster-settings'},\n        {storage_name: this.getStorageName(), fetch: 'after'});\n    this.settings.roster = this._roster_settings.attributes;\n    this.contacts_view = this.left_panel.addChild('contacts', this.RosterLeftView,\n        {model: this.accounts});\n    this.contact_container = this.right_panel.addChild('details', this.Container);\n    this.details_container = this.right_contact_panel.addChild('details', this.Container);\n    this.contact_placeholder = this.right_panel.addChild('contact_placeholder',\n        this.ContactPlaceholderView);\n    this.add_contact_view = new this.AddContactView();\n    this.on(\"add_contact\", function () {\n        this.add_contact_view.show();\n    }, this);\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.chats,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $msg = env.$msg,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    uuid = env.uuid,\n    Images = utils.images,\n    Emoji = utils.emoji,\n    pretty_date = (timestamp) => { return utils.pretty_date(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'dddd, D MMMM YYYY')},\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\nxabber.Message = Backbone.Model.extend({\n    idAttribute: 'unique_id',\n\n    defaults: function () {\n        let msgid = uuid();\n        return {\n            msgid: msgid,\n            unique_id: msgid,\n            type: 'main',\n            state: constants.MSG_PENDING\n        };\n    },\n\n    initialize: function () {\n        let time = this.get('time'), attrs = {};\n        if (time) {\n            attrs.timestamp = Number(moment(time));\n        } else {\n            attrs.timestamp = moment.now();\n            attrs.time = moment(attrs.timestamp).format();\n        }\n        if (!this.get('origin_id'))\n            (this.isSenderMe() && !this.get('synced_from_server') && !this.get('carbon_copied') && !this.get('is_archived')) && this.set('origin_id', this.get('msgid'));\n        this.updateUniqueId();\n        this.set(attrs);\n        this.on(\"change:origin_id change:stanza_id change:archived_id\", this.updateUniqueId, this);\n    },\n\n    updateUniqueId: function () {\n        this.set('unique_id',  this.get('stanza_id') || this.get('archived_id') || this.get('origin_id') || this.get('msgid'));\n    },\n\n    destroyOnEcho: function () {\n        this.set('state', constants.MSG_DELIVERED);\n        if (this.collection && this.collection.chat && this.collection.chat.item_view && this.collection.chat.item_view.content)\n            this.collection.chat.item_view.content.removeMessage(this);\n        else\n            this.destroy();\n    },\n\n    getText: function () {\n        let forwarded_message = this.get('forwarded_message');\n        if (forwarded_message && forwarded_message.length) {\n            return forwarded_message[0].get('message');\n        }\n        return this.get('message');\n    },\n\n    getState: function () {\n        return constants.MSG_STATE[this.get('state')];\n    },\n\n    getVerboseState: function () {\n        let state = xabber.getString(constants.MSG_VERBOSE_STATE[this.get('state')]);\n        if (this.account) {\n            if (!this.account.isOnline())\n                state = xabber.getString(\"account_is_offline\");\n        }\n        else if (!this.collection.account.isOnline())\n            state = xabber.getString(\"account_is_offline\");\n        return state;\n    },\n\n    isSenderMe: function () {\n        if (this.account)\n            return this.account.get('jid') === this.get('from_jid');\n        else if (this.collection && this.collection.account)\n            return this.collection.account.get('jid') === this.get('from_jid');\n        else\n            false;\n    }\n});\n\nxabber.MessagesBase = Backbone.Collection.extend({\n    model: xabber.Message,\n});\n\n  xabber.SearchedMessages = xabber.MessagesBase.extend({\n      comparator: 'timestamp',\n\n      initialize: function () {\n          this.collections = [];\n          this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n          this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n      },\n\n      addCollection: function (collection) {\n          this.collections.push(collection);\n      },\n\n      updateInCollections: function (event, contact) {\n          _.each(this.collections, function (collection) {\n              collection.update(contact, event);\n          });\n      }\n  });\n\n  xabber.Messages = Backbone.Collection.extend({\n    model: xabber.Message,\n    comparator: 'timestamp',\n\n    initialize: function (models, options) {\n        this.chat = options.chat;\n        this.account = options.account;\n    },\n\n    createInvitationFromStanza: function ($message, options) {\n        options = options || {};\n        let $invite_item = $message.find('invite'),\n            full_jid = $invite_item.attr('jid') || $message.attr('from'),\n            $delay = options.delay || $message.children('delay'),\n            from_jid = Strophe.getBareJidFromJid(full_jid),\n            body = $message.children('body').text(),\n            markable = $message.find('markable').length > 0,\n            msgid = $message.attr('id'),\n            archive_id = $message.children('archived').attr('id'),\n            origin_id = $message.children('origin-id').attr('id'),\n            unique_id = options.stanza_id || archive_id || origin_id || msgid,\n            message = unique_id && this.get(unique_id),\n            $group_info = $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]'),\n            is_private_invitation,\n            group_info_attributes = {};\n\n\n        if (!message && unique_id){\n            unique_id = origin_id || options.stanza_id || archive_id || msgid;\n            message = this.get(unique_id);\n        }\n\n        if (message)\n            return message;\n\n        if (!from_jid)\n            return;\n\n        let attrs = {\n            xml: options.xml || $message[0],\n            carbon_copied: options.carbon_copied && !options.is_archived,\n            markable: markable,\n            msgid: msgid,\n            is_forwarded: options.is_forwarded,\n            forwarded_message: options.forwarded_message || null,\n            from_jid: from_jid,\n            origin_id: origin_id,\n            stanza_id: options.stanza_id,\n            archive_id: archive_id,\n            contact_stanza_id: options.contact_stanza_id,\n            is_archived: options.is_archived\n        };\n\n        $delay.length && (attrs.time = $delay.attr('stamp'));\n        options.synced_msg && (attrs.synced_invitation_from_server = true);\n        body && (attrs.message = body);\n\n        let contact = this.account.contacts.mergeContact({jid: Strophe.getBareJidFromJid(from_jid), group_chat: true}),\n            chat = this.account.chats.getChat(contact);\n\n        !chat.item_view.content && (chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view}));\n\n        contact.set('in_roster', false);\n        if ($group_info.length) {\n            let name = $group_info.find('name').text(),\n                model = $group_info.find('membership').text(),\n                privacy = $group_info.find('privacy').text(),\n                searchable = $group_info.find('index').text(),\n                parent_chat = $group_info.find('parent-chat').text(),\n                description = $group_info.find('description').text();\n            name && (group_info_attributes.name = name);\n            model && (group_info_attributes.model = name);\n            privacy && (group_info_attributes.privacy = privacy);\n            searchable && (group_info_attributes.searchable = searchable);\n            description && (group_info_attributes.description = description);\n            parent_chat.length && (is_private_invitation = true);\n            is_private_invitation && contact.set('private_chat', true);\n            privacy === 'incognito' && contact.set('incognito_chat', true);\n            let prev_group_info = contact.get('group_info') || {};\n            _.extend(prev_group_info, group_info_attributes);\n            contact.set('group_info', prev_group_info);\n        }\n\n        let invite_msg = chat.messages.createSystemMessage(_.extend(attrs, {\n            from_jid: from_jid,\n            auth_request: true,\n            invite: true,\n            private_invite: is_private_invitation || false,\n            is_accepted: false,\n            silent: false,\n            message: $message.find('reason').text()\n        }));\n        return invite_msg;\n    },\n\n    createFromStanza: function ($message, options) {\n        options || (options = {});\n        let $delay = options.delay || $message.children('delay'),\n            full_jid = $message.attr('from') || options.from_jid,\n            from_jid = Strophe.getBareJidFromJid(full_jid),\n            body = $message.children('body').length ? $message.children('body').text() : $message.children('envelope').children('content').children('body').text(),\n            markable = $message.find('markable').length > 0,\n            archive_id = $message.children('archived').attr('id'),\n            origin_id = $message.children('origin-id').attr('id'),\n            msgid = $message.attr('id'),\n            unique_id = options.stanza_id || archive_id || origin_id || msgid,\n            message = unique_id && this.get(unique_id);\n\n        if (!message && unique_id){\n            unique_id = origin_id || options.stanza_id || archive_id || msgid;\n            message = this.get(unique_id);\n        }\n        if (!message){\n            message = this.findWhere({'origin_id': origin_id});\n        }\n        if (options.replaced) {\n            let conversation = $message.children('replace').attr('conversation');\n            if ($message.children('replace').children('message').children(`encrypted[xmlns=\"${Strophe.NS.SYNCHRONIZATION_OLD_OMEMO}\"]`).length)\n                return;\n            if ($message.children('replace').children('message').children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length && this.account.omemo && !options.forwarded) {\n                this.account.omemo.receiveChatMessage($message, _.extend(options, {from_jid: conversation, conversation: conversation}));\n                return;\n            }\n            $message = $message.children('replace').children('message');\n            body = $message.children('body').length ? $message.children('body').text() : $message.children('envelope').children('content').children('body').text();\n            let sid = $message.children('stanza-id').first().attr('id');\n            message = this.find(m => m.get('stanza_id') === sid || m.get('contact_stanza_id') === sid);\n            if (!message)\n                return;\n            from_jid = message.get('from_jid');\n            msgid = message.get('msgid');\n            let xml = message.get('xml');\n            xml.innerHTML = $message[0].innerHTML;\n            options.xml = xml;\n            options.forwarded_message = message.get('forwarded_message');\n        }\n\n        if (message && !options.replaced && !options.context_message && !options.is_unread_archived && !options.searched_message && !options.pinned_message && !options.participant_message && !options.echo_msg && !options.is_searched)\n            return message;\n\n        let attrs = {\n                xml: options.xml || $message[0],\n                original_message: body,\n                carbon_copied: options.carbon_copied && !options.is_archived,\n                markable: markable,\n                msgid: msgid,\n                is_forwarded: options.is_forwarded,\n                forwarded_message: options.forwarded_message || null,\n                from_jid: from_jid,\n                contact_stanza_id: options.contact_stanza_id,\n                is_archived: options.is_archived,\n                is_unread_archived: options.is_unread_archived,\n                is_between_anchors: options.is_between_anchors,\n                not_encrypted: options.not_encrypted || null,\n            },\n            mentions = [], blockquotes = [], markups = [], mutable_content = [], files = [], images = [], videos = [], locations = [], link_references = [];\n\n        options.encrypted && _.extend(attrs, {encrypted: true});\n        options.hasOwnProperty('is_trusted') && _.extend(attrs, {is_trusted: options.is_trusted});\n        let references = $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n            $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`) :\n            $message.children('envelope').children('content').children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`);\n\n        references.each((idx, reference) => {\n            let $reference = $(reference),\n                type = $reference.attr('type'),\n                begin = parseInt($reference.attr('begin')),\n                end = parseInt($reference.attr('end'));\n            if (type === 'decoration') {\n                if ($reference.children(`mention[xmlns=\"${Strophe.NS.MARKUP}\"]`).length) {\n                    let $mention = $reference.children(`mention[xmlns=\"${Strophe.NS.MARKUP}\"]`),\n                        target = $mention.text(),\n                        is_gc = $mention.attr('node') === Strophe.NS.GROUP_CHAT ? true : false;\n                    mentions.push({start: begin, end: end, target: target, is_gc: is_gc});\n                } else {\n                    let markup = [];\n                    $reference.children().each((i, child_ref) => {\n                        if (constants.MARKUP_TAGS.indexOf(child_ref.tagName) > -1 && $(child_ref).attr('xmlns') === Strophe.NS.MARKUP) {\n                            if (child_ref.tagName === 'link')\n                                markup.push({type: child_ref.tagName, uri: $(child_ref).text()});\n                            else if (child_ref.tagName === 'quote') {\n                                blockquotes.push({start: begin, end: end});\n                            } else\n                                markup.push(child_ref.tagName);\n                        }\n                    });\n                    markup.length && markups.push({start: begin, end: end, markup: markup});\n                }\n            } else if (type === 'mutable') {\n                let $geolocation = $reference.children(`geoloc[xmlns=\"${Strophe.NS.GEOLOC}\"]`).first(),\n                    loc_attrs = {};\n                if ($geolocation.children('lat').text() && $geolocation.children('lon').text()){\n                    loc_attrs = {\n                        lat: $geolocation.children('lat').text(),\n                        lon: $geolocation.children('lon').text()\n                    }\n                    locations.push(loc_attrs);\n                    mutable_content.push({ start: begin, end: end, type: 'geolocation'});\n                };\n                if ($reference.children(`ogp[xmlns=\"${Strophe.NS.OGP}\"]`).length) {\n                    let $ogp = $reference.children(`ogp[xmlns=\"${Strophe.NS.OGP}\"]`).first(),\n                        link_reference_attrs = {};\n                    if ($ogp.length) {\n                        link_reference_attrs = {\n                            site: $ogp.children('meta[property=\"og:site_name\"]').attr('content'),\n                            type: $ogp.children('meta[property=\"og:type\"]').attr('content'),\n                            url: $ogp.children('meta[property=\"og:url\"]').attr('content'),\n                            description: $ogp.children('meta[property=\"og:description\"]').attr('content'),\n                            title: $ogp.children('meta[property=\"og:title\"]').attr('content'),\n                            image: $ogp.children('meta[property=\"og:image\"]').attr('content'),\n                            image_width: $ogp.children('meta[property=\"og:image:width\"]').attr('content'),\n                            image_height: $ogp.children('meta[property=\"og:image:height\"]').attr('content'),\n                            video_url: $ogp.children('meta[property=\"og:video:url\"]').attr('content'),\n                            original_text: $ogp.attr('url'),\n                            start: begin,\n                            end: end,\n                        }\n                        link_references.push(link_reference_attrs);\n                        mutable_content.push({start: begin, end: end, type: 'link_reference'});\n                    };\n                }\n                let $file_sharing = $reference.find(`file-sharing[xmlns=\"${Strophe.NS.FILES}\"]`).first();\n                if ($reference.children('forwarded').length)\n                    mutable_content.push({ start: begin, end: end, type: 'forward'});\n                else if ($file_sharing.length) {\n                    let type = $file_sharing.parent(`voice-message[xmlns=\"${Strophe.NS.VOICE_MESSAGE}\"]`).length ? 'voice' : 'file',\n                        $file = $file_sharing.children('file'), file_attrs = {}, sources = [];\n                    mutable_content.push({ start: begin, end: end, type: type});\n                    $file_sharing.children('sources').children('uri').each((i, uri) => {sources.push($(uri).text());});\n                    file_attrs = {\n                        name: $file.children('name').text(),\n                        hash: $file.children(`hash[xmlns=\"${Strophe.NS.HASH}\"]`).text(),\n                        size: $file.children('size').text(),\n                        type: $file.children('media-type').text(),\n                        duration: $file.children('duration').text(),\n                        description: $file.children('desc').text(),\n                        height: $file.children('height').text(),\n                        width: $file.children('width').text(),\n                        thumbnail: $file.children('thumbnail-uri').text(),\n                        id: $file.children('gallery-id').text(),\n                        voice: type === 'voice',\n                        sources: sources\n                    };\n                    if (sources[0].indexOf('aescbc') == 0) {\n                        let uri = sources[0].replace(/^aescbc/, 'https'),\n                            key = utils.fromBase64toArrayBuffer(uri.slice(uri.length - 64));\n                        uri = uri.slice(0, uri.length - 64 - 1);\n                        _.extend(file_attrs, {sources: [uri], key: key});\n                        attrs.has_encrypted_files = true;\n                    }\n                    if (this.getFileType($file.children('media-type').text()) === 'image')\n                        images.push(file_attrs);\n                    else if (this.getFileType($file.children('media-type').text()) === 'video')\n                        videos.push(file_attrs);\n                    else\n                        files.push(file_attrs);\n                }\n            } else if (type === 'data') {}\n        });\n\n        $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').each((idx, x_elem) => {\n            let $reference = $(x_elem).children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`),\n                $user = $reference.children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).first();\n                if ($reference.length) {\n                    let begin = parseInt($reference.attr('begin')),\n                        end = parseInt($reference.attr('end'));\n                    mutable_content.push({start: begin, end: end, type: 'groupchat'});\n                    let user_id = $user.attr('id'),\n                        user_jid = $user.children('jid').text();\n                    _.extend(attrs, {\n                        user_info: {\n                            id: user_id,\n                            jid: user_jid,\n                            nickname: $user.children('nickname').text() || user_jid || user_id,\n                            role: $user.children('role').text(),\n                            avatar: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('id'),\n                            avatar_url: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('url'),\n                            badge: $user.children('badge').text()\n                        },\n                        from_jid: user_jid || user_id,\n                        groupchat_jid: Strophe.getBareJidFromJid(options.is_sender ? $message.attr('to') : $message.attr('from'))\n                    });\n                }\n        });\n\n        blockquotes.length && (attrs.blockquotes = blockquotes);\n        mentions.length && (attrs.mentions = mentions);\n        markups.length && (attrs.markups = markups);\n        images.length && (attrs.images = images);\n        videos.length && (attrs.videos = videos);\n        files.length && (attrs.files = files);\n        locations.length && (attrs.locations = locations);\n        link_references.length && (attrs.link_references = link_references);\n        attrs.mutable_content = mutable_content;\n        if (!attrs.mutable_content.length)\n            attrs.forwarded_message = null;\n\n        options.stanza_id && (attrs.stanza_id = options.stanza_id);\n        origin_id && (attrs.origin_id = origin_id);\n        archive_id && (attrs.archive_id = archive_id);\n\n        (options.replaced || mentions.length) && (attrs.mentions = mentions);\n        (options.replaced || markups.length) && (attrs.markups = markups);\n        (options.replaced || files.length) && (attrs.files = files);\n        (options.replaced || images.length) && (attrs.images = images);\n        (options.replaced || videos.length) && (attrs.videos = videos);\n        (options.replaced || link_references.length) && (attrs.link_references = link_references);\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            attrs.type = 'system';\n            attrs.participants_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n        }\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`).length &&\n            $message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`).find('field[var=\"FORM_TYPE\"][type=\"hidden\"] value').text() === Strophe.NS.WEBCHAT) {\n            let addresses = [];\n            $message.children(`addresses[xmlns=\"${Strophe.NS.ADDRESS}\"]`).children('address').each((idx, address) => {\n                let $address = $(address);\n                addresses.push({type: $address.attr('type'), jid: $address.attr('jid')});\n            });\n            attrs.data_form = _.extend(this.account.parseDataForm($message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`)), {addresses: addresses});\n        }\n\n        body && (body = utils.slice_pretty_body(body, mutable_content));\n\n        if (!attrs.forwarded_message && body.removeEmoji() === \"\")\n            attrs.only_emoji = Array.from(body).length;\n\n        attrs.message = body;\n\n        options.echo_msg && ($delay = $message.children('time'));\n        $delay.length && (attrs.time = $delay.attr('stamp'));\n        (attrs.carbon_copied || from_jid == this.account.get('jid') && (options.is_archived || options.synced_msg)) && (attrs.state = constants.MSG_SENT);\n        options.synced_msg && (attrs.synced_from_server = true);\n        options.missed_history && (attrs.missed_msg = true);\n        if (options.is_unread_archived && (attrs.type !== 'system')){\n            let last_read_msg = this.find(m => this.chat.get('last_read_msg') && (m.get('stanza_id') === this.chat.get('last_read_msg') || m.get('contact_stanza_id') === this.chat.get('last_read_msg')));\n            if (last_read_msg){\n                if (Number(moment(attrs.time)) > last_read_msg.get('timestamp'))\n                    attrs.is_unread = true\n            } else {\n                attrs.is_unread = true\n            }\n        }\n        if (options.echo_msg) {\n            attrs.state = constants.MSG_DELIVERED;\n            attrs.timestamp = Number(moment(attrs.time));\n            attrs.from_jid = this.account.get('jid');\n        }\n        (options.context_message || options.participant_message || options.searched_message || options.is_searched) && (attrs.state = constants.MSG_ARCHIVED);\n\n        if (options.carbon_copied && options.encrypted && this.chat && this.chat.item_view && !this.chat.item_view.content)\n            this.chat.item_view.content = new xabber.ChatContentView({chat_item: this.chat.item_view});\n\n        if (options.pinned_message)\n            return this.account.pinned_messages.create(attrs);\n\n        if (options.participant_message)\n            return this.account.participant_messages.create(attrs);\n\n        if (options.searched_message) {\n            options.query && (attrs.query = options.query);\n            options.searched_in_contact_messages && (attrs.searched_in_contact_messages = options.searched_in_contact_messages)\n            return this.account.searched_messages.create(attrs);\n        }\n\n        if (options.context_message)\n            return this.account.context_messages.create(attrs);\n\n        if (options.echo_msg && message) {\n            message.destroyOnEcho();\n        }\n        if ((options.replaced || options.encrypted && options.is_unread_archived) && message) {\n            message.set(attrs);\n            return;\n        }\n\n        if (options.is_searched) {\n            let msg_contact = Strophe.getBareJidFromJid($message.attr('from'));\n            (msg_contact === this.account.get('jid')) && (msg_contact = Strophe.getBareJidFromJid($message.attr('to')));\n            message = xabber.all_searched_messages.create(attrs);\n            message.contact = this.account.contacts.mergeContact(msg_contact);\n            message.account = this.account;\n            return message;\n        }\n\n        message = this.create(attrs);\n\n        (options.encrypted && options.is_unread) && message.set('is_unread', true);\n\n        return message;\n    },\n\n      decryptFile: async function (uri, key) {\n          return new Promise((resolve, reject) => {\n              fetch(uri).then((r) => {\n                  r.blob().then((blob) => {\n                      let filereader = new FileReader();\n                      filereader.onloadend = () => {\n                          let arrayBuffer = filereader.result,\n                              exportedMasterKey = key.slice(0, 32),\n                              HMACData = key.slice(32);\n                          utils.AES.decrypt(exportedMasterKey, HMACData, arrayBuffer).then((enc_file) => {\n                              resolve(enc_file);\n                          });\n                      };\n                      filereader.readAsArrayBuffer(blob);\n                  });\n              }).catch(() => {\n                  resolve(null)\n              });\n          });\n      },\n\n    getFilename: function (url_media) {\n        let idx = url_media.lastIndexOf(\"/\");\n        return url_media.substr(idx + 1, url_media.length - 1);\n    },\n\n    getFileType: function(full_type) {\n        let end_idx = (full_type.indexOf(\"/\") > -1) ? full_type.indexOf(\"/\") : full_type.length,\n            type = full_type.slice(0, end_idx);\n        return type;\n    },\n\n    createSystemMessage: function (attrs) {\n        return this.create(_.extend({\n            type: 'system',\n            silent: true,\n            state: constants.MSG_DISPLAYED\n        }, attrs));\n    }\n});\n\n  xabber.JingleMessage = Backbone.Model.extend({\n      defaults: {\n          duration: 0,\n          contact_full_jid: \"\",\n          session_id: 0,\n          audio: true,\n          volume_on: true,\n          video_in: false,\n          video_screen: false,\n          state: 0\n      },\n\n      initialize: function (attrs, options) {\n          attrs = attrs || {};\n          attrs.video_live = attrs.video_live || false;\n          attrs.video = attrs.video_live;\n          this.contact = options.contact;\n          this.account = this.contact.account;\n          this.registerIqHandler();\n          this.audio_notifiation = xabber.playAudio(attrs.call_initiator ? xabber.settings.sound_on_call : xabber.settings.sound_on_dialtone, true);\n          this.modal_view = new xabber.JingleMessageView({model: this});\n          this.conn = new RTCPeerConnection({\n              iceServers: [\n                  {\n                      urls: \"stun:stun.l.google.com:19302\"\n                  },\n                  {\n                      urls: \"stun:stun01.pool-01.xabber.org:3478\"\n                  },\n              ].concat(constants.TURN_SERVERS_LIST),\n              sdpSemantics: 'unified-plan'\n          });\n          this.$remote_video_el = $('<video autoplay class=\"webrtc-remote-video\"/>');\n          this.$remote_audio_el = $('<audio autoplay class=\"webrtc-remote-audio hidden\"/>');\n          this.$local_video = this.modal_view.$el.find('.webrtc-local-video');\n          this.current_timer = 0;\n          this.conn.onconnectionstatechange = this.onChangeConnectionState.bind(this);\n          this.set(attrs);\n          this.get('in') && this.updateStatus(xabber.getString(\"dialog_jingle_message__status_calling\"));\n          this.onChangedMediaType();\n          this.conn.ontrack = (ev) => {\n              this.remote_stream = ev.streams[0];\n              this.modal_view.$el.find('.webrtc-remote-audio')[0].srcObject = ev.streams[0];\n          };\n          this._waiting_timeout = setTimeout(() => {\n              (!this.get('state') && this.get('status') === 'calling' && this.get('call_initiator') === this.account.get('jid')) && this.reject();\n          }, constants.JINGLE_WAITING_TIME * 1000);\n          this.conn.onicecandidate = this.onIceCandidate.bind(this);\n          this.conn.oniceconnectionstatechange = this.onChangeIceConnectionState.bind(this);\n          this.on('change:audio', this.setEnabledAudioTrack, this);\n          this.on('change:video', this.onChangedVideoValue, this);\n          this.on('change:video_live', this.setEnabledVideoTrack, this);\n          this.on('change:video_screen', this.setEnabledScreenShareVideoTrack, this);\n          this.on('change:video_in', this.onChangedRemoteVideo, this);\n          this.on('change:volume_on', this.onChangedVolume, this);\n          this.on('destroy', this.onDestroy, this);\n      },\n\n      registerIqHandler: function () {\n          this.account.connection.deleteHandler(this.iq_handler);\n          this.iq_handler = this.account.connection.addHandler((iq) => {\n                  this.onIQ(iq);\n                  return true;\n              }, null, 'iq', 'set');\n\n      },\n\n      updateStatus: function (status) {\n          this.modal_view.updateStatusText(status);\n      },\n\n      updateTimer: function () {\n          this.updateStatus(utils.pretty_duration(++this.current_timer));\n      },\n\n      startTimer: function () {\n          this.updateTimer();\n          clearInterval(this.call_timer);\n          this.call_timer = setInterval(() => {\n              this.updateTimer();\n          }, 1000);\n      },\n\n      onConnected: function () {\n          this.get('video_live') && this.onChangedVideoValue();\n          xabber.stopAudio(this.audio_notifiation);\n          setTimeout(() => {\n              this.set('status', 'connected');\n              xabber.trigger('update_jingle_button');\n              this.updateStatus();\n              this.startTimer();\n          }, 1000);\n      },\n\n      onChangeConnectionState: function (ev) {\n          let peer_conn = ev.target,\n              conn_state = peer_conn.connectionState;\n          if (conn_state === 'connected') {\n              this.onConnected();\n          } else {\n              this.updateStatus(utils.pretty_name(conn_state) + '...');\n              if (conn_state === \"failed\") {\n                  clearTimeout(this._timeout_failed);\n                  this._timeout_failed = setTimeout(() => {\n                      if (peer_conn.connectionState === 'failed' || peer_conn.connectionState === 'disconnected') {\n                          this.set('status', conn_state);\n                          xabber.trigger('update_jingle_button');\n                          this.reject();\n                          this.destroy();\n                          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_network_error\"));\n                          xabber.current_voip_call = null;\n                      }\n                  }, 40000);\n                  peer_conn.restartIce();\n              }\n              if (conn_state === 'disconnected') {\n                  this.set('status', conn_state);\n                  xabber.trigger('update_jingle_button');\n                  this.destroy();\n                  xabber.current_voip_call = null;\n              }\n          }\n      },\n\n      onIceCandidate: function (ice) {\n          if (!ice || !ice.candidate || !ice.candidate.candidate)\n              return;\n          this.sendCandidate(ice.candidate);\n      },\n\n      onChangeIceConnectionState: function (ev) {\n          let peer_conn = ev.target,\n              conn_state = peer_conn.iceConnectionState;\n          if (conn_state === \"failed\") {\n              clearTimeout(this._timeout_failed);\n              this._timeout_failed = setTimeout(() => {\n                  if (peer_conn.iceConnectionState === 'failed' || peer_conn.connectionState === 'disconnected') {\n                      this.set('status', conn_state);\n                      xabber.trigger('update_jingle_button');\n                      this.reject();\n                      this.destroy();\n                      this.updateStatus(xabber.getString(\"dialog_jingle_message__status_network_error\"));\n                      xabber.current_voip_call = null;\n                  }\n              }, 40000);\n              peer_conn.restartIce();\n          }\n          if (conn_state === \"connected\")\n              !this.conn.connectionState && this.onConnected();\n      },\n\n      onChangedMediaType: function () {\n          this.$local_video.switchClass('hidden', !this.get('video'));\n      },\n\n      onChangedRemoteVideo: function () {\n          let incoming_video = this.get('video_in');\n          if (incoming_video) {\n              this.$remote_video_el[0].srcObject = this.remote_stream;\n              this.modal_view.$el.find('.webrtc-remote-audio').replaceWith(this.$remote_video_el);\n              this.modal_view.$el.switchClass('multiple-videos', this.get('video') && this.get('video_in'));\n          }\n          else {\n              this.$remote_audio_el[0].srcObject = this.remote_stream;\n              this.modal_view.$el.find('.webrtc-remote-video').replaceWith(this.$remote_audio_el);\n          }\n          this.modal_view.$el.find('.default-screen').switchClass('hidden', incoming_video);\n          this.onChangedVolume();\n      },\n\n      onChangedVolume: function () {\n          if (this.get('volume_on')) {\n              this.modal_view.$el.find('.webrtc-remote-audio')[0] && (this.modal_view.$el.find('.webrtc-remote-audio')[0].muted = false);\n              this.modal_view.$el.find('.webrtc-remote-video')[0] && (this.modal_view.$el.find('.webrtc-remote-video')[0].muted = false);\n          }\n          else {\n              this.modal_view.$el.find('.webrtc-remote-audio')[0] && (this.modal_view.$el.find('.webrtc-remote-audio')[0].muted = true);\n              this.modal_view.$el.find('.webrtc-remote-video')[0] && (this.modal_view.$el.find('.webrtc-remote-video')[0].muted = true);\n          }\n      },\n\n      setEnabledAudioTrack: function () {\n          this.local_stream.getAudioTracks()[0].enabled = this.get('audio');\n      },\n\n      setEnabledVideoTrack: function () {\n          let value = this.get('video_live'),\n              default_video = this.conn.getSenders().find(sender => sender.track && (sender.track.default || sender.track.screen));\n          value && this.set('video_screen', false);\n          (default_video && value) && this.createVideoStream();\n          (!default_video && this.local_stream) && (this.local_stream.getVideoTracks()[0].enabled = value);\n          this.set('video', value || this.get('video_screen'));\n      },\n\n      onDestroy: function () {\n          clearTimeout(this._waiting_timeout);\n          clearInterval(this.call_timer);\n          clearTimeout(this._timeout_failed);\n          xabber.stopAudio(this.audio_notifiation);\n          this.account.connection.deleteHandler(this.iq_handler);\n          this.stopTracks();\n          this.conn.close();\n      },\n\n      setEnabledScreenShareVideoTrack:  function () {\n          let value = this.get('video_screen'),\n              default_video = this.conn.getSenders().find(sender => sender.track && !sender.track.screen);\n          value && this.set('video_live', false);\n          (default_video && value) && this.createScreenShareVideoStream();\n          (!default_video && this.local_stream) && (this.local_stream.getVideoTracks()[0].enabled = value);\n          this.set('video', value || this.get('video_live'));\n      },\n\n      onChangedVideoValue: function () {\n          let video_state = this.get('video') ? 'enable' : 'disable';\n          this.sendVideoStreamState(video_state);\n          this.onChangedMediaType();\n      },\n\n      createScreenShareVideoStream: function () {\n          navigator.mediaDevices.getDisplayMedia({video: true}).then((media_stream) => {\n              this.$local_video[0].srcObject = media_stream;\n              media_stream.getVideoTracks().forEach((track) => {\n                  _.extend(track, {screen: true});\n                  this.local_stream.addTrack(track);\n                  this.conn.addTrack(track, this.local_stream);\n                  this.conn.getSenders().find(sender => !sender.track || sender.track && sender.track.kind === 'video').replaceTrack(track);\n              });\n          });\n      },\n\n      sendVideoStreamState: function (state) {\n          let $iq_video = $iq({to: this.get('contact_full_jid'), type: 'set'})\n              .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n              .c('video', {state: state, id: this.get('session_id')});\n          this.account.sendIQFast($iq_video);\n      },\n\n      onIQ: function (iq) {\n          let $incoming_iq = $(iq),\n              $jingle_initiate = $incoming_iq.find('jingle[action=\"session-initiate\"]'),\n              $jingle_accept = $incoming_iq.find('jingle[action=\"session-accept\"]'),\n              $jingle_info = $incoming_iq.find('jingle[action=\"session-info\"]'),\n              $jingle_video = $incoming_iq.find(`query[xmlns=\"${Strophe.NS.JINGLE_MSG}\"] video`),\n              from_jid = $incoming_iq.attr('from'),\n              $result_iq = $iq({to: from_jid, type: 'result', id: $incoming_iq.attr('id')});\n          if ($jingle_initiate.length) {\n              if ($jingle_initiate.attr('sid') !== this.get('session_id'))\n                  return;\n              let offer_sdp = $jingle_initiate.find(`description[xmlns=\"${Strophe.NS.JINGLE_RTP}\"]`).text();\n              offer_sdp && this.conn.setRemoteDescription(new RTCSessionDescription({type: 'offer', sdp: offer_sdp}));\n              this.acceptSession(offer_sdp);\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_accept.length) {\n              if ($jingle_accept.attr('sid') !== this.get('session_id'))\n                  return;\n              let answer_sdp = $jingle_accept.find(`description[xmlns=\"${Strophe.NS.JINGLE_RTP}\"]`).text();\n              answer_sdp && this.conn.setRemoteDescription(new RTCSessionDescription({type: 'answer', sdp: answer_sdp}));\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_info.length) {\n              if ($jingle_info.attr('sid') !== this.get('session_id'))\n                  return;\n              let candidate = $jingle_info.find('candidate');\n              candidate.length && this.conn.addIceCandidate(new RTCIceCandidate({candidate: candidate.text(), sdpMLineIndex: candidate.attr('sdpMLineIndex'), sdpMid: candidate.attr('sdpMid')}));\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_video.length) {\n              let session_id = $jingle_video.attr('id');\n              if (session_id === this.get('session_id')) {\n                  let video_state = $jingle_video.attr('state');\n                  if (video_state === 'enable')\n                      this.set('video_in', true);\n                  if (video_state === 'disable')\n                      this.set('video_in', false);\n              }\n              this.account.sendIQFast($result_iq);\n          }\n      },\n\n      startCall: function () {\n          this.set('call_initiator', this.account.get('jid'));\n          this.createAudioStream();\n          this.get('video_live') && this.createVideoStream();\n          this.propose();\n      },\n\n      createAudioStream: function () {\n          navigator.mediaDevices.getUserMedia({audio: true}).then((media_stream) => {\n              this.local_stream = media_stream;\n              this.$local_video[0].srcObject = media_stream;\n              let video_track = this.initVideoTrack();\n              this.local_stream.addTrack(video_track);\n              this.conn.addTrack(video_track, this.local_stream);\n              media_stream.getAudioTracks().forEach(track => this.conn.addTrack(track, this.local_stream));\n          });\n      },\n\n      createVideoStream: function () {\n          navigator.mediaDevices.getUserMedia({video: true}).then((media_stream) => {\n              this.$local_video[0].srcObject = media_stream;\n              media_stream.getVideoTracks().forEach((track) => {\n                  this.local_stream.addTrack(track);\n                  this.conn.addTrack(track, this.local_stream);\n                  this.conn.getSenders().find(sender => !sender.track || sender.track && sender.track.kind === 'video').replaceTrack(track);\n              });\n          });\n      },\n\n      stopTracks: function () {\n          this.local_stream && this.local_stream.getTracks().forEach((track) => {\n              track.stop();\n              this.local_stream.removeTrack(track);\n          });\n      },\n\n      propose: function () {\n          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_search\"));\n          let $propose_msg = $msg({type: 'chat', to: this.contact.get('jid')})\n              .c('propose', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')})\n              .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'}).up().up()\n              .c('no-store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('body').t(xabber.getString(\"jingle__text_body_message\")).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.account.sendMsg($propose_msg);\n      },\n\n      accept: function () {\n          let $accept_msg = $msg({type: 'chat', to: this.get('contact_full_jid') || this.contact.get('jid')})\n              .c('accept', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')}).up()\n              .c('no-store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.set('jingle_start', moment.now());\n          this.account.sendMsg($accept_msg);\n          xabber.stopAudio(this.audio_notifiation);\n          this.set('status', 'connecting');\n          xabber.trigger('update_jingle_button');\n          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_connecting\"));\n          this.audio_notifiation = xabber.playAudio(xabber.settings.sound_on_connection, true);\n      },\n\n      reject: function (reason) {\n          if (this.get('status') === 'disconnected' || this.get('status') === 'disconnecting')\n              return;\n          let $reject_msg = $msg({type: 'chat', to: this.get('contact_full_jid') || this.contact.get('jid')})\n              .c('reject', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')});\n          if (this.get('jingle_start')) {\n              let end = moment.now(),\n                  duration = Math.round((end - this.get('jingle_start'))/1000),\n                  call_attrs = {initiator: this.get('call_initiator')};\n              if (this.call_timer)\n                  _.extend(call_attrs, {start: moment(this.get('jingle_start')).format(), end: moment(end).format(), duration: duration});\n              reason && (call_attrs.reason = reason);\n              $reject_msg.c('call', call_attrs).up();\n          }\n          $reject_msg.up().c('store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.account.sendMsg($reject_msg);\n          this.createSystemMessage($reject_msg);\n          this.set('status', 'disconnected');\n          xabber.trigger('update_jingle_button');\n          this.destroy();\n          xabber.current_voip_call = null;\n      },\n\n      createSystemMessage: function (message) {\n          let $message = $(message.nodeTree),\n              chat = this.account.chats.getChat(this.contact),\n              time = $message.find('call').attr('end');\n          if (time) {\n              let duration = $message.find('call').attr('duration'),\n                  initiator = $message.find('call').attr('initiator');\n              chat.messages.createSystemMessage({\n                  from_jid: this.account.get('jid'),\n                  session_id: $message.find('reject').attr('id'),\n                  message: xabber.getString(((initiator && initiator === this.account.get('jid')) ? \"jingle__system_message__outgoing_call\" : \"jingle__system_message__incoming_call\"), [utils.pretty_duration(duration)])\n              });\n          }\n          else {\n              chat.messages.createSystemMessage({\n                  from_jid: this.account.get('jid'),\n                  session_id: $message.find('reject').attr('id'),\n                  message: xabber.getString(\"jingle__system_message__cancelled_call\")\n              });\n          }\n      },\n\n      initVideoTrack: function () {\n          let canvas = Object.assign(document.createElement(\"canvas\"), {width: 320, height: 240});\n          let ctx = canvas.getContext('2d');\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\n          let p = ctx.getImageData(0, 0, canvas.width, canvas.height);\n          requestAnimationFrame(function draw(){\n              for (let i = 0; i < p.data.length; i++)\n                  p.data[i++] = p.data[i++] = p.data[i++] = 1;\n              ctx.putImageData(p, 0, 0);\n              requestAnimationFrame(draw);\n          });\n          return _.extend(canvas.captureStream(60).getTracks()[0], {default: true});\n      },\n\n      initSession: function () {\n          navigator.mediaDevices.getUserMedia({audio: true}).then((media_stream) => {\n              this.local_stream = media_stream;\n              this.$local_video[0].srcObject = media_stream;\n              let video_track = this.initVideoTrack();\n              this.local_stream.addTrack(video_track);\n              this.conn.addTrack(video_track, this.local_stream);\n              media_stream.getAudioTracks().forEach(track => this.conn.addTrack(track, this.local_stream));\n              return this.conn.createOffer({offerToReceiveAudio:true, offerToReceiveVideo: true});\n          }).then((offer) => {\n                  this.set('session_initiator', this.account.get('jid'));\n                  this.conn.setLocalDescription(offer).then(() => {\n                      let offer_sdp = offer.sdp,\n                          $iq_offer_sdp = $iq({to: this.get('contact_full_jid'), type: 'set'})\n                          .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-initiate', initiator: this.account.get('jid'), sid: this.get('session_id')})\n                          .c('content', {creator: 'initiator', name: 'voice'})\n                          .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'})\n                          .c('sdp').t(offer_sdp).up().up()\n                          .c('security', {xmlns: Strophe.NS.JINGLE_SECURITY_STUB});\n                      this.account.sendIQFast($iq_offer_sdp);\n                  });\n          });\n      },\n\n      sendCandidate: function (candidate) {\n          let $iq_candidate = $iq({to: this.get('contact_full_jid'), type: 'set'})\n              .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-info', initiator: this.get('session_initiator'), sid: this.get('session_id')})\n              .c('content', {creator: 'initiator', name: 'voice'})\n              .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'}).up()\n              .c('transport', {xmlns: Strophe.NS.JINGLE_TRANSPORTS_ICE})\n              .c('candidate', {sdpMLineIndex: candidate.sdpMLineIndex, sdpMid: candidate.sdpMid }).t(candidate.candidate);\n          this.account.sendIQFast($iq_candidate);\n      },\n\n      acceptSession: async function () {\n          this.set('session_initiator', this.contact.get('jid'));\n          this.conn.createAnswer().then((answer) => {\n              this.conn.setLocalDescription(answer).then(() => {\n                  let answer_sdp = answer.sdp,\n                      $iq_answer_sdp = $iq({to: this.get('contact_full_jid'), type: 'set'})\n                          .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-accept', initiator: this.contact.get('jid'), sid: this.get('session_id')})\n                          .c('content', {creator: 'initiator', name: 'voice'})\n                          .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'})\n                          .c('sdp').t(answer_sdp).up().up()\n                          .c('security', {xmlns: Strophe.NS.JINGLE_SECURITY_STUB});\n                  this.account.sendIQFast($iq_answer_sdp);\n              });\n          });\n      }\n  });\n\n  xabber.Chat = Backbone.Model.extend({\n    defaults: {\n        opened: true,\n        active: false,\n        display: false,\n        displayed_sent: false,\n        last_displayed_id: 0,\n        last_delivered_id: 0,\n        unread: 0,\n        timestamp: 0,\n        const_unread: 0,\n        encrypted: false\n    },\n\n    initialize: function (attrs, options) {\n        this.contact = options.contact;\n        this.sync_created = options.sync_created;\n        this.account = this.contact ? this.contact.account : options.account;\n        let jid = this.contact ? this.contact.get('jid') : attrs.jid;\n        this.set({\n            id: attrs && attrs.id || this.contact.hash_id,\n            jid: jid\n        });\n        (attrs && attrs.type === 'encrypted') && this.set('encrypted', true);\n        if (attrs && attrs.type === 'saved') {\n            this.set('saved', true);\n            this.account.on('remove_saved_chat', this.onContactDestroyed, this);\n        }\n        this.retraction_version = 0;\n        if (this.contact) {\n            this.set('group_chat', this.contact.get('group_chat'));\n            this.contact.on(\"destroy\", this.onContactDestroyed, this);\n            this.contact.on(\"change:group_chat\", this.onChangedContact, this);\n        } else {\n            this.set({'group_chat': false, 'name': attrs.name});\n        }\n        this.messages = new xabber.Messages(null, {account: this.account, chat: this});\n        this.messages_unread = new xabber.Messages(null, {account: this.account});\n        this.item_view = new xabber.ChatItemView({model: this});\n        this.plyr_players = [];\n        this.retracted_msg_id_list = [];\n        this.on(\"get_retractions_list\", this.getAllMessageRetractions, this);\n        this.on(\"change:timestamp\", this.onChangedTimestamp, this);\n        this.on(\"update_last_read_msg\", this.onChangedLastReadMsg, this);\n    },\n\n    onChangedTimestamp: function () {\n    },\n\n    onChangedLastReadMsg: function (options) {\n        if (this.get('prev_last_read_msg') && this.get('last_read_msg') && this.get('prev_last_read_msg') !== this.get('last_read_msg')){\n            if (this.item_view && !this.item_view.content){\n                this.item_view.content = new xabber.ChatContentView({chat_item: this.item_view});\n            }\n            this.item_view.content._no_scrolling_event = true;\n            let query = {\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                is_first: true,\n                sync_update: options && options.sync_update ? true : false,\n                var: [\n                    {var: 'after-id', value: this.get('prev_last_read_msg')},\n                    {var: 'before-id', value: this.get('last_read_msg')},\n                ]\n            };\n            this.requestHistoryBetweenAnchors(query);\n\n        }\n        this.set('prev_last_read_msg', this.get('last_read_msg'));\n    },\n\n    requestHistoryBetweenAnchors: function (query) {\n        this.item_view.content.MAMRequest(query, (success, messages, rsm) => {\n            if (rsm.complete)\n                this.set('last_sync_unread_id', this.get('last_read_msg'));\n            if (query.is_first && !query.sync_update) {\n                let read_count = Number(rsm.count) + 1;\n                read_count = this.get('const_unread') - read_count;\n                (read_count < 0) && (read_count = 0);\n                this.set('const_unread', read_count);\n            }\n            if (!rsm.complete && (rsm.count > messages.length)){\n                query.after = rsm.last;\n                query.is_first = false;\n                this.requestHistoryBetweenAnchors(query);\n            }\n            _.each(messages, (message) => {\n                let message_item = this.account.chats.receiveChatMessage(message,\n                        {\n                            is_archived: true,\n                            is_between_anchors: true,\n                        }\n                    );\n                message_item && message_item.set('is_unread', false)\n            });\n            if (rsm.complete && this.get('last_read_msg')){\n                let last_read_msg = this.messages.find(m => this.get('last_read_msg') && (m.get('stanza_id') === this.get('last_read_msg') || m.get('contact_stanza_id') === this.get('last_read_msg'))),\n                    deferred = new $.Deferred();\n                deferred.done(() => {\n                    last_read_msg && last_read_msg.set('is_unread', false);\n                    if (this.item_view.content.isVisible()){\n                        this.item_view.content._long_reading_timeout = true;\n                        this.item_view.content.scrollToUnread();\n                    } else {\n                        this.set('show_new_unread', true);\n                    }\n                    this.item_view.content._no_scrolling_event = false;\n                });\n                if (!last_read_msg){\n                    this.contact.getMessageByStanzaId(this.get('last_read_msg'), ($message) => {\n                        last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                        deferred.resolve()\n                    });\n                } else {\n                    deferred.resolve()\n                }\n            }\n        }, (err) => {\n            xabber.error('error');\n        });\n    },\n\n\n    isMuted: function () {\n          if (this.get('muted') && (this.get('muted') < (Date.now() / 1000)))\n              this.set('muted', false)\n          return this.get('muted')\n    },\n\n      onChangedContact: function () {\n          let changed = this.contact.changed;\n          if (_.has(changed, 'group_chat'))\n              this.set('group_chat', this.contact.get('group_chat'));\n          if (_.has(changed, 'blocked'))\n              this.set('blocked', this.contact.get('blocked'));\n      },\n\n    recountUnread: function () {\n        this.set('unread', this.messages_unread.length);\n        if (this.contact && this.get('archived') && this.isMuted()) {\n        }\n        else {\n            xabber.toolbar_view.recountAllMessageCounter();\n        }\n    },\n\n    onContactDestroyed: function () {\n        this.resetUnread();\n        this.destroy();\n    },\n\n    resetUnread: function () {\n        let unread = this.get('unread');\n        if (unread > 0) {\n            this.messages_unread && this.messages_unread.reset();\n            this.set('unread', 0);\n            xabber.recountAllMessageCounter(unread);\n            xabber.toolbar_view.recountAllMessageCounter(unread);\n        }\n    },\n\n    searchMessages: function (query, callback) {\n        this.messages_view = new xabber.SearchedMessagesView({\n            query_text: query,\n            model: this\n        });\n        this.messages_view.messagesRequest({}, () => {\n            xabber.body.setScreen('all-chats', {\n                right: 'searched_messages',\n                model: this\n            });\n        });\n    },\n\n    sendDataForm: function (message, variable) {\n        let data_form = message.get('data_form');\n        if (!data_form)\n            return;\n        let msg = $msg({type: 'chat'});\n        data_form.fields.forEach((field) => {\n            if (field.type  === 'boolean') {\n                if (field.var === variable)\n                    field.values = [true];\n                else\n                    field.values = [false];\n            }\n        });\n        msg = this.account.addDataFormToStanza(msg, data_form);\n        data_form.addresses.forEach((address) => {\n            if (address.type === 'replyto')\n                $(msg.nodeTree).attr('to', address.jid);\n            this.account.sendMsg(msg);\n        });\n    },\n\n    setStanzaId: function (unique_id, stanza_id) {\n        let message = this.messages.get(unique_id),\n            origin_id = message.get('origin_id');\n        if (this.item_view && this.item_view.content && stanza_id)\n            this.item_view.content.$(`.chat-message[data-uniqueid=\"${unique_id}\"]`).data('uniqueid', stanza_id)[0].setAttribute('data-uniqueid', stanza_id);\n        message.set('stanza_id', stanza_id);\n        if (this.get('encrypted'))\n            this.account.omemo && this.account.omemo.updateMessage({stanza_id, origin_id}, this.contact);\n    },\n\n    getCallingAvailability: function (to, session_id, callback) {\n        let iq = $iq({to: to, type: 'get'})\n            .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n            .c('session', {id: session_id});\n        this.account.sendIQFast(iq, callback);\n    },\n\n    sendReject: function (options) {\n        !options && (options = {});\n        let msg_to = options.to || this.contact.get('jid'),\n            $reject_msg = $msg({\n                type: 'chat',\n                to: msg_to\n            })\n                .c('reject', {xmlns: Strophe.NS.JINGLE_MSG, id: options.session_id})\n                .c('call', {reason: options.reason}).up().up()\n                .c('store', {xmlns: Strophe.NS.HINTS}).up()\n                .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n                .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n        this.account.sendMsg($reject_msg);\n    },\n\n    initIncomingCall: function (full_jid, session_id) {\n        if (!xabber.get('audio') || !xabber.settings.jingle_calls) {\n            return;\n        }\n        xabber.current_voip_call = new xabber.JingleMessage({contact_full_jid: full_jid, session_id: session_id, call_initiator: this.contact.get('jid')}, {contact: this.contact, });\n        xabber.current_voip_call.modal_view.show({status: 'in'});\n        xabber.trigger('update_jingle_button');\n        if (xabber.body.screen.get('name') === 'all-chats' && !xabber.body.screen.get('right') && this.item_view)\n            this.item_view.open();\n    },\n\n    endCall: function (status) {\n        status && xabber.current_voip_call.set('status', status);\n        xabber.trigger('update_jingle_button');\n        xabber.current_voip_call.destroy();\n        xabber.current_voip_call = null;\n        xabber.trigger('update_jingle_button');\n    },\n\n    getAllMessageRetractions: function () {\n        if (!this.contact.get('group_chat'))\n            return;\n        let retractions_query = $iq({type: 'get', to: this.contact.get('jid')})\n            .c('query', {xmlns: Strophe.NS.REWRITE, version: this.retraction_version});\n        this.account.sendIQ(retractions_query);\n    },\n\n    receiveMessage: function ($message, options) {\n        let from_bare_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            carbon_copied = options.carbon_copied;\n        // searching chat marker message\n        let $marker = $message.children(`[xmlns=\"${Strophe.NS.CHAT_MARKERS}\"]`),\n            $receipt_request = $message.children(`request[xmlns=\"${Strophe.NS.RECEIPTS}\"]`),\n            $receipt_response = $message.children(`received[xmlns=\"${Strophe.NS.RECEIPTS}\"]`),\n            $jingle_msg_propose = $message.children(`propose[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n            $jingle_msg_accept = $message.children(`accept[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n            $jingle_msg_reject = $message.children(`reject[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`);\n        if ($jingle_msg_propose.length && !options.searched_message) {\n            if (carbon_copied && (from_bare_jid == this.account.get('jid'))) {\n                return;\n            }\n            if (options.synced_msg){\n                if (this.get('saved'))\n                    return;\n                let view = xabber.chats_view.child(this.contact.hash_id);\n                $message.find('time').attr('stamp') && this.set('timestamp', $message.find('time').attr('stamp'));\n                if (!view.content)\n                    view.content = new xabber.ChatContentView({chat_item: view});\n                if (view && view.content)\n                    view.content.receiveNoTextMessage($message, carbon_copied);\n                return;\n            }\n            if (options.is_archived)\n                return;\n            else {\n                let session_id = $jingle_msg_propose.attr('id'),\n                    iq_to = $message.attr('from');\n                this.getCallingAvailability(iq_to, session_id, () => {\n                    if (xabber.current_voip_call) {\n                        let reason = from_bare_jid === Strophe.getBareJidFromJid(xabber.current_voip_call.get('contact_full_jid')) ? 'device_busy' : 'busy';\n                        this.sendReject({session_id: session_id, reason: reason});\n                        this.messages.createSystemMessage({\n                            from_jid: this.account.get('jid'),\n                            message: xabber.getString(\"jingle__system_message__cancelled_call\")\n                        });\n                        return;\n                    }\n                    this.initIncomingCall(iq_to, session_id);\n                });\n            }\n        }\n        if ($jingle_msg_accept.length) {\n            if (options.is_archived || options.synced_msg)\n                return;\n            if (xabber.current_voip_call && xabber.current_voip_call.get('session_id') === $jingle_msg_accept.attr('id')) {\n                if (carbon_copied)\n                    this.endCall();\n                else {\n                    !xabber.current_voip_call.get('state') && xabber.current_voip_call.set('state', constants.JINGLE_MSG_ACCEPT);\n                    xabber.trigger('update_jingle_button');\n                    let jingle_start = $jingle_msg_accept.find('time').attr('stamp');\n                    jingle_start = jingle_start ? Number(moment(jingle_start)) : moment.now();\n                    xabber.current_voip_call.set('jingle_start', jingle_start);\n                    !xabber.current_voip_call.get('contact_full_jid') && xabber.current_voip_call.set('contact_full_jid', $message.attr('from'));\n                    xabber.stopAudio(xabber.current_voip_call.audio_notifiation);\n                    xabber.current_voip_call.set('status', 'connecting');\n                    xabber.trigger('update_jingle_button');\n                    xabber.current_voip_call.updateStatus(xabber.getString(\"dialog_jingle_message__status_connecting\"));\n                    xabber.current_voip_call.audio_notifiation = xabber.playAudio(xabber.settings.sound_on_connection);\n                }\n            }\n        }\n        if ($jingle_msg_reject.length) {\n            if (this.messages.filter(m => m.get('session_id') === $jingle_msg_reject.attr('id')).length)\n                return;\n            let time = options.delay && options.delay.attr('stamp') || $message.find('delay').attr('stamp') || $message.find('time').attr('stamp'), message, msg_text = \"\";\n            if ($jingle_msg_reject.children('call').length) {\n                let duration = $jingle_msg_reject.children('call').attr('duration'),\n                    initiator = $jingle_msg_reject.children('call').attr('initiator');\n                if (duration && initiator)\n                    msg_text =xabber.getString(((initiator && initiator === this.account.get('jid')) ? \"jingle__system_message__outgoing_call\" : \"jingle__system_message__incoming_call\"), [utils.pretty_duration(duration)]);\n                else\n                    msg_text =  xabber.getString(\"jingle__system_message__cancelled_call\");\n            }\n            else\n                msg_text =  xabber.getString(\"jingle__system_message__cancelled_call\");\n            options.is_unread && (options.reject_contact_stanza_id = options.contact_stanza_id);\n            message = this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                time: time,\n                session_id: $jingle_msg_reject.attr('id'),\n                stanza_id: options.stanza_id,\n                contact_stanza_id: options.reject_contact_stanza_id,\n                is_unread: options.is_unread,\n                message: msg_text\n            });\n            if (options.is_archived || options.synced_msg)\n                return message;\n            if (xabber.current_voip_call && xabber.current_voip_call.get('session_id') === $jingle_msg_reject.attr('id')) {\n                xabber.stopAudio(xabber.current_voip_call.audio_notifiation);\n                let busy_audio = xabber.playAudio(xabber.settings.sound_on_dialtone);\n                setTimeout(() => {\n                    xabber.stopAudio(busy_audio);\n                }, 1500);\n                this.endCall($jingle_msg_reject.children('call').attr('reason') == 'device_busy' ? 'device_busy' : $jingle_msg_reject.children('call').attr('reason') == 'busy' ? 'busy' : 'disconnected');\n            }\n            return message;\n        }\n        if (!options.is_archived) {\n            let $stanza_id, $contact_stanza_id;\n            $message.children('stanza-id').each((idx, stanza_id) => {\n                stanza_id = $(stanza_id);\n                if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length) {\n                    if (stanza_id.attr('by') === from_bare_jid) {\n                        !$stanza_id && ($stanza_id = stanza_id);\n                        $contact_stanza_id = stanza_id;\n                    }\n                    else\n                        $stanza_id = stanza_id;\n                }\n                else {\n                    if (stanza_id.attr('by') === from_bare_jid)\n                        $contact_stanza_id = stanza_id;\n                    else\n                        $stanza_id = stanza_id;\n                }\n            });\n            (!options.stanza_id && $stanza_id) && (options.stanza_id = $stanza_id.attr('id'));\n            (!options.contact_stanza_id && $contact_stanza_id) && (options.contact_stanza_id = $contact_stanza_id.attr('id'));\n        }\n        if ($marker.length) {\n            let marker_tag = $marker[0].tagName.toLowerCase();\n            if ((marker_tag === 'markable') && !options.is_mam && !options.is_archived && !carbon_copied && (!options.synced_msg || options.synced_msg && options.is_unread)) {\n                this.sendMarker($message.attr('id'), 'received', options.stanza_id, options.contact_stanza_id);\n                this.get('saved') && this.sendMarker($message.attr('id'), 'displayed', options.stanza_id, options.contact_stanza_id);\n            }\n            if ((marker_tag !== 'markable') && !carbon_copied) {\n                this.receiveMarker($message, marker_tag, carbon_copied);\n                return;\n            }\n            if ((marker_tag === 'displayed') && carbon_copied)\n                this.receiveCarbonsMarker($marker);\n        }\n\n        if ($receipt_request.length && !options.is_mam && !options.is_archived && !carbon_copied && (!options.synced_msg || options.synced_msg && options.is_unread))\n            this.sendDeliveryReceipt($message);\n\n        if ($receipt_response.length)\n            this.receiveDeliveryReceipt($message);\n\n        if (!$message.find('body').length || $jingle_msg_propose.length || $jingle_msg_accept.length || $jingle_msg_reject.length) {\n            if (this.get('saved'))\n                return;\n            let view = xabber.chats_view.child(this.contact.hash_id);\n            if (!view.content)\n                view.content = new xabber.ChatContentView({chat_item: view});\n            if (view && view.content)\n                view.content.receiveNoTextMessage($message, carbon_copied);\n            return;\n        }\n\n        if ($message.find('invite').length) {\n            if (from_bare_jid === this.account.get('jid'))\n                return;\n            let group_jid = $message.find('invite').attr('jid') || $message.find('message').attr('from'),\n                contact = this.account.contacts.get(group_jid), chat;\n            if (contact)\n                if (contact.get('subscription') == 'both')\n                    return;\n            if (this.account.connection && this.account.connection.do_synchronization) {\n                if (options.synced_msg || !options.synced_msg && !options.is_archived)\n                    return this.messages.createInvitationFromStanza($message, options);\n            } else {\n                let iq = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING});\n                this.account.sendIQFast(iq, (iq) => {\n                        let items = $(iq).find('item'),\n                            current_timestamp = Number(moment($message.find('delay').attr('stamp') || $message.find('time').attr('stamp') || (options.delay) && Number(moment(options.delay.attr('stamp'))) || moment.now())),\n                            last_blocking_timestamp,\n                            has_blocking = false;\n                        if (items.length > 0) {\n                            items.each((idx, item) => {\n                                let $item = $(item),\n                                    item_jid = $item.attr('jid'), blocking_timestamp = \"\";\n                                if (item_jid.indexOf(group_jid) > -1) {\n                                    has_blocking = true;\n                                    blocking_timestamp = item_jid.substr(item_jid.lastIndexOf(\"/\") + 1, item_jid.length - group_jid.length);\n                                    if (!blocking_timestamp) {\n                                        last_blocking_timestamp = \"\";\n                                        return false;\n                                    } else if (!last_blocking_timestamp || last_blocking_timestamp < blocking_timestamp)\n                                        last_blocking_timestamp = blocking_timestamp;\n                                }\n                            });\n                        }\n                        if (_.isUndefined(last_blocking_timestamp) || last_blocking_timestamp && last_blocking_timestamp < current_timestamp)\n                            return this.messages.createInvitationFromStanza($message, options);\n                    }, () => {\n                        return this.messages.createInvitationFromStanza($message, options);\n                    });\n            }\n        }\n        else{\n            return this.messages.createFromStanza($message, options);\n        }\n    },\n\n    getMessageContext: function (unique_id, options) {\n        options = options || {};\n        let messages = options.mention && this.account.messages || options.searched_messages && !options.encrypted && this.account.searched_messages || options.message && xabber.all_searched_messages || this.account.messages,\n            message = messages.get(unique_id),\n            dfd = new $.Deferred;\n\n        dfd.done(() => {\n            if (message) {\n                if (options.searched_messages)\n                    message.set('searched_message', false);\n                let stanza_id = message.get('stanza_id');\n                this.messages_view = new xabber.MessageContextView({\n                    contact: this.contact,\n                    mention_context: options.mention,\n                    model: this,\n                    stanza_id_context: stanza_id,\n                    encrypted: options.encrypted\n                });\n                this.account.context_messages.add(message);\n                this.messages_view.messagesRequest({after: stanza_id}, () => {\n                    let screen = 'all-chats';\n                    if (options.mention)\n                        screen = 'mentions';\n                    else if (options.message)\n                        screen = xabber.body.screen.get('name');\n                    xabber.body.setScreen(screen, {\n                        right: 'message_context',\n                        model: this,\n                    }, {\n                        right_contact_save: true\n                    });\n                });\n            }\n\n        })\n        if (!message) {\n            message = messages.models.find(item => {\n                return item.get('origin_id') === unique_id;\n            })\n            if (!message) {\n                this.contact.getMessageByStanzaId(unique_id, ($message) => {\n                    if (options.encrypted && this.account.omemo) {\n                        let omemo_dfd = new $.Deferred;\n                        omemo_dfd.done(($msg, msg_options) => {\n                            msg_options = msg_options || {};\n                            msg_options.searched_message = true;\n                            message = this.account.chats.receiveChatMessage($msg[0], msg_options);\n                            dfd.resolve();\n                        }).fail(() => {\n                            dfd.resolve();\n                        });\n                        message = this.account.omemo.receiveChatMessage($message, {\n                            searched_message: true,\n                            gallery: true,\n                        }, omemo_dfd);\n\n                    } else {\n                        message = this.account.chats.receiveChatMessage($message, {\n                            searched_message: true,\n                        });\n                        dfd.resolve();\n                    }\n                }, {encrypted: options.encrypted});\n\n            } else {\n                dfd.resolve()\n            }\n        } else {\n            dfd.resolve()\n        }\n    },\n\n    sendDeliveryReceipt: function ($message) {\n        let $delivery_msg = $msg({\n            to: this.contact.get('jid'),\n            type: 'chat',\n            id: uuid()})\n            .c('received', { xmlns: Strophe.NS.RECEIPTS, id: $message.attr('id')});\n        this.account.sendMsg($delivery_msg);\n    },\n\n    sendMarker: function (msg_id, status, stanza_id, contact_stanza_id) {\n        status || (status = 'displayed');\n        let stanza = $msg({\n            to: this.get('jid'),\n            type: 'chat',\n            id: uuid()\n        }).c(status).attrs({\n            xmlns: Strophe.NS.CHAT_MARKERS,\n            id: msg_id || stanza_id || contact_stanza_id || \"\"\n        });\n        stanza_id && stanza.c('stanza-id', {xmlns: 'urn:xmpp:sid:0', id: stanza_id, by: this.account.get('jid')}).up();\n        (!this.get('saved') && contact_stanza_id) && stanza.c('stanza-id', {xmlns: 'urn:xmpp:sid:0', id: contact_stanza_id, by: this.contact.get('jid')}).up();\n        this.account.sendMsg(stanza);\n    },\n\n    receiveMarker: function ($message, tag, carbon_copied) {\n        let $displayed = $message.find('displayed'),\n            $received = $message.find('received'),\n            error = $message.attr('type') === 'error';\n        if (error || !$displayed.length && !$received.length)\n            return;\n        let marked_msg_id = $displayed.attr('id') || $received.attr('id'),\n            marked_stanza_id = $displayed.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id') || $received.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg = this.account.messages.find(m => marked_stanza_id && (m.get('stanza_id') === marked_stanza_id || m.get('contact_stanza_id') === marked_stanza_id) || m.get('msgid') === marked_msg_id);\n        if (!msg) {\n            let enc_chat =  this.account.chats.get(`${this.id}:encrypted`),\n                enc_msg = enc_chat && enc_chat.messages.find(m => marked_stanza_id && (m.get('stanza_id') === marked_stanza_id || m.get('contact_stanza_id') === marked_stanza_id) || m.get('msgid') === marked_msg_id);\n            if (enc_msg)\n                enc_chat.receiveMarker($message, tag, carbon_copied);\n            return;\n        }\n        if (msg.isSenderMe()) {\n            if ($received.length) {\n                let msg_state = msg.get('state');\n                if (msg_state === constants.MSG_ERROR){\n                    msg.set('state', constants.MSG_DELIVERED)\n                    return;\n                }\n                if (msg_state !== constants.MSG_DISPLAYED) {\n                    let delivered_time = $received.children('time').attr('stamp');\n                    if (delivered_time) {\n                        msg.set('time', pretty_datetime(delivered_time));\n                        msg.set('timestamp', Number(delivered_time));\n                    }\n                }\n                this.setMessagesDelivered(msg.get('timestamp'));\n            } else {\n                let msg_state = msg.get('state');\n                if (msg_state === constants.MSG_ERROR){\n                    msg.set('state', constants.MSG_DISPLAYED)\n                    return;\n                }\n                this.setMessagesDisplayed(msg.get('timestamp'));\n            }\n        } else {\n            msg.set('is_unread', false);\n        }\n    },\n\n    setMessagesDelivered: function (timestamp) {\n        !timestamp && (timestamp = moment.now());\n        let undelivered_messages = this.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DELIVERED));\n        if (!undelivered_messages.length) {\n            let chat =  this.account.chats.get(this.id + ':encrypted');\n            chat && (undelivered_messages = chat.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DELIVERED)));\n        }\n        undelivered_messages.forEach(message => message.set('state', constants.MSG_DELIVERED));\n    },\n\n    setMessagesDisplayed: function (timestamp) {\n        !timestamp && (timestamp = moment.now());\n        let undelivered_messages = this.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DISPLAYED));\n        if (!undelivered_messages.length) {\n            let chat =  this.account.chats.get(this.id + ':encrypted');\n            chat && (undelivered_messages = chat.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DISPLAYED)));\n        }\n        undelivered_messages.forEach(message => message.set('state', constants.MSG_DISPLAYED));\n    },\n\n    receiveCarbonsMarker: function ($marker) {\n        let stanza_id = $marker.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg_id = $marker.attr('id'),\n            msg = this.messages.find(m => stanza_id && (m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id) || m.get('msgid') === msg_id), msg_idx;\n        msg && (msg_idx = this.messages.indexOf(msg));\n        if (!msg) {\n            let enc_chat =  this.account.chats.get(this.id + ':encrypted'),\n                enc_msg = enc_chat && enc_chat.messages.find(m => stanza_id && (m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id) || m.get('msgid') === msg_id);\n            if (enc_msg){\n                enc_chat.receiveCarbonsMarker($marker);\n                return;\n            }\n        }\n        if (this.get('const_unread') && this.get('last_read_msg')){\n            let last_read_msg_id = this.get('last_read_msg'),\n                last_read_msg = this.messages.find(m => stanza_id && (m.get('stanza_id') === last_read_msg_id || m.get('contact_stanza_id') === last_read_msg_id)),\n                deferred = new $.Deferred(),\n                second_deferred = new $.Deferred(),\n                new_last_read_msg = msg;\n            second_deferred.done(() => {\n                if (last_read_msg.get('timestamp') < new_last_read_msg.get('timestamp')){\n                    this.set('last_read_msg', new_last_read_msg.get('stanza_id'))\n                    this.trigger('update_last_read_msg');\n                }\n            });\n            deferred.done(() => {\n                if (!new_last_read_msg){\n                    this.contact.getMessageByStanzaId(stanza_id, ($message) => {\n                        new_last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                        second_deferred.resolve()\n                    });\n                } else {\n                    second_deferred.resolve()\n                }\n            });\n            if (!last_read_msg){\n                this.contact.getMessageByStanzaId(last_read_msg_id, ($message) => {\n                    last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                    deferred.resolve()\n                });\n            } else {\n                deferred.resolve()\n            }\n        }\n        if (msg_idx > -1) {\n            for (let i = msg_idx; i >= 0; i--) {\n                let message = this.messages.models[i];\n                message.set('is_unread', false);\n            }\n        }\n        else {\n            let unread_msg = this.messages_unread.find(m => m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id || m.get('msgid') === msg_id);\n            unread_msg && unread_msg.set('is_unread', false);\n        }\n    },\n\n    receiveDeliveryReceipt: function ($message) {\n        let $received = $message.find('received'),\n            delivered_origin_id = $received.attr('id'),\n            delivered_stanza_id = $received.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg = this.account.messages.get(delivered_origin_id || delivered_stanza_id);\n        if (!msg)\n            return;\n        msg.isSenderMe() && msg.set('state', constants.MSG_DELIVERED);\n    },\n\n    onPresence: function (type) {\n        let jid = this.get('jid');\n        if (!this.contact.get('group_chat') && !this.contact.get('in_roster')) {\n            if (type === 'subscribe') {\n                this.messages.createSystemMessage({\n                    from_jid: jid,\n                    auth_request: true,\n                    message: xabber.getString(\"action_subscription_received\")\n                });\n            }\n        }\n    },\n\n    onRosterPush: function (type) {\n        let jid = this.get('jid');\n        // not used\n        if (type === 'remove')\n            this.messages.createSystemMessage({\n                from_jid: jid,\n                silent: false,\n                message: xabber.getString(\"action_contact_deleted\")\n            });\n\n    },\n\n    retractMessages: function (msgs, group_chat, symmetric) {\n        let msgs_responses = 0, count = msgs.length, dfd = new $.Deferred();\n        dfd.done((num) => {\n            if (num === 0) {\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            }\n            else if (num !== msgs.length) {\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            }\n        });\n        $(msgs).each((idx, item) => {\n            let stanza_id = item.get('stanza_id'),\n                contact_stanza_id = item.get('contact_stanza_id');\n            if (stanza_id || contact_stanza_id) {\n                let iq_retraction = $iq({type: 'set', to: group_chat ? (this.contact.get('full_jid') || this.contact.get('jid')) : this.account.get('jid')})\n                    .c('retract-message', {\n                        id: (this.get('group_chat') && contact_stanza_id || stanza_id),\n                        xmlns: Strophe.NS.REWRITE,\n                        symmetric: symmetric,\n                        type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this),\n                        by: this.account.get('jid')\n                    });\n                this.account.sendIQFast(iq_retraction, (success) => {\n                        this.item_view.content.removeMessage(item);\n                        msgs_responses++;\n                        (msgs_responses === msgs.length) && dfd.resolve(count);\n                    }, (error) => {\n                        msgs_responses++;\n                        if ($(error).find('not-allowed').length)\n                            count--;\n                        (msgs_responses === msgs.length) && dfd.resolve(count);\n                    });\n            }\n        });\n    },\n\n    retractMessagesByUser: function (user_id) {\n        let iq_retraction = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('retract-user', {\n                id: user_id,\n                xmlns: Strophe.NS.REWRITE,\n                type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this),\n                symmetric: true\n            });\n        this.account.sendIQFast(iq_retraction, (success) => {\n            let user_msgs = this.messages.filter(msg => msg.get('user_info') && (msg.get('user_info').id == user_id));\n            $(user_msgs).each((idx, msg) => {\n                this.item_view.content.removeMessage(msg);\n            });\n        }, (error) => {\n            if ($(error).find('not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n        });\n    },\n\n    retractAllMessages: function (symmetric, callback, errback) {\n        let is_group_chat = this.get('group_chat'),\n            iq_retraction = $iq({type: 'set', to: is_group_chat ? (this.contact.get('full_jid') || this.contact.get('jid')) : this.account.get('jid')}),\n            retract_attrs = {\n                xmlns: Strophe.NS.REWRITE,\n                type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this),\n                symmetric: symmetric\n        };\n        retract_attrs.conversation = this.get('jid');\n        this.get('encrypted') && (retract_attrs.type = 'encrypted');\n        iq_retraction.c('retract-all', retract_attrs);\n        this.account.sendIQFast(iq_retraction, (iq_response) => {\n            let all_messages = this.messages.models;\n            $(all_messages).each((idx, msg) => {\n                this.item_view.content.removeMessage(msg);\n            });\n            callback && callback();\n        }, (error) => {\n            if ($(error).find('not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            errback && errback();\n        });\n    },\n\n    showBlockedRequestMessage: function () {\n        if (this.messages.length)\n            this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                message: xabber.getString(\"action_contact_blocked\"),\n                time: this.messages.last().get('time')\n            });\n    },\n\n    muteChat: function (muted_seconds) {\n        let muted = this.isMuted(),\n            is_muted = muted && muted !== '0' ? true : false,\n            muted_value = is_muted ? '' : '0';\n        if (muted_seconds || muted_seconds === '')\n            muted_value = muted_seconds;\n        let conversation_options = {\n            jid: this.contact.get('jid'),\n            mute: muted_value,\n            type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this)\n        },\n        iq = $iq({type: 'set', to: this.account.get('jid')})\n            .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n            .c('conversation', conversation_options);\n        this.account.sendIQFast(iq);\n    },\n\n    getConversationType: function (chat) {\n        if(chat.get('encrypted'))\n            return Strophe.NS.SYNCHRONIZATION_OMEMO;\n        if(chat.contact.get('group_chat'))\n            return Strophe.NS.GROUP_CHAT;\n        return Strophe.NS.SYNCHRONIZATION_REGULAR_CHAT\n    },\n\n    deleteFromSynchronization: function (callback, errback) {\n        let conversation_options = {jid: this.get('jid'), status: 'deleted', type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this) };\n        this.account.cached_sync_conversations.removeFromCachedConversations(conversation_options.jid +  '/' + conversation_options.type);\n        let iq = $iq({type: 'set', to: this.account.get('jid')})\n            .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n            .c('conversation', conversation_options);\n        this.account.sendIQFast(iq, (success) => {\n            callback && callback(success);\n        }, (error) => {\n            errback && errback(error);\n        });\n    }\n});\n\nxabber.ChatItemView = xabber.BasicView.extend({\n    className: 'chat-item list-item',\n    template: templates.chat_item,\n    avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n    events: {\n        'click': 'openByClick'\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.message_counter = 0;\n        this.$el.attr('data-id', this.model.id);\n        if (!this.model.sync_created)\n            this.content = new xabber.ChatContentView({chat_item: this});\n        this.content_placeholder = new xabber.ChatContentPlaceholderView();\n        this.updateName();\n        this.updateStatus();\n        this.updateCounter();\n        this.updateAvatar();\n        this.updateMutedState();\n        this.updatePinned();\n        this.updateArchivedState();\n        this.updateColorScheme();\n        this.updateGroupChats();\n        this.updateIcon();\n        this.updateEncrypted();\n        this.updateChatError();\n        this.model.on(\"change:active\", this.updateActiveStatus, this);\n        this.model.on(\"change:unread\", this.updateCounter, this);\n        this.model.on(\"change:encrypted\", this.updateEncrypted, this);\n        this.model.on(\"change:const_unread\", this.updateCounter, this);\n        this.model.on(\"change:pinned\", this.updatePinned, this);\n        this.model.on(\"change:archived\", this.updateArchivedState, this);\n        this.model.on(\"change:muted\", this.updateMutedState, this);\n        this.model.on(\"open\", this.open, this);\n        this.model.on(\"remove_opened_chat\", this.onClosed, this);\n        this.model.messages.on(\"add\", this.updateChatCard, this);\n        this.model.messages.on(\"destroy\", this.onMessageRemoved, this);\n        this.model.messages.on(\"change:state\", this.onChangedMessageState, this);\n        if (this.contact) {\n            this.updateIncomingSubscription();\n            this.contact.on(\"change:name\", this.updateName, this);\n            this.contact.on(\"change:invitation\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription_request_in\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription_request_out\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:status\", this.updateStatus, this);\n            this.contact.on(\"change:private_chat\", this.updateIcon, this);\n            this.contact.on(\"change:invitation\", this.updateIcon, this);\n            this.contact.on(\"change:incognito_chat\", this.updateIcon, this);\n            this.contact.on(\"change:image\", this.updateAvatar, this);\n            this.contact.on(\"change:blocked\", this.onBlocked, this);\n            this.contact.on(\"change:group_chat\", this.updateGroupChats, this);\n            this.contact.on(\"change:in_roster\", this.updateAcceptedStatus, this);\n            this.contact.on(\"remove_invite\", this.removeInvite, this);\n            this.contact.on(\"update_trusted\", this.updateEncryptedColor, this);\n        }\n        this.$el.switchClass('saved-chat', this.model.get('saved'));\n        this.$el.find('.circle-avatar').switchClass('ground-color-700', this.model.get('saved'));\n        this.model.get('saved') && this.$el.find('.circle-avatar').html(env.templates.svg['saved-messages']());\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n    },\n\n    render: function () {\n        if (this.model.get('saved') && (this.$('.chat-title').text() !== xabber.getString(\"saved_messages__header\"))) {\n            this.$('.chat-title').text(xabber.getString(\"saved_messages__header\"));\n        }\n    },\n\n    updateChatCard: function (msg) {\n        if (this.content){\n            return;\n        }\n        if (this.message_counter == 0 && !(!msg.get('synced_from_server') && msg.get('encrypted') && this.model.get('encrypted'))){\n            this.message_counter++;\n            return\n        }\n        this.content = new xabber.ChatContentView({ chat_item: this, new_message: msg });\n        this.updateLastMessage(msg);\n        return;\n    },\n\n    onChangedMessageState: function (message) {\n        if (message.get('state') === constants.MSG_DISPLAYED && this.model.get('last_displayed_id') < message.get('stanza_id')) {\n            this.model.set('last_displayed_id', message.get('stanza_id'));\n            this.model.set('last_delivered_id', message.get('stanza_id'));\n        } else if (message.get('state') === constants.MSG_DELIVERED && this.model.get('last_delivered_id') < message.get('stanza_id')) {\n            this.model.set('last_delivered_id', message.get('stanza_id'));\n        }\n        if (this.content) {\n            let $message = this.content.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`),\n                $elem = $message.find('.msg-delivering-state');\n            $elem.attr({\n                'data-state': message.getState(),\n                'title': message.getVerboseState()\n            });\n            ($elem.attr('data-state') === constants.MSG_STATE[constants.MSG_ERROR]) && $elem.dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'left'\n            });\n        }\n        if (message === this.model.last_message) {\n            this.updateLastMessage();\n        }\n        this.updateChatError();\n    },\n\n    updateName: function () {\n        if (this.model.get('saved')) {\n            this.$('.chat-title').text(xabber.getString(\"saved_messages__header\"));\n            return;\n        }\n        this.$('.chat-title').text(this.contact.get('name'));\n    },\n\n    updateStatus: function () {\n        if (this.model.get('saved'))\n            return;\n        let status = this.contact.get('status');\n        this.$('.status').attr('data-status', status);\n        this.$('.chat-icon').attr('data-status', status);\n    },\n\n    updateActiveStatus: function () {\n        this.$el.switchClass('active', this.model.get('active'));\n        this.updateLastMessage();\n    },\n\n    updateAcceptedStatus: function () {\n        let in_roster = this.contact.get('in_roster');\n        if (in_roster)\n            this.model.set('is_accepted', true);\n    },\n\n    onBlocked: function () {\n        this.updateIcon();\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n\n    updateCounter: function () {\n        let unread = this.model.get('unread') + this.model.get('const_unread');\n        this.$('.msg-counter').showIf(unread).text(unread || '');\n        this.updateTextClipping();\n    },\n\n    updateIncomingSubscription: function () {\n        this.$('.msg-incoming-subscription').showIf(this.contact.get('invitation') || (this.contact.get('subscription_request_in') && this.contact.get('subscription') != 'both'));\n        this.updateTextClipping();\n    },\n\n    updateChatError: function () {\n        let error_msgs = this.model.messages.filter(m => m.get('state') === -1)\n        this.$('.msg-chat-error').showIf(error_msgs.length);\n        this.updateTextClipping();\n    },\n\n    updateTextClipping: function () {\n        let indicators_count = this.$('.chat-item-notifications-wrap').children(':not(.hidden)').length;\n        this.$('.last-msg').switchClass('triple-indicators', indicators_count === 3)\n        this.$('.last-msg').switchClass('quad-indicators', indicators_count === 4)\n    },\n\n    updateAvatar: function () {\n        if (this.model.get('saved'))\n            return;\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateEncrypted: function () {\n        this.$el.switchClass('encrypted', this.model.get('encrypted'));\n    },\n\n    updatePinned: function () {\n        let is_pinned = this.model.get('pinned');\n        this.$('.pinned-icon').showIf(is_pinned && is_pinned !== '0');\n        if (is_pinned)\n            xabber.chats_view.updateChatPosition(this.model);\n    },\n\n    updateEncryptedColor: function (encrypted) {\n        this.$el.attr('data-trust', encrypted);\n    },\n\n    updateIcon: function () {\n        if (!this.contact)\n            return;\n        this.$('.chat-icon').addClass('hidden');\n        let ic_name = this.contact.getIcon();\n        ic_name && this.$('.chat-icon').removeClass('hidden group-invite blocked').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n    },\n\n    updateMutedState: function () {\n        if (!this.contact)\n            return;\n        this.$('.msg-counter').switchClass('muted-chat-counter', this.model.isMuted());\n        this.$('.muted-icon').switchClass('mdi-bell-off', (this.model.isMuted() > 4800000000)).switchClass('mdi-bell-sleep', (this.model.isMuted() <= 4800000000));\n        this.$('.muted-icon').showIf(this.model.isMuted());\n    },\n\n    updateArchivedState: function () {\n        if (!this.contact)\n            return;\n        let archived = this.model.get('archived');\n        if (archived || (!archived && xabber.toolbar_view.$('.active').hasClass('archive-chats')))\n            this.$el.detach();\n        if (archived && xabber.toolbar_view.$('.active').hasClass('archive-chats') || !archived && !xabber.toolbar_view.$('.active').hasClass('archive-chats'))\n            xabber.chats_view.updateChatPosition(this.model);\n    },\n\n    updateGroupChats: function () {\n        if (!this.contact)\n            return;\n        let is_group_chat = this.contact.get('group_chat');\n        this.$('.status').hideIf(is_group_chat);\n        this.$('.chat-icon').showIf(is_group_chat);\n        this.updateIcon();\n        if (is_group_chat) {\n            this.$el.addClass('group-chat');\n            this.model.set('group_chat', true);\n        }\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    onMessageRemoved: function (msg) {\n        if (this.model.last_message === msg) {\n            let last_message;\n            for (let idx = this.model.messages.length-1; idx >= 0; idx--) {\n                last_message = this.model.messages.at(idx);\n                if (!last_message.get('silent'))\n                    break;\n            }\n            this.model.last_message = last_message;\n            this.updateLastMessage();\n        }\n        this.deletePlayersFromMessage(msg);\n    },\n\n    deletePlayersFromMessage: function (message) {\n        let players = []\n        message.get('msg_player_videos') && (players = players.concat(message.get('msg_player_videos')));\n        message.get('msg_player_audios') && (players = players.concat(message.get('msg_player_audios')));\n        if (players.length){\n            if (xabber.current_plyr_player){\n                let is_current_player = xabber.current_plyr_player.is_popup ?\n                    players.includes(xabber.current_plyr_player.chat_item.model.plyr_players[xabber.current_plyr_player.player_index])\n                    : players.includes(xabber.current_plyr_player);\n\n                if (is_current_player){\n                    xabber.plyr_players.forEach((item) => {\n                        if (item.$audio_elem){\n                            if (item.$audio_elem.voice_message)\n                                item.$audio_elem.voice_message.stopTime()\n                        }\n                        else\n                            item.stop();\n                    })\n                    if (xabber.current_plyr_player.is_popup && xabber.plyr_player_popup){\n                        xabber.plyr_player_popup.closePopup();\n                    } else {\n                        xabber.current_plyr_player = null;\n                        xabber.trigger('plyr_player_updated');\n                    }\n                }\n            }\n            this.model.plyr_players = this.model.plyr_players.filter((obj) => !players.includes(obj));\n            xabber.plyr_players = xabber.plyr_players.filter((obj) => !players.includes(obj));\n            xabber.trigger('plyr_player_updated');\n        }\n    },\n\n    updateEmptyChat: function () {\n        let msg_time = this.model.get('timestamp'),\n            is_empty = Number(this.model.get('last_delivered_id')) || Number(this.model.get('last_displayed_id')) || Number(this.model.get('last_read_msg'));\n        this.$('.last-msg').html(xabber.getString(is_empty ? \"recent_chat__last_message_retracted\" : \"no_messages\").italics());\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateEncryptedChat: function () {\n        let msg_time = this.model.get('timestamp');\n        this.$('.last-msg').html(xabber.getString(\"recent_chat__decrypting_messages\").italics());\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateLastMessage: function (msg) {\n        msg || (msg = this.model.last_message);\n        if (!this.model.get('active') && this.model.item_view && this.model.item_view.content && this.model.item_view.content.bottom && this.model.item_view.content.bottom.$('.input-message .rich-textarea').getTextFromRichTextarea().trim()){\n            let draft_message = this.model.item_view.content.bottom.$('.input-message .rich-textarea').getTextFromRichTextarea();\n            this.$('.last-msg').html(draft_message).prepend($(`<span class=\"text-color-700\">${xabber.getString(\"draft\")}: </span>`));\n            this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n            msg && this.model.set({timestamp: msg.get('timestamp')});\n            return;\n        }\n        if (!msg) {\n            !this.model.messages.length && this.updateEmptyChat();\n            return;\n        }\n        let msg_time = msg.get('time'),\n            timestamp = msg.get('timestamp'), msg_from = \"\",\n            forwarded_message = msg.get('forwarded_message'),\n            msg_files = msg.get('files') || [],\n            msg_images = msg.get('images') || [],\n            msg_locations = msg.get('locations') || [],\n            msg_text = forwarded_message ? (msg.get('message') || xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText(),\n            msg_user_info = msg.get('user_info') || msg.isSenderMe() && this.contact && this.contact.my_info && this.contact.my_info.attributes || {};\n        msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n        this.model.set({timestamp: timestamp});\n        if (this.model.get('group_chat'))\n            msg_from = msg_user_info.nickname || msg_user_info.jid || (msg.isSenderMe() ? this.account.get('name') : msg.get('from_jid')) || \"\";\n        msg_from && (msg_from = $('<span class=\"text-color-700\"/>').text(msg_from + ': '));\n        if (msg_files.length || msg_images.length || msg_locations.length) {\n            let $colored_span = $('<span class=\"text-color-500\"/>');\n            if (msg.get('type') === 'file_upload') {\n                msg_images = msg_files.filter(f => f && f.type && utils.isImageType(f.type));\n                msg_files = msg_files.filter(f => f && !(f.type && utils.isImageType(f.type)));\n            }\n            if (msg_files.length && msg_images.length)\n                msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n            else {\n                if (msg_files.length == 1 && (msg_files[0].is_audio || msg_files[0].voice))\n                    msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(msg_files[0].duration));\n                else if (msg_files.length > 0) {\n                    let total_size = 0;\n                    msg_files.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_images.length > 0) {\n                    let total_size = 0;\n                    msg_images.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_locations.length > 0) {\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                }\n            }\n            this.$('.last-msg').html(\"\").append(msg_from).append(msg_text);\n        }\n        else {\n            if (msg.get('type') == 'system') {\n                msg_from = \"\";\n                if (msg.get('invite'))\n                    msg_text = xabber.getString(\"groupchat_invitation_to_group_chat\", [(this.contact && this.contact.get('incognito_chat')) ? 'incognito' : 'public']);\n                msg.get('private_invite') && (msg_text = xabber.getString(\"recent_chat__last_message__private_invitation\"));\n                if (this.model.get('group_chat'))\n                    msg_text = $('<i/>').text(msg_text);\n                else\n                    msg_text = $('<span class=text-color-500/>').text(msg_text);\n                this.$('.last-msg').html(msg_text);\n                if (msg.get('auth_request')){\n                    xabber.toolbar_view.recountAllMessageCounter();\n                }\n            }\n            else {\n                if (forwarded_message) {\n                    if (msg.get('message')) {\n                        msg_text = msg.get('message');\n                        this.$('.last-msg').text(msg_text);\n                    }\n                    else {\n                        let first_forwarded_msg = forwarded_message[0];\n                        if (first_forwarded_msg.get('message')) {\n                            let fwd_msg_files = first_forwarded_msg.get('files') || [],\n                                fwd_msg_images = first_forwarded_msg.get('images') || [],\n                                fwd_msg_locations = first_forwarded_msg.get('locations') || [];\n                            first_forwarded_msg.get('videos') && first_forwarded_msg.get('videos').length && (fwd_msg_files = fwd_msg_files.concat(first_forwarded_msg.get('videos')));\n                            if (fwd_msg_files.length || fwd_msg_images.length || fwd_msg_locations.length) {\n                                let $colored_span = $('<span class=\"text-color-500\"/>');\n                                if (msg.get('type') === 'file_upload') {\n                                    fwd_msg_images = fwd_msg_files.filter(f => f.type && utils.isImageType(f.type));\n                                    fwd_msg_files = fwd_msg_files.filter(f => !(f.type && utils.isImageType(f.type)));\n                                }\n                                if (fwd_msg_files.length && fwd_msg_images.length)\n                                    msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [fwd_msg_files.length + fwd_msg_images.length]));\n                                else {\n                                    if (fwd_msg_files.length == 1 && (fwd_msg_files[0].is_audio || fwd_msg_files[0].voice))\n                                        msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(fwd_msg_files[0].duration));\n                                    else if (fwd_msg_files.length > 0) {\n                                        let total_size = 0;\n                                        fwd_msg_files.forEach((f) => {total_size+=Number(f.size)});\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", fwd_msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                                    }\n                                    if (fwd_msg_images.length > 0) {\n                                        let total_size = 0;\n                                        fwd_msg_images.forEach((f) => {total_size+=Number(f.size)});\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", fwd_msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                                    }\n                                    if (fwd_msg_locations.length > 0) {\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", fwd_msg_locations.length));\n                                    }\n                                }\n                                if (this.model.get('group_chat')) {\n                                    this.$('.last-msg').html(\"\").append(msg_from).append('» ').append(msg_text);\n                                } else {\n                                    this.$('.last-msg').html(\"» \").append(msg_text);\n                                }\n                            } else if (this.model.get('group_chat')) {\n                                msg_text = first_forwarded_msg.get('message');\n                                msg_text = '» ' + msg_text;\n                                this.$('.last-msg').text(msg_text);\n                            } else {\n                                msg_text = first_forwarded_msg.get('message');\n                                this.$('.last-msg').text(msg_text);\n                                msg_from = '» ';\n                            }\n                        }\n                        else {\n                            if (forwarded_message.length === 1) {\n                                let fwd_msg_txt = xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).slice(2)\n                                fwd_msg_txt = fwd_msg_txt.charAt(0).toUpperCase() + fwd_msg_txt.slice(1)\n                                msg_text = $('<i/>').text(fwd_msg_txt);\n                                this.$('.last-msg').html('» ').append(msg_text);\n                            }\n                            else {\n                                msg_text = $('<i/>').text(xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length));\n                                this.$('.last-msg').html('» ').append(msg_text);\n                            }\n                        }\n                    }\n                }\n                else {\n                    msg_text = msg.getText();\n                    this.$('.last-msg').text(msg_text);\n                }\n            }\n            this.$('.last-msg').prepend(msg_from);\n        }\n        if (msg.get('not_encrypted'))\n            this.$('.last-msg').html(this.$('.last-msg').html().italics());\n        this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n        this.$('.msg-delivering-state').showIf(msg.get('type') !== 'system' && msg.isSenderMe() && (msg.get('state') !== constants.MSG_ARCHIVED))\n            .attr('data-state', msg.getState());\n    },\n\n    openByClick: function () {\n        this.open();\n    },\n\n    open: function (options) {\n        if (!this.content){\n            this.content = new xabber.ChatContentView({chat_item: this});\n        }\n        options || (options = {right_contact_save: true, clear_search: false});\n        xabber.chats_view.openChat(this, options);\n        this.content.bottom.click_counter = 0;\n        this.content.bottom.setDefaultPlaceholder();\n    },\n\n    removeInvite: function (options) {\n        if (!this.account.server_features.get(Strophe.NS.REWRITE))\n            return;\n        options || (options = {});\n        let msgs = _.clone(this.model.messages.models);\n        this.model.set({'last_archive_id': undefined, 'first_archive_id': undefined});\n        msgs.forEach((item) => {\n            if (item.get('invite')) {\n                let iq_retraction = $iq({type: 'set', to: this.account.get('jid')})\n                    .c('retract-message', {\n                        id: item.get('stanza_id'),\n                        xmlns: Strophe.NS.REWRITE,\n                        type: Strophe.NS.SYNCHRONIZATION_REGULAR_CHAT,\n                        symmetric: false,\n                    });\n                this.account.sendIQFast(iq_retraction);\n                item && this.content.removeMessage(item);\n            }\n        });\n        this.model.recountUnread();\n        delete this.contact.attributes.invitation;\n        this.updateIcon();\n    },\n\n    onClosed: function () {\n        this.parent.onChatRemoved(this.model, {soft: true});\n    }\n});\n\n  xabber.MessagesView = xabber.BasicView.extend({\n      template: templates.chat_content,\n      ps_selector: '.chat-content',\n      ps_settings: {\n          wheelPropagation: true\n      },\n      avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n\n      _initialize: function (options) {\n          this.model = options.model;\n          this.contact = options.contact;\n          this.account = this.model.account;\n          let color = this.account.settings.get('color');\n          this.$el.attr('data-color', color);\n          this.$search_form = this.$('.search-form-header');\n          this.loading_history = false;\n          this.history_loaded = false;\n          this.first_msg_id = 0;\n          this.last_msg_id = 0;\n          this._scrolltop = this.getScrollTop();\n          this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n          this.chat_content = options.chat_content || this.model.item_view.content;\n          let wheel_ev = this.defineMouseWheelEvent();\n          this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n          this.$('.back-to-bottom').click(this.backToBottom.bind(this));\n      },\n\n      defineMouseWheelEvent: function () {\n          if (!_.isUndefined(window.onwheel)) {\n              return \"wheel\";\n          } else if (!_.isUndefined(window.onmousewheel)) {\n              return \"mousewheel\";\n          } else {\n              return \"MozMousePixelScroll\";\n          }\n      },\n\n      keyupSearch: function (ev) {\n          if (ev.keyCode === constants.KEY_ENTER) {\n              let query = this.$search_form.find('input').val();\n              this.model.searchMessages(query, (messages) => {\n              });\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              this.chat_content.head.renderSearchPanel();\n          }\n      },\n\n      onMouseWheel: function (ev) {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onClickMessage:function (ev) {\n          this.chat_content.onClickMessage(ev);\n      },\n\n      onClickLink:function (ev) {\n          this.chat_content.onClickLink(ev);\n      },\n\n      onClickLocationLink:function (ev) {\n          this.chat_content.onClickLocationLink(ev);\n      },\n\n      onClickLocation:function (ev) {\n          this.chat_content.onClickLocation(ev);\n      },\n\n      onHoverLocation:function (ev) {\n          this.chat_content.onHoverLocation(ev);\n      },\n\n      onScroll: function () {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this._prev_scrolltop = this._scrolltop || this._prev_scrolltop || 0;\n          this._scrolltop = this.getScrollTop() || this._scrolltop || this._prev_scrolltop || 0;\n          if (!this.history_loaded && !this.loading_history && (this._scrolltop < this._prev_scrolltop) && (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n              this.loading_history = true;\n              this.messagesRequest({before: this.first_msg_id}, () => {\n                  this.loading_history = false;\n              });\n          }\n      },\n\n      backToBottom: function () {\n          this.openChat();\n          this.scrollToBottom();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      messagesRequest: function () {},\n\n      emptyChat: function () {\n          this.$('.chat-content').html($('<span class=\"error\"/>').text(xabber.getString(\"no_messages\")));\n      },\n\n      openChat: function () {\n          this.model.item_view.open({right_contact_save: true, clear_search: false});\n      },\n\n      addMessageHTML: function ($message, msg, index, last_index) {\n          let scrolled_from_top,\n              scrolled_from_bottom = this.getScrollBottom();\n          if (index === 0)\n              $message.prependTo(this.$('.chat-content'));\n          else\n              $message.insertAfter(this.$('.chat-message').eq(index - 1));\n          if (index === last_index)\n              scrolled_from_top = this.getScrollTop();\n          let $next_message = $message.nextAll('.chat-message').first();\n          this.chat_content.updateMessageInChat($message[0], msg);\n          if ($next_message.length) {\n              this.chat_content.updateMessageInChat($next_message[0]);\n          }\n          this.chat_content.initPopup($message);\n          if (scrolled_from_top)\n              this.scrollTo(scrolled_from_top);\n          else\n              this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - scrolled_from_bottom);\n          return $message;\n      }\n\n  });\n\n  xabber.MessageContextView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap messages-context-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          options = options || {};\n          this.stanza_id = options.stanza_id_context;\n          this.encrypted = options.encrypted;\n          this.mention_context = options.mention_context;\n          if (!this.model.item_view.content)\n              this.chat_content = new xabber.ChatContentView({chat_item: this.model.item_view});\n          this.$history_feedback = this.$('.load-history-feedback');\n          this.account.context_messages = new xabber.Messages(null, {account: this.account});\n          this.account.context_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.account.context_messages.on(\"add\", this.addMessage, this);\n          this.account.context_messages.on(\"change:is_unread\", this.onChangedReadState, this);\n          xabber.on('plyr_player_updated', this.onUpdatePlyr, this);\n      },\n\n      render: function () {\n          this.scrollToTop();\n          this.onUpdatePlyr();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this.encrypted && this.$el.attr('data-trust', true)\n      },\n\n      onMouseWheel: function (ev) {\n          if (!this.loading_history)\n              if (ev.originalEvent.deltaY < 0) {\n                  if (!this.first_history_loaded) {\n                      this.loading_history = true;\n                      this.messagesRequest({before: this.first_msg_id}, () => {\n                          this.loading_history = false;\n                      });\n                  }\n              }\n              else {\n                  if (!this.last_history_loaded) {\n                      this.loading_history = true;\n                      this.messagesRequest({after: this.last_msg_id}, () => {\n                          this.loading_history = false;\n                      });\n                  }\n              }\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onScroll: function () {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this._prev_scrolltop = this._scrolltop || this._prev_scrolltop || 0;\n          this._scrolltop = this.getScrollTop() || this._scrolltop || this._prev_scrolltop || 0;\n          this._scrollbottom = this.getScrollBottom();\n\n          if (!this.loading_history)\n              if (!this.first_history_loaded && (this._scrolltop < this._prev_scrolltop) && (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n                  this.loading_history = true;\n                  this.showHistoryFeedback();\n                  this.messagesRequest({before: this.first_msg_id}, () => {\n                      this.loading_history = false;\n                      this.hideHistoryFeedback();\n                  });\n              }\n              else {\n                  if (!this.last_history_loaded && (this._scrolltop > this._prev_scrolltop) && (this._scrollbottom < 100 || this.getPercentScrolled() > 0.9)) {\n                      this.loading_history = true;\n                      this.showHistoryFeedback();\n                      this.messagesRequest({after: this.last_msg_id}, () => {\n                          this.loading_history = false;\n                          this.hideHistoryFeedback();\n                      });\n                  }\n              }\n\n          clearTimeout(this._onscroll_read_messages_timeout);\n          this._onscroll_read_messages_timeout = setTimeout(() => {\n              this.chat_content.readVisibleMessages(true);\n          }, 100)\n      },\n\n      onChangedReadState: function (message) {\n          let is_unread = message.get('is_unread'),\n              $msg = this.$(`.chat-message[data-uniqueid=\"${message.get(\"unique_id\")}\"]`);\n          if (is_unread) {\n              $msg.addClass('unread-message');\n              $msg.addClass('unread-message-background');\n          } else {\n              $msg.removeClass('unread-message');\n              setTimeout(() => {\n                  $msg.removeClass('unread-message-background');\n              }, 1000);\n          }\n      },\n\n      showHistoryFeedback: function () {\n          this.$history_feedback.text(xabber.getString(\"loading_history\")).removeClass('hidden');\n      },\n\n      hideHistoryFeedback: function () {\n          this.$history_feedback.addClass('hidden');\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              queryid = uuid();\n          !options.max && (options.max = xabber.settings.mam_messages_limit);\n          !options.after && !options.before && (options.before = '');\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first) && (this.last_msg_id = rsm.last);\n                  if (options.after && (messages.length < options.max))\n                      this.last_history_loaded = true;\n                  if (options.before && (messages.length < options.max))\n                      this.first_history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {context_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          if (this.mention_context && (message.get('stanza_id') === this.stanza_id)) {} else message.set('is_archived', true);\n\n          let msg_item = this.model.messages.find(msg => msg.get('stanza_id') == message.get('stanza_id') || msg.get('contact_stanza_id') == message.get('stanza_id'));\n          if (msg_item) {\n              msg_item.get('is_unread') && message.set('is_unread', msg_item.get('is_unread'));\n              msg_item.get('is_unread_archived') && message.set('is_unread_archived', msg_item.get('is_unread_archived'));\n          }\n\n          let $message = this.chat_content.buildMessageHtml(message).addClass('context-message'),\n              index = this.account.context_messages.indexOf(message);\n          if (message.get('stanza_id') === this.stanza_id) {\n              $message.addClass('message-from-context');\n              setTimeout(() => {\n                  $message.removeClass('message-from-context')\n              }, 3000);\n          }\n          this.addMessageHTML($message, message, index, this.account.context_messages.findLastIndex());\n      },\n\n      onUpdatePlyr: function (ev) {\n          this.$('.plyr-video-container').removeClass('active-plyr-container');\n          if (xabber.current_plyr_player && xabber.current_plyr_player.player_item) {\n              let $message = this.$(`.chat-message[data-uniqueid=\"${xabber.current_plyr_player.message_unique_id}\"]`);\n              if ($message.length) {\n                  $message.find(`.plyr-video-container[data-message-id=\"${xabber.current_plyr_player.player_item.message_id}\"]`).addClass('active-plyr-container');\n              }\n          }\n      },\n  });\n\n  xabber.SearchedMessagesView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap searched-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"click .btn-cancel-searching\": \"openChat\",\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          this.query_text = options.query_text;\n          this.account.searched_messages = new xabber.Messages(null, {account: this.account});\n          this.account.searched_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.account.searched_messages.on(\"add\", this.addMessage, this);\n          return this;\n      },\n\n      render: function () {\n          this.$search_form.find('input').val(this.query_text);\n          this.$search_form.slideToggle(10, () => {\n              if (this.$search_form.css('display') !== 'none')\n                  this.$search_form.find('input').focus();\n              this.scrollToBottom();\n          });\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              before: query.before || '',\n              var: [{var: 'withtext', value: this.query_text}]\n          });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.searched_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {searched_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('searched-message'),\n              index = this.account.searched_messages.indexOf(message);\n          this.addMessageHTML($message, message, index);\n      }\n  });\n\n  xabber.ContactSearchedMessagesView = xabber.MessagesView.extend({\n      template: templates.chat_content_contact,\n      ps_settings: {\n          wheelPropagation: true\n      },\n      avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n      className: 'chat-content-wrap searched-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"click .btn-cancel-searching\": \"openChat\",\n          \"keyup .messages-search-form\": \"keyupSearch\",\n          \"click .close-search-icon\": \"clearSearch\",\n          'click .btn-back': 'hideSearch'\n      },\n\n      _initialize: function (options) {\n          this.model = options.model;\n          this.contact = options.contact;\n          this.account = this.model.account;\n          this.$search_form = this.$('.search-form-header');\n          this.timer = null;\n          this.loading_history = false;\n          this.history_loaded = false;\n          this.first_msg_id = 0;\n          this.last_msg_id = 0;\n          this.chat_content = options.chat_content || this.model.item_view.content;\n          this.parent.model.set('search_hidden', true)\n          return this;\n      },\n\n      render: function () {\n          if (this.account.searched_messages)\n              this.searched_messages = this.account.searched_messages\n          this.account.searched_messages = new xabber.Messages(null, {account: this.account});\n          if (this.searched_messages)\n              this.account.searched_messages.add(this.searched_messages.toJSON(), {silent : true});\n          this.account.searched_messages.on(\"add\", this.addMessage, this);\n          if (this.parent.model.get('saved_search_panel')) {\n              this.$el.html(this.parent.model.get('saved_search_panel'));\n              this.model.set('saved_search_panel', undefined);\n          }\n          else {\n              this.emptyChat();\n              this.$el.html(this.template());\n              this.emptyChat();\n              if (this.parent.model.get('search_hidden'))\n                  this.hideSearch();\n          }\n          this.ps_container = this.$('.search-messages-content-wrap');\n          if (this.ps_container.length) {\n              this.ps_container.perfectScrollbar(\n                  _.extend(this.ps_settings || {}, xabber.ps_settings)\n              );\n          }\n          this.$search_form = this.$('.search-form-header');\n          if (this.parent.model.get('saved_search_panel')) {\n              this.$search_form.find('input').focus();\n              if (this.parent.model.get('saved_search_panel_scroll'))\n                  this.scrollTo(this.parent.model.get('saved_search_panel_scroll'));\n          }\n      },\n\n      clearSearch: function () {\n          this.$search_form.find('input').val('');\n          this.emptyChat();\n      },\n\n\n      keyupSearch: function (ev) {\n          this.$('.close-search-icon').hideIf(!this.$search_form.find('input').val());\n          if (ev.keyCode === constants.KEY_ENTER) {\n              this.emptyChat();\n              let query = this.$search_form.find('input').val();\n              this.$('.preloader-wrap').hideIf(false);\n              this.loading_timestamp = Number(moment.now());\n              this.messagesRequest(query, this.loading_timestamp, undefined, [], (messages, rsm) => {\n              });\n          }\n      },\n\n      emptyChat: function () {\n          if (this.account.searched_messages)\n              this.account.searched_messages.reset();\n          this.$('.chat-content').html('');\n          this.$('.messages-count').hideIf(true);\n          this.$('.preloader-wrap').hideIf(true);\n          this.$('.search-results').hideIf(true);\n          this.$('.close-search-icon').hideIf(true);\n      },\n\n      messagesRequest: function (query, timestamp, rsm, loaded_messages, callback) {\n          if(!query || this.loading_timestamp != timestamp) {\n              this.emptyChat();\n              return true;\n          }\n          let messages = [],\n              options = {},\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              var: [{var: 'withtext', value: query}]\n          });\n          if (rsm && rsm.last)\n              _.extend(options, {\n                  after: rsm.last,\n              });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.searched_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  loaded_messages = loaded_messages.concat(messages)\n                  if (messages.length == options.max){\n                      if (this.parent &&  this.parent.data && !this.parent.data.get('visible') || this.parent.model.get('search_hidden'))\n                          return;\n                      else\n                          this.messagesRequest(query, timestamp, rsm, loaded_messages, (messages, rsm) => {});\n                  }\n                  else if (loaded_messages.length == rsm.count) {\n                      if (rsm.count != 0) {\n                          let message_count = rsm.count;\n                          this.emptyChat()\n                          // list.sort((a, b) => (a.color > b.color) ? 1 : -1)\n                          $(loaded_messages).each((idx, message) => {\n                              let $message = $(message),\n                                  $jingle_msg_propose = $message.find(`propose[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`);\n                              if ($jingle_msg_propose.length)\n                                  message_count--;\n                              this.account.chats.receiveChatMessage($message, {\n                                  searched_message: true,\n                                  searched_in_contact_messages: true,\n                                  query: query\n                              });\n                          });\n                          this.$('.messages-count').hideIf(!message_count);\n                          this.$('.close-search-icon').hideIf(!message_count);\n                          this.$('.search-results').hideIf(message_count);\n                          this.$('.messages-count').text(xabber.getQuantityString(\"searched_messages_count\", message_count));\n                      }\n                      else {\n                          this.emptyChat();\n                          this.$('.close-search-icon').hideIf(false);\n                          this.$('.search-results').hideIf(false);\n                      }\n\n                  }\n                  callback && callback(messages, rsm);\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessageHTML: function ($message, msg, index, last_index) {\n          $message.prependTo(this.$('.chat-content'));\n          if (index === last_index)\n              scrolled_from_top = this.getScrollTop();\n          let $next_message = $message.nextAll('.chat-message').first();\n          // this.chat_content.updateMessageInChat($message[0]);\n          // if ($next_message.length) {\n          //     this.chat_content.updateMessageInChat($next_message[0]);\n          // }\n          // this.chat_content.initPopup($message);\n          return $message;\n      },\n\n      addMessage: function (message) {\n          if (!this.parent.model.get('search_hidden')) {\n              if (message.get('auth_request') || !message.get('searched_in_contact_messages'))\n                  return;\n              message.set('is_archived', true);\n              message.set('searched_message', true);\n              let $message = this.chat_content.buildMessageHtml(message).addClass('searched-message'),\n                  index = this.account.searched_messages.indexOf(message);\n              this.chat_content.showMessageAuthor($message);\n              this.addMessageHTML($message, message, index);\n          }\n      },\n\n      hideSearch: function (ev) {\n          this.parent.model.set('search_hidden', true);\n          this.$('.search-input').val('')\n          this.emptyChat();\n          if (this.parent.ps_container.length) {\n              this.parent.ps_container.perfectScrollbar(\n                  _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n              );\n          }\n          this.$('.search-wrap').hideIf(this.parent.model.get('search_hidden'))\n      },\n\n      onClickMessage: function (ev) {\n          let $elem = $(ev.target),\n              $msg = $elem.closest('.chat-message');\n          this.parent.model.set('saved_search_panel_scroll', this.ps_container[0].scrollTop);\n          this.ps_container.perfectScrollbar('destroy');\n          this.parent.model.set('saved_search_panel', this.$el.clone());\n          this.model.getMessageContext($msg.data('uniqueid'), {searched_messages: true});\n      }\n  });\n\n  xabber.ParticipantMessagesView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap participant-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          'click .btn-cancel-selection' : 'openChat',\n          'click .btn-retract-messages' : 'retractMessages',\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          this.participant = options.participant;\n          this.member_jid = this.participant.jid;\n          this.member_id = this.participant.id;\n          this.member_nickname = this.participant.nickname;\n          this.account.participant_messages = new xabber.Messages(null, {account: this.account});\n          this.account.participant_messages.on(\"add\", this.addMessage, this);\n          this.account.participant_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n          return this;\n      },\n\n      render: function () {\n          this.$('.chat-content').css('height', 'calc(100% - 32px)');\n          this.$('.participant-messages-header .messages-by-header .participant-nickname').text(this.member_nickname);\n          this.$('.participant-messages-header').removeClass('hidden');\n          this.scrollToBottom();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onScrollY: function () {\n\n      },\n\n      retractMessages: function () {\n          utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__confirm\", [(this.member_nickname || this.member_jid || this.member_id)]),\n              null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n              if (result) {\n                  if (this.member_id) {\n                      this.chat_content.model.retractMessagesByUser(this.member_id, () => {\n                          this.emptyChat();\n                      });\n                  }\n              }\n          });\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              member_id = this.member_id,\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              before: query.before || '',\n              var: [{var: 'with', value: member_id}]\n          });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid) {\n                  messages.push(message);\n              }\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options,\n              (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.participant_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {participant_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('participant-message'),\n              index = this.account.participant_messages.indexOf(message);\n          this.addMessageHTML($message, message, index);\n      }\n  });\n\n  xabber.SubscriptionButtonsView = xabber.BasicView.extend({\n      template: templates.subscription_buttons,\n\n      events: {\n          \"click .btn-decline\": \"declineSubscription\",\n          \"click .btn-allow\": \"allowSubscription\",\n          \"click .btn-add\": \"addContact\",\n          \"click .btn-subscribe\": \"addContact\",\n          \"click .btn-block\": \"blockContact\"\n      },\n\n      _initialize: function (options) {\n          this.$el.html(this.template());\n          this.contact = options.contact;\n          this.contact.on(\"change:subscription\", this.render, this);\n          this.contact.on(\"change:in_roster\", this.render, this);\n          this.contact.on(\"change:blocked\", this.render, this);\n          this.contact.on(\"change:subscription_request_in\", this.render, this);\n          this.contact.on(\"change:subscription_request_out\", this.render, this);\n      },\n\n      render: function () {\n          this.$el.closest('.chat-content-wrap').children('.chat-content').removeClass('with-before');\n          if (this.contact.get('group_chat')) {\n              this.$el.addClass('hidden');\n              return;\n          }\n          let subscription = this.contact.get('subscription'),\n              in_request = this.contact.get('subscription_request_in'),\n              in_roster = this.contact.get('in_roster'),\n              out_request = this.contact.get('subscription_request_out');\n          this.$('.button').removeClass('hidden');\n          this.$('.subscription-info').text(\"\");\n          this.$el.addClass('hidden');\n          if (subscription === 'both' || this.contact.get('blocked'))\n              return;\n          else if (subscription === 'to' && in_request || (subscription === 'none' && in_request && in_roster)) {\n              this.$('.subscription-info').text(xabber.getString(\"subscription_status_in_request_incoming\"));\n              this.$('.button:not(.btn-allow)').addClass('hidden');\n          } else if (!out_request && !in_roster && !in_request && (subscription === 'from' || subscription === 'none')) {\n              this.$('.subscription-info').text(xabber.getString(\"chat_subscribe_request_outgoing\"));\n              this.$('.button:not(.btn-subscribe)').addClass('hidden');\n          } else if (subscription === undefined || subscription === 'none' && in_request) {\n              this.$('.button:not(.btn-add):not(.btn-block)').addClass('hidden');\n          } else {\n              return;\n          }\n          this.$el.removeClass('hidden');\n          this.$el.closest('.chat-content-wrap').children('.chat-content').addClass('with-before');\n      },\n\n      hideElement: function () {\n          this.$el.addClass('hidden');\n          this.$el.closest('.chat-content-wrap').children('.chat-content').removeClass('with-before');\n      },\n\n      declineSubscription: function () {\n          this.contact.declineSubscribe();\n          this.contact.set('subscription_request_in', false);\n          this.hideElement();\n      },\n\n      allowSubscription: function () {\n          this.contact.acceptRequest();\n          this.hideElement();\n      },\n\n      addContact: function () {\n          if (this.contact.get('subscription') === undefined)\n              this.contact.pushInRoster(null, () => {\n                  this.sendAndAskSubscription();\n              });\n          else\n              this.sendAndAskSubscription();\n          this.hideElement();\n      },\n\n      sendAndAskSubscription: function () {\n          this.contact.askRequest();\n          this.contact.acceptRequest();\n      },\n\n      blockContact: function () {\n          this.contact.blockRequest();\n          this.hideElement();\n      }\n  });\n\nxabber.ChatContentView = xabber.BasicView.extend({\n    className: 'chat-content-wrap',\n    template: templates.chat_content,\n    ps_selector: '.chat-content',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n\n    events: {\n        'mousedown .chat-message': 'onTouchMessage',\n        'click .chat-message': 'onClickMessage',\n        'click .chat-msg-location-content': 'onClickLocation',\n        'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n        'click .mdi-link-variant' : 'onClickLink',\n        'click .msg-copy-location' : 'onClickLocationLink',\n        'click .pinned-message' : 'showPinnedMessage',\n        \"keyup .messages-search-form\": \"keyupSearch\",\n        \"click .btn-cancel-searching\": \"cancelSearch\",\n        \"click .back-to-bottom\": \"backToBottom\",\n        \"click .back-to-unread:not(.back-to-bottom)\": \"scrollToUnreadWithButton\",\n        \"click .btn-retry-send-message\": \"retrySendMessage\",\n        \"click .btn-delete-message\": \"removeFileErrorMessage\",\n        \"click .encryption-warning\": \"openDevicesWindow\"\n    },\n\n    _initialize: function (options) {\n        this.chat_item = options.chat_item;\n        this.current_day_indicator = null;\n        this._pending_avatars = [];\n        this.account = this.chat_item.account;\n        this.model = this.chat_item.model;\n        this.contact = this.model.contact;\n        this.head = this.model.get('saved') ? new xabber.SavedChatHeadView({content: this}) : new xabber.ChatHeadView({content: this});\n        this.bottom = new xabber.ChatBottomView({content: this});\n        this.$history_feedback = this.$('.load-history-feedback');\n        this.$pinned_message = this.$('.pinned-message');\n        this.$search_form = this.$('.search-form-header');\n        this.$el.attr('data-id', this.model.id);\n        this.updateContentColorScheme();\n        if ((this.model.sync_created && this.model.last_message) || options.new_message && !options.new_message.get('synced_from_server') && options.new_message.get('encrypted') && this.model.get('encrypted')){\n            this.model.last_message && this.onMessage(this.model.last_message);\n            if (options.new_message){\n                this.onMessage(options.new_message);\n                this.onChangedReadState(options.new_message);\n            }\n        }\n        this._scrolltop = this.getScrollTop();\n        this._is_scrolled_bottom = true;\n        this._long_reading_timeout = false;\n        let wheel_ev = this.defineMouseWheelEvent();\n        this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.model.on(\"change:active change:idle\", this.onChangedActiveStatus, this);\n        xabber.on(\"change:idle change:focused\", this.onChangedIdleStatus, this);\n        this.model.on(\"load_last_history\", this.loadLastHistory, this);\n        this.model.on(\"get_missed_history\", this.requestMissedMessages, this);\n        this.model.messages.on(\"add\", this.onMessage, this);\n        this.model.messages.on(\"change:is_unread\", this.onChangedReadState, this);\n        this.model.messages.on(\"change:timestamp\", this.onChangedMessageTimestamp, this);\n        this.model.messages.on(\"change:trusted\", this.onTrustedChanged, this);\n        this.model.messages.on(\"change:last_replace_time\", this.updateMessage, this);\n        this.model.on(\"change:unread\", this.updateCounter, this);\n        this.model.on(\"change:const_unread\", this.updateCounter, this);\n        if (this.contact) {\n            this.subscription_buttons = new xabber.SubscriptionButtonsView({contact: this.contact, el: this.$('.subscription-buttons-wrap')[0]});\n            this.contact.on(\"change:blocked\", this.updateBlockedState, this);\n            this.contact.on(\"change:subscription\", this.onSubscriptionChange, this);\n            this.contact.on(\"change:group_chat\", this.updateGroupChat, this);\n            this.contact.on(\"remove_from_blocklist\", this.loadLastHistory, this);\n            this.account.contacts.on(\"change:name\", this.updateName, this);\n            this.account.contacts.on(\"change:image\", this.updateAvatar, this);\n        }\n        this.account.on(\"change\", this.updateMyInfo, this);\n        this.account.settings.on(\"change:color\", this.updateContentColorScheme, this);\n        xabber.on('plyr_player_updated', this.onUpdatePlyr, this);\n        this.account.dfd_presence.done(() => {\n            !this.account.connection.do_synchronization && this.loadLastHistory();\n        });\n        return this;\n    },\n\n    render: function () {\n        this.cancelSearch();\n        if (this._prev_scrolltop)\n            this.scrollTo(this._prev_scrolltop);\n        else\n            this.scrollToBottom();\n        this.onScroll();\n        this.updateCounter();\n        this.updateContactStatus();\n        this.updateWaveforms();\n        this.onUpdatePlyr();\n        if (this.contact) {\n            this.contact.get('group_chat') && this.updatePinnedMessage();\n            this.subscription_buttons.render();\n        }\n    },\n\n    openDevicesWindow: function () {\n        if (!this.account.omemo)\n            return;\n        let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n        peer.fingerprints.open();\n    },\n\n    defineMouseWheelEvent: function () {\n        if (!_.isUndefined(window.onwheel)) {\n            return \"wheel\";\n        } else if (!_.isUndefined(window.onmousewheel)) {\n            return \"mousewheel\";\n        } else {\n            return \"MozMousePixelScroll\";\n        }\n    },\n\n    updateMyInfo: function () {\n        let changed = this.account.changed;\n        if (_.has(changed, 'name')) this.updateMyName();\n        if (_.has(changed, 'status')) this.updateMyStatus();\n        if (_.has(changed, 'image')) this.updateMyAvatar();\n    },\n\n    updateContentColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n        this.head.$el.attr('data-color', color);\n        this.bottom.$el.attr('data-color', color);\n    },\n\n    onTrustedChanged: function (message) {\n        let trusted = message.get('trusted'),\n            $message = this.$('.chat-message[data-uniqueid=\"' + message.get('unique_id') + '\"]');\n        (trusted === null) && (trusted = 'none');\n        $message.attr('data-trust', trusted);\n    },\n\n    updateGroupChat: function () {\n        this._loading_history = false;\n        this.model.set('history_loaded', false);\n    },\n\n    onSubscriptionChange: function () {\n        let subscription = this.contact.get('subscription');\n        if (subscription === 'both' && this.contact.get('group_chat')){\n            this.updateGroupChat();\n            this.loadPreviousHistory();\n            this.model.get('active') && this.onChangedActiveStatus();\n        }\n    },\n\n    cancelSearch: function () {\n        this.$search_form.hide().find('input').val(\"\");\n    },\n\n    updateContactStatus: function () {\n        if (this.head.$('.contact-status').attr('data-status') == 'offline' && this.contact.get('last_seen')) {\n            let seconds = (moment.now() - this.contact.get('last_seen'))/1000,\n                new_status = xabber.pretty_last_seen(seconds);\n            this.contact.set({status_message: new_status });\n        }\n    },\n\n    updateWaveforms: function () {\n        this.model.plyr_players.forEach(function(item) {\n            if (item.$audio_elem && item.$audio_elem.voice_message && item.$audio_elem.voice_message.backend && item.$audio_elem.voice_message.backend.buffer)\n                item.$audio_elem.voice_message.drawBuffer();\n        });\n    },\n\n    updatePinnedMessage: function () {\n        let $pinned_message = this.contact.get('pinned_message');\n        this.contact.renderPinnedMessage($pinned_message, this.$pinned_message);\n    },\n\n    onChangedVisibility: function () {\n        if (this.isVisible()) {\n            this.model.set({display: true, active: true});\n        } else {\n            this.model.set({display: false});\n        }\n    },\n\n    onChangedIdleStatus: function (ev) {\n        if (!this.model.get('active'))\n            return;\n        this.model.set('idle', xabber.get('idle') || !xabber.get('focused'))\n    },\n\n    onChangedActiveStatus: function () {\n        let active = this.model.get('active');\n        if (this.model.get('active') && this.model.get('idle'))\n            active = false;\n        this.sendChatState(active ? 'active' : 'inactive');\n        if (this.model.get('group_chat') && !this.contact.get('invitation')) {\n            if (active){\n                this.contact.setActiveStateSendInterval();\n            }\n            else{\n                clearTimeout(this.contact._sending_active_chatstate_timeout);\n                clearInterval(this.contact._sending_active_chatstate_interval);\n            }\n        }\n    },\n\n    updateName: function (contact) {\n        let name = contact.get('name'),\n            jid = contact.get('jid');\n        if (contact === this.contact) {\n            this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.chat-msg-author').text(name);\n            });\n        } else {\n            this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.fwd-msg-author').text(name);\n            });\n        }\n    },\n\n    updateAvatar: function (contact) {\n        let image = contact.cached_image,\n            jid = contact.get('jid');\n        if (contact === this.contact) {\n            this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.left-side .circle-avatar').setAvatar(\n                    image, this.avatar_size);\n            });\n        } else {\n            this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.fwd-left-side .circle-avatar').setAvatar(\n                    image, this.avatar_size);\n            });\n        }\n    },\n\n    updateMyStatus: function () {\n        let text;\n        if (!this.account.isOnline()) {\n            text = xabber.getString(\"connection_status__you_are_offline\");\n        }\n        this.bottom.showChatNotification(text || '', true);\n    },\n\n    updateMyName: function () {\n        let name = this.account.get('name'),\n            jid = this.account.get('jid');\n        this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.chat-msg-author').text(name);\n        });\n        this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.fwd-msg-author').text(name);\n        });\n    },\n\n    updateMyAvatar: function () {\n        let image = this.account.cached_image,\n            jid = this.account.get('jid');\n        this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.left-side .circle-avatar').setAvatar(\n                image, this.avatar_size);\n        });\n        this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.fwd-left-side .circle-avatar').setAvatar(\n                image, this.avatar_size);\n        });\n    },\n\n    updateBlockedState: function () {\n        if (this.model.get('blocked'))\n            this.model.showBlockedRequestMessage();\n        if (this.isVisible()) {\n            xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'chat', chat_item: this.chat_item, blocked: this.model.get('blocked')});\n            this.updateScrollBar();\n        }\n    },\n\n    readVisibleMessages: function (is_context) {\n        let self = is_context ? this.model.messages_view : this;\n        if (!self.isVisible())\n            return;\n        if (self.$('.chat-message.unread-message').length && xabber.get('focused') && !xabber.get('idle')){\n            let last_visible_unread_msg;\n            self.$('.chat-message.unread-message').each((idx, msg) => {\n                if ($(msg).isVisibleInContainer(self.$('.chat-content'))) {\n                    last_visible_unread_msg = msg;\n                }\n            });\n            if (last_visible_unread_msg){\n                this.readMessage(this.model.messages.get($(last_visible_unread_msg).data('uniqueid')), $(last_visible_unread_msg), is_context);\n            }\n        }\n    },\n\n    hideMessagesAfterSkipping: function () {\n        if (this.model.get('last_sync_unread_id') && this.model.get('synced_msg')){\n            let synced_message = this.model.get('synced_msg'),\n                $synced_message = this.$(`.chat-message[data-uniqueid=\"${synced_message.get('unique_id')}\"]`);\n            $synced_message.addClass('after-skip-message');\n            $synced_message.prevAll('.chat-message.after-skip-message').removeClass('after-skip-message');\n            $synced_message.nextAll('.chat-message:not(.after-skip-message)').addClass('after-skip-message');\n        } else {\n            this.$('.chat-message.after-skip-message').removeClass('after-skip-message');\n        }\n    },\n\n    readMessage: function (last_visible_msg, $last_visible_msg, is_context) {\n        clearTimeout(this._read_last_message_timeout);\n        this._read_last_message_timeout = setTimeout(() => {\n            this.model.sendMarker(last_visible_msg.get('msgid'), 'displayed', last_visible_msg.get('stanza_id'), last_visible_msg.get('contact_stanza_id'));\n            this.model.set('last_read_msg', last_visible_msg.get('stanza_id'));\n            this.model.set('prev_last_read_msg', last_visible_msg.get('stanza_id'));\n\n            if (is_context){\n                let unread_context_messages = _.clone(this.account.context_messages.models).filter(item => Boolean(item.get('is_unread')) || Boolean(item.get('is_unread_archived')));\n                _.each(unread_context_messages, (msg) => {\n                    let msg_item = this.model.messages.find(message => message.get('stanza_id') == msg.get('stanza_id') || message.get('contact_stanza_id') == msg.get('stanza_id'));\n                    if (msg_item) {\n                        msg.set('is_unread', msg_item.get('is_unread'));\n                        msg.set('is_unread_archived', msg_item.get('is_unread_archived'));\n                    }\n                });\n                setTimeout(() => {\n                    $last_visible_msg.removeClass('unread-message-background');\n                }, 1000);\n            }\n\n            xabber.toolbar_view.recountAllMessageCounter();\n        }, 1000)\n\n        if (last_visible_msg.get('is_unread_archived') || this.model.last_message && (last_visible_msg.get('unique_id') === this.model.last_message.get('unique_id')) || this.model.get('const_unread')){\n            let unread_messages = _.clone(this.model.messages.models).filter(item => Boolean(item.get('is_unread'))),\n                read_count = 0;\n\n            _.each(unread_messages, (msg) => {\n                if (msg.get('timestamp') <= last_visible_msg.get('timestamp')) {\n                    msg.set('is_unread', false);\n                    read_count++;\n                }\n            });\n            read_count = this.model.get('const_unread') - read_count;\n            (read_count < 0) && (read_count = 0);\n            this.model.set('const_unread', read_count);\n        } else {\n            let unread_messages = _.clone(this.model.messages_unread.models);\n            _.each(unread_messages, (msg) => {\n                if (msg.get('timestamp') <= last_visible_msg.get('timestamp')) {\n                    msg.set('is_unread', false);\n                }\n            });\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n\n        if (!is_context){\n            setTimeout(() => {\n                $last_visible_msg.removeClass('unread-message-background');\n            }, 1000);\n        }\n    },\n\n    readMessages: function (timestamp) {\n        let unread_messages = _.clone(this.model.messages_unread.models);\n        if (unread_messages.length) {\n            let msg = unread_messages[unread_messages.length - 1];\n            this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n            this.model.set('last_read_msg', msg.get('stanza_id'));\n            this.model.set('prev_last_read_msg', msg.get('stanza_id'));\n        }\n        this.model.set('const_unread', 0);\n        this.model.set('show_new_unread', false);\n        _.each(unread_messages, (msg) => {\n            if (!timestamp || msg.get('timestamp') <= timestamp) {\n                msg.set('is_unread', false);\n            }\n        });\n        if (this.model.last_message && this.model.last_message.get('is_unread') && !unread_messages.length){\n            let msg = this.model.last_message;\n            this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n            msg.set('is_unread', false);\n            msg.get('stanza_id') && this.model.set('last_read_msg', msg.get('stanza_id'));\n            msg.get('stanza_id') && this.model.set('prev_last_read_msg', msg.get('stanza_id'));\n        }\n        else if (this.model.last_message && this.model.last_message.get('auth_request') && this.model.messages.length){\n            let messages = _.clone(this.model.messages.models),\n                msg = messages[messages.length - 2];\n            if (msg && msg.get('is_unread')) {\n                this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n                msg.set('is_unread', false);\n                msg.get('stanza_id') && this.model.set('last_read_msg', msg.get('stanza_id'));\n                msg.get('stanza_id') && this.model.set('prev_last_read_msg', msg.get('stanza_id'));\n            }\n        }\n        if (!unread_messages.length) {\n            let unread_messages = _.clone(this.model.messages.models).filter(item => Boolean(item.get('is_unread')));\n            _.each(unread_messages, (msg) => {\n                msg.set('is_unread', false);\n            });\n        }\n    },\n\n    showUnreadMarker: function () {\n        this.$('.unread-marker').remove();\n        if (this.$(`.chat-message.unread-message`).length){\n            let text = xabber.getQuantityString(\"new_chat_messages_no_number\", this.model.get('const_unread') + this.model.get('unread')),\n                $template = $(templates.unread_marker({text: text}));\n            $template.insertBefore(this.$(`.chat-message.unread-message:first`));\n        }\n    },\n\n    onMouseWheel: function (ev) {\n        if (ev.originalEvent.deltaY < 0)\n            this.loadPreviousHistory();\n        this.$('.back-to-bottom:not(.back-to-unread)').hideIf(this.isScrolledToBottom() || this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').removeClass('back-to-bottom');\n    },\n\n    keyupSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            let query = this.$search_form.find('input').val();\n            this.model.searchMessages(query, (messages) => {});\n        }\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.head.renderSearchPanel();\n        }\n    },\n\n    scrollToUnread: function () {\n        let $last_read_msg = this.$(`.chat-message.unread-message:first`);\n        $last_read_msg.length && (this.scrollTo(this.getScrollTop()\n            - (this.$el.height() * 0.2) + $last_read_msg.offset().top));\n        if (this.model.get('last_sync_unread_id')) {\n            let mam_query = {\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                after: this.model.get('last_sync_unread_id'),\n            };\n            if (this.model.get('synced_msg')) {\n                mam_query.var = [\n                    {var: 'after-id', value: this.model.get('last_sync_unread_id')},\n                    {var: 'before-id', value: this.model.get('synced_msg').get('stanza_id')},\n                ];\n            }\n            this.getMessageArchive(mam_query, {\n                unread_history: true,\n            });\n        }\n    },\n\n    scrollToUnreadWithButton: function () {\n        this.scrollToUnread();\n        this.$('.back-to-unread').addClass('back-to-bottom');\n    },\n\n    updateCounter: function () {\n        let unread = this.model.get('unread') + this.model.get('const_unread');\n        this.$('.back-to-unread-counter').text(unread || '');\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n    },\n\n    onScrollY: function () {\n        this._prev_scrolltop = this._scrolltop || this._prev_scrolltop || 0;\n        this._scrolltop = this.getScrollTop() || this._scrolltop || this._prev_scrolltop || 0;\n        this._is_scrolled_bottom = this.isScrolledToBottom();\n        if (this._scrolltop === 0 && this.$('.subscription-buttons-wrap').hasClass('hidden')) {\n            this.$('.fixed-day-indicator-wrap').css('opacity', 1);\n            this.current_day_indicator = pretty_date(parseInt(this.$('.chat-content').children().first().data('time')));\n            this.showDayIndicator(this.current_day_indicator);\n        }\n        this.$('.back-to-bottom:not(.back-to-unread)').hideIf(this.isScrolledToBottom() || this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').removeClass('back-to-bottom');\n    },\n\n    onScroll: function (ev, is_focused) {\n        if (!this.isVisible() || this._no_scrolling_event)\n            return;\n        this.$('.back-to-bottom:not(.back-to-unread)').hideIf(this.isScrolledToBottom() || this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').removeClass('back-to-bottom');\n        let $chatday_indicator = this.$('.chat-day-indicator'),\n            $messages = this.$('.chat-message'),\n            indicator_idx = undefined,\n            opacity_value;\n        if (this.$('.unread-marker').length) {\n            let marker = this.$('.unread-marker');\n            if (marker[0].offsetTop < this._scrolltop)\n                marker.remove();\n        }\n        $chatday_indicator.each((idx, indicator) => {\n            if (this.$('.subscription-buttons-wrap').hasClass('hidden')) {\n                if (this._scrolltop < this._prev_scrolltop) {\n                    if ((indicator.offsetTop <= this._scrolltop) && (indicator.offsetTop >= this._scrolltop - 30)) {\n                        indicator_idx = idx;\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop) && (indicator.offsetTop <= this._scrolltop - 30)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n                else {\n                    if ((indicator.offsetTop <= this._scrolltop + 30) && (indicator.offsetTop >= this._scrolltop)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop - 30) && (indicator.offsetTop <= this._scrolltop)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n            }\n            else if (!$(indicator).hasClass('fixed-day-indicator-wrap')) {\n                if (this._scrolltop < this._prev_scrolltop) {\n                    if ((indicator.offsetTop >= this._scrolltop + 30) && (indicator.offsetTop <= this._scrolltop + 62)) {\n                        indicator_idx = idx;\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop) && (indicator.offsetTop <= this._scrolltop + 62)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n                else {\n                    if ((indicator.offsetTop <= this._scrolltop + 62) && (indicator.offsetTop >= this._scrolltop + 30)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop - 62) && (indicator.offsetTop <= this._scrolltop + 30)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n            }\n        });\n        if (indicator_idx) {\n            this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n            this.current_day_indicator = pretty_date(parseInt($($chatday_indicator[indicator_idx]).attr('data-time')));\n        }\n        else {\n            $messages.each((idx, msg) => {\n                if ((msg.offsetTop + $(msg).height() > this._scrolltop) && (msg.offsetTop < this._scrolltop)) {\n                    indicator_idx = idx;\n                    opacity_value = 1;\n                    return false;\n                }\n            });\n            if (indicator_idx) {\n                this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n                this.current_day_indicator = pretty_date(parseInt($($messages[indicator_idx]).attr('data-time')));\n            }\n            else if (!this.$('.subscription-buttons-wrap').hasClass('hidden') && this._scrolltop == 0){\n                opacity_value = 0;\n                this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n            }\n        }\n        if (this.current_day_indicator !== null) {\n            this.showDayIndicator(this.current_day_indicator);\n        }\n        let scroll_read_timer = this._long_reading_timeout || is_focused ? 100 : 100;\n        clearTimeout(this._onscroll_read_messages_timeout);\n        this._onscroll_read_messages_timeout = setTimeout(() => {\n            this.readVisibleMessages();\n        }, scroll_read_timer)\n        this._long_reading_timeout = false;\n        if (this._scrolltop < this._prev_scrolltop &&\n            (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n            this.loadPreviousHistory();\n        }\n        this.hideMessagesAfterSkipping();\n        if (this._scrolltop > this._prev_scrolltop && this.model.get('last_sync_unread_id') && this.getPercentScrolled() > 0.2) {\n            let mam_query = {\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                after: this.model.get('last_sync_unread_id'),\n            };\n            if (this.model.get('synced_msg')) {\n                mam_query.var = [\n                    {var: 'after-id', value: this.model.get('last_sync_unread_id')},\n                    {var: 'before-id', value: this.model.get('synced_msg').get('stanza_id')},\n                ];\n            }\n            this.getMessageArchive(mam_query, {\n                unread_history: true,\n            });\n        }\n    },\n\n    backToBottom: function () {\n        this.model.set('last_sync_unread_id', undefined);\n        this.hideMessagesAfterSkipping();\n        this._no_scrolling_event = true;\n        this.removeAllMessagesExceptLast();\n        this.readMessages();\n        this.model.resetUnread();\n        this.model.set('history_loaded', false);\n        this.loadPreviousHistory();\n        this._long_reading_timeout = false;\n        this._no_scrolling_event = false;\n        this.scrollToBottom();\n    },\n\n    MAMRequest: function (options, callback, errback) {\n        let account = this.account,\n            contact = this.contact,\n            is_saved = this.model.get('saved'),\n            messages = [], queryid = uuid(),\n            is_groupchat = contact && contact.get('group_chat'), success = true, iq, _interval, handler;\n        delete options.fast;\n        if (is_groupchat)\n            iq = $iq({type: 'set', to: contact.get('full_jid') || contact.get('jid')});\n        else\n            iq = $iq({type: 'set'});\n        iq.c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n            .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n            .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n            .c('value').t(Strophe.NS.MAM).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE)) {\n            iq.c('field', {'var': `conversation-type`});\n            if (this.model.get('encrypted')){\n                iq.c('value').t(Strophe.NS.OMEMO).up().up();\n            } else {\n                iq.c('value').t(Strophe.NS.XABBER_CHAT).up().up();\n            }\n        }\n        if (!is_groupchat)\n            iq.c('field', {'var': 'with'})\n                .c('value').t(this.model.get('jid')).up().up();\n        if (options.var)\n            options.var.forEach((opt_var) => {\n                iq.c('field', {'var': opt_var.var})\n                    .c('value').t(opt_var.value).up().up();\n            });\n        iq.up().cnode(new Strophe.RSM(options).toXML());\n        let deferred = new $.Deferred();\n        account.chats.onStartedMAMRequest(deferred);\n        deferred.done(function () {\n            let sendMAMRequest = function(func_conn) {\n                handler = func_conn.addHandler(function (message) {\n                    if ((contact && is_groupchat == contact.get('group_chat')) || is_saved) {\n                        let $msg = $(message);\n                        if ($msg.find('result').attr('queryid') === queryid) {\n                            messages.push(message);\n                        }\n                    }\n                    else {\n                        messages = [];\n                        success = false;\n                    }\n                    return true;\n                }, Strophe.NS.MAM);\n                let _delete_handler_timeout = setTimeout(() => {\n                    console.log('handler deleted');\n                    func_conn.deleteHandler(handler);\n                }, 14000);\n                let callb = function (res) {\n                        func_conn.deleteHandler(handler);\n                        clearTimeout(_delete_handler_timeout);\n                        clearInterval(_interval);\n                        handler = null;\n                        account.chats.onCompletedMAMRequest(deferred);\n                        let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                        if ($fin.length && $fin.attr('queryid') === queryid) {\n                            let rsm = new Strophe.RSM({xml: $fin.find('set')[0]});\n                            rsm.complete = ($fin.attr('complete') === 'true') ? true : false;\n                            callback && callback(success, messages, rsm);\n                        }\n                    },\n                    errb = function (err) {\n                        func_conn.deleteHandler(handler);\n                        clearTimeout(_delete_handler_timeout);\n                        clearInterval(_interval);\n                        handler = null;\n                        xabber.error(\"MAM error\");\n                        xabber.error(err);\n                        account.chats.onCompletedMAMRequest(deferred);\n                        errback && errback(err);\n                    };\n                console.log('trying to send')\n                if (is_fast)\n                    account.sendFast(iq, callb, errb);\n                else\n                    account.sendIQ(iq, callb, errb);\n\n            };\n            let is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting\n                && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n                conn = is_fast ? account.fast_connection : account.connection;\n\n            if (conn.connected){\n                sendMAMRequest(conn);\n            }\n            let send_counter = 0;\n            _interval = setInterval(() => {\n                is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting\n                    && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline';\n                conn = is_fast ? account.fast_connection : account.connection;\n                conn && console.log(conn.connected);\n                if (!conn || send_counter >= 1){\n                    clearInterval(_interval);\n                    errback && errback('No connection or too many attempts');\n                    return;\n                }\n                if (conn.connected && send_counter < 1){\n                    send_counter++;\n                    sendMAMRequest(conn);\n                }\n            }, 15000);\n        });\n    },\n\n    getMessageArchive: function (query, options) {\n        if (options.previous_history || options.unread_history) {\n            if (this._loading_history || this.model.get('history_loaded')) {\n                return;\n            }\n            this._loading_history = true;\n            clearTimeout(this._load_history_timeout);\n            this._load_history_timeout = setTimeout(() => {\n                this._loading_history = false;\n            }, 60000);\n            this.showHistoryFeedback();\n        }\n        let account = this.model.account, counter = 0;\n        this.MAMRequest(query, (success, messages, rsm) => {\n            clearTimeout(this._load_history_timeout);\n            this._loading_history = false;\n            this.hideHistoryFeedback();\n            if (options.missed_history && !rsm.complete && (rsm.count > messages.length))\n                this.getMessageArchive({after: rsm.last}, {missed_history: true});\n            if (options.unread_history){\n                if (messages.length)\n                    this.model.set('last_sync_unread_id', $(messages[messages.length - 1]).find(`result[xmlns=\"${Strophe.NS.MAM}\"]`).attr('id'));\n                else {\n                    this.model.set('last_sync_unread_id', undefined);\n                    this.hideMessagesAfterSkipping();\n                }\n            }\n            if (options.unread_history_first && messages.length){\n                let first_unread_msg_stanza_id = $(messages[0]).find(`result[xmlns=\"${Strophe.NS.MAM}\"]`).attr('id')\n                this.model.set('first_unread_msg_stanza_id', first_unread_msg_stanza_id);\n                if (messages.length < query.max){\n                    this.model.set('last_sync_unread_id', undefined);\n                    this.hideMessagesAfterSkipping();\n                }\n                this.getMessageArchive({\n                    fast: true,\n                    max: xabber.settings.mam_messages_limit,\n                    before : first_unread_msg_stanza_id\n                }, {unread_history_before: true});\n            }\n            if (this.model.get('group_chat')) {\n                if (this.contact && !this.contact.my_info)\n                    this.contact.getMyInfo();\n            }\n            else {\n                if (this.contact && !this.contact.get('last_seen') && !this.contact.get('server'))\n                    this.contact.getLastSeen();\n            }\n            if (options.previous_history && (messages.length < query.max) && success) {\n                this.model.set('history_loaded', true);\n            }\n            if (options.previous_history || options.unread_history_before || !this.model.get('first_archive_id')) {\n                rsm.first && this.model.set('first_archive_id', rsm.first);\n            }\n            if (options.last_history || !this.model.get('last_archive_id')) {\n                rsm.last && this.model.set('last_archive_id', rsm.last);\n            }\n            _.each(messages, function (message) {\n                let loaded_message = account.chats.receiveChatMessage(message,\n                    _.extend({\n                        is_archived: true,\n                        is_unread_archived: options.unread_history ? true : undefined,\n                    }, options)\n                );\n                if (loaded_message) counter++;\n            });\n            if ((counter === 0) && options.last_history && !this.model.get('history_loaded')) {\n                this.getMessageArchive(_.extend(query, {\n                    max: xabber.settings.mam_messages_limit,\n                    before: this.model.get('first_archive_id') || ''\n                }), {previous_history: true});\n            }\n            if (options.unread_history_before){\n                if (this.model.get('encrypted')){\n                    //TODO: make async func to start opening chat after all messages been handled in enc chat\n                    setTimeout(() => {\n                        this.model._wait_load_unread_history.resolve();\n                    }, 1000);\n                } else\n                    this.model._wait_load_unread_history.resolve();\n            }\n        }, (err) => {\n            if (options.previous_history) {\n                this._loading_history = false;\n                this.showHistoryFeedback(true);\n            }\n            if (options.unread_history_before || options.unread_history_first){\n                this.model._wait_load_unread_history.resolve();\n            }\n        });\n    },\n\n    requestMissedMessages: function (timestamp) {\n        if (!timestamp)\n            return;\n        let query = {};\n        query.var = [{var: 'start', value: moment(timestamp).format()}];\n        this.getMessageArchive(query, {missed_history: true});\n    },\n\n    loadLastHistory: function () {\n        if (!xabber.settings.load_history) {\n            return;\n        }\n        let last_archive_id = this.model.get('last_archive_id'),\n            query = {};\n        if (last_archive_id) {\n            query.after = last_archive_id;\n        } else {\n            query.before = '';\n            query.max = xabber.settings.mam_messages_limit_start;\n        }\n        this.getMessageArchive(query, {last_history: true});\n    },\n\n    loadPreviousHistory: function () {\n        if (this.contact) {\n            if (!xabber.settings.load_history || (!this.contact.get('subscription') || this.contact.get('subscription') !== 'both') && this.contact.get('group_chat')) {\n                return;\n            }\n        }\n        this.getMessageArchive({\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                before: this.model.get('first_archive_id') || '' },\n            {previous_history: true\n            });\n    },\n\n    loadUnreadHistory: function () {\n        if (this.contact) {\n            if (!xabber.settings.load_history || (!this.contact.get('subscription') || this.contact.get('subscription') !== 'both') && this.contact.get('group_chat')) {\n                return;\n            }\n        }\n        this.model.set('loading_unread_history', true)\n        this.getMessageArchive({\n            fast: true,\n            max: xabber.settings.mam_messages_limit,\n            after: this.model.get('last_read_msg'),\n        }, {\n            unread_history_first: true,\n            unread_history: true,\n        });\n    },\n\n    showHistoryFeedback: function (is_error) {\n        if (this._load_history_feedback_timeout) {\n            clearTimeout(this._load_history_feedback_timeout);\n            this._load_history_feedback_timeout = null;\n        }\n        let text = xabber.getString(is_error ? \"loading_archived_messages_error\" : \"loading_history\");\n        this.$history_feedback.text(text).removeClass('hidden');\n        if (is_error) {\n            this._load_history_feedback_timeout = setTimeout(\n                this.hideHistoryFeedback.bind(this), 5000);\n        }\n    },\n\n    showDayIndicator: function (text) {\n        this.$('.fixed-day-indicator').text(text);\n        this.$('.fixed-day-indicator-wrap').removeClass('hidden');\n    },\n\n    showPinnedMessage: function (ev) {\n        if ($(ev.target).hasClass('close'))\n            this.unpinMessage();\n        else {\n            let pinned_message = this.contact.get('pinned_message'),\n                participant_info = {};\n            pinned_message.get('user_info') && this.contact.participants && (participant_info = this.contact.participants.get(pinned_message.get('user_info').id));\n            participant_info && participant_info.attributes && pinned_message.set('user_info', participant_info.attributes);\n\n            let msg = this.buildMessageHtml(pinned_message),\n                pinned_msg_modal = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this, message: pinned_message, pinned: true});\n            pinned_msg_modal.$el.attr('data-color', this.account.settings.get('color'));\n            this.updateMessageInChat(msg, pinned_message);\n            this.initPopup(msg);\n            pinned_msg_modal.open(msg);\n        }\n    },\n\n    imageOnload: function ($message) {\n        let $image_container = $message.find('.img-content'),\n            $copy_link_icon = $message.find('.mdi-link-variant');\n        $image_container.css('background-image', 'none');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n    },\n\n    videoOnload: function ($message, message) {\n        let $copy_link_icon = $message.find('.mdi-link-variant');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n        this.initPlyrEmbedPlayer($message, message);\n    },\n\n    OGPLinkOnload: function ($message, message) {\n        let $copy_link_icon = $message.find('.mdi-link-variant');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n    },\n\n    locationOnload: function ($message) {\n        let $copy_location_div = $message.find('.msg-copy-location-content');\n        $copy_location_div.html(env.templates.svg['map-marker-outline']());\n        $copy_location_div.attr({\n            'data-location': 'true'\n        });\n    },\n\n    unpinMessage: function () {\n        let iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('update', {xmlns: Strophe.NS.GROUP_CHAT})\n            .c('pinned-message');\n        this.account.sendIQFast(iq, () => {}, (error) => {\n            if ($(error).find('error not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n        });\n    },\n\n    loadLocationInChat: function ($message, attrs) {\n        import('ol-local').then(ol => {\n            ol = ol.default ? ol.default : ol;\n            let $map_element = $message.find(`#${attrs.id}`);\n            if (!$map_element.length)\n                return;\n            let map = new ol.Map({\n                target: $map_element[0],\n                view: new ol.View\n                ({\tzoom: 15,\n                    center: ol.proj.transform([attrs.lon, attrs.lat], 'EPSG:4326', 'EPSG:3857')\n                }),\n                interactions: ol.interaction_defaults({\n                    altShiftDragRotate:false,\n                    doubleClickZoom:false,\n                    keyboard:false,\n                    mouseWheelZoom:false,\n                    shiftDragZoom:false,\n                    dragPan:false,\n                    pinchRotate:false,\n                    pinchZoom:false\n                }),\n                layers: [ new ol.layer.Tile({ source: new ol.source.OSM() }) ],\n            });\n\n            map.once('rendercomplete', function(event) {\n                let mapCanvas = document.createElement('canvas');\n                let size = map.getSize();\n                mapCanvas.width = size[0];\n                mapCanvas.height = size[1];\n                let mapContext = mapCanvas.getContext('2d');\n                Array.prototype.forEach.call(\n                    document.querySelectorAll(`#${attrs.id} .ol-layer canvas`),\n                    function (canvas) {\n                        if (canvas.width > 0) {\n                            let opacity = canvas.parentNode.style.opacity;\n                            mapContext.globalAlpha = opacity === '' ? 1 : Number(opacity);\n                            let transform = canvas.style.transform;\n                            // Get the transform parameters from the style's transform matrix\n                            let matrix = transform\n                                .match(/^matrix\\(([^\\(]*)\\)$/)[1]\n                                .split(',')\n                                .map(Number);\n                            // Apply the transform to the export map context\n                            CanvasRenderingContext2D.prototype.setTransform.apply(\n                                mapContext,\n                                matrix\n                            );\n                            let path = new Path2D('M 18 17.25 C 15.9289 17.25 14.25 15.5711 14.25 13.5 C 14.25 12.5054 14.6451 11.5516 15.3483 10.8483 C 16.0516 10.1451 17.0054 9.75 18 9.75 C 20.0711 9.75 21.75 11.4289 21.75 13.5 C 21.75 14.4946 21.3549 15.4484 20.6517 16.1517 C 19.9484 16.8549 18.9946 17.25 18 17.25 M 18 3 C 12.201 3 7.5 7.701 7.5 13.5 C 7.5 21.375 18 33 18 33 C 18 33 28.5 21.375 28.5 13.5 C 28.5 7.701 23.799 3 18 3 Z');\n                            mapContext.fillStyle = getComputedStyle(document.querySelector(`#${attrs.id}`)).color;\n                            mapContext.drawImage(canvas, 0, 0);\n                            mapContext.translate(157, 117);\n\n                            mapContext.fill(path);\n                        }\n                    }\n                );\n                if (navigator.msSaveBlob) {\n                    // link download attribute does not work on MS browsers\n                    navigator.msSaveBlob(mapCanvas.msToBlob(), 'map.png');\n                } else {\n                    let img = document.getElementById(`img_${attrs.id}`),\n                        dataURL = mapCanvas.toDataURL('image/png');\n                    map.setTarget(null)\n                    map = null;\n                    img.src= dataURL\n                }\n            });\n        });\n    },\n\n    hideHistoryFeedback: function () {\n        this.$history_feedback.addClass('hidden');\n    },\n\n    receiveNoTextMessage: function ($message, carbon_copied) {\n        let from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            to_jid = Strophe.getBareJidFromJid($message.attr('to')),\n            is_sender = from_jid === this.account.get('jid'),\n            $chat_state = $message.find(`[xmlns=\"${Strophe.NS.CHATSTATES}\"]`);\n        if ($chat_state.length) {\n            if (!is_sender) {\n                let $subtype = $chat_state.children('subtype');\n                if ($subtype.attr('type') == 'encrypted') {\n                    let view = xabber.chats_view.child(`${this.contact.hash_id}:encrypted`);\n                    if (view && view.content)\n                        view.content.showChatState($chat_state[0].tagName.toLowerCase());\n                } else\n                    this.showChatState($chat_state[0].tagName.toLowerCase(), $subtype.attr('type'), $subtype.attr('mime-type'));\n            }\n        }\n    },\n\n    showChatState: function (state, type, mime_type) {\n        clearTimeout(this._chatstate_show_timeout);\n        let message, name = this.contact.get('name');\n        if (state === 'composing') {\n            if (type) {\n                this._current_composing_msg = {type: type};\n                if (type === 'upload') {\n                    let file_type = mime_type ? utils.pretty_file_type_with_article(mime_type) : null;\n                    mime_type && (this._current_composing_msg.mime_type = mime_type);\n                    message = file_type ? xabber.getString(\"chat_state_composing_upload_filetype\", [file_type]) : xabber.getString(\"chat_state_composing_upload\");\n                    this._chatstate_show_timeout = setTimeout(() => {\n                        this.showChatState();\n                    }, constants.CHATSTATE_TIMEOUT_PAUSED_AUDIO);\n                } else {\n                    if (type === 'voice')\n                        message = xabber.getString(\"chat_state_composing_voice\");\n                    if (type === 'video')\n                        message = xabber.getString(\"chat_state_composing_video\");\n                    this._chatstate_show_timeout = setTimeout(() => {\n                        this.showChatState('paused', type);\n                    }, constants.CHATSTATE_TIMEOUT_PAUSED_AUDIO);\n                }\n            }\n            else {\n                this._current_composing_msg = undefined;\n                message = xabber.getString(\"chat_state_composing\");\n                this._chatstate_show_timeout = setTimeout(() => {\n                    this.showChatState();\n                }, constants.CHATSTATE_TIMEOUT_PAUSED);\n            }\n        } else if (state === 'paused') {\n            this.showChatState();\n            return;\n        } else {\n            this.bottom.showChatNotification('');\n            this.chat_item.updateLastMessage();\n            return;\n        }\n        if (message)\n            this.bottom.showChatNotification(`${this.contact.get('name')} ${message}`);\n        else\n            this.bottom.showChatNotification();\n        this.chat_item.$('.last-msg').text(message);\n        this.chat_item.$('.last-msg-date').text(utils.pretty_short_datetime())\n            .attr('title', pretty_datetime());\n        this.chat_item.$('.msg-delivering-state').addClass('hidden');\n    },\n\n    updateMentions: function (message) {\n        if (message.get('mentions')) {\n            message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\";\n                if (this.contact.get('group_chat') || message.get('groupchat_jid')) {\n                    let id = mention_target.match(/\\?id=\\w*/),\n                        jid = mention_target.match(/\\?jid=.*/);\n                    if (id && this.contact.my_info) {\n                        mention_target = id[0].slice(4);\n                        (mention_target === this.contact.my_info.get('id')) && (mention.me = true);\n                    }\n                    else if (jid) {\n                        mention_target = jid[0].slice(5);\n                        (mention_target === this.account.get('jid')) && (mention.me = true);\n                    }\n                }\n                else {\n                    mention_target = mention_target.slice(5);\n                    if (mention_target === this.account.get('jid'))\n                        mention.me = true;\n                }\n            });\n        }\n    },\n\n    onMessage: function (message) {\n        this.updateMentions(message);\n        this.account.messages.add(message);\n        let is_scrolled_to_bottom = this.isScrolledToBottom(),\n            scrolled_from_bottom = this.getScrollBottom();\n        if (!_.isUndefined(message.get('is_accepted'))) {\n            this.model.set('is_accepted', false);\n        }\n        this.model.set('opened', true);\n        if (!message.get('is_archived') && !message.get('is_unread_archived') && message.get('stanza_id'))\n            this.model.set('last_archive_id', message.get('stanza_id'));\n\n        if (message.get('participants_version')) {\n            if (this.contact.participants && this.contact.participants.version < message.get('participants_version'))\n                this.contact.trigger('update_participants');\n        }\n\n        let $message = this.addMessage(message);\n\n        if (message.get('type') === 'file_upload') {\n            if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                this.startGalleryUploadFile(message, $message);\n            else\n                this.startUploadFile(message, $message);\n        }\n\n        if (!(message.get('synced_from_server') || (message.get('is_archived') && !message.get('missed_msg')))) {\n            if (message.get('missed_msg')){\n                if (this.model.get('last_read_msg')){\n                    let last_read_msg = this.model.messages.find(m => this.model.get('last_read_msg') && (m.get('stanza_id') === this.model.get('last_read_msg') || m.get('contact_stanza_id') === this.model.get('last_read_msg'))),\n                        deferred = new $.Deferred();\n                    deferred.done(() => {\n                        if (last_read_msg && message.get('timestamp') > last_read_msg.get('timestamp')){\n                            message.set('is_unread', true);\n                            if (!xabber.get('focused')) {\n                                if (this.model.get('saved') || this.model.isMuted())\n                                    message.set('muted', true);\n                            }\n                            this.model.setMessagesDisplayed(message.get('timestamp'));\n                        }\n                    });\n                    if (!last_read_msg){\n                        this.contact.getMessageByStanzaId(this.model.get('last_read_msg'), ($message) => {\n                            last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                            deferred.resolve();\n                        });\n                    } else {\n                        deferred.resolve();\n                    }\n                }\n            } else {\n                if (!(message.isSenderMe() || message.get('silent') || ((message.get('type') === 'system') && !message.get('auth_request')))) {\n                    message.set('is_unread', true);\n                    if (message.get('is_unread') && xabber.get('focused') && !xabber.get('idle') && this.isVisible()){\n                        this.readVisibleMessages();\n                    }\n                    if (!xabber.get('focused')) {\n                        if (this.model.get('saved') || this.model.isMuted())\n                            message.set('muted', true);\n                        else if (!message.get('synced_invitation_from_server'))\n                            this.notifyMessage(message);\n                    }\n                    this.model.setMessagesDisplayed(message.get('timestamp'));\n                }\n            }\n            if (this.contact && this.model.get('archived')){\n                if (this.model.isMuted())\n                    message.set('archived', true);\n                else {\n                    this.head.archiveChat();\n                    this.model.set('archived', false);\n                }\n            }\n            if (this.model.get('saved')) {\n                message.set('muted', true);\n                message.set('state', constants.MSG_DISPLAYED);\n            }\n        }\n\n        if (this.isVisible() && (!message.get('is_unread') || is_scrolled_to_bottom) && !message.get('is_between_anchors')) {\n            let is_scrolling_needed;\n            if (is_scrolled_to_bottom){\n                if (this.$(`.chat-message.unread-message`).length){\n                    if (this.$(`.chat-message.unread-message`)[0].offsetTop > (this._scrolltop + 140)) {\n                        is_scrolling_needed = true;\n                    }\n                } else\n                    is_scrolling_needed = true;\n            }\n            if ((is_scrolled_to_bottom && is_scrolling_needed) || message.get('submitted_here')) {\n                this.scrollToBottom();\n            } else if (!is_scrolled_to_bottom) {\n                this.updateScrollBar();\n                this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - scrolled_from_bottom);\n            }\n        }\n\n        if (message.get('synced_from_server') && message.get('is_unread')) {\n            this.onChangedReadState(message);\n        }\n        if (message.get('attention')) {\n            this.attentionMessage(message);\n        }\n\n        if (message.isSenderMe()) {\n            if (!message.get('is_archived') && !message.get('missed_msg') && message.get('type') != 'system')\n                this.readMessages(message.get('timestamp'));\n            if (this.model.get('last_displayed_id') >= message.get('stanza_id') && message.get('stanza_id') !== message.get('origin_id'))\n                message.set('state', constants.MSG_DISPLAYED);\n            else if (message.get('stanza_id') !== message.get('origin_id') && (this.model.get('last_delivered_id') >= message.get('stanza_id') || message.get('is_archived')))\n                message.set('state', constants.MSG_DELIVERED);\n        }\n\n        if (message.get('private_invite') || message.get('invite')) {\n            if (!(this.contact.invitation && this.contact.invitation.message.get('timestamp') > message.get('timestamp')))\n                this.contact.invitation = new xabber.GroupchatInvitationView({model: this.contact, message: message});\n            this.model.contact.set('invitation', true);\n            this.model.get('active') && this.model.contact.trigger('open_chat', this.model.contact);\n            message.set('is_unread', false);\n        }\n\n        let last_message = this.model.last_message;\n        if (!last_message || message.get('timestamp') >= last_message.get('timestamp')) {\n            this.model.last_message = message;\n            this.chat_item.updateLastMessage();\n        }\n        if (message.get('mentions')) {\n            message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\",\n                    id = mention_target.match(/\\?id=\\w*/),\n                    jid = mention_target.match(/\\?jid=.*/);\n                if (id)\n                    mention_target = id[0].slice(4);\n                else if (jid)\n                    mention_target = jid[0].slice(5);\n                else\n                    mention_target = \"\";\n                if (this.contact.my_info)\n                    (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {message: message, contact: this.contact});\n                else if (this.contact.get('group_chat')) {\n                    if (this._pending_my_info) {\n                        this._pending_my_info.done(() => {\n                            (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {message: message, contact: this.contact});\n                            this._pending_my_info = null;\n                        });\n                    }\n                    else {\n                        this._pending_my_info = new $.Deferred();\n                        this.contact.getMyInfo(() => {\n                            (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {\n                                message: message,\n                                contact: this.contact\n                            });\n                            this._pending_my_info.resolve();\n                        });\n                    }\n                }\n                (mention_target === this.account.get('jid') || mention_target === \"\") && this.account.mentions.create(null, {message: message, contact: this.contact});\n            });\n        }\n\n        if (this.model.messages_view && xabber.body.screen.get('right') === 'message_context' && this.model.messages_view.last_history_loaded)\n            this.account.context_messages.add(message);\n\n    },\n\n\n    decryptImages: function (message, force) {\n        let scrolled_from_bottom = this.getScrollBottom();\n        if (this.model.get('encrypted') || message.get('encrypted') || force) {\n            let images = message.get('images') || [];\n            if (images.length) {\n                images.forEach((img) => {\n                    let source = img.sources[0];\n                    if (!img.key)\n                        return;\n                    this.model.messages.decryptFile(source, img.key).then((result) => {\n                        if (result === null)\n                            return;\n                        let $msg = [];\n                        if (this.model.messages_view && xabber.body.screen.get('right') === 'message_context')\n                            $msg = this.model.messages_view.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"] img[src=\"${source}\"]`);\n                        else\n                            $msg = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"] img[src=\"${source}\"]`);\n                        if ($msg.length) {\n                            $msg[0].src = result;\n                            $msg[0].onload = () => {\n                                if (!scrolled_from_bottom)\n                                    this.scrollToBottom();\n                                else\n                                    this.scrollTo(this.ps_container[0].scrollHeight - scrolled_from_bottom);\n                            };\n                            $msg.attr('data-mfp-src', result);\n                        }\n                    });\n                });\n            }\n            let fwd_msgs = message.get('forwarded_message') || [];\n            fwd_msgs.forEach((fwd_msg) => {\n                let fwd_images = fwd_msg.get('images') || [];\n                fwd_images.forEach((img) => {\n                    let source = img.sources[0];\n                    if (!img.key)\n                        return;\n                    this.model.messages.decryptFile(source, img.key).then((result) => {\n                        if (result === null)\n                            return;\n                        let $msg = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"] .fwd-message[data-uniqueid=\"${fwd_msg.get('unique_id')}\"] img[src=\"${source}\"]`);\n                        if ($msg.length) {\n                            $msg[0].src = result;\n                            $msg[0].onload = () => {\n                                if (!scrolled_from_bottom)\n                                    this.scrollToBottom();\n                                else\n                                    this.scrollTo(this.ps_container[0].scrollHeight - scrolled_from_bottom);\n                            };\n                            $msg.attr('data-mfp-src', result);\n                        }\n                    });\n                });\n            });\n        }\n    },\n\n    addMessage: function (message) {\n        let $message = this.buildMessageHtml(message),\n            index = this.model.messages.indexOf(message);\n        if (index === 0) {\n            $message.prependTo(this.$('.chat-content'));\n        } else {\n            let $prev_message = this.$(`.chat-message[data-uniqueid=\"${this.model.messages.models[index - 1].get('unique_id')}\"]`);\n            if (!$prev_message.length) {\n                $prev_message = this.addMessage(this.model.messages.models[index - 1]);\n            }\n            $message.insertAfter($prev_message);\n        }\n        let $next_message = $message.nextAll('.chat-message').first();\n        this.updateMessageInChat($message[0], message);\n        if ($next_message.length) {\n            this.updateMessageInChat($next_message[0]);\n        }\n        this.initPopup($message);\n        this.bottom.showChatNotification();\n        return $message;\n    },\n\n    initPopup: function ($message) {\n        let $one_image = $message.find('.uploaded-img'),\n            $collage_image = $message.find('.uploaded-img-for-collage');\n        if ($one_image.length) {\n            $one_image.each((idx, item) => {\n                this.initMagnificPopup($(item));\n            });\n        }\n        if ($collage_image.length) {\n            this.initZoomGallery($message);\n        }\n    },\n\n    getImagesInformation: function (msg) {\n        let images = msg.get('images'),\n            servers = [];\n        if (!images)\n            return;\n        images.forEach((img) => {\n            let server = new URL(img.sources[0]).hostname;\n            img.pretty_size = utils.pretty_size(img.size)\n            servers.push(server);\n        });\n        servers = [...new Set(servers)]\n\n        return {images, servers};\n    },\n\n    initMagnificPopup: function ($elem) {\n        let self = this;\n        $elem.length && $elem.magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + self.model.messages.getFilename(item.el.attr('src')) + '</a>' + ' ' + item.el.attr('title');\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    initZoomGallery: function ($message) {\n        let self = this;\n        $message.find('.zoom-gallery').length && $message.find('.zoom-gallery').magnificPopup({\n            delegate: 'img',\n            type: 'image',\n            closeOnContentClick: false,\n            closeBtnInside: false,\n            mainClass: 'mfp-with-zoom mfp-img-mobile',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + self.model.messages.getFilename(item.el.attr('src')) + '</a>' + ' ' + item.el.attr('title');\n                }\n            },\n            gallery: {\n                enabled: true\n            },\n            zoom: {\n                enabled: true,\n                duration: 300,\n                opener: function(element) {\n                    return element;\n                }\n            }\n        });\n    },\n\n    updateMessage: function (item) {\n        let $message, images = item.get('images'), emoji = item.get('only_emoji'), $new_message,\n            files =  item.get('files');\n        if (item instanceof xabber.Message) {\n            this.updateMentions(item);\n            $new_message = this.buildMessageHtml(item);\n            $message = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n        }\n        else\n            return;\n        $message.replaceWith($new_message)\n        $message = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n        this.updateMessageInChat($message[0], item);\n        this.initPopup($message);\n        this.bottom.showChatNotification();\n\n        if (item.get('data_form')) {\n            let data_form = utils.render_data_form(item.get('data_form'));\n            $message.find('.chat-msg-content').append(data_form);\n        }\n        let short_datetime = utils.pretty_short_datetime(item.get('last_replace_time')),\n            datetime = moment(item.get('last_replace_time')).format('D MMMM, YYYY HH:mm:ss'),\n            new_title = `${pretty_datetime(item.get('time'))} ${xabber.getString(\"edited\", [moment(item.get('timestamp')).startOf('day').isSame(moment(item.get('last_replace_time')).startOf('day')) ? short_datetime : datetime])}`;\n        $message.find('.msg-time').prop('title', new_title);\n        $message.find('.edited-info').removeClass('hidden').text(xabber.getString(\"chat_screen__message__label_edited\")).prop('title', new_title);\n    },\n\n    removeAllMessagesExceptLast: function () {\n        let messages_to_save = [];\n        if (!this.model.messages)\n            return;\n        this.model.messages.forEach((message, idx) => {\n            if (idx === (this.model.messages.length - 1)){\n                messages_to_save.push(message);\n                this.model.set('first_archive_id', message.get('stanza_id'));\n                this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`).removeClass('unread-message');\n                this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`).removeClass('unread-message-background');\n                return;\n            }\n            let $message, $message_in_chat;\n            $message_in_chat = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`);\n            (this.bottom.content_view) && ($message = this.bottom.content_view.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`));\n            $message.prev('.chat-day-indicator').remove();\n            $message.remove();\n        });\n        this.model.messages.reset(messages_to_save);\n        this.updateScrollBar();\n    },\n\n    removeMessage: function (item) {\n        let message, $message, $message_in_chat;\n        if (item instanceof xabber.Message) {\n            message = item;\n            $message_in_chat = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n            (this.bottom.content_view) && ($message = this.bottom.content_view.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`));\n        } else {\n            $message = item;\n            if (!$message.length) return;\n            message = this.model.messages.get($message.data('uniqueid'));\n        }\n        message && message.destroy();\n        if ($message_in_chat) {\n            this.removeMessageFromDOM($message_in_chat);\n        }\n        if ($message && ($message !== $message_in_chat))\n            this.removeMessageFromDOM($message);\n    },\n\n    removeMessageFromDOM: function ($message) {\n        if (($message.hasClass('with-author')) && (!$message.next().hasClass('with-author'))) {\n            let avatar = $message.find('.circle-avatar')[0];\n            $message.next().addClass('with-author');\n            $message.next().find('.circle-avatar').replaceWith(avatar);\n        }\n        $message.prev('.chat-day-indicator').remove();\n        $message.remove();\n        this.bottom.manageSelectedMessages();\n        if (!this._clearing_history) {\n            this.updateScrollBar();\n        }\n    },\n\n    clearHistory: function () {\n        let dialog_options = [],\n            dialog_message = this.contact.get('group_chat') ? xabber.getString(\"clear_group_chat_history_dialog_message\") : xabber.getString(\"clear_chat_history_dialog_message\"),\n            is_group_chat = this.contact.get('group_chat') ? true : false;\n        this._clearing_history = true;\n        if (this.account.server_features.get(Strophe.NS.REWRITE)) {\n            utils.dialogs.ask(xabber.getString(\"clear_history\"), dialog_message,\n                dialog_options, {ok_button_text: xabber.getString(\"clear_chat_history_dialog_button\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    return;\n                }\n                this.model.retractAllMessages(is_group_chat, () => {\n                    this._clearing_history = false;\n                    this.chat_item.updateLastMessage();\n                    this.updateScrollBar();\n                }, () => {\n                    this._clearing_history = false;\n                });\n            });\n        }\n        else {\n            utils.dialogs.ask(xabber.getString(\"clear_history\"), `${dialog_message}\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')})`,\n                dialog_options, {ok_button_text: xabber.getString(\"clear_chat_history_dialog_button\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    return;\n                }\n                let msgs = _.clone(this.model.messages.models);\n                msgs.forEach((item) => { this.removeMessage(item); });\n            });\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url, chat) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.link-file');\n        chat = chat || this.model;\n        $elem.addClass('voice-message-rendering').html($(templates.messages.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, $elem.find('#' + unique_id));\n\n        let hideShowCursor = () => {\n            let current_time = aud.getCurrentTime(),\n                duration = aud.getDuration();\n            if (current_time === 0 || current_time === duration)\n                $msg_element.addClass('wave-cursor-hidden');\n            else\n                $msg_element.removeClass('wave-cursor-hidden');\n        };\n\n        aud.on('ready', () => {\n            let duration = Math.round(aud.getDuration());\n            hideShowCursor();\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.addClass('playing');\n            $msg_element.removeClass('wave-cursor-hidden');\n            let is_popup;\n            xabber.current_plyr_player && (is_popup = xabber.current_plyr_player.is_popup);\n            xabber.current_plyr_player = chat.plyr_players.find(item => item.$audio_elem === $msg_element[0]);\n            xabber.current_plyr_player && (xabber.current_plyr_player.chat_item = chat.item_view);\n            xabber.current_plyr_player && (xabber.current_plyr_player.is_popup = is_popup);\n            let other_players = xabber.plyr_players.filter(other => other != xabber.current_plyr_player);\n            other_players.forEach(function(other) {\n                if (other.$audio_elem){\n                    if (other.$audio_elem.voice_message)\n                        other.$audio_elem.voice_message.stopTime();\n                }\n            });\n            (xabber.plyr_player_popup && xabber.plyr_player_popup.player) && xabber.plyr_player_popup.player.stop();\n            (!xabber.current_plyr_player && xabber.plyr_player_popup) && xabber.plyr_player_popup.closePopup();\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n            xabber.trigger('plyr_player_updated');\n        });\n\n        aud.on('finish', () => {\n            hideShowCursor();\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.removeClass('playing');\n            hideShowCursor();\n            xabber.trigger('plyr_player_updated');\n        });\n\n        aud.on('seek', () => {\n            hideShowCursor();\n        });\n\n        aud.stopTime = () => {\n            aud.stop()\n            $elem.find('.voice-msg-current-time').text(utils.pretty_duration(0));\n        };\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createImageGrid: function (attrs) {\n        let template_for_images;\n        if (attrs.images.length > 6) {\n            let tpl_name = 'template-for-6',\n                hidden_images = attrs.images.length - 5;\n            !xabber.settings.load_media && (tpl_name = 'hidden-template-for-6')\n            template_for_images = $(templates.messages[tpl_name](attrs));\n            template_for_images.find('.last-image').addClass('hidden-images');\n            template_for_images.find('.image-counter').text('+' + hidden_images);\n        }\n        else {\n            let tpl_name = 'template-for-' + attrs.images.length;\n            !xabber.settings.load_media && (tpl_name = 'hidden-template-for-' + attrs.images.length)\n            template_for_images = $(templates.messages[tpl_name](attrs));\n        }\n        if (!xabber.settings.load_media) {\n            template_for_images.find('img').removeClass('uploaded-img-for-collage popup-img').addClass('unloaded-img')\n        }\n        return template_for_images;\n    },\n\n    buildMessageHtml: function (message) {\n        let attrs = _.clone(message.attributes),\n            is_sender = (message instanceof xabber.Message) ? message.isSenderMe() : false,\n            user_info = attrs.user_info || {}, username,\n            images = attrs.images,\n            videos = attrs.videos,\n            emoji = message.get('only_emoji'),\n            files =  attrs.files,\n            locations =  attrs.locations,\n            link_references =  attrs.link_references,\n            is_video = Boolean(videos && videos.length),\n            is_image = Boolean(images && images.length),\n            is_location = locations ? true : false,\n            is_file = files ? true : false,\n            is_audio = false,\n            template_for_images,\n            avatar_id = user_info.avatar,\n            avatar_url = user_info.avatar_url,\n            role = user_info.role,\n            badge = user_info.badge,\n            from_id = user_info.id,\n            has_encrypted_files = attrs.has_encrypted_files,\n            audio_player_list = [];\n\n        username = user_info.nickname || this.model.get('saved') && this.account.get('name') || (attrs.from_jid === this.contact.get('jid') && this.contact.get('name'));\n        if (!username) {\n            if (is_sender) {\n                if (this.model.get(\"group_chat\")) {\n                    if (this.contact.my_info)\n                        username = this.contact.my_info.get('nickname');\n                    else if (this.contact)\n                        this.contact.getMyInfo(() => {\n                            username = this.contact.my_info.get('nickname');\n                            if ($message) {\n                                $message.children(\".msg-wrap\").find(\".chat-msg-author-wrap .chat-msg-author\").text(Strophe.xmlescape(username));\n                            }\n                        });\n                    else\n                        username = this.account.get('name');\n                } else\n                    username = this.account.get('name');\n            } else {\n                username = this.account.contacts.get(attrs.from_jid) ? this.account.contacts.get(attrs.from_jid).get('name') : attrs.from_jid;\n            }\n        }\n        username = Strophe.xmlescape(username || \"\");\n\n        if (is_sender && this.model.get('group_chat')) {\n            if (this.contact.my_info) {\n                role = this.contact.my_info.get('role');\n                badge = this.contact.my_info.get('badge');\n            }\n        }\n        _.extend(attrs, {\n            username: username,\n            state: (message instanceof xabber.Message) ? message.getState() : 'sent',\n            verbose_state: (message instanceof xabber.Message) ? message.getVerboseState() : 'sent',\n            time: pretty_datetime(attrs.time),\n            short_time: utils.pretty_time(attrs.time),\n            avatar_id: avatar_id,\n            avatar_url: avatar_url,\n            is_image: is_image,\n            is_video: is_video,\n            is_file: is_file,\n            is_location: is_location,\n            files: files,\n            locations: locations,\n            link_references: link_references,\n            role: utils.pretty_name(role),\n            badge: badge,\n            from_id: from_id\n        });\n        attrs.encrypted = attrs.encrypted || this.model.get('encrypted');\n        attrs.not_encrypted = attrs.not_encrypted || null;\n\n        if (attrs.type === 'system') {\n            let tpl_name = attrs.invite ? 'group_request' : 'system';\n            return $(templates.messages[tpl_name](attrs));\n        }\n\n        if (is_image) {\n            if (images.length > 1) {\n                template_for_images = this.createImageGrid(attrs);\n            }\n        }\n\n        let classes = [\n            attrs.is_unread && 'unread-message',\n            attrs.is_unread && 'unread-message-background',\n            attrs.not_encrypted && 'not-decrypted',\n            attrs.forwarded_message && 'forwarding',\n            (attrs.encrypted || this.model.get('encrypted')) ? 'encrypted' : \"\"\n        ];\n\n        let markup_body = utils.markupBodyMessage(message), $message;\n        if (attrs.searched_message){\n            let myRegexp = new RegExp('(.{0,12})(' + attrs.query + ')(.{0,12})','gmius'),\n                matching_markup = myRegexp.exec(markup_body);\n            if (matching_markup) {\n                if (matching_markup[1].length == 12)\n                    matching_markup[1] = '...' + matching_markup[1].substring(1);\n                if (matching_markup[3].length == 12)\n                    matching_markup[3] = matching_markup[3].substring(0, matching_markup[3].length - 1) + '...';\n                markup_body = matching_markup[1] + '<span class=\"mention ground-color-100\">' + matching_markup[2] + '</span>' + matching_markup[3];\n                markup_body = markup_body.replace(/\\n/g, \" \");;\n            }\n        }\n\n        if (this.model.get('saved') && !markup_body.length && attrs.forwarded_message && attrs.forwarded_message.length == 1) {\n            $message = $(templates.messages.saved_main(_.extend(attrs, {\n                classlist: classes.join(' ')\n            })));\n        } else if (attrs.searched_message)\n            $message = $(templates.messages.searched(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                msg_time: utils.pretty_short_datetime_recent_chat(attrs.time),\n                classlist: classes.join(' ')\n            })));\n        else if (attrs.type === 'file_upload')\n            $message = $(templates.messages.file_upload(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                classlist: classes.join(' ')\n            })));\n        else\n            $message = $(templates.messages.main(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                classlist: classes.join(' ')\n            })));\n\n        if (attrs.hasOwnProperty('encrypted')){\n            if (attrs.hasOwnProperty('submitted_here')){\n                $message.attr('data-trust', true);\n            } else if (attrs.hasOwnProperty('is_trusted')){\n                $message.attr('data-trust', attrs.is_trusted);\n            } else {\n                $message.attr('data-trust', this.$el.attr('data-trust'));\n            }\n        }\n\n        if (is_image) {\n            if (images.length > 1) {\n                $message.find('.chat-msg-media-content').html(template_for_images);\n                !xabber.settings.load_media && $message.find('.img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n            if (images.length == 1) {\n                let $img_html = this.createImage(images[0]),\n                    img_content = this.createImageContainer(images[0]);\n                $img_html.onload = () => {\n                    this.imageOnload($message);\n                };\n                $message.find('.chat-msg-media-content').html($(img_content).html($img_html));\n                !xabber.settings.load_media && $message.find('.img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                this.updateScrollBar();\n            }\n        }\n        if (is_video) {\n            let video_content = this.createVideoContainer();\n            $message.find('.chat-msg-media-content').append(video_content);\n            videos.forEach((video, idx) => {\n                let video_el = this.createVideo(video, idx);\n                $message.find('.video-content').append(video_el);\n            });\n            this.videoOnload($message, message);\n            $message.removeClass('file-upload noselect');\n        }\n\n        if (is_file && attrs.type !== 'file_upload') {\n            if (files.length > 0) {\n                let file_attrs = _.clone(files),\n                    template_for_file_content;\n                $(file_attrs).each((idx, file) => {\n                    let copied_attrs = _.clone(file_attrs[idx]);\n                    if (file.type) {\n                        if (file.voice)\n                            is_audio = true;\n                        else\n                            is_audio = false;\n                    }\n                    ((file_attrs.length === 1) && is_audio) && (file.name = xabber.getString(\"voice_message\"));\n                    let mdi_icon_class = utils.file_type_icon(file.type);\n                    _.extend(copied_attrs, { is_audio: is_audio, duration: utils.pretty_duration(copied_attrs.duration), mdi_icon: mdi_icon_class, size: utils.pretty_size(copied_attrs.size) });\n                    template_for_file_content = is_audio ? $(templates.messages.audio_file(copied_attrs)) : $(templates.messages.file(copied_attrs));\n                    $message.find('.chat-msg-media-content').append(template_for_file_content);\n                    if (is_audio && $message.find('.link-file').length) {\n                        let audio_player = {$audio_elem : $message.find('.link-file')[0]};\n                        audio_player.msg_time = $message.attr('data-time');\n                        audio_player.author = username;\n                        audio_player.message_unique_id = $message.attr('data-uniqueid');\n                        if (attrs.from_jid === this.account.get('jid')) {\n                            if (this.model.get('group_chat')) {\n                                if (this.contact.my_info) {\n                                    audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                                    if (!audio_player.contact_avatar) {\n                                        if (this.account.cached_image)\n                                            audio_player.contact_avatar = this.account.cached_image;\n                                        !audio_player.contact_avatar && (audio_player.contact_avatar = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                                    } else\n                                        audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                                }\n                            }\n                            if (!audio_player.contact_avatar)\n                                audio_player.contact_avatar = this.account.cached_image;\n                        } else {\n                            if (this.model.get('group_chat')) {\n                                let author = $message.find('.msg-wrap .chat-msg-author').text();\n                                audio_player.contact_avatar = Images.getDefaultAvatar(author);\n                            }\n                            else {\n                                let author = this.account.contacts.get($message.data('from')) || $message.find('.msg-wrap .chat-msg-author').text() || $message.data('from');\n                                audio_player.contact_avatar = author.cached_image || Images.getDefaultAvatar(author);\n                            }\n                        }\n                        if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                            this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                            xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                            audio_player_list = audio_player_list.concat([audio_player]);\n                        } else {\n                            audio_player_list = message.get('msg_player_audios');\n                        }\n\n                        let f_url = $message.find('.link-file').find('.file-link-download').attr('href');\n                        $message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                        audio_player.$audio_elem.voice_message = this.renderVoiceMessage($message.find('.link-file').find('.file-container')[0], f_url);\n\n                        xabber.trigger('plyr_player_updated');\n                    }\n                });\n            }\n        }\n\n        if (is_file && attrs.type === 'file_upload') {\n            let images = [];\n            $(files).each((idx, file_) => {\n                file_.upload_id = idx;\n                if (utils.isImageType(file_.type)) {\n                    file_.sources = [file_.key ? file_.image_prev.src : window.URL.createObjectURL(new Blob([file_])),];\n                    images.push(file_);\n                }\n            });\n            if (images.length > 0) {\n                if (images.length > 1) {\n                    let template_for_images;\n                    if (images.length > 6) {\n                        let tpl_name = 'template-for-6',\n                            hidden_images = images.length - 5;\n                        template_for_images = $(templates.messages[tpl_name]({images}));\n                        template_for_images.find('.last-image').addClass('hidden-images');\n                        template_for_images.find('.image-counter').text('+' + hidden_images);\n                    }\n                    else {\n                        let tpl_name = 'template-for-' + images.length;\n                        template_for_images = $(templates.messages[tpl_name]({images}));\n                    }\n                    template_for_images.addClass('unuploaded-images');\n                    $(templates.messages.loading_circle()).insertAfter(template_for_images.find('img'));\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').prepend(template_for_images);\n                } else {\n                    let $img_html = this.createImage(images[0]),\n                        img_content = this.createImageContainer(images[0]),\n                        maxHeight = 400,\n                        maxWidth = (xabber.main_panel.$el.width() * 0.715 - 176) * 0.7,\n                        imgHeight = images[0].height,\n                        imgWidth = images[0].width;\n                    maxWidth = maxWidth > 400 ? 400 : maxWidth;\n                    if (imgHeight && imgWidth) {\n                        if (imgWidth > maxWidth) {\n                            imgHeight = imgHeight * (maxWidth/imgWidth);\n                            imgWidth = maxWidth;\n                        }\n                        if (imgHeight > maxHeight) {\n                            imgWidth = imgWidth * (maxHeight/imgHeight);\n                            imgHeight = maxHeight;\n                        }\n                    }\n                    imgWidth = imgWidth ? imgWidth : 200;\n                    imgHeight = imgHeight ? imgHeight : 200;\n                    $(img_content).addClass('unuploaded-images');\n                    $(img_content).attr('data-upload-file-id', images[0].upload_id);\n                    $(img_content).css({\n                        width: imgWidth,\n                        height: imgHeight,\n                        'max-height': maxHeight,\n                        'max-width': maxWidth,\n                    });\n                    $(img_content).html($img_html)\n                    $(img_content).append(templates.messages.loading_circle());\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').prepend(img_content);\n                }\n            }\n            if (files.length > 0) {\n                $(files).each((idx, item) => {\n                    if (images.includes(item))\n                        return;\n                    let file_attrs = {\n                            name: item.name,\n                            type: item.type,\n                            upload_id: item.upload_id,\n                        },\n                        template_for_file_content;\n                    _.extend(file_attrs, {size: utils.pretty_size(item.size)});\n                    template_for_file_content = $(templates.messages.file_loading(file_attrs));\n                    template_for_file_content.find('.file-loading-container').html(templates.messages.loading_circle());\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_file_content);\n                });\n            }\n        }\n        if (is_location) {\n            if (locations.length > 0) {\n                let location_attrs = _.clone(locations),\n                    template_for_location_content;\n                $(location_attrs).each((idx, location) => {\n                    let copied_attrs = _.clone(location_attrs[idx]);\n                    _.extend(copied_attrs, { id: '_' + Math.random().toString(36).substr(2, 9)});\n                    if (xabber.settings.mapping_service){\n                        template_for_location_content = $(templates.messages.location(copied_attrs));\n                        $message.find('.chat-msg-location-content').attr('lon', copied_attrs.lon);\n                        $message.find('.chat-msg-location-content').attr('lat', copied_attrs.lat);\n                        $message.find('.chat-msg-location-content').append(template_for_location_content);\n                        this.loadLocationInChat($message, copied_attrs);\n                        this.locationOnload($message);\n                    } else {\n                        $message.find('.chat-msg-content').append('<a class=\"location-link\" href=\"geo:' + copied_attrs.lat + ',' + copied_attrs.lon + '\">' + xabber.getString(\"recent_chat__last_message__locations_plural_0\") + '</a>');\n                    }\n                });\n            }\n        }\n\n        if (link_references && link_references.length > 0) {\n            let link_references_attrs = _.clone(link_references),\n                template_for_link_reference_content,\n                youtube_url_regexp = new RegExp('^((?:https?:)?\\\\/\\\\/)?((?:www|m)\\\\.)?((?:youtube(-nocookie)?\\\\.com|youtu.be))(\\\\/(?:[\\\\w\\\\-]+\\\\?v=|embed\\\\/|v\\\\/)?)([\\\\w\\\\-]+)(\\\\S+)?$', 'i'),\n                vimeo_url_regexp = /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i;\n            $(link_references_attrs).each((idx, link) => {\n                let copied_attrs = _.clone(link_references_attrs[idx]);\n                copied_attrs.domain = copied_attrs.url ? utils.getDomainFromUrl(copied_attrs.url) : copied_attrs.site_name;\n                if (copied_attrs.original_text && !/^https?:\\/\\//i.test(copied_attrs.original_text))\n                    copied_attrs.original_text = 'http://' + copied_attrs.original_text;\n                if (link_references_attrs[idx].type && link_references_attrs[idx].type.includes('video') && link_references_attrs[idx].video_url && (youtube_url_regexp.test(link_references_attrs[idx].video_url) || vimeo_url_regexp.test(link_references_attrs[idx].video_url))){\n                    copied_attrs.video_url = link_references_attrs[idx].video_url.replace(\"autoplay=1&\", \"\");\n                    copied_attrs.is_video = true;\n                    youtube_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'youtube');\n                    vimeo_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'vimeo');\n                } else\n                    copied_attrs.is_video = false;\n                template_for_link_reference_content = $(templates.messages.link_reference_chat(copied_attrs));\n                $message.find('.chat-msg-link-reference-content').append(template_for_link_reference_content);\n            });\n            this.OGPLinkOnload($message, message);\n        }\n\n        if (message.get('data_form')) {\n            let data_form = utils.render_data_form(message.get('data_form'));\n            $message.find('.chat-msg-content').append(data_form);\n        }\n\n        if (attrs.forwarded_message && !attrs.searched_message) {\n            $(attrs.forwarded_message).each((idx, fwd_msg) => {\n                is_sender = fwd_msg.isSenderMe();\n                attrs = _.clone(fwd_msg.attributes);\n                let is_image_forward = Boolean(attrs.images && attrs.images.length),\n                    images_forward = is_image_forward ? _.clone(attrs.images) : undefined,\n                    $img_html_forward,\n                    is_forward_video = Boolean(attrs.videos && attrs.videos.length),\n                    is_forward_file = Boolean(attrs.files && attrs.files.length),\n                    is_forward_location = Boolean(attrs.locations && attrs.locations.length),\n                    is_fwd_voice_message,\n                    user_info = attrs.user_info || {},\n                    avatar_id = user_info.avatar,\n                    avatar_url = user_info.avatar_url,\n                    role = utils.pretty_name(user_info.role),\n                    badge = user_info.badge,\n                    from_id = user_info.id,\n                    from_jid = attrs.from_jid;\n                !has_encrypted_files && (has_encrypted_files = attrs.has_encrypted_files);\n                if (is_sender) {\n                    username = Strophe.xmlescape(user_info.nickname || this.account.get('name'));\n                } else {\n                    username = Strophe.xmlescape(user_info.nickname || user_info.id || this.account.contacts.mergeContact({jid: from_jid}).get('name'));\n                }\n\n                let fwd_markup_body = utils.markupBodyMessage(fwd_msg);\n\n                let $f_message = $(templates.messages.forwarded(_.extend(attrs, {\n                    time: pretty_datetime(attrs.time),\n                    short_time: utils.pretty_short_month_date(attrs.time),\n                    username: username,\n                    avatar_id: avatar_id,\n                    avatar_url: avatar_url,\n                    message: fwd_markup_body,\n                    is_file: is_forward_file,\n                    is_location: is_forward_location,\n                    is_audio: is_fwd_voice_message,\n                    role: role,\n                    badge: badge,\n                    from_id: from_id\n                })));\n\n                if (this.model.get('saved') && $message.hasClass('saved-main')) {\n                    $f_message.append($message.children('.right-side').clone());\n                }\n\n                if (fwd_msg.get('forwarded_message')) {\n                    let fwd_messages_count = fwd_msg.get('forwarded_message').length,\n                        fwd_messages_link = xabber.getQuantityString(\"forwarded_messages_count\", fwd_messages_count);\n                    $f_message.children('.msg-wrap').children('.fwd-msgs-block').append($('<a/>', {class: 'collapsed-forwarded-message', 'data-uniqueid': attrs.unique_id}).text(fwd_messages_link));\n                }\n\n                if (is_image_forward) {\n                    if (images_forward.length > 1) {\n                        template_for_images = this.createImageGrid(attrs);\n                        $f_message.find('.chat-msg-media-content').html(template_for_images);\n                        !xabber.settings.load_media && $f_message.find('.img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                    }\n                    if (images_forward.length == 1) {\n                        $img_html_forward = this.createImage(images_forward[0]);\n                        $img_html_forward.onload = () => {\n                            this.imageOnload($message);\n                        };\n                        let img_content_forward = this.createImageContainer(images_forward[0]);\n                        $f_message.find('.chat-msg-media-content').html($(img_content_forward).html($img_html_forward));\n                        !xabber.settings.load_media && $f_message.find('.img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                    }\n                }\n                if (is_forward_video) {\n                    let video_content = this.createVideoContainer();\n                    $f_message.find('.chat-msg-media-content').append(video_content);\n                    attrs.videos.forEach((video, idx) => {\n                        let video_el = this.createVideo(video, idx);\n                        $f_message.find('.video-content').append(video_el);\n                    });\n                    this.videoOnload($message, message);\n                    $f_message.removeClass('file-upload noselect');\n                }\n\n                if (is_forward_file) {\n                    if (attrs.files.length > 0) {\n                        let file_attrs = _.clone(attrs.files),\n                            template_for_file_content;\n                        $(file_attrs).each((idx, file) => {\n                            let copied_attrs = _.clone(file_attrs[idx]);\n                            if (file.type) {\n                                if (file.voice)\n                                    is_audio = true;\n                                else\n                                    is_audio = false;\n                            }\n                            ((file_attrs.length === 1) && is_audio) && (file.name = xabber.getString(\"voice_message\"));\n                            let mdi_icon_class = utils.file_type_icon(file.type);\n                            _.extend(copied_attrs, { is_audio: is_audio, duration: utils.pretty_duration(copied_attrs.duration), mdi_icon: mdi_icon_class, size: utils.pretty_size(copied_attrs.size)});\n                            template_for_file_content = is_audio ? $(templates.messages.audio_file(copied_attrs)) : $(templates.messages.file(copied_attrs));\n                            $f_message.find('.chat-msg-media-content').append(template_for_file_content);\n                            if (is_audio && $f_message.find('.link-file').length) {\n                                let audio_player = {$audio_elem : $f_message.find('.link-file')[0]};\n                                audio_player.msg_time = $message.attr('data-time');\n                                audio_player.author = username;\n                                audio_player.message_unique_id = $message.attr('data-uniqueid') + '-' + $f_message.attr('data-uniqueid');\n                                if (is_sender) {\n                                    if (this.model.get('group_chat')) {\n                                        if (this.contact.my_info) {\n                                            audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                                            if (!audio_player.contact_avatar)\n                                                audio_player.contact_avatar = this.account.cached_image || Images.getDefaultAvatar(this.contact.my_info.get('nickname'));\n                                            else\n                                                audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                                        }\n                                    }\n                                    if (!audio_player.contact_avatar)\n                                        audio_player.contact_avatar = this.account.cached_image;\n                                } else if (this.account.contacts.mergeContact({jid: from_jid})) {\n                                    let contact = this.account.contacts.mergeContact({jid: from_jid})\n                                    audio_player.contact_avatar = contact.cached_image || (this.model.get('group_chat') ? Images.getDefaultAvatar($f_message.find('.msg-wrap .fwd-msg-author').text()) : Images.getDefaultAvatar(contact));\n                                }\n                                if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                                    this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                                    xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                                    audio_player_list = audio_player_list.concat([audio_player]);\n                                } else {\n                                    audio_player_list = message.get('msg_player_audios');\n                                }\n                                let f_url = $f_message.find('.link-file').find('.file-link-download').attr('href');\n                                $f_message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                                audio_player.$audio_elem.voice_message = this.renderVoiceMessage($f_message.find('.link-file').find('.file-container')[0], f_url);\n                                xabber.trigger('plyr_player_updated');\n                            }\n                        });\n                    }\n                }\n                if (is_forward_location) {\n                    if (attrs.locations.length > 0) {\n                        let location_attrs = _.clone(attrs.locations),\n                            template_for_location_content;\n                        $(location_attrs).each((idx, location) => {\n                            let copied_attrs = _.clone(location_attrs[idx]);\n                            _.extend(copied_attrs, { id: '_fwd' + Math.random().toString(36).substr(2, 9) });\n                            if (xabber.settings.mapping_service){\n                                template_for_location_content = $(templates.messages.location(copied_attrs));\n                                $f_message.find('.chat-msg-location-content').attr('lon', copied_attrs.lon);\n                                $f_message.find('.chat-msg-location-content').attr('lat', copied_attrs.lat);\n                                $f_message.find('.chat-msg-location-content').append(template_for_location_content);\n                                this.loadLocationInChat($message, copied_attrs);\n                            } else {\n                                $f_message.find('.chat-msg-content').append('<a class=\"location-link\" href=\"geo:' + copied_attrs.lat + ',' + copied_attrs.lon + '\">' + xabber.getString(\"recent_chat__last_message__locations_plural_0\") + '</a>');\n                            }\n                        });\n                    }\n                }\n                if (attrs.link_references && attrs.link_references.length > 0) {\n                    let link_references_attrs = _.clone(attrs.link_references),\n                        template_for_link_reference_content,\n                        youtube_url_regexp = new RegExp('^((?:https?:)?\\\\/\\\\/)?((?:www|m)\\\\.)?((?:youtube(-nocookie)?\\\\.com|youtu.be))(\\\\/(?:[\\\\w\\\\-]+\\\\?v=|embed\\\\/|v\\\\/)?)([\\\\w\\\\-]+)(\\\\S+)?$', 'i'),\n                        vimeo_url_regexp = /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i;\n                    $(link_references_attrs).each((idx, link) => {\n                        let copied_attrs = _.clone(link_references_attrs[idx]);\n                        copied_attrs.domain = copied_attrs.url ? utils.getDomainFromUrl(copied_attrs.url) : copied_attrs.site_name;\n                        if (copied_attrs.original_text && !/^https?:\\/\\//i.test(copied_attrs.original_text))\n                            copied_attrs.original_text = 'http://' + copied_attrs.original_text;\n                        if (link_references_attrs[idx].type && link_references_attrs[idx].type.includes('video') && link_references_attrs[idx].video_url && (youtube_url_regexp.test(link_references_attrs[idx].video_url) || vimeo_url_regexp.test(link_references_attrs[idx].video_url))){\n                            copied_attrs.video_url = link_references_attrs[idx].video_url.replace(\"autoplay=1&\", \"\");\n                            copied_attrs.is_video = true;\n                            youtube_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'youtube');\n                            vimeo_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'vimeo');\n                        } else\n                            copied_attrs.is_video = false;\n                        template_for_link_reference_content = $(templates.messages.link_reference_chat(copied_attrs));\n                        $f_message.find('.chat-msg-link-reference-content').append(template_for_link_reference_content);\n                    });\n                    this.OGPLinkOnload($message, message);\n                }\n                if (fwd_msg.get('data_form')) {\n                    let data_form = utils.render_data_form(fwd_msg.get('data_form'));\n                    $f_message.find('.chat-msg-content').append(data_form);\n                }\n                $message.children('.msg-wrap').length ? $message.children('.msg-wrap').children('.fwd-msgs-block').append($f_message) : $message.children('.fwd-msgs-block').append($f_message);\n            });\n            this.updateScrollBar();\n            if (this.model.get('saved') && $message.hasClass('saved-main')) {\n                $message.children('.right-side').remove();\n            }\n        }\n        else\n            $message.find('.fwd-msgs-block').remove();\n\n        if (attrs.encrypted || this.model.get('encrypted') || has_encrypted_files) {\n            this.decryptImages(message, has_encrypted_files);\n        }\n\n        if (attrs.searched_message) {\n            let msg_text = '';\n            msg_text = (attrs.forwarded_message) ? (xabber.getQuantityString(\"forwarded_messages_count\", attrs.forwarded_message.length)) : '';\n            if (is_file && is_image && files.length && images.length)\n                msg_text = xabber.getString(\"recent_chat__last_message__attachments\", [files.length + images.length]);\n            else {\n                if (is_file && files.length == 1 && (files[0].is_audio || files[0].voice))\n                    msg_text = `${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(files[0].duration);\n                else if (is_file && files.length > 0) {\n                    let total_size = 0;\n                    files.forEach((f) => {\n                        total_size += Number(f.size)\n                    });\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__files\", files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\");\n                }\n                if (is_image && images.length > 0) {\n                    let total_size = 0;\n                    images.forEach((f) => {\n                        total_size += Number(f.size)\n                    });\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__images\", images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\");\n                }\n                if (is_location && locations.length > 0) {\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__locations\", locations.length);\n                }\n            }\n            if (msg_text)\n                $message.find('.chat-msg-content').text(msg_text)\n        }\n        message.set('msg_player_audios', audio_player_list);\n        return $message.hyperlinkify({selector: '.chat-text-content', embed_video: true}).emojify('.chat-text-content', {tag_name: 'div', emoji_size: utils.emoji_size(emoji)}).emojify('.chat-msg-author-badge', {emoji_size: 16});\n    },\n\n    getDateIndicator: function (date) {\n        let day_date = moment(date).startOf('day');\n        return $('<div class=\"chat-day-indicator one-line noselect\"' + (this.model.get('encrypted') ? (' data-trust=\"' + (this.bottom.$el.attr('data-trust') || this.bottom.$el.attr('data-contact-trust')) + '\"') : \"\") + ' data-time=\"'+\n            day_date.format('x')+'\">'+pretty_date(day_date)+'</div>');\n    },\n\n    initPlyrEmbedPlayer: function ($msg, msg) {\n        let message = this.model.messages.get($msg.data('uniqueid')) || msg,\n            msg_players = [],\n            msg_videos = message && message.get('videos') && message.get('videos').length ? message.get('videos') : null;\n        $msg.find('.plyr-video-container:not(.no-load)').each((idx, item) => {\n            if ($(item).hasClass('no-load'))\n                return;\n            let existing_player = this.model.plyr_players.filter(obj => { return (obj.message_id === idx && obj.message_unique_id === $msg.attr('data-uniqueid'))}),\n                player;\n            if (existing_player.length){\n                player = existing_player[0]\n                msg_players = msg_players.concat([player]);\n            } else {\n                player = {video_src: $(item).attr('data-src')}\n                player.provider = $(item).attr('data-provider');\n                player.video_id = $(item).attr('data-msg-video-id');\n                player.msg_time = $msg.attr('data-time');\n                player.chat_item = this.model.item_view;\n                player.message_id = idx;\n                player.message_unique_id = $msg.attr('data-uniqueid');\n                if (msg_videos && msg_videos.length && player.video_id >= 0) {\n                    let video_file = msg_videos[player.video_id];\n                    video_file && (player.video_file = video_file);\n                }\n                this.model.plyr_players = this.model.plyr_players.concat([player]).sort((a, b) => a.msg_time - b.msg_time);\n                xabber.plyr_players = xabber.plyr_players.concat([player]);\n                msg_players = msg_players.concat([player]);\n            }\n            $(item).attr('data-message-id', player.message_id);\n            $(item).addClass('no-load');\n            if (xabber.current_plyr_player && xabber.current_plyr_player.player_item)\n                if (xabber.current_plyr_player.player_item.message_id === player.message_id && xabber.current_plyr_player.player_item.message_unique_id === player.message_unique_id)\n                    $(item).addClass('active-plyr-container');\n        });\n        msg_players.length && message && message.set('msg_player_videos', msg_players);\n        xabber.trigger('plyr_player_updated');\n    },\n\n    hideMessageAuthor: function ($msg) {\n        $msg.removeClass('with-author');\n    },\n\n    showMessageAuthor: function ($msg) {\n        if ($msg.hasClass('system'))\n            return;\n        $msg.addClass('with-author');\n        let image, $avatar = $msg.find('.left-side .circle-avatar'),\n            from_jid = $msg.data('from');\n        if (from_jid === this.account.get('jid')) {\n            if (this.model.get('group_chat')) {\n                if (this.contact.my_info) {\n                    image = this.contact.my_info.get('b64_avatar');\n                    if (!image) {\n                        if (this.account.cached_image)\n                            image = this.account.cached_image;\n                        !image && (image = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                    } else\n                        image = Images.getCachedImage(image);\n                }\n            }\n            if (!image)\n                image = this.account.cached_image;\n        } else {\n            if (this.model.get('group_chat')) {\n                let author = $msg.find('.msg-wrap .chat-msg-author').text();\n                image = Images.getDefaultAvatar(author);\n            }\n            else {\n                let author = this.account.contacts.get($msg.data('from')) || $msg.find('.msg-wrap .chat-msg-author').text() || $msg.data('from');\n                image = author.cached_image || Images.getDefaultAvatar(author);\n            }\n        }\n        $avatar.setAvatar(image, this.avatar_size);\n        if ($msg.data('avatar')) {\n            if ($msg.data('from-id')) {\n                if (this.account.chat_settings.getHashAvatar($msg.data('from-id')) == $msg.data('avatar') && (this.account.chat_settings.getB64Avatar($msg.data('from-id')))) {\n                    $avatar.setAvatar(this.account.chat_settings.getB64Avatar($msg.data('from-id')), this.avatar_size);\n                }\n                else {\n                    let pending_avatar = this._pending_avatars.find(a => a.hash == $msg.data('avatar'));\n                    if (pending_avatar) {\n                        pending_avatar.dfd.done((data_avatar) => {\n                            $avatar.setAvatar(data_avatar, this.avatar_size);\n                            let idx = this._pending_avatars.indexOf(pending_avatar);\n                            if (idx > -1)\n                                this._pending_avatars.splice(idx, 1);\n                        });\n                    } else {\n                        if($msg.data('avatar-url')){\n                            $avatar.setAvatar($msg.data('avatar-url'), this.avatar_size);\n                            this.account.chat_settings.updateCachedAvatars($msg.data('from-id'), $msg.data('avatar'), $msg.data('avatar-url'));\n                        }\n                        else\n                        {\n                            let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + $msg.data('from-id'), dfd = new $.Deferred();\n                            this._pending_avatars.push({hash: $msg.data('avatar'), dfd: dfd});\n                            this.contact.getAvatar($msg.data('avatar'), node, (data_avatar) => {\n                                $avatar.setAvatar(data_avatar, this.avatar_size);\n                                this.account.chat_settings.updateCachedAvatars($msg.data('from-id'), $msg.data('avatar'), data_avatar);\n                                dfd.resolve(data_avatar);\n                            });\n\n                        }\n                    }\n                }\n            }\n        }\n    },\n\n    hideFwdMessageAuthor: function ($msg) {\n        $msg.removeClass('with-author');\n    },\n\n    showFwdMessageAuthor: function ($fwd_message) {\n        if (!$fwd_message.length)\n            return;\n        $fwd_message.addClass('with-author');\n        let image,\n            $avatar = $fwd_message.find('.circle-avatar'),\n            from_jid = $fwd_message.data('from'),\n            is_sender = (from_jid === this.account.get('jid')),\n            contact = this.account.contacts.get(from_jid) || from_jid;\n        if (is_sender) {\n            if (this.model.get('group_chat')) {\n                if (this.contact.my_info) {\n                    image = this.contact.my_info.get('b64_avatar');\n                    if (!image)\n                        image = this.account.cached_image || Images.getDefaultAvatar(this.contact.my_info.get('nickname'));\n                    else\n                        image = Images.getCachedImage(image);\n                }\n            }\n            if (!image)\n                image = this.account.cached_image;\n        } else if (contact) {\n            image = contact.cached_image || (this.model.get('group_chat') ? Images.getDefaultAvatar($fwd_message.find('.msg-wrap .fwd-msg-author').text()) : Images.getDefaultAvatar(contact));\n        }\n        $avatar.setAvatar(image, this.avatar_size);\n        $avatar.removeClass('hidden');\n        if ($fwd_message.data('avatar')) {\n            if ($fwd_message.data('from-id')) {\n                if ((this.account.chat_settings.getHashAvatar($fwd_message.data('from-id')) == $fwd_message.data('avatar')) && (this.account.chat_settings.getB64Avatar($fwd_message.data('from-id')))) {\n                    $avatar.setAvatar(this.account.chat_settings.getB64Avatar($fwd_message.data('from-id')), this.avatar_size);\n                }\n                else {\n                    if($fwd_message.data('avatar-url')){\n                        $avatar.setAvatar($fwd_message.data('avatar-url'), this.avatar_size);\n                        this.account.chat_settings.updateCachedAvatars($fwd_message.data('from-id'), $fwd_message.data('avatar'), $fwd_message.data('avatar-url'));\n                    }\n                    else {\n                        let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + $fwd_message.data('from-id');\n                        this.contact && this.contact.getAvatar($fwd_message.data('avatar'), node, (data_avatar) => {\n                            $avatar.setAvatar(data_avatar, this.avatar_size);\n                            this.account.chat_settings.updateCachedAvatars($fwd_message.data('from-id'), $fwd_message.data('avatar'), data_avatar);\n                        });\n                    }\n                }\n            }\n        }\n    },\n\n    updateMessageInChat: function (msg_elem, msg) {\n        let $msg = $(msg_elem);\n        $msg.prev('.chat-day-indicator').remove();\n        if ($msg.find('.plyr-video-container').length) {\n            this.initPlyrEmbedPlayer($msg, msg);\n        }\n        let $prev_msg = $msg.prevAll('.chat-message').first();\n        if (!$prev_msg.length) {\n            this.getDateIndicator($msg.data('time')).insertBefore($msg);\n            this.showMessageAuthor($msg);\n            $msg.find('.fwd-message').each((idx, fwd_msg_item) => {\n                this.showFwdMessageAuthor($(fwd_msg_item));\n            });\n            return;\n        }\n        if ($msg.find('.data-form').length) {\n            this.showMessageAuthor($msg);\n            return;\n        }\n        let is_system = $prev_msg.hasClass('system'),\n            is_same_sender = ($msg.data('from') === $prev_msg.data('from')),\n            is_same_date = moment($msg.data('time')).startOf('day')\n                .isSame(moment($prev_msg.data('time')).startOf('day'));\n        if (!is_same_date) {\n            this.getDateIndicator($msg.data('time')).insertBefore($msg);\n            this.showMessageAuthor($msg);\n        } else if (is_system || !is_same_sender || $prev_msg.hasClass('saved-main')) {\n            this.showMessageAuthor($msg);\n        } else {\n            this.hideMessageAuthor($msg);\n        }\n        if ($msg.hasClass('forwarding')) {\n            let $fwd_message = $msg.find('.fwd-message');\n            $fwd_message.each((idx, fwd_msg_item) => {\n                let $fwd_msg_item = $(fwd_msg_item),\n                    $prev_fwd_message = (idx > 0) ? $fwd_msg_item.prev() : [];\n                $fwd_msg_item.switchClass('hide-date', is_same_date && $prev_fwd_message.length);\n                $fwd_msg_item.removeClass('hide-time');\n                if ($prev_fwd_message.length) {\n                    let is_same_fwded_sender = ($fwd_msg_item.data('from') === $prev_fwd_message.data('from'));\n                    if (is_same_fwded_sender) {\n                        this.hideFwdMessageAuthor($fwd_msg_item);\n                    } else {\n                        this.showFwdMessageAuthor($fwd_msg_item);\n                    }\n                } else {\n                    this.showMessageAuthor($msg);\n                    this.showFwdMessageAuthor($fwd_msg_item);\n                }\n            });\n        }\n\n        ($msg.find('.not-decrypted-icon').length) && $msg.find('.not-decrypted-icon').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        });\n    },\n\n    notifyMessage: function (message) {\n        if (xabber.settings.notifications && ((xabber.settings.notifications_private && !this.model.get('group_chat')) || (xabber.settings.notifications_group && this.model.get('group_chat')))) {\n            let notification_text;\n            if ((this.model.get('group_chat') && xabber.settings.message_preview_group) || (!this.model.get('group_chat') && xabber.settings.message_preview_private))\n                notification_text = message.getText();\n            else\n                notification_text = xabber.getString(\"notification__text_sent_a_message\");\n            let notification = xabber.popupNotification({\n                title: this.contact.get('name'),\n                text: notification_text,\n                icon: this.contact.cached_image.url\n            });\n            notification.onclick = () => {\n                window.focus();\n                this.model.trigger('open');\n            };\n        }\n        if (xabber.settings.group_sound && xabber.settings.notifications_group && this.model.get('group_chat')) {\n            let sound;\n            if (message.get('auth_request')) {\n                sound = xabber.settings.sound_on_auth_request;\n            } else {\n                sound = xabber.settings.sound_on_group_message;\n            }\n            xabber.playAudio(sound, false, !xabber.settings.notifications_volume_enabled ? 0 : xabber.settings.notifications_volume);\n        }\n        else if (xabber.settings.private_sound && xabber.settings.notifications_private && !this.model.get('group_chat')) {\n            let sound;\n            if (message.get('auth_request')) {\n                sound = xabber.settings.sound_on_auth_request;\n            } else {\n                sound = xabber.settings.sound_on_private_message;\n            }\n            xabber.playAudio(sound, false, !xabber.settings.notifications_volume_enabled ? 0 : xabber.settings.notifications_volume);\n        }\n        xabber.recountAllMessageCounter();\n    },\n\n    attentionMessage: function () {\n        let notification = xabber.popupNotification({\n            title: this.contact.get('name'),\n            text: xabber.getString(\"chats_attention\"),\n            icon: this.contact.cached_image.url\n        });\n        notification.onclick = () => {\n            window.focus();\n            this.model.trigger('open');\n        };\n        let sound = xabber.settings.sound_on_attention;\n        xabber.playAudio(sound);\n    },\n\n    sendMessage: function (message) {\n        let body = message.get('message'),\n            legacy_body = '',\n            mutable_content = [],\n            forwarded_message = message.get('forwarded_message'),\n            unique_id = message.get('unique_id'),\n            msg_id = message.get('msgid'),\n            link_references = message.get('link_references'),\n            stanza = $msg({\n                to: this.model.get('jid'),\n                type: 'chat',\n                id: msg_id\n            });\n\n        if (forwarded_message) {\n            legacy_body = [];\n            $(forwarded_message).each((idx, fwd_msg) => {\n                let legacy_fwd_msg = Array.from(_.escape(_.unescape(this.bottom.createTextMessage([fwd_msg], \">\"))) + ((idx === forwarded_message.length - 1 && !body.length) ? \"\" : '\\n')),\n                    idx_begin = legacy_body.length,\n                    fwd = $(fwd_msg.get('xml')).clone(),\n                    idx_end = legacy_body.concat(legacy_fwd_msg).length;\n                if (!fwd.attr('from'))\n                    fwd.attr('from', this.account.get('jid'));\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: idx_begin,\n                    end: idx_end\n                })\n                    .c('forwarded', {xmlns: 'urn:xmpp:forward:0'})\n                    .c('delay', {\n                        xmlns: 'urn:xmpp:delay',\n                        stamp: fwd_msg.get('time')\n                    }).up().cnode(fwd[0]).up().up().up();\n                legacy_body = legacy_body.concat(legacy_fwd_msg);\n                mutable_content.push({\n                    start: idx_begin,\n                    end: idx_end,\n                    type: 'forward'\n                });\n            });\n            body = _.unescape(legacy_body.join(\"\")) + body;\n        }\n\n        if (message.get('mentions') && message.get('mentions').length) {\n            message.get('mentions').forEach((mention) => {\n                let mention_attrs = {xmlns: Strophe.NS.MARKUP};\n                mention.is_gc && (mention_attrs.node = Strophe.NS.GROUP_CHAT);\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: mention.start + legacy_body.length,\n                    end: mention.end + legacy_body.length,\n                    type: 'decoration',\n                })\n                    .c('mention', mention_attrs).t(mention.target).up().up();\n            });\n        }\n\n        if (message.get('markups')) {\n            message.get('markups').forEach((markup) => {\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: markup.start + legacy_body.length,\n                    end: markup.end + legacy_body.length,\n                    type: 'decoration'\n                });\n                for (let idx in markup.markup) {\n                    stanza.c(markup.markup[idx], {xmlns: Strophe.NS.MARKUP}).up();\n                }\n                stanza.up();\n            });\n        }\n\n        if (message.get('blockquotes')) {\n            message.get('blockquotes').forEach((blockquote) => {\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: blockquote.start + legacy_body.length,\n                    end: blockquote.end + legacy_body.length,\n                    type: 'decoration'\n                })\n                    .c('quote', {xmlns: Strophe.NS.MARKUP}).up().up();\n            });\n        }\n\n        if (message.get('type') == 'file_upload') {\n            let files = message.get('files') || [],\n                images = message.get('images') || [],\n                videos = message.get('videos') || [],\n                all_files = files.concat(images);\n            all_files = all_files.concat(videos)\n            all_files.forEach((file, idx) => {\n                (idx === 0) && (body += '\\n');\n                legacy_body = file.sources[0] + ((idx != all_files.length - 1) ? '\\n' : \"\");\n                let start_idx = Array.from(_.escape(body)).length,\n                    end_idx = start_idx + legacy_body.length;\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: start_idx,\n                    end: end_idx\n                });\n                file.voice && stanza.c('voice-message', {xmlns: Strophe.NS.VOICE_MESSAGE});\n                stanza.c('file-sharing', {xmlns: Strophe.NS.FILES}).c('file');\n                file.type && stanza.c('media-type').t(file.type).up();\n                file['id'] && stanza.c('gallery-id').t(file['id']).up();\n                file.thumbnail && stanza.c('thumbnail-uri').t(file.thumbnail).up();\n                file.created && stanza.c('created').t(file.created).up();\n                file.name && stanza.c('name').t(file.name).up();\n                file.size && stanza.c('size').t(file.size).up();\n                file.height && stanza.c('height').t(file.height).up();\n                file.width && stanza.c('width').t(file.width).up();\n                file.duration && stanza.c('duration').t(file.duration).up();\n                file.description && stanza.c('desc').t(file.description).up();\n                stanza.up().c('sources');\n                file.sources.forEach((u) => {\n                    if (file.key)\n                        u = u.replace(/^(https|http)/, 'aescbc') + '#' + utils.ArrayBuffertoBase64(file.key);\n                    stanza.c('uri').t(u).up();\n                });\n                stanza.up().up().up();\n                file.voice && stanza.up();\n                body += legacy_body;\n                mutable_content.push({start: start_idx, end: end_idx});\n            });\n            message.set({type: 'main'});\n        }\n\n        if (link_references && link_references.length) {\n            link_references.forEach((link_reference, idx) => {\n                if (link_reference.start === -1) {\n                    link_reference.start = Array.from(_.escape(body)).length;\n                    body = body + '\\n' + link_reference.original_text;\n                    link_reference.end = link_reference.start + link_reference.original_text.length + 1;\n                }\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: link_reference.start,\n                    end: link_reference.end,\n                    type: 'mutable',\n                }).c('ogp', { xmlns: Strophe.NS.OGP, url: link_reference.original_text });\n                link_reference.site && stanza.c('meta', { property: 'og:site_name', content: link_reference.site}).up();\n                link_reference.type && stanza.c('meta', { property: 'og:type', content: link_reference.type}).up();\n                link_reference.title && stanza.c('meta', { property: 'og:title', content: link_reference.title}).up();\n                link_reference.url && stanza.c('meta', { property: 'og:url', content: link_reference.url}).up();\n                link_reference.description && stanza.c('meta', { property: 'og:description', content: link_reference.description}).up();\n                link_reference.image && stanza.c('meta', { property: 'og:image', content: link_reference.image}).up();\n                link_reference.image_width && stanza.c('meta', { property: 'og:image:width', content: link_reference.image_width}).up();\n                link_reference.image_height && stanza.c('meta', { property: 'og:image:height', content: link_reference.image_height}).up();\n                link_reference.video_url && stanza.c('meta', { property: 'og:video:url', content: link_reference.video_url}).up();\n                stanza.up().up();\n                mutable_content.push({start: link_reference.start, end: link_reference.end});\n            });\n        }\n\n        mutable_content.length && message.set({mutable_content: mutable_content});\n\n        this.account._pending_messages.push({chat_hash_id: this.model.id, unique_id: unique_id, timestamp: moment.now()});\n\n        message.set('original_message', body);\n        body && stanza.c('body').t(body).up();\n        stanza.c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n            .c('origin-id', {id: msg_id, xmlns: 'urn:xmpp:sid:0'}).up();\n        message.set({xml: $(stanza.tree()).clone()[0]});\n        if (message.get('state') === constants.MSG_ERROR) {\n            stanza.c('retry', {xmlns: Strophe.NS.DELIVERY}).up();\n            message.set('state', constants.MSG_PENDING);\n        }\n        if (stanza.toString().length >= constants.STANZA_MAX_SIZE) {\n            utils.dialogs.error(xabber.getString(\"message__error_big_stanza\"));\n            this.removeMessage(message);\n            return;\n        }\n        if (message.get('encrypted') && this.account.omemo) {\n            stanza.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n            if ($(stanza.tree()).children('body').length) {\n                stanza.cnode($(stanza.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                $(stanza.tree()).children('body').detach()\n            }\n            if ($(stanza.tree()).children('reference').length) {\n                $(stanza.tree()).children('reference').each((idx, reference) => {\n                    stanza.cnode($(stanza.tree()).children('reference')[idx]).up()\n                });\n                $(stanza.tree()).children('reference').detach()\n            }\n            stanza.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n            stanza.c('from', {jid: this.account.get('jid')}).up().up()\n            this.account.omemo.encrypt(this.contact, stanza).then((msg) => {\n                if (msg) {\n                    stanza = msg.message;\n                    message.set('trusted', msg.is_trusted);\n                    message.set({xml: $(stanza.tree()).clone()[0]});\n                }\n                let msg_sending_timestamp = moment.now();\n                this.account.sendFast(stanza, this.msgCallback.bind(this, msg_sending_timestamp, message));\n            });\n            return;\n        } else {\n            let msg_sending_timestamp = moment.now();\n            this.account.sendFast(stanza, this.msgCallback.bind(this, msg_sending_timestamp, message));\n        }\n    },\n\n    msgCallback: function (msg_sending_timestamp, message) {\n        this.bottom.click_counter = 0;\n        this.bottom.setDefaultPlaceholder();\n        if (!this.model.get('group_chat') && !this.account.server_features.get(Strophe.NS.DELIVERY)) {\n            setTimeout(() => {\n                if ((this.account.last_stanza_timestamp > msg_sending_timestamp) && (message.get('state') === constants.MSG_PENDING)) {\n                    message.set('state', constants.MSG_SENT);\n                } else {\n                    this.account.connection.ping.ping(this.account.get('jid'), () => {\n                        (message.get('state') === constants.MSG_PENDING) && message.set('state', constants.MSG_SENT);\n                    });\n                    setTimeout(() => {\n                        if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (message.get('state') === constants.MSG_PENDING))\n                            message.set('state', constants.MSG_ERROR);\n                    }, 5000);\n                }\n            }, 1000);\n        }\n        else {\n            let _pending_time = 5, was_reconnecting;\n            if (!(this.account.connection.authenticated && !this.account.connection.disconnecting && this.account.session.get('connected') && this.account.session.get('ready_to_send') && this.account.get('status') !== 'offline'))\n                was_reconnecting = true;\n            if (this.account.session.get('reconnecting'))\n                was_reconnecting = true;\n            this.account.session.once('change:reconnecting', () => {\n                console.log('change reconnecting');\n                console.log(this.account.session.get('reconnecting'));\n                was_reconnecting = true;\n            })\n            let _interval = setInterval(() => {\n                console.log(was_reconnecting);\n                if (was_reconnecting)\n                    clearInterval(_interval);\n                if (_pending_time >= 8 && message.get('state') === constants.MSG_PENDING && !was_reconnecting){\n                    console.log('ping on message pending');\n                    this.account.connection.ping.ping(this.account.get('jid'), () => {},  () => {\n                        let downtime = (moment.now() - this.account.last_stanza_timestamp) / 1000;\n                        if (downtime >= 2){\n                            console.log('message initiated reconnection');\n                            console.log(message);\n                            this.account.connection.disconnect();\n                        } else {\n                            console.log('ping was sent and got no result after 2 seconds, but didnt reconnect because last stanza time was: ' + downtime + ' sec')\n                        }\n                    }, 2000);\n                }\n                if (((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 40) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 40)) && !was_reconnecting) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 3;\n            }, 3000);\n        }\n    },\n\n    initJingleMessage: function (media_type) {\n        xabber.current_voip_call && xabber.current_voip_call.destroy();\n        media_type = media_type || {};\n        media_type = media_type.video ? 'video' : 'audio';\n        let session_id = uuid();\n        xabber.current_voip_call = new xabber.JingleMessage({session_id: session_id, video_live: media_type === 'video'}, {contact: this.contact});\n        xabber.current_voip_call.startCall();\n        xabber.current_voip_call.modal_view.show({status: constants.JINGLE_MSG_PROPOSE});\n        xabber.trigger('update_jingle_button');\n    },\n\n    saveForwardedMessage: function (msg) {\n        let forwarded_message = null;\n        if ($(msg).get('forwarded_message')) {\n            forwarded_message = $(msg).get('forwarded_message');\n            if (this.account.forwarded_messages.indexOf(forwarded_message) < 0) {\n                forwarded_message = this.saveForwardedMessage(forwarded_message);\n            }\n        }\n        msg = this.account.forwarded_messages.create(_.extend({\n            is_forwarded: true,\n            forwarded_message: forwarded_message\n        }, msg.attributes));\n        return msg;\n    },\n\n    onSubmit: function (text, fwd_messages, options) {\n        // send forwarded messages before\n        options = options || {};\n        let attrs = {\n            from_jid: this.account.get('jid'),\n            message: text,\n            mentions: options.mentions,\n            blockquotes: options.blockquotes,\n            markups: options.markup_references,\n            files: options.attached_files,\n            link_references: options.link_references,\n            encrypted: this.model.get('encrypted'),\n            submitted_here: true,\n            forwarded_message: null\n        }, _dfd_info = new $.Deferred();\n        _dfd_info.done(() => {\n            if (!fwd_messages.length && !(attrs.files && attrs.files.length) && !(attrs.link_references && attrs.link_references.length) && text.removeEmoji() === \"\")\n                attrs.only_emoji = Array.from(text).length;\n            if (fwd_messages.length) {\n                let new_fwd_messages = [];\n                _.each(fwd_messages, (msg) => {\n                    if (this.account.forwarded_messages.indexOf(msg) < 0) {\n                        msg = this.saveForwardedMessage(msg);\n                    }\n                    new_fwd_messages.push(msg);\n                });\n                attrs.forwarded_message = new_fwd_messages;\n                if (attrs.files && attrs.files.length) {\n                    attrs.type = 'file_upload';\n                    this.account.server_features.get(Strophe.NS.HTTP_UPLOAD) && (attrs.upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD).get('from'));\n                    this.model.messages.create(attrs);\n                } else {\n                    let message = this.model.messages.create(attrs);\n                    this.sendMessage(message);\n                }\n            } else if (attrs.files && attrs.files.length) {\n                attrs.type = 'file_upload';\n                this.account.server_features.get(Strophe.NS.HTTP_UPLOAD) && (attrs.upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD).get('from'));\n                this.model.messages.create(attrs);\n            } else if (text || (attrs.link_references && attrs.link_references.length)) {\n                let message = this.model.messages.create(attrs);\n                this.sendMessage(message);\n            }\n            if (this.contact && this.model.get('archived') && !this.model.isMuted()) {\n                message.set('muted', false);\n                this.head.archiveChat();\n                this.model.set('archived', false);\n                xabber.chats_view.updateScreenAllChats();\n            }\n            if (this.model.get('group_chat') && xabber.toolbar_view.$('.active').hasClass('chats'))\n                if (this.contact && !this.model.isMuted() && !this.model.get('archived'))\n                    xabber.chats_view.updateScreenAllChats();\n            xabber.chats_view.scrollToTop();\n            xabber.chats_view.clearSearch();\n        });\n\n        if (this.contact && this.contact.get(\"group_chat\") && !this.contact.my_info)\n            this.contact.getMyInfo(() => {\n                _dfd_info.resolve();\n            });\n        else\n            _dfd_info.resolve();\n    },\n\n    addFileMessage: function (files, is_voice) {\n        let new_files = [], file_counter = 0;\n        if (this.model.messages_view)\n            if (this.model.messages_view.data.get('visible'))\n                this.model.messages_view.openChat();\n        if (files.length > 10 && !(this.account.get('gallery_token') && this.account.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"too_many_files_at_once\"));\n            return;\n        }\n        let http_upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD);\n        if (!http_upload_service && !(this.account.get('gallery_token') && this.account.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"error_file_upload_not_support\", [this.account.domain]));\n            return;\n        }\n        let deferred_all = new $.Deferred();\n        deferred_all.done((data) => {\n            if (is_voice) {\n                this.model.messages.create({\n                    from_jid: this.account.get('jid'),\n                    type: 'file_upload',\n                    files: data,\n                    encrypted: this.model.get('encrypted'),\n                    upload_service: http_upload_service.get('from'),\n                    message: '',\n                    submitted_here: true\n                });\n            } else\n                this.bottom.addFileSnippets(data);\n        });\n        $(files).each((idx, file) => {\n            if (utils.isImageType(file.type)) {\n                let reader = new FileReader(), deferred = new $.Deferred();\n                Images.compressImage(file).done((image) => {\n                    reader.readAsDataURL(image);\n                    deferred.done((data) => {\n                        if (data) {\n                            image.height = data.height;\n                            image.width = data.width;\n                        }\n                        if (data.encrypted_file)\n                            new_files.push(data.encrypted_file);\n                        else\n                            new_files.push(image);\n                        file_counter++;\n                        if (file_counter === files.length)\n                            deferred_all.resolve(new_files);\n                    });\n                });\n                reader.onload = (e) => {\n                    if (this.model.get('encrypted')) {\n                        this.encryptFile(e.target.result).then((encrypted) => {\n                            let key = encrypted.keydata,\n                                new_file = new File([encrypted.payload], uuid().replace(/-/g, \"\"), {type: file.type});\n                            new_file.key = key;\n                            if (new_file.type === 'image/svg+xml') {\n                                deferred.resolve({encrypted_file: new_file,key: key});\n                            } else {\n                                let image_prev = new Image();\n                                image_prev.onload = function () {\n                                    let height = this.height,\n                                        width = this.width;\n                                    new_file.image_prev = image_prev;\n                                    deferred.resolve({height: height, width: width, encrypted_file: new_file, key: key});\n                                };\n                                image_prev.src = e.target.result;\n                            }\n                        });\n                    } else {\n                        if (file.type === 'image/svg+xml') {\n                            deferred.resolve({});\n                        } else {\n                            let image_prev = new Image();\n                            image_prev.onload = function () {\n                                let height = this.height,\n                                    width = this.width;\n                                deferred.resolve({height: height, width: width});\n                            };\n                            image_prev.src = e.target.result;\n                        }\n                    }\n                };\n            }\n            else {\n                if (this.model.get('encrypted')) {\n                    let reader = new FileReader();\n                    reader.onload = (e) => {\n                        this.encryptFile(e.target.result).then((encrypted) => {\n                            let key = encrypted.keydata,\n                                encrypted_file = new File([encrypted.payload], uuid().replace(/-/g, \"\"), {type: file.type});\n                            file.voice && (encrypted_file.voice = true);\n                            file.duration && (encrypted_file.duration = file.duration);\n                            encrypted_file.key = key;\n                            new_files.push(encrypted_file);\n                            file_counter++;\n                            if (file_counter === files.length)\n                                deferred_all.resolve(new_files);\n                        });\n                    };\n                    reader.readAsDataURL(file);\n                } else {\n                    new_files.push(file);\n                    file_counter++;\n                    if (file_counter === files.length)\n                        deferred_all.resolve(new_files);\n                }\n            }\n        });\n    },\n\n    startUploadFile: function (message, $message) {\n        $message.emojify('.chat-msg-author-badge', {emoji_size: 16});\n        $message.find('.repeat-upload').hide();\n        $message.find('.status').hide();\n        $message.find('.progress').show();\n        $message.find('.mdi-center-loading-indicator').removeClass('mdi-check').addClass('mdi-close');\n        $message.find('.mdi-center-loading-indicator').removeClass('hidden');\n        $message.find('.dropdown-content.retry-send-message').addClass('hidden');\n        $message.find('.msg-delivering-state').addClass('no-click');\n        let files_count = 0;\n        $(message.get('files')).each((idx, file) => {\n            let enc_file = new File([file], file.name);\n            enc_file.key && (delete enc_file.key);\n            let iq = $iq({type: 'get', to: message.get('upload_service')})\n                    .c('request', {xmlns: Strophe.NS.HTTP_UPLOAD})\n                    .c('filename').t(enc_file.name).up()\n                    .c('size').t(enc_file.size).up()\n                    .c('content-type').t(enc_file.type).up(),\n                deferred = new $.Deferred(), self = this;\n            this.account.sendIQFast(iq,\n                function (result) {\n                    let $slot = $(result).find(`slot[xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`);\n                    deferred.resolve({\n                        get_url: $slot.find('get').text(),\n                        put_url: $slot.find('put').text()\n                    });\n                },\n                function (err) {\n                    let error_text = $(err).find(`error text[xml\\\\:lang=\"${xabber._settings.get('language')}\"]`).text(),\n                        error_type = $(err).find('error').attr('type');\n                    !error_text && (error_text = $(err).find(`error text`).text());\n                    self.onFileNotUploaded(message, $message, error_text, 'xmpp');\n                }\n            );\n            let msg_sending_timestamp = moment.now(), _pending_time = 10, _interval = setInterval(() => {\n                if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 20) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 20)) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 10;\n            }, 10000);\n            deferred.done((data) => {\n                clearInterval(_interval);\n                let xhr = new XMLHttpRequest(),\n                    $bar = $message.find('.progress');\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap .mdi-close').click(() => {\n                    xhr.abort();\n                });\n                xhr.onabort = () => {\n                    this.removeMessage($message);\n                };\n                xhr.upload.onprogress = (event) => {\n                    let percentage = event.loaded / event.total;\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(parseInt((100 * percentage)) + '%');\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .preloader-path-new').css({ 'stroke-dasharray': '' + (150 * percentage) + ', 149.825'});\n                };\n                xhr.onload = xhr.onerror = function () {\n                    if (this.status === 201) {\n                        message.get('files')[idx].url = data.get_url;\n                        files_count++;\n                        if (files_count == message.get('files').length) {\n                            self.onFileUploaded(message, $message);\n                        }\n                    } else {\n                        self.onFileNotUploaded(message, $message, this.responseText, 'http');\n                    }\n                };\n                if ($message.data('cancel')) {\n                    xhr.abort();\n                } else {\n                    xhr.open(\"PUT\", data.put_url, true);\n                    xhr.send(enc_file);\n                }\n            });\n        });\n    },\n\n    startGalleryUploadFile: function (message, $message) {\n        $message.emojify('.chat-msg-author-badge', {emoji_size: 16});\n        message.set('files', message.get('files').filter((element) => { return element != null}) );\n        let files_count = 0,\n            cancelled_files_count = 0,\n            self = this,\n            is_error = false,\n            xhr_requests = [],\n            msg_files_count = message.get('files').length;\n        $message.find('.mdi-center-loading-indicator').removeClass('mdi-check').addClass('mdi-close');\n        $message.find('.uploaded-file').removeClass('uploaded-file');\n        $message.find('.mdi-center-loading-indicator').removeClass('hidden');\n        $message.find('.dropdown-content.retry-send-message').addClass('hidden');\n        $message.find('.msg-delivering-state').addClass('no-click');\n        $(message.get('files')).each((idx, file) => {\n            if (is_error)\n                return;\n            if (file.key) {\n                file = new File([file], file.name);\n                delete file.key\n            }\n            let msg_sending_timestamp = moment.now(), _pending_time = 10, _interval = setInterval(() => {\n                if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 20) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 20)) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 10;\n            }, 10000);\n\n            let formData = new FormData(),\n                metadata = {};\n            file.duration && (metadata.duration = file.duration);\n            file.width && (metadata.width = file.width);\n            file.height && (metadata.height = file.height);\n            formData.append('file', file, file.name);\n            formData.append('metadata', JSON.stringify(metadata));\n            if (file.size)\n                formData.append('size', file.size);\n            if (file.voice)\n                formData.append('media_type', file.type + '+voice');\n            else\n                formData.append('media_type', file.type);\n            clearInterval(_interval);\n            message.get('files')[idx].is_errored = false;\n            let xhr = new XMLHttpRequest(),\n                $bar = $message.find('.progress');\n            xhr.formData = formData;\n            xhr_requests = xhr_requests.concat([xhr]);\n            xhr.arrayIndex = xhr_requests.indexOf(xhr);\n            $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap .mdi-close').one(\"click\",() => {\n                cancelled_files_count++;\n                if (xhr.is_uploading)\n                    xhr.abort();\n                else {\n                    if ((msg_files_count - cancelled_files_count) == 0) {\n                        message.set('files', []);\n                        self.bottom.setEditedMessageAttachments(message, true);\n                        self.bottom.setRedactedUploadMessage(message);\n                        self.removeMessage($message);\n                    } else {\n                        xhr.is_cancelled = true;\n                        $message.find('.unuploaded-file[data-upload-file-id=\"' + file.upload_id + '\"]').remove();\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap').remove();\n                        message.get('files')[idx] = null;\n                    }\n                }\n            });\n            xhr.upload.onprogress = (event) => {\n                let percentage = event.loaded / event.total;\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(parseInt((100 * percentage)) + '%');\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .preloader-path-new').css({ 'stroke-dasharray': '' + (150 * percentage) + ', 149.825'});\n            };\n            xhr.oncancel = xhr.onload = xhr.onerror = xhr.onabort = function () {\n                let xhr_status = this.fakeStatus || this.status;\n                if (xhr_status >= 200 && xhr_status < 300) {\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('mdi-check').removeClass('mdi-close');\n                    let response = this.response ? JSON.parse(this.response) : this.fakeResponse;\n                    message.get('files')[idx].id = response.id;\n                    message.get('files')[idx].created_at = response.created_at;\n                    (response.thumbnail && response.thumbnail.url) && (message.get('files')[idx].thumbnail = response.thumbnail.url);\n                    message.get('files')[idx].url = response.file;\n                    files_count++;\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('uploaded-file');\n                    while (xhr_requests[files_count] && xhr_requests[files_count].is_cancelled){\n                        files_count++;\n                    }\n                    if (files_count == message.get('files').length) {\n                        self.onFileUploaded(message, $message);\n                    } else if (xhr_requests[files_count]){\n                        self.account.testGalleryTokenExpire(() => {\n                            self.account.testGalleryFileSlot(xhr_requests[files_count].formData.get('file'), (slot_response) => {\n                                if (!is_error) {\n                                    if (slot_response && slot_response.quota){\n                                        if (slot_response.file && slot_response.hash){\n                                            xhr_requests[files_count].fakeStatus = 200;\n                                            xhr_requests[files_count].fakeResponse = {\n                                                file: slot_response.file,\n                                                id: slot_response.id,\n                                                name: slot_response.name,\n                                                thumbnail: slot_response.thumbnail,\n                                                created_at: slot_response.created_at,\n                                            };\n                                            xhr_requests[files_count].oncancel();\n                                        } else {\n                                            xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                            xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'));\n                                            xhr_requests[files_count].is_uploading = true;\n                                            xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                        }\n                                    } else {\n                                        xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                        xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                        xhr_requests[files_count].oncancel();\n                                    }\n                                }\n                            });\n                        });\n                    }\n                } else {\n                    if (xhr_status === 0 && is_error)\n                        return;\n                    if ((msg_files_count - cancelled_files_count) == 0 && xhr_status === 0){\n                        message.set('files', []);\n                        self.bottom.setEditedMessageAttachments(message, true);\n                        self.bottom.setRedactedUploadMessage(message);\n                        self.removeMessage($message);\n                    } else {\n                        let response_text, error_status;\n                        self.account.handleCommonGalleryErrors(this.response)\n                        if (xhr_status === 500)\n                            response_text = this.fakeResponse || this.statusText;\n                        else if (xhr_status === 400 || this.fakeStatus){\n                            response_text = this.fakeResponse || JSON.parse(this.response).error;\n                            error_status = this.fakeStatus || JSON.parse(this.response).status;\n                            if (error_status && error_status == 429){\n                                setTimeout(() => {\n                                    self.account.testGalleryTokenExpire(() => {\n                                        self.account.testGalleryFileSlot(xhr_requests[files_count].formData.get('file'), (slot_response) => {\n                                            if (!is_error) {\n                                                if (slot_response && slot_response.quota){\n                                                    if (slot_response.file && slot_response.hash){\n                                                        xhr_requests[files_count].fakeStatus = 200;\n                                                        xhr_requests[files_count].fakeResponse = {\n                                                            file: slot_response.file,\n                                                            id: slot_response.id,\n                                                            name: slot_response.name,\n                                                            thumbnail: slot_response.thumbnail,\n                                                            created_at: slot_response.created_at,\n                                                        };\n                                                        xhr_requests[files_count].oncancel();\n                                                    } else {\n                                                        xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                                        xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'));\n                                                        xhr_requests[files_count].is_uploading = true;\n                                                        xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                                    }\n                                                } else {\n                                                    xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                                    xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                                    xhr_requests[files_count].oncancel();\n                                                }\n                                            }\n                                        });\n                                    });\n                                }, 1000);\n                                return;\n                            }\n                        }\n                        else if (xhr_status === 0) {\n                            $message.find('.unuploaded-file[data-upload-file-id=\"' + file.upload_id + '\"]').remove();\n                            $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap').remove();\n                        };\n                        (xhr_status === 0) && (message.get('files')[idx] = null);\n                        if (!message.get('files').filter((element) => { return element != null}).length && !message.get('message')){\n                            self.bottom.setEditedMessageAttachments(message, true);\n                            self.bottom.setRedactedUploadMessage(message);\n                            self.removeMessage($message);\n                            return;\n                        }\n                        files_count++;\n                        if (xhr_status != 0) {\n                            if (!$message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').closest('.img-content-template.hidden').length){\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(response_text);\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').removeClass('hidden');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').prop('title', response_text);\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('hidden');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('upload-error');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').css({ 'border-color': '#EF9A9A'});\n                            } else {\n                                $message.find('.hidden-images .circle-percent-text').text(response_text);\n                                $message.find('.hidden-images .mdi-alert-circle').removeClass('hidden');\n                                $message.find('.hidden-images .mdi-alert-circle').prop('title', response_text);\n                                $message.find('.hidden-images .mdi-center-loading-indicator').addClass('hidden');\n                                $message.find('.hidden-images').addClass('upload-error');\n                                $message.find('.hidden-images').css({ 'border-color': '#EF9A9A'});\n                            }\n                            message.get('files')[idx].is_errored = true;\n                            is_error = true;\n                            $(xhr_requests).each((idx, request) => {\n                                request.abort();\n                            })\n                            self.onFileNotUploaded(message, $message, response_text);\n                        }\n                        else if (files_count == msg_files_count) {\n                            self.onFileUploaded(message, $message);\n                        } else {\n                            while (xhr_requests[files_count] && xhr_requests[files_count].is_cancelled){\n                                files_count++;\n                            }\n                            if (files_count == msg_files_count) {\n                                self.onFileUploaded(message, $message);\n                            } else {\n                                self.account.testGalleryTokenExpire(() => {\n                                    self.account.testGalleryFileSlot(xhr_requests[files_count].formData.get('file'), (slot_response) => {\n                                        if (!is_error) {\n                                            if (slot_response && slot_response.quota){\n                                                if (slot_response.file && slot_response.hash){\n                                                    xhr_requests[files_count].fakeStatus = 200;\n                                                    xhr_requests[files_count].fakeResponse = {\n                                                        file: slot_response.file,\n                                                        id: slot_response.id,\n                                                        name: slot_response.name,\n                                                        thumbnail: slot_response.thumbnail,\n                                                        created_at: slot_response.created_at,\n                                                    };\n                                                    xhr_requests[files_count].oncancel();\n                                                } else {\n                                                    xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                                    xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'));\n                                                    xhr_requests[files_count].is_uploading = true;\n                                                    xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                                }\n                                            } else {\n                                                xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                                xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                                xhr_requests[files_count].oncancel();\n                                            }\n                                        }\n                                    });\n                                });\n                            }\n                        }\n                    }\n                }\n            };\n        });\n        if (xhr_requests.length){\n            if ($message.data('cancel')) {\n                xhr_requests[0].abort();\n            } else {\n                this.account.testGalleryTokenExpire(() => {\n                    this.account.testGalleryFileSlot(xhr_requests[0].formData.get('file'), (slot_response) => {\n                        if (!is_error) {\n                            if (slot_response && slot_response.quota){\n                                if (slot_response.file && slot_response.hash){\n                                    xhr_requests[0].fakeStatus = 200;\n                                    xhr_requests[0].fakeResponse = {\n                                        file: slot_response.file,\n                                        id: slot_response.id,\n                                        name: slot_response.name,\n                                        thumbnail: slot_response.thumbnail,\n                                        created_at: slot_response.created_at,\n                                    };\n                                    xhr_requests[0].oncancel();\n                                } else {\n                                    xhr_requests[0].open(\"POST\", this.account.get('gallery_url') + 'v1/files/upload/', true);\n                                    xhr_requests[0].setRequestHeader(\"Authorization\", 'Bearer ' + this.account.get('gallery_token'));\n                                    xhr_requests[0].is_uploading = true;\n                                    xhr_requests[0].send(xhr_requests[0].formData);\n                                }\n                            } else {\n                                xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                xhr_requests[0].oncancel();\n                            }\n                        }\n                    });\n                }, (err_status) => {\n                    let response_text = err_status,\n                        file;\n                    message.get('files').length && (file = message.get('files')[0])\n                    if (file && !_.isUndefined(file.upload_id)){\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(response_text);\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').removeClass('hidden');\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').prop('title', response_text);\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('hidden');\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('upload-error');\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').css({ 'border-color': '#EF9A9A'});\n                    }\n                    message.get('files').length && (message.get('files')[0].is_errored = true);\n                    is_error = true;\n                    $(xhr_requests).each((idx, request) => {\n                        request.abort();\n                    })\n                    self.onFileNotUploaded(message, $message, response_text);\n                });\n            }\n        }\n\n    },\n\n    encryptFile: async function (file) {\n        return await utils.AES.encrypt(file);\n    },\n\n    onFileUploaded: function (message, $message) {\n        $message.find('.dropdown-content.retry-send-message').removeClass('hidden');\n        $message.find('.msg-delivering-state').removeClass('no-click');\n        message.set('files', message.get('files').filter((element) => { return element != null}) );\n        let files = message.get('files'),\n            self = this, is_audio = false,\n            images = [], files_ = [], videos = [];\n        if (!files.length)\n            this.onFileNotUploaded(message, $message)\n        $(files).each((idx, file_) => {\n            let file_new_format = {\n                name: file_.name,\n                type: file_.type,\n                size: file_.size,\n                description: file_.description || '',\n                sources: [file_.url]\n            };\n            file_.key && (file_new_format.key = file_.key);\n            file_.voice && (file_new_format.voice = true);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')){\n                _.extend(file_new_format, { id: file_.id, created: file_.created_at, thumbnail: file_.thumbnail });\n            }\n            if (utils.isImageType(file_.type)) {\n                _.extend(file_new_format, { width: file_.width, height: file_.height });\n                images.push(file_new_format);\n            }\n            else if (utils.isVideoType(file_.type)) {\n                _.extend(file_new_format, { duration: file_.duration});\n                videos.push(file_new_format);\n            }\n            else {\n                _.extend(file_new_format, { duration: file_.duration});\n                files_.push(file_new_format);\n            }\n        });\n        $message.find('.unuploaded-images').remove();\n        $message.find('.unuploaded-file').remove();\n        //  loaded and send image\n        if (images.length > 0) {\n            if (images.length > 1) {\n                let template_for_images;\n                if (images.length > 6) {\n                    let tpl_name = 'template-for-6',\n                        hidden_images = images.length - 5;\n                    !xabber.settings.load_media && (tpl_name = 'hidden-template-for-6')\n                    template_for_images = $(templates.messages[tpl_name]({images}));\n                    template_for_images.find('.last-image').addClass('hidden-images');\n                    template_for_images.find('.image-counter').text('+' + hidden_images);\n                }\n                else {\n                    let tpl_name = 'template-for-' + images.length;\n                    !xabber.settings.load_media && (tpl_name = 'hidden-template-for-' + images.length)\n                    template_for_images = $(templates.messages[tpl_name]({images}));\n                }\n                if (!xabber.settings.load_media) {\n                    template_for_images.find('img').removeClass('uploaded-img-for-collage popup-img').addClass('unloaded-img')\n                }\n                $message.removeClass('file-upload noselect');\n                $message.find('.chat-msg-media-content .chat-file-info').remove();\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_images);\n                !xabber.settings.load_media && $message.find('.chat-msg-media-content.chat-main-upload-media .img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n            else {\n                let img = this.createImage(images[0]),\n                    img_content = self.createImageContainer(images[0]);\n                img.onload = () => {\n                    this.imageOnload($message);\n                };\n                $message.removeClass('file-upload noselect');\n                $message.find('.chat-msg-media-content .chat-file-info').remove();\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(img_content);\n                $message.find('.chat-msg-media-content.chat-main-upload-media .img-content').html(img);\n                !xabber.settings.load_media && $message.find('.chat-msg-media-content.chat-main-upload-media .img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n        }\n        message.set('videos', videos);\n        if (videos.length > 0) {\n            let video_content = this.createVideoContainer();\n            $message.find('.chat-msg-media-content.chat-main-upload-media').find('.chat-file-info').remove();\n            $message.find('.chat-msg-media-content.chat-main-upload-media').append(video_content);\n            videos.forEach((video, idx) => {\n                let video_el = this.createVideo(video, idx);\n                $message.find('.video-content').append(video_el);\n            });\n            this.videoOnload($message, message);\n            $message.removeClass('file-upload noselect');\n        }\n        if (files_.length > 0) {\n            $message.removeClass('file-upload noselect');\n            $(files_).each((idx, item) => {\n                if (!idx && !images.length){\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').find('.chat-file-info').remove();\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').removeClass('chat-file-content');\n                }\n                if (item.type) {\n                    if (item.voice)\n                        is_audio = true;\n                    else\n                        is_audio = false;\n                }\n                let file_attrs = {\n                        name: item.name,\n                        type: item.type,\n                        sources: item.sources\n                    },\n                    template_for_file_content,\n                    mdi_icon_class = utils.file_type_icon(item.type);\n                ((files_.length === 1) && is_audio) && (file_attrs.name = xabber.getString(\"voice_message\"));\n                _.extend(file_attrs, {size: utils.pretty_size(item.size), is_audio: is_audio, duration: utils.pretty_duration(item.duration), mdi_icon: mdi_icon_class});\n                template_for_file_content = is_audio ? $(templates.messages.audio_file(file_attrs)) : $(templates.messages.file(file_attrs));\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_file_content);\n                if (is_audio && $message.find('.link-file').length) {\n                    let audio_player = {$audio_elem : $message.find('.link-file')[0]};\n                    audio_player.msg_time = $message.attr('data-time');\n                    audio_player.author = $message.find('.chat-msg-author').text();\n                    audio_player.message_unique_id = $message.attr('data-uniqueid');\n                    if (this.model.get('group_chat')) {\n                        if (this.contact.my_info) {\n                            audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                            if (!audio_player.contact_avatar) {\n                                if (this.account.cached_image)\n                                    audio_player.contact_avatar = this.account.cached_image;\n                                !audio_player.contact_avatar && (audio_player.contact_avatar = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                            } else\n                                audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                        }\n                    }\n                    if (!audio_player.contact_avatar)\n                        audio_player.contact_avatar = this.account.cached_image;\n                    if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                        this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                        xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                    }\n\n                    let f_url = $message.find('.link-file').find('.file-link-download').attr('href');\n                    $message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                    audio_player.$audio_elem.voice_message = this.renderVoiceMessage($message.find('.link-file').find('.file-container')[0], f_url);\n\n                    message.set('msg_player_audios', [audio_player])\n                    xabber.trigger('plyr_player_updated');\n                }\n            });\n        }\n        this.initPopup($message);\n        message.set('images', images);\n        message.set('files', files_);\n        if ((message.get('encrypted') || this.model.get('encrypted')) && message.get('images').length) {\n            this.decryptImages(message);\n        }\n        this.sendMessage(message);\n        this.scrollToBottom();\n    },\n\n    createAudio: function(file_url, $elem) {\n        let audio = WaveSurfer.create({\n            container: $elem[0],\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n\n    createImage: function(image) {\n        let imgContent = new Image(),\n            maxHeight = 400,\n            maxWidth = (xabber.main_panel.$el.width() * 0.715 - 176) * 0.7;\n        if (image.height)\n            imgContent.height = image.height;\n        if (image.width)\n            imgContent.width = image.width;\n        maxWidth = maxWidth > 400 ? 400 : maxWidth;\n        if (xabber.settings.load_media) {\n            imgContent.src = image.sources[0];\n            $(imgContent).addClass('uploaded-img popup-img');\n        } else {\n            $(imgContent).addClass('unloaded-img');\n        }\n        $(imgContent).attr({'data-mfp-src': image.sources[0], title: (image.description || '')});\n        if (imgContent.height && imgContent.width) {\n            if (imgContent.width > maxWidth) {\n                imgContent.height = imgContent.height * (maxWidth/imgContent.width);\n                imgContent.width = maxWidth;\n            }\n            if (imgContent.height > maxHeight) {\n                imgContent.width = imgContent.width * (maxHeight/imgContent.height);\n                imgContent.height = maxHeight;\n            }\n        }\n        return imgContent;\n    },\n\n    createVideo: function(video, idx) {\n        video.pretty_size = utils.pretty_size(video.size)\n        let video_attrs = {video_src: video.sources[0], thumbnail: video.thumbnail, video_id: idx},\n            $video_wrap_template = $(templates.messages.video(video_attrs));\n        if (video.thumbnail){\n            setTimeout(() => {\n                $video_wrap_template.append($(`<img class=\"plyr-video-poster\" src=\"${video.thumbnail}\" onerror=\"this.style.display='none'\">`))\n            }, 1000);\n        }\n        return $video_wrap_template;\n    },\n\n    createImageContainer: function() {\n        return $('<div class=\"img-content\"/>')[0];\n    },\n\n    createVideoContainer: function() {\n        return $('<div class=\"video-content\"/>')[0];\n    },\n\n    onFileNotUploaded: function (message, $message, error_text, type, error_type) {\n        let error_message = error_text ? xabber.getString(\"file_upload__error\", [error_text]) : xabber.getString(\"file_upload__error_default\");\n        $message.find('.dropdown-content.retry-send-message').removeClass('hidden');\n        $message.find('.msg-delivering-state').removeClass('no-click');\n        $message.find('.circle-wrap .mdi-close').unbind( \"click\" );\n        message.set('state', constants.MSG_ERROR);\n        if (type == 'http' || error_type == 'wait'){\n            $message.find('.repeat-upload').one(\"click\",() => {\n                this.startUploadFile(message, $message);\n            });\n        }\n        else {\n            if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                this.bottom.deleteFilesFromMessages([message]);\n            $message.find('.edit-upload').one(\"click\",() => {\n                this.bottom.setEditedMessageAttachments(message, true);\n                this.bottom.setRedactedUploadMessage(message);\n                this.removeMessage($message);\n            });\n            $message.find('.repeat-upload').one(\"click\",() => {\n                message.set('state', constants.MSG_PENDING);\n                $message.find('.upload-error .circle-percent-text').text('0%');\n                $message.find('.mdi-alert-circle').addClass('hidden');\n                $message.find('.mdi-close').removeClass('hidden');\n                $message.find('.upload-error').css({ 'border-color': ''});\n                $message.find('.upload-error').removeClass('upload-error');\n                $message.find('.preloader-path-new').css({ 'stroke-dasharray': '0, 149.825'});\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    this.startGalleryUploadFile(message, $message);\n                else\n                    this.startUploadFile(message, $message);\n            });\n        }\n    },\n\n    sendChatState: function (state, type) {\n        if (this.model.get('saved') || this.contact && this.contact.get('status') === 'offline')\n            return;\n        clearTimeout(this._chatstate_timeout);\n        clearTimeout(this._chatstate_send_timeout);\n        this.chat_state = false;\n        let stanza = $msg({to: this.model.get('jid'), type: 'chat'}).c(state, {xmlns: Strophe.NS.CHATSTATES});\n        if (this.model.get('encrypted')) {\n            if (this.account.settings.get('encrypted_chatstates'))\n                type = 'encrypted';\n            else\n                return;\n        }\n        type && stanza.c('subtype', {xmlns: Strophe.NS.EXTENDED_CHATSTATES, type: type});\n        (state === 'composing') && (this.chat_state = true);\n        this.account.sendMsg(stanza);\n        if (state === 'composing') {\n            this._chatstate_timeout = setTimeout(() => {\n                this.chat_state = false;\n            }, constants.CHATSTATE_TIMEOUT_PAUSED);\n            this._chatstate_send_timeout = setTimeout(() => {\n                (!this.chat_state && xabber.settings.typing_notifications) && this.sendChatState('paused');\n            }, constants.CHATSTATE_TIMEOUT_PAUSED*2);\n        }\n    },\n\n    onChangedMessageTimestamp: function (message) {\n        let $message = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`),\n            $next_msg = $message.next(),\n            $old_prev_msg = $message.prev();\n        $message.attr({\n            'data-time': message.get('timestamp')\n        });\n        $message.detach();\n        $message.children('.right-side').find('.msg-time').attr({title: pretty_datetime(message.get('time'))}).text(utils.pretty_time(message.get('time')));\n        message.get('user_info') && $message.attr('data-from-id', message.get('user_info').id);\n        this.model.messages.sort();\n        let index = this.model.messages.indexOf(message);\n        if (index === 0) {\n            if ($old_prev_msg.hasClass('chat-day-indicator'))\n                $old_prev_msg.after($message);\n            else\n                $message.prependTo(this.$('.chat-content'));\n        } else {\n            let $prev_msg = this.$('.chat-message').eq(index - 1),\n                is_same_sender = ($message.data('from') === $prev_msg.data('from')),\n                is_same_date = moment($message.data('time')).startOf('day')\n                    .isSame(moment($prev_msg.data('time')).startOf('day'));\n            if (($old_prev_msg.data('from') !== $message.data('from')) && ($next_msg.data('from') === $message.data('from')) && (($next_msg.children('.right-side').find('.msg-delivering-state').attr('data-state') === 'delivered') || ($next_msg.children('.right-side').find('.msg-delivering-state').attr('data-state') === 'displayed')))\n                this.showMessageAuthor($next_msg);\n            if ($prev_msg.next().hasClass('chat-day-indicator') && (moment($prev_msg.next().data('time')).format('DD.MM.YY') === moment(message.get('timestamp')).format('DD.MM.YY'))) {\n                $message.insertAfter($prev_msg.next());\n                this.showMessageAuthor($message);\n            }\n            else\n                $message.insertAfter($prev_msg);\n            if (message.get('data_form') || message.get('forwarded_message') || !is_same_date || !is_same_sender || $prev_msg.hasClass('system') || $prev_msg.hasClass('saved-main'))\n                this.showMessageAuthor($message);\n            else\n                this.hideMessageAuthor($message);\n        }\n        let last_message = this.model.last_message;\n        if (!last_message || message.get('timestamp') > last_message.get('timestamp')) {\n            this.model.last_message = message;\n            this.chat_item.updateLastMessage();\n        }\n    },\n\n    onChangedReadState: function (message) {\n        let is_unread = message.get('is_unread'),\n            is_synced = message.get('synced_from_server'),\n            is_unread_archived = message.get('is_unread_archived'),\n            is_missed_msg = message.get('missed_msg'),\n            $msg = this.$(`.chat-message[data-uniqueid=\"${message.get(\"unique_id\")}\"]`);\n        if (is_unread) {\n            if (!is_unread_archived && !is_synced && !is_missed_msg)\n                this.model.messages_unread.add(message);\n            $msg.addClass('unread-message');\n            $msg.addClass('unread-message-background');\n            this.model.recountUnread();\n        } else {\n            if ((!is_unread_archived && !is_synced && !is_missed_msg) || this.model.messages_unread.indexOf(message) > -1)\n                this.model.messages_unread.remove(message);\n            $msg.removeClass('unread-message');\n            setTimeout(() => {\n                $msg.removeClass('unread-message-background');\n            }, 1000);\n            this.model.recountUnread();\n            if (!message.get('muted')) {\n                xabber.recountAllMessageCounter();\n            }\n        }\n    },\n\n    onTouchMessage: function (ev) {\n        if (ev.which === 3)\n            return;\n        let $elem = $(ev.target), $msg;\n\n        if ($elem.hasClass('chat-message')) {\n            $msg = $elem;\n        } else {\n            $msg = $elem.parents('.chat-message');\n        }\n        if (window.getSelection() != 0) {\n            utils.clearSelection();\n            $msg.attr('data-no-select-on-mouseup', '1');\n        }\n    },\n\n    onClickLink: function (ev) {\n        let $elem = $(ev.target),\n            $message = $elem.closest('.chat-message'),\n            msg = this.model.messages.get($message.data('uniqueid'));\n        if (!msg) {\n            msg = this.account.participant_messages.get($message.data('uniqueid'));\n        }\n        let files = msg.get('files'),\n            videos = msg.get('videos'),\n            images = msg.get('images'),\n            link_references = msg.get('link_references'),\n            fwd_messages = [],\n            fwd_link_references = [],\n            files_links = '';\n        if (msg.get('forwarded_message')) {\n            msg.get('forwarded_message').forEach((message) => {\n                message.get('images') && fwd_messages.push(message.get('images'));\n                message.get('videos') && fwd_messages.push(message.get('videos'));\n                message.get('link_references') && fwd_link_references.push(message.get('link_references'));\n            });\n        }\n        $(files).each(function(idx, file) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += file.sources[0];\n        });\n        $(images).each(function(idx, image) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += image.sources[0];\n        });\n        $(videos).each(function(idx, image) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += image.sources[0];\n        });\n        $(link_references).each(function(idx, link_reference) {\n            if (files_links != \"\")\n                files_links += '\\n';\n            files_links += link_reference.url;\n        });\n        $(fwd_messages).each(function (idx, message) {\n            $(message).each(function (i, file) {\n                if (files_links != \"\")\n                    files_links += '\\n';\n                files_links += file.sources[0];\n            });\n        });\n        $(fwd_link_references).each(function (idx, message) {\n            $(message).each(function (i, link_reference) {\n                if (files_links != \"\")\n                    files_links += '\\n';\n                files_links += link_reference.url;\n            });\n        });\n        utils.copyTextToClipboard(files_links, xabber.getString(\"toast_link_copied\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n    },\n\n\n    onClickLocationLink: function (ev) {\n        ev.preventDefault()\n        let $elem = $(ev.target),\n            $message = $elem.closest('.chat-message'),\n            msg = this.model.messages.get($message.data('uniqueid'));\n        if (!msg) {\n            msg = this.account.participant_messages.get($message.data('uniqueid'));\n        }\n        let locations = msg.get('locations'),\n            fwd_messages = [],\n            location_links = '';\n        if (msg.get('forwarded_message')) {\n            msg.get('forwarded_message').forEach((message) => {\n                message.get('locations') && fwd_messages.push(message.get('locations'));\n            });\n        }\n        $(locations).each(function(idx, location) {\n            location_links += 'geo:' + location.lat + ',' + location.lon;\n        });\n        $(fwd_messages).each(function (idx, message) {\n            $(message).each(function (i, object) {\n                if (location_links != \"\")\n                    location_links += '\\n';\n                location_links += 'geo:' + object.lat + ',' + object.lon;\n            });\n        });\n\n        utils.copyTextToClipboard(location_links, xabber.getString(\"toast_location_copied\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n    },\n\n    showParticipantProperties: function (participant_id, options) {\n        options = options || {};\n        let participant = this.contact.participants.get(participant_id);\n        if (!participant) {\n            this.contact.getBlockedParticipants((response) => {\n                _.extend(options, {present: null, subscription: null});\n                if ($(response).find(`query user:contains(${participant_id})`).length)\n                    options.blocked = true;\n                else\n                    options.blocked = false;\n                participant = new xabber.Participant(options, {contact: this.contact});\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(participant, {});\n            }, (err) => {\n                _.extend(options, {present: null, subscription: null});\n                participant = new xabber.Participant(options, {contact: this.contact});\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(participant, {});\n            });\n            return;\n        }\n        (this.contact.my_info && this.contact.my_info.get('id') === participant_id) && (participant_id = '');\n        this.contact.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.contact.showDetailsRight('all-chats', {type: 'participant'});\n            this.contact.details_view_right.participants.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    onClickMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('file-link-download')) {\n            ev.preventDefault();\n            let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')) || this.account.context_messages.get($elem.closest('.chat-message').data('uniqueid')),\n                uri = $elem.attr('href'),\n                file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n            if (file && file.key) {\n                this.model.messages.decryptFile(uri,file.key).then((result) => {\n                    if (result === null)\n                        return;\n                    let download = document.createElement(\"a\");\n                    download.href = result;\n                    download.download = file.name;\n                    download.click();\n                });\n                return;\n            } else\n                xabber.openWindow($elem.attr('href'));\n        }\n        if ($elem.hasClass('msg-delivering-state') || $elem.hasClass('not-decrypted-icon') || $elem.hasClass('not-decrypted-tooltip') || $elem.hasClass('audio-control-panel') || $elem.hasClass('voice-msg-current-time') || $elem.hasClass('voice-msg-total-time')) {\n            return;\n        }\n        if ($elem.closest(\".plyr-video-container\").length > 0) {\n            let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                $plyr = $elem.closest(\".plyr-video-container\");\n            !msg && (msg = this.account.context_messages.get($elem.closest('.chat-message').data('uniqueid')));\n            if (msg && msg.get('msg_player_videos')){\n                if (!xabber.plyr_player_popup){\n                    xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                    xabber.plyr_player_popup.show({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n                } else\n                    xabber.plyr_player_popup.showNewVideo({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n            }\n            return;\n        }\n        if (!$elem.hasClass('mdi-link-variant') && !$elem.hasClass('msg-copy-location-content') && !$elem.hasClass('btn-retry-send-message') && !$elem.hasClass('btn-delete-message') && !$elem.hasClass('file-link-download') && !$elem.is('canvas') && !$elem.hasClass('voice-message-volume')) {\n            let $msg = $elem.closest('.chat-message'), msg,\n                $fwd_message = $elem.parents('.fwd-message').first(),\n                is_forwarded = $fwd_message.length > 0,\n                no_select_message = $msg.attr('data-no-select-on-mouseup');\n            $msg.attr('data-no-select-on-mouseup', '');\n\n            if ($elem.hasClass('data-form-field')) {\n                msg = this.model.messages.get($msg.data('uniqueid'));\n                if (msg)\n                    this.model.sendDataForm(msg, $elem.attr('id'));\n                return;\n            }\n\n            if (window.getSelection() != 0) {\n                return;\n            }\n\n            if ($elem.hasClass('collapsed-forwarded-message')) {\n                let msg = this.buildMessageHtml(this.account.forwarded_messages.get($elem.data('uniqueid'))),\n                    expanded_fwd_message = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this});\n                expanded_fwd_message.$el.attr('data-color', this.account.settings.get('color'));\n                this.updateMessageInChat(msg, this.account.forwarded_messages.get($elem.data('uniqueid')));\n                this.initPopup(msg);\n                expanded_fwd_message.open(msg);\n                return;\n            }\n\n            if ($elem.hasClass('chat-msg-author') || $elem.hasClass('fwd-msg-author')) {\n                let from_jid = is_forwarded ? $fwd_message.data('from') : $msg.data('from'),\n                    from_id = is_forwarded ? $fwd_message.data('fromId') : $msg.data('fromId');\n                if (this.contact && this.contact.get('group_chat')) {\n                    this.bottom.quill.focus();\n                    let caret_position = this.bottom.quill.getSelection(),\n                        participant_attrs = {jid: from_jid, id: from_id, nickname: $elem.text()};\n                    caret_position && (caret_position = caret_position.index);\n                    participant_attrs.position = caret_position || 0;\n                    this.bottom.insertMention(participant_attrs);\n                }\n                else if (from_jid === this.account.get('jid')) {\n                    this.account.showSettings();\n                } else if (from_jid === this.model.get('jid')) {\n                    this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                } else {\n                    if (from_jid == from_id)\n                        return;\n                    let contact = this.account.contacts.mergeContact(from_jid);\n                    contact && contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                }\n                return;\n            }\n\n            if ($elem.hasClass('circle-avatar')) {\n                let from_jid = is_forwarded ? $fwd_message.data('from') : $msg.data('from');\n                if (this.model.get('group_chat')) {\n                    let member_id = (is_forwarded) ? $fwd_message.attr('data-from-id') : $msg.attr('data-from-id'),\n                        unique_id = (is_forwarded) ? $fwd_message.attr('data-uniqueid') : $msg.attr('data-uniqueid'),\n                        msg = this.model.messages.get(unique_id) || this.account.context_messages.get(unique_id) || this.account.searched_messages.get(unique_id),\n                        user_info = msg && msg.get('user_info');\n                    member_id && this.showParticipantProperties(member_id, user_info);\n                    return;\n                }\n                else if (from_jid === this.account.get('jid')) {\n                    this.account.showSettings();\n                } else if (from_jid === this.model.get('jid')) {\n                    this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                } else {\n                    let contact = this.account.contacts.mergeContact(from_jid);\n                    contact && contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                }\n                return;\n            }\n\n            if ($elem.hasClass('mention')) {\n                let member_id = $elem.data('target');\n                if (this.contact.get('group_chat')) {\n                    if (member_id && !this.contact.participants.get(member_id)) {\n                        let participant = this.contact.participants.find(p => p.get('jid') === member_id);\n                        participant && (member_id = participant.get('id'));\n                    }\n                    member_id && this.showParticipantProperties(member_id);\n                }\n                else {\n                    if (member_id === this.account.get('jid'))\n                        this.account.showSettings();\n                    else if (member_id === this.model.get('jid')) {\n                        this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                    } else {\n                        let contact = this.account.contacts.mergeContact(member_id);\n                        contact && contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                    }\n                }\n                return;\n            }\n\n            if ($elem.hasClass('voice-message-play') || $elem.hasClass('no-uploaded')) {\n                let $audio_elem = $elem.closest('.link-file'),\n                    f_url = $audio_elem.find('.file-link-download').attr('href');\n                $audio_elem.find('.mdi-play').removeClass('no-uploaded');\n                if ($elem.closest('.chat-message').hasClass('encrypted')) {\n                    let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                        uri = $elem.closest('.link-file').find('.file-link-download').attr('href'),\n                        file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n                    if (file && file.key) {\n                        this.model.messages.decryptFile(f_url, file.key).then((result) => {\n                            if (result === null)\n                                return;\n                            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.file-container')[0], result);\n                        });\n                    }\n                } else {\n                    $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.file-container')[0], f_url);\n                }\n                return;\n            }\n\n            if ($elem.hasClass('mdi-play') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n                let $audio_elem = $elem.closest('.link-file');\n                $audio_elem[0].voice_message.play();\n                return;\n            }\n\n            if ($elem.hasClass('mdi-pause') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n                let $audio_elem = $elem.closest('.link-file');\n                $audio_elem[0].voice_message.pause();\n                return;\n            }\n\n            if ($elem.hasClass('msg-hyperlink')) {\n                ev && ev.preventDefault();\n                $elem.blur();\n                let link = $elem.attr('href');\n                utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                    if (result)\n                        utils.openWindow(link);\n                });\n                return;\n            }\n\n            if ($elem.closest(\".msg-hyperlink\").length > 0) {\n                ev && ev.preventDefault();\n                $elem.blur();\n                let link = $elem.closest(\".msg-hyperlink\").attr('href');\n                utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                    if (result)\n                        utils.openWindow(link);\n                });\n                return;\n            }\n\n            if ($elem.hasClass('uploaded-img')||$elem.hasClass('img-content')||($elem.hasClass('uploaded-img-for-collage'))) {\n                $elem.hasClass('img-content') && $elem.children('img').click();\n                return;\n            }\n\n            if ($elem.hasClass('unloaded-img')) {\n                let img_information = this.getImagesInformation(this.model.messages.get($elem.closest('.chat-message').data('uniqueid')));\n                utils.dialogs.ask(xabber.getString(\"privacy_risk\"), xabber.getString(\"privacy_risk_text\"), {inverted_buttons: true, img_details: $(templates.messages.images_details({img_information: img_information}))}, { ok_button_text: xabber.getString(\"privacy_risk_btn_ok\")}).done((result) => {\n                    if (result) {\n                        $elem.attr('src',$elem.attr('data-mfp-src'));\n                        $elem.removeClass('unloaded-img');\n                        $elem.addClass('uploaded-img');\n                        this.initPopup($elem.closest('.chat-message'));\n                        $elem.closest('.chat-message').find('.img-privacy-warning').remove()\n                    }\n                });\n                return;\n            }\n\n            if ($elem.hasClass('img-content-template') && $elem.find('img').hasClass('unloaded-img')) {\n                let img_information = this.getImagesInformation(this.model.messages.get($elem.closest('.chat-message').data('uniqueid')));\n                utils.dialogs.ask(xabber.getString(\"privacy_risk\"), xabber.getString(\"privacy_risk_text\"), {inverted_buttons: true, img_details: $(templates.messages.images_details({img_information: img_information}))}, { ok_button_text: xabber.getString(\"privacy_risk_btn_ok\")}).done((result) => {\n                    if (result) {\n                        let $msg = $elem.closest('.chat-message'),\n                            $imgs = $msg.find('.img-content-template img');\n                        $imgs.each((idx, img) => {\n                            $(img).attr('src',$(img).attr('data-mfp-src'));\n                        });\n                        $imgs.removeClass('unloaded-img');\n                        $imgs.addClass('uploaded-img-for-collage');\n                        this.initPopup($msg);\n                        $elem.closest('.chat-message').find('.img-privacy-warning').remove()\n                    }\n                });\n                return;\n            }\n\n            if ($elem.hasClass('chat-msg-location-content') || $elem.hasClass('location-link') || $elem.closest(\".video-file-wrap\").length > 0 || $elem.closest(\".embed-video\").length > 0) {\n                return;\n            }\n\n            if ($elem.hasClass('last-image')) {\n                $elem.find('img').length && $elem.find('img')[0].click();\n                return;\n            }\n\n            if ($elem.hasClass('image-counter')) {\n                $elem.closest('.last-image').find('img')[0].click();\n                return;\n            }\n\n            if ($msg.hasClass('searched-message')) {\n                this.model.getMessageContext($msg.data('uniqueid'), {searched_messages: true});\n                return;\n            }\n\n            let processClick = () => {\n                let $prev_selected = $msg.hasClass('selected') ? $msg.prevAll('.chat-message.selected').last() : $msg.prevAll('.chat-message.selected').first();\n                !$prev_selected.length && ($prev_selected = $msg.hasClass('selected') ? $msg.nextAll('.chat-message.selected').last() : $msg.nextAll('.chat-message.selected').first());\n                !$prev_selected.length && ($prev_selected = $msg.hasClass('selected') ? $msg.prevAll('.chat-message.selected').first() : $msg.prevAll('.chat-message.selected').last());\n                if ((xabber.shiftctrl_pressed || xabber.shift_pressed) && $prev_selected.length) {\n                    let $all_msgs = [], is_selected = $msg.hasClass('selected');\n                    if ($prev_selected.attr('data-time') < $msg.attr('data-time'))\n                        $all_msgs = $prev_selected.nextUntil($msg, '.chat-message:not(.system)');\n                    else\n                        $all_msgs = $msg.nextUntil($prev_selected, '.chat-message:not(.system)');\n                    xabber.shift_pressed && this.$('.chat-message').removeClass('selected');\n                    $prev_selected.switchClass('selected', !is_selected);\n                    $all_msgs.switchClass('selected', !is_selected);\n                    $msg.switchClass('selected', !is_selected);\n                    ev.preventDefault();\n                    this.bottom.manageSelectedMessages();\n                    return false;\n                }\n                if (!no_select_message) {\n                    $msg.switchClass('selected', !$msg.hasClass('selected'));\n                    ev.preventDefault();\n                    this.bottom.manageSelectedMessages();\n                    return false;\n                }\n            };\n\n            if ($msg.hasClass('participant-message') || $msg.hasClass('context-message')) {\n                if ($msg.hasClass('system'))\n                    return;\n                processClick();\n                return;\n            }\n\n            msg = this.model.messages.get($msg.data('uniqueid'));\n            if (!msg) {\n                return;\n            }\n\n            let type = msg.get('type');\n            if (type === 'file_upload') {\n                return;\n            }\n\n            if (type === 'system') {\n                return;\n            } else if (is_forwarded) {\n                let fwd_message = this.account.forwarded_messages.get($fwd_message.data('uniqueid'));\n                if (!fwd_message) {\n                    return;\n                }\n                processClick();\n            } else {\n                processClick();\n            }\n        }\n    },\n\n    onClickLocation: function (ev) {\n        ev.preventDefault();\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat'),\n            location_name = $(ev.target).attr('title');\n        if (lon && lat){\n            xabber.popup_coordinates = [lon, lat];\n            xabber.location_name = location_name;\n            new xabber.ChatLocationView({content: this}).show(ev);\n        }\n    },\n\n    onHoverLocation: function (ev) {\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat');\n\n        fetch('https://nominatim.openstreetmap.org/reverse?format=json&lon=' + lon + '&lat=' + lat).then(function(response) {\n            return response.json();\n        }).then(function(json) {\n            if (!json.error) {\n                $(ev.target).attr('title', json.display_name);\n            }\n            else {\n                $(ev.target).attr('title', xabber.getString(\"location_fragment__address_error__title\"));\n            }\n            $(ev.target).removeClass('no-title')\n        })\n    },\n\n    retrySendMessage: function (ev) {\n        let $msg = $(ev.target).closest('.chat-message'),\n            msg = this.model.messages.get($msg.data('uniqueid'));\n        if (msg.get('type') === 'file_upload') {\n            msg.set('state', constants.MSG_PENDING);\n            this.startUploadFile(msg, $msg);\n        }\n        else\n            this.sendMessage(msg);\n        ev.preventDefault();\n    },\n\n    removeFileErrorMessage: function (ev) {\n        let $msg = $(ev.target).closest('.chat-message');\n        this.removeMessage($msg);\n        ev.preventDefault();\n        this.chat_item.updateChatError();\n    },\n\n    onUpdatePlyr: function (ev) {\n        this.$('.plyr-video-container').removeClass('active-plyr-container');\n        if (xabber.current_plyr_player && xabber.current_plyr_player.player_item) {\n            let $message = this.$(`.chat-message[data-uniqueid=\"${xabber.current_plyr_player.message_unique_id}\"]`);\n            if ($message.length) {\n                $message.find(`.plyr-video-container[data-message-id=\"${xabber.current_plyr_player.player_item.message_id}\"]`).addClass('active-plyr-container');\n            }\n        }\n    },\n});\n\n\nxabber.ChatContentPlaceholderView = xabber.BasicView.extend({\n    className: 'chat-body-content-placeholder-wrap',\n    template: templates.chat_content_placeholder,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        return this;\n    },\n\n    render: function () {\n    },\n});\n\nxabber.ExpandedMessagePanel = xabber.BasicView.extend({\n    className: 'modal expanded-message',\n    template: templates.group_chats.pinned_message_panel,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .collapsed-forwarded-message\": \"expandFwdMessage\",\n        \"click .chat-message\": \"onClickPinnedMessage\",\n        'click .chat-msg-location-content': 'onClickExpandedMessageLocation',\n        'click .mdi-link-variant' : 'onClickLink',\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.chat_content = options.chat_content;\n        this.message = options.message;\n    },\n\n    open: function ($message) {\n        this.$el.css('width', $message.find('.chat-text-content').text().length <= 60 ? 540 : xabber.main_panel.$el.width() * 0.715);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.modal-content').css('height', this.$el.height() - 12);\n                if ($message.find('.plyr-video-container').length) {\n                    this.chat_content.initPlyrEmbedPlayer($message, this.message);\n                }\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n        $message.find('.right-side .msg-delivering-state').remove();\n        this.$('.modal-content').html($message);\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    onClickLink:function (ev) {\n        this.chat_content.onClickLink(ev);\n    },\n\n    onClickPinnedMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('msg-hyperlink')) {\n            ev && ev.preventDefault();\n            let link = $elem.attr('href');\n            utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                if (result)\n                    utils.openWindow(link);\n            });\n            return;\n        }\n        if ($elem.closest(\".plyr-video-container\").length > 0) {\n            let msg = this.chat_content.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                $plyr = $elem.closest(\".plyr-video-container\");\n            !msg && (msg = this.account.forwarded_messages.get($elem.closest('.chat-message').data('uniqueid')));\n            if (msg && msg.get('msg_player_videos')){\n                if (!xabber.plyr_player_popup){\n                    xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                    xabber.plyr_player_popup.show({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n                } else\n                    xabber.plyr_player_popup.showNewVideo({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n            }\n            return;\n        }\n        if ($elem.hasClass('voice-message-play') || $elem.hasClass('no-uploaded')) {\n            let $audio_elem = $elem.closest('.link-file'),\n                f_url = $audio_elem.find('.file-link-download').attr('href');\n            $audio_elem.find('.mdi-play').removeClass('no-uploaded');\n            if ($elem.closest('.chat-message').hasClass('encrypted')) {\n                let msg = this.chat_content.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                    uri = $elem.closest('.link-file').find('.file-link-download').attr('href'),\n                    file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n                if (file && file.key) {\n                    this.chat_content.model.messages.decryptFile(f_url, file.key).then((result) => {\n                        if (result === null)\n                            return;\n                        $audio_elem[0].voice_message = this.chat_content.renderVoiceMessage($audio_elem.find('.file-container')[0], result);\n                    });\n                }\n            } else {\n                $audio_elem[0].voice_message = this.chat_content.renderVoiceMessage($audio_elem.find('.file-container')[0], f_url);\n            }\n            return;\n        }\n        if ($elem.hasClass('mdi-play') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n            let $audio_elem = $elem.closest('.link-file');\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n    },\n    onClickExpandedMessageLocation: function (ev) {\n        ev.preventDefault();\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat'),\n            location_name = $(ev.target).attr('title');\n        if (lon && lat){\n            xabber.popup_coordinates = [lon, lat];\n            xabber.location_name = location_name;\n            new xabber.ChatLocationView({content: this}).show(ev);\n        }\n    },\n\n    expandFwdMessage: function (ev) {\n        let $target = $(ev.target),\n            unique_id = $target.data('uniqueid'),\n            msg = this.chat_content.buildMessageHtml(this.account.forwarded_messages.get(unique_id)),\n            expanded_fwd_message = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this.chat_content});\n        expanded_fwd_message.$el.attr('data-color', this.account.settings.get('color'));\n        this.chat_content.updateMessageInChat(msg, this.account.forwarded_messages.get(unique_id));\n        this.chat_content.initPopup(msg);\n        expanded_fwd_message.open(msg);\n    }\n});\n\nxabber.ChatsBase = Backbone.Collection.extend({\n    model: xabber.Chat\n});\n\nxabber.Chats = xabber.ChatsBase.extend({\n    initialize: function (models, options) {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    },\n\n    registerQuillEmbeddedsTags: function () {\n        let Inline = Quill.import('blots/inline'),\n            Image = Quill.import('formats/image');\n\n        class Mention extends Inline {\n            static create(paramValue) {\n                let node = super.create(), data, target;\n                if (paramValue.on_format){\n                    data = paramValue.data;\n                    target = paramValue.target;\n                } else {\n                    data = JSON.parse(paramValue);\n                    target = data.jid ? ('?jid=' + data.jid) : (data.id ?  ('?id=' + data.id) : \"\");\n                    node.innerHTML = data.nickname;\n                }\n                data.is_me && node.classList.add('ground-color-100');\n                node.setAttribute('data-target', target);\n                return node;\n            }\n\n            static value(node) {\n                return node.innerHTML;\n            }\n\n            static formats(node) {\n                return {\n                    on_format: true,\n                    data: {\n                        nickname: node.innerHTML,\n                        is_me: node.classList.contains(\"ground-color-100\")\n                    },\n                    target: node.getAttribute('data-target')\n                };\n            }\n        }\n        Mention.blotName = 'mention';\n        Mention.tagName = 'mention';\n        Mention.prototype.optimize = function () {};\n\n        class QuillEmoji extends Image {\n            static create(value) {\n                if (typeof value == 'string') {\n                    let emoji = $(value.emojify({tag_name: 'img'}))[0];\n                    emoji.style.display = 'none';\n                    emoji.onload = function () {\n                        this.style.display = 'unset';\n                    };\n                    return emoji;\n                } else {\n                    return value;\n                }\n            }\n\n            static value(domNode) {\n                return domNode;\n            }\n        }\n        QuillEmoji.blotName = 'emoji';\n        QuillEmoji.className = 'emoji';\n        QuillEmoji.tagName = 'img';\n        QuillEmoji.prototype.optimize = function () {};\n\n        Quill.register(QuillEmoji);\n        Quill.register(Mention);\n    }\n});\n\nxabber.OpenedChats = xabber.ChatsBase.extend({\n    comparator: function (item1, item2) {\n        let t1 = item1.get('timestamp'),\n            t2 = item2.get('timestamp');\n        return t1 > t2 ? -1 : (t1 < t2 ? 1 : 0);\n    },\n\n    initialize: function (models, options) {\n        this.on(\"change:timestamp\", this.sort, this);\n    },\n\n    update: function (chat, event) {\n        let contains = chat.get('opened');\n        if (contains) {\n            if (!this.get(chat)) {\n                this.add(chat);\n                chat.trigger(\"add_opened_chat\", chat);\n            }\n        } else if (this.get(chat)) {\n            this.remove(chat);\n            chat.trigger(\"remove_opened_chat\", chat);\n        }\n    }\n});\n\nxabber.ClosedChats = xabber.ChatsBase.extend({\n    update: function (chat, event) {\n        let contains = !chat.get('opened');\n        if (contains) {\n            if (!this.get(chat)) {\n                this.add(chat);\n                chat.trigger(\"add_closed_chat\", chat);\n            }\n        } else if (this.get(chat)) {\n            this.remove(chat);\n            chat.trigger(\"remove_closed_chat\", chat);\n        }\n    }\n});\n\nxabber.AccountChats = xabber.ChatsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.mam_requests = 0;\n        this.deferred_mam_requests = [];\n        this.account.contacts.on(\"open_chat\", this.openChat, this);\n        this.account.contacts.on(\"open_mention\", this.openMention, this);\n        this.account.contacts.on(\"presence\", this.onPresence, this);\n        this.account.contacts.on(\"roster_push\", this.onRosterPush, this);\n    },\n\n    getSavedChat: function () {\n      let jid = this.account.get('jid'),\n          attrs = {jid: jid, type: 'saved', name: xabber.getString(\"saved_messages__header\"), id: `${jid}:saved`},\n          chat = this.get(attrs.id);\n        if (!chat) {\n            chat = xabber.chats.create(attrs, {account: this.account});\n            this.add(chat);\n            chat.trigger(\"load_last_history\");\n        }\n        return chat;\n    },\n\n    getChat: function (contact, identifier, sync_created) {\n        let attrs = null,\n            id = identifier && `${contact.hash_id}:${identifier}`,\n            chat = id ? this.get(id) : this.get(contact.hash_id);\n        if (id)\n            attrs = {id};\n        if (identifier === 'encrypted')\n            attrs.type = identifier;\n        if (!chat) {\n            chat = xabber.chats.create(attrs, {contact: contact, sync_created: sync_created});\n            this.add(chat);\n            contact.set('known', true);\n        }\n        return chat;\n    },\n\n    openChat: function (contact, options) {\n        options = options || {};\n        _.isUndefined(options.clear_search) && (options.clear_search = true);\n        let chat = this.getChat(contact, options.encrypted && 'encrypted');\n        if (options && options.force_opened_state){\n            chat.set('opened', true);\n            chat.set('timestamp', Date.now());\n        }\n        chat.trigger('open', {clear_search: options.clear_search, right_force_close: options.right_force_close});\n    },\n\n    openMention: function (contact, unique_id) {\n        let chat = this.getChat(contact);\n        xabber.body.setScreen('mentions', {right: 'mentions', chat_item: chat.item_view});\n        unique_id && chat.getMessageContext(unique_id, {mention: true});\n    },\n\n    registerMessageHandler: function () {\n        this.account.connection.deleteHandler(this._msg_handler);\n        this._msg_handler = this.account.connection.addHandler((message) => {\n            this.receiveMessage(message);\n            return true;\n        }, null, 'message');\n    },\n\n    onStartedMAMRequest : function (deferred) {\n        this.deferred_mam_requests.push(deferred);\n        this.runMAMRequests();\n    },\n\n    onCompletedMAMRequest: function (deferred) {\n        this.mam_requests--;\n        this.runMAMRequests();\n    },\n\n    runMAMRequests: function () {\n        while (this.mam_requests < xabber.settings.mam_requests_limit) {\n            let deferred = this.deferred_mam_requests.shift();\n            if (!deferred) break;\n            this.mam_requests++;\n            deferred.resolve();\n        }\n    },\n\n    parsePubSubNode: function (node) {\n        if (!node)\n            return null;\n        let is_member_id = node.indexOf('#');\n        if (is_member_id !== -1)\n            return node.slice(is_member_id + 1, node.length);\n        else\n            return null;\n    },\n\n    receivePubsubMessage: function ($message) {\n        let photo_id =  $message.find('info').attr('id'),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            node = $message.find('items').attr('node');\n        if (node.indexOf(Strophe.NS.OMEMO) > -1)\n            return;\n        if (node.indexOf(Strophe.NS.PUBSUB_AVATAR_METADATA) > -1) {\n            let member_id = this.parsePubSubNode(node),\n                photo_url =  $message.find('info').attr('url'),\n                contact = this.account.contacts.get(from_jid);\n            if (contact) {\n                if (member_id) {\n                    if (contact.my_info) {\n                        if ((member_id == contact.my_info.get('id')) && (photo_id == contact.my_info.get('avatar'))) {\n                            contact.trigger('update_my_info');\n                            return;\n                        }\n                    }\n                    if (photo_id && (this.account.chat_settings.getHashAvatar(member_id) != photo_id)) {\n                        let member_node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + member_id;\n                        contact.getAvatar(photo_id, member_node, (new_avatar) => {\n                                this.account.chat_settings.updateCachedAvatars(member_id, photo_id, new_avatar);\n                                if (contact.my_info) {\n                                    if (member_id == contact.my_info.id) {\n                                        contact.my_info.set({avatar: photo_id, b64_avatar: new_avatar});\n                                        contact.trigger('update_my_info');\n                                    }\n                                }\n                                let participant = contact.participants && contact.participants.get(member_id);\n                                if (participant) {\n                                    participant.set({avatar: photo_id, b64_avatar: new_avatar});\n                                    this.account.groupchat_settings.updateParticipant(contact.get('jid'), participant.attributes);\n                                }\n                            }, () => {\n                                if (photo_url) {\n                                    this.account.chat_settings.updateCachedAvatars(member_id, photo_id, photo_url);\n                                    if (contact.my_info) {\n                                        if (member_id == contact.my_info.id) {\n                                            contact.my_info.set({avatar: photo_id, b64_avatar: photo_url});\n                                            contact.trigger('update_my_info');\n                                        }\n                                    }\n                                    let participant = contact.participants && contact.participants.get(member_id);\n                                    if (participant) {\n                                        participant.set({avatar: photo_id, b64_avatar: photo_url});\n                                        this.account.groupchat_settings.updateParticipant(contact.get('jid'), participant.attributes);\n                                    }\n                                    return;\n                                }\n                            });\n                    }\n                }\n                else if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.PUBSUB_AVATAR) {\n                    if (!photo_id) {\n                        let image = Images.getDefaultAvatar(contact.get('name'));\n                        contact.cached_image = Images.getCachedImage(image);\n                        contact.set('avatar_priority', constants.AVATAR_PRIORITIES.PUBSUB_AVATAR);\n                        contact.set('photo_hash', null);\n                        contact.set('image', image);\n                        contact.updateCachedInfo();\n                        return;\n                    }\n                    if ((photo_id !== \"\") && (contact.get('photo_hash') === photo_id)) {\n                        return;\n                    } else if (photo_url) {\n                        contact.cached_image = photo_url;\n                        contact.set({photo_hash: photo_id, image: photo_url, avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR});\n                    }\n                    contact.getAvatar(photo_id, Strophe.NS.PUBSUB_AVATAR_DATA, (data_avatar) => {\n                        contact.cached_image = Images.getCachedImage(data_avatar);\n                        contact.set('avatar_priority', constants.AVATAR_PRIORITIES.PUBSUB_AVATAR);\n                        contact.set('photo_hash', photo_id);\n                        contact.set('image', data_avatar);\n                        contact.updateCachedInfo();\n                    });\n                }\n            }\n            else if (from_jid === this.account.get('jid')) {\n                if (photo_url) {\n                    let avatar_attrs = {photo_hash: photo_id, image: photo_url, avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR};\n                    this.account.cached_image = photo_url;\n                    this.account.save(avatar_attrs);\n                    return;\n                }\n                if (!photo_id) {\n                    let image = Images.getDefaultAvatar(this.account.get('name'));\n                    this.account.cached_image = Images.getCachedImage(image);\n                    let avatar_attrs = {avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR, image: image};\n                    this.account.save(avatar_attrs);\n                    return;\n                }\n                this.account.getAvatar(photo_id, (data_avatar) => {\n                    this.account.cached_image = Images.getCachedImage(data_avatar);\n                    let avatar_attrs = {avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR, image: data_avatar};\n                    this.account.save(avatar_attrs);\n                });\n            }\n        }\n    },\n\n    receiveMessage: function (message) {\n        let $message = $(message),\n            type = $message.attr('type'),\n            $mam = $message.find(`result[xmlns=\"${Strophe.NS.MAM}\"]`);\n        if (this.account.connection.do_synchronization && Strophe.getBareJidFromJid($(message).attr('from')) !== this.account.get('jid')) {\n            let time = $message.children('time').attr('stamp') || $message.children('delay').attr('stamp'),\n                timestamp = Number(moment(time));\n            (timestamp > this.account.last_msg_timestamp) && (this.account.last_msg_timestamp = timestamp);\n        }\n        if (type === 'headline') {\n            return this.receiveHeadlineMessage(message);\n        }\n        if (type === 'chat' || (type === 'normal') || (!type && !$mam.length)) {\n            return this.receiveChatMessage(message);\n        }\n        if (type === 'error') {\n            return this.receiveErrorMessage(message);\n        }\n    },\n\n    receiveHeadlineMessage: function (message) {\n        let $message = $(message),\n            msg_from = Strophe.getBareJidFromJid($message.attr('from')),\n            $stanza_received = $message.find(`received[xmlns=\"${Strophe.NS.DELIVERY}\"]`),\n            $echo_msg = $message.children(`x[xmlns=\"${Strophe.NS.DELIVERY}\"]`).children('message');\n        if ($stanza_received.length) {\n            let stanza_id = $stanza_received.children('stanza-id').attr('id'),\n                origin_msg_id = $stanza_received.children('origin-id').first().attr('id');\n            if (origin_msg_id) {\n                let msg = this.account.messages.get(origin_msg_id || stanza_id),\n                    delivered_time = $stanza_received.children('time').attr('stamp') || moment(stanza_id/1000).format();\n                if (!msg)\n                    return;\n                let pending_message = this.account._pending_messages.find(msg => msg.unique_id == (origin_msg_id || stanza_id));\n                if (!pending_message)\n                    return;\n                let chat = this.account.chats.get(pending_message.chat_hash_id);\n                if (chat && chat.get('group_chat'))\n                    return;\n                if (!msg.get('stanza_id') && msg.get('locations'))\n                    msg.set({'stanza_id': stanza_id})\n                msg.set({'state': constants.MSG_SENT, 'time': delivered_time, 'timestamp': Number(moment(delivered_time))}); // delivery receipt, changing on server time\n                chat.setStanzaId(pending_message.unique_id, stanza_id);\n                this.account._pending_messages.splice(this.account._pending_messages.indexOf(pending_message), 1);\n            }\n            return;\n        }\n\n        if ($echo_msg.length) {\n            console.log(this.account._pending_messages);\n            console.log(this.account._pending_messages.length);\n            let origin_msg_id = $echo_msg.children('origin-id').first().attr('id'),\n                pending_message = this.account._pending_messages.find(msg => msg.unique_id == origin_msg_id);\n            if (pending_message) {\n                this.account._pending_messages.splice(this.account._pending_messages.indexOf(pending_message), 1);\n            }\n            console.log(this.account._pending_messages.length);\n            return this.receiveChatMessage($echo_msg[0], {echo_msg: true, stanza_id: $echo_msg.children('stanza-id').attr('id')});\n        }\n\n        let $token_revoke = $message.children(`revoke[xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`);\n        if ($token_revoke.length) {\n            $token_revoke.children('device').each((idx, token) => {\n                let $token = $(token),\n                    token_uid = $token.attr('id');\n                if (!token_uid)\n                    return;\n                if (this.account.get('x_token') && this.account.get('x_token').token_uid === token_uid) {\n                    this.account.deleteAccount();\n                    return;\n                }\n                if (this.account.x_tokens_list) {\n                    let token = this.account.x_tokens_list.find(token => token.token_uid == token_uid),\n                        token_idx = token ? this.account.x_tokens_list.indexOf(token) : -1;\n                    (token_idx > -1) && this.account.x_tokens_list.splice(token_idx, 1);\n                }\n            });\n            this.account.settings_right && this.account.settings_right.updateXTokens();\n            return;\n        }\n\n        if ($message.find(`event[xmlns=\"${Strophe.NS.PUBSUB}#event\"]`).length) {\n            this.receivePubsubMessage($message);\n            return;\n        }\n\n        let contact = this.account.contacts.get(msg_from), chat;\n        if (contact) {\n            contact && (chat = this.account.chats.getChat(contact));\n            if (!chat.item_view.content)\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        }\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            if (!contact)\n                return;\n            let participant_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n            if (participant_version && contact.participants && contact.participants.version < participant_version)\n                contact.trigger('update_participants');\n        }\n\n        if ($message.children(`attention[xmlns=\"${Strophe.NS.ATTENTION}\"]`).length && xabber.settings.call_attention) {\n            if (!chat)\n                return;\n            return chat.messages.createSystemMessage({from_jid: msg_from, message: xabber.getString(\"action_attention_requested\"), attention: true});\n        }\n\n        if ($message.find(`replace[xmlns=\"${Strophe.NS.REWRITE}#notify\"]`).length) {\n            !contact && (contact = this.account.contacts.get($message.find('replace').attr('conversation'))) && (chat = this.account.chats.getChat(contact));\n            if ($message.find('replace').attr('conversation') === this.account.get('jid'))\n                chat = this.getSavedChat();\n            if (!chat)\n                return;\n            let stanza_id = $message.find('replace').attr('id'),\n                msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id),\n                active_right_screen = xabber.body.screen.get('right'),\n                participant_messages = active_right_screen === 'participant_messages' && this.account.participant_messages || active_right_screen === 'message_context' && this.account.context_messages || active_right_screen === 'searched_messages' && this.account.searched_messages || [],\n                participant_msg_item = participant_messages.find(msg => msg.get('stanza_id') == stanza_id);\n            this.receiveChatMessage($message, {replaced: true});\n            if (participant_msg_item) {\n                participant_msg_item.set('last_replace_time', $message.find('replaced').last().attr('stamp'));\n            }\n            if (msg_item) {\n                msg_item.set('last_replace_time', $message.find('replaced').last().attr('stamp'));\n                if (contact && contact.get('pinned_message'))\n                    if (contact.get('pinned_message').get('unique_id') === msg_item.get('unique_id')) {\n                        contact.get('pinned_message').set('message', msg_item.get('message'));\n                        if (!chat.item_view.content)\n                            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                        chat.item_view.content.updatePinnedMessage();\n                    }\n                chat && chat.item_view.updateLastMessage(chat.last_message);\n            }\n        }\n        if ($message.find('retract-message').length) {\n            let is_encrypted = $message.find('retract-message').attr('type') == Strophe.NS.OMEMO;\n            !contact && (contact = this.account.contacts.get($message.find('retract-message').attr('conversation'))) && (chat = this.account.chats.getChat(contact,  is_encrypted && 'encrypted'));\n            if ($message.find('retract-message').attr('conversation') === this.account.get('jid'))\n                chat = this.getSavedChat();\n            if (!chat)\n                return;\n            let $retracted_msg = $message.find('retract-message'),\n                retracted_msg_id = $retracted_msg.attr('id'),\n                retract_version = $retracted_msg.attr('version'),\n                msg_item = chat.messages.find(msg => msg.get('stanza_id') == retracted_msg_id || msg.get('contact_stanza_id') == retracted_msg_id);\n            chat.retracted_msg_id_list.push(retracted_msg_id);\n            if (msg_item) {\n                msg_item.set('is_unread', false);\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.removeMessage(msg_item);\n                chat.item_view.updateLastMessage(chat.last_message);\n            }\n            if (!chat.get('group_chat') && retract_version > this.account.retraction_version) {\n                this.account.retraction_version = retract_version;\n            }\n        }\n        if ($message.find('retract-user').length) {\n            let $retracted_user_msgs = $message.find('retract-user'),\n                retracted_user_id = $retracted_user_msgs.attr('id'),\n                msg_item = chat.messages.filter(msg => msg.get('user_info') && (msg.get('user_info').id == retracted_user_id));\n            if (msg_item)\n                $(msg_item).each((idx, item) => {\n                    item.set('is_unread', false);\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.removeMessage(item);\n                });\n            chat.item_view.updateLastMessage(chat.last_message);\n        }\n        if ($message.find('retract-all').length) {\n            !contact && (contact = this.account.contacts.get($message.find('retract-all').attr('conversation'))) && (chat = this.getChat(contact, $message.find('retract-all').attr('type') == 'encrypted' && 'encrypted'));\n            if (!chat)\n                return;\n            let all_messages = chat.messages.models;\n            $(all_messages).each((idx, item) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.removeMessage(item);\n            });\n            chat.item_view.updateLastMessage();\n        }\n        return;\n    },\n\n    receiveStanzaId: function ($message, options) {\n        options.replaced && ($message = $message.children('replace').children('message'));\n        let $stanza_id, $contact_stanza_id, attrs = {},\n            from_bare_jid = options.from_bare_jid;\n            $message.children('stanza-id').each((idx, stanza_id) => {\n            stanza_id = $(stanza_id);\n            if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length && !($message.find(`invite[xmlns=\"${Strophe.NS.GROUP_CHAT_INVITE_HTTP}\"]`).length || $message.find(`invite[xmlns=\"${Strophe.NS.GROUP_CHAT_INVITE}\"]`).length)) {\n                if (stanza_id.attr('by') === from_bare_jid) {\n                    $stanza_id = stanza_id;\n                    $contact_stanza_id = stanza_id;\n                }\n                else\n                    $stanza_id = stanza_id;\n            }\n            else {\n                if (stanza_id.attr('by') === this.account.get('jid'))\n                    $stanza_id = stanza_id;\n                else\n                    $contact_stanza_id = stanza_id;\n            }\n        });\n        $stanza_id && (attrs.stanza_id = $stanza_id.attr('id'));\n        $contact_stanza_id && (attrs.contact_stanza_id = $contact_stanza_id.attr('id'));\n        return attrs;\n    },\n\n    receiveChatMessage: function (message, options) {\n        options = options || {};\n        let $message = $(message),\n            $forwarded = $message.find('forwarded'),\n            $delay = options.delay,\n            to_jid = $message.attr('to'),\n            to_bare_jid = Strophe.getBareJidFromJid(to_jid),\n            to_resource = to_jid && Strophe.getResourceFromJid(to_jid),\n            from_jid = $message.attr('from') || options.from_jid;\n\n        if ($message.children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length && !options.forwarded) {\n            if (this.account.omemo)\n                this.account.omemo.receiveChatMessage(message, options);\n            return;\n        }\n\n        if ($message.find('invite').length) {\n            if (options.forwarded)\n                return;\n        }\n\n        if (!from_jid) {\n            from_jid = this.account.get('jid');\n        }\n        let from_bare_jid = Strophe.getBareJidFromJid(from_jid),\n            is_sender = from_bare_jid === this.account.get('jid');\n\n        if (options.forwarded && (!$forwarded.length || (options.xml))) {\n            return this.account.forwarded_messages.createFromStanza($message, {\n                is_forwarded: true,\n                forwarded_message: options.forwarded_message || null,\n                delay: $delay,\n                replaced: options.replaced,\n                from_jid: from_jid,\n                xml: options.xml\n            });\n        }\n\n        if ($forwarded.length && !options.xml) {\n            let $mam = $message.find(`result[xmlns=\"${Strophe.NS.MAM}\"]`);\n            if ($mam.length) {\n                if (!Object.keys(options).length)\n                    return;\n                $forwarded = $mam.children('forwarded');\n                if ($forwarded.length) {\n                    $message = $forwarded.children('message');\n                    $delay = $forwarded.children('delay');\n                }\n                let stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid});\n                return this.receiveChatMessage($message[0], _.extend(options, {\n                    is_mam: true,\n                    delay: $delay,\n                    stanza_id: stanza_ids.stanza_id || $mam.attr('id'),\n                    contact_stanza_id: stanza_ids.contact_stanza_id\n                }));\n            }\n            let $carbons = $message.find(`[xmlns=\"${Strophe.NS.CARBONS}\"]`);\n            if (!options.carbon_copied && $carbons.length && ['received', 'sent'].includes($carbons[0].tagName)) {\n                if ($message.find('invite').length) {\n                    if ($carbons[0].tagName === 'sent')\n                        return;\n                }\n                if (!is_sender)\n                    return;\n                $forwarded = $carbons.children('forwarded');\n                if ($forwarded.length)\n                    $message = $forwarded.children('message');\n                if ($carbons.find(`request[xmlns=\"${Strophe.NS.DELIVERY}\"][to=\"${to_bare_jid}\"]`).length)\n                    return;\n                if (this.account.fast_connection && ($message.attr('from') === this.account.fast_connection.jid))\n                    return;\n                return this.receiveChatMessage($message[0], _.extend(options, {\n                    carbon_copied: true, carbon_direction: $carbons[0].tagName\n                }));\n            }\n            let forwarded_msgs = [];\n            $forwarded = $message.children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n                $message.children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).children('forwarded[xmlns=\"' + Strophe.NS.FORWARD + '\"]') :\n                $message.children('envelope').children('content').children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).children('forwarded[xmlns=\"' + Strophe.NS.FORWARD + '\"]');\n            $forwarded.each((idx, forwarded_msg) => {\n                let $forwarded_msg = $(forwarded_msg),\n                    $forwarded_message = $forwarded_msg.children('message'),\n                    $forwarded_delay = $forwarded_msg.children('delay');\n                let forwarded_message = this.receiveChatMessage($forwarded_message[0], {\n                    forwarded: true,\n                    pinned_message: options.pinned_message,\n                    participant_message: options.participant_message,\n                    searched_message: options.searched_message,\n                    is_searched: options.is_searched,\n                    context_message: options.context_message,\n                    from_jid: from_jid,\n                    delay: $forwarded_delay\n                });\n                forwarded_msgs.push(forwarded_message);\n            });\n            if (!Object.keys(options).length && !forwarded_msgs.length)\n                return;\n            return this.receiveChatMessage($message[0], _.extend({\n                forwarded_message: forwarded_msgs.length ? forwarded_msgs : null,\n                xml: $message[0]\n            }, options));\n        }\n\n        if (!options.is_mam && to_resource && to_resource !== this.account.resource) {\n            xabber.warn('Message to another resource');\n            xabber.warn(message);\n        }\n\n        let contact_jid = is_sender ? to_bare_jid : from_bare_jid;\n        options.replaced && (contact_jid = $message.children('replace').attr('conversation'));\n\n        if (contact_jid === this.account.get('jid')) {\n            if (options.carbon_copied && options.carbon_direction === 'sent' || !options.carbon_copied) {\n                let chat = this.getSavedChat(),\n                    stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid, carbon_copied: options.carbon_copied, replaced: options.replaced});\n                return chat.receiveMessage($message, _.extend(options, {is_sender: is_sender, stanza_id: stanza_ids.stanza_id, contact_stanza_id: stanza_ids.contact_stanza_id}));\n            } else {\n                xabber.warn('Message from me to me');\n                xabber.warn(message);\n                return;\n            }\n        }\n\n        let contact = this.account.contacts.mergeContact(contact_jid),\n            chat = this.account.chats.getChat(contact, (options.encrypted || options.not_encrypted) && 'encrypted'),\n            stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid, carbon_copied: options.carbon_copied, replaced: options.replaced});\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            if (!contact)\n                return;\n            let participant_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n            if (participant_version && contact.participants && contact.participants.version < participant_version){\n                if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length && chat.contact.get('pinned_message')){\n                    $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '#system-message\"]').each((idx, x_elem) => {\n                        let $user = $(x_elem).children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).first();\n                        if ($user.length) {\n                            let user_id = $user.attr('id'),\n                                user_jid = $user.children('jid').text();\n                            if (chat.contact.get('pinned_message').get('from_jid') === user_jid) {\n                                let pinned_message = chat.contact.get('pinned_message'),\n                                    user_info = {\n                                        id: user_id,\n                                        jid: user_jid,\n                                        nickname: $user.children('nickname').text() || user_jid || user_id,\n                                        role: $user.children('role').text(),\n                                        avatar: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('id'),\n                                        avatar_url: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('url'),\n                                        badge: $user.children('badge').text()\n                                    };\n                                pinned_message.set('user_info', user_info);\n                                chat.contact.set('pinned_message', pinned_message);\n                            }\n                        }\n                    });\n                }\n            }\n        }\n        if (chat.contact.get('group_chat') && options.carbon_direction === 'sent' && !$message.children(`[xmlns=\"${Strophe.NS.CHAT_MARKERS}\"]`).length)\n            return;\n\n        return chat.receiveMessage($message, _.extend(options, {is_sender: is_sender, stanza_id: stanza_ids.stanza_id, contact_stanza_id: stanza_ids.contact_stanza_id}));\n    },\n\n    receiveErrorMessage: function (message) {\n        let msgid = message.getAttribute('id'),\n            origin_id = $(message).children('origin-id').attr('id');\n        if (msgid) {\n            let code = $(message).find('error').attr('code'),\n                msg = this.account.messages.get(origin_id || msgid);\n            if (msg) {\n                if (code === '405') {\n                    msg.set('state', constants.MSG_BLOCKED);\n                }\n                if (code === '406') {\n                    msg.set('state', constants.MSG_ERROR);\n                }\n            }\n        }\n    },\n\n    onPresence: function (contact, type) {\n        let chat = this.getChat(contact);\n        chat.onPresence(type);\n    },\n\n    onRosterPush: function (contact, type) {\n        let chat = this.getChat(contact);\n        chat.onRosterPush(type);\n    }\n});\n\nxabber.AddGroupChatView = xabber.SearchView.extend({\n    className: 'modal main-modal add-group-chat-modal add-contact-modal',\n    template: templates.group_chats.add_group_chat,\n    avatar_size: constants.AVATAR_SIZES.ACCOUNT_ITEM,\n    ps_selector: '.rich-textarea',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .dropdown-content#select-account-for-creating-groupchat\": \"selectAccount\",\n        \"click .btn-add\": \"addGroupChat\",\n        \"keyup .input-group-chat-name input\": \"updateGroupJid\",\n        \"keyup .rich-textarea\": \"showPlaceholder\",\n        \"keyup .input-group-chat-jid input\": \"fixJid\",\n        \"click .btn-cancel\": \"close\",\n        \"click .property-variant\": \"changePropertyValue\"\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        this.setDefaultSettings(options);\n        let accounts = options.account ? [options.account] : xabber.accounts.connected;\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.dropdown-content#select-account-for-creating-groupchat').empty();\n        _.each(accounts, (account) => {\n            this.$('.dropdown-content#select-account-for-creating-groupchat').append(\n                    this.renderAccountItem(account));\n        });\n        this.$('.account-dropdown-wrap').hideIf(accounts.length < 2)\n        this.bindAccount(accounts[0]);\n        this.$('.btn-cancel').text(this.is_login ? xabber.getString(\"skip\") : xabber.getString(\"cancel\"));\n        this.$el.openModal({\n            ready: () => {\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                };\n                Materialize.updateTextFields();\n                this.$('.account-dropdown-wrap').dropdown(dropdown_settings);\n                this.$('.property-field .dropdown-button').dropdown(dropdown_settings);\n                this.$('.property-field .select-xmpp-server .caret').dropdown(dropdown_settings);\n                this.$('.property-field .select-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n                this.$('input[name=\"chat_name\"]').focus();\n            },\n            complete: this.close.bind(this)\n        });\n\n    },\n\n    setDefaultSettings: function (options) {\n        this.$('.incognito-field .public-item-wrap').showIf(options.public);\n        this.$('.incognito-field .incognito-item-wrap').showIf(options.incognito);\n        if (options.public)\n            this.$('.modal-header span').text(xabber.getString(\"create_group\"));\n        if (options.incognito)\n            this.$('.modal-header span').text(xabber.getString(\"create_incognito_group\"));\n        this.$('input[name=chat_jid]').removeClass('fixed-jid').val(\"\");\n        this.$('#new_chat_domain').val(\"\");\n        this.$('input[name=chat_name]').val(\"\");\n        this.$('.description-field .rich-textarea').text(\"\");\n        this.$('.btn-add').addClass('non-active');\n        this.showPlaceholder();\n        this.$('span.errors').text('').addClass('hidden');\n        this.$('input').removeClass('invalid');\n        let $global_wrap = this.$('.global-dropdown-wrap'),\n            default_global_value = $global_wrap.find('.dropdown-content .default-value');\n        $global_wrap.find('.global-item-wrap .property-value').attr('data-value', default_global_value.attr('data-value')).text(default_global_value.text());\n        let $membership_wrap = this.$('.membership-dropdown-wrap'),\n            default_membership_value = $membership_wrap.find('.dropdown-content .default-value');\n        $membership_wrap.find('.membership-item-wrap .property-value').attr('data-value', default_membership_value.attr('data-value')).text(default_membership_value.text());\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.input-group-chat-domain').addClass('hidden');\n        this.$('.account-dropdown-wrap .dropdown-button .account-item-wrap')\n                .replaceWith(this.renderAccountItem(account));\n        let all_servers = this.account.get('groupchat_servers_list');\n        all_servers = all_servers.sort((x,y) => { return x == this.account.domain ? -1 : y == this.account.domain ? 1 : 0; })\n        if (all_servers.length){\n            this.$('.xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n            this.$('.select-xmpp-server .caret').removeClass('hidden')\n            this.$('.xmpp-server-item-wrap .property-value').removeClass('hidden')\n        }\n        else\n            this.setCustomDomain(this.$('.property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.modal-content .jid-field .set-default-domain').remove();\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'}).text(all_servers[i]).insertBefore(this.$('.modal-content .jid-field .set-custom-domain'));\n        }\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.add_chat_account_item({jid: account.get('jid'), name: account.get('name')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    setCustomDomain: function ($property_value) {\n        this.$('#new_chat_domain').val(\"\");\n        this.$('.select-xmpp-server .caret').addClass('hidden');\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.input-group-chat-domain').removeClass('hidden');\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomain($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.input-group-chat-domain').addClass('hidden');\n            this.$('#new_chat_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-xmpp-server .caret').removeClass('hidden')\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateGroupJid: function () {\n        let elem = this.$('input[name=chat_jid]');\n        if (!elem.hasClass('fixed-jid')) {\n            let text = slug(this.$('.input-group-chat-name input').get(0).value, {lower: true});\n            this.$(\"label[for=new_chat_jid]\").addClass('active');\n            this.$('.input-field #new_chat_jid').get(0).value = text;\n        }\n        this.$('.btn-add').switchClass('non-active', !this.$('.input-group-chat-name input').get(0).value);\n    },\n\n    showPlaceholder: function () {\n        let textarea_is_empty = (this.$('.rich-textarea ').text() !== \"\") ? false : true;\n        this.$('.rich-textarea-wrap .placeholder').hideIf(!textarea_is_empty);\n    },\n\n    fixJid: function () {\n        let elem = this.$('input[name=chat_jid]');\n        !elem.hasClass('fixed-jid') && elem.addClass('fixed-jid');\n        (elem.get(0).value == \"\") && elem.removeClass('fixed-jid');\n    },\n\n    createGroupChat: function () {\n        let name = this.$('input[name=chat_name]').val(),\n            chat_jid = this.$('input[name=chat_jid]').val() ? this.$('input[name=chat_jid]').val() : undefined,\n            privacy = this.$('.incognito-field .property-wrap:not(.hidden) .property-value').attr('data-value'),\n            domain = this.$('#new_chat_domain').val() || this.$('.xmpp-server-dropdown-wrap .property-value').text(),\n            searchable = this.$('input[name=\"group_index\"]:checked').attr('data-value'),\n            description = this.$('.description-field .rich-textarea').text() || \"\",\n            model = this.$('input[name=\"group_membership\"]:checked').attr('data-value'),\n            iq = $iq({type: 'set', to: domain}).c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#create'})\n                .c('name').t(name).up()\n                .c('privacy').t(privacy).up()\n                .c('index').t(searchable).up()\n                .c('description').t(description).up()\n                .c('membership').t(model).up();\n            if (chat_jid)\n                iq.c('localpart').t(chat_jid);\n        this.account.sendIQFast(iq, (iq) => {\n            let group_jid = $(iq).find('query localpart').text().trim() + '@' + $(iq).attr('from').trim(),\n                contact = this.account.contacts.mergeContact(group_jid);\n            contact.set('group_chat', true);\n            contact.set('subscription_preapproved', true);\n            contact.pres('subscribed');\n            contact.set('known', true);\n            contact.set('removed', false);\n            setTimeout(() => {\n                contact.pres('subscribe');\n            }, 500);\n            this.close();\n            xabber.chats_view.updateScreenAllChats();\n            contact.trigger(\"open_chat\", contact);\n            if (!(this.account.connection && this.account.connection.do_synchronization)) {\n                let iq_set_blocking = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n                    .c('item', {jid: group_jid + '/' + moment.now()});\n                this.account.sendIQFast(iq_set_blocking);\n            }\n\n        }, () => {\n            this.$('span.errors').removeClass('hidden').text(xabber.getString(\"groupchat_jid_already_exists\"));\n            this.$('input[name=\"chat_jid\"]').addClass('invalid');\n        });\n    },\n\n    addGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            $(ev.target).blur();\n            return;\n        }\n        let xmpp_server = this.$('#new_chat_domain').val() || this.$('.xmpp-server-dropdown-wrap .property-value').text(),\n            input_value = this.$('input[name=chat_jid]').val();\n        if (this.$('input[name=chat_name]').val() == \"\") {\n            this.$('span.errors').text(xabber.getString(\"group_is_empty\")).removeClass('hidden');\n            this.$('input[name=\"chat_name\"]').addClass('invalid');\n        } else {\n            if ((input_value == \"\")||((input_value.search(/[А-яЁё]/) == -1)&&(input_value.search(/\\s/) == -1)&&(input_value != \"\"))) {\n                this.$('span.errors').text('').addClass('hidden');\n                this.$('input').removeClass('invalid');\n                let iq = $iq({type: 'get', to: xmpp_server}).c('query', {xmlns: Strophe.NS.DISCO_INFO}),\n                    group_chats_support;\n                this.account.sendIQFast(iq, (iq) => {\n                    $(iq).children('query').children('feature').each((elem, item) => {\n                        if ($(item).attr('var') == Strophe.NS.GROUP_CHAT)\n                            group_chats_support = true;\n                    });\n                    if (group_chats_support)\n                        this.createGroupChat();\n                    else {\n                        this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_server_does_not_support\")}`);\n                        this.$('input[name=\"chat_domain\"]').addClass('invalid');\n                    }\n                }, (response) => {\n                    this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_invalid_domain\")}`); // !!!!!!!!!!!!!!!!!! :::::\n                    this.$('input[name=\"chat_domain\"]').addClass('invalid');\n                });\n            }\n            else {\n                this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_localpart_invalid\")}`);\n                this.$('input[name=\"chat_jid\"]').addClass('invalid');\n            }\n        }\n    }\n});\n\nxabber.ChatsView = xabber.SearchPanelView.extend({\n    className: 'recent-chats-container container',\n    ps_selector: '.chat-list-wrap',\n    ps_settings: {theme: 'item-list'},\n    main_container: '.chat-list',\n    template: templates.chats_panel,\n\n    _initialize: function () {\n        this.active_chat = null;\n        this.model.on(\"add\", this.onChatAdded, this);\n        this.model.on(\"destroy\", this.onChatRemoved, this);\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"add_opened_chat\", this.onChangedActiveStatus, this);\n        this.model.on(\"change:unread\", this.onChangedReadStatus, this);\n        this.model.on(\"change:const_unread\", this.onChangedReadStatus, this);\n        this.model.on(\"change:timestamp\", this.updateChatPosition, this);\n        xabber.accounts.on(\"list_changed\", this.updateLeftIndicator, this);\n        let wheel_ev = this.defineMouseWheelEvent();\n        this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.$('.read-all-button').click(this.readAllMessages.bind(this));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        xabber.on(\"update_layout\", this.onWindowResized, this);\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    render: function (options) {\n        if (options.right === undefined)\n            this.active_chat = null;\n        this.$('.chat-list-wrap').switchClass('with-padding', xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').length);\n        if (options.right !== 'chat' && !options.no_unread && options.right !== 'searched_messages' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search) {\n            this.clearSearch();\n            if (xabber.toolbar_view.$('.active').hasClass('all-chats') && !xabber.toolbar_view.data.get('account_filtering')) {\n                this.showAllChats();\n            }\n        }\n    },\n\n    readAllMessages: function () {\n        let chats = this.model,\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (active_toolbar.hasClass('chats')) {\n            let private_chats = chats.filter(chat => chat.get('saved') || !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            private_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        if (active_toolbar.hasClass('all-chats')) {\n            let all_chats = chats.filter(chat => chat.get('saved') || chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            all_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        if (active_toolbar.hasClass('group-chats')) {\n            let group_chats = chats.filter(chat => chat.get('saved') || chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            group_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    onUpdatedScreen: function (name) {\n        this.$('.read-all-button').switchClass('hidden', !xabber.toolbar_view.$('.toolbar-item:not(.account-item):not(.toolbar-logo).active.unread').length);\n    },\n\n    // onWindowResized: function (options) {\n    //     options.size_changed && this.onScroll();\n    // },\n\n    defineMouseWheelEvent: function () {\n        if (!_.isUndefined(window.onwheel)) {\n            return \"wheel\";\n        } else if (!_.isUndefined(window.onmousewheel)) {\n            return \"mousewheel\";\n        } else {\n            return \"MozMousePixelScroll\";\n        }\n    },\n\n    onMouseWheel: function (ev) {\n        // if (ev.originalEvent.deltaY > 0)\n        //     this.onScroll();\n    },\n\n    hideChatsFeedback: function () {\n        clearTimeout(this._load_chats_timeout);\n        this.$('.load-chats-feedback').addClass('hidden');\n        this.updateScrollBar();\n        this._load_chats_timeout = null;\n    },\n\n    // onScroll: function () {\n    //     if (this.getScrollBottom() < 12 && !this._load_chats_timeout && this.isVisible()) {\n    //         this._load_chats_timeout = setTimeout(() => {\n    //             this.hideChatsFeedback();\n    //         }, 5000);\n    //         let accounts = xabber.accounts.connected.filter(account => !account.roster.conversations_loaded && account.connection && account.connection.do_synchronization);\n    //         if (accounts.length) {\n    //             this.$('.load-chats-feedback').text(xabber.getString(\"placeholder_loading\")).removeClass('hidden');\n    //             this.updateScrollBar();\n    //         }\n    //         accounts.forEach((account) => {\n    //             let options = {max: xabber.settings.mam_messages_limit};\n    //             account.roster.last_chat_msg_id && (options.after = account.roster.last_chat_msg_id);\n    //             account.roster.syncFromServer(options);\n    //         });\n    //     }\n    // },\n\n    updateLeftIndicator: function (accounts) {\n        this.$el.attr('data-indicator', accounts.connected.length > 1);\n    },\n\n    onChatAdded: function (chat) {\n        this.addChild(chat.id, chat.item_view);\n        this.updateChatPosition(chat);\n    },\n\n    onChatRemoved: function (chat, options) {\n        if (this.active_chat === this.child(chat.id)) {\n            this.active_chat = null;\n            xabber.body.showChatPlaceholder();\n        }\n        this.removeChild(chat.id, options);\n        this.updateScrollBar();\n    },\n\n    onChangedActiveStatus: function (chat) {\n        if (chat.get('active')) {\n            let previous_chat = this.active_chat;\n            this.active_chat = this.child(chat.id);\n            previous_chat && previous_chat.model.set('active', false);\n        }\n    },\n\n    onChangedReadStatus: function (item) {\n        let view = this.child(item.id),\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (!view)\n            return;\n        if (!active_toolbar.hasClass('unread') || (active_toolbar.hasClass('unread') && (item.get('unread') || item.get('const_unread'))))\n            return;\n        view.detach();\n        if (!this.$('.chat-item').length && active_toolbar.hasClass('unread')) {\n            active_toolbar.click();\n        }\n    },\n\n    replaceChatItem: function (item, chats, pinned_chats) {\n        let view = this.child(item.id);\n        if (view && item.get('pinned') && item.get('pinned') !== '0' && pinned_chats ){\n            pinned_chats = pinned_chats.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            let index = pinned_chats.indexOf(item);\n            if (index === 0) {\n                this.$('.pinned-chat-list').prepend(view.$el);\n            } else {\n                let $chat_item = this.$('.pinned-chat-list .chat-item').eq(index - 1);\n                while (!$chat_item.length && index > 0) {\n                    index--;\n                    $chat_item = this.$('.pinned-chat-list .chat-item').eq(index - 1);\n                }\n                $chat_item.after(view.$el);\n            }\n        }\n        else if (view && (item.get('timestamp') || item.get('saved'))) {\n            view.$el.detach();\n            let index = chats.indexOf(item);\n            if (index === 0) {\n                this.$('.chat-list').prepend(view.$el);\n            } else {\n                this.$('.chat-list .chat-item').eq(index - 1).after(view.$el);\n            }\n        }\n    },\n\n    updateChatPosition: function (item) {\n        let view = this.child(item.id),\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (!view)\n            return;\n        if (active_toolbar.hasClass('unread') && !(item.get('unread') || item.get('const_unread')))\n            return;\n        if (active_toolbar.hasClass('account-item') && view.account.get('jid') !== active_toolbar.attr('data-jid')){\n            return;\n        }\n        active_toolbar.hasClass('group-chats') && (view.model.get('saved') || view.contact.get('group_chat')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || chat.contact.get('group_chat') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || chat.contact.get('group_chat') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        active_toolbar.hasClass('chats') && (view.model.get('saved') || !view.contact.get('group_chat')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || !chat.contact.get('group_chat') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || !chat.contact.get('group_chat') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        (active_toolbar.hasClass('all-chats') || active_toolbar.hasClass('settings-modal') || (xabber.accounts.enabled.length === 1 && active_toolbar.hasClass('saved-chats'))) && (view.model.get('saved') || !view.model.get('archived')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        active_toolbar.hasClass('archive-chats') && (view.model.get('saved') || view.model.get('archived')) && this.replaceChatItem(item, this.model.filter(chat => chat.get('saved') || chat.get('archived')));\n        active_toolbar.hasClass('saved-chats') && (xabber.accounts.enabled.length !== 1) && (view.model.get('saved') && this.replaceChatItem(item, this.model.filter(chat => chat.get('saved'))));\n        active_toolbar.hasClass('mentions') && (view.model.get('saved') && this.replaceChatItem(item, this.model.filter(chat => (chat.get('jid') === chat.account.domain))));\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = this.child(selection.data('id'));\n                view && view.open();\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.getChat(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')));\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            view = this.child(selection.data('id'));\n            view && view.open();\n        }\n    },\n\n    openChat: function (view, options) {\n        if (!view.content)\n            view.content = new xabber.ChatContentView({chat_item: view});\n        options = options || {};\n        this.$('.list-item.active').removeClass('active');\n        view.updateActiveStatus();\n        let scrolled_top = xabber.chats_view.getScrollTop();\n        options.clear_search && this.clearSearch();\n        if (view.contact && !view.contact.get('in_roster') && (view.model.get('is_accepted') == false || (view.model.get('is_accepted') == true && view.contact.invitation))) {\n            if (view.model.get('is_accepted') == false){\n                view.model.set('display', true);\n                view.model.set('active', true);\n                xabber.body.setScreen('all-chats', {right: 'group_invitation', contact: view.contact });\n            } else if (view.model.get('is_accepted') == true && view.contact.invitation){\n                view.contact.invitation.join();\n            }\n        }\n        else {\n            if (xabber.toolbar_view.$('.active').hasClass('contacts'))\n                this.updateScreenAllChats();\n            if (!view.model.get('history_loaded')) {\n                if (\n                    (view.model.get('const_unread') || view.model.get('unread'))\n                    && view.model.get('last_read_msg') &&\n                    (!view.content._prev_scrolltop || (view.content._prev_scrolltop && view.content._is_scrolled_bottom) || (view.model.get('show_new_unread') === true))\n                    && !view.model.get('loading_unread_history') && !options.force_bottom && xabber.body.screen.get('chat_item') !== view\n                ){\n                    view.model.set('show_new_unread', false);\n                    view.model._wait_load_unread_history = new $.Deferred();\n                    view.content._no_scrolling_event = true;\n                    view.content.loadUnreadHistory();\n                } else if (view.model.messages.length < 20)\n                    view.content.loadPreviousHistory();\n            }\n            if (!options.right_force_close && (\n                xabber.body.screen.get('right_contact') && (xabber.body.screen.get('right') === 'chat' || xabber.body.screen.get('right') === 'message_context' )\n            )) {\n                if (view.model.get('saved'))\n                    xabber.body.setScreen((options.screen || 'all-chats'), {right_contact: ''});\n                else if(xabber.right_contact_panel_saveable)\n                    view.contact.showDetailsRight('all-chats', {right_saved: true, encrypted: view.model.get('encrypted')});\n                else\n                    view.contact.showDetailsRight('all-chats', {right_saved: false});\n            }\n            if (!view.model.get('loading_unread_history')){\n                let current_scrolling = view.content.getScrollTop() || view.content._scrolltop;\n                xabber.body.setScreen((options.screen || 'all-chats'), {\n                    right: 'chat',\n                    clear_search: options.clear_search,\n                    chat_item: view,\n                    blocked: view.model.get('blocked')\n                },{right_contact_save: options.right_contact_save, right_force_close: options.right_force_close} );\n                view.content.scrollTo(current_scrolling);\n            } else {\n                xabber.body.setScreen((options.screen || 'all-chats'), {\n                    right: 'chat',\n                    clear_search: options.clear_search,\n                    chat_item: view,\n                    show_placeholder: true,\n                    blocked: view.model.get('blocked')\n                },{right_contact_save: options.right_contact_save, right_force_close: options.right_force_close} );\n                view.model.set('active', true);\n                view.model._wait_load_unread_history.done(() => {\n                    if (xabber.body.screen.get('chat_item') === view) {\n                        view.model.set('loading_unread_history', false)\n                        xabber.body.setScreen((options.screen || 'all-chats'), {\n                            right: 'chat',\n                            clear_search: options.clear_search,\n                            chat_item: view,\n                            blocked: view.model.get('blocked')\n                        },{right_contact_save: options.right_contact_save, right_force_close: options.right_force_close} );\n                        view.content.scrollToUnread();\n                        view.content._long_reading_timeout = true;\n                        view.content._no_scrolling_event = false;\n                        view.content.onScroll();\n                        if (options.scroll_to_chat) {\n                            xabber.chats_view.scrollToChild(view.$el);\n                        } else {\n                            xabber.chats_view.scrollTo(scrolled_top);\n                        }\n                    }\n                });\n            }\n            if (view.contact && (!view.contact.get('vcard_updated') || (view.contact.get('group_chat') && !view.contact.get('group_info')) || (view.contact.get('vcard_updated') && !moment(view.contact.get('vcard_updated')).startOf('hour').isSame(moment().startOf('hour'))))) {\n                view.contact.getVCard();\n            }\n        }\n        if (options.scroll_to_chat) {\n            xabber.chats_view.scrollToChild(view.$el);\n        } else {\n            xabber.chats_view.scrollTo(scrolled_top);\n        }\n    },\n\n    showGroupChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = xabber.toolbar_view.$('.active.unread').length,\n            group_chats = [],\n            group_chats_pinned = [];\n        if (is_unread) {\n            group_chats = chats.filter(chat => chat.contact && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            group_chats_pinned = chats.filter(chat => chat.contact && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!group_chats.length && !group_chats_pinned.length) {\n            group_chats = chats.filter(chat => !chat.get('saved') && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            group_chats_pinned = chats.filter(chat => !chat.get('saved') && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        group_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (group_chats_pinned) {\n            group_chats_pinned = group_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            group_chats_pinned.forEach((chat) => {\n                let index = group_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = xabber.toolbar_view.$('.active.unread').length,\n            private_chats = [],\n            private_chats_pinned = [];\n        if (is_unread) {\n            private_chats = chats.filter(chat => chat.contact && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            private_chats_pinned = chats.filter(chat => chat.contact && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!private_chats.length && !private_chats_pinned.length) {\n            private_chats = chats.filter(chat => !chat.get('saved') && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            private_chats_pinned = chats.filter(chat => !chat.get('saved') && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        private_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (private_chats_pinned) {\n            private_chats_pinned = private_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            private_chats_pinned.forEach((chat) => {\n                let index = private_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showChatsByAccount: function (account) {\n        xabber.body.setScreen('all-chats');\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            account_chats = chats.filter(chat => ((chat.account.get('jid') === account.get('jid')) && (chat.get('saved') || chat.get('timestamp') && !chat.get('archived'))) && (chat.get('pinned') === '0' || !chat.get('pinned'))),\n            account_chats_pinned = chats.filter(chat => ((chat.account.get('jid') === account.get('jid')) && (chat.get('saved') || chat.get('timestamp') && !chat.get('archived'))) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        this.$(`.omemo-item:not([data-id=\"${account.get('jid')}\"])`).addClass('hidden');\n        account_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (account_chats_pinned) {\n            account_chats_pinned = account_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            account_chats_pinned.forEach((chat) => {\n                let index = account_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showArchiveChats: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            archive_chats = chats.filter(chat => !chat.get('saved') && chat.get('archived'));\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (xabber.toolbar_view.data.get('account_filtering'))\n            archive_chats = archive_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')));\n        archive_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n    },\n\n    showSavedChats: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            saved_chats = chats.filter(chat => chat.get('saved'));\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (xabber.toolbar_view.data.get('account_filtering'))\n            saved_chats = saved_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')));\n        saved_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n            this.$(`.chat-list .chat-item[data-id=\"${chat.id}\"] .chat-title`).text(chat.get('jid'));\n        });\n    },\n\n    showNotifications: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            notificatons_chats = chats.filter(chat => (chat.get('jid') === chat.account.domain || chat.contact && chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both' ));\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (xabber.toolbar_view.data.get('account_filtering'))\n            notificatons_chats = notificatons_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')));\n        notificatons_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n    },\n\n    showAllChats: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = no_unread || xabber.toolbar_view.data.get('account_filtering') ? false : xabber.toolbar_view.$('.active.unread').length,\n            all_chats = [],\n            all_chats_pinned = [];\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (is_unread) {\n            all_chats = chats.filter(chat => chat.contact && chat.get('timestamp') && !chat.get('archived') && chat.last_message && ((chat.get('unread') || chat.get('const_unread')) || (chat.contact.get('invitation') || (chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both'))) && (chat.get('pinned') === '0' || !chat.get('pinned')) );\n            all_chats_pinned = chats.filter(chat => chat.contact && chat.get('timestamp') && !chat.get('archived') && chat.last_message && ((chat.get('unread') || chat.get('const_unread')) || (chat.contact.get('invitation') || (chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both'))) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!all_chats.length && !all_chats_pinned.length) {\n            all_chats = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            all_chats_pinned = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        if (xabber.toolbar_view.data.get('account_filtering')){\n            all_chats = all_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')))\n            all_chats_pinned = all_chats_pinned.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')))\n        }\n        all_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (all_chats_pinned) {\n            all_chats_pinned = all_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            all_chats_pinned.forEach((chat) => {\n                let index = all_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    updateScreenAllChats: function () {\n        xabber.toolbar_view.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active')\n            .filter('.all-chats:not(.toolbar-logo)').addClass('active');\n        this.showAllChats();\n    }\n});\n\n  xabber.MessageItemView = xabber.BasicView.extend({\n      className: 'message-item list-item',\n      template: templates.message_item,\n      avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n      events: {\n          'click': 'openByClick'\n      },\n\n      _initialize: function () {\n          this.contact = this.model.contact;\n          this.account = this.contact ? this.contact.account : this.model.account;\n          this.$el.attr('data-id', this.model.id + '-' + this.cid);\n          this.$el.attr('data-contact-jid', this.contact.get('jid'));\n          this.updateName();\n          this.updateLastMessage();\n          this.updateAvatar();\n          this.updateColorScheme();\n          this.updateGroupChats();\n          this.updateIcon();\n          this.updateStatus();\n          this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n          this.contact.on(\"change:status\", this.updateStatus, this);\n          this.contact.on(\"change:name\", this.updateName, this);\n      },\n\n      updateName: function () {\n          this.$('.chat-title').text(this.contact.get('name'));\n      },\n\n      updateAvatar: function () {\n          let image = this.contact.cached_image;\n          this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n      },\n\n      updateStatus: function () {\n          let status = this.contact.get('status'),\n              status_message = this.contact.getStatusMessage();\n          this.$('.contact-status').attr('data-status', status);\n          this.$('.chat-icon').attr('data-status', status);\n          this.model.get('blocked') ? this.$('.contact-status-message').text(xabber.getString(\"action_contact_blocked\")) : this.$('.contact-status-message').text(status_message);\n      },\n\n      updateGroupChats: function () {\n          let is_group_chat = this.contact.get('group_chat');\n          this.$('.status').hideIf(is_group_chat);\n          this.updateIcon();\n          if (is_group_chat) {\n              this.$el.addClass('group-chat');\n              this.$('.chat-title').css('color', '#424242');\n              this.model.set('group_chat', true);\n          }\n      },\n\n      updateIcon: function () {\n          this.$('.chat-icon').addClass('hidden');\n          let ic_name = this.contact.getIcon();\n          ic_name && this.$('.chat-icon').removeClass('hidden').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n      },\n\n      updateColorScheme: function () {\n          let color = this.account.settings.get('color');\n          this.$el.attr('data-color', color);\n      },\n\n      updateLastMessage: function (msg) {\n          msg || (msg = this.model);\n          if (!msg)\n              return;\n          let msg_time = msg.get('time'),\n              timestamp = msg.get('timestamp'),\n              forwarded_message = msg.get('forwarded_message'),\n              msg_files = msg.get('files') || [],\n              msg_images = msg.get('images') || [],\n              msg_locations = msg.get('locations') || [],\n              msg_text = (forwarded_message) ? (msg.get('message') || xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText(),\n              msg_user_info = msg.get('user_info') || msg.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes || {}, msg_from = \"\";\n          msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n          this.model.set({timestamp: timestamp});\n          if (this.model.get('group_chat'))\n              msg_from = msg_user_info.nickname || msg_user_info.jid || (msg.isSenderMe() ? this.account.get('name') : msg.get('from_jid')) || \"\";\n          if (msg_files.length || msg_images.length || msg_locations.length) {\n              let $colored_span = $('<span class=\"text-color-500\"/>');\n              if (msg_files.length && msg_images.length)\n                  msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n              else {\n                  if (msg_files.length == 1 && (msg_files[0].is_audio || msg_files[0].voice))\n                      msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(msg_files[0].duration));\n                  else if (msg_files.length > 0) {\n                      let total_size = 0;\n                      msg_files.forEach((f) => {total_size+=Number(f.size)});\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                  }\n                  if (msg_images.length > 0) {\n                      let total_size = 0;\n                      msg_images.forEach((f) => {total_size+=Number(f.size)});\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                  }\n                  if (msg_locations.length > 0) {\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                  }\n              }\n              this.$('.last-msg').html(\"\").append(msg_from).append(msg_text);\n          }\n          else {\n              this.$('.last-msg').text(\"\").append(msg_text);\n              if (msg_from)\n                  this.$('.last-msg').prepend($('<span class=text-color-700>' + msg_from + ': ' + '</span>'));\n          }\n          this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n          this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n              .attr('title', pretty_datetime(msg_time));\n          this.$('.msg-delivering-state').showIf(msg.isSenderMe() && (msg.get('state') !== constants.MSG_ARCHIVED))\n              .attr('data-state', msg.getState());\n      },\n\n      openByClick: function () {\n          let chat = this.account.chats.getChat(this.contact);\n          this.$el.closest('.left-panel-list-wrap').find('.list-item').removeClass('active');\n          this.$el.addClass('active');\n          xabber.chats_view.openChat(chat.item_view, {right_contact_save: true, clear_search: false});\n          xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'message_context', model: chat });\n          if (xabber.right_contact_panel_saveable && xabber.body.screen.get('right_contact') && xabber.body.screen.get('right') === 'message_context') {\n              if (xabber.right_contact_panel_saveable)\n                  chat.contact.showDetailsRight('all-chats', {right_saved: true});\n              else\n                  chat.contact.showDetailsRight('all-chats', {right_saved: false});\n          }\n          this.model.get('unique_id') && chat.getMessageContext(this.model.get('unique_id'), {message: true});\n      }\n  });\n\n\n  xabber.ForwardPanelView = xabber.SearchView.extend({\n    className: 'modal dialog-modal forward-panel-modal',\n    template: templates.forward_panel,\n    ps_selector: '.chat-list-wrap',\n    ps_settings: {theme: 'item-list'},\n      events: {\n          \"keyup .search-input\": \"keyUpOnSearch\",\n          \"focusout .search-input\": \"clearSearchSelection\",\n          \"click .close-search-icon\": \"clearSearch\",\n          \"click .list-item\": \"onClickItem\"\n      },\n\n    open: function (messages, account) {\n        this.messages = messages;\n        this.account = account;\n        this.$('.chat-list-wrap .pinned-chat-list').html(\"\");\n        this.$('.chat-list-wrap .chat-list').html(\"\");\n        this.$('.chat-list-wrap .contact-list').html(\"\");\n        this.saved_chat = false;\n        let chats = xabber.chats_view.model,\n            all_chats = [],\n            all_chats_pinned = [];\n        if (!all_chats.length && !all_chats_pinned.length) {\n            all_chats = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            all_chats_pinned = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (all_chats_pinned) {\n            all_chats_pinned = all_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            all_chats_pinned.forEach((chat) => {\n                if (chat.account.get('jid') === this.account.get('jid')) {\n                    if (chat.id == `${this.account.get('jid')}:saved`) {\n                        let $cloned_item = chat.item_view.$el.clone().removeClass('hidden');\n                        $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n                        this.saved_chat = true;\n                        this.$('.chat-list-wrap .pinned-chat-list').prepend($cloned_item);\n                    } else\n                        this.$('.chat-list-wrap .pinned-chat-list').append(chat.item_view.$el.clone().removeClass('hidden'));\n                }\n            });\n        }\n        all_chats.forEach((chat) => {\n            if (chat.account.get('jid') === this.account.get('jid')) {\n                if (chat.id == `${this.account.get('jid')}:saved`) {\n                    let $cloned_item = chat.item_view.$el.clone().removeClass('hidden');\n                    $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n                    this.saved_chat = true;\n                    this.$('.chat-list-wrap .pinned-chat-list').prepend($cloned_item);\n                } else\n                    this.$('.chat-list-wrap .chat-list').append(chat.item_view.$el.clone().removeClass('hidden'));\n            }\n        });\n        if (!this.saved_chat) {\n            let saved_chat = this.account.chats.getSavedChat(),\n                $cloned_item = saved_chat.item_view.$el.clone();\n            $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n            this.$('.chat-list-wrap .pinned-chat-list').prepend($cloned_item);\n        }\n        this.$('.chat-list-wrap .pinned-chat-list').prepend($('<div/>', { class: 'forward-panel-list-title recent-chats-title hidden'}).text(xabber.getString(\"category_recent_chats\")));\n        this.$('.chat-list-wrap .chat-list').append($('<div/>', { class: 'forward-panel-list-title contacts-title hidden'}).text(xabber.getString(\"category_title_contacts\")));\n        this.$('.chat-item').removeClass('active');\n        this.clearSearch();\n        this.data.set('visible', true);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.search-input').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n            this.$el.detach();\n            this.data.set('visible', false);\n            deferred.resolve();\n        }});\n        return deferred.promise();\n    },\n\n    onClickItem: function (ev) {\n        let $target = $(ev.target).closest('.list-item');\n        this.onEnterPressed($target);\n    },\n\n    search: function (query) {\n        let jid, name, is_match = false, has_matches_chats = false, has_matches_contacts = false;\n        query = query.toLowerCase();\n        this.$('.roster-contact.list-item').remove();\n        query && this.account.roster.forEach((contact) => {\n            let jid = contact.get('jid'),\n                chat_id = contact.hash_id,\n                name = contact.get('name').toLowerCase(),\n                is_match = (name.indexOf(query) < 0 && jid.indexOf(query) < 0) ? true : false;\n            if (!is_match) {\n                if (!this.$('.chat-list-wrap .chat-item[data-id=\"' + chat_id + '\"]').length) {\n                    let contact_list_item = xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${this.account.get('jid')}\"] .roster-contact[data-jid=\"${jid}\"]`).first().clone();\n                    contact_list_item.find('.muted-icon').hide();\n                    this.$('.chat-list-wrap .contact-list').append(contact_list_item);\n                }\n                else\n                    is_match = true;\n            }\n            !is_match && (has_matches_contacts = true);\n        });\n        this.$('.contacts-title').switchClass('hidden', !has_matches_contacts);\n        this.$('.chat-item').each((idx, item) => {\n            let chat = this.account.chats.get($(item).data('id'));\n            if (!chat) {\n                $(item).addClass('hidden');\n                return;\n            }\n            jid = chat.get('jid');\n            name = (chat.contact ? chat.contact.get('name') : chat.get('name'));\n            if (name)\n                name = name.toLowerCase();\n            is_match = (!name || name && (name.indexOf(query) < 0 && jid.indexOf(query) < 0)) ? false : true;\n            $(item).hideIf(!is_match);\n            is_match && (has_matches_chats = true);\n        });\n        this.$('.recent-chats-title').switchClass('hidden', !has_matches_chats);\n        this.$('.modal-content .error').showIf(!has_matches_contacts && !has_matches_chats);\n        this.scrollToTop();\n    },\n\n    onEmptyQuery: function () {\n        this.$('.roster-contact.list-item').remove();\n        this.$('.contacts-title').addClass('hidden');\n        this.$('.modal-content .error').addClass('hidden');\n        this.$('.recent-chats-title').addClass('hidden');\n    },\n\n    onEnterPressed: function (selection) {\n        let chat_item;\n        if (selection.hasClass('roster-contact'))\n            chat_item = this.account.chats.getChat(this.account.contacts.get(selection.data('jid'))).item_view;\n        if (selection.hasClass('chat-item'))\n            chat_item = xabber.chats_view.child(selection.data('id'));\n        chat_item && this.forwardTo(chat_item);\n    },\n\n    forwardTo: function (chat_item) {\n        if (chat_item.model.get('saved')) {\n            this.messages.forEach((message) => {\n                chat_item.content.onSubmit(\"\", [message]);\n            });\n        }\n        else {\n            if (!chat_item.content)\n                chat_item.content = new xabber.ChatContentView({chat_item: chat_item});\n            chat_item.content.bottom.setForwardedMessages(this.messages);\n        }\n        this.messages = [];\n        this.close().done(() => {\n            chat_item.open({clear_search: true});\n        });\n    }\n});\n\nxabber.InvitationPanelView = xabber.SearchView.extend({\n    className: 'modal dialog-modal add-user-group-chat',\n    template: templates.group_chats.invitation_panel_view,\n    ps_selector: '.contacts-list-wrap',\n    ps_settings: {theme: 'item-list'},\n\n    _initialize: function () {\n        this.registerClickEvents();\n    },\n\n    open: function (account, contact) {\n        this.selected_contacts = [];\n        this.account = account;\n        this.contact = contact;\n        this.clearPanel();\n        xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${this.account.get('jid')}\"] .roster-group`).each((idx, item) => {\n            let group_node = $(item).clone();\n            $(group_node).find('.list-item').each((i, list_item) => {\n                let contact_node = this.account.contacts.get($(list_item).attr('data-jid'));\n                if (contact_node.get('group_chat'))\n                        list_item.remove();\n            });\n            if (group_node.children('.list-item').length) {\n                this.$('.contacts-list-wrap').append(group_node);\n                group_node.find('.arrow').click((ev) => {\n                    this.toggleContacts(ev);\n                });\n                group_node.find('.group-head').click((ev) => {\n                    this.selectAllGroup(ev);\n                });\n            }\n        });\n        this.data.set('visible', true);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.search-input').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                this.selected_contacts = [];\n            }\n        });\n    },\n\n    addSelectedUsers: function () {\n        if (!this.selected_contacts.length) {\n            this.$('.modal-footer button').blur();\n            return;\n        }\n        let selected_users_count = this.selected_contacts.length,\n            _dfd_invitations = new $.Deferred(), invitations_count = 0;\n        _dfd_invitations.done((count) => {\n            let toast_text;\n            if (count == selected_users_count)\n                toast_text = xabber.getQuantityString(\"groupchat__toast__invitations_sent\", selected_users_count);\n            else\n                toast_text = xabber.getQuantityString(\"groupchat__toast_failed_to_sent_invitations\", selected_users_count);\n            utils.callback_popup_message(toast_text, 2000);\n            this.contact.trigger('invitations_send')\n        });\n        $(this.selected_contacts).each((idx, item) => {\n            this.sendInvite(item, () => {\n                invitations_count++;\n                if (idx == selected_users_count - 1)\n                    _dfd_invitations.resolve(invitations_count);\n            }, () => {\n                if (idx == selected_users_count - 1)\n                    _dfd_invitations.resolve(invitations_count);\n            });\n        });\n        this.close();\n    },\n\n    clearPanel: function () {\n        this.$('.modal-footer .errors').text('');\n        this.$('.counter').text('');\n        this.$('.contacts-list-wrap').empty();\n        this.clearSearch();\n    },\n\n    registerClickEvents: function () {\n        this.$('.btn-cancel').click(() => {\n            this.close();\n        });\n        this.$('.btn-add').click(() => {\n            this.addSelectedUsers();\n        });\n    },\n\n    addUser: function (ev) {\n        let $target = $(ev.target).closest('.list-item'),\n            contact_jid = $target.attr('data-jid');\n        $target.toggleClass('click-selected');\n        let itemIdx = this.selected_contacts.indexOf(contact_jid);\n        if (itemIdx > -1)\n            this.selected_contacts.splice(itemIdx, 1);\n        else\n            this.selected_contacts.push(contact_jid);\n        this.updateCounter();\n    },\n\n    sendInvite: function (contact_jid, callback, errback) {\n        let iq = $iq({type: 'set', to: (this.contact.get('full_jid') || this.contact.get('jid'))})\n                .c('invite', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(contact_jid).up()\n                .c('send').t('false').up()\n                .c('reason').t((this.contact.get('group_info').privacy === 'incognito') ? xabber.getString(\"groupchat__incognito_group__text_invitation\") : xabber.getString(\"groupchat__public_group__text_invitation\", [contact_jid]));\n        this.account.sendIQFast(iq, () => {\n            this.sendInviteMessage(contact_jid);\n            this.close();\n            callback && callback();\n        }, (iq) => {\n            this.onInviteError(iq);\n            errback && errback();\n        });\n    },\n\n    onInviteError: function (iq) {\n        let err_text;\n        if ($(iq).find('not-allowed').length > 0) {\n            err_text = $(iq).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n        }\n        if ($(iq).find('conflict').length > 0) {\n            err_text = $(iq).find('text').text() || xabber.getString(\"groupchat__invitation__error_already_invited\", [$(iq).find('invite').find('jid').text()]);\n        }\n        this.$('.modal-footer .errors').removeClass('hidden').text(err_text);\n    },\n\n    sendInviteMessage: function(jid_to) {\n        let body = xabber.getString(\"groupchat_legacy_invitation_body\", [this.contact.get('jid')]),\n            stanza = $msg({\n                to: jid_to,\n                type: 'chat',\n                id: uuid()\n            }).c('invite', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`, jid: this.contact.get('jid')})\n                .c('reason').t((this.contact.get('group_info').privacy === 'incognito') ? xabber.getString(\"groupchat__incognito_group__text_invitation\") : xabber.getString(\"groupchat__public_group__text_invitation\", [jid_to])).up().up()\n                .c('x', {xmlns: Strophe.NS.GROUP_CHAT})\n                .c('privacy').t(this.contact.get('group_info').privacy).up().up()\n                .c('body').t(body).up();\n        this.account.sendMsg(stanza);\n    },\n\n    search: function (query) {\n        query = query.toLowerCase();\n        query && this.$('.list-item').each((idx, item) => {\n            let jid = $(item).attr('data-jid'),\n                name = this.account.contacts.get(jid).get('name').toLowerCase(),\n                hide_clone = (this.$(`.list-item[data-jid=\"${jid}\"]`).length > 1) && (!this.$(`.list-item[data-jid=\"${jid}\"]`).first().is($(item)));\n            $(item).hideIf((name.indexOf(query) < 0 && jid.indexOf(query) < 0) || hide_clone);\n        });\n        this.$('.group-head').addClass('hidden');\n        this.$('.modal-content .error').switchClass('hidden', !(this.$('.list-item').length === this.$('.list-item.hidden').length));\n        this.scrollToTop();\n    },\n\n    onEmptyQuery: function () {\n        this.$('.list-item').removeClass('hidden');\n        this.$('.group-head').removeClass('hidden');\n    },\n\n    onClickItem: function (ev) {\n        this.addUser(ev);\n    },\n\n    onEnterPressed: function (selection) {\n        let contact_jid = selection.attr('data-jid'),\n            itemIdx = this.selected_contacts.indexOf(contact_jid);\n        if (itemIdx > -1)\n            this.selected_contacts.splice(itemIdx, 1);\n        this.selected_contacts.push(contact_jid);\n        this.updateCounter();\n        this.addSelectedUsers();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    toggleContacts: function (ev) {\n        let is_visible = $(ev.target).hasClass('mdi-chevron-down');\n        if (is_visible) {\n            let group_roster = $(ev.target).closest('.roster-group');\n            group_roster.find('.list-item').each((idx, item) => {\n                $(item).addClass('hidden');\n            });\n        }\n        else\n        {\n            let group_roster = $(ev.target).closest('.roster-group');\n            group_roster.find('.list-item').each((idx, item) => {\n                $(item).removeClass('hidden');\n            });\n        }\n        $(ev.target).switchClass('mdi-chevron-right', is_visible);\n        $(ev.target).switchClass('mdi-chevron-down', !is_visible);\n        this.updateScrollBar();\n    },\n\n    selectAllGroup: function (ev) {\n        if ($(ev.target).hasClass('arrow'))\n            return;\n       let group_roster = $(ev.target).closest('.roster-group');\n       if (group_roster.hasClass('click-selected')) {\n           group_roster.removeClass('click-selected');\n           group_roster.find('.list-item').each((idx, item) => {\n               let contact_jid = $(item).attr('data-jid'),\n                   itemIdx = this.selected_contacts.indexOf(contact_jid);\n               if (itemIdx > -1) {\n                   this.selected_contacts.splice(itemIdx, 1);\n                   $(item).removeClass('click-selected');\n               }\n           });\n       }\n       else\n       {\n           group_roster.addClass('click-selected');\n           group_roster.find('.list-item').each((idx, item) => {\n               let contact_jid = $(item).attr('data-jid'),\n                   itemIdx = this.selected_contacts.indexOf(contact_jid);\n               if (itemIdx > -1)\n                   return;\n               else\n                   this.selected_contacts.push(contact_jid);\n               $(item).addClass('click-selected');\n           });\n       }\n        this.updateCounter();\n    },\n\n    updateCounter: function () {\n        let selected_counter = this.$('.list-item.click-selected').length;\n        (selected_counter) ? this.$('.counter').removeClass('hidden').text(selected_counter) : this.$('.counter').text('');\n    }\n\n});\n\n  xabber.SavedChatHeadView = xabber.BasicView.extend({\n      className: 'chat-head-wrap saved-chat',\n      template: templates.saved_chat_head,\n      events: {\n          \"click .contact-name\": \"showSettings\",\n          \"click .circle-avatar\": \"showSettings\",\n          \"click .btn-chat-pin\": \"pinSavedChat\",\n          \"click .btn-delete-chat\": \"deleteChat\",\n          \"click .btn-set-status\": \"setStatus\",\n          \"click .btn-play-pause-plyr\": \"playPausePlyr\",\n          \"click .btn-next-plyr\": \"nextPlyr\",\n          \"click .btn-previous-plyr\": \"previousPlyr\",\n          \"click .btn-stop-plyr\": \"stopPlyr\",\n          \"click .btn-popup-plyr\": \"popupPlyr\",\n          \"click .btn-jingle-message\": \"openJingleMessage\",\n          \"click .btn-search-messages\": \"renderSearchPanel\"\n      },\n\n      _initialize: function (options) {\n          this.content = options.content;\n          this.contact = this.content.contact;\n          this.model = this.content.model;\n          clearInterval(this._update_oneliner_interval);\n          this.updateOneLiner();\n          this._update_oneliner_interval = setInterval(() => {\n              this.updateOneLiner();\n          }, 1000*60*2);\n          this.account = this.model.account;\n          this.$el.find('.circle-avatar:not(.voice-message-player-avatar)').html(env.templates.svg['saved-messages']());\n          this.model.on(\"close_chat\", this.closeChat, this);\n          this.model.on(\"hide_chat\", this.hideChat, this);\n          xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n          xabber.on('update_layout', this.updatePlyrTitle, this);\n          xabber.on('plyr_player_time_updated', this.updatePlyrTime, this);\n          xabber.on(\"update_jingle_button\", this.updateJingleButton, this);\n      },\n\n      render: function () {\n          this.$('.tooltipped').tooltip({delay: 50});\n          this.$('.btn-more').dropdown({\n              inDuration: 100,\n              outDuration: 100,\n              hover: false\n          });\n          this.$('.chat-head-menu').hide();\n          this.updatePlyrControls();\n          this.updatePlyrTime();\n          this.updateJingleButton();\n          return this;\n      },\n\n      updateOneLiner: function () {\n          let rand_idx = _.random(0, xabber.getOneLiners().length - 1),\n              one_liner = xabber.getOneLiners()[rand_idx].replace(/\\\\n/, \"\");\n          if (!one_liner) {\n              this.updateOneLiner();\n              return;\n          }\n          this.$('.one-liner').text(one_liner);\n      },\n\n      closeChat: function () {\n          this.model.set({'opened': false, 'display': false, 'active': false});\n          xabber.chats_view.clearSearch();\n      },\n\n      hideChat: function () {\n          this.model.set({'active': false});\n          xabber.chats_view.clearSearch();\n      },\n\n      showSettings: function () {\n          this.account.showSettingsModal();\n      },\n\n      deleteChat: function () {\n          let rewrite_support = this.account.server_features.get(Strophe.NS.REWRITE);\n          utils.dialogs.ask(xabber.getString(\"dialog_delete_saved_messages__header\"), xabber.getString(\"dialog_delete_saved_messages__confirm\") +\n              (rewrite_support ? \"\" : (\"\\n\" + xabber.getString(\"dialog_delete_saved_messages__confirm\", [this.account.domain]).fontcolor('#E53935'))), null, { ok_button_text: rewrite_support? xabber.getString(\"delete\") : xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((result) => {\n              if (result) {\n                  if (this.account.connection && this.account.connection.do_synchronization) {\n                      this.model.deleteFromSynchronization();\n                  }\n                  if (rewrite_support) {\n                      this.model.retractAllMessages(false);\n                  }\n                  else {\n                      let all_messages = this.model.messages.models;\n                      $(all_messages).each((idx, item) => {\n                          this.content.removeMessage(item);\n                      });\n                  }\n                  this.closeChat();\n                  this.model.set('timestamp', 0);\n              }\n          });\n      },\n\n      pinSavedChat: function () {\n          let pinned = this.model.get('pinned'),\n              is_pinned = pinned && pinned !== '0' ? true : false,\n              pinned_value = is_pinned ? '0' : + new Date(),\n              conversation_options = {\n                  jid: this.account.get('jid'),\n                  pinned: pinned_value,\n                  type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n              },\n              iq = $iq({type: 'set', to: this.account.get('jid')})\n                  .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                  .c('conversation', conversation_options);\n          this.account.sendIQFast(iq);\n          this.model.set('pinned', pinned_value);\n      },\n\n      renderSearchPanel: function () {\n          let visible_view;\n          if (this.content.isVisible())\n              visible_view = this.content;\n          this.model.messages_view && this.model.messages_view.isVisible() && (visible_view = this.model.messages_view);\n          visible_view && visible_view.$search_form.slideToggle(200, () => {\n              if (visible_view.$search_form.css('display') !== 'none')\n                  visible_view.$search_form.find('input').focus();\n          });\n      },\n\n      playPausePlyr: function () {\n          if (!xabber.current_plyr_player)\n              return;\n          if (xabber.current_plyr_player.$audio_elem){\n              if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                  let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                  $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                  xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n              } else {\n                  xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n              }\n          } else\n              xabber.current_plyr_player.togglePlay();\n          xabber.trigger('plyr_player_updated');\n      },\n\n      stopPlyr: function () {\n          if (!xabber.current_plyr_player && xabber.plyr_player_popup)\n              return;\n          xabber.plyr_players.forEach((item) => {\n              if (item.$audio_elem){\n                  if (item.$audio_elem.voice_message)\n                      item.$audio_elem.voice_message.stopTime();\n              }\n          });\n          if (xabber.plyr_player_popup)\n              xabber.plyr_player_popup.closePopup();\n          else {\n              xabber.current_plyr_player = null;\n              xabber.trigger('plyr_player_updated');\n          }\n      },\n\n      popupPlyr: function () {\n          if (xabber.plyr_player_popup)\n              xabber.plyr_player_popup.minimizePopup();\n      },\n\n      nextPlyr: function () {\n          let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n          if (player_index === -1 && xabber.current_plyr_player.player_item)\n              player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n          if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n              return;\n          if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n              let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n              if (!next_item.$audio_elem.voice_message){\n                  let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                  $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                  next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n              } else {\n                  next_item.$audio_elem.voice_message.play()\n              }\n          } else{\n              if (!xabber.plyr_player_popup){\n                  xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                  xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n              } else\n                  xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n          }\n      },\n\n      previousPlyr: function () {\n          let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n          if (player_index === -1 && xabber.current_plyr_player.player_item)\n              player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n          if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n              return;\n          if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n              let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n              if (!prev_item.$audio_elem.voice_message){\n                  let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                  $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                  prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n              } else {\n                  prev_item.$audio_elem.voice_message.play()\n              }\n          } else{\n              if (!xabber.plyr_player_popup){\n                  xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                  xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n              } else\n                  xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n          }\n      },\n\n      updatePlyrControls: function () {\n          this.$('.chat-tool-player').showIf(xabber.current_plyr_player);\n          this.$el.switchClass('chat-head-player-enabled', xabber.current_plyr_player);\n          if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n              if (xabber.current_plyr_player.$audio_elem.voice_message){\n                  let voice_message = xabber.current_plyr_player.$audio_elem.voice_message;\n                  this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_voice\"))\n                  this.$('.btn-play-pause-plyr .mdi-play').hideIf(voice_message.isPlaying());\n                  this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!voice_message.isPlaying());\n                  this.$('.btn-play-pause-plyr').switchClass('active-plyr', voice_message.isPlaying());\n                  // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', voice_message.isPlaying());\n                  this.$('.btn-previous-plyr').switchClass('before-active-plyr', voice_message.isPlaying());\n                  let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n                  this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                  this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                  this.$('.mdi-player-type-icon').addClass('hidden');\n                  this.$('.player-poster').addClass('hidden');\n                  this.$('.voice-message-player-avatar').removeClass('hidden');\n                  this.$('.voice-message-player-avatar').setAvatar(xabber.current_plyr_player.contact_avatar, 32);\n                  this.updatePlyrTitle();\n                  let duration = Math.round(voice_message.getDuration());\n                  this.$('.chat-head-player-total-time').text(utils.pretty_duration(duration));\n                  let timerId = setInterval(function() {\n                      let cur_time = Math.round(voice_message.getCurrentTime());\n                      if (voice_message.isPlaying())\n                          this.$('.chat-head-player-current-time').text(utils.pretty_duration(cur_time));\n                      else\n                          clearInterval(timerId);\n                  }, 100);\n                  (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.addClass('hidden2');\n                  (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).addClass('hidden2');\n              }\n          }\n          else if (xabber.current_plyr_player) {\n              this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n              this.$('.chat-head-player-total-time').text(utils.pretty_duration(parseInt(xabber.current_plyr_player.duration)));\n              this.updatePlyrTitle();\n              let poster = xabber.current_plyr_player.poster;\n              if (poster){\n                  this.$('.mdi-player-type-icon').addClass('hidden');\n                  this.$('.player-poster').removeClass('hidden');\n                  this.$('.player-poster').attr(\"src\", poster);\n              } else {\n                  this.$('.mdi-player-type-icon').removeClass('hidden');\n                  this.$('.player-poster').addClass('hidden');\n              }\n              this.$('.voice-message-player-avatar').addClass('hidden');\n              if (xabber.current_plyr_player.provider != 'html5')\n                  this.$('.chat-head-player-type').text(xabber.current_plyr_player.provider)\n              else\n                  this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_video\"))\n              this.$('.btn-play-pause-plyr .mdi-play').hideIf(xabber.current_plyr_player.playing);\n              this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!xabber.current_plyr_player.playing);\n              this.$('.btn-play-pause-plyr').switchClass('active-plyr', xabber.current_plyr_player.playing);\n              // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', xabber.current_plyr_player.playing);\n              this.$('.btn-previous-plyr').switchClass('before-active-plyr', xabber.current_plyr_player.playing);\n              let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n              this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n              this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n              (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.removeClass('hidden2');\n              (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).removeClass('hidden2');\n          }\n      },\n\n      updatePlyrTime: function () {\n          if (xabber.current_plyr_player){\n              if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n              }\n              else if (!isNaN(xabber.current_plyr_player.currentTime))\n                  this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n          }\n      },\n\n      updatePlyrTitle: function () {\n          if (!xabber.current_plyr_player)\n              return\n          let $title_elem = this.$('.chat-head-player-title .chat-head-player-title-text'),\n              title;\n          if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n              title = xabber.current_plyr_player.author;\n          else if (xabber.current_plyr_player)\n              title = xabber.current_plyr_player.config.title ?\n                  xabber.current_plyr_player.config.title :\n                  xabber.current_plyr_player.provider === 'html5' ?\n                      xabber.current_plyr_player.source.substring(xabber.current_plyr_player.source.lastIndexOf('/')+1)\n                      : xabber.getString(\"chat_message_video\");\n          $title_elem.text(title);\n          if (this.$('.chat-head-player-title')[0] && utils.isOverflownWidth(this.$('.chat-head-player-title')[0])){\n              $title_elem.addClass('active-animation-player-title');\n              $title_elem.text(title + ' ⚫︎︎ ⚫︎︎ ⚫︎︎ ' + title);\n          } else\n              $title_elem.removeClass('active-animation-player-title');\n\n      },\n\n      updateJingleButton: function () {\n          this.$('.btn-jingle-message').switchClass('active-call', xabber.current_voip_call);\n          if (xabber.current_voip_call){\n              this.$('.btn-jingle-message').removeClass('hidden');\n              let voip_status = xabber.current_voip_call.get('status');\n              if (voip_status)\n                  this.$('.btn-jingle-message').attr('data-state', voip_status);\n              else\n                  this.$('.btn-jingle-message').attr('data-state', '');\n              if (voip_status === 'disconnected')\n                  this.$('.btn-jingle-message').removeClass('active-call');\n          } else\n              this.$('.btn-jingle-message').addClass('hidden');\n      },\n\n      openJingleMessage: function () {\n          if (xabber.current_voip_call) {\n              xabber.current_voip_call.modal_view.collapse();\n              return;\n          }\n      },\n  });\n\n  xabber.ChatHeadView = xabber.BasicView.extend({\n    className: 'chat-head-wrap',\n    template: templates.chat_head,\n    avatar_size: constants.AVATAR_SIZES.CHAT_HEAD,\n\n    events: {\n        \"click .chat-head-wrap\": \"showContactDetailsRight\",\n        \"click .chat-head-details\": \"showContactDetailsRight\",\n        \"click .contact-name\": \"showContactDetailsRight\",\n        \"click .circle-avatar\": \"showContactDetailsRight\",\n        \"click .contact-status-message.resource-hover\": \"showContactResources\",\n        \"click .contact-status-message.members-hover\": \"showMembersDetails\",\n        \"click .btn-clear-history\": \"clearHistory\",\n        \"click .btn-invite-users\": \"inviteUsers\",\n        \"click .btn-delete-chat\": \"deleteChat\",\n        \"click .btn-delete-contact\": \"deleteContact\",\n        \"click .btn-block-contact\": \"blockContact\",\n        \"click .btn-unblock-contact\": \"unblockContact\",\n        \"click .btn-export-history\": \"exportHistory\",\n        \"click .btn-show-fingerprints\": \"showFingerprints\",\n        \"click .btn-start-encryption\": \"startEncryptedChat\",\n        \"click .btn-open-encrypted-chat\": \"openEncryptedChat\",\n        \"click .btn-open-regular-chat\": \"openRegularChat\",\n        \"click .btn-chat-pin\": \"pinChat\",\n        \"click .btn-archive-chat\": \"archiveChat\",\n        \"click .btn-call-attention\": \"callAttention\",\n        \"click .btn-search-messages\": \"renderSearchPanel\",\n        \"click .btn-jingle-message\": \"sendJingleMessage\",\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-notifications.muted\": \"unmuteChat\",\n        \"click .btn-set-status\": \"setStatus\",\n        \"click .btn-play-pause-plyr\": \"playPausePlyr\",\n        \"click .btn-next-plyr\": \"nextPlyr\",\n        \"click .btn-previous-plyr\": \"previousPlyr\",\n        \"click .btn-stop-plyr\": \"stopPlyr\",\n        \"click .btn-popup-plyr\": \"popupPlyr\",\n    },\n\n    _initialize: function (options) {\n        this.content = options.content;\n        this.contact = this.content.contact;\n        this.model = this.content.model;\n        this.account = this.model.account;\n        this.resources_view = new xabber.ContactResourcesRightView({model: this.contact.resources});\n        this.updateName();\n        this.updateStatus();\n        this.updateEncrypted();\n        this.updateAvatar();\n        this.updateNotifications();\n        this.updateArchived();\n        this.updatePinned();\n        this.model.on(\"change:encrypted\", this.updateEncrypted, this);\n        this.model.on(\"close_chat\", this.closeChat, this);\n        this.model.on(\"hide_chat\", this.hideChat, this);\n        this.model.on(\"pinned\", this.pinChat, this);\n        this.model.on(\"change:muted\", this.updateNotifications, this);\n        this.model.on(\"change:archived\", this.updateArchived, this);\n        this.model.on(\"change:pinned\", this.updatePinned, this);\n        this.contact.on(\"change\", this.onContactChanged, this);\n        this.contact.on(\"archive_chat\", this.archiveChat, this);\n        this.contact.on(\"change:name\", this.updateName, this);\n        this.contact.on(\"change:status\", this.updateStatus, this);\n        this.contact.on(\"change:status_updated\", this.updateStatus, this);\n        this.contact.on(\"change:image\", this.updateAvatar, this);\n        this.contact.on(\"change:blocked\", this.onChangedBlocked, this);\n        this.contact.on(\"change:group_chat\", this.updateGroupChatHead, this);\n        this.contact.on(\"change:subscription\", this.updateMenu, this);\n        this.contact.on(\"change:in_roster\", this.updateMenu, this);\n        this.contact.on(\"update_trusted\", this.updateEncryptedColor, this);\n        xabber._settings.on(\"change:jingle_calls\", this.updateGroupChatHead, this);\n        xabber.on('change:audio', this.updateGroupChatHead, this);\n        xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n        xabber.on('update_layout', this.updatePlyrTitle, this);\n        xabber.on('plyr_player_time_updated', this.updatePlyrTime, this);\n        xabber.on(\"update_jingle_button\", this.updateJingleButton, this);\n    },\n\n    render: function (options) {\n        this.$('.tooltipped').tooltip('remove');\n        this.$('.tooltipped').tooltip({delay: 50});\n        this.$('.btn-more').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.btn-notifications').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: true, // Activate on hover\n            belowOrigin: true, // Displays dropdown below the button\n        });\n        this.$('.chat-head-menu').hide();\n        this.updateStatusMsg();\n        this.updateGroupChatHead();\n        if (this.contact.get('group_chat'))\n            this.$('.contact-status-message').addClass('members-hover')\n        else\n            this.$('.contact-status-message').addClass('resource-hover')\n        this.updatePlyrControls();\n        this.updatePlyrTime();\n        this.updateJingleButton();\n        return this;\n    },\n\n    updateEncrypted: function () {\n        this.$el.switchClass('encrypted', this.model.get('encrypted'));\n    },\n\n    updateEncryptedColor: function (encrypted) {\n        this.$el.attr('data-trust', encrypted);\n    },\n\n    updateName: function () {\n        this.$('.contact-name').text(this.contact.get('name'));\n    },\n\n    updateStatus: function () {\n        let status = this.contact.get('status'),\n            status_message = this.contact.getStatusMessage();\n        this.$('.contact-status').attr('data-status', status);\n        this.$('.chat-icon').attr('data-status', status);\n        this.model.get('blocked') ? this.$('.contact-status-message').text('Contact blocked') : this.$('.contact-status-message').text(status_message);\n    },\n\n    updateStatusMsg: function () {\n        this.$('.contact-status-message').text(this.contact.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    onContactChanged: function () {\n        let changed = this.contact.changed;\n        if (_.has(changed, 'subscription_request_in') || _.has(changed, 'subscription_request_out') || _.has(changed, 'subscription') || _.has(changed, 'status_message'))\n            this.updateStatusMsg();\n        if (_.has(changed, 'private_chat') || _.has(changed, 'incognito_chat') || _.has(changed, 'invitation'))\n            this.updateIcon();\n    },\n\n    onChangedBlocked: function () {\n        this.updateMenu();\n        this.updateStatusMsg();\n        this.updateIcon();\n    },\n\n    updateMenu: function () {\n        let is_group_chat = this.contact.get('group_chat');\n        this.$('.btn-invite-users').showIf(is_group_chat && !this.contact.get('private_chat') && this.contact.get('subscription') == 'both');\n        this.$('.btn-call-attention').hideIf(is_group_chat || this.model.get('encrypted'));\n        this.$('.btn-clear-history').hideIf(is_group_chat);\n        this.$('.btn-start-encryption').showIf(!is_group_chat && this.account.omemo && !this.model.get('encrypted') && !this.account.chats.get(`${this.contact.hash_id}:encrypted`));\n        this.$('.btn-open-encrypted-chat').showIf(!is_group_chat && this.account.omemo && !this.model.get('encrypted') && this.account.chats.get(`${this.contact.hash_id}:encrypted`));\n        this.$('.btn-open-regular-chat').showIf(this.model.get('encrypted'));\n        this.$('.btn-show-fingerprints').showIf(!is_group_chat && this.account.omemo && this.model.get('encrypted'));\n        this.$('.btn-retract-own-messages').showIf(is_group_chat);\n        this.$('.btn-block-contact').hideIf(this.contact.get('blocked'));\n        this.$('.btn-unblock-contact').showIf(this.contact.get('blocked'));\n        this.$('.btn-delete-contact').showIf(this.contact.get('in_roster') && !is_group_chat);\n        this.$('.btn-notifications').hideIf(this.contact.get('blocked'));\n        this.$('.btn-jingle-message').hideIf((this.contact.get('blocked') || is_group_chat) && xabber.current_voip_call);\n        this.$('.btn-jingle-message').hideIf(!xabber.settings.jingle_calls);\n    },\n\n    renderSearchPanel: function () {\n        this.contact.showDetailsRight('all-chats', {type: 'search'});\n    },\n\n    showContactDetailsRight: function () {\n        this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n    },\n\n    showContactResources: function () {\n        this.resources_view.open();\n    },\n\n    showMembersDetails: function () {\n        this.contact.showDetailsRight('all-chats', {type: 'members'});\n    },\n\n    updatePinned: function () {\n        let pinned = this.model.get('pinned'),\n            is_pinned = pinned && pinned !== '0' ? true : false;\n        if (is_pinned)\n            this.$('.btn-chat-pin .one-line').text(xabber.getString(\"chat_action_unpin\"))\n        else\n            this.$('.btn-chat-pin .one-line').text(xabber.getString(\"chat_action_pin\"))\n    },\n\n    updateNotifications: function () {\n        if (this.model.isMuted()) {\n            this.$('.btn-notifications .one-line').text(xabber.getString(\"chat_action_unmute\"));\n            this.$('.btn-notifications').addClass('muted');\n        }\n        else {\n            this.$('.btn-notifications .one-line').text(xabber.getString(\"chat_action_mute\"));\n            this.$('.btn-notifications').removeClass('muted');\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.model.isMuted());\n        this.$('.btn-unmute-dropdown').hideIf(!this.model.isMuted());\n    },\n\n      muteChat: function (ev) {\n          if (this.contact.get('blocked'))\n              return;\n          let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n              muted_seconds;\n          if (mute_type === 'minutes15')\n              muted_seconds = 900\n          if (mute_type === 'hours1')\n              muted_seconds = 3600\n          if (mute_type === 'hours2')\n              muted_seconds = 7200\n          if (mute_type === 'day')\n              muted_seconds = 86400\n          if (mute_type === 'forever')\n              muted_seconds = 0\n          this.model.muteChat(muted_seconds);\n      },\n\n      unmuteChat: function (ev) {\n          if (this.contact.get('blocked'))\n              return;\n          this.model.muteChat('');\n      },\n\n    callAttention: function (ev) {\n        let msg = $msg({type: 'headline', to: this.contact.get('jid')})\n            .c('attention', {xmlns: Strophe.NS.ATTENTION});\n        this.account.sendMsg(msg);\n        this.model.messages.createSystemMessage({\n            from_jid: this.account.get('jid'),\n            message: xabber.getString(\"action_attention_called\")\n        });\n    },\n\n\n    updateArchived: function () {\n        let archived = !this.model.get('archived'),\n            is_archived = archived ? true : false;\n        if (!is_archived)\n            this.$('.btn-archive-chat .one-line').text(xabber.getString(\"chat_action_unarchive\"))\n        else\n            this.$('.btn-archive-chat .one-line').text(xabber.getString(\"chat_action_archive\"))\n        this.$('.btn-archive-chat .mdi').switchClass('mdi-package-up', !is_archived);\n        this.$('.btn-archive-chat .mdi').switchClass('mdi-package-down', is_archived);\n        if (this.model.item_view && archived){\n            !this.model.messages.length && this.model.item_view.updateLastMessage();\n            this.account.chat_settings.updateArchiveChatsList(this.contact.get('jid'), archived);\n            if (this.model.get('active')) {\n                xabber.chats_view.updateScreenAllChats();\n            }\n        }\n    },\n\n    archiveChat: function (ev, no_iq) {\n        let archived = !this.model.get('archived'),\n            is_archived = archived ? true : false;\n        if (!no_iq) {\n            let is_archived_status = is_archived ? 'archived' : 'active',\n                conversation_options = {\n                    jid: this.contact.get('jid'),\n                    status: is_archived_status,\n                    type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n                },\n                iq = $iq({type: 'set', to: this.account.get('jid')})\n                    .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                    .c('conversation', conversation_options);\n            this.account.sendIQFast(iq);\n            this.model.set('archived', archived);\n        }\n    },\n\n    pinChat: function () {\n        let pinned = this.model.get('pinned'),\n            is_pinned = pinned && pinned !== '0' ? true : false,\n            pinned_value = is_pinned ? '0' : + new Date(),\n            conversation_options = {\n                jid: this.contact.get('jid'),\n                pinned: pinned_value,\n                type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n            },\n            iq = $iq({type: 'set', to: this.account.get('jid')})\n                .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                .c('conversation', conversation_options);\n            this.account.sendIQFast(iq);\n            this.model.set('pinned', pinned_value);\n    },\n\n    sendJingleMessage: function () {\n        if (!xabber.settings.jingle_calls){\n            return;\n        }\n        if (xabber.current_voip_call) {\n            xabber.current_voip_call.modal_view.collapse();\n            return;\n        }\n        xabber.chats_view.scrollToTop();\n        xabber.chats_view.clearSearch();\n        !this.contact.get('group_chat') && this.content.initJingleMessage();\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.contact);\n    },\n\n    playPausePlyr: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        if (xabber.current_plyr_player.$audio_elem){\n            if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n            } else {\n                xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n            }\n        } else\n            xabber.current_plyr_player.togglePlay();\n        xabber.trigger('plyr_player_updated');\n    },\n\n    stopPlyr: function () {\n        if (!xabber.current_plyr_player && xabber.plyr_player_popup)\n            return;\n        xabber.plyr_players.forEach((item) => {\n            if (item.$audio_elem){\n                if (item.$audio_elem.voice_message)\n                    item.$audio_elem.voice_message.stopTime();\n            }\n        });\n        if (xabber.plyr_player_popup)\n            xabber.plyr_player_popup.closePopup();\n        else {\n            xabber.current_plyr_player = null;\n            xabber.trigger('plyr_player_updated');\n        }\n    },\n\n    popupPlyr: function () {\n        if (xabber.plyr_player_popup)\n            xabber.plyr_player_popup.minimizePopup();\n    },\n\n    nextPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n            let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n            if (!next_item.$audio_elem.voice_message){\n                let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                next_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n        }\n    },\n\n    previousPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n            let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n            if (!prev_item.$audio_elem.voice_message){\n                let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                prev_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n        }\n    },\n\n    updatePlyrControls: function () {\n        this.$('.chat-tool-player').showIf(xabber.current_plyr_player);\n        this.$el.switchClass('chat-head-player-enabled', xabber.current_plyr_player);\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n            if (xabber.current_plyr_player.$audio_elem.voice_message){\n                let voice_message = xabber.current_plyr_player.$audio_elem.voice_message;\n                this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_voice\"))\n                this.$('.btn-play-pause-plyr .mdi-play').hideIf(voice_message.isPlaying());\n                this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!voice_message.isPlaying());\n                this.$('.btn-play-pause-plyr').switchClass('active-plyr', voice_message.isPlaying());\n                // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', voice_message.isPlaying());\n                this.$('.btn-previous-plyr').switchClass('before-active-plyr', voice_message.isPlaying());\n                let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n                this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                this.$('.mdi-player-type-icon').addClass('hidden');\n                this.$('.player-poster').addClass('hidden');\n                this.$('.voice-message-player-avatar').removeClass('hidden');\n                this.$('.voice-message-player-avatar').setAvatar(xabber.current_plyr_player.contact_avatar, 32);\n                this.updatePlyrTitle();\n                let duration = Math.round(voice_message.getDuration());\n                this.$('.chat-head-player-total-time').text(utils.pretty_duration(duration));\n                let timerId = setInterval(function() {\n                    let cur_time = Math.round(voice_message.getCurrentTime());\n                    if (voice_message.isPlaying())\n                        this.$('.chat-head-player-current-time').text(utils.pretty_duration(cur_time));\n                    else\n                        clearInterval(timerId);\n                }, 100);\n                (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.addClass('hidden2');\n                (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).addClass('hidden2');\n            }\n        }\n        else if (xabber.current_plyr_player) {\n            this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n            this.$('.chat-head-player-total-time').text(utils.pretty_duration(parseInt(xabber.current_plyr_player.duration)));\n            this.updatePlyrTitle();\n            let poster = xabber.current_plyr_player.poster;\n            if (poster){\n                this.$('.mdi-player-type-icon').addClass('hidden');\n                this.$('.player-poster').removeClass('hidden');\n                this.$('.player-poster').attr(\"src\", poster);\n            } else {\n                this.$('.mdi-player-type-icon').removeClass('hidden');\n                this.$('.player-poster').addClass('hidden');\n            }\n            this.$('.voice-message-player-avatar').addClass('hidden');\n            if (xabber.current_plyr_player.provider != 'html5')\n                this.$('.chat-head-player-type').text(xabber.current_plyr_player.provider)\n            else\n                this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_video\"))\n            this.$('.btn-play-pause-plyr .mdi-play').hideIf(xabber.current_plyr_player.playing);\n            this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!xabber.current_plyr_player.playing);\n            this.$('.btn-play-pause-plyr').switchClass('active-plyr', xabber.current_plyr_player.playing);\n            // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', xabber.current_plyr_player.playing);\n            this.$('.btn-previous-plyr').switchClass('before-active-plyr', xabber.current_plyr_player.playing);\n            let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n            this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n            this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n            (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.removeClass('hidden2');\n            (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).removeClass('hidden2');\n        }\n    },\n\n    updatePlyrTime: function () {\n        if (xabber.current_plyr_player){\n            if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n            }\n            else if (!isNaN(xabber.current_plyr_player.currentTime))\n                this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n        }\n    },\n\n    updatePlyrTitle: function () {\n        if (!xabber.current_plyr_player)\n            return\n        let $title_elem = this.$('.chat-head-player-title .chat-head-player-title-text'),\n            title;\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            title = xabber.current_plyr_player.author;\n        else if (xabber.current_plyr_player)\n            title = xabber.current_plyr_player.config.title ?\n                xabber.current_plyr_player.config.title :\n                xabber.current_plyr_player.provider === 'html5' ?\n                    xabber.current_plyr_player.source.substring(xabber.current_plyr_player.source.lastIndexOf('/')+1)\n                    : xabber.getString(\"chat_message_video\");\n        $title_elem.text(title);\n        if (this.$('.chat-head-player-title')[0] && utils.isOverflownWidth(this.$('.chat-head-player-title')[0])){\n            $title_elem.addClass('active-animation-player-title');\n            $title_elem.text(title + ' ⚫︎︎ ⚫︎︎ ⚫︎︎ ' + title);\n        } else\n            $title_elem.removeClass('active-animation-player-title');\n\n    },\n\n\n    updateJingleButton: function () {\n        this.$('.btn-jingle-message').switchClass('active-call', xabber.current_voip_call);\n        if (xabber.current_voip_call){\n            this.contact.get('group_chat') && this.$('.btn-jingle-message').removeClass('hidden');\n            let voip_status = xabber.current_voip_call.get('status');\n            if (voip_status)\n                this.$('.btn-jingle-message').attr('data-state', voip_status);\n            else\n                this.$('.btn-jingle-message').attr('data-state', '');\n            if (voip_status === 'disconnected')\n                this.$('.btn-jingle-message').removeClass('active-call');\n        } else if (this.contact.get('group_chat'))\n            this.$('.btn-jingle-message').addClass('hidden');\n    },\n\n    getActiveScreen: function () {\n        let active_screen = xabber.toolbar_view.$('.active');\n        this.$('.omemo-item').removeClass('hidden');\n        if (active_screen.hasClass('archive-chats')) {\n            xabber.toolbar_view.showArchive();\n            return;\n        }\n        if (active_screen.hasClass('all-chats')) {\n            xabber.toolbar_view.showAllChats();\n            return;\n        }\n        if (active_screen.hasClass('chats')) {\n            xabber.toolbar_view.showChats();\n            return;\n        }\n        if (active_screen.hasClass('group-chats')) {\n            xabber.toolbar_view.showGroupChats();\n            return;\n        }\n        if (active_screen.hasClass('account-item')) {\n            xabber.toolbar_view.showChatsByAccount();\n            return;\n        }\n    },\n\n    updateGroupChatHead: function () {\n        let is_group_chat = this.contact.get('group_chat');\n        this.updateIcon();\n        this.$('.btn-jingle-message').showIf(!is_group_chat && xabber.get('audio') || xabber.current_voip_call);\n        this.$('.btn-jingle-message').hideIf(!xabber.settings.jingle_calls);\n        this.$('.contact-status').hideIf(is_group_chat);\n        this.updateMenu();\n    },\n\n    updateIcon: function () {\n        this.$('.chat-icon').addClass('hidden');\n        let ic_name = this.contact.getIcon();\n        ic_name && this.$('.chat-icon').removeClass('hidden group-invite blocked').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n    },\n\n    inviteUsers: function () {\n        if (!xabber.invite_panel)\n            xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n        xabber.invite_panel.open(this.account, this.contact);\n    },\n\n    clearHistory: function () {\n        this.content.clearHistory();\n        xabber.chats_view.clearSearch();\n    },\n\n    leaveGroupChat: function () {\n        this.contact.declineSubscription();\n        this.contact.removeFromRoster();\n        this.contact.set('in_roster', false);\n    },\n\n    closeChat: function () {\n        this.model.set({'opened': false, 'display': false, 'active': false});\n        xabber.chats_view.clearSearch();\n    },\n\n    hideChat: function () {\n        this.model.set({'active': false});\n        xabber.chats_view.clearSearch();\n    },\n\n    deleteChat: function () {\n        if (this.contact.get('group_chat')) {\n            utils.dialogs.ask(xabber.getString(\"delete_chat\"), xabber.getString(\"dialog_group_remove__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n                if (result) {\n                    let scrolled_top = xabber.chats_view.getScrollTop() || 0;\n                    (this.account.connection && this.account.connection.do_synchronization) && this.model.deleteFromSynchronization();\n                    this.leaveGroupChat();\n                    this.closeChat();\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                    xabber.chats_view.scrollTo(scrolled_top);\n                }\n            });\n        }\n        else {\n            let rewrite_support = this.account.server_features.get(Strophe.NS.REWRITE);\n            utils.dialogs.ask(xabber.getString(\"delete_chat\"), xabber.getString(\"delete_chat_dialog_message\") +\n            (rewrite_support ? \"\" : `\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')}`), null, { ok_button_text: rewrite_support? xabber.getString(\"delete\") : xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((result) => {\n                if (result) {\n                    let scrolled_top = xabber.chats_view.getScrollTop() || 0;\n                    if (rewrite_support) {\n                        this.model.retractAllMessages(false);\n                    }\n                    if (this.account.connection && this.account.connection.do_synchronization) {\n                        this.model.deleteFromSynchronization();\n                    }\n                    else {\n                        let all_messages = this.model.messages.models;\n                        $(all_messages).each((idx, item) => {\n                            this.content.removeMessage(item);\n                        });\n                    }\n                    this.closeChat();\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                    xabber.chats_view.scrollTo(scrolled_top);\n                }\n            });\n        }\n    },\n\n    deleteContact: function () {\n        this.contact.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.contact.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.contact.unblockWithDialog();\n    },\n\n    exportHistory: function () {\n\n    },\n\n    showFingerprints: function () {\n        if (!this.account.omemo)\n            return;\n        let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n        peer.fingerprints.open();\n    },\n\n    startEncryptedChat: function () {\n        this.account.chats.openChat(this.contact, {encrypted: true});\n        let chat = this.account.chats.get(this.contact.hash_id + ':encrypted');\n        chat.set('timestamp', moment.now());\n        chat.item_view.updateLastMessage();\n    },\n\n    openEncryptedChat: function () {\n        this.model.set('opened', true);\n        this.account.chats.openChat(this.contact, {encrypted: true});\n    },\n\n    openRegularChat: function () {\n        this.model.set('opened', true);\n        this.account.chats.openChat(this.contact);\n    }\n});\n\n\n  xabber.SendMediaView = xabber.BasicView.extend({\n      className: 'modal main-modal avatar-picker background-panel',\n      template: templates.send_media,\n      ps_selector: '.modal-content',\n      ps_settings: {theme: 'item-list'},\n\n      events: {\n          \"click .menu-btn\": \"updateActiveMenu\",\n          \"click .library-wrap .image-item\": \"setActiveImage\",\n          'change input[type=\"file\"]': \"onFileInputChanged\",\n          'keyup input.url': \"onInputChanged\",\n          \"click .btn-add\": \"addMedia\",\n          \"click .btn-cancel\": \"close\"\n      },\n\n      _initialize: function () {\n          this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n      },\n\n      render: function (options) {\n          this.model = options.model;\n          this.parent = options.parent;\n          this.createLibrary();\n          this.$('.menu-btn').removeClass('active');\n          this.$('.menu-btn[data-screen-name=\"upload\"]').addClass('active');\n          this.$('.modal-header span').text(xabber.getString(\"chat_bottom__tooltip_add_media\"));\n          this.$el.openModal({\n              ready: () => {\n                  this.$('.modal-content').perfectScrollbar({theme: 'item-list'});\n              },\n              complete: this.close.bind(this)\n          });\n          let draggable = this.$('.upload-wrap');\n          draggable[0].ondragenter = function (ev) {\n              ev.preventDefault();\n              draggable.addClass('file-drop');\n          };\n          draggable[0].ondragover = function (ev) {\n              ev.preventDefault();\n          };\n          draggable[0].ondragleave = function (ev) {\n              if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                  return;\n              ev.preventDefault();\n              draggable.removeClass('file-drop');\n          };\n          draggable[0].ondrop = (ev) => {\n              ev.preventDefault();\n              ev.stopPropagation();\n              draggable.removeClass('file-drop');\n              let files = ev.dataTransfer.files || [];\n              this.parent.view.addFileMessage(files);\n              this.close();\n          };\n      },\n\n      onPaste: function (ev) {\n          let url = ev.clipboardData.getData('text').trim();\n          this.$('.image-preview img')[0].onload = () => {\n              this.$('.image-preview img').removeClass('hidden');\n              this.updateActiveButton();\n          };\n          this.$('.image-preview img').addClass('hidden')[0].src = url;\n          this.updateActiveButton();\n      },\n\n      updateActiveMenu: function (ev) {\n          let screen_name = ev.target.getAttribute('data-screen-name');\n          this.$('.menu-btn').removeClass('active');\n          this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n          this.updateScreen(screen_name);\n      },\n\n      updateScreen: function (name) {\n          this.$('.screen-wrap').addClass('hidden');\n          this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n          this.scrollToTop();\n          this.updateActiveButton();\n      },\n\n      updateActiveButton: function () {\n          let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n              non_active = true;\n          if ($active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video') {\n              $active_screen.find('div.active').length && (non_active = false);\n          } else {\n              $active_screen.find('img:not(.hidden)').length && (non_active = false);\n          }\n          this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n      },\n\n      renderFiles: function (response) {\n          this.$(`.library-wrap[data-screen=\"${response.type}\"] .preloader-wrapper`).remove()\n          if (response.items.length){\n              response.items.forEach((item) => {\n                  let img = $(`<div class=\"image-item\"/>`);\n                  img.css('background-image', `url(\"${item.thumbnail.url}\")`);\n                  img.attr('data-src', item.file);\n                  img.attr('data-name', item.name);\n                  this.$(`.library-wrap[data-screen=\"${response.type}\"]`).append(img);\n              });\n          }\n      },\n\n      createLibrary: function () {\n          this.model.testGalleryTokenExpire(() => {\n              if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n                  this.$('.library-wrap').html(env.templates.contacts.preloader())\n                  $.ajax({\n                      type: 'GET',\n                      headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                      url: this.model.get('gallery_url') + 'v1/files/',\n                      dataType: 'json',\n                      contentType: \"application/json\",\n                      data: {obj_per_page: 50, order_by: '-id', type: 'image'},\n                      success: (response) => {\n                          console.log(response)\n                          response.type = 'image'\n                          this.renderFiles(response)\n                      },\n                      error: (response) => {\n                          this.model.handleCommonGalleryErrors(response)\n                          console.log(response)\n                          this.$('.library-wrap[data-screen=\"image\"] .preloader-wrapper').remove()\n                      }\n                  });\n                  $.ajax({\n                      type: 'GET',\n                      headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                      url: this.model.get('gallery_url') + 'v1/files/',\n                      dataType: 'json',\n                      contentType: \"application/json\",\n                      data: {obj_per_page: 50, order_by: '-id', type: 'video'},\n                      success: (response) => {\n                          console.log(response)\n                          response.type = 'video'\n                          this.renderFiles(response)\n                      },\n                      error: (response) => {\n                          this.model.handleCommonGalleryErrors(response)\n                          console.log(response)\n                          this.$('.library-wrap[data-screen=\"video\"] .preloader-wrapper').remove()\n                      }\n                  });\n              }\n          });\n      },\n\n      setActiveImage: function (ev) {\n          let $target = $(ev.target),\n              $active_screen = this.$('.screen-wrap:not(.hidden)');\n          if ($target.hasClass('active'))\n              $target.removeClass('active');\n          else {\n              this.$('.library-wrap>div').removeClass('active');\n              $target.addClass('active');\n          }\n          this.updateActiveButton();\n      },\n\n      onFileInputChanged: function (ev) {\n          let target = ev.target,\n              files = [];\n          for (let i = 0; i < target.files.length; i++) {\n              files.push(target.files[i]);\n          }\n\n          if (files && files.length) {\n              this.parent.view.addFileMessage(files);\n              $(target).val('');\n              this.close();\n          }\n      },\n\n      onInputChanged: function (ev) {\n          if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n              return;\n          if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n              let url = ev.target.value.trim();\n              this.$('.image-preview img')[0].onload = () => {\n                  this.$('.image-preview img').removeClass('hidden');\n                  this.updateActiveButton();\n              };\n              this.$('.image-preview img').addClass('hidden')[0].src = url;\n              this.updateActiveButton();\n          } else {\n              this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n              this.updateActiveButton();\n          }\n      },\n\n      addMedia: function () {\n          if (this.$('.btn-add').hasClass('non-active'))\n              return;\n          let file, filename, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n          dfd.done((resolved_file) => {\n              this.parent.view.addFileMessage([resolved_file])\n              this.close();\n          });\n          this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n          this.$('.btn-add').addClass('hidden-disabled');\n          if ($active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' || $active_screen.attr('data-screen') == 'web-address') {\n              file = $active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' ?\n                  $active_screen.find('div.active').attr('data-src') :\n                  $active_screen.find('img:not(.hidden)')[0].src;\n              filename = $active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' ?\n                  $active_screen.find('div.active').attr('data-name') : '';\n\n              this.createFileFromURL(file, filename).then((file) => {\n                  dfd.resolve(file);\n              })\n          } else\n              dfd.resolve(this.current_file);\n      },\n\n      createFileFromURL: async function (url, filename) {\n          let response = await fetch(url);\n          let data = await response.blob();\n          let metadata = {\n              type: data.type\n          };\n          let file = new File([data], filename || url.split('#').shift().split('?').shift().split('/').pop() || 'file', metadata);\n          return file\n      },\n\n      close: function () {\n          this.$el.closeModal({ complete: () => {\n                  this.$el.detach();\n                  this.data.set('visible', false);\n              }\n          });\n      }\n  });\n\nxabber.ChatLocationView = xabber.BasicView.extend({\n    className: 'modal main-modal chat-location ',\n    template: templates.location_popup,\n\n    events: {\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-apply\": \"sendLocation\",\n        \"click #map canvas\": \"closeLocationName\",\n        \"click .nominatim.ol-search input\": \"initializeScrollbar\",\n        \"focusout .nominatim.ol-search input\": \"destroyScrollbar\",\n    },\n\n    _initialize: function (options) {\n        this.view = options.content;\n        this.model = this.view.model;\n        this.account = this.view.account;\n\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                this.initMap();\n                Materialize.updateTextFields();\n            },\n            complete: this.hide.bind(this)\n        });\n    },\n\n    initMap: function () {\n        import('ol-local').then(ol => {\n            ol = ol.default ? ol.default : ol;\n            this.$el.find('.modal-content').switchClass('popup', xabber.popup_coordinates);\n\n            let layers = [ new ol.layer.Tile({ source: new ol.source.OSM() }) ],\n                coordinates = xabber.popup_coordinates ? ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857') : [-9639318.435625363, 1667475.03690917],\n                zoom = xabber.popup_coordinates ? 15 : 0,\n                placemark = new ol.Overlay.Placemark ({\n                    // backgroundColor : 'yellow',\n                    contentColor: '#000',\n                    autoPan: true,\n                    html: '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"48px\" height=\"48px\" viewBox=\"0 0 24 30\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/map-marker\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"36\" height=\"36\"></rect><path d=\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\" id=\"mdi:map-marker\" fill=\"#000000\" fill-rule=\"nonzero\"></path></g></svg>',\n                    anchor: false,\n                    autoPanAnimation: { duration: 250 }\n                }),\n                placemark_my_location = new ol.Overlay.Placemark ({\n                    // backgroundColor : 'yellow',\n                    contentColor: '#000',\n                    autoPan: true,\n                    html: '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"36px\" height=\"36px\"><circle class=\"outer\" cx=\"20\" cy=\"20\" r=\"16\" stroke=\"none\" stroke-width=\"1.5\" fill=\"none\" style=\"opacity: 0.6;\"></circle><circle class=\"inner\" cx=\"20\" cy=\"20\" r=\"8\" stroke=\"white\" stroke-width=\"1.5\" fill=\"none\"></circle></svg>',\n                    anchor: false,\n                    autoPanAnimation: { duration: 250 }\n                });\n\n            let map = new ol.Map\n            ({\ttarget: 'map',\n                view: new ol.View\n                ({\tzoom: zoom,\n                    center: coordinates\n                }),\n                interactions: ol.interaction_defaults({ altShiftDragRotate:false, pinchRotate:false }),\n                layers: layers,\n                overlays: [placemark, placemark_my_location]\n            });\n\n            let getCurrentPositionControl = function (e) {\n                navigator.geolocation.getCurrentPosition(success, error, options);\n            };\n\n            let options = {\n                enableHighAccuracy: true,\n                timeout: 5000,\n                maximumAge: 0\n            };\n\n            function success(pos) {\n                let crd = pos.coords;\n                map.getView().setCenter(ol.proj.transform([crd.longitude, crd.latitude], 'EPSG:4326', 'EPSG:3857'));\n                placemark_my_location.show(ol.proj.transform([crd.longitude, crd.latitude], 'EPSG:4326', 'EPSG:3857'));\n                map.getView().setZoom(17);\n                button_geoposition.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/crosshairs-gps\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"22\" height=\"22\"></rect><path d=\"M12,8 C14.209139,8 16,9.790861 16,12 C16,14.209139 14.209139,16 12,16 C9.790861,16 8,14.209139 8,12 C8,9.790861 9.790861,8 12,8 M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\" id=\"mdi:crosshairs-gps\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n            };\n\n            function error(err) {\n                console.warn(`ERROR(${err.code}): ${err.message}`);\n            };\n\n            let button_geoposition = document.createElement('button');\n            button_geoposition.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/crosshairs-question\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"22\" height=\"22\"></rect><path d=\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13,5 5,8.13 5,12 C5,15.87 8.13,19 12,19 C15.87,19 19,15.87 19,12 C19,8.13 15.87,5 12,5 M11.13,17.25 L12.88,17.25 L12.88,15.5 L11.13,15.5 L11.13,17.25 M12,6.75 C10.07,6.75 8.5,8.32 8.5,10.25 L10.25,10.25 C10.25,9.28 11.03,8.5 12,8.5 C12.97,8.5 13.75,9.28 13.75,10.25 C13.75,12 11.13,11.78 11.13,14.63 L12.88,14.63 C12.88,12.66 15.5,12.44 15.5,10.25 C15.5,8.32 13.93,6.75 12,6.75 Z\" id=\"mdi:crosshairs-question\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n\n\n            button_geoposition.addEventListener('click', getCurrentPositionControl, false);\n\n            let custom_element_position = document.createElement('div');\n\n            if (xabber.popup_coordinates) {\n                custom_element_position.className = 'geoposition placemark-exist ol-control ol-unselectable';\n            }\n            else {\n                custom_element_position.className = 'geoposition ol-control ol-unselectable';\n            }\n            custom_element_position.appendChild(button_geoposition);\n\n            let geoposition = new ol.control.Control({\n                className: 'myControl',\n                element: custom_element_position,\n                target: document.getElementById(\"myCustomControl\")\n            });\n\n            map.addControl(geoposition);\n\n            if (xabber.popup_coordinates) {\n                placemark.show(ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857'));\n                $('.ol-zoom.ol-unselectable.ol-control').addClass('placemark-exist');\n                let getPlacemarkPositionControl = function (e) {\n                    map.getView().setCenter(ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857'));\n                    map.getView().setZoom(15);\n                    $('.ol-location').show()\n\n                };\n\n                let button_placemark_position = document.createElement('button');\n                button_placemark_position.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/map-marker\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"36\" height=\"36\"></rect><path d=\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\" id=\"mdi:map-marker\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n\n\n                button_placemark_position.addEventListener('click', getPlacemarkPositionControl, false);\n\n                let custom_element_placemark_position = document.createElement('div');\n                custom_element_placemark_position.className = 'placemark-position ol-control ol-unselectable';\n                custom_element_placemark_position.appendChild(button_placemark_position);\n\n                let placemark_position = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_placemark_position,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(placemark_position);\n\n                let custom_element_show_location_name = document.createElement('div');\n                custom_element_show_location_name.innerHTML = xabber.location_name || '';\n\n\n                custom_element_show_location_name.className = 'ol-location ol-control ol-unselectable';\n\n                let show_location_name = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_show_location_name,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(show_location_name);\n\n            }\n\n            if (!xabber.popup_coordinates) {\n\n                let send_buttom = document.createElement('button');\n                send_buttom.className = 'btn-apply mdi mdi-28px mdi-send';\n\n                let send_address_div = document.createElement('div');\n                send_address_div.setAttribute(\"id\", \"send_address\");\n                send_address_div.className = 'ol-send-address';\n\n                let send_div = document.createElement('div');\n                send_div.setAttribute(\"id\", \"send_text\");\n                send_div.className = 'ol-send-text';\n\n                let custom_element_send = document.createElement('div');\n                custom_element_send.className = 'ol-send ol-control ol-unselectable';\n                custom_element_send.appendChild(send_address_div);\n                custom_element_send.appendChild(send_div);\n                custom_element_send.appendChild(send_buttom);\n\n                let send = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_send,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(send);\n\n                let sLayer = new ol.layer.Vector({\n                    source: new ol.source.Vector(),\n                    style: new ol.style.Style({\n                        image: new ol.style.Circle({\n                            radius: 5,\n                            stroke: new ol.style.Stroke ({\n                                color: 'rgb(255,165,0)',\n                                width: 3\n                            }),\n                            fill: new ol.style.Fill({\n                                color: 'rgba(255,165,0,.3)'\n                            })\n                        }),\n                        stroke: new ol.style.Stroke ({\n                            color: 'rgb(255,165,0)',\n                            width: 3\n                        }),\n                        fill: new ol.style.Fill({\n                            color: 'rgba(255,165,0,.3)'\n                        })\n                    })\n                });\n\n                map.addLayer(sLayer);\n\n                let search = new ol.control.SearchNominatim (\n                    {\t//target: $(\".options\").get(0),\n                        polygon: $(\"#polygon\").prop(\"checked\"),\n                        reverse: true,\n                        position: true\t// Search, with priority to geo position\n                    });\n\n                map.addControl (search);\n\n                search.on('select', function(e){\n                    sLayer.getSource().clear();\n                    // Check if we get a geojson to describe the search\n                    if (e.search.geojson) {\n                        let format = new ol.format.GeoJSON();\n                        let f = format.readFeature(e.search.geojson, { dataProjection: \"EPSG:4326\", featureProjection: map.getView().getProjection() });\n                        sLayer.getSource().addFeature(f);\n                        let view = map.getView();\n                        let resolution = view.getResolutionForExtent(f.getGeometry().getExtent(), map.getSize());\n                        let zoom = view.getZoomForResolution(resolution);\n                        let center = ol.extent.getCenter(f.getGeometry().getExtent());\n                        // redraw before zoom\n                        setTimeout(function(){\n                            view.animate({\n                                center: center,\n                                zoom: Math.min (zoom, 16)\n                            });\n                        }, 100);\n                    }\n                    else {\n                        map.getView().animate({\n                            center:e.coordinate,\n                            zoom: Math.max (map.getView().getZoom(),16)\n                        });\n                    }\n                });\n\n                function reverseGeocode(json) {\n                    if (!json[0].error) {\n                        let house_number = json[0].address.house_number ? ' ' + json[0].address.house_number : '',\n                            road = json[0].address.road ? json[0].address.road + house_number + ', ' : '',\n                            state = json[0].address.state ? json[0].address.state + ', ' : '',\n                            neighbourhood = json[0].address.neighbourhood ? json[0].address.neighbourhood + ', ' : '',\n                            allotments = json[0].address.allotments ? json[0].address.allotments + ', ' : '',\n                            village = json[0].address.village ? json[0].address.village + ', ' : '',\n                            city = json[0].address.city ? json[0].address.city + ', ' : '',\n                            country = json[0].address.country ? state + json[0].address.country : '',\n                            final_text = ''\n                        if ( !road ){\n                            final_text = neighbourhood + allotments + village + city + country\n                        }\n                        else {\n                            final_text = road + neighbourhood + allotments + village + city + state.replace(', ','')\n                        }\n                        $('#send_address').text(final_text);\n                    }\n                    else {\n                        $('#send_address').text(xabber.getString(\"location_fragment__address_error__title\"));\n                    }\n                }\n\n                map.on('click', function(e) {\n                    placemark.show(e.coordinate);\n                    search.reverseGeocode(e.coordinate, reverseGeocode);\n                    let coordinates = ol.proj.transform(e.coordinate, map.getView().getProjection(), 'EPSG:4326');\n                    $('.ol-control.ol-send').show();\n                    $('#send_text').text(coordinates[1].toFixed(6) + ':' + coordinates[0].toFixed(6));\n                    $('#output').text('geo:' + coordinates[1] + ',' + coordinates[0]);\n                    $('#lat').text(coordinates[1]);\n                    $('#lon').text(coordinates[0]);\n                });\n            }\n            window.setTimeout(function () { map.updateSize(); }, 200)\n        });\n    },\n\n    sendLocation: function (e) {\n        if (this.$('#output').val()) {\n            let body = this.$('#output').val(),\n                legacy_body = '',\n                start_idx = legacy_body.length,\n                end_idx = (body + legacy_body).length,\n                lat = this.$('#lat').val(),\n                lon = this.$('#lon').val(),\n                locations = [{\n                        lat: lat,\n                        lon: lon\n                    }],\n                mutable_content = [{\n                    start: start_idx,\n                    end: end_idx,\n                    type: 'geolocation'\n                    }],\n                attrs = {\n                    from_jid: this.account.get('jid'),\n                    locations: locations,\n                    mutable_content: mutable_content,\n                    message: this.$('#output').val(),\n                    begin: start_idx,\n                    end: end_idx\n                },\n                message = this.model.messages.create(attrs),\n                msg_id = message.get('msgid'),\n                stanza = $msg({\n                    to: this.model.get('jid'),\n                    type: 'chat',\n                    id: msg_id\n                });\n            stanza.c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up();\n            stanza.c('origin-id', {id: msg_id, xmlns: 'urn:xmpp:sid:0'}).up();\n            stanza.c('reference', {\n                xmlns: Strophe.NS.REFERENCE,\n                type: 'mutable',\n                begin: start_idx,\n                end: end_idx\n            }).c('geoloc', {\n                xmlns: Strophe.NS.GEOLOC,\n            }).c('lat').t(lat).up().c('lon').t(lon).up().up().up();\n            stanza.c('body').t(body).up();\n            if (this.model.get('encrypted') && this.account.omemo) {\n                stanza.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n                if ($(stanza.tree()).children('body').length) {\n                    stanza.cnode($(stanza.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                    $(stanza.tree()).children('body').detach()\n                }\n                if ($(stanza.tree()).children('reference').length) {\n                    $(stanza.tree()).children('reference').each((idx, reference) => {\n                        stanza.cnode($(stanza.tree()).children('reference')[idx]).up()\n                    });\n                    $(stanza.tree()).children('reference').detach()\n                }\n                stanza.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n                stanza.c('from', {jid: this.account.get('jid')}).up().up()\n                message.set({xml: $(stanza.tree()).clone()[0]});\n                this.account.omemo.encrypt(this.model.contact, stanza).then((msg) => {\n                    if (msg) {\n                        stanza = msg.message;\n                        message.set('trusted', msg.is_trusted);\n                    }\n                    this.account.sendMsg(stanza);\n                });\n            } else {\n                message.set({xml: $(stanza.tree()).clone()[0]});\n                this.account.sendMsg(stanza);\n            }\n        }\n        this.close();\n    },\n\n    closeLocationName: function (e) {\n        this.$el.find('.ol-location').hide()\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    initializeScrollbar: function () {\n        this.ps_container = this.$('.nominatim.ol-search');\n        this.ps_container.perfectScrollbar(\n            _.extend(this.ps_settings || {}, xabber.ps_settings)\n        );\n    },\n\n    destroyScrollbar: function () {\n        this.ps_container = this.$('.nominatim.ol-search');\n        this.ps_container.perfectScrollbar('destroy');\n    },\n});\n\nxabber.ChatBottomView = xabber.BasicView.extend({\n    className: 'chat-bottom-wrap',\n    ps_selector: '.message-reference-preview-container',\n    template: templates.chat_bottom,\n    avatar_size: constants.AVATAR_SIZES.CHAT_BOTTOM,\n    mention_avatar_size: constants.AVATAR_SIZES.MENTION_ITEM,\n\n    events: {\n        \"click\": \"onClickBottom\",\n        \"click .ql-editor\": \"focusOnInput\",\n        \"click .my-avatar\": \"showAccountSettings\",\n        \"keyup .input-message .rich-textarea\": \"keyUp\",\n        \"keydown .input-message .rich-textarea\": \"keyDown\",\n        \"change .attach-file input\": \"onFileInputChanged\",\n        \"click .attach-location\": \"showLocationPopup\",\n        \"click .attach-media\": \"showMediaPopup\",\n        \"mouseup .message-input-panel\": \"stopWritingVoiceMessage\",\n        \"mousedown .attach-voice-message\": \"writeVoiceMessage\",\n        \"click .chat-mention\": \"onMentionButtonClick\",\n        \"click .close-forward\": \"unsetForwardedMessages\",\n        \"click .close-attachments\": \"removeAttachments\",\n        \"click .send-message\": \"submit\",\n        \"click .markup-text\": \"onShowMarkupPanel\",\n        \"click .reply-message\": \"replyMessages\",\n        \"click .forward-message\": \"forwardMessages\",\n        \"click .pin-message\": \"pinMessage\",\n        \"click .copy-message\": \"copyMessages\",\n        \"click .edit-message\": \"showEditPanel\",\n        \"click .delete-message\": \"deleteMessages\",\n        \"click .close-message-panel\": \"resetSelectedMessages\",\n        \"click .mention-item\": \"inputMention\",\n        \"click .format-text\": \"updateMarkupPanel\",\n        \"click .link-message-reference .mdi-close\": \"removeLinkReference\",\n        \"click .preview-preloader-container .preview-cancel-preloader\": \"stopLoadingLinkReference\",\n        \"click .message-reference-preview-item-file .mdi-close\": \"removeFileSnippet\",\n        \"click .btn-manage-devices\": \"openDevicesWindow\"\n    },\n\n    _initialize: function (options) {\n        this.view = options.content;\n        this.model = this.view.model;\n        this.click_counter = 0;\n        let rich_textarea_wrap = this.$('.rich-textarea-wrap');\n        let bindings = {\n            enter: {\n                key: 13,\n                handler: function(range) {\n                    if (xabber.settings.hotkeys !== \"enter\")\n                        this.quill.insertText(range.index, \"\\n\");\n                }\n            },\n            arrow_up: {\n                key: constants.KEY_ARROW_UP,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none') {\n                        let active_item = this.$('.mentions-list').children('.active.mention-item');\n                        if (active_item.length)  {\n                            let $prev_elem = active_item.prev('.mention-item');\n                            active_item.removeClass('active');\n                            if (!$prev_elem.length) {\n                                $prev_elem = this.$('.mentions-list').children('.mention-item').last().addClass('active');\n                                this.$('.mentions-list')[0].scrollTop = this.$('.mentions-list')[0].scrollHeight;\n                            }\n                            $prev_elem.addClass('active');\n                            if ($prev_elem.length && ($prev_elem[0].offsetTop <= this.$('.mentions-list')[0].scrollTop))\n                                this.$('.mentions-list')[0].scrollTop = $prev_elem[0].offsetTop;\n                        }\n                        else {\n                            this.$('.mentions-list')[0].scrollTop = this.$('.mentions-list')[0].scrollHeight;\n                            this.$('.mentions-list').children('.mention-item').last().addClass('active');\n                        }\n                        return false;\n                    }\n                    else\n                        return true;\n                }\n            },\n            arrow_down: {\n                key: constants.KEY_ARROW_DOWN,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none') {\n                        let active_item = this.$('.mentions-list').children('.active.mention-item');\n                        if (active_item.length) {\n                            let $next_elem = active_item.next('.mention-item');\n                            active_item.removeClass('active');\n                            if (!$next_elem.length) {\n                                $next_elem = this.$('.mentions-list').children('.mention-item').first();\n                                this.$('.mentions-list')[0].scrollTop = 0;\n                            }\n                            $next_elem.addClass('active');\n                            if ($next_elem.length && ($next_elem[0].offsetTop + $next_elem[0].clientHeight >= this.$('.mentions-list')[0].scrollTop + this.$('.mentions-list')[0].clientHeight))\n                                this.$('.mentions-list')[0].scrollTop = $next_elem[0].offsetTop - this.$('.mentions-list')[0].clientHeight + $next_elem[0].clientHeight;\n                        }\n                        else {\n                            this.$('.mentions-list')[0].scrollTop = 0;\n                            this.$('.mentions-list').children('.mention-item').first().addClass('active');\n                        }\n                        return false;\n                    }\n                    else\n                        return true;\n                }\n            },\n            arrow_left: {\n                key: constants.KEY_ARROW_LEFT,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none')\n                        return false;\n                    else\n                        return true;\n                }\n            },\n            arrow_right: {\n                key: constants.KEY_ARROW_RIGHT,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none')\n                        return false;\n                    else\n                        return true;\n                }\n            }\n        };\n        this.quill = new Quill(rich_textarea_wrap[0], {\n            modules: {\n                keyboard: {\n                    bindings: bindings\n                },\n                toolbar: [\n                    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n                    this.model.get('group_chat') ? ['mention'] : [],\n                    ['clean']\n                ]\n            },\n            formats: ['bold', 'italic', 'underline', 'strike', 'blockquote', 'clean', 'emoji', 'mention'],\n            placeholder: xabber.getString(this.model.get('encrypted') ? \"chat_bottom__hint_default_encrypted\" : \"chat_bottom__hint_default\"),\n            scrollingContainer: '.rich-textarea',\n            theme: 'snow'\n        });\n        this.quill.container.firstChild.classList.add('rich-textarea');\n        this.$('.ql-mention').prop('disabled', true);\n        this.$('.ql-mention').append('<div class=\"chat-mention\" =\"\">@</div>');\n        this.contact = this.view.contact;\n        this.account = this.view.account;\n        this.fwd_messages = [];\n        this.edit_message = null;\n        this.stopped_loading_link_reference = false;\n        this.link_references = [];\n        this.link_reference_exempted = [];\n        this.currently_loaded_link_references = [];\n        this.attached_files = [];\n        this.loading_link_reference = false;\n        this.$('.account-jid').text(this.account.get('jid'));\n        this.updateAvatar();\n        this.quill.on(\"text-change\", this.onChangedText, this);\n        this.account.on(\"change:image\", this.updateAvatar, this);\n        this.account.on('trusting_updated', this.updateEncrypted, this);\n        if (this.contact) {\n            this.contact.on(\"change:blocked\", this.onBlockedUpdate, this);\n            this.contact.on('update_my_info', this.updateInfoInBottom, this);\n        }\n        this.model.on(\"reply_selected_messages\", this.replyMessages, this);\n        this.model.on(\"forward_selected_messages\", this.forwardMessages, this);\n        this.model.on(\"copy_selected_messages\", this.copyMessages, this);\n        this.model.on(\"delete_selected_messages\", this.deleteMessages, this);\n        this.model.on(\"edit_selected_message\", this.showEditPanel, this);\n        this.model.on(\"pin_selected_message\", this.pinMessage, this);\n        this.model.on(\"reset_selected_messages\", this.resetSelectedMessages, this);\n        this.content_view = (this.view.data.get('visible') ? this.view : this.model.messages_view) || this.view;\n        let $rich_textarea = this.$('.input-message .rich-textarea'),\n            rich_textarea = $rich_textarea[0],\n            $rich_textarea_wrap = $rich_textarea.parent('.rich-textarea-wrap'),\n            $placeholder = $rich_textarea.siblings('.placeholder');\n        rich_textarea.onpaste = this.onPaste.bind(this);\n        rich_textarea.oncut = this.onCut.bind(this);\n        rich_textarea.ondragenter = (ev) => {\n            ev.preventDefault();\n            $placeholder.text(xabber.getString(\"chat_bottom__drag_and_drop__text_drop_files_here\"));\n            $rich_textarea_wrap.addClass('file-drop');\n        };\n        rich_textarea.ondragover = (ev) => {\n            ev.preventDefault();\n        };\n        rich_textarea.ondragleave = (ev) => {\n            if ($(ev.relatedTarget).closest('.rich-textarea').length)\n                return;\n            ev.preventDefault();\n            $placeholder.text(xabber.getString(\"chat_bottom__hint_default\"));\n            $rich_textarea_wrap.removeClass('file-drop');\n        };\n        rich_textarea.ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            $placeholder.text(xabber.getString(\"chat_bottom__hint_default\"));\n            $rich_textarea_wrap.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [];\n            this.view.addFileMessage(files);\n        };\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        let onloaded_sprites = 0,\n            i = 0,\n            all_sprites = Object.keys(Emoji.all).length;\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`);\n            $(`<div id=${emoji_list} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: emoji_list})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: emoji_list, title: xabber.getString(constants.EMOJI_LIST_NAME(emoji_list)), tag_name: 'a', emoji_size: 20}));\n            let img = new Image();\n            img.onload = () => {\n                onloaded_sprites++;\n                (onloaded_sprites === all_sprites) && $emoji_panel_wrap.find('.uploading-emoticons').detach();\n            };\n            img.src = constants.ASSETS_URL_PREFIX + 'assets/images/emoji/spritesheet' + i++ + '.png';\n        }\n        let window_onclick = function (ev) {\n            if ($(ev.target).closest('.emoticons-panel-wrap').length || $(ev.target).closest('.insert-emoticon').length)\n                return;\n            $emoji_panel_wrap.removeClass('opened');\n            window.removeEventListener(\"click\" , window_onclick);\n        };\n        $emoji_panel.perfectScrollbar(\n                _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.click((ev) => {\n            if (_timeout)\n                clearTimeout(_timeout);\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if ($emoji_panel_wrap.hasClass('opened')) {\n                $emoji_panel_wrap.removeClass('opened');\n                window.removeEventListener( \"click\" , window_onclick);\n            }\n            else {\n                $emoji_panel_wrap.addClass('opened');\n                window.addEventListener( \"click\" , window_onclick);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(() => {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout)\n                clearTimeout(_timeout);\n            if (ev.button)\n                return;\n            let $target = $(ev.target),\n                $target_emoji = $target.closest('.emoji-wrap').find('.emoji');\n            if ($target.closest('.emoji-menu').length)\n                return;\n            $target_emoji.length && this.typeEmoticon($target_emoji.data('emoji'));\n        });\n        this.renderLastEmoticons();\n    },\n\n    render: function (options) {\n        this.$('.message-input-panel').hideIf(options.blocked);\n        this.$('.blocked-msg').showIf(options.blocked);\n        this.$el.switchClass('chat-bottom-blocked-wrap', options.blocked);\n        this.updateAvatar();\n        this.updateEncrypted();\n        let http_upload = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD);\n        this.content_view = (this.view.data.get('visible') ? this.view : this.model.messages_view) || this.view;\n        this.messages_arr = this.content_view.$el.hasClass('participant-messages-wrap') && this.account.participant_messages || this.content_view.$el.hasClass('messages-context-wrap') && this.account.context_messages || this.model.messages;\n        this.renderLastEmoticons();\n        this.$('.attach-file').showIf(http_upload);\n        this.$('.attach-location').showIf(xabber.settings.mapping_service);\n        this.$('.attach-media').showIf(this.account.get('gallery_token') && this.account.get('gallery_url'));\n        this.$('.ql-toolbar.ql-snow').switchClass('ql-moved-left', !xabber.settings.mapping_service || !(this.account.get('gallery_token') && this.account.get('gallery_url')));\n        this.$('.ql-toolbar.ql-snow').switchClass('ql-moved-left-extra', !xabber.settings.mapping_service && !(this.account.get('gallery_token') && this.account.get('gallery_url')));\n        if (this.model.get('group_chat')) {\n            this.updateInfoInBottom();\n        }\n        else {\n            this.$('.account-nickname').hide();\n            this.$('.account-badge').hide();\n            this.$('.account-role').hide();\n        }\n        this.focusOnInput();\n        this.manageSelectedMessages();\n        xabber.chat_body.updateHeight();\n        return this;\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.message-actions-panel .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        (Math.max.apply(null, widths) !== 0) && this.$('.message-actions-panel .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    updateEncrypted: function () {\n        this.$el.children('.preloader-wrapper').detach();\n        this.$el.children('.omemo-disabled').detach();\n        this.view.$el.removeClass('encrypted');\n        this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').addClass('hidden').removeClass('encryption-warning').html(\"\");\n        this.$el.attr('data-trust', null);\n        this.$el.attr('data-contact-trust', null);\n        this.$el.find('.warning-wrap').detach();\n        if (!this.model.get('encrypted'))\n            return;\n        if (this.account.omemo) {\n            this.$el.addClass('loading');\n            this.$el.prepend(env.templates.contacts.preloader());\n            this.account.omemo.checkOwnFingerprints().then((is_trusted) => {\n                if (is_trusted == 'none' || is_trusted == 'error') {\n                    let is_scrolled_bottom = this.view.isScrolledToBottom();\n                    this.$el.attr('data-trust', is_trusted);\n                    this.view.$('.chat-message:not([data-trust=untrusted])').attr('data-trust', is_trusted);\n                    this.view.$('.chat-day-indicator:not(.fixed-day-indicator-wrap)').attr('data-trust', is_trusted);\n                    this.view.$el.attr('data-trust', is_trusted);\n                    this.$el.removeClass('loading');\n                    this.$el.children('.preloader-wrapper').detach();\n                    if (is_trusted == 'none')\n                        this.$el.prepend(templates.encryption_warning({color: 'amber', message: xabber.getString(\"omemo__alert_new_device_yours__text_new_device\")}));\n                    else\n                        this.$el.prepend(templates.encryption_warning({color: 'red', message: xabber.getString(\"omemo__alert_keys_changed_yours__text_keys_changed\")}));\n                    xabber.chat_body.updateHeight();\n                    is_scrolled_bottom && this.view.scrollToBottom();\n                    this.account.omemo.checkContactFingerprints(this.contact);\n                    (this.model.get('active') && this.model.get('display')) && this.focusOnInput();\n                } else {\n                    this.account.omemo.checkContactFingerprints(this.contact).then((obj) => {\n                        let is_contact_trusted = obj.trust,\n                            unverified_counter = obj.unverified_counter;\n                        let is_scrolled_bottom = this.view.isScrolledToBottom();\n                        this.$el.removeClass('loading');\n                        this.$el.children('.preloader-wrapper').detach();\n                        if (is_contact_trusted === 'nil') {\n                            this.$el.prepend($(`<div class=\"warning-wrap no-fingerprints\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                            return;\n                        }\n                        if (is_contact_trusted === 'error') {\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                            this.$el.prepend(templates.encryption_warning({color: 'red', message: xabber.getString(\"omemo__alert_keys_changed_partner__text_keys_changed\")}));\n                        } else {\n                            if (is_contact_trusted === 'none') {\n                                this.view.$el.addClass('encrypted');\n                                this.view.$('.chat-notification').removeClass('hidden').addClass('encryption-warning').attr('data-unverified-device-count', unverified_counter).html(templates.content_encryption_warning({message: xabber.getString(\"omemo__alert_new_device_partner__text_new_device\")}));\n                            }\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                        }\n                        this.view.$el.attr('data-trust', is_contact_trusted);\n                        this.view.$('.chat-message:not([data-trust=untrusted])').attr('data-trust', is_contact_trusted);\n                        this.view.$('.chat-day-indicator:not(.fixed-day-indicator-wrap)').attr('data-trust', is_contact_trusted);\n                        xabber.chat_body.updateHeight();\n                        is_scrolled_bottom && this.view.scrollToBottom();\n                        (this.model.get('active') && this.model.get('display')) && this.focusOnInput();\n                    });\n                }\n            });\n        } else {\n            this.$el.addClass('loading');\n            this.$el.prepend($('<div class=\"omemo-disabled warning-wrap\"/>').text(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\")));\n        }\n    },\n\n    openDevicesWindow: function () {\n        if (this.account.omemo) {\n            if (this.$el.attr('data-trust') !== undefined) {\n                this.account.showSettings(null, 'devices');\n            } else if (this.$el.attr('data-contact-trust') !== undefined) {\n                let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n                peer.fingerprints.open();\n            }\n        } else\n            utils.dialogs.error(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\"));\n    },\n\n    onBlockedUpdate: function () {\n        if (!this.isVisible())\n            return;\n        let is_blocked = this.model.get('blocked');\n        this.$('.message-input-panel').hideIf(is_blocked);\n        this.$('.blocked-msg').showIf(is_blocked);\n        this.$el.switchClass('chat-bottom-blocked-wrap', is_blocked);\n    },\n\n    onClickBottom: function (ev) {\n        if ($(ev.target).closest('.ql-editor.rich-textarea').length) {\n            if (!this.quill.getText().trim().length) {\n                if (++this.click_counter === 3) {\n                    this.click_counter = 0;\n                    this.setOneLiner();\n                }\n            }\n        }\n    },\n\n    updateInfoInBottom: function () {\n        if (this.contact && this.contact.my_info) {\n            let nickname = this.contact.my_info.get('nickname'),\n                badge = this.contact.my_info.get('badge'),\n                avatar = this.contact.my_info.get('b64_avatar'),\n                role = this.contact.my_info.get('role');\n            if (nickname) {\n                this.$('.account-jid').hide();\n                this.$('.account-nickname').show().text(nickname);\n            }\n            else\n                this.$('.account-nickname').hide();\n            if (badge)\n                this.$('.account-badge').show().text(badge);\n            else\n                this.$('.account-badge').hide();\n            if (role && role != 'member')\n                this.$('.account-role').show().text(utils.pretty_name(role));\n            else\n                this.$('.account-role').hide();\n            this.$('.input-toolbar').emojify('.account-badge', {emoji_size: 16});\n            if (!avatar && this.contact.my_info.get('avatar_url'))\n                avatar = this.contact.my_info.get('avatar_url');\n            if (!avatar && this.account.cached_image)\n                avatar = this.account.cached_image;\n            !avatar && (avatar = Images.getDefaultAvatar(nickname));\n            this.$('.my-avatar.circle-avatar').setAvatar(avatar, this.avatar_size);\n        }\n        else {\n            this.$('.account-jid').show();\n            this.$('.account-nickname').hide();\n            this.$('.account-badge').hide();\n            this.$('.account-role').hide();\n        }\n    },\n\n    updateAvatar: function () {\n        let image;\n        if (this.contact && this.contact.get('group_chat')) {\n            if (this.contact.my_info){\n                if (this.contact.my_info.get('b64_avatar'))\n                    image = this.contact.my_info.get('b64_avatar');\n                if (!image && this.contact.my_info.get('avatar_url'))\n                    image = this.contact.my_info.get('avatar_url');\n                if (!image && this.account.cached_image)\n                    image = this.account.cached_image;\n            }\n            !image && (image = Images.getDefaultAvatar(this.contact.my_info && this.contact.my_info.nickname || this.account.get('jid')));\n        }\n        else\n            image = this.account.cached_image;\n        this.$('.my-avatar.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    focusOnInput: function () {\n        if (!xabber.body.$el.siblings('#modals').children('.open:not(.collapsed):not(.plyr-player-popup-view)').length){\n            this.quill.enable();\n            this.quill.focus();\n        } else {\n            this.quill.blur();\n            this.quill.disable();\n        }\n        return this;\n    },\n\n    moveCursorToEnd: function () {\n        this.quill.root.focus();\n        let range = document.createRange(),\n            sel = window.getSelection(),\n            target = this.quill.root.lastElementChild\n            && this.quill.root.lastElementChild.lastChild ? this.quill.root.lastElementChild.lastChild : this.quill.root.lastElementChild;\n        range.selectNodeContents(target);\n        range.collapse(false);\n        sel.removeAllRanges();\n        sel.addRange(range);\n        range.detach(); // optimization\n        this.quill.root.scrollTop = this.quill.root.scrollHeight;\n    },\n\n    keyDown: function (ev) {\n        let $rich_textarea = this.$('.input-message .rich-textarea');\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact') ||\n                ev.keyCode === constants.KEY_BACKSPACE ||\n                ev.keyCode === constants.KEY_DELETE) {\n            return;\n        }\n        if (ev.keyCode === constants.KEY_ENTER || ev.keyCode === 10) {\n            if (this.$('.mentions-list').css('display') !== 'none') {\n                let active_item = this.$('.mentions-list').children('.active.mention-item');\n                active_item.length && active_item.click();\n                ev.preventDefault();\n                return;\n            }\n            let send_on_enter = xabber.settings.hotkeys === \"enter\";\n            if ((send_on_enter && ev.keyCode === constants.KEY_ENTER && !ev.shiftKey) ||\n                    (!send_on_enter && ev.ctrlKey)) {\n                ev.preventDefault();\n                this.submit();\n                return;\n            }\n        }\n        if ($rich_textarea.getTextFromRichTextarea().trim() && !this.view.chat_state && !this.view.edit_message && xabber.settings.typing_notifications)\n            this.view.sendChatState('composing');\n    },\n\n    displayMicrophone: function () {\n        this.$('.mdi-send').addClass('hidden');\n        this.$('.attach-voice-message').removeClass('hidden');\n    },\n\n    displaySend: function () {\n        this.$('.mdi-send').removeClass('hidden');\n        this.$('.attach-voice-message').addClass('hidden');\n    },\n\n    updateMarkupPanel: function (ev) {\n        let $ic_markup = $(ev.target).closest('.format-text');\n        $ic_markup.toggleClass('active');\n        if ($ic_markup.hasClass('active')) {\n            this.$('.ql-toolbar.ql-snow').show();\n            this.$('.last-emoticons').hide();\n        }\n        else {\n            this.$('.ql-toolbar.ql-snow').hide();\n            this.$('.last-emoticons').show();\n        }\n    },\n\n    setOneLiner: function () {\n        let rand_idx = _.random(0, xabber.getOneLiners().length - 1),\n            placeholder = xabber.getOneLiners()[rand_idx].replace(/\\\\n/, \"\");\n        if (!placeholder) {\n            this.setOneLiner();\n            return;\n        }\n        this.updatePlaceholder(placeholder);\n    },\n\n    setDefaultPlaceholder: function () {\n        let placeholder = this.model.get('encrypted') ? xabber.getString(\"chat_bottom__hint_default_encrypted\") : xabber.getString(\"chat_bottom__hint_default\");\n        this.updatePlaceholder(placeholder);\n    },\n\n    updatePlaceholder: function (placeholder) {\n        this.quill.root.setAttribute('data-placeholder', placeholder);\n    },\n\n    changeEncryption: function () {\n        this.model.set('encrypted', !this.model.get('encrypted'));\n    },\n\n    getParticipantsList: function () {\n        let list = [];\n        this.contact.participants.each((participant) => {\n            list.push(participant.get('nickname') || participant.get('jid') || participant.get('id'));\n        });\n        return list.join(', ');\n    },\n\n    onChangedText: function () {\n        let current_height = this.$el.height(),\n            quill_textarea = $(this.quill.container).find('.rich-textarea'),\n            quill_current_height = quill_textarea.prop('scrollHeight');\n        if (quill_current_height !== this.text_input_height) {\n            if (this.text_input_height < quill_current_height){\n                quill_textarea.scrollTop(quill_current_height);\n            }\n            this.text_input_height = quill_current_height;\n        }\n        let quill_content = this.quill.getContents()\n        if (quill_content && quill_content.ops && quill_content.ops.length){\n            let text = quill_content.ops[0].insert;\n            if (text && text.trimStart) {\n                let trimmed_text = text.trimStart();\n                if (text.length != trimmed_text.length){\n                    quill_content.ops[0].insert = trimmed_text;\n                    this.quill.setContents(quill_content, 'user');\n                    this.quill.disable();\n                    setTimeout(() => {\n                        this.focusOnInput();\n                        this.quill.root.focus();\n                    },1)\n                }\n            }\n        }\n\n        if (current_height !== this.bottom_height) {\n            this.bottom_height = current_height;\n            this.view.scrolled_to_bottom = this.view.isScrolledToBottom();\n        }\n        clearTimeout(this._timeout_textchange);\n        this._timeout_textchange = setTimeout(() => {\n            this.updateOpenGraphReference(this.quill.getText())\n        }, 500);\n    },\n\n    updateMentionsList: function (mention_text) {\n        mention_text = (mention_text || \"\").toLowerCase();\n        this.contact.searchByParticipants(mention_text, (participants) => {\n            if (participants.length || xabber.getString(\"chat_bottom__mentions_list__item_everyone\").toLowerCase().indexOf(mention_text) > -1 || mention_text === \"*\" || 'all'.indexOf(mention_text) > -1 || 'все'.indexOf(mention_text) > -1) {\n                this.$('.mentions-list').html(\"\").show().perfectScrollbar({theme: 'item-list'});\n                this.$('.mentions-list')[0].scrollTop = 0;\n                participants.forEach((participant) => {\n                    let attrs = _.clone(participant.attributes);\n                    if (!attrs.id)\n                        return;\n                    attrs.nickname = attrs.nickname ? Strophe.xmlescape(attrs.nickname) : attrs.id;\n                    let mention_item = $(templates.group_chats.mention_item(attrs));\n                    mention_item.find('.circle-avatar').setAvatar(participant.get('b64_avatar') || utils.images.getDefaultAvatar(participant.get('nickname') || participant.get('jid') || participant.get('id')), this.mention_avatar_size);\n                    mention_item.find('.nickname').text().replace(mention_text, mention_text.bold());\n                    this.$('.mentions-list').append(mention_item);\n                });\n                let mention_all = $(templates.group_chats.mention_item({jid: \"\", nickname: xabber.getString(\"chat_bottom__mentions_list__item_everyone\"), id: \"\"}));\n                mention_all.find('.circle-avatar').setAvatar(this.contact.cached_image, this.mention_avatar_size);\n                mention_all.find('.one-line.jid').text(this.getParticipantsList());\n                this.$('.mentions-list').append(mention_all);\n                this.$('.mentions-list').children('.mention-item').first().addClass('active');\n            } else\n                this.$('.mentions-list').html(\"\").hide();\n        });\n    },\n\n    onMentionButtonClick: function () {\n        if (this.$('.ql-mention').hasClass('ql-active')){\n            this.$('.ql-mention').prop('disabled', false);\n            this.$('.ql-mention').click();\n            this.$('.ql-mention').prop('disabled', true);\n\n            return;\n        }\n        let selection = this.quill.getSelection() ? this.quill.getSelection().index : (this.quill.getLength() - 1);\n        this.quill.insertText(selection, ' @ ', 'user')\n        this.quill.setSelection(selection + 2, 0)\n        let mention_text = \"\";\n        if (this.contact.participants.length && this.contact.participants.version > 0 && (this.contact.get('group_info') && this.contact.participants && this.contact.get('group_info').members_num == this.contact.participants.length)) {\n            this.updateMentionsList(mention_text);\n        } else {\n            this.contact.participants.participantsRequest({version: 0}, () => {\n                this.updateMentionsList(mention_text);\n            });\n        }\n\n    },\n\n    inputMention: function (ev) {\n        ev && ev.preventDefault();\n        let $rich_textarea = this.$('.rich-textarea'),\n            $participant_item = $(ev.target).closest('.mention-item'),\n            nickname = $participant_item.data('nickname'),\n            id = $participant_item.data('id') || \"\",\n            jid = !this.contact.get('incognito_chat') && $participant_item.data('jid') || \"\",\n            text = $rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\"),\n            caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n            mention_at_regexp = /(^|\\s)@(\\w+)?/g,\n            mention_plus_regexp = /(^|\\s)[+](\\w+)?/g,\n            to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replaceEmoji(),\n            mentions_at = to_caret_text && Array.from(to_caret_text.matchAll(mention_at_regexp)) || [],\n            mentions_plus = to_caret_text && Array.from(to_caret_text.matchAll(mention_plus_regexp)) || [],\n            at_position = mentions_at.length ? mentions_at.slice(-1)[0].index : -1,\n            plus_position = mentions_plus.length ? mentions_plus.slice(-1)[0].index : -1,\n            mention_position = Math.max(at_position, plus_position),\n            mention_text = Array.from(to_caret_text).slice(mention_position, caret_position).join(\"\");\n        (mention_text.length && mention_text[0].match(/\\s/)) && mention_position++;\n        mention_text = mention_text.replace(/\\s?(@|[+])/, \"\");\n        this.$('.mentions-list').hide();\n        this.quill.deleteText(mention_position, (mention_text.length + 1));\n        if (!nickname.length) {\n            if (id.length)\n                nickname = id;\n            else\n                return;\n        }\n        this.insertMention({jid: jid, id: id, nickname: nickname, position: mention_position});\n        this.focusOnInput();\n    },\n\n    insertMention: function (options) {\n        if (!options)\n            return;\n        let id = options.id, jid = options.jid, nickname = options.nickname,\n            is_me = !id && !jid || this.account.get('jid') === jid || this.contact.my_info && this.contact.my_info.get('id') === id,\n            attrs = {jid: jid, id: id, nickname: Strophe.xmlescape(nickname), is_me: is_me},\n            position = options.position;\n        this.quill.insertEmbed(position, 'mention', JSON.stringify(attrs));\n        this.quill.pasteHTML(position + nickname.length, '<text> </text>');\n        this.quill.setSelection(position + nickname.length + 1, 0);\n    },\n\n    showAccountSettings: function () {\n        if (this.contact.get('group_chat')) {\n            if (this.contact.my_info && this.contact.my_rights) {\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(this.contact.my_info, this.contact.my_rights);\n            } else\n                this.contact.getMyInfo(() => {\n                    this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                    this.contact.details_view_right.participants.participant_properties_panel.open(this.contact.my_info, this.contact.my_rights);\n                });\n        } else {\n            this.account.showSettings();\n        }\n    },\n\n    keyUp: function (ev) {\n        let $rich_textarea = $(ev.target).closest('.rich-textarea'),\n            text = $rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\");\n        if (text) {\n            this.click_counter = 0;\n            this.setDefaultPlaceholder();\n        }\n        if (ev.keyCode === constants.KEY_ARROW_UP) {\n            if (!text) {\n                let $msg = this.view.$(`.chat-message[data-from=\"${this.account.get('jid')}\"]`).last();\n                (!$msg.length && this.contact.participants) && ($msg = this.view.$(`.chat-message[data-from=\"${this.contact.participants.find(m => m.get('jid') === this.account.get('jid')).get('id')}\"]`).last());\n                let edit_msg = this.messages_arr.get($msg.data('uniqueid'));\n                if (!edit_msg)\n                    return;\n                this.edit_message = edit_msg;\n                this.setEditedMessageAttachments(edit_msg);\n                this.setEditedMessage(edit_msg);\n            }\n        }\n        if ((!text || text == \"\\n\") && !this.edit_message && !(this.attached_files && this.attached_files.length) && !(this.link_references && this.link_references.length))\n            this.displayMicrophone();\n        else\n            this.displaySend();\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact') && !this.edit_message) {\n            ev.preventDefault();\n            if (this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0) {\n                let $elem = this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').last();\n                if ($elem.hasClass('link-message-reference')){\n                    let url = $elem.attr('data-original-url');\n                    if (url) {\n                        $elem.remove();\n                        this.removeLinkReferenceByUrl(url);\n                    }\n                } else {\n                    let id = $elem.attr('data-id');\n                    if (id) {\n                        $elem.remove();\n                        this.removeFileSnippetById(id);\n                    }\n                }\n            } else {\n                this.unsetForwardedMessages();\n            }\n        } else if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            ev.preventDefault();\n            this.unsetForwardedMessages();\n        } else {\n            if (ev.keyCode === constants.KEY_ARROW_UP || ev.keyCode === constants.KEY_ARROW_DOWN) {\n                return;\n            }\n            if ((ev.keyCode === constants.KEY_ARROW_LEFT || ev.keyCode === constants.KEY_ARROW_RIGHT) && this.$('.mentions-list').css('display') !== 'none') {\n                this.$('.mentions-list').hide();\n                return;\n            }\n            if ((ev.keyCode === constants.KEY_BACKSPACE || ev.keyCode === constants.KEY_DELETE) && !this.edit_message && !(this.attached_files && this.attached_files.length) && !(this.link_references && this.link_references.length)) {\n                if (!text || text == \"\\n\") {\n                    if (this.$('.fwd-messages-preview').hasClass('hidden'))\n                        this.displayMicrophone();\n                    else\n                        this.displaySend();\n                    $rich_textarea.flushRichTextarea();\n                }\n            }\n            if (ev.keyCode === constants.KEY_SPACE) {\n                let caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n                    to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replaceEmoji();\n                if (to_caret_text[caret_position - 2] && to_caret_text[caret_position - 2].match(/@|[+]/)) {\n                    this.$('.mentions-list').hide();\n                    return;\n                }\n            }\n            if (this.model.get('group_chat')) {\n                let caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n                    mention_at_regexp = /(^|\\s)@(\\w+)?/g,\n                    mention_plus_regexp = /(^|\\s)[+](\\w+)?/g,\n                    to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replace(/\\n$/, \"\").replaceEmoji(),\n                    mentions_at = Array.from(to_caret_text.matchAll(mention_at_regexp)),\n                    mentions_plus = Array.from(to_caret_text.matchAll(mention_plus_regexp)),\n                    at_position = mentions_at.length ? mentions_at.slice(-1)[0].index : -1,\n                    plus_position = mentions_plus.length ? mentions_plus.slice(-1)[0].index : -1,\n                    mention_position = Math.max(at_position, plus_position);\n                if (this.quill.selection.lastRange && this.quill.getLeaf(this.quill.selection.lastRange.index)[0].parent.domNode.tagName.toLowerCase() === 'mention') {\n                    this.$('.mentions-list').hide();\n                    return;\n                }\n                if (!(caret_position > -1) || mention_position === -1) {\n                    this.$('.mentions-list').hide();\n                }\n                if (mention_position > -1) {\n                    let mention_text = Array.from(to_caret_text).slice(mention_position, caret_position).join(\"\").replace(/\\s?(@|[+])/, \"\");\n                        if (this.contact.participants.length && this.contact.participants.version > 0 && (this.contact.get('group_info') && this.contact.participants && this.contact.get('group_info').members_num == this.contact.participants.length)) {\n                            this.updateMentionsList(mention_text);\n                        } else {\n                            this.contact.participants.participantsRequest({version: 0}, () => {\n                                this.updateMentionsList(mention_text);\n                            });\n                        }\n                }\n                else\n                    this.$('.mentions-list').hide();\n            }\n        }\n        $rich_textarea.updateRichTextarea();\n        this.focusOnInput();\n        xabber.chat_body.updateHeight();\n    },\n\n    onCut: function () {\n        if (this.$('.fwd-messages-preview').hasClass('hidden'))\n            this.displayMicrophone();\n        else {\n            this.displaySend();\n        }\n    },\n\n    onPaste: function (ev) {\n        ev.preventDefault();\n        let $rich_textarea = $(ev.target),\n            clipboard_data = ev.clipboardData;\n        if (clipboard_data) {\n            if (clipboard_data.files.length > 0) {\n                let image_from_clipboard = clipboard_data.files[clipboard_data.files.length - 1],\n                    blob_image = window.URL.createObjectURL(new Blob([image_from_clipboard])),\n                    options = { blob_image_from_clipboard: blob_image};\n                this.view.addFileMessage([image_from_clipboard]);\n                this.focusOnInput();\n            }\n            else if (clipboard_data.items.length > 0) {\n                let image_from_clipboard = clipboard_data.items[clipboard_data.items.length - 1];\n                if (image_from_clipboard.kind === 'file') {\n                    let blob = image_from_clipboard.getAsFile(),\n                        reader = new FileReader(), deferred = new $.Deferred();\n                    reader.onload = function(event){\n                        let options = { blob_image_from_clipboard: event.target.result};\n                        deferred.resolve();\n                        this.focusOnInput();\n                    };\n                    deferred.done(() => {\n                        blob.name = 'clipboard.png';\n                        this.view.addFileMessage([blob]);\n                    });\n                    reader.readAsDataURL(blob);\n                }\n                else {\n                    let text = _.escape(clipboard_data.getData('text')),\n                        arr_text = Array.from(text);\n                    arr_text.forEach((item, idx) => {\n                        if (item == '\\n')\n                            arr_text.splice(idx, 1, '</p><p>');\n                        if (item == ' ')\n                            arr_text.splice(idx, 1, '&nbsp');\n                    });\n                    text = \"<p>\" + arr_text.join(\"\").emojify({tag_name: 'span'}) + \"</p>\";\n                    let range = window.getSelection().getRangeAt(0);\n                    range.insertNode($('<div>' + text + '</div>')[0]);\n                }\n            }\n            else {\n                let text = _.escape(clipboard_data.getData('text')),\n                    arr_text = Array.from(text);\n                arr_text.forEach((item, idx) => {\n                    if (item == '\\n')\n                        arr_text.splice(idx, 1, '</p><p>');\n                    if (item == ' ')\n                        arr_text.splice(idx, 1, '&nbsp');\n                });\n                text = \"<p>\" + arr_text.join(\"\").emojify({tag_name: 'span'}) + \"</p>\";\n                let range = window.getSelection().getRangeAt(0);\n                range.insertNode($('<div>' + text + '</div>')[0]);\n            }\n        }\n        if ($rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\") && !this.view.chat_state && !this.view.edit_message && xabber.settings.typing_notifications)\n            this.view.sendChatState('composing');\n        this.focusOnInput();\n        this.displaySend();\n        xabber.chat_body.updateHeight();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target,\n            files = [];\n        for (let i = 0; i < target.files.length; i++) {\n            files.push(target.files[i]);\n        }\n\n        if (files && files.length) {\n            this.view.addFileMessage(files);\n            $(target).val('');\n        }\n    },\n\n    updateOpenGraphReference: function (text) {\n        if (!(this.account.get('gallery_token') && this.account.get('gallery_url')))\n            return;\n        let url_regexp = /(((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g,\n            list = text && text.match(url_regexp);\n        list = _.difference(list, this.link_reference_exempted);\n        list = _.difference(list, this.currently_loaded_link_references);\n        if (list && list.length){\n            this.stopped_loading_link_reference = false;\n            this.$('.preview-preloader-container').removeClass('hidden');\n            let request_count = 0;\n            this.link_reference_request_timestamp = Date.now();\n            let request_timestamp = this.link_reference_request_timestamp;\n            list.forEach((item, idx) => {\n                this.account.getOpenGraphData(item, (res) => {\n                    if (this.stopped_loading_link_reference || !(request_timestamp === this.link_reference_request_timestamp))\n                        return;\n                    if (this.currently_loaded_link_references.includes(item)){\n                        request_count++;\n                        if (request_count === list.length)\n                            this.$('.preview-preloader-container').addClass('hidden');\n                        return;\n                    } else {\n                        this.currently_loaded_link_references = this.currently_loaded_link_references.concat([item]);\n                    }\n                    let dfd = new $.Deferred();\n                    dfd.done(() => {\n                        request_count++;\n                        this.displaySend();\n                        this.$('.message-reference-preview').removeClass('hidden');\n                        if (request_count === list.length)\n                            this.$('.preview-preloader-container').addClass('hidden');\n                        res.original_text = item\n                        this.$('.message-reference-preview-container').append($(templates.messages.link_reference({\n                            item: res,\n                            domain: res.url ? utils.getDomainFromUrl(res.url) : res.site_name,\n                            url: null\n                        })));\n                        this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n                            type: 'image',\n                            closeOnContentClick: true,\n                            fixedContentPos: true,\n                            mainClass: 'mfp-no-margins mfp-with-zoom',\n                            image: {\n                                verticalFit: true,\n                                titleSrc: function(item) {\n                                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                                }\n                            },\n                            zoom: {\n                                enabled: true,\n                                duration: 300\n                            }\n                        });\n                        this.link_references = this.link_references.concat(res);\n                        xabber.chat_body.updateHeight();\n                        this.scrollToBottom();\n                    });\n                    if ((res.image_height && res.image_width) || !res.image){\n                        dfd.resolve()\n                    } else {\n                        let img = new Image();\n                        img.onload = (image) => {\n                            res.image_height = img.height;\n                            res.image_width = img.width;\n                            dfd.resolve()\n                        };\n                        img.onerror = img.onabort = (image) => {\n                            res.image = undefined;\n                            dfd.resolve()\n                        };\n                        img.src = res.image;\n                    }\n                }, (err) => {\n                    this.link_reference_exempted = this.link_reference_exempted.concat([item]);\n                    request_count++;\n                    if (request_count === list.length)\n                        this.$('.preview-preloader-container').addClass('hidden');\n                })\n\n            });\n        }\n    },\n\n    removeAttachments: function () {\n        this.removeAllFileSnippets();\n        this.removeAllLinkReferences();\n    },\n\n    stopLoadingLinkReference: function () {\n        this.$('.preview-preloader-container').addClass('hidden');\n        this.stopped_loading_link_reference = true;\n    },\n\n    removeLinkReference: function (ev) {\n        let $elem = $(ev.target).closest('.link-message-reference'),\n            url = $elem.attr('data-original-url');\n        $elem.remove();\n        this.removeLinkReferenceByUrl(url);\n    },\n\n    removeLinkReferenceByUrl: function (url) {\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.link_references = this.link_references.filter(item => item.original_text != url);\n        this.currently_loaded_link_references = this.currently_loaded_link_references.filter(item => item != url);\n        this.link_reference_exempted = this.link_reference_exempted.concat([url]);\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    removeAllLinkReferences: function () {\n        this.stopLoadingLinkReference();\n        this.$('.message-reference-preview-container .link-message-reference').remove();\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.link_references = [];//\n        this.currently_loaded_link_references = [];//\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    addFileSnippets: function (files) {\n        if (files && (this.attached_files.length + files.length) > 10){\n            utils.dialogs.error(xabber.getString(\"too_many_files_at_once\"));\n            return;\n        }\n        if (this.edit_message)\n            return;\n        files && files.length && this.$('.message-reference-preview').removeClass('hidden');\n        files && files.length && this.displaySend();\n        files.forEach((file) => {\n            let id = uuid();\n            file.uid = id;\n            this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                file: file,\n                uid: id,\n                blob: utils.isImageType(file.type) ? file.key ? file.image_prev.src : window.URL.createObjectURL(new Blob([file])) : null,\n                filesize: utils.pretty_size(file.size),\n                typeicon: utils.file_type_icon(file.type),\n                filetype: utils.pretty_file_type(file.type),\n            })));\n            this.attached_files = this.attached_files.concat([file]);\n            xabber.chat_body.updateHeight();\n            this.scrollToBottom();\n        });\n        files && files.length && this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    removeFileSnippet: function (ev) {\n        let $elem = $(ev.target).closest('.message-reference-preview-item-file'),\n            id = $elem.attr('data-id');\n        $elem.remove();\n        this.removeFileSnippetById(id);\n    },\n\n    removeFileSnippetById: function (id) {\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.attached_files = this.attached_files.filter(item => item.uid != id);\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    removeAllFileSnippets: function (ev) {\n        this.$('.message-reference-preview .message-reference-preview-item-file').remove();\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.attached_files = [];\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    setEditedMessageAttachments: function (edit_msg, is_upload) {\n        !is_upload && this.$('.attach-file input').attr('disabled', true);\n        this.removeAllFileSnippets();\n        this.removeAllLinkReferences();\n        let files = edit_msg.get('files') || [],\n            images = edit_msg.get('images') || [],\n            videos = edit_msg.get('videos') || [],\n            link_references = edit_msg.get('link_references') || [];\n        files = files.concat(images).concat(videos);\n        if ((link_references && link_references.length) || (files && files.length)) {\n            this.$('.message-reference-preview').removeClass('hidden');\n            this.displaySend();\n        }\n        link_references.forEach((item) => {\n            this.link_references = this.link_references.concat([item]);\n            this.currently_loaded_link_references = this.currently_loaded_link_references.concat(item.original_text);\n            this.$('.message-reference-preview-container').prepend($(templates.messages.link_reference({\n                item: item,\n                domain: item.url ? utils.getDomainFromUrl(item.url) : item.site_name,\n                url: null\n            })));\n            xabber.chat_body.updateHeight();\n        });\n        files.forEach((file) => {\n            if (!file)\n                return;\n            let id = uuid();\n            file.uid = id;\n            this.attached_files = this.attached_files.concat([file]);\n            if (is_upload){\n                this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                    file: file,\n                    uid: id,\n                    blob: utils.isImageType(file.type) ? file.key ? file.image_prev.src : window.URL.createObjectURL(new Blob([file])) : null,\n                    filesize: utils.pretty_size(file.size),\n                    typeicon: utils.file_type_icon(file.type),\n                    filetype: utils.pretty_file_type(file.type),\n                })));\n            } else{\n                this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                    file: file,\n                    uid: id,\n                    blob: file.sources.length && file.sources[0] && utils.isImageType(file.type) ? file.sources[0] : null,\n                    filesize: utils.pretty_size(file.size),\n                    typeicon: utils.file_type_icon(file.type),\n                    filetype: utils.pretty_file_type(file.type),\n                })));\n            }\n            xabber.chat_body.updateHeight();\n        });\n        ((link_references && link_references.length) || (files && files.length)) && this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    showLocationPopup: function (ev) {\n        if (!xabber.settings.mapping_service)\n            return;xabber\n        xabber.popup_coordinates = undefined;\n        xabber.location_name = undefined;\n        new xabber.ChatLocationView({content: this}).show(ev);\n    },\n\n    showMediaPopup: function (ev) {\n        if (this.edit_message)\n            return;\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let media_view = new xabber.SendMediaView();\n            media_view.render({parent: this, model: this.account});\n        }\n    },\n\n    stopWritingVoiceMessage: function (ev) {\n        let $bottom_panel = this.$('.message-input-panel');\n        if ($bottom_panel.find('.recording').length > 0) {\n            $bottom_panel.find('.recording').removeClass('recording');\n            return;\n        }\n    },\n\n    writeVoiceMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('recording'))\n            $elem.removeClass('recording');\n        else {\n            $elem.addClass('recording ground-color-50');\n            if (!this.model.get('recording_voice_message'))\n                this.initAudio();\n        }\n    },\n\n    initAudio: function() {\n        navigator.getUserMedia = (navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.webkitGetUserMedia || navigator.getUserMedia);\n        if (navigator.getUserMedia) {\n            this.model.set('recording_voice_message', true)\n            let constraints = { audio: true, channelCount: 1 },\n                chunks = [],\n                $mic = this.$('.send-area .attach-voice-message'),\n                onSuccess = (stream) => {\n                if (!$mic.is(\":hover\")) {\n                    $mic.removeClass('recording ground-color-50');\n                    this.model.set('recording_voice_message', false)\n                    return;\n                }\n                let mediaRecorder = new opusRecorder({\n                        encoderPath: opusRecorderEncoderPath,\n                        encoderSampleRate: 16000,\n                        numberOfChannels: 1\n                }),\n                    timer = 1, start_time, end_time,\n                    mic_hover = true;\n                    mediaRecorder.onstart = () => {\n                        if (xabber.settings.typing_notifications) {\n                            this.view.sendChatState('composing', 'voice');\n                            this._chatstate_send_timeout = setInterval(() => {\n                                this.view.sendChatState('composing', 'voice');\n                            }, constants.CHATSTATE_INTERVAL_COMPOSING_AUDIO);\n                        }\n                        start_time = moment.now();\n                        let $bottom_panel = this.$('.message-input-panel'),\n                            $timer_elem = this.$('.input-voice-message .timer'),\n                            $status_msg = this.$('.input-voice-message .voice-msg-status'),\n                            $voice_visualizer = this.$('.input-voice-message .voice-visualizer');\n                        $timer_elem.text('0:00');\n                        $status_msg.css('color', '#9E9E9E').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice\"));\n                        $bottom_panel.addClass('voice-message-recording');\n\n                        let timerId = setInterval(() => {\n                                if ($mic.hasClass('recording') && (timer < constants.VOICE_MSG_TIME)) {\n                                    if (timer%1 == 0)\n                                        $timer_elem.text(utils.pretty_duration(timer));\n                                    timer = (timer*10 + 2)/10;\n                                    mic_hover = $bottom_panel.is(\":hover\");\n                                    if (!mic_hover)\n                                        $status_msg.css('color', '#D32F2F').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice_short\"));\n                                    else\n                                        $status_msg.css('color', '#9E9E9E').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice\"));\n                                }\n                                else\n                                {\n                                    mic_hover = $bottom_panel.is(\":hover\");\n                                    mediaRecorder.stop();\n                                    $mic.removeClass('recording ground-color-50');\n                                    $bottom_panel.removeClass('voice-message-recording');\n                                    this.model.set('recording_voice_message', false)\n                                    clearInterval(timerId);\n                                }\n                            }, 200),\n                            flag = false,\n                            timerIdDot = setInterval(() => {\n                                if ($mic.hasClass('recording')) {\n                                    if (flag)\n                                        $voice_visualizer.css('background-color', '#FFF');\n                                    else\n                                        $voice_visualizer.css('background-color', '#D32F2F');\n                                    flag = !flag;\n                                }\n                                else\n                                    clearInterval(timerIdDot);\n                            }, 500);\n                    };\n\n                    mediaRecorder.start();\n\n                mediaRecorder.onstop = () => {\n                    clearInterval(this._chatstate_send_timeout);\n                    (xabber.settings.typing_notifications) && this.view.sendChatState('paused');\n                    end_time = moment.now();\n                    if (mic_hover && ((end_time - start_time)/1000 >= 1.5)) {\n                        let audio_name = (\"voice message \" + moment().format('YYYY-MM-DD HH:mm:ss') + '.ogg'), audio_type = 'audio/ogg; codecs=opus',\n                            blob = new Blob([chunks], { 'type' : audio_type}),\n                            file = new File([blob], audio_name, {\n                                type: audio_type,\n                            });\n                        file.voice = true;\n                        file.duration = Math.round((end_time - start_time)/1000);\n                        this.view.addFileMessage([file], true);\n                    }\n                    chunks = [];\n                };\n\n                mediaRecorder.ondataavailable = (e) => {\n                    chunks = e;\n                };\n            };\n\n            let onError = (error) => {\n                console.log(xabber.getString(\"file_upload__error\", [error]));\n                $mic.removeClass('recording ground-color-50');\n            };\n\n            window.navigator.getUserMedia(constraints, onSuccess, onError);\n        }\n    },\n\n    typeEmoticon: function (emoji) {\n        if (typeof emoji == 'number')\n            emoji = Number(emoji).toString();\n        let caret_idx = -1;\n        if (this.quill.selection.lastRange)\n            caret_idx = this.quill.selection.lastRange.index;\n        else if (this.quill.selection.savedRange)\n            caret_idx = this.quill.selection.savedRange.index;\n        this.quill.focus();\n        if (!this.edit_message)\n            this.displaySend();\n        (!this.view.chat_state && xabber.settings.typing_notifications) && this.view.sendChatState('composing');\n        this.quill.insertEmbed(caret_idx, 'emoji', emoji);\n        if (this.quill.getFormat(caret_idx, 1).mention) {\n            this.quill.formatText(caret_idx, 1, 'mention', false);\n        }\n        this.quill.setSelection(caret_idx + 1);\n        xabber.chat_body.updateHeight();\n    },\n\n    renderLastEmoticons: function () {\n        let cached_last_emoji = this.account.chat_settings.getLastEmoji(),\n            $last_emoticons = this.$('.last-emoticons').empty(), emoji;\n        if (cached_last_emoji.length < 7) {\n            for (let idx = 0; idx < 7; idx++) {\n                emoji = Emoji.getByIndex(idx);\n                this.account.chat_settings.updateLastEmoji(emoji);\n            }\n        }\n        cached_last_emoji = this.account.chat_settings.getLastEmoji();\n        for (let idx = 0; idx < 7; idx++) {\n            $('<div class=\"emoji-wrap\"/>').html(\n                cached_last_emoji[idx] && cached_last_emoji[idx].emojify({tag_name: 'div', emoji_size: 20})\n            ).appendTo($last_emoticons);\n        }\n        $last_emoticons.find('.emoji-wrap').mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button) {\n                return;\n            }\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            this.typeEmoticon($target.data('emoji'));\n        });\n    },\n\n    submit: function (ev, forced) {\n        let $rich_textarea = this.$('.input-message .rich-textarea'),\n            mentions = [],\n            markup_references = [],\n            blockquotes = [],\n            link_references = this.link_references,\n            attached_files = this.attached_files,\n            text = $rich_textarea.getTextFromRichTextarea(),\n            dfd = new $.Deferred();\n\n\n        if (this.model.get('encrypted') && this.view.$('.chat-notification').hasClass('encryption-warning') && !forced){\n            let unverified_counter = this.view.$('.encryption-warning').attr('data-unverified-device-count');\n            utils.dialogs.ask_extended(xabber.getQuantityString(\"dialog_unverified_devices__header\", unverified_counter || 1), xabber.getQuantityString(\"dialog_unverified_devices__text\", unverified_counter || 1),\n                {modal_class: 'modal-unverified-devices', no_dialog_options: true},\n                { ok_button_text: xabber.getString(\"omemo__alert_new_device__button_manage_devices\"), optional_button: 'send-anyway', optional_button_text: xabber.getString(\"dialog_unverified_devices__send\")})\n                .done((result) => {\n                if (result) {\n                    if (result === 'send-anyway'){\n                        this.submit(ev, true);\n                    }\n                    else{\n                        this.openDevicesWindow();\n                    }\n                }\n            });\n            return;\n        }\n\n        dfd.done(() => {\n            this.$('.mentions-list').html(\"\").hide();\n            $rich_textarea.find('.emoji').each((idx, emoji_item) => {\n                let emoji = emoji_item.innerText;\n                this.account.chat_settings.updateLastEmoji(emoji);\n            });\n            let content_concat = [];\n            if (text.length >= constants.STANZA_MAX_SIZE) {\n                utils.dialogs.error(xabber.getString(\"message__error_big_stanza\"));\n                $rich_textarea.flushRichTextarea();\n                return;\n            }\n            if (text.length) {\n                this.quill.getContents().forEach((content) => {\n                    if (content.attributes) {\n                        let content_attrs = [],\n                            start_idx = content_concat.length,\n                            end_idx = start_idx + ((content.insert && content.insert.emoji) ? 1 : _.escape(content.insert).length);\n                        for (let attr in content.attributes)\n                            (attr !== 'alt' && attr !== 'blockquote') && content_attrs.push(attr);\n                        if (content_attrs.indexOf('mention') > -1) {\n                            let mention_idx = content_attrs.indexOf('mention'),\n                                is_gc = this.contact.get('group_chat'),\n                                target = $($rich_textarea.find('mention')[mentions.length]).attr('data-target');\n                            content_attrs.splice(mention_idx, mention_idx + 1);\n                            target = is_gc ? ('xmpp:' + this.contact.get('jid') + target) : ('xmpp:' + target);\n                            mentions.push({\n                                start: start_idx,\n                                end: end_idx,\n                                target: target,\n                                is_gc: is_gc\n                            });\n                        }\n                        if (content.attributes.blockquote) {\n                            if (content_concat.length) {\n                                Array.from(content.insert).forEach((ins) => {\n                                    let quote_start_idx = (content_concat.lastIndexOf('\\n') < 0) ? 0 : (content_concat.lastIndexOf('\\n') + 1),\n                                        quote_end_idx = content_concat.length;\n                                    blockquotes.push({\n                                        marker: constants.QUOTE_MARKER,\n                                        start: quote_start_idx,\n                                        end: quote_end_idx + constants.QUOTE_MARKER.length\n                                    });\n                                    text = Array.from(_.escape(text));\n\n                                    if (quote_start_idx === quote_end_idx) {\n                                        text[quote_start_idx - 1] += constants.QUOTE_MARKER;\n                                        content_concat[quote_start_idx] = constants.QUOTE_MARKER;\n                                    }\n                                    else {\n                                        text[quote_start_idx] = constants.QUOTE_MARKER + text[quote_start_idx];\n                                        content_concat[quote_start_idx] = constants.QUOTE_MARKER + content_concat[quote_start_idx];\n                                    }\n                                    (quote_end_idx > text.length) && (quote_end_idx = text.length);\n                                    text[quote_end_idx - 1] += '\\n';\n\n                                    text = _.unescape(text.join(\"\"));\n                                    content_concat = Array.from(content_concat.join(\"\"));\n\n                                    markup_references.forEach((markup_ref) => {\n                                        if (markup_ref.start >= quote_start_idx) {\n                                            markup_ref.start += constants.QUOTE_MARKER.length;\n                                            markup_ref.end += constants.QUOTE_MARKER.length;\n                                        }\n                                    });\n\n                                    content_concat = content_concat.concat(Array.from(_.escape(ins)));\n                                })\n                            }\n                        }\n                        content_attrs.length && markup_references.push({\n                            start: start_idx,\n                            end: end_idx,\n                            markup: content_attrs\n                        });\n                    }\n                    if (content.insert && content.insert.emoji) {\n                        content_concat = content_concat.concat(Array.from($(content.insert.emoji).data('emoji')));\n                    }\n                    else if (content.attributes && content.attributes.blockquote) {\n                    }\n                    else\n                        content_concat = content_concat.concat(Array.from(_.escape(content.insert)));\n                });\n            }\n            let start_length = text.length;\n            text = text.trimStart();\n            if (start_length > text.length) {\n                let delta = start_length - text.length;\n                mentions.forEach((mention) => {\n                    mention.start -= delta;\n                    mention.end -= delta;\n                });\n                markup_references.forEach((markup_reference) => {\n                    markup_reference.start -= delta;\n                    markup_reference.end -= delta;\n                });\n                blockquotes.forEach((blockquote) => {\n                    blockquote.start -= delta;\n                    blockquote.end -= delta;\n                });\n            }\n            if (link_references && link_references.length) {\n                link_references = link_references.filter(item => item.original_text);\n                link_references.forEach((link_reference) => {\n                    if (link_reference && link_reference.original_text) {\n                        link_reference.start = text.indexOf(link_reference.original_text);\n                        if (link_reference.start != -1) {\n                            link_reference.start = 0;\n                            link_reference.end = 0;\n                        }\n                    }\n                });\n            }\n            this.removeAllLinkReferences();\n            this.link_reference_exempted = [];\n            this.removeAllFileSnippets();\n            text = text.trimEnd();\n            $rich_textarea.flushRichTextarea();\n            this.quill.focus();\n            this.displayMicrophone();\n            if (this.edit_message) {\n                this.editMessage(text, {mentions: mentions, markup_references: markup_references, link_references: link_references, attached_files: attached_files, blockquotes: blockquotes});\n                $rich_textarea.placeCaretAtEnd();\n                return;\n            }\n            if (text || this.fwd_messages.length || (attached_files && attached_files.length) || (link_references && link_references.length)) {\n                if (this.model.get('saved') && this.fwd_messages.length && !text)\n                    this.fwd_messages.forEach((message) => {\n                        this.view.onSubmit(\"\", [message]);\n                    });\n                else\n                    this.view.onSubmit(text, this.fwd_messages, {mentions: mentions, markup_references: markup_references, link_references: link_references, attached_files: attached_files, blockquotes: blockquotes});\n            }\n            this.unsetForwardedMessages();\n            xabber.chats_view.clearSearch();\n            if (this.model.messages_view)\n                if (this.model.messages_view.data.get('visible'))\n                    xabber.chats_view.openChat(this.model.item_view, {right_contact_save: true, clear_search: true, screen: xabber.body.screen.get('name')});\n            $rich_textarea.placeCaretAtEnd();\n        });\n        if (attached_files && attached_files.length) {\n            let failed_files = [],\n                files_count = 0,\n                file_check_dfd = new $.Deferred();\n            file_check_dfd.done(() => {\n                if (failed_files.length){\n                    failed_files.forEach((file) => {\n                        this.$(`.message-reference-preview-item-file[data-id=\"${file.uid}\"]`).remove();\n                        this.removeFileSnippetById(file.uid);\n                    });\n                    utils.dialogs.error(\n                        '' + _.pluck(failed_files, 'name').join(` — ${xabber.getString(\"message__file_was_deleted__file_label\")}. \\n`) + ` — ${xabber.getString(\"message__file_was_deleted__file_label\")}.`,\n                        {},\n                        xabber.getQuantityString(\"message__file_was_deleted\", failed_files.length)\n                    );\n                    dfd.reject();\n                } else {\n                    dfd.resolve();\n                }\n            });\n            if (!this.edit_message) {\n                attached_files.forEach((file) => {\n                    utils.tryReadingFile(file).then(()=> {\n                        files_count++;\n                        if (attached_files.length === files_count) {\n                            file_check_dfd.resolve();\n                        }\n                    }, ()=> {\n                        failed_files = failed_files.concat([file]);\n                        files_count++;\n                        if (attached_files.length === files_count) {\n                            file_check_dfd.resolve();\n                        }\n                    });\n                });\n            } else {\n                file_check_dfd.resolve();\n            }\n        } else {\n            dfd.resolve();\n        }\n    },\n\n    setEditedMessage: function (message) {\n        this.click_counter = 0;\n        this.setDefaultPlaceholder();\n        let msg_text = message.get('message') || \"\";\n        this.$('.fwd-messages-preview').showIf(this.edit_message);\n        this.$('.fwd-messages-preview .msg-author').text(xabber.getString(\"edit_message__header\"));\n        this.$('.fwd-messages-preview .msg-text').html(Strophe.xmlescape(msg_text));\n        this.$('.fwd-messages-preview').emojify('.msg-text', {emoji_size: 18});\n        this.displaySend();\n        xabber.chat_body.updateHeight();\n        let markup_body = utils.markupBodyMessage(message, 'mention'),\n            emoji_node = markup_body.emojify({tag_name: 'div'}),\n            arr_text = emoji_node.split('\\n');\n        arr_text.forEach((item, idx) => {\n            if (!item.includes('</blockquote>'))\n                arr_text[idx] = '<p>' + arr_text[idx] + '</p>';\n        });\n        emoji_node = arr_text.join(\"\");\n        this.quill.setText(\"\");\n        this.quill.root.innerHTML = emoji_node;\n        this.moveCursorToEnd();\n        this.focusOnInput();\n    },\n\n    setRedactedUploadMessage: function (message) {\n        this.click_counter = 0;\n        this.setDefaultPlaceholder();\n        let msg_text = message.get('message') || \"\";\n        this.displaySend();\n        xabber.chat_body.updateHeight();\n        let markup_body = utils.markupBodyMessage(message, 'mention'),\n            emoji_node = markup_body.emojify({tag_name: 'div'}),\n            arr_text = emoji_node.split('\\n');\n        arr_text.forEach((item, idx) => {\n            if (!item.includes('</blockquote>'))\n                arr_text[idx] = '<p>' + arr_text[idx] + '</p>';\n        });\n        emoji_node = arr_text.join(\"\");\n        this.quill.setText(\"\");\n        this.quill.root.innerHTML = emoji_node;\n        this.moveCursorToEnd();\n        this.focusOnInput();\n    },\n\n    setForwardedMessages: function (messages) {\n        this.fwd_messages = messages || [];\n        this.$('.fwd-messages-preview').showIf(messages.length);\n        if (messages.length) {\n            let msg = messages[0],\n                msg_author, msg_text, image_preview, $img_html_preview;\n            if (messages.length > 1) {\n                msg_text = xabber.getQuantityString(\"forwarded_messages_count\", messages.length);\n            } else {\n                if (msg.get('forwarded_message')) {\n                    msg_text = xabber.getQuantityString(\"forwarded_messages_count\", messages.length);\n                }\n                else {\n                    msg_text = (msg.get('message') || msg.get('original_message')).emojify();\n                    let fwd_images = msg.get('images') || [],\n                        fwd_files = msg.get('files') || [],\n                        fwd_locations = msg.get('locations');\n                    msg.get('videos') && msg.get('videos').length && (fwd_files = fwd_files.concat(msg.get('videos')));\n                    if ((fwd_images && fwd_images.length) && (fwd_files && fwd_files.length)) {\n                        msg_text = fwd_images.length + fwd_files.length + ' attachments';\n                    }\n                    else {\n                        if (fwd_images && fwd_images.length) {\n                            if (fwd_images.length > 1) {\n                                msg_text =xabber.getQuantityString(\"recent_chat__last_message__images\", fwd_images.length);\n                            }\n                            else {\n                                image_preview = _.clone(msg.get('images')[0]);\n                                $img_html_preview = this.createPreviewImage(image_preview);\n                            }\n                        }\n                        if (fwd_files && fwd_files.length) {\n                            if (fwd_files.length > 1) {\n                                msg_text = xabber.getQuantityString(\"recent_chat__last_message__files\", fwd_files.length);\n                            }\n                            else {\n                                let filesize = fwd_files[0].size;\n                                msg_text = filesize ? fwd_files[0].name + \",   \" + filesize : fwd_files[0].name;\n                            }\n                        }\n                        if (fwd_locations && fwd_locations.length) {\n                            if (fwd_locations.length > 1) {\n                                msg_text = xabber.getQuantityString(\"recent_chat__last_message__locations\", fwd_locations.length);\n                            }\n                            else {\n                                msg_text = xabber.getString(\"recent_chat__last_message__locations_plural_0\");\n                            }\n                        }\n                    }\n                }\n            }\n            let from_jid = msg.get('from_jid');\n            if (msg.isSenderMe()) {\n                msg_author = this.account.get('name');\n            } else {\n                msg_author = (msg.get('user_info') && msg.get('user_info').nickname) || (this.account.contacts.get(from_jid) ? this.account.contacts.get(from_jid).get('name') : from_jid);\n            }\n            this.$('.fwd-messages-preview .msg-author').text(msg_author);\n            if (_.isUndefined(image_preview)) {\n                this.$('.fwd-messages-preview .msg-text').html(msg_text);\n            }\n            else {\n                this.$('.fwd-messages-preview .msg-text').html($img_html_preview);\n            }\n        }\n        xabber.chat_body.updateHeight();\n        this.displaySend();\n    },\n\n    onShowMarkupPanel: function (ev) {\n        let $clicked_icon = $(ev.target),\n            is_panel_opened = $clicked_icon.hasClass('opened');\n        this.$('.last-emoticons').showIf(is_panel_opened);\n        this.$('.markup-panel').showIf(!is_panel_opened);\n        $clicked_icon.switchClass('opened', !is_panel_opened);\n    },\n\n    createPreviewImage: function(image) {\n        let imgContent = new Image();\n            imgContent.src = image.sources[0];\n        $(imgContent).addClass('fwd-img-preview');\n        return imgContent;\n    },\n\n    unsetForwardedMessages: function (ev) {\n        ev && ev.preventDefault && ev.preventDefault();\n        let $rich_textarea = this.$('.input-message .rich-textarea');\n        this.fwd_messages = [];\n        if (this.edit_message) {\n            this.removeAllFileSnippets();\n            this.removeAllLinkReferences();\n            this.$('.attach-file input').attr('disabled', false);\n            $rich_textarea.flushRichTextarea();\n        }\n        this.edit_message = null;\n        this.$('.fwd-messages-preview').addClass('hidden');\n        let text = $rich_textarea.getTextFromRichTextarea();\n        if (!text || text == \"\\n\")\n            this.displayMicrophone();\n        else\n            this.displaySend();\n        xabber.chat_body.updateHeight();\n        this.focusOnInput();\n    },\n\n    resetSelectedMessages: function () {\n        this.content_view.$('.chat-message.selected').removeClass('selected');\n        this.manageSelectedMessages();\n    },\n\n    manageSelectedMessages: function () {\n        let $selected_msgs = this.content_view.$('.chat-message.selected'),\n            $input_panel = this.$('.message-input-panel'),\n            $message_actions = this.$('.message-actions-panel');\n            length = $selected_msgs.length;\n        $input_panel.hideIf(this.model.get('blocked') || length);\n        $message_actions.showIf(length);\n        this.model.get('blocked') && this.$('.blocked-msg').hideIf(length);\n        if (length) {\n            this.setButtonsWidth();\n            let my_msg = false;\n            if (length === 1) {\n                if ($selected_msgs.first().data('from') === this.account.get('jid'))\n                    my_msg = true;\n                if (this.contact && this.contact.my_info)\n                    if ($selected_msgs.first().data('from') === this.contact.my_info.get('id'))\n                        my_msg = true;\n                if ($selected_msgs.first().find('.mdi-play').length)\n                    my_msg = false;\n            }\n            $message_actions.find('.pin-message-wrap').showIf(this.model.get('group_chat')).switchClass('non-active', ((length !== 1) && this.model.get('group_chat')));\n            $message_actions.find('.reply-message-wrap').switchClass('non-active', this.model.get('blocked'));\n            $message_actions.find('.forward-message-wrap').switchClass('non-active', this.model.get('encrypted'));\n            $message_actions.find('.edit-message-wrap').switchClass('non-active', !((length === 1) && my_msg) || this.content_view.$('.chat-message.saved-main.selected').length || this.model.get('blocked'));\n            !this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').removeClass('hidden').addClass('msgs-counter').text(xabber.getQuantityString(\"chat_screen__bottom_panel__selected_messages__text\", length));\n        } else {\n            !this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').addClass('hidden').removeClass('msgs-counter').text(\"\");\n            this.focusOnInput();\n        }\n    },\n\n    pinMessage: function () {\n        if (!this.model.get('active'))\n            return;\n        if (this.$('.pin-message-wrap').hasClass('non-active'))\n            return;\n        let $msg = this.content_view.$('.chat-message.selected').first(),\n            pinned_msg = this.messages_arr.get($msg.data('uniqueid')),\n            msg_id = pinned_msg.get('stanza_id');\n        this.resetSelectedMessages();\n        let iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('update', {xmlns: Strophe.NS.GROUP_CHAT})\n            .c('pinned-message').t(msg_id);\n        this.account.sendIQFast(iq, () => {},\n            (error) => {\n                if ($(error).find('not-allowed').length)\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            });\n    },\n\n    copyMessages: function () {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            msg && msgs.push(msg);\n        });\n        this.resetSelectedMessages();\n        this.pushMessagesToClipboard(msgs);\n    },\n\n    editMessage: function (text, text_markups) {\n        let original_body = Array.from(Strophe.xmlescape(this.edit_message.get('original_message') || \"\")),\n            forwarded_body = \"\",\n            mutable_refs = this.edit_message.get('mutable_content') || [],\n            groupchat_ref = mutable_refs && mutable_refs.find(item => item.type === 'groupchat'),\n            stanza_id = this.edit_message.get('stanza_id'),\n            forward_ref = mutable_refs && mutable_refs.filter(item => item.type === 'forward'),\n            markups = text_markups.markup_references || [],\n            files = text_markups.attached_files || [],\n            link_references = text_markups.link_references || [],\n            blockquotes = text_markups.blockquotes || [],\n            mentions = text_markups.mentions || [],\n            iq = $iq({type: 'set', to: (this.contact && this.contact.get('group_chat')) ? this.contact.get('jid') : this.account.get('jid')}).c('replace', {\n                xmlns: Strophe.NS.REWRITE,\n                type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model),\n                id: stanza_id\n            }),\n            $message = $build('message').attrs({xmlns: undefined});\n        forward_ref && forward_ref.forEach((fwd, idx) => {\n            let fwd_msg = this.edit_message.get('forwarded_message')[idx],\n                gc_length = groupchat_ref && (groupchat_ref.start + groupchat_ref.end);\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: (groupchat_ref ? (fwd.start - gc_length) : fwd.start), end: (groupchat_ref ? (fwd.end - gc_length) : fwd.end), type: 'mutable'})\n                .c('forwarded', {xmlns: Strophe.NS.FORWARD})\n                .c('delay', {\n                    xmlns: 'urn:xmpp:delay',\n                    stamp: fwd_msg.get('time')\n                }).up().cnode(fwd_msg.get('xml')).up().up().up();\n            forwarded_body += original_body.slice(fwd.start, fwd.end).join('');\n        });\n        markups.forEach((markup) => {\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: markup.start + Array.from(forwarded_body).length, end: markup.end + Array.from(forwarded_body).length, type: 'decoration'});\n            for (let idx in markup.markup)\n                $message.c(markup.markup[idx], {xmlns: Strophe.NS.MARKUP}).up();\n            $message.up();\n        });\n        blockquotes.forEach((blockquote) => {\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: blockquote.start + Array.from(forwarded_body).length, end: blockquote.end + Array.from(forwarded_body).length, type: 'decoration'})\n                .c('quote', {xmlns: Strophe.NS.MARKUP}).up().up();\n        });\n        mentions.forEach((mention) => {\n            let mention_attrs = {xmlns: Strophe.NS.MARKUP};\n            mention.is_gc && (mention_attrs.node = Strophe.NS.GROUP_CHAT);\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: mention.start + Array.from(forwarded_body).length, end: mention.end + Array.from(forwarded_body).length, type: 'decoration'})\n                .c('mention', mention_attrs).t(mention.target).up().up();\n        });\n\n        if (files && files.length) {\n            mutable_refs = mutable_refs.filter(item => item.type !== 'file')\n            files.forEach((file, idx) => {\n                (idx === 0) && (text += '\\n');\n                let legacy_body = file.sources[0] + ((idx != files.length - 1) ? '\\n' : \"\"),\n                    start_idx = Array.from(_.escape(text)).length + Array.from(forwarded_body).length,\n                    end_idx = start_idx + legacy_body.length;\n                $message.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: start_idx,\n                    end: end_idx\n                });\n                file.voice && $message.c('voice-message', {xmlns: Strophe.NS.VOICE_MESSAGE});\n                $message.c('file-sharing', {xmlns: Strophe.NS.FILES}).c('file');\n                file.type && $message.c('media-type').t(file.type).up();\n                file['id'] && $message.c('gallery-id').t(file['id']).up();\n                file.thumbnail && $message.c('thumbnail-uri').t(file.thumbnail).up();\n                file.created && $message.c('created').t(file.created).up();\n                file.name && $message.c('name').t(file.name).up();\n                file.size && $message.c('size').t(file.size).up();\n                file.height && $message.c('height').t(file.height).up();\n                file.width && $message.c('width').t(file.width).up();\n                file.duration && $message.c('duration').t(file.duration).up();\n                file.description && $message.c('desc').t(file.description).up();\n                $message.up().c('sources');\n                file.sources.forEach((u) => {\n                    if (file.key)\n                        u = u.replace(/^(https|http)/, 'aescbc') + '#' + utils.ArrayBuffertoBase64(file.key);\n                    $message.c('uri').t(u).up();\n                });\n                $message.up().up().up();\n                file.voice && $message.up();\n                text += legacy_body;\n                mutable_refs.push({start: start_idx, end: end_idx});\n            });\n        }\n\n        if (link_references && link_references.length) {\n            mutable_refs = mutable_refs.filter(item => item.type !== 'link_reference')\n            link_references.forEach((link_reference, idx) => {\n                if (link_reference.start === -1) {\n                    link_reference.start = Array.from(_.escape(text)).length + Array.from(forwarded_body).length;\n                    text = text + '\\n' + link_reference.original_text;\n                    link_reference.end = link_reference.start + link_reference.original_text.length + 1;\n                }\n                $message.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: link_reference.start,\n                    end: link_reference.end,\n                    type: 'mutable',\n                }).c('ogp', { xmlns: Strophe.NS.OGP, url: link_reference.original_text });\n                link_reference.site && $message.c('meta', { property: 'og:site_name', content: link_reference.site}).up();\n                link_reference.type && $message.c('meta', { property: 'og:type', content: link_reference.type}).up();\n                link_reference.title && $message.c('meta', { property: 'og:title', content: link_reference.title}).up();\n                link_reference.url && $message.c('meta', { property: 'og:url', content: link_reference.url}).up();\n                link_reference.description && $message.c('meta', { property: 'og:description', content: link_reference.description}).up();\n                link_reference.image && $message.c('meta', { property: 'og:image', content: link_reference.image}).up();\n                link_reference.image_width && $message.c('meta', { property: 'og:image:width', content: link_reference.image_width}).up();\n                link_reference.image_height && $message.c('meta', { property: 'og:image:height', content: link_reference.image_height}).up();\n                link_reference.video_url && $message.c('meta', { property: 'og:video:url', content: link_reference.video_url}).up();\n                $message.up().up();\n                mutable_refs.push({start: link_reference.start, end: link_reference.end});\n            });\n        }\n        mutable_refs && mutable_refs.length && this.edit_message.set({mutable_content: mutable_refs});\n        if (!(Strophe.xmlunescape(forwarded_body) + text)){\n            this.deleteMessages(null, [this.edit_message]);\n            return;\n        }\n        $message.c('body').t(Strophe.xmlunescape(forwarded_body) + text).up();\n        this.unsetForwardedMessages();\n        if (this.model.get('encrypted')) {\n            let decrypted_msg = $message.tree().innerHTML;\n            $message.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n            if ($($message.tree()).children('body').length) {\n                $message.cnode($($message.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                $($message.tree()).children('body').detach()\n            }\n            if ($($message.tree()).children('reference').length) {\n                $($message.tree()).children('reference').each((idx, reference) => {\n                    $message.cnode($($message.tree()).children('reference')[idx]).up()\n                });\n                $($message.tree()).children('reference').detach()\n            }\n            $message.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n            $message.c('from', {jid: this.account.get('jid')}).up().up()\n            this.account.omemo.encrypt(this.contact, $message).then((msg) => {\n                iq.cnode(msg.message.tree());\n                this.account.omemo.cached_messages.putMessage(this.contact, stanza_id, decrypted_msg);\n                this.account.sendIQFast(iq);\n            });\n        } else {\n            iq.cnode($message.tree());\n            this.account.sendIQFast(iq);\n        }\n    },\n\n    showEditPanel: function () {\n        if (!this.model.get('active'))\n            return;\n        if (this.$('.edit-message-wrap').hasClass('non-active'))\n            return;\n        let $msg = this.content_view.$('.chat-message.selected').first(),\n            edit_msg = this.messages_arr.get($msg.data('uniqueid'));\n        this.edit_message = edit_msg;\n        this.resetSelectedMessages();\n        this.setEditedMessageAttachments(edit_msg);\n        this.setEditedMessage(edit_msg);\n    },\n\n    deleteMessages: function (ev, messages) {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [],\n            my_msgs = 0,\n            dialog_options = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            msg && msgs.push(msg);\n            msg.isSenderMe() && my_msgs++;\n        });\n        messages && messages.forEach((item, idx) => {\n            msgs.push(item);\n            item.isSenderMe() && my_msgs++;\n        });\n        if (this.account.server_features.get(Strophe.NS.REWRITE) || this.model.get('group_chat')) {\n            let dfd = new $.Deferred();\n            dfd.done(() => {\n                utils.dialogs.ask(xabber.getString(\"dialog_delete_messages__header\"), xabber.getQuantityString(\"delete_message_question\", msgs.length),\n                    dialog_options, {ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n                    if (!res) {\n                        this._clearing_history = false;\n                        messages && messages.length && this.focusOnInput();\n                        return;\n                    }\n                    let symmetric = (this.model.get('group_chat')) ? true : (res.symmetric_deletion ? true : false);\n                    this.resetSelectedMessages();\n                    if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                        this.deleteFilesFromMessages(msgs);\n                    this.model.retractMessages(msgs, this.model.get('group_chat'), symmetric);\n                    messages && messages.length && this.unsetForwardedMessages();\n                });\n            });\n            if (!this.model.get('group_chat') && !this.model.get('saved') && my_msgs == $msgs.length && this.contact && this.contact.domain){\n                if (this.contact.get('server_has_rewrite')){\n                    dialog_options = [{\n                        name: 'symmetric_deletion',\n                        checked: false,\n                        text: xabber.getString(\"dialog_clear_chat_history__option_delete_for_all\")\n                    }];\n                    dfd.resolve();\n                } else {\n                    this.account.connection.disco.info(this.contact.domain, null, (iq) => {\n                        let $rewrite = $(iq).find('feature[var=\"' + Strophe.NS.REWRITE + '\"]');\n                        if ($rewrite.length) {\n                            dialog_options = [{\n                                name: 'symmetric_deletion',\n                                checked: false,\n                                text: xabber.getString(\"dialog_clear_chat_history__option_delete_for_all\")\n                            }];\n                            this.contact.set('server_has_rewrite', true);\n                            dfd.resolve();\n                        } else {\n                            dfd.resolve();\n                        }\n                    });\n                }\n            } else\n                dfd.resolve();\n        }\n        else {\n            utils.dialogs.ask(xabber.getString(\"dialog_delete_messages__header\"), `${xabber.getQuantityString(\"delete_message_question\", msgs.length)}\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')}`,\n                dialog_options, {ok_button_text: xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    messages && messages.length && this.focusOnInput();\n                    return;\n                }\n                this.resetSelectedMessages();\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    this.deleteFilesFromMessages(msgs);\n                msgs.forEach((item) => { this.view.removeMessage(item); })\n                messages && messages.length && this.unsetForwardedMessages();\n            });\n        }\n    },\n\n    deleteFilesFromMessages: function (messages) {\n        messages.forEach((item) => {\n            if (!item.isSenderMe())\n                return;\n            item.get('files') && _.isArray(item.get('files')) && item.get('files').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n            item.get('images') && _.isArray(item.get('images')) && item.get('images').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n            item.get('videos') && _.isArray(item.get('videos')) && item.get('videos').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n        });\n    },\n\n    pushMessagesToClipboard: function (messages) {\n        let fwd_msg_indicator = \"\",\n            copied_messages = this.createTextMessage(messages, fwd_msg_indicator);\n        utils.copyTextToClipboard(_.unescape(copied_messages));\n    },\n\n    createTextMessage: function (messages, fwd_msg_indicator) {\n        let text_message = \"\";\n        for (let i = 0; i < messages.length; i++) {\n            let $msg = messages[i];\n            if (this.model.get('saved') && $msg.get('forwarded_message') && $msg.get('forwarded_message').length === 1 && !$msg.get('message'))\n                $msg = $msg.get('forwarded_message')[0];\n            let current_date = moment($msg.get('timestamp')).startOf('day'),\n                prev_date = (i) ? moment(messages[i - 1].get('timestamp')).startOf('day') : moment(0),\n                msg_sender = \"\";\n                if (prev_date.format('x') != current_date.format('x')) {\n                    text_message += (fwd_msg_indicator.length ? fwd_msg_indicator + ' ' : \"\") + pretty_date(current_date) + '\\n';\n                }\n                msg_sender = $msg.isSenderMe() ? this.account.get('name') : ($msg.get('user_info') && $msg.get('user_info').nickname || (this.account.contacts.get($msg.get('from_jid')) ? this.account.contacts.get($msg.get('from_jid')).get('name') : $msg.get('from_jid')));\n                text_message += (fwd_msg_indicator.length ? fwd_msg_indicator + ' ' : \"\") + \"[\" + utils.pretty_time($msg.get('timestamp')) + \"] \" + msg_sender + \":\\n\";\n                fwd_msg_indicator.length && (text_message += fwd_msg_indicator);\n                let original_message = _.unescape(($msg.get('mutable_content') && $msg.get('mutable_content').find(ref => ref.type === 'groupchat')) ? $msg.get('original_message').slice($msg.get('mutable_content').find(ref => ref.type === 'groupchat').end) : $msg.get('original_message'));\n                fwd_msg_indicator.length && (original_message = original_message.replace(/\\n/g, '\\n&gt; '));\n                (fwd_msg_indicator.length && original_message.indexOf('&gt;') !== 0) && (text_message += ' ');\n                (original_message = _.unescape(original_message.replace(/\\n&gt; &gt;/g, '\\n&gt;&gt;')));\n                text_message += _.escape(original_message) + '\\n';\n        }\n        return text_message.trim();\n    },\n\n    replyMessages: function () {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            if (msg) {\n                if (this.model.get('saved') && msg.get('forwarded_message') && msg.get('forwarded_message').length && !msg.get('message')) {\n                    msgs = msgs.concat(msg.get('forwarded_message'));\n                } else\n                    msgs.push(msg);\n            }\n        });\n        this.resetSelectedMessages();\n        this.setForwardedMessages(msgs);\n    },\n\n    forwardMessages: function () {\n        if (!this.model.get('active') || this.model.get('encrypted'))\n            return;\n        if (this.$('.forward-message-wrap').hasClass('non-active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            if (msg) {\n                if (this.model.get('saved') && msg.get('forwarded_message') && msg.get('forwarded_message').length && !msg.get('message')) {\n                    msgs = msgs.concat(msg.get('forwarded_message'));\n                } else\n                    msgs.push(msg);\n            }\n        });\n        this.resetSelectedMessages();\n        if (!xabber.forward_panel)\n            xabber.forward_panel = new xabber.ForwardPanelView({ model: xabber.opened_chats });\n        xabber.forward_panel.open(msgs, this.account);\n    },\n\n    showChatNotification: function (message, is_colored) {\n        if (!this.view.$('.chat-notification').hasClass('msgs-counter') && !this.view.$('.chat-notification').hasClass('encryption-warning')) {\n            this.view.$('.chat-notification').switchClass('hidden', !message).text(message)\n                .switchClass('text-color-300', is_colored);\n        }\n    }\n});\n\nxabber.ChatHeadContainer = xabber.Container.extend({\n    className: 'chat-head-container panel-head noselect'\n});\n\nxabber.ChatBodyContainer = xabber.Container.extend({\n    className: 'chat-body-container',\n\n    // TODO: refactor CSS and remove this\n    updateHeight: function () {\n        let bottom_height = xabber.chat_bottom.$el.height() + parseInt(xabber.chat_bottom.$el.css('bottom'));\n        if (bottom_height) {\n            let current_bottom = parseInt(this.$el.css('bottom'));\n            this.$el.css({bottom: bottom_height});\n            if (this.view) {\n                this.view.updateScrollBar();\n                (bottom_height != current_bottom) && !this.view.isScrolledToBottom() && this.view.scrollTo(this.view.ps_container[0].scrollTop + (bottom_height - current_bottom));\n            }\n        }\n    }\n});\n\nxabber.ChatBodyPlaceholderContainer = xabber.Container.extend({\n    className: 'chat-body-placeholder-container',\n});\n\nxabber.NotificationsPlaceholder = xabber.BasicView.extend({\n    className: 'notifications-placeholder',\n    events: {\n        \"click .btn-request-notifications\": \"requestNotifications\",\n        \"click .mdi-close\": \"close\"\n    },\n\n    _initialize: function (options) {\n        this.$el.html(`${xabber.getString(\"desktop_notifications__alert_enable__text\", [constants.CLIENT_NAME])} <span class=\"btn-request-notifications\">${xabber.getString(\"desktop_notifications__alert_enable__link_text\")}</span><button class=\"btn-request-notifications btn-flat btn-dark btn-main\">${xabber.getString(\"chat_allow\")}</button>`);\n        this.$el.append($('<i/>').addClass('mdi mdi-22px mdi-close'));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n    },\n\n    requestNotifications: function () {\n        window.Notification.requestPermission((permission) => {\n            xabber._cache.save({'notifications': (permission === 'granted'), 'ignore_notifications_warning': true});\n            this.close();\n        });\n    },\n\n    onUpdatedScreen: function () {\n        if (!xabber.notifications_placeholder)\n            return;\n        this.$el.detach();\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    },\n\n    close: function () {\n        xabber._cache.save('ignore_notifications_warning', true);\n        this.remove();\n        xabber.notifications_placeholder = undefined;\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    }\n});\n\nxabber.ChatBottomContainer = xabber.Container.extend({\n    className: 'chat-bottom-container'\n});\n\nxabber.ChatPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap chat-placeholder-wrap noselect',\n    template: templates.chat_placeholder,\n\n    _initialize: function (options) {\n        xabber.on('update_placeholder',this.onPlaceholderUpdate, this);\n    },\n\n    onPlaceholderUpdate: function () {\n        if (xabber.toolbar_view.$('.toolbar-item.jingle-calls.active').length || xabber.toolbar_view.$('.toolbar-item.geolocation-chats.active').length){\n            this.$('.text').text(xabber.getString(\"message_manager_error_not_implemented\"));\n        } else {\n            this.$('.text').text(xabber.getString(\"chat_list__placeholder\"));\n        }\n    },\n});\n\nxabber.ChatSettings = Backbone.ModelWithStorage.extend({\n    defaults: {\n        last_emoji: [],\n        muted: [],\n        archived: [],\n        group_chat: [],\n        cached_avatars: [],\n        group_chat_members_lists: []\n    },\n\n    getLastEmoji: function () {\n        return _.clone(this.get('last_emoji'));\n    },\n\n    updateLastEmoji: function (emoji) {\n        let last_emoji_icons = _.clone(this.get('last_emoji'));\n        if (last_emoji_icons.length > 0) {\n            let index = last_emoji_icons.indexOf(emoji);\n            if (index != -1)\n                last_emoji_icons.splice(index, 1);\n            last_emoji_icons.push(emoji);\n            while (last_emoji_icons.length > 7)\n                last_emoji_icons.shift();\n        }\n        else\n            last_emoji_icons.push(emoji);\n        this.save('last_emoji', last_emoji_icons);\n    },\n\n    updateMutedList: function (jid, muted) {\n        let muted_list = _.clone(this.get('muted')),\n            index = muted_list.indexOf(jid);\n        if (muted && index < 0) {\n            muted_list.push(jid);\n        }\n        if (!muted && index >= 0) {\n            muted_list.splice(index, 1);\n        }\n        this.save('muted', muted_list);\n    },\n\n    updateArchiveChatsList: function (jid, archived) {\n        let archived_list = _.clone(this.get('archived')),\n            index = archived_list.indexOf(jid);\n        if (archived && index < 0) {\n            archived_list.push(jid);\n        }\n        if (!archived && index >= 0) {\n            archived_list.splice(index, 1);\n        }\n        this.save('archived', archived_list);\n    },\n\n    updateGroupChatsList: function (jid, group_chat) {\n        let group_chat_list = _.clone(this.get('group_chat')),\n            index = group_chat_list.indexOf(jid);\n        if (group_chat && index < 0) {\n            group_chat_list.push(jid);\n        }\n        if (!group_chat && index >= 0) {\n            group_chat_list.splice(index, 1);\n        }\n        this.save('group_chat', group_chat_list);\n    },\n\n    updateCachedAvatars: function (id, hash, avatar) {\n        let avatar_list = _.clone(this.get('cached_avatars')),\n            member = avatar_list.indexOf(avatar_list.find(member => member.id === id));\n        if (member != -1) {\n            avatar_list.splice(member, 1);\n        }\n        avatar_list.push({id: id, avatar_hash: hash, avatar_b64: avatar});\n        this.save('cached_avatars', avatar_list);\n    },\n\n    getAvatarInfoById: function (id) {\n        let avatar_list = _.clone(this.get('cached_avatars')),\n            result = avatar_list.find(member => member.id === id);\n        return result;\n    },\n\n    getB64Avatar: function (id) {\n        let result = this.getAvatarInfoById(id);\n        if (result)\n            return result.avatar_b64;\n        else\n            return;\n    },\n\n    getHashAvatar: function (id) {\n        let result = this.getAvatarInfoById(id);\n        if (result)\n            return result.avatar_hash;\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.chat_settings = new xabber.ChatSettings({id: 'chat-settings'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + this.get('jid'),\n        fetch: 'after'\n    });\n    this.messages = new xabber.Messages(null, {account: this});\n    this.forwarded_messages = new xabber.Messages(null, {account: this});\n    this.pinned_messages = new xabber.Messages(null, {account: this});\n\n    this.chats = new xabber.AccountChats(null, {account: this});\n});\n\nxabber.Account.addConnPlugin(function () {\n    let timestamp = this.last_msg_timestamp || this.disconnected_timestamp;\n    this.chats.registerMessageHandler();\n    this.chats.each((chat) => {\n        if (!this.connection.do_synchronization) {\n            if (chat.messages.length)\n                chat.trigger('get_missed_history', timestamp);\n            else\n                chat.trigger('load_last_history');\n        }\n    });\n\n    this.connection.deleteTimedHandler(this._get_msg_handler);\n    this._get_msg_handler = this.connection.addTimedHandler(60000, () => {\n        //readds msg handler if it somehow dissapears\n        if (this.connection && !this.connection.handlers.find(h => !h.ns && !h.options.encrypted && h.name === 'message')) {\n            let last_msg_timestamp = this.last_msg_timestamp;\n            this.chats.registerMessageHandler();\n            let options = {};\n            this.cached_sync_conversations.getFromCachedConversations('last_sync_timestamp', (res) => {\n                let last_sync_timestamp = res && res.timestamp ? res.timestamp : null;\n                !this.roster.last_chat_msg_id && (options.max = constants.SYNCHRONIZATION_RSM_MAX);\n                last_sync_timestamp && (options.stamp = last_sync_timestamp);\n                this.roster && this.roster.syncFromServer(options, Boolean(last_sync_timestamp), true);\n                this.roster && this.roster.getRoster();\n            });\n        }\n        return true;\n    });\n    if (_.isUndefined(this.settings.get('omemo')) && !this.omemo_enable_placeholder) {\n        this.omemo_enable_placeholder = new xabber.OMEMOEnablePlaceholder({account: this});\n    }\n}, true, true);\n\nxabber.Account.addFastConnPlugin(function () {\n    this.getVCard();\n    if (!(this.auth_view && this.auth_view.data.get('authentication')))\n        this.trigger('ready_to_get_roster');\n}, true, true);\n\nxabber.once(\"start\", function () {\n    [\"keydown\"].forEach((event) => {\n        window.addEventListener(event, (e) => {\n            document.onselectstart = function() {\n                return !((e.ctrlKey || e.metaKey) && e.keyCode == constants.KEY_SHIFT || e.shiftKey && e.keyCode == constants.KEY_CTRL || e.keyCode == constants.KEY_SHIFT);\n            }\n        });\n    });\n    [\"keyup\"].forEach((event) => {\n        window.addEventListener(event, (e) => {\n            document.onselectstart = function() {\n                return true;\n            }\n        });\n    });\n    this.chats = new this.Chats;\n    this.chats.addCollection(this.opened_chats = new this.OpenedChats);\n    this.chats.addCollection(this.closed_chats = new this.ClosedChats);\n    this.chats.registerQuillEmbeddedsTags();\n\n    this.chats_view = this.left_panel.addChild('chats',\n            this.ChatsView, {model: this.opened_chats});\n    this.chat_head = this.right_panel.addChild('chat_head',\n            this.ChatHeadContainer);\n    this.chat_body = this.right_panel.addChild('chat_body',\n            this.ChatBodyContainer);\n    this.chat_body_placeholder = this.right_panel.addChild('chat_body_placeholder',\n            this.ChatBodyPlaceholderContainer);\n    this.chat_bottom = this.right_panel.addChild('chat_bottom',\n            this.ChatBottomContainer);\n    this.chat_placeholder = this.right_panel.addChild('chat_placeholder',\n            this.ChatPlaceholderView);\n\n    this.on(\"add_group_chat\", function (attrs) {\n        if (!this.add_group_chat_view)\n            this.add_group_chat_view = new this.AddGroupChatView();\n        this.add_group_chat_view.show(attrs);\n    }, this);\n\n    this.on(\"change:focused\", function () {\n        if (this.get('focused')) {\n            let view = this.chats_view.active_chat;\n            if (view && view.model.get('display')) {\n                view.content.onScroll(null, true);\n                if (view.model.get('is_accepted') !== false)\n                    view.content.bottom.focusOnInput();\n            }\n        }\n    }, this);\n\n    this.on(\"change:idle\", function () {\n        if (!this.get('idle')) {\n            let view = this.chats_view.active_chat;\n            if (view && view.model.get('display')) {\n                view.content.onScroll(null, true);\n                if (view.model.get('is_accepted') !== false)\n                    view.content.bottom.focusOnInput();\n            }\n        }\n    }, this);\n\n    this.on(\"show_group_chats\", function () {\n        this.chats_view.showGroupChats();\n    }, this);\n\n    this.on(\"show_chats\", function () {\n        this.chats_view.showChats();\n    }, this);\n\n    this.on(\"show_all_chats\", function (no_unread) {\n        this.chats_view.showAllChats(no_unread);\n    }, this);\n\n    this.on(\"show_archive_chats\", function (no_unread) {\n        this.chats_view.showArchiveChats(no_unread);\n    }, this);\n\n    this.on(\"show_saved_chats\", function (no_unread) {\n        this.chats_view.showSavedChats(no_unread);\n    }, this);\n\n    this.on(\"show_notification_chats\", function (no_unread) {\n        this.chats_view.showNotifications(no_unread);\n    }, this);\n\n    this.on(\"clear_search\", function () {\n        this.contacts_view.clearSearch();\n        this.chats_view.clearSearch();\n    }, this);\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.searching,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    Strophe = env.Strophe,\n    _ = env._,\n    Images = utils.images;\n\nxabber.DiscoveringView = xabber.BasicView.extend({\n    className: 'searching-main noselect',\n    template: templates.searching_wide,\n    ps_selector: '.chats-list-wrap',\n    ps_settings: {\n        wheelPropagation: true,\n        theme: 'existing-chats-list'\n    },\n\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .account-field .dropdown-content\": \"selectAccount\",\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-search\": \"search\",\n        \"click .existing-chat-wrap\": \"getChatProperties\",\n        \"keyup .search-input\": \"keyUp\"\n    },\n\n    _initialize: function () {\n        this.data.on(\"change:color\", this.colorUpdated, this);\n        this.$('.searching-properties-field .dropdown-button').on('click', () => {\n            this.toggleProperties();\n        });\n    },\n\n    render: function (options) {\n        this.endDiscovering();\n        this.data.set('color','#9E9E9E');\n        options || (options = {});\n        let accounts = xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.account-field .dropdown-content').empty();\n        _.each(accounts, (account) => {\n            this.$('.account-field .dropdown-content').append(\n                this.renderAccountItem(account));\n        });\n        if (accounts.length)\n            this.bindAccount(accounts[0]);\n        this.$('#select-searching-properties .account-field .dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        return this;\n    },\n\n    toggleProperties: function () {\n        let is_visible = this.isPropertiesVisible();\n        this.$('#select-searching-properties').slideToggle(\"fast\");\n        this.$('.arrow').switchClass('mdi-chevron-up', !is_visible);\n        this.$('.arrow').switchClass('mdi-chevron-down', is_visible);\n    },\n\n    isPropertiesVisible: function () {\n        if (this.$('#select-searching-properties').css('display') === 'none')\n            return false;\n        else\n            return true;\n    },\n\n    discover: function () {\n        let domain = _.escape(this.$('.search-input.simple-input-field').val());\n        if (domain) {\n            if (this.isPropertiesVisible())\n                this.toggleProperties();\n            this.$('.searching-more').html(\"\");\n            let searching_title = this.$('#searching_property_title').val(),\n                searching_sort_by = this.$('#searching_property_sort_by').val();\n            this.$('.searching-result-wrap .preloader-wrapper').show();\n            this.searchExistingGroupChats(domain);\n        }\n    },\n\n    setColor: function () {\n        if (this.account) {\n            let color = this.account.settings.get('color');\n            this.data.set('color', color);\n        }\n    },\n\n    colorUpdated: function () {\n        let color = this.data.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    keyUp: function (ev) {\n        if (this.$('.search-input').val() === \"\")\n            this.$('.btn-search').addClass('none-active');\n        else\n            this.$('.btn-search').removeClass('none-active');\n        if (ev.keyCode === constants.KEY_ENTER)\n            this.discover();\n    },\n\n    searchExistingGroupChats: function (domain) {\n        this.account.connection.disco.items((domain), null, this.getGroupchatService.bind(this), this.onDiscoveringError.bind(this));\n    },\n\n    onDiscoveringError: function (error) {\n        this.endDiscovering();\n        this.$('.chats-list').html(\"\");\n        this.$('.result-string').text(xabber.getString(\"discover__no_matches\", [$(error).attr('from')]));\n    },\n\n    endDiscovering: function () {\n        this.$('.searching-result-wrap .preloader-wrapper').hide();\n    },\n\n    getGroupchatService: function (stanza) {\n        $(stanza).find('query item').each((idx, item) => {\n            if ($(item).attr('node') === Strophe.NS.GROUP_CHAT) {\n                let jid = $(item).attr('jid');\n                this.getGroupchatFeatures(jid);\n            }\n        });\n        this.endDiscovering();\n    },\n\n    getGroupchatFeatures: function (jid) {\n        let iq = $iq({type: 'get', to: jid})\n            .c('query', {xmlns: Strophe.NS.DISCO_INFO, node: Strophe.NS.GROUP_CHAT});\n        this.account.sendIQFast(iq, this.getServerInfo.bind(this), this.onDiscoveringError.bind(this));\n    },\n\n    getServerInfo: function (stanza) {\n        $(stanza).find('query identity').each((idx, item) => {\n            let $item = $(item);\n            if (($item.attr('category') === 'conference') && ($item.attr('type') === 'server')) {\n                let jid = $(stanza).attr('from');\n                this.getChatsFromSever(jid);\n            }\n        });\n    },\n\n    getChatsFromSever: function (jid) {\n        let iq = $iq({type: 'get', to: jid}).c('query', {xmlns: Strophe.NS.DISCO_ITEMS, node: Strophe.NS.GROUP_CHAT});\n        this.account.sendIQFast(iq, (stanza) => {\n            this.$('.chats-list').html(\"\");\n            $(stanza).find('query item').each((idx, item) => {\n                let $item = $(item),\n                    name = $item.attr('name'),\n                    jid = $item.attr('jid'),\n                    $chat_item_html = $(templates.existing_groupchat_item({name: name, jid: jid, color: this.account.settings.get('color')})),\n                    avatar = Images.getDefaultAvatar(name);\n                $chat_item_html.find('.circle-avatar').setAvatar(avatar, 32);\n                $chat_item_html.appendTo(this.$('.searching-result-wrap .chats-list'));\n            });\n            this.$('.result-string').text(xabber.getString(\"discover__text_discovered_groups\", [$(stanza).find('query item').length, this.account.get('jid')]));\n        });\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.account-field .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n        this.setColor();\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.searching_account_item({jid: account.get('jid')}));\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    getChatProperties: function (ev) {\n        let $target = $(ev.target).closest('.existing-chat-wrap'),\n            jid = $target.data('jid'),\n            name = $target.data('name'),\n            request_iq = $iq({type: 'get', to: jid})\n                .c('query', {xmlns: Strophe.NS.DISCO_INFO});\n        this.account.sendIQFast(request_iq, (iq_response) => {\n            let $iq_response = $(iq_response),\n                description = $iq_response.find('field[var=\"description\"] value').text(),\n                privacy = $iq_response.find('field[var=\"anonymous\"] value').text(),\n                membership = $iq_response.find('field[var=\"model\"] value').text(),\n                chat_properties = {jid: jid, name: name, privacy: privacy, description: description, membership: membership};\n            this.more_info_view = this.addChild('groupchat_properties', xabber.MoreInfoView,\n                {model: this, chat_properties: chat_properties, el: this.$('.searching-more')[0]})\n        });\n    }\n});\n\nxabber.MoreInfoView = xabber.BasicView.extend({\n    className: 'searching-main noselect',\n    template: templates.existing_groupchat_details_view,\n\n    events: {\n        \"click .btn-join-chat\": \"joinChat\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.chat_properties = options.chat_properties;\n        this.$el.html(this.template(this.chat_properties));\n    },\n\n    render: function (options) {\n\n    },\n\n    joinChat: function () {\n        let contact = this.account.contacts.mergeContact(this.chat_properties.jid);\n        contact.set('group_chat', true);\n        contact.acceptRequest();\n        contact.pushInRoster(null, () => {\n            contact.askRequest();\n            contact.getMyInfo();\n        });\n        contact.trigger(\"open_chat\", contact);\n    }\n});\n\nxabber.Searching = Backbone.Model.extend({\n\n    initialize: function (options) {\n        this.account = options.account;\n    },\n\n    getSearchingFields: function () {\n        let this_domain = 'xabber.com',//this.account.connection && this.account.connection.domain,\n            iq_get = $iq({type: 'get', to: 'index.' + this_domain}).c('query', {xmlns: Strophe.NS.INDEX + '#groupchat'});\n        this.account.sendIQFast(iq_get, this.parseSearchingFields);\n    },\n\n    parseSearchingFields: function (iq_result) {\n        let $result = $(iq_result),\n            $fields = $result.find(`x[xmlns = \"${Strophe.NS.XDATA}\"] field`),\n            supported_fields = [];\n        $fields.each((idx, field) => {\n            let $field = $(field);\n            if ($field.attr('type') !== 'hidden')\n                supported_fields.push({var: $field.attr('var'), label: $field.attr('label')});\n        });\n    },\n});\n\nxabber.LocalSearchingView = xabber.BasicView.extend({\n    className: '',\n    // template:,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n    },\n\n    render: function () {\n\n    },\n\n    search: function (query) {\n    }\n});\n\nxabber.GlobalSearchingView = xabber.BasicView.extend({\n    className: '',\n    // template:,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.indexed_chats = [];\n    },\n\n    render: function () {\n\n    },\n\n    search: function (query) {\n        this.indexed_chats = [];\n        let iq_search = $iq({to:'index.xabber.com', type: 'set'})\n            .c('query', {xmlns: Strophe.NS.INDEX + '#groupchat'})\n            .c('x', {xmlns: Strophe.NS.XDATA, type: 'form'})\n            .c('field', {var: 'FORM_TYPE', type:'hidden'})\n            .c('value').t(Strophe.NS.INDEX + '#groupchat').up().up();\n        if (query.description)\n            iq_search.c('field', {var: 'description'})\n                .c('value').t(query.description).up().up();\n        if (query.name)\n            iq_search.c('field', {var: 'name'})\n                .c('value').t(query.name).up().up();\n        if (query.model)\n            iq_search.c('field', {var: 'model'})\n                .c('value').t(query.model).up().up();\n        if (query.anywhere)\n            iq_search.c('field', {var: 'anywhere'})\n                .c('value').t(query.anywhere).up().up();\n        this.account.sendIQFast(iq_search, this.onSearched.bind(this));\n    },\n\n    onSearched: function (result) {\n        let $result = $(result),\n            $chats = $($result.find('query item groupchat'));\n        $chats.each((idx, chat) => {\n            let $chat = $(chat),\n                chat_jid = $chat.attr('jid'),\n                attrs = {jid: chat_jid},\n                $properties = $chat.children();\n            $properties.each((idx, property) => {\n                let $property = $(property),\n                    property_name = $property[0].tagName.replace(/-/g, '_'),\n                    property_value = $property.text();\n                _.extend(attrs, {[property_name]: property_value});\n            });\n            this.indexed_chats.push(attrs);\n        });\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.discovering = this.wide_panel.addChild('discovering_main',\n        this.DiscoveringView);\n    /*this.local_searching = new xabber.LocalSearching;\n    this.global_searching = new xabber.GlobalSearching;*/\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.mentions,\n    utils = env.utils,\n    $ = env.$,\n    Strophe = env.Strophe,\n    _ = env._,\n    Images = utils.images,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\n\nxabber.Mention = Backbone.Model.extend({\n    defaults: {\n        active: false,\n        display: false,\n        timestamp: 0\n    },\n\n    initialize: function (attrs, options) {\n        this.contact = options.contact;\n        this.message = options.message;\n        this.id = this.message.get('unique_id');\n        this.set('timestamp', this.message.get('timestamp'));\n        this.account = this.contact.account;\n        this.item_view = new xabber.MentionItemView({model: this});\n        this.contact.on(\"destroy\", this.destroy, this);\n        this.message.on(\"change:last_replace_time\", this.onMessageUpdated, this);\n    },\n\n    onMessageUpdated: function () {\n        if (this.message.get('mentions') && this.message.get('mentions').length) {\n            this.message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\",\n                    id = mention_target.match(/\\?id=\\w*/),\n                    jid = mention_target.match(/\\?jid=.*/);\n                if (id)\n                    mention_target = id[0].slice(4);\n                else if (jid)\n                    mention_target = jid[0].slice(5);\n                else\n                    mention_target = \"\";\n                if (id) {\n                    if (this.contact.my_info) {\n                        if (mention_target === this.contact.my_info.get('id'))\n                            this.item_view.updateLastMessage();\n                        else\n                            this.destroy();\n                    }\n                    else if (this.contact.get('group_chat')) {\n                        if (this._pending_my_info) {\n                            this._pending_my_info.done(() => {\n                                if (mention_target === this.contact.my_info.get('id'))\n                                    this.item_view.updateLastMessage();\n                                else\n                                    this.destroy();\n                                this._pending_my_info = null;\n                            });\n                        }\n                        else {\n                            this._pending_my_info = new $.Deferred();\n                            this.contact.getMyInfo(() => {\n                                if (mention_target === this.contact.my_info.get('id'))\n                                    this.item_view.updateLastMessage();\n                                else\n                                    this.destroy();\n                                this._pending_my_info.resolve();\n                            });\n                        }\n                    }\n                } else if (jid && mention_target === this.account.get('jid')) {\n                    this.item_view.updateLastMessage();\n                }\n                else\n                    this.destroy();\n            });\n        } else\n            this.destroy();\n    }\n});\n\nxabber.MentionsBase = Backbone.Collection.extend({\n    model: xabber.Mention\n});\n\nxabber.AccountMentions = xabber.MentionsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.on(\"add\", this.onMentionAdded, this)\n    },\n\n    onMentionAdded: function (mention) {\n        xabber.mentions.add(mention);\n    }\n});\n\nxabber.Mentions = xabber.MentionsBase.extend({\n    comparator: 'timestamp',\n    initialize: function () {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    }\n});\n\nxabber.MentionsView = xabber.SearchPanelView.extend({\n    className: 'mentions-container container',\n    ps_selector: '.mentions-list-wrap',\n    main_container: '.mentions-list',\n    ps_settings: {theme: 'item-list'},\n    template: templates.mentions_panel,\n\n    _initialize: function () {\n        this.active_mention = null;\n        this.keyup_timeout = null;\n        this.model.on(\"add\", this.onMentionAdded, this);\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"destroy\", this.onMentionRemoved, this);\n        xabber.accounts.on(\"list_changed\", this.updateLeftIndicator, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    render: function (options) {\n        if (!options.right && this.active_mention) {\n            this.active_mention.model.set('active', false);\n            this.active_mention = null;\n        }\n        (options.right !== 'chat' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search && options.right === 'chat') && this.clearSearch();\n    },\n\n    onMentionAdded: function (mention) {\n        this.addChild(mention.id, mention.item_view);\n        this.updateMentionPosition(mention);\n    },\n\n    onMentionRemoved: function (mention, options) {\n        options = options || {};\n        if (this.active_mention === this.child(mention.id)) {\n            this.active_mention = null;\n        }\n        this.removeChild(mention.id, options);\n        this.updateScrollBar();\n    },\n\n    selectItem: function (id) {\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        $selection.find('.mention-info-wrap').addClass('selected');\n    },\n\n    clearSearchSelection: function (ev) {\n        this.selection_id = null;\n        this.$('.list-item.selected').removeClass('selected');\n        this.$('.list-item .selected').removeClass('selected');\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = xabber.chats_view.child(selection.data('id'));\n                view && view.open({screen: xabber.body.screen.get('name'), clear_search: false});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.get(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')).hash_id);\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            selection.find('.mention-info-wrap').click();\n        }\n    },\n\n    replaceMentionItem: function (item, mentions) {\n        let view = this.child(item.id);\n        if (view && item.get('timestamp')) {\n            view.$el.detach();\n            let index = mentions.indexOf(item);\n            if (index === 0) {\n                this.$('.mentions-list').append(view.$el);\n            } else {\n                this.$('.mention-item').eq(-index).before(view.$el);\n            }\n            let $prev_el = view.$el.prev('.mention-item'),\n                $next_el = view.$el.next('.mention-item'),\n                contact_jid = view.$el.data('contact-jid');\n                if ($prev_el.length) {\n                    let prev_contact_jid = $prev_el.data('contact-jid');\n                    if (prev_contact_jid !== contact_jid)\n                        view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n                }\n                else\n                    view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n                if ($next_el.length) {\n                    let next_contact_jid = $next_el.data('contact-jid');\n                    if (next_contact_jid === contact_jid) {\n                        $next_el.find('.group-chat-title-wrap').addClass('hidden');\n                    }\n                    else\n                        $next_el.find('.group-chat-title-wrap').removeClass('hidden');\n                }\n                else\n                    view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n        }\n    },\n\n    readAllMentions: function () {\n        xabber.accounts.connected.forEach((account) => {\n            let mentions = _.clone(account.unread_mentions.models);\n            _.each(mentions, ((mention) => {\n                let msgid = mention.message.get('msgid'),\n                    archive_id = mention.message.get('archive_id'),\n                    contact_archive_id = mention.message.get('contact_archive_id'),\n                    chat = account.chats.getChat(mention.contact);\n                mention.message.set('is_unread', false);\n                chat.sendMarker(msgid, 'displayed', archive_id, contact_archive_id);\n            }));\n        });\n    },\n\n    updateLeftIndicator: function (accounts) {\n        this.$el.attr('data-indicator', accounts.connected.length > 1);\n    },\n\n    updateMentionPosition: function (item) {\n        let view = this.child(item.id);\n        if (!view)\n            return;\n        this.replaceMentionItem(item, this.model);\n    },\n\n    onChangedActiveStatus: function (mention) {\n        if (mention.get('active')) {\n            let previous_mention = this.active_mention;\n            this.active_mention = this.child(mention.id);\n            previous_mention && previous_mention.model.set('active', false);\n        }\n    }\n});\n\nxabber.MentionItemView = xabber.BasicView.extend({\n    className: 'mention-item list-item',\n    template: templates.mention_item,\n    avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n    events: {\n        'click .mention-info-wrap': 'openByClick'\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.$el.attr('data-id', this.model.id);\n        this.$el.attr('data-contact-jid', this.contact.get('jid'));\n        this.updateContactName();\n        this.updateGroupChat();\n        this.updateName();\n        this.updateLastMessage();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.updateCounter();\n        this.updateIcon();\n        this.model.on(\"change:active\", this.updateActiveStatus, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.contact.on(\"change:name\", this.updateContactName, this);\n        this.contact.on(\"change:group_chat\", this.updateGroupChat, this);\n        this.model.message.on(\"change:is_unread\", this.updateCounter, this);\n    },\n\n    updateName: function () {\n        let message = this.model.message,\n            user_info = message.get('user_info') || message.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes,\n            contact_name = this.contact.get('name');\n        if (user_info)\n            contact_name = user_info.nickname || user_info.jid || user_info.id || this.model.message.get('from_jid');\n        this.$('.chat-title').text(contact_name);\n    },\n\n    updateIcon: function () {\n        this.$('.contact-icon .group-chat-icon').hideIf(!this.contact.get('group_chat') && this.contact.get('jid') === this.account.domain);\n        this.$('.contact-icon .server-icon').hideIf(this.contact.get('jid') !== this.account.domain);\n    },\n\n    updateContactName: function () {\n        let contact_name = this.contact.get('name');\n        this.$('.group-chat-name').text(contact_name);\n        if (!this.contact.get('group_chat')) {\n            this.updateName();\n            if (!this.contact.get('photo_hash')) {\n                let default_avatar = Images.getDefaultAvatar(contact_name);\n                this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n            }\n        }\n    },\n\n    updateGroupChat: function () {\n        this.updateIcon();\n    },\n\n    updateCounter:function () {\n        let unread = this.model.message.get('is_unread');\n        this.$('.msg-counter').switchClass('hidden', !unread);\n        if (unread)\n            this.account.unread_mentions.add(this.model);\n        else\n            this.account.unread_mentions.remove(this.model);\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    updateLastMessage: function () {\n        let msg = this.model.message;\n        if (!msg)\n            return;\n        let msg_time = msg.get('time'),\n            timestamp = msg.get('timestamp'),\n            forwarded_message = msg.get('forwarded_message'),\n            msg_files = msg.get('files') || [],\n            msg_images = msg.get('images') || [],\n            msg_locations = msg.get('locations') || [],\n            msg_text = (forwarded_message) ? (msg.get('message') || xabber.getString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText();\n        msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n        this.model.set({timestamp: timestamp});\n        if (msg_files.length || msg_images.length || msg_locations.length) {\n            let $colored_span = $('<span class=\"text-color-500\"/>');\n            if (msg_files.length && msg_images.length)\n                msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n            else {\n                if (msg_files.length > 0) {\n                    let total_size = 0;\n                    msg_files.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_images.length > 0) {\n                    let total_size = 0;\n                    msg_images.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_locations.length > 0) {\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                }\n            }\n            this.$('.last-msg').text(\"\").append(msg_text);\n        }\n        else {\n            this.$('.last-msg').text(msg_text);\n        }\n        this.$el.emojify('.last-msg', {emoji_size: 16});\n        this.$('.last-msg-date').text(utils.pretty_short_datetime(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateActiveStatus: function () {\n        this.$el.find('.mention-info-wrap').switchClass('active', this.model.get('active'));\n    },\n\n    updateAvatar: function () {\n        let message = this.model.message,\n            user_info = message.get('user_info') || message.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes,\n            image;\n        if (user_info) {\n            if (user_info.avatar) {\n                image = user_info.b64_avatar || this.account.chat_settings.getB64Avatar(user_info.id);\n                if (image) {\n                    this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + user_info.id;\n                    this.contact.getAvatar(user_info.avatar, node, (data_avatar) => {\n                        image = data_avatar;\n                        this.account.chat_settings.updateCachedAvatars(user_info.id, user_info.avatar, data_avatar);\n                        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                    }, () => {\n                        let default_avatar = Images.getDefaultAvatar(user_info.nickname || user_info.jid || user_info.id);\n                        this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n                    });\n                }\n            }\n            else {\n                let default_avatar = Images.getDefaultAvatar(user_info.nickname || user_info.jid || user_info.id);\n                this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n            }\n        }\n        else {\n            image = this.contact.cached_image;\n            this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n        }\n    },\n\n    openByClick: function () {\n        let message = this.model.message,\n            chat = this.account.chats.getChat(this.contact);\n        this.model.message.set('is_unread', false);\n        chat.sendMarker(message.get('origin_id'), 'displayed', message.get('stanza_id'), message.get('contact_stanza_id'));\n        this.model.set('active', true);\n        this.contact.trigger(\"open_mention\", this.contact, message.get('unique_id'));\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    }\n\n});\n\nxabber.MentionsPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap mentions-placeholder-wrap noselect',\n    template: templates.mentions_placeholder,\n\n    _initialize: function (options) {\n        xabber.on('update_placeholder',this.onPlaceholderUpdate, this);\n    },\n\n    onPlaceholderUpdate: function () {\n        if (xabber.toolbar_view.$('.toolbar-item.jingle-calls.active').length || xabber.toolbar_view.$('.toolbar-item.geolocation-chats.active').length){\n            this.$('.text').text(xabber.getString(\"message_manager_error_not_implemented\"));\n        } else {\n            this.$('.text').text(xabber.getString(\"mentions_list__placeholder\"));\n        }\n    },\n});\n\nxabber.Account.addInitPlugin(function () {\n   this.mentions = new xabber.AccountMentions(null, {account: this});\n   this.unread_mentions = new xabber.Mentions(null, {account: this});\n});\n\nxabber.once(\"start\", function () {\n    this.mentions = new this.Mentions;\n    this.mentions_view = this.left_panel.addChild('mentions',\n        this.MentionsView, {model: this.mentions});\n    this.mentions_placeholder = this.right_panel.addChild('mentions_placeholder',\n        this.MentionsPlaceholderView);\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    $ = env.$;\n\nxabber.once(\"start\", function () {\n    $(window).on(\"keydown\", (ev) => {\n        if ((ev.ctrlKey || ev.metaKey) && ev.keyCode == constants.KEY_SHIFT || ev.shiftKey && ev.keyCode == constants.KEY_CTRL) {\n            this.shift_pressed = null;\n            this.shiftctrl_pressed = true;\n            ev.preventDefault();\n        } else if (ev.keyCode == constants.KEY_SHIFT) {\n            this.shift_pressed = true;\n            ev.preventDefault();\n        }\n        let attrs = xabber.body.screen.attributes;\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            if (xabber.body.$el.siblings('#modals').children('.open').length)\n                return;\n        }\n        if (attrs.chat_item && (attrs.name === 'mentions' || attrs.name === 'contacts' || attrs.name === 'all-chats') && (attrs.right === 'chat' || attrs.right === 'participant_messages' || attrs.right === 'message_context' || attrs.right === 'searched_messages')) {\n            if (window.$('.message-actions-panel').length && !window.$('.message-actions-panel').hasClass('hidden')) {\n                if (!ev.ctrlKey && !ev.metaKey) {\n                    switch (ev.keyCode) {\n                        case 67:\n                            attrs.chat_item.model.trigger('copy_selected_messages');\n                            break;\n                        case 68:\n                            attrs.chat_item.model.trigger('delete_selected_messages');\n                            break;\n                        case 69:\n                            attrs.chat_item.model.trigger('edit_selected_message');\n                            break;\n                        case 70:\n                            attrs.chat_item.model.trigger('forward_selected_messages');\n                            break;\n                        case 80:\n                            attrs.chat_item.model.trigger('pin_selected_message');\n                            break;\n                        case 82:\n                            attrs.chat_item.model.trigger('reply_selected_messages');\n                            break;\n                        case constants.KEY_ESCAPE:\n                            if (!xabber.body.screen.get('right_contact'))\n                                attrs.chat_item.model.trigger('reset_selected_messages');\n                            break;\n                    }\n                    ev.preventDefault();\n                }\n            }\n        }\n        });\n    $(window).on(\"keyup\", (ev) => {\n        if (!(ev.shiftKey && ev.ctrlKey))\n            this.shiftctrl_pressed = null;\n        if (ev.shiftKey && !ev.ctrlKey)\n            this.shift_pressed = true;\n        if (!ev.shiftKey)\n            this.shift_pressed = null;\n    });\n\n    this.updateLayout = function (options) {\n        options || (options = {});\n        this.updateContainersLayout();\n        xabber.trigger('update_css', options);\n        this.body.$('.ps-container').perfectScrollbar('update');\n    };\n\n    this.updateContainersLayout = function () {\n        let width = this.body.$el.width(),\n            height = this.body.$el.height(),\n            is_wide = width >= constants.WIDTH_MEDIUM,\n            is_narrow = width < constants.WIDTH_MEDIUM;\n        let panel_width,\n            left_panel_width,\n            right_panel_width,\n            right_contact_panel_width,\n            chat_bottom_panel_width,\n            toolbar_width = 64,\n            toolbar_accounts_heigth = height - 506,\n            right_contact_panel_styles = {};\n        if (is_wide || !(is_narrow)) {\n            panel_width = 1536;\n        } else if (is_narrow) {\n            panel_width = width - toolbar_width - 20 - 44;\n        } else {\n            panel_width = (width - toolbar_width - 20) * 7 / 9;\n        }\n        left_panel_width = right_contact_panel_width = 384;\n        right_panel_width = panel_width - (left_panel_width + right_contact_panel_width);\n        chat_bottom_panel_width = '100%';\n        if (is_narrow){\n            right_contact_panel_width = left_panel_width = (panel_width * 0.264) < 288 ? 288 : panel_width * 0.264;\n\n        }\n        if (right_panel_width < 512 ){\n            right_panel_width = panel_width - left_panel_width;\n            this.right_contact_panel_saveable = false;\n            right_contact_panel_styles = {\n                position : 'absolute',\n                right : 0,\n                'z-index' : 499,\n            };\n            if ((right_panel_width - 384) < 128) {\n                right_contact_panel_width = right_panel_width;\n                this.right_contact_panel.$el.removeClass('background-click')\n            }\n            else {\n                right_contact_panel_width = 384\n                this.right_contact_panel.$el.addClass('background-click')\n            }\n        }\n        else {\n            this.right_contact_panel_saveable = true;\n            right_contact_panel_styles = {\n                position : 'static',\n                'z-index' : 0,\n            };\n            this.right_contact_panel.$el.removeClass('background-click')\n\n        }\n        this.right_contact_panel_width = right_contact_panel_width;\n\n        if (!this.body.screen.get('right_contact')) {\n            right_contact_panel_width = 0;\n            right_panel_width = panel_width - left_panel_width;\n        }\n        if (right_panel_width < 768) {\n            chat_bottom_panel_width = right_panel_width;\n        }\n\n        right_contact_panel_styles.width = right_contact_panel_width;\n        this.chat_head.$el.switchClass('chat-head-ultra-narrow', right_panel_width <= 650);\n        this.chat_head.$el.switchClass('chat-head-narrow', right_panel_width < 750);\n        this.chat_head.$el.switchClass('chat-head-normal', (right_panel_width < 850 && right_panel_width >= 750));\n        this.chat_head.$el.switchClass('chat-head-normal-wide', (right_panel_width < 1000 && right_panel_width >= 850));\n        this.chat_head.$el.switchClass('chat-head-wide', right_panel_width > 1000);\n        this.main_panel.setCustomCss({\n            width: panel_width,\n        });\n        this.left_panel.setCustomCss({\n            width: left_panel_width,\n        });\n        this.right_panel.setCustomCss({\n            width: right_panel_width,\n        });\n        this.right_contact_panel.setCustomCss(right_contact_panel_styles);\n        this.chat_bottom.setCustomCss({\n            width: chat_bottom_panel_width,\n        });\n        this.toolbar_view.$el.find('.toolbar-bottom .accounts-wrap .accounts').css({\n            'max-height': toolbar_accounts_heigth,\n        });\n    };\n\n    this.on(\"update_layout\", this.updateLayout, this);\n\n    this.body.addScreen('blank', {});\n\n    this.body.addScreen('login', {\n        login: { xmpp_login: null }\n    });\n\n    this.body.addScreen('settings-modal', {\n        main_overlay: {\n            settings_modal: null,\n        },\n    });\n\n    this.body.addScreen('add_account', {\n        blur_overlay: null,\n        toolbar: null,\n        login: null\n    });\n\n    this.body.addScreen('about', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { about: null },\n            placeholders: null\n        },\n        roster: null\n    });\n\n    let path_acc_settings_modal = new this.ViewPath('account.settings_account_modal');\n\n    this.body.addScreen('account_settings_modal', {\n        main_overlay: {\n            account_settings_modal: path_acc_settings_modal\n        },\n    });\n\n\n    let path_chat_head = new this.ViewPath('chat_item.content.head'),\n        path_chat_body = new this.ViewPath('chat_item.content'),\n        path_chat_body_placeholder = new this.ViewPath('chat_item.content_placeholder'),\n        path_chat_bottom = new this.ViewPath('chat_item.content.bottom'),\n        path_group_invitation = new this.ViewPath('contact.invitation'),\n        path_enable_view = new this.ViewPath('omemo_item.account.omemo_enable_view'),\n        path_contact_details_right = new this.ViewPath('contact.details_view_right'),\n        path_contact_details_right_encrypted = new this.ViewPath('contact.details_view_right_encrypted'),\n        path_participant_messages = new this.ViewPath('model.messages_view'),\n        path_details_participants = new this.ViewPath('contact.details_view.participants');\n\n    this.body.addScreen('contacts', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { contacts: null },\n            right: { contact_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('search', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { discovering_main: null},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('mentions', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { mentions: null },\n            right: { mentions_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('all-chats', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { chats: null },\n            right: { chat_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n\n    this.right_panel.patchTree = function (tree, options) {\n        if (options.right === undefined)\n            return;\n        if (options.show_placeholder) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: null,\n                chat_body_placeholder: path_chat_body_placeholder,\n                chat_bottom: null\n            };\n        }\n        if ((options.right === 'message_context') || (options.right === 'participant_messages') || (options.right === 'searched_messages')) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: path_participant_messages,\n                chat_body_placeholder: null,\n                chat_bottom: path_chat_bottom\n            };\n        }\n        if (options.right === 'group_invitation') {\n            return { details: path_group_invitation };\n        }\n        if (options.details_content === 'participants')\n            return { details_content: path_details_participants };\n        if (options.chat_item) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: path_chat_body,\n                chat_body_placeholder: null,\n                chat_bottom: path_chat_bottom\n            };\n        }\n        if (options.right === 'enable_encryption' || options.omemo_item) {\n            return { details: path_enable_view };\n        }\n    };\n\n\n    this.right_contact_panel.patchTree = function (tree, options) {\n        if (options.right_contact === undefined)\n            return;\n        if (options.right_contact === 'contact_details') {\n            return { details: path_contact_details_right };\n        }\n        if (options.right_contact === 'contact_details_encrypted') {\n            return { details: path_contact_details_right_encrypted };\n        }\n        if (options.details_content === 'participants')\n            return { details_content: path_details_participants };\n    };\n\n    this.body.setScreen('blank');\n\n    // initial synchronization\n    if (!this.accounts.length)\n        this.body.setScreen('login');\n    else if (this.body.isScreen('blank'))\n        this.body.setScreen('all-chats');\n    xabber.trigger(\"start_accounts\");\n\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    utils = env.utils,\n    $ = env.$,\n    templates = env.templates.base,\n    Strophe = env.Strophe,\n    _ = env._,\n    KeyHelper = env.libsignal.KeyHelper,\n    SignalProtocolAddress = env.libsignal.SignalProtocolAddress,\n    SessionBuilder = env.libsignal.SessionBuilder,\n    SessionCipher = env.libsignal.SessionCipher;\n\nxabber.Peer = Backbone.Model.extend({\n    idAttribute: 'jid',\n\n    initialize: function (attrs, options) {\n        attrs = attrs || {};\n        this.account = options.account;\n        this.devices = {};\n        this.store = this.account.omemo.store;\n        this.fingerprints = new xabber.Fingerprints({model: this});\n        this.updateDevices(attrs.devices);\n        this.set({\n            jid: attrs.jid\n        });\n    },\n\n    updateDevices: function (devices) {\n        if (!devices)\n            return;\n        for (let d in this.devices) {\n            if (!devices[d]) {\n                this.account.omemo.removeSession('session' + this.devices[d].address.toString());\n                delete this.devices[d];\n            }\n        }\n        for (let d in devices) {\n            let device = this.getDevice(d),\n                label = devices[d].label;\n            label && device.set('label', label);\n        }\n    },\n\n    getDevicesNode: async function () {\n        if (!this._pending_devices) {\n            this._pending_devices = true;\n            this._dfd_devices = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                this.account.getConnectionForIQ().omemo.getDevicesNode(this.get('jid'), (cb) => {\n                    this.updateDevices(this.account.getConnectionForIQ().omemo.parseUserDevices($(cb)));\n                    this._pending_devices = false;\n                    this._dfd_devices.resolve();\n                    resolve();\n                }, () => {\n                    this._pending_devices = false;\n                    this._dfd_devices.resolve();\n                    resolve();\n                });\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_devices.done(() => {\n                    resolve();\n                });\n            });\n        }\n    },\n\n    encrypt: async function (message) {\n        let enc_promises = [],\n            aes = await utils.AES.encrypt(message),\n            is_trusted = true;\n\n        if (!_.keys(this.devices).length)\n            await this.getDevicesNode();\n        for (let device in this.devices) {\n            enc_promises.push(this.devices[device].encrypt(aes.keydata));\n        }\n\n        for (let device in this.account.omemo.own_devices) {\n            enc_promises.push(this.account.omemo.own_devices[device].encrypt(aes.keydata));\n        }\n\n        let keys = await Promise.all(enc_promises);\n\n        keys = keys.filter(key => key !== null);\n\n        for (let device_id in this.devices) {\n            let device = this.devices[device_id];\n            if (device.get('ik') === null)\n                continue;\n            if (device.get('trusted') === null)\n                is_trusted = 'error';\n            if (is_trusted && device.get('trusted') === undefined)\n                is_trusted = 'none';\n        }\n\n        return {\n            keys: keys,\n            payload: aes.payload,\n            is_trusted: is_trusted\n        };\n    },\n\n    decrypt: async function (deviceId, ciphertext, preKey) {\n        let device = this.getDevice(deviceId);\n\n        return device.decrypt(ciphertext, preKey);\n    },\n\n    getDevice: function (id) {\n        if (!this.devices[id]) {\n            this.devices[id] = new xabber.Device({jid: this.get('jid'), id: id }, { account: this.account, store: this.store});\n        }\n\n        return this.devices[id];\n    }\n});\n\nxabber.Peers = Backbone.Collection.extend({\n    model: xabber.Peer,\n\n    initialize: function (models, options) {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    }\n});\n\nxabber.Fingerprints = xabber.BasicView.extend({\n    className: 'modal main-modal fingerprints-wrap',\n    template: templates.fingerprints,\n    ps_selector: '.fingerprints-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        'click .btn-trust': \"trustDevice\",\n        'click .btn-ignore': \"ignoreDevice\",\n        'click .btn-delete': \"deleteDevice\",\n        \"click .set-label + div\": \"editLabel\",\n        'click .btn-cancel': \"close\"\n    },\n\n    _initialize: function () {\n        if (this.model.own_devices) {\n            this.account = this.model.account;\n            this.omemo = this.model;\n            this.jid = this.account.get('jid');\n            this.is_own_devices = true;\n        } else {\n            this.account = this.model.account;\n            this.omemo = this.account.omemo;\n            this.jid = this.model.get('jid');\n        }\n    },\n\n    open: function () {\n        this.omemo = this.account.omemo;\n        let name = \"\";\n        if (this.is_own_devices)\n            name = this.account.get('name');\n        else {\n            let contact = this.account.contacts.get(this.jid);\n            name = contact ? contact.get('name') : this.jid;\n        }\n        this.$('.header').text(xabber.getString('omemo__dialog_fingerprints__header', [name]));\n        this.data.set('visible', true);\n        this.show();\n        this.$('div.fingerprints-content').html(env.templates.contacts.preloader());\n        if (this.is_own_devices)\n            this.renderOwnDevices();\n        else\n            this.renderDevices();\n    },\n\n    renderDevices: function () {\n        this.model.getDevicesNode().then(() => {\n            let devices_count = _.keys(this.model.devices).length;\n            this.updateFingerprints(this.model.devices);\n        });\n        this.updateOwnFingerprint();\n    },\n\n    renderOwnDevices: function () {\n        this.omemo.getMyDevices().then(() => {\n            let devices_count = _.keys(this.model.own_devices).length;\n            this.updateFingerprints(this.model.own_devices);\n            this.updateOwnFingerprint();\n        });\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    editLabel: function () {\n        this.$('.set-label').removeClass('hidden');\n        this.$('.set-label').focus();\n        let saveLabel = (ev) => {\n            let label = ev.target.value.trim();\n            this.saveLabel(label);\n        };\n        this.$('.set-label')[0].onblur = saveLabel;\n        this.$('input.set-label')[0].onkeydown = (ev) => {\n            if (ev.keyCode == constants.KEY_ENTER)\n                saveLabel(ev);\n        };\n    },\n\n    saveLabel: function (label) {\n        this.$('.set-label').addClass('hidden');\n        if (label == this.account.settings.get('device_label_text'))\n            return;\n        this.account.settings.save('device_label_text', label);\n        this.account.getConnectionForIQ().omemo.publishDevice(this.omemo.get('device_id'), label, () => {\n            this.updateOwnFingerprint();\n        });\n    },\n\n    updateFingerprints: async function (devices) {\n        let counter = 0,\n            devices_count = _.keys(devices).length,\n            dfd = new $.Deferred(),\n            $container = this.$('div.fingerprints-content');\n        dfd.done((f_count) => {\n            if (!f_count)\n                $container.html($(`<div class=\"empty-table\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n            else\n                this.$('.dropdown-button').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    container: this.$('.fingerprints-content')[0],\n                    alignment: 'left'\n                });\n            this.jid == this.account.get('jid') && f_count++;\n            this.$('.additional-info').text(xabber.getQuantityString(\"omemo__dialog_fingerprints__text_devices_count\", f_count, [this.jid, f_count]));\n            $container.find('.preloader-wrapper').detach();\n        });\n        for (let device_id in devices) {\n            if (device_id == this.omemo.get('device_id')) {\n                counter++;\n                if (devices_count == counter)\n                    dfd.resolve($container.find('div.row').length);\n                continue;\n            }\n            let device = devices[device_id];\n            if (device.get('ik')) {\n                let options = {},\n                    f = device.generateFingerprint(),\n                    fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                    is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                counter++;\n                if (devices_count == counter)\n                    dfd.resolve($container.find('div.row').length);\n            }\n            else {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        ik = $bundle.find(`ik`).text();\n                    if (ik) {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let options = {},\n                            f = device.generateFingerprint(),\n                            fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                            is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                        is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                        $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                    }\n                    counter++;\n                    if (devices_count == counter)\n                        dfd.resolve($container.find('div.row').length);\n                }, () => {\n                    counter++;\n                    if (devices_count == counter)\n                        dfd.resolve($container.find('div.row').length);\n                });\n            }\n        }\n    },\n\n    updateOwnFingerprint: async function () {\n        this.$('.this-device-content').html(\"\");\n        let omemo = this.account.omemo;\n        if (omemo) {\n            let device = omemo.own_devices[omemo.get('device_id')];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else if (device.get('ik')) {\n                    device.set('fingerprint', device.generateFingerprint());\n                    this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else {\n                    device.getBundle().then(({pk, spk, ik}) => {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let fingerprint = device.generateFingerprint();\n                        if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                            device.set('fingerprint', fingerprint);\n                        this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                    });\n                }\n            } else {\n                omemo.store.getIdentityKeyPair().then((ik) => {\n                    let pubKey = ik.pubKey;\n                    if (pubKey.byteLength == 33)\n                        pubKey = pubKey.slice(1);\n                    let fingerprint = Array.from(new Uint8Array(pubKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n                    this.$('.this-device-content').append(this.addRow(omemo.get('device_id'), this.account.settings.get('device_label_text'), null, fingerprint));\n                });\n            }\n\n        }\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                deferred.resolve();\n            }});\n        return deferred.promise();\n    },\n\n    trustDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            fingerprint = $target.find('.fingerprint').text().replace(/ /g, \"\"),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n            device_id = Number($target.find('div.device-id').text());\n        $target.children('.buttons[data-trust]').attr('data-trust', 'trust');\n        $target.find('.trust-item-wrap').children().attr('data-value', 'trust').text(xabber.getString('omemo__dialog_fingerprints__button_trust'));\n        this.omemo.updateFingerprints(this.jid, device_id, fingerprint, true);\n        let device = this.is_own_devices ? this.account.omemo.own_devices[device_id] : this.model.devices[device_id];\n        if (device && is_trusted != 'trusted') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', true);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    ignoreDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            fingerprint = $target.find('.fingerprint').text().replace(/ /g, \"\"),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n            device_id = Number($target.find('div.device-id').text());\n        $target.children('.buttons[data-trust]').attr('data-trust', 'ignore');\n        $target.find('.trust-item-wrap').children().attr('data-value', 'ignore').text(xabber.getString('omemo__dialog_fingerprints__button_ignore'));\n        this.omemo.updateFingerprints(this.jid, device_id, fingerprint, false);\n        let device = this.is_own_devices ? this.account.omemo.own_devices[device_id] : this.model.devices[device_id];\n        if (device && is_trusted != 'ignore') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', false);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    addRow: function (id, label, trust, fingerprint, options) {\n        options = options || {};\n        let delete_button = this.is_own_devices ? true : false,\n            edit_setting = id == this.omemo.get('device_id'),\n            old_fingerprint = options.old_fingerprint,\n            error;\n        if (fingerprint.match(/.{1,8}/g))\n            fingerprint = fingerprint.match(/.{1,8}/g).join(\" \");\n        else {\n            fingerprint = '';\n            error = xabber.getString(\"omemo__dialog_fingerprints__invalid_fingerprint\");\n            let device = this.is_own_devices ? this.account.omemo.own_devices[id] : this.model.devices[id];\n            if (device && trust != 'ignore') {\n                trust = 'ignore';\n                this.omemo.updateFingerprints(this.jid, id, fingerprint, false);\n                device.set('trusted', false);\n                device.is_session_initiated = false;\n                device.preKeys = null;\n                this.account.trigger('trusting_updated');\n            }\n        }\n        old_fingerprint && (old_fingerprint = old_fingerprint.match(/.{1,8}/g).join(\" \"));\n        let $row = templates.fingerprint_item({id,label,trust,fingerprint, delete_button, edit_setting, old_fingerprint, error});\n        return $row;\n    },\n\n    deleteDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            device_id = Number($target.find('div.device-id').text());\n        utils.dialogs.ask(xabber.getString(\"omemo__dialog_delete_device__header\"), xabber.getString(\"omemo__dialog_delete_device__text\", [device_id]), null, { ok_button_text: xabber.getString(\"omemo__dialog_delete_device__button_delete\")}).done((result) => {\n            if (result) {\n                $target.detach();\n                let f_count = this.$('div.fingerprints-content').find('div.row').length;\n                if (!f_count)\n                    this.$('div.fingerprints-content').html($(`<div class=\"empty-table\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n                this.jid == this.account.get('jid') && f_count++;\n                this.$('.additional-info').text(xabber.getQuantityString(\"omemo__dialog_fingerprints__text_devices_count\", f_count, [this.jid, f_count]));\n                delete this.model.own_devices[device_id];\n                let conn = this.account.getConnectionForIQ();\n                if (conn && conn.omemo) {\n                    delete conn.omemo.devices[device_id];\n                    conn.omemo.publishDevice(null, null, () => {\n                        $target.detach();\n                    });\n                    conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                }\n            }\n        });\n    },\n});\n\nxabber.FingerprintsOwnDevices = xabber.BasicView.extend({\n    className: 'modal main-modal fingerprints-devices-wrap',\n    template: templates.fingerprints_devices,\n\n    events: {\n        'click .btn-trust': \"trustDevice\",\n        'click .btn-ignore': \"ignoreDevice\",\n        'click .btn-cancel': \"close\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.omemo = this.model;\n        this.jid = this.account.get('jid');\n        this.is_own_devices = true;\n    },\n\n    open: function (device_id, is_own) {\n        this.omemo = this.account.omemo;\n        this.data.set('visible', true);\n        this.updateColorScheme();\n        this.show();\n        this.renderOwnDevices(device_id, is_own);\n    },\n\n    updateTrustDevice: function (device_id, $container, context, callback) {\n        this.omemo.getMyDevices().then(() => {\n            let device = this.model.own_devices[device_id];\n            if (!device)\n                return;\n            if (device.get('ik')) {\n                let f = device.generateFingerprint(),\n                    fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                    is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                this.renderTrustOnFingerprint(is_trusted, $container, context, callback);\n            }\n            else {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        ik = $bundle.find(`ik`).text();\n                    if (ik) {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let f = device.generateFingerprint(),\n                            fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                            is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                        this.renderTrustOnFingerprint(is_trusted, $container, context, callback);\n                    }\n                }, () => {\n                });\n            }\n        });\n    },\n\n    renderTrustOnFingerprint: function (is_trusted, $container, context, callback) {\n        $container.find('.device-encryption').attr('data-trust', is_trusted).addClass('active');\n        $container.attr('data-trust', is_trusted);\n        if (is_trusted === 'unknown'){\n            $container.find('.device-encryption span').text(xabber.getString(\"settings_account__unverified_device\"));\n            $container.attr('data-trust-text', xabber.getString(\"settings_account__unverified_device\"));\n        } else if (is_trusted === 'trust') {\n            $container.find('.device-encryption span').text(xabber.getString(\"settings_account__trusted_device\"));\n            $container.attr('data-trust-text', xabber.getString(\"settings_account__trusted_device\"));\n        } else if (is_trusted === 'ignore') {\n            $container.find('.device-encryption span').text(xabber.getString(\"settings_account__ignored_device\"));\n            $container.attr('data-trust-text', xabber.getString(\"settings_account__ignored_device\"));\n        }\n        if (is_trusted !== 'trust' && is_trusted !== 'ignore'){\n            let $warning_container = $container.closest('.devices-wrap').find('.device-encryption-warning'),\n                untrusted_count = parseInt($warning_container.attr('data-not-trusted-count')) + 1;\n            $warning_container.removeClass('hidden').attr('data-not-trusted-count', untrusted_count);\n            $warning_container.find('.device-encryption-warning-label').html(xabber.getString(\"settings_account__encryption_warning_text\", [untrusted_count]));\n        }\n        $container.find('.device-encryption .mdi-lock').removeClass('hidden');\n        context && context.updateHeight && context.updateHeight();\n        callback && callback();\n    },\n\n    renderOwnDevices: function (device_id, is_own) {\n        this.omemo.getMyDevices().then(() => {\n            this.device_id = device_id;\n            this.fingerprint = null;\n            if (is_own)\n                this.updateOwnFingerprint(device_id);\n            else{\n                this.updateOwnFingerprint(device_id);\n                this.updateFingerprints(device_id);\n            }\n        });\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateFingerprints: async function (device_id) {\n        let counter = 0,\n            dfd = new $.Deferred(),\n            $container = this.$('div.fingerprints-content .other-device-content'),\n            device = this.model.own_devices[device_id];\n        $container.html('');\n        dfd.done((is_error) => {\n            console.log(is_error);\n            this.$('.dropdown-button').dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                container: this.$('.fingerprints-content .other-device-content')[0],\n                alignment: 'left'\n            });\n        });\n        if (device.get('ik')) {\n            let options = {},\n                f = device.generateFingerprint(),\n                fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n            is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n            this.fingerprint = f;\n            $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n            dfd.resolve();\n        }\n        else {\n            this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                let $iq = $(iq),\n                    $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                    ik = $bundle.find(`ik`).text();\n                if (ik) {\n                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                    let options = {},\n                        f = device.generateFingerprint(),\n                        fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                        is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                    is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                    this.fingerprint = f;\n                    $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                }\n                dfd.resolve();\n            }, () => {\n                dfd.resolve(true);\n            });\n        }\n    },\n\n    updateOwnFingerprint: async function () {\n        this.$('.this-device-content').html(\"\");\n        let omemo = this.account.omemo;\n        if (omemo) {\n            let device = omemo.own_devices[omemo.get('device_id')];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    this.$('.this-device-content').html(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else if (device.get('ik')) {\n                    device.set('fingerprint', device.generateFingerprint());\n                    this.$('.this-device-content').html(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else {\n                    device.getBundle().then(({pk, spk, ik}) => {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let fingerprint = device.generateFingerprint();\n                        if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                            device.set('fingerprint', fingerprint);\n                        this.$('.this-device-content').html(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                    });\n                }\n            } else {\n                omemo.store.getIdentityKeyPair().then((ik) => {\n                    let pubKey = ik.pubKey;\n                    if (pubKey.byteLength == 33)\n                        pubKey = pubKey.slice(1);\n                    let fingerprint = Array.from(new Uint8Array(pubKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n                    this.$('.this-device-content').html(this.addRow(omemo.get('device_id'), this.account.settings.get('device_label_text'), null, fingerprint));\n                });\n            }\n\n        }\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                deferred.resolve();\n            }});\n        return deferred.promise();\n    },\n\n    trustDevice: function (ev) {\n        let $target = $(ev.target).closest('div.fingerprints-content'),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust');\n        $target.children('.buttons[data-trust]').attr('data-trust', 'trust');\n        this.omemo.updateFingerprints(this.jid, this.device_id, this.fingerprint, true);\n        let device = this.account.omemo.own_devices[this.device_id];\n        if (device && is_trusted != 'trusted') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', true);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    ignoreDevice: function (ev) {\n        let $target = $(ev.target).closest('div.fingerprints-content'),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust');\n        $target.children('.buttons[data-trust]').attr('data-trust', 'ignore');\n        this.omemo.updateFingerprints(this.jid, this.device_id, this.fingerprint, false);\n        let device = this.account.omemo.own_devices[this.device_id];\n        if (device && is_trusted != 'ignore') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', false);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    addRow: function (id, label, trust, fingerprint, options) {\n        options = options || {};\n        let edit_setting = id == this.omemo.get('device_id'),\n            old_fingerprint = options.old_fingerprint,\n            device_icons = [\n                'device-cellphone',\n                'device-console',\n                'device-desktop',\n                'device-tablet',\n                'device-web',\n            ],\n            error, svg_icon;\n        if (fingerprint.match(/.{1,4}/g))\n            fingerprint = fingerprint.match(/.{1,4}/g).join(\" \");\n        else {\n            fingerprint = '';\n            error = xabber.getString(\"omemo__dialog_fingerprints__invalid_fingerprint\");\n            let device = this.account.omemo.own_devices[id];\n            if (device && trust != 'ignore') {\n                trust = 'ignore';\n                this.omemo.updateFingerprints(this.jid, id, fingerprint, false);\n                device.set('trusted', false);\n                device.is_session_initiated = false;\n                device.preKeys = null;\n                this.account.trigger('trusting_updated');\n            }\n        }\n        old_fingerprint && (old_fingerprint = old_fingerprint.match(/.{1,4}/g).join(\" \"));\n        svg_icon = edit_setting ? 'device-web' : device_icons[Math.floor(Math.random()*device_icons.length)]\n        let $row = templates.fingerprint_devices_item({id,label,trust, svg_icon, fingerprint, edit_setting, old_fingerprint, error});\n        return $row;\n    },\n\n    deleteDevice: function (ev) {\n        let $target = $(ev.target).closest('div.fingerprints-content');\n        utils.dialogs.ask(xabber.getString(\"omemo__dialog_delete_device__header\"), xabber.getString(\"omemo__dialog_delete_device__text\", [this.device_id]), null, { ok_button_text: xabber.getString(\"omemo__dialog_delete_device__button_delete\")}).done((result) => {\n            if (result) {\n                delete this.model.own_devices[this.device_id];\n                let conn = this.account.getConnectionForIQ();\n                if (conn && conn.omemo) {\n                    delete conn.omemo.devices[this.device_id];\n                    conn.omemo.publishDevice(null, null, () => {\n                        this.account.trigger('trusting_updated');\n                        this.close();\n                    });\n                    conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, this.device_id);\n                }\n            }\n        });\n    },\n\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n        this.account.settings.once(\"change:color\", this.updateColorScheme, this);\n    },\n});\n\nxabber.Bundle = Backbone.Model.extend({\n    initialize: async function (attrs, options) {\n        this.preKeys = [];\n        this.model = options.model;\n        this.store = options.store;\n        if (this.model.get('identityKey'))\n            this.getIdentity();\n        else\n            await this.generateIdentity();\n       await this.getPreKeys();\n       if (this.model.get('resend_bundle')) {\n           this.model.publishBundle(this.model.get('device_attrs'));\n           this.model.set('resend_bundle', false);\n           this.model.set('device_attrs', null);\n       }\n    },\n\n    generateIdentity: function () {\n        return Promise.all([\n            KeyHelper.generateIdentityKeyPair(),\n            KeyHelper.generateRegistrationId(),\n        ]).then((result) => {\n            let identityKey = result[0],\n                registrationId = result[1];\n            this.store.put('identityKey', identityKey);\n            this.store.put('registrationId', registrationId);\n            this.model.account.trigger('update_omemo_devices');\n            this.cacheIdentity(identityKey, registrationId);\n        });\n    },\n\n    getIdentity: function () {\n        let identityKey = JSON.parse(this.model.get('identityKey')),\n            registrationId = this.model.get('registrationId'),\n            pubKey = utils.fromBase64toArrayBuffer(identityKey.pubKey),\n            privKey = utils.fromBase64toArrayBuffer(identityKey.privKey);\n        this.store.put('identityKey', {pubKey: pubKey, privKey: privKey});\n        this.store.put('registrationId', registrationId);\n    },\n\n    cacheIdentity: function (identityKey, registrationId) {\n        let pubKey = utils.ArrayBuffertoBase64(identityKey.pubKey),\n            privKey = utils.ArrayBuffertoBase64(identityKey.privKey);\n        this.model.save('identityKey', JSON.stringify({pubKey: pubKey, privKey: privKey}));\n        this.model.save('registrationId', registrationId);\n    },\n\n    generatePreKeys: async function () {\n        let preKeysPromises = [];\n        for (let i = 1; i <= constants.PREKEYS_COUNT; i++) {\n            preKeysPromises.push(this.generatePreKey(i));\n        }\n\n        preKeysPromises.push(this.generateSignedPreKey(1));\n\n        return await Promise.all(preKeysPromises);\n    },\n\n    getSignedPreKey: async function () {\n        let spk = this.model.get('signedPreKey');\n        if (spk) {\n            let pubKey = utils.fromBase64toArrayBuffer(spk.keyPair.pubKey),\n                privKey = utils.fromBase64toArrayBuffer(spk.keyPair.privKey),\n                signature = utils.fromBase64toArrayBuffer(spk.signature),\n                keyPair = {pubKey, privKey},\n                keyId = spk.keyId;\n            return {keyPair, keyId, signature};\n        }\n        else {\n            return await this.generateSignedPreKey(this.preKeys[0].keyId || 1);\n        }\n    },\n\n    getPreKeys: async function () {\n        let prekeys = this.model.prekeys.getAll();\n        if (Object.keys(prekeys).length >= constants.MIN_PREKEYS_COUNT) {\n            for (let p in prekeys) {\n                let pk = prekeys[p],\n                    id = pk.id,\n                    prekey = JSON.parse(pk.key),\n                    priv_pk = utils.fromBase64toArrayBuffer(prekey.privKey),\n                    pub_pk = utils.fromBase64toArrayBuffer(prekey.pubKey),\n                    key_pair = {pubKey: pub_pk, privKey: priv_pk};\n                this.preKeys.push({keyId: id, keyPair: key_pair});\n                this.store.storePreKey(id, key_pair);\n            }\n            this.getUsedPreKeys();\n            let spk = await this.getSignedPreKey();\n            this.preKeys.push(spk);\n            this.store.storeSignedPreKey(spk.keyId, spk.keyPair);\n        }\n        else {\n            await this.generatePreKeys().then((prekeys) => {\n                this.preKeys = prekeys;\n                this.getUsedPreKeys();\n            });\n        }\n    },\n\n    getUsedPreKeys: function () {\n        let prekeys = this.model.own_used_prekeys.getAll();\n        if (Object.keys(prekeys).length) {\n            for (let p in prekeys) {\n                let pk = prekeys[p],\n                    id = pk.id,\n                    prekey = JSON.parse(pk.key),\n                    privKey = utils.fromBase64toArrayBuffer(prekey.privKey),\n                    pubKey = utils.fromBase64toArrayBuffer(prekey.pubKey);\n                this.store.storePreKey(id, {pubKey, privKey});\n            }\n        }\n    },\n\n    generatePreKey: async function (id) {\n        let preKey = await KeyHelper.generatePreKey(id);\n        this.store.storePreKey(id, preKey.keyPair);\n\n        return preKey;\n    },\n\n    generateSignedPreKey: async function (id) {\n        let identity = await this.store.getIdentityKeyPair();\n        let signedPreKey = await KeyHelper.generateSignedPreKey(identity, id);\n\n        this.store.storeSignedPreKey(id, signedPreKey.keyPair);\n        this.cacheSignedPreKey(signedPreKey);\n\n        return signedPreKey;\n    },\n\n    cacheSignedPreKey: function (spk) {\n        let pubKey = utils.ArrayBuffertoBase64(spk.keyPair.pubKey),\n            privKey = utils.ArrayBuffertoBase64(spk.keyPair.privKey),\n            signature = utils.ArrayBuffertoBase64(spk.signature),\n            keyPair = {pubKey, privKey},\n            keyId = spk.keyId,\n            converted_spk = {keyPair, keyId, signature};\n        this.model.save('signedPreKey', converted_spk);\n    }\n\n});\n\nxabber.Prekeys = Backbone.Model.extend({\n    initialize: function (options) {\n        this.name = options.name;\n        this.model = options.model;\n    },\n\n    get: function (id) {\n        let prekeys = _.clone(this.model.get(this.name));\n        return prekeys[id];\n    },\n\n    put: function (prekey) {\n        if (!prekey.id)\n            return;\n        let prekeys = _.clone(this.model.get(this.name));\n        prekeys[prekey.id] = prekey;\n        this.model.save(this.name, prekeys);\n    },\n\n    getAll: function () {\n        let prekeys = _.clone(this.model.get(this.name));\n        return prekeys;\n    },\n\n    remove: function (id) {\n        if (!id)\n            return;\n        let prekeys = _.clone(this.model.get(this.name));\n        delete prekeys[id];\n        this.model.save(this.name, prekeys);\n    }\n});\n\nxabber.Device = Backbone.Model.extend({\n    initialize: function (attrs, options) {\n        this.account = options.account;\n        this.id = attrs.id;\n        this.jid = attrs.jid;\n        this.store = options.store;\n        this.preKeys = null;\n        this.address = new SignalProtocolAddress(attrs.jid, attrs.id);\n    },\n\n    generateFingerprint: function () {\n        let identityKey = this.get('ik');\n        if (!identityKey)\n            return;\n        if (identityKey.byteLength == 33)\n            identityKey = identityKey.slice(1);\n        return Array.from(new Uint8Array(identityKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n    },\n\n    closeSession: function (reason) {\n        this.account.getConnectionForIQ().omemo.sendOptOut({\n            to: this.jid,\n            reason: reason\n        }, () => {});\n    },\n\n    getBundle: async function () {\n        if (!this._pending_bundle) {\n            this._pending_bundle = true;\n            this._dfd_bundle = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: this.jid, id: this.id}, (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${this.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        $spk = $bundle.find('spk'),\n                        spk = {id: $spk.attr('id'), key: $spk.text(), signature: $bundle.find('spks').text()},\n                        ik = $bundle.find(`ik`).text();\n                    this.preKeys = [];\n                    if (!ik)\n                        this.set('ik', null);\n                    $bundle.find('prekeys pk').each((i, pk) => {\n                        let $pk = $(pk);\n                        this.preKeys.push({id: $pk.attr('id'), key: $pk.text()});\n                    });\n                    this._pending_bundle = false;\n                    let pk = this.getRandomPreKey();\n                    if (!pk) {\n                        this._dfd_bundle.reject();\n                        reject();\n                    }\n                    else {\n                        this._dfd_bundle.resolve({pk, spk, ik});\n                        resolve({pk, spk, ik});\n                    }\n                }, () => {\n                    this.set('ik', null);\n                    this.preKeys = [];\n                    this._dfd_bundle.reject();\n                    this._pending_bundle = false;\n                    reject();\n                });\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_bundle.done(({pk, spk, ik}) => {\n                    resolve({pk, spk, ik});\n                });\n                this._dfd_bundle.fail(() => {\n                    reject();\n                });\n            });\n        }\n    },\n\n    getRandomPreKey: function () {\n        let min = 0,\n            max = this.preKeys.length - 1,\n            i = Math.floor(min + Math.random() * (max + 1 - min));\n        return this.preKeys[i];\n    },\n\n    decrypt: async function (cipherText, preKey) {\n        try {\n            let sessionCipher = new SessionCipher(this.store, this.address), plainText;\n\n            if (preKey){\n                plainText = await sessionCipher.decryptPreKeyWhisperMessage(cipherText, 'binary');\n            }\n            else {\n                if (!this.store.hasSession(this.address.toString())) {\n                    let session = this.getCachedSession();\n                    if (session)\n                        await this.store.storeSession(this.address.toString(), session);\n                }\n                plainText = await sessionCipher.decryptWhisperMessage(cipherText, 'binary');\n            }\n\n            return plainText;\n        }\n        catch (e) {\n            throw e;\n        }\n    },\n\n    getPreKey: function () {\n        let pk = this.account.omemo.used_prekeys.get(String(this.id));\n        return pk;\n    },\n\n    getCachedSession: function () {\n        return this.account.omemo.getSession('session' + this.address.toString());\n    },\n\n    encrypt: async function (plainText) {\n        try {\n            if (this.get('trusted') === false && (this.id != this.account.omemo.get('device_id')))\n                return null;\n            if (!this.store.hasSession(this.address.toString()) || !this.is_session_initiated) { // this.preKeys ??\n                if (this.preKeys && !this.preKeys.length)\n                    return null;\n                this.is_session_initiated = true;\n                let s = await this.initSession();\n                if (!s)\n                    return null;\n            }\n\n            let session = this.getSession(),\n                ciphertext = await session.encrypt(plainText);\n\n            return {\n                preKey: ciphertext.type === 3,\n                ciphertext: ciphertext,\n                deviceId: this.address.getDeviceId()\n            };\n        } catch (e) {\n            console.log('Error:', e);\n            console.warn('Could not encrypt data for device with id ' + this.address.getDeviceId());\n\n            return null;\n        }\n    },\n\n    initSession: async function () {\n        let {pk, spk, ik} = await this.getBundle(),\n            cached_pk = this.getPreKey(),\n            id = this.id;\n        if (cached_pk) {\n            if (!spk || spk && JSON.stringify(spk) == JSON.stringify(cached_pk.spk) && JSON.stringify(ik) == JSON.stringify(cached_pk.ik))\n                pk = cached_pk.pk;\n            else\n                this.account.omemo.used_prekeys.put({id, pk, spk, ik});\n        }\n        else\n            this.account.omemo.used_prekeys.put({id, pk, spk, ik});\n        this.set({'pk': utils.fromBase64toArrayBuffer(pk.key), 'ik': utils.fromBase64toArrayBuffer(ik)});\n        this.fingerprint = this.generateFingerprint();\n        let trusted = this.account.omemo.isTrusted(this.jid, id, this.fingerprint);\n        this.set('trusted', trusted);\n        if ((this.id != this.account.omemo.get('device_id')) && trusted === false)\n            return false;\n        this.processPreKey({\n            registrationId: Number(id),\n            identityKey: utils.fromBase64toArrayBuffer(ik),\n            signedPreKey: {\n                keyId: Number(spk.id),\n                publicKey: utils.fromBase64toArrayBuffer(spk.key),\n                signature: utils.fromBase64toArrayBuffer(spk.signature)\n            },\n            preKey: {\n                keyId: Number(pk.id),\n                publicKey: utils.fromBase64toArrayBuffer(pk.key)\n            }\n        });\n        return true;\n    },\n\n    processPreKey: function (preKeyBundle) {\n        this.session = new SessionBuilder(this.store, this.address);\n        return this.session.processPreKey(preKeyBundle);\n    },\n\n    removeSession: function () {\n        this.store.removeSession(this.address.toString());\n        this.sessionCipher = null;\n    },\n\n    getSession: function () {\n        if (!this.sessionCipher) {\n            this.sessionCipher = new SessionCipher(this.store, this.address);\n        }\n        return this.sessionCipher;\n    }\n});\n\nxabber.Omemo = Backbone.ModelWithStorage.extend({\n    defaults: {\n        sessions: {},\n        fingerprints: {},\n        prekeys: {},\n        retract_version: 0,\n        used_prekeys: {},\n        own_used_prekeys: {},\n        device_id: \"\"\n    },\n\n    _initialize: function (attrs, options) {\n        this.on(\"change:device_id\", this.onDeviceIdUpdated, this);\n        this.on(\"destroy\", this.onOmemoDestroyed, this);\n        this.own_devices = {};\n        this.account = options.account;\n        this.peers = new xabber.Peers();\n        if (!this.get('device_id'))\n            this.set('device_id', this.generateDeviceId());\n        this.store = new xabber.SignalProtocolStore();\n        this.account.on(\"devices_updated\", this.onOwnDevicesUpdated, this);\n        this.store.on('prekey_removed', this.removePreKey, this);\n        this.store.on('session_stored', this.cacheSession, this);\n    },\n\n    storeSessions: function () {\n        let sessions = this.get('sessions');\n        for (let session_id in sessions) {\n            let session = sessions[session_id];\n            session && this.store.put(session_id, session);\n        }\n    },\n\n    onOmemoDestroyed: function () {\n        if (this.own_devices && Object.keys(this.own_devices).length != 0)\n            this.deleteOwnDevice();\n        this.cached_messages && this.cached_messages.destroy();\n        this.account.connection.deleteHandler(this._msg_handler);\n    },\n\n    deleteOwnDevice: function () {\n        let device_id = this.get('device_id');\n        delete this.own_devices[device_id];\n        let conn = this.account.getConnectionForIQ();\n        if (conn && conn.omemo) {\n            delete conn.omemo.devices[device_id];\n            conn.omemo.publishDevice(null, null, () => {});\n            conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n        }\n    },\n\n    onConnected: function () {\n        this.prekeys = new xabber.Prekeys({name: 'prekeys', model: this});\n        this.used_prekeys = new xabber.Prekeys({name: 'used_prekeys', model: this});\n        this.own_used_prekeys = new xabber.Prekeys({name: 'own_used_prekeys', model: this});\n        this.cached_messages = new xabber.DecryptedMessages({id: 'decrypted-messages'}, {\n            account: this.account,\n            storage_name: xabber.getStorageName() + '-decrypted-messages-' + this.account.get('jid'),\n            fetch: 'before'\n        });\n        this.bundle = new xabber.Bundle(null, {store: this.store, model: this});\n        this.connection = this.account.connection;\n        this.registerMessageHandler();\n        this.addDevice();\n    },\n\n    getMyDevices: async function () {\n        if (!this._pending_own_devices) {\n            this._pending_own_devices = true;\n            this._dfd_own_devices = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                let conn = this.account.getConnectionForIQ();\n                if (conn) {\n                    if (conn.omemo) {\n                        conn.omemo.getDevicesNode(null, (cb) => {\n                            conn.omemo.devices = conn.omemo.parseUserDevices($(cb));\n                            this._pending_own_devices = false;\n                            this._dfd_own_devices.resolve();\n                            resolve();\n                        }, function () {\n                            this._pending_own_devices = false;\n                            this._dfd_own_devices.resolve();\n                            resolve();\n                        });\n                    } else\n                        this._pending_own_devices = false;\n                } else\n                    this._pending_own_devices = false;\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_own_devices.done(() => {\n                    resolve();\n                });\n            });\n        }\n    },\n\n    updateFingerprints: function (contact, device_id, fingerprint, trusted) {\n        let fingerprints = _.clone(this.get('fingerprints'));\n        if (!fingerprints[contact])\n            fingerprints[contact] = {};\n        let contact_fingerprints = fingerprints[contact];\n        if (_.isArray(contact_fingerprints))\n            contact_fingerprints = {};\n        contact_fingerprints[device_id] = {fingerprint, trusted};\n        fingerprints[contact] = contact_fingerprints;\n        this.save('fingerprints', fingerprints);\n    },\n\n    isTrusted: function (jid, device_id, fingerprint) {\n        let fingerprints = _.clone(this.get('fingerprints'));\n        if (!fingerprints[jid])\n            return;\n        if (!fingerprints[jid][device_id])\n            return;\n        let fing = fingerprints[jid][device_id];\n        if (fing) {\n            if (fing.fingerprint == fingerprint) {\n                if (fing.trusted === undefined)\n                    return;\n                else\n                    return fing.trusted;\n            }\n            else\n                return null;\n        }\n    },\n\n    cacheRetractVersion: function (version) {\n        console.log('version ' + version)\n        this.save('retract_version', version);\n    },\n\n    getRetractVersion: function () {\n        return this.get('retract_version');\n    },\n\n    addDevice: function () {\n        let device_id = this.get('device_id');\n        if (this.connection) {\n            let omemo = this.account.getConnectionForIQ().omemo;\n            if (Object.keys(omemo.devices).length) {\n                let device = omemo.devices[device_id];\n                if (!device) {\n                    let label = this.account.settings.get('device_label_text') || `PC, ${utils.getOS()}, ${env.utils.getBrowser()}`;\n                    this.publishBundle({device_id: device_id, label: label, omemo: omemo});\n                }\n                else {\n                    this.publishBundle();\n                }\n            }\n            else\n                omemo.getDevicesNode(null, (cb) => {\n                    this.account.getConnectionForIQ().omemo.devices = omemo.parseUserDevices($(cb));\n                    for (let dev_id in this.account.getConnectionForIQ().omemo.devices) {\n                        if (!this.own_devices[dev_id])\n                            this.own_devices[dev_id] = new xabber.Device({jid: this.account.get('jid'), id: dev_id}, { account: this.account, store: this.store});\n                    }\n                    let device = omemo.devices[device_id];\n                    if (!device) {\n                        let label = this.account.settings.get('device_label_text') || `PC, ${utils.getOS()}, ${env.utils.getBrowser()}`;\n                        this.publishBundle({device_id: device_id, label: label, omemo: omemo});\n                    }\n                    else {\n                        this.publishBundle();\n                    }\n                });\n        }\n    },\n\n    onDeviceIdUpdated: function () {\n        this.save('device_id', this.get('device_id'));\n    },\n\n    generateDeviceId: function () {\n        if (this.account.get('x_token') && this.account.get('x_token').token_uid && this.account.get('x_token').token_uid.length >= 8 && Number(this.account.get('x_token').token_uid.slice(0,8)))\n            return Number(this.account.get('x_token').token_uid.slice(0,8));\n        let min = 1,\n            max = Math.pow(2, 31) - 1,\n            rand = min + Math.random() * (max + 1 - min);\n        return Math.floor(rand);\n    },\n\n    updateMessage: function (attrs, contact) {\n        if (!this.cached_messages)\n            return;\n        this.cached_messages.updateMessage(attrs, contact);\n    },\n\n    registerMessageHandler: function () {\n        this.account.connection.deleteHandler(this._msg_handler);\n        this._msg_handler = this.account.connection.addHandler((message) => {\n            this.receiveMessage(message);\n            return true;\n        }, null, 'message', null, null, null, {'encrypted': true});\n    },\n\n    encrypt: function (contact, message) {\n        let peer = this.getPeer(contact.get('jid')),\n            $msg = $(message.tree()),\n            origin_id = $msg.children('origin-id').attr('id'),\n            plaintext = Strophe.serialize($msg.children('envelope')[0]) || \"\";\n\n        origin_id && this.cached_messages.putMessage(contact, origin_id, plaintext);\n\n        return peer.encrypt(plaintext).then((encryptedMessage) => {\n\n            let encryptedElement = $build('encrypted', {xmlns: Strophe.NS.OMEMO})\n                .c('header', {\n                    sid: this.get('device_id'),\n                    label: this.account.settings.get('device_label_text')\n                }),\n                myKeys = $build('keys', {jid: this.account.get('jid')});\n\n            encryptedElement.c('keys', { jid: contact.get('jid')});\n\n            for (let key of encryptedMessage.keys) {\n                let attrs = {\n                    rid: key.deviceId,\n                    kex: undefined\n                };\n                if (key.preKey) {\n                    attrs.kex = true;\n                }\n\n                if (peer.devices[key.deviceId])\n                    encryptedElement.c('key', attrs).t(btoa(key.ciphertext.body)).up();\n                else\n                    myKeys.c('key', attrs).t(btoa(key.ciphertext.body)).up();\n\n            }\n            encryptedElement.up().cnode(myKeys.tree());\n\n            encryptedElement.up().up()\n                .c('payload').t(utils.ArrayBuffertoBase64(encryptedMessage.payload));\n\n            $(message.tree()).find('envelope').remove();\n\n            message.cnode(encryptedElement.tree());\n            message.up().c('encryption', {\n                xmlns: Strophe.NS.EXPLICIT_MESSAGE_ENCRYPTION,\n                namespace: Strophe.NS.OMEMO\n            });\n            message.up().c('store', {\n                xmlns: 'urn:xmpp:hints'\n            }).up()\n                .c('body').t('This message is encrypted using OMEMO end-to-end encryption.').up();\n\n            return {message: message, is_trusted: encryptedMessage.is_trusted};\n        }).catch((msg) => {\n        });\n    },\n\n    hasChanges: function (o1, o2) {\n        let obj1 = _.clone(o1), obj2 = _.clone(o2);\n        for (let d in obj1) {\n            delete obj2[d];\n        }\n        for (let d in obj2) {\n            delete obj1[d];\n        }\n        return Object.keys(obj1).length || Object.keys(obj2).length;\n    },\n\n    receiveHeadlineMessage: function (message) {\n        if (!this.account.omemo || (this.account.omemo && this.cid != this.account.omemo.cid))\n            return;\n        let $message = $(message),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            node = $message.find('items').attr('node');\n        if ($message.find('event[xmlns=\"' + Strophe.NS.PUBSUB + '#event\"]').length) {\n            if (node == `${Strophe.NS.OMEMO}:devices`) {\n                let devices = this.account.getConnectionForIQ().omemo.parseUserDevices($message);\n                if (from_jid === this.account.get('jid')) {\n                    let has_devices = this.own_devices && Object.keys(this.own_devices).length,\n                        has_changes = this.hasChanges(this.own_devices, devices);\n                    this.account.getConnectionForIQ().omemo.devices = devices;\n                    let device_id = this.get('device_id'),\n                        device = this.account.getConnectionForIQ().omemo.devices[device_id];\n                    if (has_changes) {\n                        this.account.trigger(\"devices_updated\");\n                    }\n                    if (has_devices && has_changes) {\n                        this.account.trigger('trusting_updated');\n                    }\n                }\n                else {\n                    let peer = this.getPeer(from_jid),\n                        has_devices = peer.devices && Object.keys(peer.devices).length,\n                        has_changes = this.hasChanges(peer.devices, devices);\n                    peer.updateDevices(devices);\n                    if (has_changes) {\n                        this.account.trigger('trusting_updated');\n                    }\n                }\n                return;\n            }\n            if (node == `${Strophe.NS.OMEMO}:bundles`) {\n                let $item = $message.find('items item').first(),\n                    device_id = $item.attr('id'),\n                    $bundle = $item.children(`bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`), device;\n                if (from_jid === this.account.get('jid')) {\n                    let devices = this.account.getConnectionForIQ().omemo.devices\n                    if (devices && devices[device_id]) {\n                        if (!this.own_devices[device_id])\n                            this.own_devices[device_id] = new xabber.Device({jid: this.account.get('jid'), id: device_id}, { account: this.account, store: this.store});\n                        device = this.own_devices[device_id];\n                    }\n                } else {\n                    let peer = this.peers.get(from_jid);\n                    if (peer) {\n                        device = peer.devices[device_id];\n                    }\n                }\n                if (device) {\n                    let ik = $bundle.find(`ik`).text(),\n                        device_ik = device.get(`ik`), preKeys = [];\n                    if (!ik) {\n                        device.set('ik', null);\n                        return;\n                    }\n                    $bundle.find('prekeys pk').each((i, pk) => {\n                        let $pk = $(pk);\n                        preKeys.push({id: $pk.attr('id'), key: $pk.text()});\n                    });\n                    device.preKeys = preKeys;\n                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                    device.set('fingerprint', device.generateFingerprint());\n                    device_ik && (device_ik = utils.ArrayBuffertoBase64(device_ik));\n                    if (!_.isUndefined(device_ik) && device_ik != ik)\n                        this.account.trigger('trusting_updated');\n                }\n            }\n        }\n    },\n\n    receiveChatMessage: function (message, options, deferred) {\n        options = options || {};\n        let $message = $(message);\n        if ($message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length) {\n            if ($message.find('result[xmlns=\"' + Strophe.NS.MAM + '\"]').length)\n                _.extend(options, {\n                    is_mam: true,\n                    is_archived: true\n                });\n            if ($message.find('[xmlns=\"' + Strophe.NS.CARBONS + '\"]').length)\n                options.carbon_copied = true;\n\n            let $msg = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).parent(),\n                jid = (Strophe.getBareJidFromJid($msg.attr('from')) === this.account.get('jid') ? Strophe.getBareJidFromJid($msg.attr('to')) : Strophe.getBareJidFromJid($msg.attr('from'))) || options.from_jid,\n                contact = this.account.contacts.get(options.conversation ? options.conversation : jid),\n                stanza_id = $msg.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n                cached_msg = stanza_id && this.cached_messages && this.cached_messages.getMessage(contact, stanza_id);\n\n            if (Strophe.getBareJidFromJid($msg.attr('from')) != this.account.get('jid') && options.carbon_copied && options.carbon_direction && options.carbon_direction === 'sent')\n                return;\n\n            if (cached_msg) {\n                if (!options.replaced) {\n                    options.encrypted = true;\n                    this.getTrusted($message).then((is_trusted) => {\n                        options.is_trusted = is_trusted;\n                        $message.find('body').remove();\n                        $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(cached_msg);\n                        if (options.gallery && deferred)\n                            deferred.resolve($message, options);\n                        this.account.chats.receiveChatMessage($message[0], options);\n                    });\n                    return;\n                }\n                else if (options.replaced && $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"] header`).attr('sid') == this.get('device_id')) {\n                    options.encrypted = true;\n                    $message.find('body').remove();\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(cached_msg);\n                    let chat = this.account.chats.getChat(contact, 'encrypted');\n                    chat && chat.messages.createFromStanza($message, options);\n                    let msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id);\n                    if (msg_item) {\n                        msg_item.set('last_replace_time', $message.find('replaced').attr('stamp'));\n                        chat && chat.item_view.updateLastMessage(chat.last_message);\n                    }\n                    return;\n                }\n            }\n\n            if (options.replaced) {\n                this.decrypt(message.children('replace').children('message'), options).then((decrypted_msg) => {\n                    if (decrypted_msg) {\n                        options.encrypted = true;\n                        stanza_id && this.cached_messages.putMessage(contact, stanza_id, decrypted_msg);\n                        $message.find('body').remove();\n                        $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(decrypted_msg);\n                        let chat = this.account.chats.getChat(contact, 'encrypted');\n                        chat && chat.messages.createFromStanza($message, options);\n                        let msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id);\n                        if (msg_item) {\n                            msg_item.set('last_replace_time', $message.find('replaced').attr('stamp'));\n                            chat && chat.item_view.updateLastMessage(chat.last_message);\n                        }\n                    }\n                });\n            } else {\n                this.getTrusted($message).then((is_trusted) => {\n                    options.is_trusted = is_trusted;\n                    return this.decrypt(message);\n                }).then((decrypted_msg) => {\n                    if (decrypted_msg) {\n                        options.encrypted = true;\n                        stanza_id && this.cached_messages.putMessage(contact, stanza_id, decrypted_msg);\n                        $message.find('body').remove();\n                    }\n                    else {\n                        if (decrypted_msg === null) {\n                            this.account.chats.getChat(contact, 'encrypted').item_view.updateLastMessage();\n                            return;\n                        }\n                        options.not_encrypted = true;\n                        delete options.is_trusted;\n                    }\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(decrypted_msg);\n                    if (options.gallery && decrypted_msg && deferred)\n                        deferred.resolve($message, options);\n                    else if (options.gallery && deferred)\n                        deferred.reject();\n                    this.account.chats.receiveChatMessage($message[0], options);\n                }).catch((e) => {\n                    if (e.name === 'MessageCounterError')//for capturing double decryption of same message\n                        return;\n                    if (options.synced_msg && !options.decryption_retry) {\n                        this.receiveChatMessage($message[0], _.extend(options, {decryption_retry: true}));\n                        return;\n                    }\n                    options.not_encrypted = true;\n                    delete options.is_trusted;\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).remove();\n                    if (options.gallery && deferred)\n                        deferred.reject();\n                    this.account.chats.receiveChatMessage($message[0], options);\n                });\n            }\n            if (options.gallery && deferred)\n                deferred.reject();\n        }\n        if (options.gallery && deferred)\n            deferred.reject();\n    },\n\n    checkOwnFingerprints: async function () {\n        return new Promise((resolve, reject) => {\n            let is_trusted = true,\n                dfd = new $.Deferred(), counter = 0;\n            dfd.done((t) => {\n                let trust = t === null ? 'error' : (t === undefined ? 'none' : t);\n                resolve(trust);\n            });\n            if (Object.keys(this.own_devices).length) {\n                counter = Object.keys(this.own_devices).length;\n                for (let device_id in this.own_devices) {\n                    let device = this.own_devices[device_id];\n                    if (device_id == this.get('device_id')) {\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                        continue;\n                    }\n                    if (device.get('fingerprint')) {\n                        let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else if (device.get('ik')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null)\n                                is_trusted = undefined;\n                            if (trusted === null)\n                                is_trusted = null;\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        });\n                    }\n                }\n            }\n            else {\n                this.getMyDevices().then(() => {\n                    this.onOwnDevicesUpdated().then(() => {\n                        counter = Object.keys(this.own_devices).length;\n                        for (let device_id in this.own_devices) {\n                            if (device_id == this.get('device_id')) {\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                                continue;\n                            }\n                            let device = this.own_devices[device_id];\n                            if (device.get('fingerprint')) {\n                                let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                                if (trusted === undefined && is_trusted !== null)\n                                    is_trusted = undefined;\n                                if (trusted === null)\n                                    is_trusted = null;\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                            } else {\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                            }\n                        }\n                    });\n                });\n            }\n        });\n    },\n\n    checkContactFingerprints: function (contact) {\n        return new Promise((resolve, reject) => {\n            let is_trusted = true,\n                peer = this.getPeer(contact.get('jid')),\n                dfd = new $.Deferred(), counter = 0, unverified_counter = 0;\n            dfd.done((t) => {\n                let trust = t === null ? 'error' : (t === undefined ? 'none' : t);\n                contact.trigger('update_trusted', trust);\n                resolve({trust: trust, unverified_counter: unverified_counter});\n            });\n            if (Object.keys(peer.devices).length) {\n                counter = Object.keys(peer.devices).length;\n                for (let device_id in peer.devices) {\n                    let device = peer.devices[device_id];\n                    if (device.get('fingerprint')) {\n                        let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null){\n                            is_trusted = undefined;\n                            unverified_counter++;\n                        }\n                        if (trusted === null){\n                            is_trusted = null;\n                            unverified_counter++;\n                        }\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else if (device.get('ik')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null){\n                            is_trusted = undefined;\n                            unverified_counter++;\n                        }\n                        if (trusted === null){\n                            is_trusted = null;\n                            unverified_counter++;\n                        }\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                dfd.resolve(is_trusted);\n                            }\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null){\n                                is_trusted = undefined;\n                                unverified_counter++;\n                            }\n                            if (trusted === null){\n                                is_trusted = null;\n                                unverified_counter++;\n                            }\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                dfd.resolve(is_trusted);\n                            }\n                        });\n                    }\n                }\n            } else {\n                peer.getDevicesNode().then(() => {\n                    counter = Object.keys(peer.devices).length;\n                    !counter && dfd.resolve('nil');\n                    for (let device_id in peer.devices) {\n                        let device = peer.devices[device_id];\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null){\n                                is_trusted = undefined;\n                                unverified_counter++;\n                            }\n                            if (trusted === null) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                else{\n                                    is_trusted = null;\n                                    unverified_counter++;\n                                }\n                            }\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                dfd.resolve(is_trusted);\n                            }\n                        });\n                    }\n                });\n\n            }\n        });\n    },\n\n    getTrusted: async function ($message) {\n        let $msg = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).parent(),\n            from_jid = Strophe.getBareJidFromJid($msg.attr('from')),\n            to_jid = Strophe.getBareJidFromJid($msg.attr('to')),\n            contact = this.account.contacts.mergeContact(from_jid === this.account.get('jid') ? to_jid : from_jid);\n\n        let own_trusted = await this.checkOwnFingerprints(),\n            contact_trusted = await this.checkContactFingerprints(contact);\n        contact_trusted = contact_trusted.trust;\n        if (own_trusted === 'error' || (own_trusted === 'none' && contact_trusted !== 'error')) {\n            return own_trusted;\n        } else if (contact_trusted === 'error' || contact_trusted === 'none') {\n            return contact_trusted;\n        } else {\n            let device_id = $message.find('encrypted header').attr('sid'),\n                peer = this.getPeer(contact.get('jid')),\n                device = peer.devices[device_id];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                    if (trusted === false) {\n                        return 'untrusted';\n                    }\n                }\n            }\n            return true;\n        }\n    },\n\n    receiveMessage: function (message) {\n        let $message = $(message),\n            type = $message.attr('type');\n        if (type === 'headline') {\n            return this.receiveHeadlineMessage(message);\n        }\n    },\n\n    parseEncrypted: function ($encrypted) {\n        let $payload = $encrypted.children(`payload`),\n            $header = $encrypted.children('header'),\n            payload = utils.fromBase64toArrayBuffer($payload.text()),\n            sid = Number($header.attr('sid'));\n\n        let keys = $header.find(`key`).get().map(function(keyElement) {\n            return {\n                preKey: $(keyElement).attr('kex') === 'true' || $(keyElement).attr('kex') === '1',\n                ciphertext: utils.fromBase64toArrayBuffer($(keyElement).text()),\n                deviceId: parseInt($(keyElement).attr('rid'))\n            };\n        });\n\n        return {sid, keys, payload};\n    },\n\n    getPeer: function (jid) {\n        if (!this.peers.get(jid))\n            this.peers.create({jid}, {account:this.account});\n        return this.peers.get(jid);\n    },\n\n    decrypt: async function (message, options) {\n        let $message = $(message),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')) || options.from_jid,\n            $encrypted;\n\n        if ($message.find('result[xmlns=\"'+Strophe.NS.MAM+'\"]').length) {\n            let $m = $message.find('message').first();\n            from_jid = Strophe.getBareJidFromJid($m.attr('from'));\n            $encrypted = $message.children(`result`).children(`forwarded`).children(`message`).children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n        }\n        else if ($message.find('[xmlns=\"'+Strophe.NS.CARBONS+'\"]').length){\n            $encrypted = $message.children(`[xmlns=\"${Strophe.NS.CARBONS}\"]`).children(`forwarded`).children(`message`).children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n        }\n        else\n            $encrypted = $message.children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n\n        let encryptedData = this.parseEncrypted($encrypted),\n            deviceId = this.get('device_id'),\n            ownPreKeysArr =  encryptedData.keys.filter(preKey => preKey.deviceId == deviceId),\n            ownPreKey = ownPreKeysArr[0];\n        if (!ownPreKey)\n            return null;\n        let peer = this.getPeer(from_jid),\n            exportedKey;\n        try {\n            exportedKey = await peer.decrypt(encryptedData.sid, ownPreKey.ciphertext, ownPreKey.preKey);\n        }\n        catch (e) {\n            throw e;\n        }\n        if (!exportedKey)\n            return;\n        let exportedMasterKey = exportedKey.slice(0, 32),\n            HMACData = exportedKey.slice(32);\n\n        return utils.AES.decrypt(exportedMasterKey, HMACData, encryptedData.payload);\n    },\n\n    toBase64: function (arrayBuffer) {\n        return btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n    },\n\n    publish: function (spk, ik, pks, callback) {\n        if (!this.account.connection)\n            return;\n        let conn_omemo = this.account.getConnectionForIQ().omemo,\n            prekeys = [];\n        pks.forEach((pk) => {\n            let id = pk.keyId,\n                pubKey = utils.ArrayBuffertoBase64(pk.keyPair.pubKey),\n                privKey = utils.ArrayBuffertoBase64(pk.keyPair.privKey),\n                key = JSON.stringify({pubKey, privKey});\n            if (!pk.signature) {\n                prekeys.push({id: id, key: pubKey});\n                this.prekeys.put({id, key});\n            }\n        });\n        conn_omemo.configNode(() => {\n            conn_omemo.publishBundle({\n                spk: {id: spk.keyId, key: utils.ArrayBuffertoBase64(spk.keyPair.pubKey)},\n                spks: utils.ArrayBuffertoBase64(spk.signature),\n                ik:  utils.ArrayBuffertoBase64(ik),\n                pks: prekeys,\n                device_id: this.get('device_id')\n            }, callback);\n        });\n    },\n\n    removePreKey: async function (id) {\n        if (!this.account)\n            return;\n        let bundle = this.bundle,\n            removed_pk = this.bundle.preKeys.find(p => p.keyId === id && !p.signature);\n        if (!removed_pk)\n            return;\n        let pubKey = utils.ArrayBuffertoBase64(removed_pk.keyPair.pubKey),\n            privKey = utils.ArrayBuffertoBase64(removed_pk.keyPair.privKey),\n            key = JSON.stringify({pubKey, privKey}),\n            idx = this.bundle.preKeys.indexOf(removed_pk);\n        bundle.preKeys.splice(idx, 1);\n        this.own_used_prekeys.put({id, key});\n        this.prekeys.remove(id);\n        if (bundle.preKeys.length && bundle.preKeys.length < constants.MIN_PREKEYS_COUNT) {\n            let missing_keys = constants.PREKEYS_COUNT - bundle.preKeys.length,\n                last_id = _.sortBy(bundle.preKeys, 'keyId')[bundle.preKeys.length - 1].keyId,\n                counter = 0;\n            for (let i = ++last_id; i < (last_id + missing_keys); i++){\n                await this.bundle.generatePreKey(i).then((prekey) => {\n                    bundle.preKeys[i] = prekey;\n                    counter++;\n                    if (counter === missing_keys)\n                        this.account.omemo.publishBundle();\n                });\n            }\n            if (missing_keys === 0)\n                this.account.omemo.publishBundle();\n        }\n        else\n            this.account.omemo.publishBundle();\n    },\n\n    cacheSession: function (attrs) {\n        let id = attrs.id,\n            session = attrs.rec,\n            sessions = _.clone(this.get('sessions'));\n        _.isArray(sessions) && (sessions = {});\n        sessions[id] = session;\n        this.save('sessions', sessions);\n    },\n\n    removeSession: function (id) {\n        let sessions = _.clone(this.get('sessions'));\n        _.isArray(sessions) && (sessions = {});\n        delete sessions[id];\n        this.save('sessions', sessions);\n    },\n\n    getSession: function (id) {\n        let sessions = _.clone(this.get('sessions'));\n        return sessions[id];\n    },\n\n    publishBundle: async function (device_attrs) {\n        if (!this.bundle)\n            return;\n        let spk = this.bundle.preKeys.find(pk => pk.signature),\n            ik = await this.store.getIdentityKeyPair(),\n            pks = this.bundle.preKeys;\n        if (!spk || !ik) {\n            this.set('resend_bundle', true);\n            this.set('device_attrs', device_attrs);\n            return;\n        }\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            if (device_attrs){\n                device_attrs.omemo.publishDevice(device_attrs.device_id, device_attrs.label);\n            }\n        });\n        this.account.getConnectionForIQ().omemo.getBundleInfo({jid: this.account.get('jid'), id: this.get('device_id')}, (res) => {\n            this.publish(spk, ik.pubKey, pks, () => {\n                dfd.resolve();\n            });\n        }, (err) => {\n            if (($(err).find('error').attr('code') == 404)){\n                this.account.getConnectionForIQ().omemo.createBundleNode(() => {\n                    this.publish(spk, ik.pubKey, pks, () => {\n                        dfd.resolve();\n                    });\n                });\n            }\n        });\n    },\n\n    onOwnDevicesUpdated: async function () {\n        return new Promise((resolve, reject) => {\n            let conn = this.account.getConnectionForIQ();\n            if (conn && conn.omemo && conn.omemo.devices) {\n                for (let d in this.own_devices) {\n                    if (!conn.omemo.devices[d]) {\n                        this.account.omemo.removeSession('session' + this.own_devices[d].address.toString());\n                        delete this.own_devices[d];\n                    }\n                }\n                let counter = Object.keys(conn.omemo.devices).length;\n                for (let device_id in conn.omemo.devices) {\n                    if (!this.own_devices[device_id])\n                        this.own_devices[device_id] = new xabber.Device({\n                            jid: this.account.get('jid'),\n                            id: device_id\n                        }, {account: this.account, store: this.store});\n                    let device = this.own_devices[device_id],\n                        label = conn.omemo.devices[device_id].label;\n                    if (!device.get('ik')) {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            !counter && resolve();\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            let fingerprint = device.generateFingerprint();\n                            if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                                device.set('fingerprint', fingerprint);\n                            counter--;\n                            !counter && resolve();\n                        }).catch(() => {\n                            counter--;\n                            !counter && resolve();\n                        });\n                    } else if (!device.get('fingerprint')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        counter--;\n                        !counter && resolve();\n                    } else {\n                        counter--;\n                        !counter && resolve();\n                    }\n                    label && device.set('label', label);\n                }\n            }\n        });\n    }\n});\n\nxabber.DecryptedMessages = Backbone.ModelWithStorage.extend({\n    defaults: {\n        messages: {}\n    },\n\n    getMessage: function (contact, stanza_id) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        return contact_messages[stanza_id];\n    },\n\n    getMessages: function (contact) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        return contact_messages;\n    },\n\n    putMessage: function (contact, stanza_id, message) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        contact_messages[stanza_id] = message;\n        messages[contact.get('jid')] = contact_messages;\n        this.save('messages', messages);\n    },\n\n    removeMessage: function (attrs, contact) {\n        let origin_id = attrs.origin_id;\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        delete contact_messages[origin_id];\n        messages[contact.get('jid')] = contact_messages;\n        this.save('messages', messages);\n    },\n\n    updateMessage: function (attrs, contact) {\n        let stanza_id = attrs.stanza_id,\n            origin_id = attrs.origin_id,\n            messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {},\n            message = contact_messages[origin_id];\n        if (origin_id)\n            this.removeMessage({origin_id}, contact);\n        if (stanza_id)\n            this.putMessage(contact, stanza_id, message);\n    }\n});\n\nxabber.SignalProtocolStore = Backbone.Model.extend({\n    initialize: function () {\n        this.Direction = {\n            SENDING: 1,\n            RECEIVING: 2\n        };\n        this.store = {};\n    },\n\n    getIdentityKeyPair: function () {\n        return Promise.resolve(this.get('identityKey'));\n    },\n\n    getLocalRegistrationId: function () {\n        return Promise.resolve(this.get('registrationId'));\n    },\n\n    put: function (key, value) {\n        if (key === undefined || value === undefined || key === null || value === null)\n            throw new Error(\"Tried to store undefined/null\");\n        this.store[key] = value;\n    },\n\n    get: function (key, defaultValue) {\n        if (key === null || key === undefined)\n            throw new Error(\"Tried to get value for undefined/null key\");\n        if (key in this.store) {\n            return this.store[key];\n        } else {\n            return defaultValue;\n        }\n    },\n\n    remove: function (key) {\n        if (key === null || key === undefined)\n            throw new Error(\"Tried to remove value for undefined/null key\");\n        delete this.store[key];\n    },\n\n    isTrustedIdentity: function (identifier, identityKey, direction) {\n        if (identifier === null || identifier === undefined) {\n            throw new Error(\"tried to check identity key for undefined/null key\");\n        }\n        if (!(identityKey instanceof ArrayBuffer)) {\n            throw new Error(\"Expected identityKey to be an ArrayBuffer\");\n        }\n        let trusted = this.get('identityKey' + identifier);\n        if (trusted === undefined) {\n            return Promise.resolve(true);\n        }\n        return Promise.resolve(util.toString(identityKey) === util.toString(trusted));\n    },\n\n    loadIdentityKey: function (identifier) {\n        if (identifier === null || identifier === undefined)\n            throw new Error(\"Tried to get identity key for undefined/null key\");\n        return Promise.resolve(this.get('identityKey' + identifier));\n    },\n\n    saveIdentity: function (identifier, identityKey) {\n        if (identifier === null || identifier === undefined)\n            throw new Error(\"Tried to put identity key for undefined/null key\");\n\n        let address = new SignalProtocolAddress.fromString(identifier);\n\n        let existing = this.get('identityKey' + address.getName());\n        this.put('identityKey' + address.getName(), identityKey);\n\n        if (existing && libsignal.toString(identityKey) !== libsignal.toString(existing)) {\n            return Promise.resolve(true);\n        } else {\n            return Promise.resolve(false);\n        }\n\n    },\n\n    /* Returns a prekeypair object or undefined */\n    loadPreKey: function (keyId) {\n        let res = this.get('25519KeypreKey' + keyId);\n        if (res !== undefined) {\n            res = {pubKey: res.pubKey, privKey: res.privKey};\n        }\n        return Promise.resolve(res);\n    },\n\n    storePreKey: function (keyId, keyPair) {\n        return Promise.resolve(this.put('25519KeypreKey' + keyId, keyPair));\n    },\n\n    removePreKey: function (keyId) {\n        this.trigger('prekey_removed', keyId);\n        // return Promise.resolve(this.remove('25519KeypreKey' + keyId));\n    },\n\n    /* Returns a signed keypair object or undefined */\n    loadSignedPreKey: function (keyId) {\n        let res = this.get('25519KeysignedKey' + keyId);\n        if (res !== undefined) {\n            res = {pubKey: res.pubKey, privKey: res.privKey};\n        }\n        return Promise.resolve(res);\n    },\n\n    storeSignedPreKey: function (keyId, keyPair) {\n        return Promise.resolve(this.put('25519KeysignedKey' + keyId, keyPair));\n    },\n\n    removeSignedPreKey: function (keyId) {\n        return Promise.resolve(this.remove('25519KeysignedKey' + keyId));\n    },\n\n    loadSession: function (identifier) {\n        return Promise.resolve(this.get('session' + identifier));\n    },\n\n    hasSession: function (identifier) {\n        return !!this.get('session' + identifier)\n    },\n\n    storeSession: function (identifier, record) {\n        this.trigger('session_stored', {id: 'session' + identifier, rec: record});\n        return Promise.resolve(this.put('session' + identifier, record));\n    },\n\n    removeSession: function (identifier) {\n        return Promise.resolve(this.remove('session' + identifier));\n    },\n\n    getAllSessions: function (identifier) {\n        let sessions = [];\n        for (let id in this.store) {\n            if (id.startsWith('session' + identifier)) {\n                sessions.push({id: id, session: this.store[id]});\n            }\n        }\n        return Promise.resolve(sessions);\n    },\n\n    removeAllSessions: function (identifier) {\n        for (let id in this.store) {\n            if (id.startsWith('session' + identifier)) {\n                delete this.store[id];\n            }\n        }\n        return Promise.resolve();\n    }\n});\n\nxabber.OMEMOEnablePlaceholder = xabber.BasicView.extend({\n    className: 'omemo-enable-placeholder',\n\n    events: {\n        'click .btn-enable': 'enableOmemo',\n        'click .btn-escape': 'closeOmemoPlaceholder'\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.updateColorScheme();\n        this.$el.html(templates.omemo_enable({jid: this.account.get('jid')}));\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        this.account.session.on(\"change:connected\", this.updateConnected, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.account.settings.on(\"change:omemo\", this.onOmemoChange, this);\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    onUpdatedScreen: function () {\n        if (!this.account.omemo_enable_placeholder || this.account.omemo_enable_placeholder.cid !== this.cid)\n            return;\n        this.$el.detach();\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    },\n\n    updateConnected: function () {\n        if (!this.account.isConnected())\n            this.close();\n    },\n\n    enableOmemo: function () {\n        this.account.settings.save('omemo', true);\n        this.close();\n        this.account.omemo = new xabber.Omemo({id: 'omemo'}, {\n            account: this.account,\n            storage_name: xabber.getStorageName() + '-omemo-settings-' + this.account.get('jid'),\n            fetch: 'before'\n        });\n        setTimeout(() => {\n            this.account.omemo.onConnected();\n        }, 2000);\n    },\n\n    closeOmemoPlaceholder: function () {\n        this.account.settings.save('omemo', false);\n        this.close();\n    },\n\n    onOmemoChange: function () {\n        if (this.account.settings.get('omemo'))\n            this.close();\n    },\n\n    close: function () {\n        this.trigger('remove') && this.remove();\n        this.account.omemo_enable_placeholder = undefined;\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    if (!this.settings.get('omemo'))\n        return;\n    this.omemo = new xabber.Omemo({id: 'omemo'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-omemo-settings-' + this.get('jid'),\n        fetch: 'before'\n    });\n});\n\nxabber.Account.addConnPlugin(function () {\n    if (!this.settings.get('omemo'))\n        return;\n    this.omemo.onConnected();\n}, true, true);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\nimport views from \"xabber-views\";\nimport api_service from \"xabber-api-service\";\nimport strophe from \"xabber-strophe\";\nimport vcard from \"xabber-vcard\";\nimport accounts from \"xabber-accounts\";\nimport discovery from \"xabber-discovery\";\nimport contacts from \"xabber-contacts\";\nimport chats from \"xabber-chats\";\nimport searching from \"xabber-searching\";\nimport mentions from \"xabber-mentions\";\nimport ui from \"xabber-ui\";\nimport omemo from \"xabber-omemo\";\n\nxabber.extendWith(views, api_service, strophe, vcard,\n    accounts, discovery, contacts, chats, searching, mentions, ui, omemo);\nglobal.xabber = xabber;\n\nexport default xabber;\n","var map = {\n\t\"./accounts/emojis.json\": 85304\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 92444;","var map = {\n\t\"./accounts/account_settings_modal.html\": 59166,\n\t\"./accounts/add_account.html\": 24109,\n\t\"./accounts/audio_file_waveform.html\": 56949,\n\t\"./accounts/avatars_gallery.html\": 47837,\n\t\"./accounts/change_account_password.html\": 15415,\n\t\"./accounts/change_password.html\": 34999,\n\t\"./accounts/change_status.html\": 33999,\n\t\"./accounts/current_token_item_modal.html\": 5766,\n\t\"./accounts/delete_files_media_gallery.html\": 72971,\n\t\"./accounts/emoji_panel.html\": 90231,\n\t\"./accounts/emoji_picker.html\": 25482,\n\t\"./accounts/emoji_picker_tabs.html\": 20458,\n\t\"./accounts/existing_groupchat_item.html\": 4870,\n\t\"./accounts/global_settings_item_modal.html\": 56001,\n\t\"./accounts/media_gallery_account.html\": 57872,\n\t\"./accounts/media_gallery_account_file.html\": 39440,\n\t\"./accounts/resource.html\": 75216,\n\t\"./accounts/resource_right.html\": 255,\n\t\"./accounts/single_account_settings_modal.html\": 86572,\n\t\"./accounts/status_message_input_widget.html\": 71326,\n\t\"./accounts/token_item_modal.html\": 84377,\n\t\"./accounts/toolbar_item.html\": 54810,\n\t\"./accounts/unregister_account.html\": 49485,\n\t\"./accounts/webcam_panel.html\": 92797,\n\t\"./accounts/xmpp_login.html\": 64630,\n\t\"./base/about.html\": 99288,\n\t\"./base/backgrounds_gallery.html\": 77428,\n\t\"./base/color_picker.html\": 51462,\n\t\"./base/color_scheme.html\": 83430,\n\t\"./base/dialog.html\": 62985,\n\t\"./base/fingerprint_devices_item.html\": 16969,\n\t\"./base/fingerprint_item.html\": 75551,\n\t\"./base/fingerprints.html\": 5822,\n\t\"./base/fingerprints_devices.html\": 26376,\n\t\"./base/input_widget.html\": 10596,\n\t\"./base/jingle_message_calling.html\": 62077,\n\t\"./base/omemo_enable.html\": 17661,\n\t\"./base/plyr_player_popup.html\": 14197,\n\t\"./base/setting_language_radio_input.html\": 49707,\n\t\"./base/setting_radio_input.html\": 94944,\n\t\"./base/settings.html\": 15887,\n\t\"./base/settings_modal.html\": 81012,\n\t\"./base/toolbar.html\": 45459,\n\t\"./chats/add_chat_account_item.html\": 56468,\n\t\"./chats/chat_bottom.html\": 74335,\n\t\"./chats/chat_content.html\": 10224,\n\t\"./chats/chat_content_contact.html\": 9031,\n\t\"./chats/chat_content_placeholder.html\": 36209,\n\t\"./chats/chat_head.html\": 29317,\n\t\"./chats/chat_item.html\": 95370,\n\t\"./chats/chat_placeholder.html\": 5696,\n\t\"./chats/chats_panel.html\": 80026,\n\t\"./chats/checkbox.html\": 40433,\n\t\"./chats/content_encryption_warning.html\": 96249,\n\t\"./chats/encryption_warning.html\": 53318,\n\t\"./chats/forward_panel.html\": 83176,\n\t\"./chats/group_chats/add_group_chat.html\": 23118,\n\t\"./chats/group_chats/invitation_panel_view.html\": 1015,\n\t\"./chats/group_chats/mention_item.html\": 79011,\n\t\"./chats/group_chats/pinned_message_panel.html\": 68096,\n\t\"./chats/location_popup.html\": 21732,\n\t\"./chats/message_item.html\": 59170,\n\t\"./chats/messages/attached_file.html\": 97042,\n\t\"./chats/messages/audio_file.html\": 94382,\n\t\"./chats/messages/audio_file_waveform.html\": 74211,\n\t\"./chats/messages/auth_request.html\": 63576,\n\t\"./chats/messages/file.html\": 89256,\n\t\"./chats/messages/file_loading.html\": 83034,\n\t\"./chats/messages/file_upload.html\": 46311,\n\t\"./chats/messages/forwarded.html\": 19038,\n\t\"./chats/messages/group_request.html\": 29794,\n\t\"./chats/messages/hidden-template-for-2.html\": 15867,\n\t\"./chats/messages/hidden-template-for-3.html\": 87486,\n\t\"./chats/messages/hidden-template-for-4.html\": 19761,\n\t\"./chats/messages/hidden-template-for-5.html\": 20365,\n\t\"./chats/messages/hidden-template-for-6.html\": 57344,\n\t\"./chats/messages/images_details.html\": 13786,\n\t\"./chats/messages/link_reference.html\": 59840,\n\t\"./chats/messages/link_reference_chat.html\": 39475,\n\t\"./chats/messages/loading_circle.html\": 54301,\n\t\"./chats/messages/location.html\": 55127,\n\t\"./chats/messages/main.html\": 76510,\n\t\"./chats/messages/saved_main.html\": 18479,\n\t\"./chats/messages/searched.html\": 83228,\n\t\"./chats/messages/system.html\": 85046,\n\t\"./chats/messages/template-for-2.html\": 2861,\n\t\"./chats/messages/template-for-3.html\": 70423,\n\t\"./chats/messages/template-for-4.html\": 90719,\n\t\"./chats/messages/template-for-5.html\": 39125,\n\t\"./chats/messages/template-for-6.html\": 20129,\n\t\"./chats/messages/video.html\": 87795,\n\t\"./chats/messages/voice_message.html\": 43795,\n\t\"./chats/saved_chat_head.html\": 21385,\n\t\"./chats/send_media.html\": 34054,\n\t\"./chats/subscription_buttons.html\": 47725,\n\t\"./chats/unread_marker.html\": 98875,\n\t\"./contacts/account_roster_left.html\": 69006,\n\t\"./contacts/account_roster_right.html\": 23643,\n\t\"./contacts/add_contact.html\": 24718,\n\t\"./contacts/add_contact_account_item.html\": 31238,\n\t\"./contacts/audio_file_waveform.html\": 49820,\n\t\"./contacts/contact_blocked_item.html\": 73253,\n\t\"./contacts/contact_details_right.html\": 38624,\n\t\"./contacts/contact_left_item.html\": 24958,\n\t\"./contacts/contact_placeholder.html\": 19768,\n\t\"./contacts/contact_right_item.html\": 72055,\n\t\"./contacts/edit_contact.html\": 45078,\n\t\"./contacts/edit_group.html\": 4679,\n\t\"./contacts/group_chats/add_blocked_participant_form.html\": 37639,\n\t\"./contacts/group_chats/badge_edit_view.html\": 11868,\n\t\"./contacts/group_chats/default_restrictions.html\": 87004,\n\t\"./contacts/group_chats/default_restrictions_right.html\": 59115,\n\t\"./contacts/group_chats/description_input_widget.html\": 49080,\n\t\"./contacts/group_chats/file_item.html\": 79481,\n\t\"./contacts/group_chats/group_chat_details.html\": 69426,\n\t\"./contacts/group_chats/group_chat_details_right.html\": 18939,\n\t\"./contacts/group_chats/group_chat_properties.html\": 15159,\n\t\"./contacts/group_chats/group_chat_properties_edit.html\": 20904,\n\t\"./contacts/group_chats/group_chat_properties_right.html\": 69849,\n\t\"./contacts/group_chats/group_member_item.html\": 38114,\n\t\"./contacts/group_chats/group_member_item_right.html\": 53119,\n\t\"./contacts/group_chats/group_name_input_widget.html\": 82703,\n\t\"./contacts/group_chats/group_status.html\": 70569,\n\t\"./contacts/group_chats/group_status_right.html\": 27157,\n\t\"./contacts/group_chats/invitation.html\": 53464,\n\t\"./contacts/group_chats/invited_member_item.html\": 87824,\n\t\"./contacts/group_chats/participant_badge_input_widget.html\": 84939,\n\t\"./contacts/group_chats/participant_details_item.html\": 66493,\n\t\"./contacts/group_chats/participant_details_item_right.html\": 83326,\n\t\"./contacts/group_chats/participant_details_right.html\": 1593,\n\t\"./contacts/group_chats/participant_rights.html\": 76252,\n\t\"./contacts/group_chats/participants.html\": 93172,\n\t\"./contacts/group_chats/participants_right_panel.html\": 19295,\n\t\"./contacts/group_chats/pinned_message.html\": 54630,\n\t\"./contacts/group_chats/private_participant_details.html\": 15369,\n\t\"./contacts/group_chats/private_participant_details_item_right.html\": 79983,\n\t\"./contacts/group_chats/restriction_item.html\": 87050,\n\t\"./contacts/group_chats/right_expire_variants.html\": 54338,\n\t\"./contacts/group_chats/set_status.html\": 67065,\n\t\"./contacts/group_chats/status_item.html\": 27893,\n\t\"./contacts/group_left.html\": 57973,\n\t\"./contacts/group_right.html\": 95561,\n\t\"./contacts/group_settings.html\": 21612,\n\t\"./contacts/groups.html\": 62605,\n\t\"./contacts/groups_checkbox_list.html\": 54515,\n\t\"./contacts/groups_checkbox_list_contact.html\": 52661,\n\t\"./contacts/groups_list.html\": 58114,\n\t\"./contacts/groups_new_group.html\": 57713,\n\t\"./contacts/media_item.html\": 17905,\n\t\"./contacts/media_items_empty.html\": 23546,\n\t\"./contacts/preloader.html\": 4142,\n\t\"./contacts/roster_left.html\": 50869,\n\t\"./contacts/roster_right.html\": 22136,\n\t\"./contacts/roster_settings.html\": 54186,\n\t\"./mentions/mention_item.html\": 19253,\n\t\"./mentions/mentions_panel.html\": 50291,\n\t\"./mentions/mentions_placeholder.html\": 20103,\n\t\"./searching/existing_groupchat_details_view.html\": 31897,\n\t\"./searching/existing_groupchat_item.html\": 71655,\n\t\"./searching/searching_account_item.html\": 3103,\n\t\"./searching/searching_wide.html\": 43143,\n\t\"./svg/account-cancel.html\": 53283,\n\t\"./svg/account-outline.html\": 20865,\n\t\"./svg/account.html\": 32721,\n\t\"./svg/address-outline.html\": 66656,\n\t\"./svg/address.html\": 94429,\n\t\"./svg/alarm-bell.html\": 47158,\n\t\"./svg/alert-circle.html\": 55133,\n\t\"./svg/bell-off.html\": 14759,\n\t\"./svg/bell-sleep.html\": 11713,\n\t\"./svg/bell.html\": 55155,\n\t\"./svg/birthday-outline.html\": 23977,\n\t\"./svg/birthday.html\": 74741,\n\t\"./svg/blocked-add.html\": 89768,\n\t\"./svg/blocked.html\": 33574,\n\t\"./svg/bot-variant.html\": 94862,\n\t\"./svg/bot.html\": 29568,\n\t\"./svg/bug.html\": 89965,\n\t\"./svg/call-outline.html\": 16938,\n\t\"./svg/call.html\": 9530,\n\t\"./svg/camera-retake.html\": 25430,\n\t\"./svg/camera.html\": 26716,\n\t\"./svg/cancel.html\": 80595,\n\t\"./svg/channel.html\": 40203,\n\t\"./svg/chat.html\": 71714,\n\t\"./svg/check-circle.html\": 62633,\n\t\"./svg/check.html\": 26446,\n\t\"./svg/chevron-down.html\": 79353,\n\t\"./svg/chevron-left-variant.html\": 32011,\n\t\"./svg/chevron-right-variant.html\": 19297,\n\t\"./svg/circle-slice-1.html\": 45013,\n\t\"./svg/circle-slice-2.html\": 15460,\n\t\"./svg/circle-slice-3.html\": 56377,\n\t\"./svg/circle-slice-4.html\": 63363,\n\t\"./svg/circle-slice-5.html\": 53161,\n\t\"./svg/circle-slice-6.html\": 90100,\n\t\"./svg/circle-slice-7.html\": 47263,\n\t\"./svg/circle-slice-8.html\": 16472,\n\t\"./svg/circles-outline.html\": 47033,\n\t\"./svg/circles.html\": 61265,\n\t\"./svg/client-outline.html\": 52773,\n\t\"./svg/client.html\": 6625,\n\t\"./svg/clock-outline.html\": 93813,\n\t\"./svg/close.html\": 70874,\n\t\"./svg/cloud.html\": 55696,\n\t\"./svg/contact-add.html\": 63272,\n\t\"./svg/crosshairs-gps.html\": 57197,\n\t\"./svg/crosshairs-question.html\": 40765,\n\t\"./svg/crosshairs.html\": 82823,\n\t\"./svg/database-lock.html\": 17338,\n\t\"./svg/database.html\": 41473,\n\t\"./svg/description-outline.html\": 23373,\n\t\"./svg/description.html\": 63993,\n\t\"./svg/device-cellphone.html\": 79824,\n\t\"./svg/device-console.html\": 32111,\n\t\"./svg/device-desktop.html\": 5772,\n\t\"./svg/device-tablet.html\": 18955,\n\t\"./svg/device-web.html\": 16919,\n\t\"./svg/devices.html\": 50832,\n\t\"./svg/edit-outline.html\": 96840,\n\t\"./svg/edit.html\": 22845,\n\t\"./svg/email-outline.html\": 66206,\n\t\"./svg/email.html\": 22505,\n\t\"./svg/expires.html\": 21321,\n\t\"./svg/file-audio.html\": 3643,\n\t\"./svg/file-document.html\": 88700,\n\t\"./svg/file-pdf.html\": 3468,\n\t\"./svg/file-presentation.html\": 34417,\n\t\"./svg/file-video.html\": 98587,\n\t\"./svg/file-zip.html\": 89193,\n\t\"./svg/file.html\": 34058,\n\t\"./svg/fullname-outline.html\": 16109,\n\t\"./svg/fullname.html\": 12784,\n\t\"./svg/group-incognito.html\": 49703,\n\t\"./svg/group-invite.html\": 89411,\n\t\"./svg/group-private.html\": 81044,\n\t\"./svg/group-public.html\": 56403,\n\t\"./svg/history.html\": 35726,\n\t\"./svg/ic-at.html\": 81363,\n\t\"./svg/ic-jabber.html\": 9140,\n\t\"./svg/ic-searching.html\": 46476,\n\t\"./svg/id-outline.html\": 19324,\n\t\"./svg/id.html\": 50807,\n\t\"./svg/image.html\": 90226,\n\t\"./svg/index.html\": 2612,\n\t\"./svg/information-outline.html\": 52973,\n\t\"./svg/information.html\": 66035,\n\t\"./svg/invite-outline.html\": 34289,\n\t\"./svg/invite.html\": 75917,\n\t\"./svg/job-outline.html\": 31802,\n\t\"./svg/job.html\": 97579,\n\t\"./svg/key-variant.html\": 76499,\n\t\"./svg/key.html\": 46753,\n\t\"./svg/link.html\": 16205,\n\t\"./svg/lock-alert.html\": 63234,\n\t\"./svg/lock-check.html\": 14833,\n\t\"./svg/lock-cross.html\": 8513,\n\t\"./svg/lock-open.html\": 1652,\n\t\"./svg/lock-question.html\": 67160,\n\t\"./svg/lock.html\": 6258,\n\t\"./svg/map-marker-outline.html\": 83740,\n\t\"./svg/map-marker.html\": 70776,\n\t\"./svg/membership-outline.html\": 8872,\n\t\"./svg/message-bookmark-outline.html\": 6278,\n\t\"./svg/message-group.html\": 35529,\n\t\"./svg/minus.html\": 79092,\n\t\"./svg/mobile.html\": 33767,\n\t\"./svg/palette.html\": 43710,\n\t\"./svg/pause.html\": 58080,\n\t\"./svg/picture-in-picture-bottom-right.html\": 91421,\n\t\"./svg/picture-in-picture-minimize.html\": 42173,\n\t\"./svg/picture-in-picture-top-right.html\": 74578,\n\t\"./svg/pinned-circle-small.html\": 54052,\n\t\"./svg/pinned.html\": 9443,\n\t\"./svg/play.html\": 43069,\n\t\"./svg/player-float.html\": 30030,\n\t\"./svg/player-full.html\": 60259,\n\t\"./svg/player-mini-variant.html\": 70099,\n\t\"./svg/player-mini.html\": 77531,\n\t\"./svg/plus.html\": 85123,\n\t\"./svg/plyr.html\": 10410,\n\t\"./svg/qrcode.html\": 17943,\n\t\"./svg/restrictions-outline.html\": 89701,\n\t\"./svg/rss-variant.html\": 89657,\n\t\"./svg/rss.html\": 15645,\n\t\"./svg/saved-messages.html\": 11797,\n\t\"./svg/search.html\": 11146,\n\t\"./svg/security.html\": 91467,\n\t\"./svg/server.html\": 71188,\n\t\"./svg/star-face.html\": 1866,\n\t\"./svg/status-outline.html\": 52555,\n\t\"./svg/status.html\": 5000,\n\t\"./svg/subscription-from.html\": 5414,\n\t\"./svg/subscription-to.html\": 8020,\n\t\"./svg/task.html\": 41835,\n\t\"./svg/translate.html\": 98431,\n\t\"./svg/trash.html\": 61686,\n\t\"./svg/video.html\": 98070,\n\t\"./svg/volume-high.html\": 87658,\n\t\"./svg/volume-off-variant.html\": 7962,\n\t\"./svg/volume-off.html\": 14032,\n\t\"./svg/web-cancel.html\": 26330,\n\t\"./svg/web.html\": 7094,\n\t\"./svg/xabber-offline.html\": 50033,\n\t\"./svg/xabber-online.html\": 74922,\n\t\"./svg/xmpp.html\": 92052,\n\t\"./vcard/vcard.html\": 73889,\n\t\"./vcard/vcard_edit_modal.html\": 43918,\n\t\"./vcard/vcard_modal.html\": 59265,\n\t\"./vcard/vcard_right.html\": 93047\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 89293;","let client_translation_progress = {\"en\":100,\"ar\":25,\"az\":2,\"be\":12,\"bg\":59,\"bs\":0,\"ca\":23,\"cs\":99,\"cy\":0,\"da\":0,\"de\":45,\"el\":27,\"es-ES\":32,\"es-latin\":61,\"et\":0,\"fa\":4,\"fi\":9,\"fil\":13,\"fr\":33,\"ga-IE\":0,\"he\":19,\"hi\":0,\"hr\":0,\"hu\":13,\"hy-AM\":8,\"id\":96,\"is\":0,\"it\":65,\"ja\":19,\"ka\":0,\"kmr\":0,\"ko\":1,\"ku\":2,\"ky\":5,\"la-LA\":0,\"lb\":0,\"lt\":3,\"me\":0,\"mk\":0,\"mn\":0,\"mr\":0,\"ms\":6,\"nb\":19,\"ne-NP\":0,\"nl\":18,\"no\":0,\"oc\":12,\"pa-IN\":0,\"pl\":60,\"pt-BR\":64,\"pt-PT\":13,\"qya-AA\":0,\"ro\":15,\"ru\":62,\"sat\":1,\"sco\":0,\"si-LK\":33,\"sk\":18,\"sl\":26,\"sq\":3,\"sr\":12,\"sr-Cyrl-ME\":0,\"sv-SE\":35,\"sw\":1,\"ta\":1,\"te\":0,\"tg\":0,\"tk\":0,\"tlh-AA\":0,\"tr\":62,\"uk\":25,\"uz\":0,\"vi\":12,\"yo\":0,\"zh-CN\":98,\"zh-TW\":10,\"zu\":0}; typeof define === \"function\" && define(() => { return client_translation_progress;});","var map = {\n\t\"./ar-rSA.js\": [\n\t\t53591,\n\t\t5629\n\t],\n\t\"./az-rAZ.js\": [\n\t\t81101,\n\t\t1101\n\t],\n\t\"./be-rBY.js\": [\n\t\t86953,\n\t\t6953\n\t],\n\t\"./bg-rBG.js\": [\n\t\t41428,\n\t\t1428\n\t],\n\t\"./bs-rBA.js\": [\n\t\t76101,\n\t\t6101\n\t],\n\t\"./ca-rES.js\": [\n\t\t80049,\n\t\t49\n\t],\n\t\"./cs-rCZ.js\": [\n\t\t30011,\n\t\t11\n\t],\n\t\"./cy-rGB.js\": [\n\t\t98146,\n\t\t8146\n\t],\n\t\"./da-rDK.js\": [\n\t\t22348,\n\t\t2348\n\t],\n\t\"./de-rDE.js\": [\n\t\t78961,\n\t\t8961\n\t],\n\t\"./el-rGR.js\": [\n\t\t292,\n\t\t292\n\t],\n\t\"./en.js\": [\n\t\t53832,\n\t\t3832\n\t],\n\t\"./es-rES.js\": [\n\t\t85895,\n\t\t5895\n\t],\n\t\"./es419.js\": [\n\t\t93575,\n\t\t3575\n\t],\n\t\"./et-rEE.js\": [\n\t\t14103,\n\t\t4103\n\t],\n\t\"./fa-rIR.js\": [\n\t\t15729,\n\t\t5729\n\t],\n\t\"./fi-rFI.js\": [\n\t\t35069,\n\t\t5069\n\t],\n\t\"./fil-rPH.js\": [\n\t\t43250,\n\t\t3250\n\t],\n\t\"./fr-rFR.js\": [\n\t\t52716,\n\t\t2716\n\t],\n\t\"./ga-rIE.js\": [\n\t\t17872,\n\t\t7872\n\t],\n\t\"./hi-rIN.js\": [\n\t\t11361,\n\t\t1361\n\t],\n\t\"./hr-rHR.js\": [\n\t\t42324,\n\t\t2324\n\t],\n\t\"./hu-rHU.js\": [\n\t\t70833,\n\t\t833\n\t],\n\t\"./hy-rAM.js\": [\n\t\t63000,\n\t\t3000\n\t],\n\t\"./in-rID.js\": [\n\t\t31879,\n\t\t1879\n\t],\n\t\"./is-rIS.js\": [\n\t\t55298,\n\t\t5298\n\t],\n\t\"./it-rIT.js\": [\n\t\t8182,\n\t\t8182\n\t],\n\t\"./iw-rIL.js\": [\n\t\t5945,\n\t\t5945\n\t],\n\t\"./ja-rJP.js\": [\n\t\t91587,\n\t\t1587\n\t],\n\t\"./ka-rGE.js\": [\n\t\t21337,\n\t\t1337\n\t],\n\t\"./kmr-rTR.js\": [\n\t\t57057,\n\t\t7057\n\t],\n\t\"./ko-rKR.js\": [\n\t\t88756,\n\t\t8756\n\t],\n\t\"./ku-rTR.js\": [\n\t\t33678,\n\t\t3678\n\t],\n\t\"./ky-rKG.js\": [\n\t\t28404,\n\t\t8404\n\t],\n\t\"./la-rLA.js\": [\n\t\t27089,\n\t\t7089\n\t],\n\t\"./lb-rLU.js\": [\n\t\t85752,\n\t\t5752\n\t],\n\t\"./lt-rLT.js\": [\n\t\t23097,\n\t\t3097\n\t],\n\t\"./me-rME.js\": [\n\t\t59023,\n\t\t9023\n\t],\n\t\"./mk-rMK.js\": [\n\t\t52499,\n\t\t2499\n\t],\n\t\"./mn-rMN.js\": [\n\t\t68721,\n\t\t8721\n\t],\n\t\"./mr-rIN.js\": [\n\t\t33591,\n\t\t3591\n\t],\n\t\"./ms-rMY.js\": [\n\t\t10922,\n\t\t922\n\t],\n\t\"./nb-rNO.js\": [\n\t\t54778,\n\t\t4778\n\t],\n\t\"./ne-rNP.js\": [\n\t\t4463,\n\t\t4463\n\t],\n\t\"./nl-rNL.js\": [\n\t\t36447,\n\t\t6447\n\t],\n\t\"./no-rNO.js\": [\n\t\t16813,\n\t\t6813\n\t],\n\t\"./oc-rFR.js\": [\n\t\t76102,\n\t\t6102\n\t],\n\t\"./pa-rIN.js\": [\n\t\t49081,\n\t\t9081\n\t],\n\t\"./pl-rPL.js\": [\n\t\t60419,\n\t\t419\n\t],\n\t\"./pt-rBR.js\": [\n\t\t9226,\n\t\t9226\n\t],\n\t\"./pt-rPT.js\": [\n\t\t10201,\n\t\t201\n\t],\n\t\"./qya-rAA.js\": [\n\t\t39460,\n\t\t9460\n\t],\n\t\"./ro-rRO.js\": [\n\t\t16292,\n\t\t6292\n\t],\n\t\"./ru-rRU.js\": [\n\t\t74391,\n\t\t4391\n\t],\n\t\"./sat-rIN.js\": [\n\t\t1905,\n\t\t1905\n\t],\n\t\"./sco-rGB.js\": [\n\t\t52323,\n\t\t2323\n\t],\n\t\"./si-rLK.js\": [\n\t\t79773,\n\t\t9773\n\t],\n\t\"./sk-rSK.js\": [\n\t\t51874,\n\t\t1874\n\t],\n\t\"./sl-rSI.js\": [\n\t\t97658,\n\t\t7658\n\t],\n\t\"./sq-rAL.js\": [\n\t\t80596,\n\t\t596\n\t],\n\t\"./sr-rCyrl-rME.js\": [\n\t\t33343,\n\t\t3343\n\t],\n\t\"./sr-rSP.js\": [\n\t\t75384,\n\t\t5384\n\t],\n\t\"./sv-rSE.js\": [\n\t\t50608,\n\t\t608\n\t],\n\t\"./sw-rKE.js\": [\n\t\t6802,\n\t\t6802\n\t],\n\t\"./ta-rIN.js\": [\n\t\t51796,\n\t\t1796\n\t],\n\t\"./te-rIN.js\": [\n\t\t49782,\n\t\t9782\n\t],\n\t\"./tg-rTJ.js\": [\n\t\t33689,\n\t\t3689\n\t],\n\t\"./tk-rTM.js\": [\n\t\t60130,\n\t\t130\n\t],\n\t\"./tlh-rAA.js\": [\n\t\t73739,\n\t\t3739\n\t],\n\t\"./tr-rTR.js\": [\n\t\t4961,\n\t\t4961\n\t],\n\t\"./translation_progress.js\": [\n\t\t23297\n\t],\n\t\"./uk-rUA.js\": [\n\t\t88109,\n\t\t8109\n\t],\n\t\"./uz-rUZ.js\": [\n\t\t96886,\n\t\t6886\n\t],\n\t\"./vi-rVN.js\": [\n\t\t37216,\n\t\t7216\n\t],\n\t\"./yo-rNG.js\": [\n\t\t97045,\n\t\t7045\n\t],\n\t\"./zh-rCN.js\": [\n\t\t16806,\n\t\t6806\n\t],\n\t\"./zh-rTW.js\": [\n\t\t58545,\n\t\t8545\n\t],\n\t\"./zu-rZA.js\": [\n\t\t58810,\n\t\t8810\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 8946;\nmodule.exports = webpackAsyncContext;","define(function () { return JSON.parse(\n    '{\"version_number\":\"2.3.4.64\",\"version_description\":\"fixed groups template updation and input focus, remodev roster settings from avatar settings\"}'\n)});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"xabber.\" + chunkId + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkxabber_web\"] = self[\"webpackChunkxabber_web\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [1216], () => (__webpack_require__(51008)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","inProgress","dataWebpackPrefix","module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","constants","ASSETS_URL_PREFIX","STORAGE_NAME","STORAGE_VERSION","CONTAINER_ELEMENT","FAVICON_DEFAULT","FAVICON_DEFAULT_GREY","FAVICON_MESSAGE","BACKGROUND_IMAGE","WIDTH_MEDIUM","WIDTH_NARROW","WIDTH_TINY","LOG_LEVEL_NONE","LOG_LEVEL_ERROR","LOG_LEVEL_WARN","LOG_LEVEL_INFO","LOG_LEVEL_DEBUG","LOG_LEVEL","KEY_BACKSPACE","KEY_TAB","KEY_ENTER","KEY_SHIFT","KEY_CTRL","KEY_ESCAPE","KEY_SPACE","KEY_ARROW_LEFT","KEY_ARROW_UP","KEY_ARROW_RIGHT","KEY_ARROW_DOWN","KEY_DELETE","KEY_FORWARD_SLASH","KEY_AT","VOICE_MSG_TIME","PASSWORD_DOT","String","fromCharCode","CONNECTION_URL","CONN_STATUSES","PREKEYS_COUNT","MIN_PREKEYS_COUNT","AES_KEY_LENGTH","AES_TAG_LENGTH","AES_EXTRACTABLE","BAD_CONN_STATUSES","RECONNECTION_TIMEOUTS","DOWNTIME_RECONNECTION_TIMEOUT","PING_SENDING_INTERVAL","IDLING_MINIMAL_TIMEOUT","IDLING_MAXIMUM_TIMEOUT","IDLING_DEFAULT_TIMEOUT","STATUS_WEIGHTS","chat","online","away","xa","dnd","offline","unavailable","PRESENT_INTERVAL","CHATSTATE_INTERVAL_COMPOSING_AUDIO","CHATSTATE_TIMEOUT_PAUSED","CHATSTATE_TIMEOUT_STOPPED","CHATSTATE_TIMEOUT_PAUSED_AUDIO","JINGLE_WAITING_TIME","SYNCHRONIZATION_RSM_MAX","REGISTRATION_DOMAINS","LOGIN_DOMAINS","TRUSTED_DOMAINS","RECOMMENDED_DOMAIN","REGISTRATION_BUTTON","REGISTRATION_CUSTOM_DOMAIN","LOGIN_CUSTOM_DOMAIN","TURN_SERVERS_LIST","urls","credential","username","JINGLE_MSG_PROPOSE","JINGLE_MSG_REJECT","JINGLE_MSG_ACCEPT","MSG_BLOCKED","MSG_ERROR","MSG_PENDING","MSG_SENT","MSG_DELIVERED","MSG_DISPLAYED","MSG_ARCHIVED","MSG_SAVED","RSM_ATTRIBUTES","MAM_ATTRIBUTES","GENERAL_GROUP_ID","NON_ROSTER_GROUP_ID","MATERIAL_COLORS","MAX_AVATAR_FILE_SIZE","AVATAR_PRIORITIES","VCARD_AVATAR","PUBSUB_AVATAR","EMAIL_FOR_JOIN_TRANSLATION","AVATAR_SIZES","TOOLBAR_ACCOUNT_ITEM","SETTINGS_ACCOUNT_ITEM","XABBER_ACCOUNT","SYNCHRONIZE_ACCOUNT_ITEM","MENTION_ITEM","ACCOUNT_SETTINGS_LEFT","ACCOUNT_VCARD_EDIT","ROSTER_RIGHT_ACCOUNT_ITEM","ROSTER_LEFT_ACCOUNT_ITEM","PARTICIPANT_DETAILS_ITEM","CONTACT_RIGHT_ITEM","GROUPCHAT_MEMBER_ITEM","CONTACT_LEFT_ITEM","CONTACT_BLOCKED_ITEM","CONTACT_DETAILS","GROUP_SETTINGS","CHAT_ITEM","CHAT_HEAD","CHAT_MESSAGE","CHAT_BOTTOM","XABBER_VOICE_CALL_VIEW","OMEMO_ENABLE_SETTING","SYNC_WAY_DATA","no","tip","icon","from_server","to_server","delete","off_local","off_remote","SYNCED_STATUS_DATA","off","yes","EMOJI_LIST_NAME","emoji_list","QUOTE_MARKER","MARKUP_TAGS","BLANK_VIDEO","OGG","MP4","WEBM","MIME_TYPES","image","audio","video","document","pdf","table","archive","presentation","languages","languages_another_locales","PERSONAL_AREA_URL","XABBER_ACCOUNT_URL","USE_SOCIAL_AUTH","REGISTER_XMPP_ACCOUNT","REGISTER_XMPP_ACCOUNT_URL","CHECK_VERSION","DEFAULT_LOGIN_SCREEN","GCM_SENDER_ID","GCM_API_KEY","MESSAGE_ARCHIVE_DB_NAME","STANZA_MAX_SIZE","Math","pow","BLUR_VALUE","VIGNETTING_VALUE","TRANSPARENCY_VALUE","MAIN_COLOR","CLIENT_NAME","SHORT_CLIENT_NAME","SHORT_CLIENT_DESCRIPTION","CLIENT_LOGO","TOOLBAR_LOGO","ENABLE_XABBER_ACCOUNT","SCREEN_ABOUT","BACKGROUND_IMAGES_XML_URL","BACKGROUND_PATTERNS_XML_URL","DEVELOPER_URL","CLIENT_GITHUB_URL","PROJECT_CROWDIN_URL","CLIENT_LICENSE_GITHUB_URL","JINGLE_MSG_STATE","MSG_STATE","MSG_VERBOSE_STATE","$","_","moment","WaveSurfer","Plyr","plyr","Quill","libsignal","slug","sha1","idleJs","opusRecorder","opusRecorderEncoderPath","xabber_i18next","xabber_i18next_sprintf","sha256","VanillaQR","magnificPopup","backgroundImagesXml","backgroundPatternsXml","Strophe","evaluate","interpolate","templates","_addTemplate","name","options","path","split","tpl","join","default","tpl_name","pop","res","attr","is_svg","data","html","$html","find","each","$el","this","svg_name","removeClass","addClass","svg","insertSvg","addTemplate","addSvgTemplate","addJSONTemplate","attention_json","attention","forEach","item","attention_sound","file_name","not_selectable","push","ringtones_json","ringtones","ringtone","dialtones_json","dialtones","dialtone","notifications_json","notifications","notification","interface_json","interface_sound_list","interface_item","interface","all_sounds","concat","raw_data","x","y","getEmoji","offset","lead","trail","emoji_data","emoji","emoji_regexp","prototype","emojify","sprite","tag_name","emoji_size","href","title","replace","emoji_code","Number","toString","length","repeat","img_src","removeEmoji","replaceEmoji","selector","text","all","get","getByIndex","idx","hasher","_image_cache","COLORS","MAX_IMG_SIZE","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","Blob","type","CachedImage","url","window","URL","createObjectURL","getCachedImage","isString","indexOf","isObject","getAccountColor","_name","trim","color_index","floor","getImageSize","size","max_size","width","height","fn","setAvatar","image_el","cached_image","img_size","$image_el","css","backgroundImage","backgroundSize","backgroundColor","setCss","getBlobImage","getDefaultAvatar","color","font","first_name","last_name","first_letter","second_letter","canvas","createElement","ctx","getContext","splitted_name","rect","fillStyle","fill","textAlign","textBaseline","fillText","toUpperCase","toDataURL","getAvatarFromFile","file","image_obj","Image","src","Deferred","onload","b64_image","hash","naturalWidth","naturalHeight","new_size","drawImage","revokeObjectURL","toBlob","blob","reader","FileReader","result","binary_file","bytes","bind","readAsDataURL","onerror","promise","getDefaultColor","getCachedBackground","base64","compressImage","file_type","includes","File","lastModified","Date","now","modal_queue","appendTo","Modal","modal_constructor","$modal","Function","closed","getString","params","postProcess","sprintf","extend","open","use_queue","throw","setTimeout","addEventListener","clickHandler","prop","modal_options","omit","is_default_complete","complete_data","one","ev","detach","value","shift","_openModal","close","complete","isUndefined","_closeModal","removeEventListener","trigger","keyCode","click","preventDefault","openModal","closeModal","modal","clear_queue","dialogs","common","header","buttons","dialog_options","flag","modal_class","dialog","ok_button","cancel_button","optional_buttons","reverse","no_dialog_options","inverted_buttons","img_details","append","xabber","switchClass","hasClass","blob_image_from_clipboard","appendChild","bottom_text","escape_button","input_placeholder_value","input_value","val","option","target","$options","user_value_input","$item","user_value","warning","error","ask","ok_text","cancel_text","ok_button_text","cancel_button_text","ask_extended","optional_button","optional_button_text","ask_enter_value","resend_button","resend_to","resend_button_text","notify","placeCaretAtEnd","el","focus","getSelection","createRange","body","createTextRange","textRange","moveToElementText","collapse","select","range","selectNodeContents","sel","removeAllRanges","addRange","updateRichTextarea","getTextFromRichTextarea","flushRichTextarea","pasteHtmlAtCaret","getRangeAt","rangeCount","deleteContents","innerHTML","node","lastNode","frag","createDocumentFragment","firstChild","insertNode","cloneRange","setStartAfter","selection","pasteHTML","$div","replaceWith","$this","remove","klass","condition","arguments","showIf","hideIf","isVisibleInViewport","elementTop","top","elementBottom","outerHeight","viewportTop","scrollTop","viewportBottom","isVisibleInContainer","container","eleTop","offsetTop","eleBottom","clientHeight","containerTop","containerBottom","isFullyVisibleInContainer","isBottomVisibleInContainer","getHyperLink","prot","escaped_url","encodeURI","decodeURI","escape","hyperlinkify","obj","$obj","html_concat","url_regexp","childNodes","$node","outerHTML","tagName","nodeName","list","match","from","Set","decode_uri","replaceAll","RegExp","utils","uuid","c","r","random","utoa","str","btoa","unescape","encodeURIComponent","atou","decodeURIComponent","pretty_time","timestamp","format","pretty_date","pretty_datetime","pretty_short_datetime_recent_chat","startOf","isSame","subtract","pretty_short_datetime","datetime","day","year","pretty_short_month_date","isImageType","tryReadingFile","Promise","reject","console","log","getDomainFromUrl","a","test","hostname","isVideoType","file_type_icon","mime_type","filetype","pretty_file_type","file_type_icon_svg","pretty_file_type_with_article","pretty_size","isNaN","toFixed","pretty_duration","duration","trunc","pretty_name","substr","toLowerCase","getKeyByValue","object","key","slice_string","to","isNumber","slice_pretty_body","mutable_refs","filter","m","pretty_body","ref","start","end","markupBodyMessage","message","mention_tag","attrs","clone","attributes","mentions","markups","mutable_content","blockquotes","markup_body","original_message","muted","mention","start_idx","end_idx","is_gc","jid","me","markup","start_tags","end_tags","mark_up_style","uri","quote","child_idx","getOS","platform","navigator","os","isOverflownWidth","element","scrollWidth","clientWidth","isOverflownHeight","scrollHeight","render_data_form","data_form","$data_form","fields","field","$fixed_field","label","values","$input","var","copyTextToClipboard","callback_msg","errback_msg","clipboard","writeText","then","info_msg","callback_popup_message","time","$body","$popup_msg","count","openWindow","errback","win","clearSelection","empty","getCookie","matches","cookie","undefined","isMobile","Android","userAgent","BlackBerry","iOS","Opera","Windows","any","fromBase64toArrayBuffer","b64_string","buffer","ArrayBuffertoBase64","arrayBuffer","generateHOTPKey","async","secret","counter","Crypto","crypto","subtle","counterArray","padCounter","importKey","sign","ArrayBuffer","bView","DataView","bCounter","byte","byteValue","parseInt","setUint8","DT","HS","truncate","uKey","Sbits","generateHOTP","hmacSha256","stringToArrayBuffer","string","AES","ALGO_NAME","decoder","TextDecoder","encoder","TextEncoder","decrypt","masterKey","HMACData","payload","masterObj","hkdfCtrParams","salt","info","deriveBits","encryptionKey","authenticationKey","iv","generatedHMAC","byteLength","decryptedBuffer","decode","encrypt","plaintext","getRandomValues","encrypted","generateAESencryptedMessage","keydata","encryptOptions","encodedPlaintext","encode","arrayBufferConcat","joined","set","generateAESKey","algo","generateKey","getBrowser","userAgentString","chromeAgent","IExplorerAgent","firefoxAgent","safariAgent","operaAgent","images","modals","sounds","client_translation_progress","bc","BroadcastChannel","onmessage","event","disabled_client","postMessage","Backbone","Model","defaults","version_number","actual_version_number","client_id","substring","client_name","initialize","env","fetchURLParams","cleanUpStorage","initDefaultLanguage","detectMediaDevices","mediaDevices","ondevicechange","check_config","_settings","Settings","storage_name","getStorageName","fetch","settings","location","host","pathname","_cache","ModelWithStorage","cache","save","extendFunction","plyr_players","current_plyr_player","on","throwNewVersion","onQuit","_version_interval","setInterval","readActualVersion","ononline","disconnectWhenConnecting","lang","language","loadTranslations","default_translation","translation","setLocale","translations","default_lang","_translations","use","init","lng","debug","pluralSeparator","resources","changeLanguage","locale","getFixedT","getOneLiners","exists","t","getQuantityString","services","pluralResolver","getRule","_count","compatibilityJSON","suffix","getSuffix","msg","warn","pretty_last_seen","seconds","calendar","rawFile","XMLHttpRequest","onreadystatechange","readyState","status","json","responseText","JSON","parse","version_description","send","trimStart","trimEnd","indexedDB","databases","db","deleteDatabase","accounts","acc","cached_roster","database","cached_sync_conversations","cached_server_features","full_storage_name","localStorage","startsWith","removeItem","cacheFavicons","getMediaDevices","media_devices","callback","enumerateDevices","devices","device","kind","catch","err","done","reload","max_connection_retries","idling","idling_time","notifications_private","notifications_group","jingle_calls","notifications_volume_enabled","notifications_volume","message_preview_private","message_preview_group","private_sound","group_sound","background","side_panel","theme","blur","transparency","appearance","vignetting","main_color","sound_on_private_message","sound_on_group_message","call_attention","load_media","typing_notifications","mapping_service","sound_on_call","sound_on_dialtone","sound_on_connection","sound_on_attention","sound_on_auth_request","sound_on_call_busy","hotkeys","avatar_shape","load_history","mam_requests_limit","mam_messages_limit_start","mam_messages_limit","configure","config","pick","log_level","PRIVACY_LOAD_MEDIA","PRIVACY_TYPING_NOTIFICATIONS","PRIVACY_MAPPING_SERVICE","isArray","ios_msg","android_msg","any_mobile_msg","self","useLocalStorage","ignore_localstorage_warning","ignore","requestNotifications","granted","splitted_url","splitted_url_anchor","url_params","param","history","pushState","STORAGE_NAME_ENDING","Notification","permission","ignore_notifications_warning","notifications_placeholder","NotificationsPlaceholder","updateFaviconConnected","is_disconnected","account","isConnected","session","updateAllMessageCounterOnDisconnect","is_fast","connection","activate","extendWith","reduce","instance","base","applyTo","View","template","parent","vname","children","classlist","view","ps_selector","ps_container","perfectScrollbar","ps_settings","visible","onChangedVisibility","updateCSS","size_changed","windowResized","_initialize","__initialize","isVisible","show","onShow","apply","updateScrollBar","hide","onHide","render","child","addChild","constructor","removeChild","soft","removeChildren","view_id","setCustomCss","styles","removeCustomCss","removeAttr","saveScrollBarOffset","getScrollTop","scroll_top","scrollTo","scrollToTop","scrollToBottom","offsetHeight","scrollToChild","$child","prevAll","sum","getScrollBottom","getPercentScrolled","isScrolledToTop","isScrolledToBottom","tree","close_settings","main_overlay","patchTree","has","className","isNull","new_view","events","keyUpOnSearch","stopPropagation","ids","toArray","$selection","getSelectedItem","selectNextItem","selectPreviousItem","onEnterPressed","clearSearch","updateSearch","selection_id","selectItem","arrow","clearSearchSelection","first","_update_search_timeout","query","search","onEmptyQuery","searchAll","keyUpOnSearchWithQuery","onClickItem","updateSearchWithMessages","search_messages","onScrollY","queryid","_loading_messages","_messages_loaded","query_id","first_message","searched_msgs_loaded","before","MAMRequest","query_text","messages","$message_item_view","message_from_stanza","chats","receiveChatMessage","is_searched","msg_idx","model","insertBefore","eq","onScroll","getSelectedItemWithQuery","selectNextItemWithQuery","selectPreviousItemWithQuery","selectItemWithQuery","main_container","clearTimeout","keyup_timeout","query_transliterated","saved_chat","getSavedChat","item_view","updateLastMessage","query_chats","comparator","sort","contact","searched_by","chat_item","prepend","screen","contacts","hash_id","chat_id","item_list","getChat","clear_search","searchMessages","preloader","max","iq","$iq","xmlns","NS","MAM","DATAFORM","up","cnode","RSM","toXML","handler","addHandler","sendIQFast","deleteHandler","$fin","field_type","input_widget","field_name","placeholder","$value","$btn","updateValue","input_mode","onChangedInputMode","bindModelEvents","model_field","showInput","keyDown","getValue","changeValue","keyUp","setValue","new_value","screen_map","update","onScreenMapChanged","updateBackground","updateMainColor","updateAvatarShape","insertAfter","addScreen","siblings","shape","background_settings","updateBoxShadow","updateBlur","setScreen","unbind","chat_item_view","new_attrs","stamp","uniqueId","isScreen","show_placeholder","right","right_force_close","right_contact","content","_prev_scrolltop","_scrolltop","previous_screen","changed","showChatPlaceholder","screen_changed","toolbar","state","setAttribute","getAttribute","removeAttribute","onUpdatedScreen","onChangedAllMessageCounter","onChangedGroupMessageCounter","onChangedMentionsCounter","onChangedMessageCounter","msg_counter","group_msg_counter","all_msg_counter","mentions_counter","dropdown","inDuration","outDuration","constrainWidth","hover","alignment","updateColor","contains","clickAllChats","showAllChats","no_unread","closest","is_active","showArchive","showSavedChats","right_contact_save","scroll_to_chat","once","showNotifications","showChatsByAccount","showContacts","showMentions","showSettings","account_block_name","showSettingsModal","showPlaceholder","screen_name","showAddContactView","showAddAccountView","showAddIncognitoGroupChatView","incognito","showAddPublicGroupChatView","public","setAllMessageCounter","count_msg","count_all_msg","count_group_msg","isMuted","incoming_subscriptions","unread_mentions","msgs","all_msgs","group_msgs","recountAllMessageCounter","unread_messages","jingle_message_calling","avatar_size","onDestroy","updateCallingStatus","updateButtons","updateCollapsedWindow","updateName","updateStatusText","updateAccountJid","dismissible","ready","updateAvatar","pos1","pos2","pos3","pos4","mousedown","clientX","clientY","didDrag","onmouseup","onmousemove","left","setFullScreen","local_video","requestFullScreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullScreen","cancelFullScreen","exitFullscreen","fullscreenElement","mozCancelFullScreen","mozFullScreenElement","webkitExitFullscreen","webkitCurrentFullScreenElement","msExitFullscreen","msFullscreenElement","shareScreen","isFullScreen","webkitFullscreenElement","accept","initSession","clickOnWindow","toggle","toggleClass","toggleMicrophone","videoCall","toggleVolume","cancel","plyr_player_popup","onVisibilityChange","updatePlyrControls","player","controls","youtube","disablekb","iv_load_policy","modestbranding","rel","showinfo","other","$audio_elem","voice_message","stopTime","detail","minimizePopup","showNewVideo","xPercent","innerWidth","yPercent","innerHeight","dfd","provider","updateColorScheme","player_item","message_unique_id","video_sources","video_src","source","sources","$minimize_element_float","$minimize_element_full","$show_message_element_full","play","video_file","video_decrypted","decryptFile","closePopup","visibility_state","hidePopup","floatPopup","fullPopup","nextPlyr","player_index","next_item","f_url","previousPlyr","prev_item","openMessage","showDetailsRight","right_saved","getMessageContext","togglePlay","renderVoiceMessage","toggleMute","settings_modal","updateLanguage","updateAvatarLabel","updateSoundsLabel","closeSettings","updateAccounts","updateSounds","updateLanguages","checked","sound_private_value","sound_group_value","updateDescription","updateBackgroundSetting","belowOrigin","updateHeight","updateSliders","block_name","$elem","jumpToBlock","settings_single_account_modal","first_account","single_account_has_rendered","forced_ps_container","single_account_modal","blur_switched","vignetting_switched","material_color","variations","v","hex","tone","weight","$tab","range_min","range_max","range_value","setting_radio_input","input_name","input_id","cid","group_element","element_no_sound","group_element_no_sound","default_element","setting_language_radio_input","progress","second_prog","second_prog_text","second_lang","second_locale","second_element","progress_text","backToMenu","backToSubMenu","elem_parent","goToWebNotifications","setIdling","setIdlingTimeout","$target","setNotificationsVolumeEnabled","setNotifications","requestPermission","setPrivateNotifications","setGroupNotifications","setJingleCalls","setPrivateMessagePreview","setGroupMessagePreview","setCallAttention","setLoadMedia","setTypingNotifications","setMappingService","setPrivateSound","current_sound","pause","setGroupSound","setCallSound","setDialtoneSound","setAttentionSound","setBackground","changeBackgroundImage","openColorPicker","colorPicker","chooseMainColor","changeBlur","changeNotificationsVolume","volume","sound","changeVignetting","switchVignetting","is_switched","switchBlur","setHotkeys","setAvatarShape","deleteAllAccounts","platform_text","modal_classes","label_text","sound_private_text","sound_group_text","sound_on_attention_text","color_scheme","min","setColor","materialColors","color_picker","$color_hex","updateInputField","keyUpInput","focusoutInputField","selectColor","color_name","backgrounds_gallery","onpaste","onPaste","createLibrary","draggable","ondragenter","ondragover","ondragleave","relatedTarget","ondrop","files","dataTransfer","addFile","loadMoreImages","getImagesFromXML","patterns_library","img_library","onGetPatternsCallback","onGetImagesCallback","thumbnail","fs_img","clipboardData","getData","updateActiveButton","updateActiveMenu","updateScreen","$active_screen","non_active","current_count","img","img_sources","setActiveImage","onFileInputChanged","image_prev","onInputChanged","addBackground","request","headers","dataType","success","ajax","about","onmousedown","onMouseDown","onMouseMove","onMouseUp","which","draghandle_elem","elem","resetElem","downX","pageX","downY","pageY","avatar","abs","createAvatar","coords","getCoords","shiftX","shiftY","startDrag","style","drop_elem","findDropElem","updateDropElem","querySelector","finishDrag","box","getBoundingClientRect","pageYOffset","pageXOffset","$avatar","old","parentNode","nextSibling","position","zIndex","avatar_cursor","cursor","draghandle_elem_cursor","rollback","hidden","elementFromPoint","old_drop_elem","modal_settings","in_duration","out_duration","opacity","minScrollbarLength","suppressScrollX","wheelSpeed","startBlinkingFavicon","_blink_interval","clearInterval","$icon","favicon","favicon_gray","favicon_message","stopBlinkingFavicon","resetMessageCounter","onChangedFocusState","popupNotification","playAudio","loop","filename","Audio","stopAudio","registerDOMEvents","initIdleJS","stop","idle","onIdle","onActive","keepTracking","startAtIdle","focused","hasFocus","Materialize","modalSettings","drag_manager","DragManager","Body","login_page","NodeView","toolbar_view","ToolbarView","blur_overlay","main_panel","main_overlay_panel","left_panel","right_panel","right_contact_panel","wide_panel","placeholders_wrap","settings_modal_view","SettingsModalView","idAttribute","to_sync","synced","deleted","update_timestamp","update_settings","request_data","CollectionWithStorage","account_settings_list","AccountSettingsList","order_timestamp","AccountsOrderTimestamp","LogLevel","WARN","ERROR","addConnectionPlugin","_connection","conn","Status","addNamespace","REGIFAIL","REGISTER","REGISTERED","CONFLICT","NOTACCEPTABLE","disco","addFeature","addNode","items","reset","instructions","registered","connect_cb","_connect_cb","raw","_registering","_check_user","_register_cb_check_user","processed_features","_connect_cb_data","_register_cb","xmlInput","Connection","rawInput","auth_old","authenticate","matched","domain","password","authzid","getBareJidFromJid","authcid","getNodeFromJid","pass","connect_callback","connect","wait","hold","route","getDomainFromJid","connect_check_user","connect_change_password","registerSASLMechanisms","SASLAnonymous","SASLExternal","SASLMD5","SASLPlain","SASLSHA1","_callback","connected","bodyWrap","_proto","_reqToData","strip","serialize","CONNFAIL","register","getElementsByTagName","mechanisms","_no_auth_received","_changeConnectStatus","_addSysHandler","_get_register_cb","stanza","getText","submit","_submit_cb","error_text","submit_unregister","_submit_unregister_cb","SASLHOTP","SASLMechanism","onChallenge","out","len","charAt","utf16to8","hotp_pass","ConnectionManager","auth_type","registerSASLMechanism","_sasl_data","SASLXOAuth2","reconnect","_attemptSASLAuth","sortMechanismsByPriority","mechanism_found","_sasl_success_handler","_sasl_success_cb","_sasl_failure_handler","_sasl_failure_cb","_sasl_challenge_handler","_sasl_challenge_cb","_sasl_mechanism","onStart","request_auth_exchange","$build","SASL","mechanism","isClientFirst","response","hotp_counter","_sasl_auth1_cb","features","do_bind","do_session","namespaceURI","AUTH_DEVICES","x_token_auth","SYNCHRONIZATION","server_features","create","do_synchronization","SUBSCRIPTION_PREAPPROVAL","x_token","expire","getXToken","token","expires_at","token_uid","_send_auth_bind","AUTHFAIL","_sasl_bind_cb","resource","getResourceFromJid","BIND","old_token","uniq_id","iqtype","Websocket","_onIdle","_conn","_data","paused","rawStanza","_buildStream","xmlOutput","rawOutput","socket","_pending_stanzas","xmlunescape","reg_exp","testRegexp","replaceRegexp","vcard","xmlToObject","$vcard","nickname","fullname","middle_name","birthday","job_title","role","description","jabber_id","org","photo","phone","address","email","group_info","anonymous","searchable","status_msg","members_num","$org","unit","$photo","number","work","home","mobile","pobox","extadd","street","locality","region","pcode","country","VCARD","sendIQ","objectToXml","getBlank","updateRefreshButton","getVCard","$info","$addr_info","show_addr_block","addr","onClickIcon","$target_value","copied_text","value_text","refresh","vcard_right","vcard_edit_modal","pickadate","selectMonths","selectYears","autoOk","allowKeyboardControl","today","onClose","activeElement","weekday_display","date_display","navPrev","navNext","selected","buttonClear","buttonClose","evt","updateSaveButton","setData","updateTextFields","changePlaceholder","nickname_placeholder","setVCard","$pres","Images","enabled","status_message","priority","auto_login_xa","account_unique_id","groupchat_servers_list","_attrs","retraction_version","is_new","auth_view","is_invalid","last_msg_timestamp","collection","order","getLastOrder","deleteAccount","photo_hash","reconnected","ready_to_send","conn_retries","conn_feedback","_waiting_code","code_requests","gallery_code_requests","xabber_auth","onChangedConnected","websocket_connection_url","conn_manager","_added_pres_handlers","_pending_messages","dfd_presence","password_view","_init_plugins","plugin","call","xml","isOnline","getPassword","isReconnecting","sendMsg","authenticated","disconnecting","sendMsgPending","sendMsgFast","getConnectionForIQ","fast_connection","sendFast","nodeTree","is","pubAvatar","removeAvatar","http_avatar","avatar_hash","iq_pub_metadata","PUBSUB","PUBSUB_AVATAR_METADATA","thumbnails","PUBSUB_AVATAR_METADATA_THUMBNAIL","data_error","iq_pub_data","PUBSUB_AVATAR_DATA","uploaded","generated","uploadAvatar","getAvatar","iq_request_avatar","pubsub_avatar","is_iq","parseDataForm","$dataform","$field","field_var","field_label","field_value","field_options","$option","lbl","addDataFormToStanza","$stanza","field_attrs","sendPres","createFastConnection","login","token_invalidated","fast_conn_manager","disconnect","onFastConnected","reconnecting","auth_failed","restoreStatus","connectionCallback","timeout","connFeedback","reconnectionCallback","loginCallback","conn_status","conn_condition","onConnectionConflict","CONNECTED","onTokenRevoked","onAuthFailed","DISCONNECTED","flush","_main_interval_worker","terminate","max_retries","registerCallback","$nickname_input","errorRegistrationFeedback","changePasswordCallback","change_password_view","successFeedback","errorFeedback","old_password","change_password_connection","$password_input","change_password_connection_manager","unregisterAccountCallback","unregister_account_view","unregister_account_connection","unregister_account_connection_manager","CONNECTING","stepped_auth","resetAuthStepper","authStepperStart","endAuth","stepper_auth_error","CONNTIMEOUT","authStepperError","destroy","no_reconnect","old_device_token","getAllXTokens","tokens_list","tokens","$token","client","omemo_id","last_auth","ip_address","ip","x_tokens_list","on_token_revoked","onReconnected","onConnected","onDisconnected","afterConnected","_after_connected_plugins","_after_fast_connected_plugins","_fast_interval_worker","_after_reconnected_plugins","sendPendingStanzas","sendPendingMessages","registerPresenceHandler","enableCarbons","getAllMessageRetractions","query_options","REWRITE","version","retractions_query","Builder","is_msg","b","msg_iq","unique_id","DELIVERY","disconnected_timestamp","last_stanza_timestamp","deactivate","CARBONS","is_callback","isFunction","vcard_updated","avatar_priority","vcardPhotoUpdated","getStatusMessage","setStatus","status_updated","status_prev","sendPresence","getAvatarHash","from_avatar","decoded_raw","bin","VCARD_UPDATE","caps","createCapsNode","has_modal_settings","settings_account_modal","revokeXToken","token_num","revokeAllXTokens","show_settings","dont_change_screen","show_settings_after_delete","dont_change_screen_after_delete","omemo","groups_settings","clearStorage","groupchat_settings","chat_settings","deleteDataBase","registerIQHandler","_stanza_handler","onGetIQ","registerSyncedIQHandler","_synced_stanza_handler","onSyncedIQ","_pres_handler","presence","onPresence","onSetIQResult","roster","syncConversations","request_code","$incoming_iq","$confirm","HTTP_AUTH","$session_availability","JINGLE_MSG","from_jid","onAuthCode","$session_availability_response","session_id","testGalleryTokenExpire","currentTime","tokenExpireTime","initGalleryAuth","testGalleryFileSlot","onloadend","b64","responseJSON","gallery_feature","gallery_iq_answered","stringify","request_id","gallery_auth_errback","verifying_code","verifying_mess","handleCommonGalleryErrors","confirm_code","expires","prepareFiles","testFile","err_text","getStorageStats","uploadFile","formData","FormData","metadata","voice","processData","deleteFile","file_id","getOpenGraphData","site","ogp","image_height","image_width","video_url","createMessageFromIQ","mergeContact","$presence","bare_jid","$vcard_update","VCAD_UPDATE","resource_obj","$device","addInitPlugin","func","addConnPlugin","reconn","addFastConnPlugin","acc1","acc2","models","settings_list","getEnabledList","getConnectedList","onAdd","onUpdatedOrder","onListChanged","onAccountDisconnected","onQuitAccounts","onSettingsAdded","last","used_colors","colors","moveBefore","index2","prev_order","at","_updateOrder","moveToBottom","index","toolbar_item","updateConnected","updateAuthState","updateStatus","setActive","filterChats","updateList","updateOneInList","onAccountRemoved","after","resource_right","Collection","r1","r2","p1","p2","requestInfo","$identity","attention_supported","isFeatureSupported","ATTENTION","ns","is_supported","renderByInit","onResourceAdded","onResourceRemoved","onReset","onPriorityChanged","updatePosition","vcard_modal","showEditView","media_gallery_account","onUpdateAvatars","updateStorage","loading_files","current_page","total_pages","current_options","page","getFiles","after_deletion","after_avatar_update","used_storage","total","used","quota","videos","voices","filterType","sorting","order_by","getAvatars","onTabClick","tab_header","backToMain","showDeleteFilesView","gallery_view","sortFiles","sort_type","onClickFile","prev_audio_message","file_url","not_expanded_msg","$msg_element","audio_file_waveform","waveform_id","aud","createAudio","round","getDuration","unAll","timerId","cur_time","getCurrentTime","isPlaying","onchange","setVolume","scrollParent","barWidth","barHeight","cursorColor","autoCenter","normalize","hideScrollBar","progressColor","load","assign","obj_per_page","current_rendered_type","renderFiles","$gallery_file","media_gallery_account_file","svg_icon","media_type","filesize","created_at","download_only","closeOnContentClick","fixedContentPos","mainClass","verticalFit","titleSrc","zoom","deleteAvatar","enableFilesSelect","onSelectFile","disableFilesSelect","selectFile","$target_input","selected_header","selected_count","deleteSelectedFiles","openStoragePanel","wheelPropagation","delete_files_media_gallery","onRender","deletePercent","percent","current_page_preview","getFilesForDeletion","renderForDeletion","date_lte_for_deletion","dropdown_settings","deleteFilesFiltered","date_lte","account_settings_modal","status_field","updateBlocks","updateGallery","vcard_view","updateView","showConnectionStatus","updateSynchronizationBlock","updateXTokens","groups","updateGroupsLabel","updateReconnectButton","updateSyncOption","updateDelSettingsButton","updateSyncState","updateEnabled","updateOmemoDevices","updateEnabledOmemo","updateEncryptedChatstates","updateBlockedLabel","blocklist","blocked_count","jumpToBlockHandler","tabs","updateDeviceInformation","backToMenuHandler","backToSubMenuHandler","deselectBlocked","updateNameCSS","$name","wrap_width","font_size","chooseAvatar","openEmojiPanel","openWebcamPanel","changeAvatar","openChangeStatus","unregisterAccount","store","showResources","resource_id","hideResources","renderAllXTokens","sortBy","pretty_token","findWhere","toJSON","is_omemo","$cur_token_html","current_token_item_modal","$token_html","token_item_modal","omemo_own_devices","omemo_device_id","updateTrustDevice","_single_account","status_text","own_devices","fing","$this_device","generateFingerprint","getBundle","pk","spk","ik","fingerprint","openFingerprint","is_own","openFingerprintDevice","groups_count","mdiclass","$sync_icon","omemo_enable_view","setEnabled","setEnabledOmemo","initOmemo","destroyOmemo","setTypingNotification","openDevicesWindow","omemo_devices","purgeKeys","device_id","bundle","preKeys","removeItemFromNode","OMEMO","showPasswordView","changeSyncSetting","deleteSettings","delete_account","changeColor","showQRCode","qrcode","noBorder","domElement","openBlockWindow","block","blockContact","unblockSelected","single_account_settings_modal","args","status_message_input_widget","global_settings_item_modal","updateNickname","onDragTo","onMoveAccount","onMoveAccountToBottom","updateHtml","change_status","highlightStatus","restoreStatusMessageInput","changeStatus","do_change","clearStatusMessageInput","verbose_status","apply_to_all","changeApplyToAll","avatars_gallery","current_items","current_file","addAvatar","img_from_gallery","createFileFromURL","webcam_panel","registration","registration_view","streaming","startbutton","startupStream","srcObject","getTracks","track","getUserMedia","stream","takePicture","clearPhoto","context","fillRect","globalCompositeOperation","beginPath","arc","PI","closePath","saveAvatar","member_details_avatar_size","emoji_panel","emoji_panel_view","openEmojiPicker","emoji_picker","readEmojisJSON","emojis","emoji_picker_tabs","pickEmojiTab","tab","pickEmoji","change_password","is_login","authFeedback","getActionName","setPassword","authentication","change_account_password","$old_password_input","$password_confirm_input","password_confirm","password_not_error","$jid_input","updateOptions","at_idx","registerFeedback","registration_success","authStepperShow","getWebsocketURL","DISABLE_LOOKUP_WS","protocol","socket_url","socialAuth","origin","xmpp_login","$domain_input","handleRegistrationStep","stepped_auth_complete","updateDomains","updateAuthDomains","openButtonsMenu","keyUpNickname","openNextStep","keyUpJid","_check_user_timeout","setCustomDomainRegistration","regexp_local_part","regexp_domain","_registration_username","_registration_domain","auth_connection","handleRegisterStanza","auth_conn_manager","checkUserCallback","keyUpPassword","keyUpDomain","keyUpLogin","focusoutDomain","username_taken","_supports_check_user","class","user_success","_check_user_connection_timeout","_no_response","openPreviousStep","step","checkFeaturesStepper","successRegistrationFeedback","registerWithoutAvatar","logoutAndRegister","openRegisterForm","openLoginForm","all_servers","splice","setCustomDomainAuth","$property_value","changePropertyValueRegistration","$property_item","changePropertyValueAuth","timeout_timer","HTTP_UPLOAD","first_features_received","auth_error","add_account","logout","unregister_account","checked_count","submitUnregister","xmpp_login_panel","XmppLoginPanel","Container","Accounts","ToolbarAccountsBlockView","SettingsAccountsModalBlockView","add_account_view","AddAccountView","UnregisterAccountView","change_account_password_view","ChangeAccountPasswordView","delete_files_view","DeleteFilesFromGalleryView","onbeforeunload","login_screen","xabber_login","single_account","supports","renderSingleAccount","addIdentity","LAST","CHATSTATES","BLOCKING","PING","CHAT_MARKERS","ARCHIVE","GROUP_CHAT","namespace","verbose_name","feature","onFeatureAdded","getAllFromCachedFeatures","is_cached","onInfo","onItems","addItem","form_type_val","URLDISCO","media_gallery_url","MEDIAGALLERY","_var","client_feature","client_features","putInCachedFeatures","_last_stanza_handler","_pong_handler","ping","addPingHandler","pong","Worker","downtime","onLine","last_fast_stanza_timestamp","_last_fast_stanza_handler","_fast_pong_handler","_onDiscoInfo","DISCO_INFO","_onDiscoItems","DISCO_ITEMS","Emoji","subscription","subscription_request_in","subscription_request_out","group_chat","onChangedGroupchat","full_jid","server","roster_name","isBlocked","blocked","b64_sha1","updateCachedInfo","is_deleted","out_request","online_members_num","getSubscriptionStatuses","subscription_preapproved","in_request","status_description","status_out_color","status_in_color","status_out_text","status_in_text","status_out","status_in","getIcon","getFromRoster","cached_info","roster_info","in_roster","putInRoster","updateCounters","participants","resetParticipantsList","getBlockedParticipants","getLastSeen","last_seen","getLastSeenStatus","getMyInfo","participantsRequest","properties","cached_avatar","getAvatarInfoById","createFromStanza","my_info","avatar_b64","my_rights","message_time","pres","pushInRoster","ROSTER","group","removeFromRoster","acceptRequest","askRequest","blockRequest","declineRequest","declineSubscription","declineSubscribe","deleteWithDialog","is_group","msg_text","bold","localpart","delete_history","retractAllMessages","deleteFromSynchronization","blockWithDialog","unblockWithDialog","unblock","setActiveStateSendInterval","$msg","_sending_active_chatstate_timeout","_sending_active_chatstate_interval","handlePresence","$group_chat_info","updateGroupChatsList","group_chat_info","parseGroupInfo","prev_group_info","sync_deleted","$status_message","_reset_status_timeout","$group_chat","$model","privacy","$index","$description","pinned_message","prev_pinned_message","private_chat","$online_members_num","pinned_msg_elem","$pinned_message","getMessageByStanzaId","$message","parsePinnedMessage","getAllRights","iq_get_rights","iq_all_rights","all_permissions","all_restrictions","all_rights","permissions","restrictions","stanza_id","receiver","XABBER_CHAT","fast","is_groupchat","filter_image","filter_video","filter_voice","filter_files","opt_var","onStartedMAMRequest","callb","onCompletedMAMRequest","rsm","errb","getFilesFromStanza","cached_stanza_id","references","cached_message","REFERENCE","reference","$reference","$file_sharing","FILES","VOICE_MESSAGE","$file","file_attrs","HASH","uniqueid","has_encrypted_files","renderPinnedMessage","locations","fwd_message","fwd_msg_author","user_info","participant_info","participant_nickname","chat_content","is_scrolled","pinned_msg","author","fwd_author","pinned_msg_html","group_chats","height_pinned_msg","resetStatus","searchByParticipants","participants_list","showDetails","details_view","scrolled_top_chats_view","scrolled_top_chat","details_view_right","details_view_right_encrypted","contact_searched_messages_view","hideSearch","showSearchMessages","set_status","getStatuses","updateIcons","ic_name","iq_get_properties","renderStatuses","f","$status_item","status_item","iq_set_status","interval_last","selectView","updateGroupChat","updateIcon","onBlocked","updateStatusMsg","lastSeenUpdated","new_status","is_group_chat","contact_right_item","showJid","hideJid","clickOnItem","contact_left_item","updateDisplayStatus","updateBlockedState","updateMutedState","onResourceUpdated","showVCard","hideVCard","contact_details_right","name_field","contact_edit_view","edit_groups_view","updateNotifications","updateJingleButtons","updateChilds","updateSubscriptions","setButtonsWidth","updateIndicator","keydownHandler","hideEdit","isOpen","openChat","scrollToTopSmooth","animate","widths","button","bottom_block_scroll","is_blocked","is_server","$label_outcoming","$label_incoming","prev","showEdit","voiceCall","initCall","initJingleMessage","deleteContact","unblockContact","muteChat","muted_seconds","mute_type","unmuteChat","$search_form","addContact","changeList","list_name","scrollLeft","addList","_render","constructor_func","requestAuthorization","group_chat_details_right","member_avatar_size","group_chat_properties","group_chat_status","group_chat_properties_edit","default_restrictions_edit_right","hideRestrictions","showRestrictions","is_owner","change_group","clearHistory","head","editProperties","leaveGroupChat","inviteUser","edit_view","getInvitations","deleteGroup","group_status","group_status_right","$target_info","label_name","group_chat_properties_right","hideMoreDescription","all_fixed","saveChanges","has_changes","checked_inp","text_inp","textarea","field_idx","$result","$error","updateInvitations","user","$item_view","invited_member_item","showInviteButton","revokeInvitation","$member_item","member_jid","updateRemoveParticipantButton","revokeInvitationByElement","participant","temporary_items","all_messages_loaded","getMediaFromDecryptedMessages","messagesFileRequest","updateMedia","active","last_rsm_message","loading_messages","loadMoreFiles","block_height","updateForParticipant","delegateEvents","filter_type","fail","cached_messages","getMessages","entries","msg_items","filtered_items","items_count","filterEncryptedFiles","encryptedFilesHandler","files_count","updateEncryptedMedia","is_loaded","true_voice","media_item","is_encrypted","media_items_empty","messages_count","searched_message","gallery","parents","searched_messages","updateBlockedParticipants","showBlockButton","unblockUser","tag","unblockUserByElement","blockId","onParticipantsUpdated","updateParticipantsList","participant_properties_panel","updateParticipants","setParticipantsListVersion","updateVersion","renderParticipants","renderMemberItem","blockParticipant","kickParticipant","kick","removeParticipantFromList","badge","is_me","pretty_present","present","isValid","fromNow","group_member_item","prependTo","updateMemberAvatar","member","getB64Avatar","getHashAvatar","avatar_url","updateCachedAvatars","showParticipantProperties","participant_item","participant_id","keyUpSearch","searchParticipant","participants_right_panel","onParticipantsChanged","kickParticipantDialog","group_member_item_right","showParticipantPropertiesEdit","showNamePanel","changeBackButton","participant_rights","onBadgeUpdated","new_avatar","$member_info_view","is_myself","is_blocked_contact","incognito_chat","private_participant_details","participant_details_item","participant_messages","actual_rights","setActualRights","new_nickname","updateRightsView","messages_view","messagesRequest","changeTimerValue","$input_item","updateBadge","$member_item_nickname","xmlescape","editNickname","editBadge","edit_badge_panel","checkKeydown","checkKeyup","retractUserMessages","retractMessagesByUser","restriction_expire","restriction_item","right_expire_variants","right_name","expire_options","getPrivateChat","participant_jid","participant_in_roster","iq_response","group_jid","createSystemMessage","private_chat_jid","changeRights","$right_item","saveRights","member_id","$participant_avatar","nickname_value","changed_avatar","rights_changed","iq_changes","right_item","right_expire","iq_rights_changes","participant_details_right","private_participant_details_item_right","participant_details_item_right","participant_name_field","participant_badge_field","hidePanel","resetPanel","changeName","changeBadge","clickAvatarInput","setVisibility","$current_restriction","new_badge","badge_edit_view","typeEmoticon","_timeout","$insert_emoticon","$emoji_panel_wrap","$emoji_panel","$emoji_list_wrap","saveNewBadge","emoji_node","checkKey","default_restrictions","actual_default_restrictions","showDefaultRestrictions","restriction_name","restriction_expires","restriction","changeRestriction","changePropertyValue","iq_change_default_rights","has_new_default_restrictions","changeExpiresTime","expire_time_item","new_expire_time","$restriction_item","default_restrictions_right","getBase64Avatar","getParticipantsListVersion","getCachedParticipants","getParticipantsList","mergeParticipant","resetParticipants","getRights","rights","pretty_rights","issued_time","expires_time","updatePinnedMessage","$response","photo_url","updateParticipant","participants_lists","all_participants_lists","participants_list_idx","chat_participants","participant_idx","setParticipantsList","updated_participants_list","invitation","closeChat","readMessages","blockInvitation","contact_jid","iq_get_blocking","iq_unblocking","iq_set_blocking","iq_blocking_items","item_jid","getDefaultName","group_name_input_widget","force_reset","description_input_widget","changeDescription","onUpdate","all_groups","notSpecial","groups_checkbox_list","groups_list","groups_new_group","on_add","_update_template","removeGroup","group_name","removeLastGroup","editGroup","_hide_timeout","checkNewGroup","keyupAddNewGroup","addNewGroup","keydownAddNewGroup","focusinAddNewGroup","focusoutAddNewGroup","edit_contact","updateStatuses","statuses","status_out_class","status_in_class","requestSubscription","allowSubscription","cancelSubscriptionRequest","handleSubscriptionRequest","cancelSubscriptionOut","cancelSubscriptionIn","edit_group","group_name_field","group_description_field","restrictions_count","showMembershipProperty","showIndexProperty","showDescriptionProperty","hideProperty","invitations","actionSelectedParticipants","deselectParticipants","selectParticipant","is_selected","inv_count","showPanel","original_data_form_values","data_form_index","findIndex","changeMembership","membership_text","membership","changeIndex","index_text","onContactChanged","contact1","contact2","s1","s2","sw1","sw2","sw1_offline","name1","name2","settings_view","updateCounter","onContactRemoved","onChangedRosterSettings","isSpecial","where","renameGroup","new_name","removeContact","updateGroupIcon","updateMembersCounter","onContactAdded","updateContactItem","onChangedOfflineSetting","onChangedSortingSetting","updateExpanded","expanded","mdi_icon","show_offline","roster_settings","group_settings","is_default_show_offline","is_offline","showSettingsIcon","showGroupSettings","group_right","group_left","setOffline","validateName","applySettings","name_error","onGroupAdded","acc_view","onGroupAddedSingleAccount","rendered_once","removeAllContacts","collections","updateInCollections","addCollection","hasOwnProperty","registerHandler","onBlockingIQ","getFromServer","roster_version","add","addContactToGroup","known_changed","in_roster_changed","groups_changed","groups_to_remove","getGroup","onRosterIQ","syncFromServer","synchronization_with_stamp","is_first_sync","request_attrs","cached_conversations_exclude","onSyncIQ","last_version_sync","syncCachedConversations","request_with_stamp","cached_conversations","syncConversation","conversation","parseXML","saved","conv","account_conversation_type","removeFromCachedConversations","SYNCHRONIZATION_OLD_OMEMO","$sync_metadata","$group_metadata","is_incognito","is_private","SYNCHRONIZATION_OMEMO","current_call","$unread_messages","chat_timestamp","last_read_msg","last_delivered_msg","last_displayed_msg","unread_msgs_count","is_invite","msg_retraction_version","synced_msg","current_chat_timestamp","retracted_msg_id_list","putInCachedConversations","last_message","updateEncryptedChat","updateMutedList","$jingle_message","getCallingAvailability","reason","sendReject","initIncomingCall","sync_update","updateEmptyChat","is_unread","delay","messages_unread","isSenderMe","is_last_sync","sync_timestamp","sync_rsm_after","last_chat_msg_id","conversations_loaded","last_sync_timestamp","getAllFromCachedConversations","retract_version","sync_options","getRoster","request_ver","getAllFromRoster","roster_items","ver","new_roster_version","onRosterItem","is_version","known","onGroupRenamed","onGroupRemoved","updateGroupPosition","group_view","old_name","account_roster_right","updateGlobalCounter","account_roster_left","hashes","updateTabsLabel","selectUnblock","updateUnblockButton","unblockContactByJid","hideEmptyContainers","rendered","tmp","contact_blocked_item","domains","contact_label_text","domains_label_text","invitations_label_text","updateOneRosterView","updateRosterViews","removeRosterView","account_roster_view","roster_left","updateLeftIndicator","getContactForItem","account_jid","roster_view","setOfflineSetting","setSortingSetting","$parent_el","contact_placeholder","onPlaceholderUpdate","add_contact","group_data","updateGroups","renderAccountItem","bindAccount","renderGroupsForAccount","stepForward","add_contact_account_item","silent","groups_checkbox_list_contact","selectAccount","checkJid","force_opened_state","custom_notifications","message_preview","pinned","general_group_name","non_roster_group_name","ModelWithDataBase","put","response_value","get_all","clearDataBase","clear_database","delete_database","getFromCachedConversations","getFromCachedFeatures","removeFromCachedFeatures","objStoreName","primKey","roster_item","Boolean","_roster_settings","RosterSettings","contacts_view","RosterLeftView","contact_container","details_container","ContactPlaceholderView","add_contact_view","AddContactView","msgid","updateUniqueId","destroyOnEcho","removeMessage","forwarded_message","getState","getVerboseState","createInvitationFromStanza","is_private_invitation","$delay","markable","archive_id","origin_id","$group_info","group_info_attributes","carbon_copied","is_archived","is_forwarded","contact_stanza_id","synced_invitation_from_server","parent_chat","auth_request","invite","private_invite","is_accepted","replaced","forwarded","sid","context_message","is_unread_archived","participant_message","echo_msg","is_between_anchors","not_encrypted","link_references","is_trusted","begin","MARKUP","$mention","child_ref","$geolocation","GEOLOC","loc_attrs","lat","lon","OGP","$ogp","link_reference_attrs","original_text","getFileType","x_elem","$user","user_id","user_jid","groupchat_jid","is_sender","participants_version","WEBCHAT","addresses","ADDRESS","$address","only_emoji","synced_from_server","missed_history","missed_msg","pinned_messages","searched_in_contact_messages","context_messages","msg_contact","filereader","exportedMasterKey","enc_file","readAsArrayBuffer","getFilename","url_media","lastIndexOf","full_type","contact_full_jid","volume_on","video_in","video_screen","video_live","registerIqHandler","audio_notifiation","call_initiator","modal_view","RTCPeerConnection","iceServers","sdpSemantics","$remote_video_el","$remote_audio_el","$local_video","current_timer","onconnectionstatechange","onChangeConnectionState","onChangedMediaType","ontrack","remote_stream","streams","_waiting_timeout","onicecandidate","onIceCandidate","oniceconnectionstatechange","onChangeIceConnectionState","setEnabledAudioTrack","onChangedVideoValue","setEnabledVideoTrack","setEnabledScreenShareVideoTrack","onChangedRemoteVideo","onChangedVolume","iq_handler","onIQ","updateTimer","startTimer","call_timer","peer_conn","conn_state","connectionState","_timeout_failed","restartIce","ice","candidate","sendCandidate","iceConnectionState","incoming_video","local_stream","getAudioTracks","default_video","getSenders","sender","createVideoStream","getVideoTracks","stopTracks","createScreenShareVideoStream","video_state","sendVideoStreamState","getDisplayMedia","media_stream","addTrack","replaceTrack","$iq_video","$jingle_initiate","$jingle_accept","$jingle_info","$jingle_video","$result_iq","offer_sdp","JINGLE_RTP","setRemoteDescription","RTCSessionDescription","sdp","acceptSession","answer_sdp","addIceCandidate","RTCIceCandidate","sdpMLineIndex","sdpMid","startCall","createAudioStream","propose","video_track","initVideoTrack","removeTrack","$propose_msg","media","HINTS","$accept_msg","$reject_msg","call_attrs","initiator","p","getImageData","requestAnimationFrame","draw","putImageData","captureStream","createOffer","offerToReceiveAudio","offerToReceiveVideo","offer","setLocalDescription","$iq_offer_sdp","JINGLE","action","creator","JINGLE_SECURITY_STUB","$iq_candidate","JINGLE_TRANSPORTS_ICE","createAnswer","answer","$iq_answer_sdp","opened","display","displayed_sent","last_displayed_id","last_delivered_id","unread","const_unread","sync_created","onContactDestroyed","onChangedContact","onChangedTimestamp","onChangedLastReadMsg","_no_scrolling_event","is_first","requestHistoryBetweenAnchors","read_count","message_item","_long_reading_timeout","scrollToUnread","recountUnread","resetUnread","sendDataForm","variable","setStanzaId","updateMessage","msg_to","endCall","receiveMessage","from_bare_jid","$marker","$receipt_request","RECEIPTS","$receipt_response","$jingle_msg_propose","$jingle_msg_accept","$jingle_msg_reject","receiveNoTextMessage","iq_to","jingle_start","reject_contact_stanza_id","busy_audio","$stanza_id","$contact_stanza_id","marker_tag","is_mam","sendMarker","receiveMarker","receiveCarbonsMarker","sendDeliveryReceipt","receiveDeliveryReceipt","last_blocking_timestamp","current_timestamp","has_blocking","blocking_timestamp","mention_context","stanza_id_context","omemo_dfd","msg_options","$delivery_msg","msg_id","by","$displayed","$received","marked_msg_id","marked_stanza_id","msg_state","delivered_time","setMessagesDelivered","setMessagesDisplayed","enc_chat","undelivered_messages","last_read_msg_id","second_deferred","new_last_read_msg","unread_msg","delivered_origin_id","delivered_stanza_id","onRosterPush","retractMessages","symmetric","msgs_responses","num","iq_retraction","getConversationType","user_msgs","retract_attrs","all_messages","showBlockedRequestMessage","muted_value","conversation_options","mute","SYNCHRONIZATION_REGULAR_CHAT","message_counter","content_placeholder","updatePinned","updateArchivedState","updateGroupChats","updateEncrypted","updateChatError","updateActiveStatus","onClosed","updateChatCard","onMessageRemoved","onChangedMessageState","updateIncomingSubscription","updateAcceptedStatus","removeInvite","updateEncryptedColor","new_message","updateTextClipping","error_msgs","indicators_count","is_pinned","archived","deletePlayersFromMessage","players","msg_time","is_empty","italics","bottom","draft_message","msg_from","msg_files","msg_images","msg_locations","msg_user_info","$colored_span","is_audio","total_size","first_forwarded_msg","fwd_msg_files","fwd_msg_images","fwd_msg_locations","fwd_msg_txt","openByClick","click_counter","setDefaultPlaceholder","onChatRemoved","loading_history","history_loaded","first_msg_id","last_msg_id","wheel_ev","defineMouseWheelEvent","onMouseWheel","backToBottom","onwheel","onmousewheel","keyupSearch","renderSearchPanel","onClickMessage","onClickLink","onClickLocationLink","onClickLocation","onHoverLocation","emptyChat","addMessageHTML","last_index","scrolled_from_top","scrolled_from_bottom","$next_message","nextAll","updateMessageInChat","initPopup","$history_feedback","addMessage","onChangedReadState","onUpdatePlyr","originalEvent","deltaY","first_history_loaded","last_history_loaded","_scrollbottom","showHistoryFeedback","hideHistoryFeedback","_onscroll_read_messages_timeout","readVisibleMessages","msg_item","buildMessageHtml","findLastIndex","slideToggle","chat_content_contact","timer","loading_timestamp","loaded_messages","message_count","showMessageAuthor","member_nickname","subscription_buttons","hideElement","sendAndAskSubscription","current_day_indicator","_pending_avatars","updateContentColorScheme","onMessage","_is_scrolled_bottom","onChangedActiveStatus","onChangedIdleStatus","loadLastHistory","requestMissedMessages","onChangedMessageTimestamp","onTrustedChanged","onSubscriptionChange","updateMyInfo","cancelSearch","updateContactStatus","updateWaveforms","getPeer","fingerprints","updateMyName","updateMyStatus","updateMyAvatar","trusted","_loading_history","loadPreviousHistory","backend","drawBuffer","sendChatState","showChatNotification","is_context","last_visible_unread_msg","readMessage","hideMessagesAfterSkipping","synced_message","$synced_message","last_visible_msg","$last_visible_msg","_read_last_message_timeout","unread_context_messages","showUnreadMarker","unread_marker","$last_read_msg","mam_query","getMessageArchive","unread_history","scrollToUnreadWithButton","showDayIndicator","is_focused","indicator_idx","opacity_value","$chatday_indicator","$messages","marker","indicator","scroll_read_timer","removeAllMessagesExceptLast","_interval","is_saved","sendMAMRequest","func_conn","_delete_handler_timeout","send_counter","previous_history","_load_history_timeout","unread_history_first","first_unread_msg_stanza_id","unread_history_before","last_history","_wait_load_unread_history","last_archive_id","loadUnreadHistory","is_error","_load_history_feedback_timeout","showPinnedMessage","unpinMessage","pinned_msg_modal","imageOnload","$image_container","$copy_link_icon","videoOnload","initPlyrEmbedPlayer","OGPLinkOnload","locationOnload","$copy_location_div","loadLocationInChat","ol","$map_element","Map","center","proj","transform","interactions","interaction_defaults","altShiftDragRotate","doubleClickZoom","keyboard","mouseWheelZoom","shiftDragZoom","dragPan","pinchRotate","pinchZoom","layers","layer","Tile","OSM","mapCanvas","getSize","mapContext","querySelectorAll","globalAlpha","matrix","CanvasRenderingContext2D","setTransform","Path2D","getComputedStyle","translate","msSaveBlob","msToBlob","getElementById","dataURL","setTarget","$chat_state","$subtype","showChatState","_chatstate_show_timeout","_current_composing_msg","updateMentions","mention_target","is_scrolled_to_bottom","startGalleryUploadFile","startUploadFile","notifyMessage","archiveChat","is_scrolling_needed","attentionMessage","_pending_my_info","decryptImages","force","fwd_msg","$prev_message","$one_image","$collage_image","initMagnificPopup","initZoomGallery","getImagesInformation","servers","delegate","closeBtnInside","opener","$new_message","short_datetime","new_title","messages_to_save","$message_in_chat","content_view","removeMessageFromDOM","next","manageSelectedMessages","_clearing_history","dialog_message","fontcolor","hideShowCursor","current_time","is_popup","createImageGrid","template_for_images","hidden_images","is_video","is_image","is_location","is_file","avatar_id","from_id","audio_player_list","verbose_state","short_time","classes","matching_markup","exec","saved_main","searched","file_upload","main","$img_html","createImage","img_content","createImageContainer","video_content","createVideoContainer","video_el","createVideo","template_for_file_content","copied_attrs","mdi_icon_class","audio_file","audio_player","contact_avatar","file_","upload_id","loading_circle","maxHeight","maxWidth","imgHeight","imgWidth","file_loading","template_for_location_content","location_attrs","template_for_link_reference_content","link_references_attrs","youtube_url_regexp","vimeo_url_regexp","link","site_name","link_reference_chat","$img_html_forward","is_image_forward","images_forward","is_forward_video","is_forward_file","is_forward_location","fwd_markup_body","$f_message","is_fwd_voice_message","fwd_messages_count","fwd_messages_link","img_content_forward","embed_video","getDateIndicator","date","day_date","msg_players","msg_videos","existing_player","message_id","video_id","hideMessageAuthor","pending_avatar","data_avatar","hideFwdMessageAuthor","showFwdMessageAuthor","$fwd_message","msg_elem","$prev_msg","fwd_msg_item","is_system","is_same_sender","is_same_date","$fwd_msg_item","$prev_fwd_message","notification_text","onclick","sendMessage","legacy_body","legacy_fwd_msg","createTextMessage","idx_begin","fwd","idx_end","mention_attrs","blockquote","all_files","created","u","link_reference","property","chat_hash_id","SCE","CLIENT","msg_sending_timestamp","msgCallback","was_reconnecting","_pending_time","saveForwardedMessage","forwarded_messages","onSubmit","fwd_messages","markup_references","attached_files","submitted_here","_dfd_info","new_fwd_messages","upload_service","addFileMessage","is_voice","new_files","file_counter","http_upload_service","deferred_all","addFileSnippets","encrypted_file","encryptFile","new_file","$slot","get_url","put_url","onFileNotUploaded","xhr","abort","onabort","upload","onprogress","percentage","loaded","onFileUploaded","cancelled_files_count","xhr_requests","msg_files_count","is_errored","arrayIndex","is_uploading","setEditedMessageAttachments","setRedactedUploadMessage","is_cancelled","oncancel","xhr_status","fakeStatus","fakeResponse","slot_response","setRequestHeader","response_text","error_status","statusText","err_status","files_","file_new_format","imgContent","video_attrs","$video_wrap_template","error_type","deleteFilesFromMessages","_chatstate_timeout","_chatstate_send_timeout","chat_state","EXTENDED_CHATSTATES","$next_msg","$old_prev_msg","is_synced","is_missed_msg","onTouchMessage","fwd_link_references","files_links","location_links","download","$plyr","no_select_message","expanded_fwd_message","quill","caret_position","participant_attrs","insertMention","img_information","images_details","$imgs","processClick","$prev_selected","$all_msgs","nextUntil","location_name","display_name","retrySendMessage","removeFileErrorMessage","chat_content_placeholder","pinned_message_panel","onClickPinnedMessage","onClickExpandedMessageLocation","expandFwdMessage","registerQuillEmbeddedsTags","Inline","import","Mention","static","paramValue","super","on_format","classList","blotName","optimize","QuillEmoji","domNode","item1","item2","t1","t2","mam_requests","deferred_mam_requests","openMention","identifier","registerMessageHandler","_msg_handler","runMAMRequests","parsePubSubNode","is_member_id","receivePubsubMessage","photo_id","member_node","b64_avatar","avatar_attrs","$mam","receiveHeadlineMessage","receiveErrorMessage","$stanza_received","$echo_msg","origin_msg_id","pending_message","$token_revoke","token_idx","settings_right","participant_version","active_right_screen","participant_msg_item","$retracted_msg","retracted_msg_id","retracted_user_id","receiveStanzaId","GROUP_CHAT_INVITE_HTTP","GROUP_CHAT_INVITE","$forwarded","to_jid","to_bare_jid","to_resource","stanza_ids","$carbons","carbon_direction","forwarded_msgs","FORWARD","forwarded_msg","$forwarded_msg","$forwarded_message","$forwarded_delay","add_group_chat","ACCOUNT_ITEM","setDefaultSettings","$global_wrap","default_global_value","$membership_wrap","default_membership_value","setCustomDomain","add_chat_account_item","updateGroupJid","lower","textarea_is_empty","fixJid","createGroupChat","chat_jid","addGroupChat","xmpp_server","group_chats_support","chats_panel","active_chat","onChatAdded","onChangedReadStatus","updateChatPosition","readAllMessages","onWindowResized","active_toolbar","hideChatsFeedback","_load_chats_timeout","previous_chat","replaceChatItem","pinned_chats","$chat_item","scrolled_top","updateScreenAllChats","force_bottom","current_scrolling","showGroupChats","group_chats_pinned","showChats","private_chats","private_chats_pinned","account_chats","account_chats_pinned","showArchiveChats","archive_chats","saved_chats","notificatons_chats","all_chats","all_chats_pinned","forward_panel","$cloned_item","is_match","has_matches_chats","has_matches_contacts","contact_list_item","forwardTo","setForwardedMessages","invitation_panel_view","registerClickEvents","selected_contacts","clearPanel","group_node","list_item","toggleContacts","selectAllGroup","addSelectedUsers","selected_users_count","_dfd_invitations","invitations_count","toast_text","sendInvite","addUser","itemIdx","sendInviteMessage","onInviteError","jid_to","hide_clone","is_visible","group_roster","selected_counter","saved_chat_head","_update_oneliner_interval","updateOneLiner","hideChat","updatePlyrTitle","updatePlyrTime","updateJingleButton","tooltip","rand_idx","one_liner","deleteChat","rewrite_support","pinSavedChat","pinned_value","visible_view","playPausePlyr","stopPlyr","popupPlyr","poster","$title_elem","voip_status","openJingleMessage","chat_head","resources_view","updateArchived","pinChat","onChangedBlocked","updateGroupChatHead","updateMenu","showContactDetailsRight","showContactResources","showMembersDetails","callAttention","updateArchiveChatsList","no_iq","is_archived_status","sendJingleMessage","getActiveScreen","active_screen","inviteUsers","exportHistory","showFingerprints","startEncryptedChat","openEncryptedChat","openRegularChat","send_media","addMedia","resolved_file","location_popup","initMap","coordinates","placemark","Overlay","Placemark","contentColor","autoPan","anchor","autoPanAnimation","placemark_my_location","overlays","enableHighAccuracy","maximumAge","pos","crd","getView","setCenter","longitude","latitude","setZoom","button_geoposition","geolocation","getCurrentPosition","custom_element_position","geoposition","control","Control","addControl","getPlacemarkPositionControl","button_placemark_position","custom_element_placemark_position","placemark_position","custom_element_show_location_name","show_location_name","send_buttom","send_address_div","send_div","custom_element_send","sLayer","Vector","Style","Circle","radius","stroke","Stroke","Fill","addLayer","SearchNominatim","polygon","reverseGeocode","house_number","road","neighbourhood","allotments","village","city","final_text","getSource","clear","geojson","GeoJSON","readFeature","dataProjection","featureProjection","getProjection","resolution","getResolutionForExtent","getGeometry","getExtent","getZoomForResolution","extent","getCenter","coordinate","getZoom","updateSize","sendLocation","closeLocationName","initializeScrollbar","destroyScrollbar","chat_bottom","mention_avatar_size","rich_textarea_wrap","bindings","enter","insertText","arrow_up","active_item","$prev_elem","arrow_down","$next_elem","arrow_left","arrow_right","modules","formats","scrollingContainer","edit_message","stopped_loading_link_reference","link_reference_exempted","currently_loaded_link_references","loading_link_reference","onChangedText","onBlockedUpdate","updateInfoInBottom","replyMessages","forwardMessages","copyMessages","deleteMessages","showEditPanel","pinMessage","resetSelectedMessages","$rich_textarea","rich_textarea","$rich_textarea_wrap","$placeholder","oncut","onCut","onloaded_sprites","all_sprites","window_onclick","$target_emoji","renderLastEmoticons","http_upload","messages_arr","focusOnInput","checkOwnFingerprints","is_scrolled_bottom","encryption_warning","checkContactFingerprints","is_contact_trusted","trust","unverified_counter","content_encryption_warning","onClickBottom","setOneLiner","disable","enable","moveCursorToEnd","root","lastElementChild","lastChild","send_on_enter","shiftKey","ctrlKey","displayMicrophone","displaySend","updateMarkupPanel","$ic_markup","updatePlaceholder","changeEncryption","current_height","quill_textarea","quill_current_height","text_input_height","quill_content","getContents","ops","insert","trimmed_text","setContents","bottom_height","scrolled_to_bottom","_timeout_textchange","updateOpenGraphReference","updateMentionsList","mention_text","mention_item","mention_all","onMentionButtonClick","getLength","setSelection","inputMention","$participant_item","lastRange","to_caret_text","mentions_at","matchAll","mentions_plus","at_position","plus_position","mention_position","deleteText","insertEmbed","showAccountSettings","edit_msg","setEditedMessage","mention_at_regexp","mention_plus_regexp","getLeaf","unsetForwardedMessages","removeLinkReferenceByUrl","removeFileSnippetById","clipboard_data","image_from_clipboard","getAsFile","arr_text","difference","request_count","link_reference_request_timestamp","request_timestamp","removeAttachments","removeAllFileSnippets","removeAllLinkReferences","stopLoadingLinkReference","removeLinkReference","uid","attached_file","typeicon","removeFileSnippet","is_upload","showLocationPopup","showMediaPopup","stopWritingVoiceMessage","$bottom_panel","writeVoiceMessage","initAudio","mozGetUserMedia","msGetUserMedia","webkitGetUserMedia","constraints","channelCount","chunks","$mic","onSuccess","start_time","end_time","mediaRecorder","encoderPath","encoderSampleRate","numberOfChannels","mic_hover","onstart","$timer_elem","$status_msg","$voice_visualizer","timerIdDot","onstop","audio_name","audio_type","ondataavailable","onError","caret_idx","savedRange","getFormat","formatText","cached_last_emoji","getLastEmoji","$last_emoticons","updateLastEmoji","forced","emoji_item","innerText","content_concat","content_attrs","mention_idx","ins","quote_start_idx","quote_end_idx","markup_ref","start_length","delta","markup_reference","editMessage","failed_files","file_check_dfd","pluck","setText","msg_author","image_preview","$img_html_preview","fwd_images","fwd_files","fwd_locations","createPreviewImage","onShowMarkupPanel","$clicked_icon","is_panel_opened","$selected_msgs","$input_panel","$message_actions","my_msg","$msgs","dataset","pushMessagesToClipboard","text_markups","original_body","forwarded_body","groupchat_ref","forward_ref","gc_length","decrypted_msg","putMessage","my_msgs","symmetric_deletion","copied_messages","fwd_msg_indicator","text_message","current_date","msg_sender","is_colored","current_bottom","chat_placeholder","last_emoji","cached_avatars","group_chat_members_lists","last_emoji_icons","muted_list","archived_list","group_chat_list","avatar_list","deleteTimedHandler","_get_msg_handler","addTimedHandler","handlers","h","omemo_enable_placeholder","onselectstart","metaKey","Chats","opened_chats","OpenedChats","closed_chats","ClosedChats","chats_view","ChatsView","ChatHeadContainer","chat_body","ChatBodyContainer","chat_body_placeholder","ChatBodyPlaceholderContainer","ChatBottomContainer","ChatPlaceholderView","add_group_chat_view","AddGroupChatView","searching","searching_wide","colorUpdated","toggleProperties","endDiscovering","isPropertiesVisible","discover","searchExistingGroupChats","getGroupchatService","onDiscoveringError","getGroupchatFeatures","getServerInfo","getChatsFromSever","$chat_item_html","existing_groupchat_item","searching_account_item","getChatProperties","request_iq","$iq_response","chat_properties","more_info_view","existing_groupchat_details_view","joinChat","getSearchingFields","iq_get","INDEX","parseSearchingFields","iq_result","$fields","XDATA","supported_fields","indexed_chats","iq_search","anywhere","onSearched","$chat","$property","property_name","property_value","discovering","DiscoveringView","onMessageUpdated","onMentionAdded","mentions_panel","active_mention","onMentionRemoved","updateMentionPosition","replaceMentionItem","$prev_el","$next_el","readAllMentions","contact_archive_id","previous_mention","updateContactName","contact_name","default_avatar","mentions_placeholder","Mentions","mentions_view","MentionsView","MentionsPlaceholderView","shift_pressed","shiftctrl_pressed","updateLayout","updateContainersLayout","panel_width","left_panel_width","right_panel_width","right_contact_panel_width","chat_bottom_panel_width","is_wide","is_narrow","toolbar_accounts_heigth","right_contact_panel_styles","right_contact_panel_saveable","wide","placeholders","path_acc_settings_modal","ViewPath","path_chat_head","path_chat_body","path_chat_body_placeholder","path_chat_bottom","path_group_invitation","path_enable_view","path_contact_details_right","path_contact_details_right_encrypted","path_participant_messages","path_details_participants","discovering_main","details","details_content","omemo_item","KeyHelper","SignalProtocolAddress","SessionBuilder","SessionCipher","updateDevices","d","removeSession","getDevice","getDevicesNode","_pending_devices","_dfd_devices","cb","parseUserDevices","enc_promises","aes","deviceId","ciphertext","preKey","is_own_devices","renderOwnDevices","renderDevices","updateFingerprints","updateOwnFingerprint","getMyDevices","editLabel","saveLabel","onblur","onkeydown","publishDevice","devices_count","$container","f_count","old_fingerprint","addRow","getBundleInfo","getIdentityKeyPair","pubKey","padStart","trustDevice","is_session_initiated","ignoreDevice","delete_button","edit_setting","fingerprint_item","deleteDevice","fingerprints_devices","renderTrustOnFingerprint","$warning_container","untrusted_count","device_icons","fingerprint_devices_item","getIdentity","generateIdentity","getPreKeys","publishBundle","generateIdentityKeyPair","generateRegistrationId","identityKey","registrationId","cacheIdentity","privKey","generatePreKeys","preKeysPromises","generatePreKey","generateSignedPreKey","getSignedPreKey","keyPair","signature","keyId","prekeys","getAll","prekey","priv_pk","key_pair","storePreKey","getUsedPreKeys","storeSignedPreKey","own_used_prekeys","identity","signedPreKey","cacheSignedPreKey","converted_spk","closeSession","sendOptOut","_pending_bundle","_dfd_bundle","$bundle","$spk","$pk","getRandomPreKey","cipherText","plainText","sessionCipher","decryptPreKeyWhisperMessage","hasSession","getCachedSession","storeSession","decryptWhisperMessage","getPreKey","used_prekeys","getSession","getDeviceId","cached_pk","isTrusted","processPreKey","publicKey","preKeyBundle","sessions","onDeviceIdUpdated","onOmemoDestroyed","peers","generateDeviceId","onOwnDevicesUpdated","removePreKey","cacheSession","storeSessions","deleteOwnDevice","addDevice","_pending_own_devices","_dfd_own_devices","contact_fingerprints","cacheRetractVersion","getRetractVersion","dev_id","rand","peer","encryptedMessage","encryptedElement","myKeys","rid","kex","EXPLICIT_MESSAGE_ENCRYPTION","hasChanges","o1","o2","obj1","obj2","has_devices","device_ik","cached_msg","getMessage","getTrusted","decryption_retry","own_trusted","contact_trusted","parseEncrypted","$encrypted","$payload","$header","keyElement","$m","encryptedData","ownPreKey","exportedKey","toBase64","publish","pks","conn_omemo","configNode","spks","removed_pk","missing_keys","last_id","rec","device_attrs","createBundleNode","contact_messages","Direction","SENDING","RECEIVING","getLocalRegistrationId","defaultValue","isTrustedIdentity","direction","util","loadIdentityKey","saveIdentity","fromString","existing","getName","loadPreKey","loadSignedPreKey","removeSignedPreKey","loadSession","record","getAllSessions","removeAllSessions","omemo_enable","onOmemoChange","enableOmemo","closeOmemoPlaceholder","views","api_service","discovery","ui","g","webpackAsyncContext","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","amdO","O","chunkIds","notFulfilled","Infinity","fulfilled","j","every","n","getter","__esModule","getPrototypeOf","mode","def","current","getOwnPropertyNames","definition","defineProperty","enumerable","chunkId","promises","miniCssF","globalThis","hmd","l","script","needAttach","scripts","s","charset","nc","onScriptComplete","doneFns","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","currentScript","baseURI","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}