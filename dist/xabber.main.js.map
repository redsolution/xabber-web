{"version":3,"file":"xabber.main.js","mappings":"UAAIA,ECCAC,EADAC,ECAAC,EACAC,E,8DCDJ,kq2C,6DCAA,muZ,6DCAA,oR,6DCAA,25D,6DCAA,wsE,6DCAA,igC,6DCAA,kqE,4DCAA,moB,6DCAA,y6I,6DCAA,2jF,6DCAA,iT,6DCAA,kuB,4DCAA,iY,6DCAA,ulB,6DCAA,snL,6DCAA,o3F,6DCAA,k6B,2DCAA,o2B,6DCAA,s9uC,6DCAA,yP,6DCAA,m7B,6DCAA,6iB,6DCAA,45E,6DCAA,0sC,6DCAA,gtpB,6DCAA,8qJ,6DCAA,62D,6DCAA,i2C,6DCAA,gwI,6DCAA,y5C,6DCAA,q9E,6DCAA,0pE,4DCAA,w9B,6DCAA,ue,6DCAA,4a,6DCAA,g6E,6DCAA,we,6DCAA,quC,6DCAA,8a,6DCAA,8S,6DCAA,2K,6DCAA,47pD,6DCAA,+pgD,6DCAA,s1I,6DCAA,uS,6DCAA,q/M,6DCAA,s6C,4DCAA,6hD,6DCAA,8H,6DCAA,02Q,6DCAA,06D,4DCAA,yF,6DCAA,oxD,6DCAA,8K,6DCAA,6S,6DCAA,kT,6DCAA,0wC,6DCAA,shF,6DCAA,24B,6DCAA,ijM,4DCAA,y5C,6DCAA,8T,6DCAA,iE,6DCAA,sgB,6DCAA,6V,6DCAA,ivC,6DCAA,mkB,6DCAA,oR,6DCAA,mwB,6DCAA,of,6DCAA,oZ,6DCAA,ssF,6DCAA,muC,6DCAA,2xB,6DCAA,+Z,6DCAA,kpB,6DCAA,20B,6DCAA,6jC,6DCAA,2jD,6DCAA,w8B,6DCAA,u/C,6DCAA,0qE,6DCAA,6e,6DCAA,0J,6DCAA,66H,6DCAA,4hB,6DCAA,uhC,6DCAA,oY,4DCAA,yjB,6DCAA,y3B,6DCAA,+nC,6DCAA,87C,6DCAA,slE,6DCAA,woB,6DCAA,iE,6DCAA,qzG,6DCAA,ghE,6DCAA,8hB,6DCAA,8H,6DCAA,myB,6DCAA,6yB,6DCAA,q1E,6DCAA,yS,6DCAA,8U,6DCAA,iR,6DCAA,0/I,6DCAA,2R,6DCAA,4F,6DCAA,oS,6DCAA,y3H,4DCAA,w3V,6DCAA,kX,6DCAA,6zB,6DCAA,yrB,6DCAA,g3C,6DCAA,0Q,6DCAA,0C,6DCAA,qjK,6DCAA,o0L,6DCAA,q4F,6DCAA,qoG,6DCAA,+tK,6DCAA,oxD,6DCAA,0xE,6DCAA,wmB,6DCAA,ga,6DCAA,6pB,6DCAA,y2B,6DCAA,0kB,6DCAA,8iB,6DCAA,q1I,6DCAA,8kO,4DCAA,62G,6DCAA,wH,6DCAA,ulD,6DCAA,06C,6DCAA,u9B,6DCAA,4uD,6DCAA,mvE,6DCAA,iY,6DCAA,8jB,6DCAA,i0B,6DCAA,yL,6DCAA,qV,6DCAA,6R,6DCAA,q6E,6DCAA,0T,6DCAA,2d,6DCAA,46B,6DCAA,4X,6DCAA,+e,6DCAA,gsD,6DCAA,oQ,4DCAA,4Z,6DCAA,ygD,6DCAA,4mB,6DCAA,u6D,6DCAA,slB,6DCAA,sgD,6DCAA,2F,6DCAA,+hE,6DCAA,kX,4DCAA,kH,6DCAA,ouG,6DCAA,+mC,6DCAA,g7B,6DCAA,u0B,6DCAA,ggC,6DCAA,+3B,6DCAA,iuC,6DCAA,o3B,6DCAA,ogC,6DCAA,88B,6DCAA,g3B,6DCAA,soC,6DCAA,ytC,6DCAA,0pC,6DCAA,k8B,6DCAA,qpC,6DCAA,qnD,6DCAA,qiC,6DCAA,m9B,4DCAA,s6B,6DCAA,koC,6DCAA,s7B,6DCAA,ioC,6DCAA,o3B,6DCAA,qrB,6DCAA,uoB,6DCAA,2hB,6DCAA,2iB,6DCAA,2nB,6DCAA,yjB,6DCAA,6sB,6DCAA,qsB,6DCAA,uuB,6DCAA,utB,6DCAA,8vB,6DCAA,ovB,6DCAA,ixB,6DCAA,2vB,6DCAA,gwC,6DCAA,i8B,6DCAA,w0B,4DCAA,izB,6DCAA,o3B,6DCAA,klB,6DCAA,0uB,6DCAA,yxB,6DCAA,k+B,6DCAA,6lC,6DCAA,01B,6DCAA,6tC,6DCAA,wyB,6DCAA,2uB,6DCAA,isB,6DCAA,mqB,6DCAA,q/B,4DCAA,ktB,6DCAA,6pB,6DCAA,8/B,6DCAA,84B,6DCAA,mjB,6DCAA,ovB,6DCAA,woB,6DCAA,iqB,6DCAA,kpB,6DCAA,k0B,4DCAA,ynB,6DCAA,4sB,4DCAA,wwC,6DCAA,22B,6DCAA,gwB,6DCAA,ixB,6DCAA,knB,6DCAA,wiC,6DCAA,igC,6DCAA,kiD,6DCAA,+xB,6DCAA,64E,6DCAA,0hC,6DCAA,+3B,6DCAA,s8B,4DCAA,w0F,6DCAA,0gB,6DCAA,+8B,6DCAA,myB,6DCAA,kqB,4DCAA,krD,6DCAA,s2B,6DCAA,8uB,6DCAA,+oC,6DCAA,0zB,6DCAA,y5B,6DCAA,wtB,6DCAA,w2B,6DCAA,yzB,6DCAA,i2B,6DCAA,m3B,6DCAA,u7B,4DCAA,wgC,4DCAA,24B,6DCAA,+9C,4DCAA,y+B,6DCAA,mgC,6DCAA,k4B,4DCAA,i4C,4DCAA,8rB,6DCAA,svB,6DCAA,ogB,6DCAA,yoB,6DCAA,61C,6DCAA,6hB,6DCAA,qvB,6DCAA,07B,6DCAA,gvB,6DCAA,i8B,4DCAA,k6B,6DCAA,2f,6DCAA,+4B,6DCAA,ikC,6DCAA,qpB,6DCAA,wuB,6DCAA,gmB,6DCAA,6xL,6DCAA,68B,6DCAA,o8C,6DCAA,o4B,6DCAA,wtC,6DCAA,ktC,6DCAA,y9B,6DCAA,2oB,6DCAA,uwB,4DCAA,2kC,6DCAA,m6B,2DCAA,0uB,4DCAA,inC,4DCAA,q7B,6DCAA,2tB,6DCAA,k5B,6DCAA,0nB,6DCAA,6qB,6DCAA,4uB,4DCAA,4hB,6DCAA,u6B,6DCAA,g3D,4DCAA,6mD,6DCAA,y4C,6DCAA,6lC,6DCAA,8wB,6DCAA,86Q,6DCAA,07V,6DCAA,uN,6DCAA,2hf,YCAAC,EAAOC,QAAU,CAAC,oBAAoB,CAAC,MAAQ,CAAC,CAAC,UAAY,CAAC,6GAA6G,mBAAmB,CAAC,6HAA6H,CAAC,UAAY,CAAC,0GAA0G,mBAAmB,CAAC,wHAAwH,CAAC,UAAY,CAAC,wHAAwH,mBAAmB,CAAC,sIAAsI,CAAC,UAAY,CAAC,gIAAgI,mBAAmB,CAAC,oJAAoJ,CAAC,UAAY,CAAC,4HAA4H,mBAAmB,CAAC,0IAA0I,CAAC,UAAY,CAAC,8GAA8G,mBAAmB,CAAC,sIAAsI,CAAC,UAAY,CAAC,mHAAmH,mBAAmB,CAAC,iIAAiI,CAAC,UAAY,CAAC,6GAA6G,mBAAmB,CAAC,2HAA2H,CAAC,UAAY,CAAC,6HAA6H,mBAAmB,CAAC,2IAA2I,CAAC,UAAY,CAAC,uGAAuG,mBAAmB,CAAC,qHAAqH,CAAC,UAAY,CAAC,2GAA2G,m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,aAAc,OACdC,YAAa,CAAC,OAAQ,YAAa,SAAU,SAAU,OAAQ,SAE/DC,YAAa,CACTC,IAAK,kwUACLC,IAAK,s6JACLC,KAAM,wyOAGVC,WAAY,CACRC,MAAO,CACH,YACA,aACA,cACA,YACA,gBACA,aACA,2BACA,qBACA,cAEJC,MAAO,CACH,cACA,YACA,YACA,YACA,aACA,YACA,yBACA,+BACA,eACA,iBACA,iBACA,yBACA,iBACA,aACA,eAEJC,MAAO,CACH,aACA,YACA,YACA,kBACA,aACA,iBACA,cACA,aACA,eAEJC,SAAU,CACN,WACA,WACA,WACA,YACA,6BACA,aACA,WACA,WACA,gBACA,sCACA,kBACA,0CACA,8CACA,sBAEJC,IAAK,CACD,mBAEJC,MAAO,CACH,iDACA,4BAEJC,QAAS,CACL,kBACA,mBACA,+BACA,oBACA,+BAEJC,aAAc,CACV,gCACA,oDAIRC,UAAW,CACP,GAAM,UACN,QAAS,UACT,QAAS,eACT,QAAS,aACT,QAAS,YACT,QAAS,WACT,QAAS,SACT,QAAS,UACT,QAAS,UACT,QAAS,QACT,QAAS,UACT,QAAS,WACT,MAAS,wBACT,QAAS,UACT,QAAS,QACT,QAAS,QACT,QAAS,QACT,SAAU,WACV,QAAS,WACT,QAAS,UACT,GAAM,QACN,QAAS,SACT,QAAS,WACT,QAAS,SACT,QAAS,UACT,QAAS,mBACT,QAAS,WACT,QAAS,WACT,QAAS,MACT,QAAS,UACT,SAAU,mBACV,QAAS,MACT,QAAS,QACT,QAAS,WACT,QAAS,SACT,QAAS,gBACT,QAAS,WACT,QAAS,aACT,QAAS,SACT,QAAS,QACT,QAAS,gBACT,QAAS,iBACT,QAAS,SACT,QAAS,aACT,QAAS,kBACT,QAAS,UACT,QAAS,mBACT,QAAS,SACT,QAAS,wBACT,QAAS,YACT,SAAU,SACV,QAAS,SACT,QAAS,UACT,SAAU,QACV,QAAS,QACT,QAAS,aACT,QAAS,cACT,QAAS,QACT,aAAc,yBACd,QAAS,kBACT,QAAS,UACT,QAAS,YACT,QAAS,QACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,SAA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K,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAC5+I,iBAAoB,CAAC,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,MAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,MAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IACtkF,mBAAsB,CAAC,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,MAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IACzzF,gBAAmB,CAAC,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IACp7E,kBAAqB,CAAC,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,MAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,MAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAC5tJ,OAAU,CAAC,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,MAAOsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAA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K,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,MAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAA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G,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAA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,GAAG,GAAK,EAAE,GAAK,GAAG,aAAa,EAAE,QAAQ,GAAG,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,SAAS,EAAE,GAAK,GAAG,GAAK,GAAG,GAAK,EAAE,GAAK,GAAG,GAAK,EAAE,QAAQ,GAAG,QAAQ,GAAG,GAAK,QAAuF,KAAnD,OAAsB8yB,GAA6B,6B,iBCArvB,IAAIjzB,EAAM,CACT,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,IAED,cAAe,CACd,MACA,IAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,IACA,KAED,UAAW,CACV,MACA,MAED,cAAe,CACd,MACA,MAED,aAAc,CACb,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,KAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,MACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,c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","sources":["webpack://xabber.web/webpack/runtime/chunk loaded","webpack://xabber.web/webpack/runtime/create fake namespace object","webpack://xabber.web/webpack/runtime/load script","webpack://xabber.web/./templates/accounts/account_settings_modal.html","webpack://xabber.web/./templates/accounts/add_account.html","webpack://xabber.web/./templates/accounts/audio_file_waveform.html","webpack://xabber.web/./templates/accounts/avatars_gallery.html","webpack://xabber.web/./templates/accounts/change_account_password.html","webpack://xabber.web/./templates/accounts/change_password.html","webpack://xabber.web/./templates/accounts/change_status.html","webpack://xabber.web/./templates/accounts/current_token_item_modal.html","webpack://xabber.web/./templates/accounts/delete_files_media_gallery.html","webpack://xabber.web/./templates/accounts/emoji_panel.html","webpack://xabber.web/./templates/accounts/emoji_picker.html","webpack://xabber.web/./templates/accounts/emoji_picker_tabs.html","webpack://xabber.web/./templates/accounts/existing_groupchat_item.html","webpack://xabber.web/./templates/accounts/global_settings_item_modal.html","webpack://xabber.web/./templates/accounts/media_gallery_account.html","webpack://xabber.web/./templates/accounts/media_gallery_account_file.html","webpack://xabber.web/./templates/accounts/resource.html","webpack://xabber.web/./templates/accounts/resource_right.html","webpack://xabber.web/./templates/accounts/single_account_settings_modal.html","webpack://xabber.web/./templates/accounts/status_message_input_widget.html","webpack://xabber.web/./templates/accounts/token_item_modal.html","webpack://xabber.web/./templates/accounts/toolbar_item.html","webpack://xabber.web/./templates/accounts/unregister_account.html","webpack://xabber.web/./templates/accounts/webcam_panel.html","webpack://xabber.web/./templates/accounts/xmpp_login.html","webpack://xabber.web/./templates/base/about.html","webpack://xabber.web/./templates/base/backgrounds_gallery.html","webpack://xabber.web/./templates/base/color_picker.html","webpack://xabber.web/./templates/base/color_scheme.html","webpack://xabber.web/./templates/base/dialog.html","webpack://xabber.web/./templates/base/fingerprint_devices_item.html","webpack://xabber.web/./templates/base/fingerprint_item.html","webpack://xabber.web/./templates/base/fingerprints.html","webpack://xabber.web/./templates/base/fingerprints_devices.html","webpack://xabber.web/./templates/base/input_widget.html","webpack://xabber.web/./templates/base/jingle_message_calling.html","webpack://xabber.web/./templates/base/omemo_enable.html","webpack://xabber.web/./templates/base/plyr_player_popup.html","webpack://xabber.web/./templates/base/setting_emoji_font_radio_input.html","webpack://xabber.web/./templates/base/setting_language_radio_input.html","webpack://xabber.web/./templates/base/setting_radio_input.html","webpack://xabber.web/./templates/base/settings.html","webpack://xabber.web/./templates/base/settings_modal.html","webpack://xabber.web/./templates/base/toolbar.html","webpack://xabber.web/./templates/chats/add_chat_account_item.html","webpack://xabber.web/./templates/chats/chat_bottom.html","webpack://xabber.web/./templates/chats/chat_content.html","webpack://xabber.web/./templates/chats/chat_content_contact.html","webpack://xabber.web/./templates/chats/chat_content_placeholder.html","webpack://xabber.web/./templates/chats/chat_head.html","webpack://xabber.web/./templates/chats/chat_item.html","webpack://xabber.web/./templates/chats/chat_placeholder.html","webpack://xabber.web/./templates/chats/chats_panel.html","webpack://xabber.web/./templates/chats/checkbox.html","webpack://xabber.web/./templates/chats/content_encryption_warning.html","webpack://xabber.web/./templates/chats/encryption_warning.html","webpack://xabber.web/./templates/chats/ephemeral_timer_selector.html","webpack://xabber.web/./templates/chats/export_history.html","webpack://xabber.web/./templates/chats/forward_panel.html","webpack://xabber.web/./templates/chats/group_chats/add_group_chat.html","webpack://xabber.web/./templates/chats/group_chats/invitation_panel_view.html","webpack://xabber.web/./templates/chats/group_chats/mention_item.html","webpack://xabber.web/./templates/chats/group_chats/pinned_message_panel.html","webpack://xabber.web/./templates/chats/location_popup.html","webpack://xabber.web/./templates/chats/message_item.html","webpack://xabber.web/./templates/chats/messages/attached_file.html","webpack://xabber.web/./templates/chats/messages/audio_file.html","webpack://xabber.web/./templates/chats/messages/audio_file_waveform.html","webpack://xabber.web/./templates/chats/messages/auth_request.html","webpack://xabber.web/./templates/chats/messages/file.html","webpack://xabber.web/./templates/chats/messages/file_loading.html","webpack://xabber.web/./templates/chats/messages/file_upload.html","webpack://xabber.web/./templates/chats/messages/forwarded.html","webpack://xabber.web/./templates/chats/messages/group_request.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-2.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-3.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-4.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-5.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-6.html","webpack://xabber.web/./templates/chats/messages/images_details.html","webpack://xabber.web/./templates/chats/messages/link_reference.html","webpack://xabber.web/./templates/chats/messages/link_reference_chat.html","webpack://xabber.web/./templates/chats/messages/loading_circle.html","webpack://xabber.web/./templates/chats/messages/location.html","webpack://xabber.web/./templates/chats/messages/main.html","webpack://xabber.web/./templates/chats/messages/saved_main.html","webpack://xabber.web/./templates/chats/messages/searched.html","webpack://xabber.web/./templates/chats/messages/system.html","webpack://xabber.web/./templates/chats/messages/template-for-2.html","webpack://xabber.web/./templates/chats/messages/template-for-3.html","webpack://xabber.web/./templates/chats/messages/template-for-4.html","webpack://xabber.web/./templates/chats/messages/template-for-5.html","webpack://xabber.web/./templates/chats/messages/template-for-6.html","webpack://xabber.web/./templates/chats/messages/video.html","webpack://xabber.web/./templates/chats/messages/voice_message.html","webpack://xabber.web/./templates/chats/saved_chat_head.html","webpack://xabber.web/./templates/chats/send_media.html","webpack://xabber.web/./templates/chats/subscription_buttons.html","webpack://xabber.web/./templates/chats/unread_marker.html","webpack://xabber.web/./templates/contacts/account_roster_left.html","webpack://xabber.web/./templates/contacts/account_roster_right.html","webpack://xabber.web/./templates/contacts/add_contact.html","webpack://xabber.web/./templates/contacts/add_contact_account_item.html","webpack://xabber.web/./templates/contacts/audio_file_waveform.html","webpack://xabber.web/./templates/contacts/contact_blocked_item.html","webpack://xabber.web/./templates/contacts/contact_details_right.html","webpack://xabber.web/./templates/contacts/contact_left_item.html","webpack://xabber.web/./templates/contacts/contact_placeholder.html","webpack://xabber.web/./templates/contacts/contact_right_item.html","webpack://xabber.web/./templates/contacts/edit_contact.html","webpack://xabber.web/./templates/contacts/edit_group.html","webpack://xabber.web/./templates/contacts/group_chats/add_blocked_participant_form.html","webpack://xabber.web/./templates/contacts/group_chats/badge_edit_view.html","webpack://xabber.web/./templates/contacts/group_chats/default_restrictions.html","webpack://xabber.web/./templates/contacts/group_chats/default_restrictions_right.html","webpack://xabber.web/./templates/contacts/group_chats/description_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/file_item.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_details.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_details_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties_edit.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_member_item.html","webpack://xabber.web/./templates/contacts/group_chats/group_member_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_name_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/group_status.html","webpack://xabber.web/./templates/contacts/group_chats/group_status_right.html","webpack://xabber.web/./templates/contacts/group_chats/invitation.html","webpack://xabber.web/./templates/contacts/group_chats/invited_member_item.html","webpack://xabber.web/./templates/contacts/group_chats/participant_badge_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_item.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_right.html","webpack://xabber.web/./templates/contacts/group_chats/participant_rights.html","webpack://xabber.web/./templates/contacts/group_chats/participants.html","webpack://xabber.web/./templates/contacts/group_chats/participants_right_panel.html","webpack://xabber.web/./templates/contacts/group_chats/pinned_message.html","webpack://xabber.web/./templates/contacts/group_chats/private_participant_details.html","webpack://xabber.web/./templates/contacts/group_chats/private_participant_details_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/restriction_item.html","webpack://xabber.web/./templates/contacts/group_chats/right_expire_variants.html","webpack://xabber.web/./templates/contacts/group_chats/set_status.html","webpack://xabber.web/./templates/contacts/group_chats/status_item.html","webpack://xabber.web/./templates/contacts/group_left.html","webpack://xabber.web/./templates/contacts/group_right.html","webpack://xabber.web/./templates/contacts/group_settings.html","webpack://xabber.web/./templates/contacts/groups.html","webpack://xabber.web/./templates/contacts/groups_checkbox_list.html","webpack://xabber.web/./templates/contacts/groups_checkbox_list_contact.html","webpack://xabber.web/./templates/contacts/groups_list.html","webpack://xabber.web/./templates/contacts/groups_new_group.html","webpack://xabber.web/./templates/contacts/media_item.html","webpack://xabber.web/./templates/contacts/media_items_empty.html","webpack://xabber.web/./templates/contacts/preloader.html","webpack://xabber.web/./templates/contacts/roster_left.html","webpack://xabber.web/./templates/contacts/roster_right.html","webpack://xabber.web/./templates/contacts/roster_settings.html","webpack://xabber.web/./templates/mentions/mention_item.html","webpack://xabber.web/./templates/mentions/mentions_panel.html","webpack://xabber.web/./templates/mentions/mentions_placeholder.html","webpack://xabber.web/./templates/searching/existing_groupchat_details_view.html","webpack://xabber.web/./templates/searching/existing_groupchat_item.html","webpack://xabber.web/./templates/searching/searching_account_item.html","webpack://xabber.web/./templates/searching/searching_wide.html","webpack://xabber.web/./templates/svg/account-cancel.html","webpack://xabber.web/./templates/svg/account-outline.html","webpack://xabber.web/./templates/svg/account.html","webpack://xabber.web/./templates/svg/address-outline.html","webpack://xabber.web/./templates/svg/address.html","webpack://xabber.web/./templates/svg/alarm-bell.html","webpack://xabber.web/./templates/svg/alert-circle.html","webpack://xabber.web/./templates/svg/bell-off.html","webpack://xabber.web/./templates/svg/bell-sleep.html","webpack://xabber.web/./templates/svg/bell.html","webpack://xabber.web/./templates/svg/birthday-outline.html","webpack://xabber.web/./templates/svg/birthday.html","webpack://xabber.web/./templates/svg/blocked-add.html","webpack://xabber.web/./templates/svg/blocked.html","webpack://xabber.web/./templates/svg/bot-variant.html","webpack://xabber.web/./templates/svg/bot.html","webpack://xabber.web/./templates/svg/bug.html","webpack://xabber.web/./templates/svg/call-outline.html","webpack://xabber.web/./templates/svg/call.html","webpack://xabber.web/./templates/svg/camera-retake.html","webpack://xabber.web/./templates/svg/camera.html","webpack://xabber.web/./templates/svg/cancel.html","webpack://xabber.web/./templates/svg/channel.html","webpack://xabber.web/./templates/svg/chat.html","webpack://xabber.web/./templates/svg/check-circle.html","webpack://xabber.web/./templates/svg/check.html","webpack://xabber.web/./templates/svg/chevron-down.html","webpack://xabber.web/./templates/svg/chevron-left-variant.html","webpack://xabber.web/./templates/svg/chevron-right-variant.html","webpack://xabber.web/./templates/svg/circle-slice-1.html","webpack://xabber.web/./templates/svg/circle-slice-2.html","webpack://xabber.web/./templates/svg/circle-slice-3.html","webpack://xabber.web/./templates/svg/circle-slice-4.html","webpack://xabber.web/./templates/svg/circle-slice-5.html","webpack://xabber.web/./templates/svg/circle-slice-6.html","webpack://xabber.web/./templates/svg/circle-slice-7.html","webpack://xabber.web/./templates/svg/circle-slice-8.html","webpack://xabber.web/./templates/svg/circles-outline.html","webpack://xabber.web/./templates/svg/circles.html","webpack://xabber.web/./templates/svg/client-outline.html","webpack://xabber.web/./templates/svg/client.html","webpack://xabber.web/./templates/svg/clock-outline.html","webpack://xabber.web/./templates/svg/close.html","webpack://xabber.web/./templates/svg/cloud.html","webpack://xabber.web/./templates/svg/contact-add.html","webpack://xabber.web/./templates/svg/crosshairs-gps.html","webpack://xabber.web/./templates/svg/crosshairs-question.html","webpack://xabber.web/./templates/svg/crosshairs.html","webpack://xabber.web/./templates/svg/database-lock.html","webpack://xabber.web/./templates/svg/database.html","webpack://xabber.web/./templates/svg/description-outline.html","webpack://xabber.web/./templates/svg/description.html","webpack://xabber.web/./templates/svg/device-cellphone.html","webpack://xabber.web/./templates/svg/device-console.html","webpack://xabber.web/./templates/svg/device-desktop.html","webpack://xabber.web/./templates/svg/device-tablet.html","webpack://xabber.web/./templates/svg/device-web.html","webpack://xabber.web/./templates/svg/devices.html","webpack://xabber.web/./templates/svg/download.html","webpack://xabber.web/./templates/svg/edit-outline.html","webpack://xabber.web/./templates/svg/edit.html","webpack://xabber.web/./templates/svg/email-outline.html","webpack://xabber.web/./templates/svg/email.html","webpack://xabber.web/./templates/svg/expires.html","webpack://xabber.web/./templates/svg/file-audio.html","webpack://xabber.web/./templates/svg/file-document.html","webpack://xabber.web/./templates/svg/file-pdf.html","webpack://xabber.web/./templates/svg/file-presentation.html","webpack://xabber.web/./templates/svg/file-video.html","webpack://xabber.web/./templates/svg/file-zip.html","webpack://xabber.web/./templates/svg/file.html","webpack://xabber.web/./templates/svg/fullname-outline.html","webpack://xabber.web/./templates/svg/fullname.html","webpack://xabber.web/./templates/svg/group-incognito.html","webpack://xabber.web/./templates/svg/group-invite.html","webpack://xabber.web/./templates/svg/group-private.html","webpack://xabber.web/./templates/svg/group-public.html","webpack://xabber.web/./templates/svg/history.html","webpack://xabber.web/./templates/svg/ic-at.html","webpack://xabber.web/./templates/svg/ic-jabber.html","webpack://xabber.web/./templates/svg/ic-searching.html","webpack://xabber.web/./templates/svg/id-outline.html","webpack://xabber.web/./templates/svg/id.html","webpack://xabber.web/./templates/svg/image.html","webpack://xabber.web/./templates/svg/index.html","webpack://xabber.web/./templates/svg/information-outline.html","webpack://xabber.web/./templates/svg/information.html","webpack://xabber.web/./templates/svg/invite-outline.html","webpack://xabber.web/./templates/svg/invite.html","webpack://xabber.web/./templates/svg/job-outline.html","webpack://xabber.web/./templates/svg/job.html","webpack://xabber.web/./templates/svg/key-variant.html","webpack://xabber.web/./templates/svg/key.html","webpack://xabber.web/./templates/svg/link.html","webpack://xabber.web/./templates/svg/lock-alert.html","webpack://xabber.web/./templates/svg/lock-check.html","webpack://xabber.web/./templates/svg/lock-cross.html","webpack://xabber.web/./templates/svg/lock-open.html","webpack://xabber.web/./templates/svg/lock-question.html","webpack://xabber.web/./templates/svg/lock.html","webpack://xabber.web/./templates/svg/map-marker-outline.html","webpack://xabber.web/./templates/svg/map-marker.html","webpack://xabber.web/./templates/svg/membership-outline.html","webpack://xabber.web/./templates/svg/message-bookmark-outline.html","webpack://xabber.web/./templates/svg/message-group.html","webpack://xabber.web/./templates/svg/minus.html","webpack://xabber.web/./templates/svg/mobile.html","webpack://xabber.web/./templates/svg/palette.html","webpack://xabber.web/./templates/svg/pause.html","webpack://xabber.web/./templates/svg/picture-in-picture-bottom-right.html","webpack://xabber.web/./templates/svg/picture-in-picture-minimize.html","webpack://xabber.web/./templates/svg/picture-in-picture-top-right.html","webpack://xabber.web/./templates/svg/pinned-circle-small.html","webpack://xabber.web/./templates/svg/pinned.html","webpack://xabber.web/./templates/svg/play.html","webpack://xabber.web/./templates/svg/player-float.html","webpack://xabber.web/./templates/svg/player-full.html","webpack://xabber.web/./templates/svg/player-mini-variant.html","webpack://xabber.web/./templates/svg/player-mini.html","webpack://xabber.web/./templates/svg/plus.html","webpack://xabber.web/./templates/svg/plyr.html","webpack://xabber.web/./templates/svg/qrcode.html","webpack://xabber.web/./templates/svg/restrictions-outline.html","webpack://xabber.web/./templates/svg/rss-variant.html","webpack://xabber.web/./templates/svg/rss.html","webpack://xabber.web/./templates/svg/saved-messages.html","webpack://xabber.web/./templates/svg/search.html","webpack://xabber.web/./templates/svg/security.html","webpack://xabber.web/./templates/svg/server.html","webpack://xabber.web/./templates/svg/star-face.html","webpack://xabber.web/./templates/svg/status-outline.html","webpack://xabber.web/./templates/svg/status.html","webpack://xabber.web/./templates/svg/subscription-from.html","webpack://xabber.web/./templates/svg/subscription-to.html","webpack://xabber.web/./templates/svg/task.html","webpack://xabber.web/./templates/svg/translate.html","webpack://xabber.web/./templates/svg/trash.html","webpack://xabber.web/./templates/svg/video.html","webpack://xabber.web/./templates/svg/volume-high.html","webpack://xabber.web/./templates/svg/volume-off-variant.html","webpack://xabber.web/./templates/svg/volume-off.html","webpack://xabber.web/./templates/svg/web-cancel.html","webpack://xabber.web/./templates/svg/web.html","webpack://xabber.web/./templates/svg/xabber-offline.html","webpack://xabber.web/./templates/svg/xabber-online.html","webpack://xabber.web/./templates/svg/xmpp.html","webpack://xabber.web/./templates/vcard/vcard.html","webpack://xabber.web/./templates/vcard/vcard_edit_modal.html","webpack://xabber.web/./templates/vcard/vcard_modal.html","webpack://xabber.web/./templates/vcard/vcard_right.html","webpack://xabber.web/./xmls/background-images.xml","webpack://xabber.web/./xmls/background-patterns.xml","webpack://xabber.web/./sounds/attention/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./sounds/dialtones/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./sounds/notifications/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./sounds/ringtones/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./sounds/system/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./src/constants.js","webpack://xabber.web/./src/dependencies.js","webpack://xabber.web/./src/templates.js","webpack://xabber.web/./src/sounds.js","webpack://xabber.web/./src/utils/emoji.js","webpack://xabber.web/./src/utils/images.js","webpack://xabber.web/./src/utils/modals.js","webpack://xabber.web/./src/utils/textarea.js","webpack://xabber.web/./src/utils/utils.js","webpack://xabber.web/./src/environment.js","webpack://xabber.web/./src/core.js","webpack://xabber.web/./src/views.js","webpack://xabber.web/./src/api-service.js","webpack://xabber.web/./src/strophe.js","webpack://xabber.web/./src/vcard.js","webpack://xabber.web/./src/accounts.js","webpack://xabber.web/./src/discovery.js","webpack://xabber.web/./src/contacts.js","webpack://xabber.web/./src/chats.js","webpack://xabber.web/./src/searching.js","webpack://xabber.web/./src/mentions.js","webpack://xabber.web/./src/ui.js","webpack://xabber.web/./src/omemo.js","webpack://xabber.web/./src/xabber.js","webpack://xabber.web/./templates/ sync ^\\.\\/.*\\.json$","webpack://xabber.web/ ^\\.\\/.*\\.html$","webpack://xabber.web/./translations/translation_progress.js","webpack://xabber.web/./translations/ lazy ^\\.\\/.*\\.js$ namespace object","webpack://xabber.web/./version.js","webpack://xabber.web/webpack/bootstrap","webpack://xabber.web/webpack/runtime/amd options","webpack://xabber.web/webpack/runtime/compat get default export","webpack://xabber.web/webpack/runtime/define property getters","webpack://xabber.web/webpack/runtime/ensure chunk","webpack://xabber.web/webpack/runtime/get javascript chunk filename","webpack://xabber.web/webpack/runtime/get mini-css chunk filename","webpack://xabber.web/webpack/runtime/global","webpack://xabber.web/webpack/runtime/harmony module decorator","webpack://xabber.web/webpack/runtime/hasOwnProperty shorthand","webpack://xabber.web/webpack/runtime/make namespace object","webpack://xabber.web/webpack/runtime/node module decorator","webpack://xabber.web/webpack/runtime/publicPath","webpack://xabber.web/webpack/runtime/jsonp chunk loading","webpack://xabber.web/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"xabber.web:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t};\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","export default \"<div class=\\\"background-overlay\\\"></div>\\n<div class=\\\"settings-panel\\\">\\n    <div class=\\\"settings-transition-wrap\\\">\\n        <div class=\\\"left-column settings-column noselect\\\">\\n            <div class=\\\"settings-account-head\\\">\\n                <i class=\\\"btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <div class=\\\"name one-line\\\"></div>\\n                <svg class=\\\"btn-color-picker dropdown-button mdi mdi-24px mdi-svg-template\\\" data-activates=\\\"color-picker-dropdown\\\" data-svgname=\\\"palette\\\"></svg>\\n                <ul id=\\\"color-picker-dropdown\\\" class=\\\"dropdown-content color-picker-dropdown bootstrap-dropdown noselect\\\">\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"red\\\">\\n                        <span class=\\\"one-line text-color-red-700\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"pink\\\">\\n                        <span class=\\\"one-line text-color-pink-700\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"purple\\\">\\n                        <span class=\\\"one-line text-color-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"deep-purple\\\">\\n                        <span class=\\\"one-line text-color-deep-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"indigo\\\">\\n                        <span class=\\\"one-line text-color-indigo-700\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"blue\\\">\\n                        <span class=\\\"one-line text-color-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"light-blue\\\">\\n                        <span class=\\\"one-line text-color-light-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"cyan\\\">\\n                        <span class=\\\"one-line text-color-cyan-700\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"teal\\\">\\n                        <span class=\\\"one-line text-color-teal-700\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"green\\\">\\n                        <span class=\\\"one-line text-color-green-700\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"light-green\\\">\\n                        <span class=\\\"one-line text-color-light-green-700\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"lime\\\">\\n                        <span class=\\\"one-line text-color-lime-700\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"amber\\\">\\n                        <span class=\\\"one-line text-color-amber-700\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"orange\\\">\\n                        <span class=\\\"one-line text-color-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"deep-orange\\\">\\n                        <span class=\\\"one-line text-color-deep-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"brown\\\">\\n                        <span class=\\\"one-line text-color-brown-700\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"blue-grey\\\">\\n                        <span class=\\\"one-line text-color-blue-grey-700\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                </ul>\\n                <svg class=\\\"btn-qr-code mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n                <div class=\\\"field clickable-field enabled-state switch normal\\\">\\n                    <label class=\\\"field-value\\\">\\n                        <input type=\\\"checkbox\\\">\\n                        <span class=\\\"lever\\\"></span>\\n                    </label>\\n                </div>\\n            </div>\\n            <div class=\\\"main-info-wrap account-main-info-wrap\\\">\\n                <div class=\\\"picture-wrap\\\">\\n                    <div class=\\\"avatar-wrap\\\">\\n                        <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                            <img/>\\n                            <input type=\\\"file\\\"/>\\n                            <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown dropdown-content noselect\\\">\\n                                <div class=\\\"btn-emoji-panel property-variant\\\">\\n                                    {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                                </div>\\n                                <div class=\\\"btn-selfie property-variant\\\">\\n                                    {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                                </div>\\n                                <div class=\\\"btn-choose-image property-variant\\\">\\n                                    {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                                </div>\\n                            </ul>\\n                            <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                                <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                            </svg>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"name one-line\\\"></div>\\n                <div class=\\\"jid one-line\\\"></div>\\n            </div>\\n            <div class=\\\"settings-tabs-wrap\\\">\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"profile\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__profile_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"media-gallery\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cloud\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"encryption\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption\\\"))]}</div>\\n                    <div class=\\\"settings-block-label hidden label-encryption-enabled one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_enabled_label\\\"))]}</div>\\n                    <div class=\\\"settings-block-label label-encryption-disabled one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_disabled_label\\\"))]}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"devices-wrap hidden\\\">\\n                <div class=\\\"device-encryption-warning hidden\\\" data-not-trusted-count=\\\"0\\\">\\n                    <svg class=\\\"device-encryption-icon mdi mdi-40px mdi-svg-template\\\" data-svgname=\\\"alert-circle\\\"></svg>\\n                    <div class=\\\"device-encryption-warning-name one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_warning_header\\\"))]}</div>\\n                    <div class=\\\"device-encryption-warning-label\\\"></div>\\n                </div>\\n                <div class=\\\"tokens-wrap\\\">\\n                    <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings_account__label_this_device\\\"))]}</div>\\n                    <div class=\\\"current-token-wrap\\\">\\n                        <div class=\\\"sessions-wrap current-session selectable-text\\\"></div>\\n                        <div class=\\\"btn-revoke-all-tokens settings-button-devices\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"restrictions-outline\\\"></svg>\\n                            <div class=\\\"settings-button-devices-label\\\">{[print(xabber.getString(\\\"account_terminate_all_sessions\\\"))]}</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-panel-label active-sessions-label\\\">{[print(xabber.getString(\\\"settings_account__label_active_sessions\\\"))]}</div>\\n                    <div class=\\\"all-sessions-wrap\\\">\\n                        <div class=\\\"sessions-wrap all-sessions selectable-text\\\"></div>\\n                    </div>\\n                    <div class=\\\"orphaned-fingerprints hidden\\\">\\n                        <div class=\\\"orphaned-fingerprints-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__legacy_encryption_label\\\"))]}</div>\\n                        <div class=\\\"orphaned-fingerprints-wrap selectable-text\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"settings-tabs-wrap\\\">\\n                <div class=\\\"settings-tab settings-deletion-button delete-account\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                    </div>\\n                    <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings_account__button_quit_account\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"right-column settings-column noselect\\\">\\n            <div class=\\\"settings-panel-head\\\">\\n                <i class=\\\"btn-back-settings mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <i class=\\\"btn-back-subsettings-account mdi mdi-24px mdi-arrow-left hidden\\\"></i>\\n                <span class=\\\"settings-panel-head-title\\\">{[print(xabber.getString(\\\"account_editor\\\"))]}</span>\\n                <i class=\\\"btn-sorting dropdown-button mdi mdi-24px mdi-sort hidden\\\" data-activates=\\\"storage-file-sorting\\\"></i>\\n                <ul id=\\\"storage-file-sorting\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n                    <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-id\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_new\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-size\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_size\\\"))]}</span>\\n                    </div>\\n                </ul>\\n                <div class=\\\"btn-more media-gallery-button dropdown-button hidden\\\" data-activates=\\\"storage-actions\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n                </div>\\n                <ul id=\\\"storage-actions\\\" class=\\\"dropdown-content noselect\\\">\\n                    <div class=\\\"property-variant btn-select-files hidden\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_select_files\\\"))]}</span>\\n                    </div>\\n                </ul>\\n            </div>\\n\\n            <div class=\\\"panel-content-wrap\\\">\\n                <div class=\\\"panel-content details-panel\\\">\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}' class=\\\"settings-block-wrap profile\\\">\\n                        <div class=\\\"settings-tabs-wrap\\\">\\n                            <div class=\\\"settings-tab settings-non-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"status\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"status\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__status_subheader\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"vcard-tab\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__edit_profile\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__edit_profile_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"password\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__password_subheader\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__password_subheader_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"blocklist\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"block_list\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"circles-groups\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles-outline\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"capabitilies\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__capabilities_subheader\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__capabilities_subheader_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab unregister-account settings-deletion-button settings-non-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"delete-account\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name settings-block-name-single one-line\\\">{[print(xabber.getString(\\\"settings_account__delete_account_subheader\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__status_subheader\\\"))]}' class=\\\"settings-block-wrap status\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"status-wrap setting\\\"></div>\\n                            <div class=\\\"status\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__edit_profile\\\"))]}' class=\\\"settings-block-wrap vcard-tab\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"vcard\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"block-list-view-wrap\\\">\\n                        <div data-header='{[print(xabber.getString(\\\"block_list\\\"))]}' data-parent-block=\\\"profile\\\" class=\\\"settings-block-wrap blocklist\\\">\\n                            <div class=\\\"settings-subblock-wrap\\\">\\n                                <div class=\\\"blocklist-info\\\">\\n                                    <div class=\\\"blocklist-wrap\\\">\\n                                        <div class=\\\"buttons-wrap\\\">\\n                                            <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tabs-wrap\\\">\\n                                <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-contacts\\\">\\n                                    <div class=\\\"setting-icon-background\\\">\\n                                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-cancel\\\"></svg>\\n                                    </div>\\n                                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_contacts\\\"))]}</div>\\n                                    <div class=\\\"settings-block-label one-line\\\"></div>\\n                                </div>\\n                                <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-domains\\\">\\n                                    <div class=\\\"setting-icon-background\\\">\\n                                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"web-cancel\\\"></svg>\\n                                    </div>\\n                                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_domains\\\"))]}</div>\\n                                    <div class=\\\"settings-block-label one-line\\\"></div>\\n                                </div>\\n                                <div class=\\\"settings-tab hidden\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-invitations\\\">\\n                                    <div class=\\\"setting-icon-background\\\">\\n                                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"invite\\\"></svg>\\n                                    </div>\\n                                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_invitations\\\"))]}</div>\\n                                    <div class=\\\"settings-block-label one-line\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_contacts\\\"))]}' data-block-name=\\\"blocklist-contacts\\\" class=\\\"settings-block-wrap blocklist-contacts\\\">\\n                            <div class=\\\"settings-subblock-wrap\\\">\\n                                <div class=\\\"blocklist-info\\\">\\n                                    <div class=\\\"blocklist-wrap\\\">\\n                                        <div class=\\\"buttons-wrap\\\">\\n                                            <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                            <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                            <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                        </div>\\n                                        <div class=\\\"blocked-items\\\">\\n                                            <div class=\\\"blocked-contacts-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_contacts_empty\\\"))]}</div>\\n                                            <div class=\\\"blocked-items-container blocked-contacts-wrap\\\" data-tab-name=\\\"contacts-item\\\">\\n                                                <div class=\\\"blocked-contacts blocked-list\\\"></div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_domains\\\"))]}' data-block-name=\\\"blocklist-domains\\\" class=\\\"settings-block-wrap blocklist-domains\\\">\\n                            <div class=\\\"settings-subblock-wrap\\\">\\n                                <div class=\\\"blocklist-info\\\">\\n                                    <div class=\\\"blocklist-wrap\\\">\\n                                        <div class=\\\"buttons-wrap\\\">\\n                                            <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                            <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                            <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                        </div>\\n                                        <div class=\\\"blocked-items\\\">\\n                                            <div class=\\\"blocked-domains-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_domains_empty\\\"))]}</div></div>\\n                                        <div class=\\\"blocked-items-container blocked-domains-wrap\\\" data-tab-name=\\\"domains-item\\\">\\n                                            <div class=\\\"blocked-domains blocked-list\\\"></div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_invitations\\\"))]}' data-block-name=\\\"blocklist-invitations\\\" class=\\\"settings-block-wrap blocklist-invitations\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"blocklist-info\\\">\\n                                <div class=\\\"blocklist-wrap\\\">\\n                                    <div class=\\\"buttons-wrap\\\">\\n                                        <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                        <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                        <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                    </div>\\n                                    <div class=\\\"blocked-items\\\">\\n                                        <div class=\\\"blocked-invitations-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_invitations_empty\\\"))]}</div>\\n                                        <div class=\\\"blocked-items-container blocked-invitations-wrap\\\" data-tab-name=\\\"invitations-item\\\">\\n                                            <div class=\\\"blocked-invitations blocked-list\\\"></div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}' class=\\\"settings-block-wrap circles-groups\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"groups-info\\\">\\n                                <div class=\\\"groups-wrap\\\">\\n                                    <div class=\\\"groups\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__capabilities_subheader\\\"))]}' class=\\\"settings-block-wrap capabitilies\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"server-info\\\">\\n                                <div class=\\\"capabilities-wrap\\\">\\n                                    <div class=\\\"capabilities\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"color\\\"))]}' class=\\\"settings-block-wrap color-scheme\\\">\\n                        <div class=\\\"color-scheme-wrap\\\">\\n                            <div class=\\\"account-color\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"red\\\" type=\\\"radio\\\" id=\\\"color-red\\\" />\\n                                            <label class=\\\"text-color-red-700\\\" for=\\\"color-red\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"pink\\\" type=\\\"radio\\\" id=\\\"color-pink\\\" />\\n                                            <label class=\\\"text-color-pink-700\\\" for=\\\"color-pink\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"purple\\\" type=\\\"radio\\\" id=\\\"color-purple\\\" />\\n                                            <label class=\\\"text-color-purple-700\\\" for=\\\"color-purple\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-purple\\\" type=\\\"radio\\\" id=\\\"color-deep-purple\\\" />\\n                                            <label class=\\\"text-color-deep-purple-700\\\" for=\\\"color-deep-purple\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"indigo\\\" type=\\\"radio\\\" id=\\\"color-indigo\\\" />\\n                                            <label class=\\\"text-color-indigo-700\\\" for=\\\"color-indigo\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue\\\" type=\\\"radio\\\" id=\\\"color-blue\\\" />\\n                                            <label class=\\\"text-color-blue-700\\\" for=\\\"color-blue\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-blue\\\" type=\\\"radio\\\" id=\\\"color-light-blue\\\" />\\n                                            <label class=\\\"text-color-light-blue-700\\\" for=\\\"color-light-blue\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"cyan\\\" type=\\\"radio\\\" id=\\\"color-cyan\\\" />\\n                                            <label class=\\\"text-color-cyan-700\\\" for=\\\"color-cyan\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"teal\\\" type=\\\"radio\\\" id=\\\"color-teal\\\" />\\n                                            <label class=\\\"text-color-teal-700\\\" for=\\\"color-teal\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"green\\\" type=\\\"radio\\\" id=\\\"color-green\\\" />\\n                                            <label class=\\\"text-color-green-700\\\" for=\\\"color-green\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-green\\\" type=\\\"radio\\\" id=\\\"color-light-green\\\" />\\n                                            <label class=\\\"text-color-light-green-700\\\" for=\\\"color-light-green\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"lime\\\" type=\\\"radio\\\" id=\\\"color-lime\\\" />\\n                                            <label class=\\\"text-color-lime-700\\\" for=\\\"color-lime\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"amber\\\" type=\\\"radio\\\" id=\\\"color-amber\\\" />\\n                                            <label class=\\\"text-color-amber-700\\\" for=\\\"color-amber\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"orange\\\" type=\\\"radio\\\" id=\\\"color-orange\\\" />\\n                                            <label class=\\\"text-color-orange-700\\\" for=\\\"color-orange\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-orange\\\" type=\\\"radio\\\" id=\\\"color-deep-orange\\\" />\\n                                            <label class=\\\"text-color-deep-orange-700\\\" for=\\\"color-deep-orange\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"brown\\\" type=\\\"radio\\\" id=\\\"color-brown\\\" />\\n                                            <label class=\\\"text-color-brown-700\\\" for=\\\"color-brown\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue-grey\\\" type=\\\"radio\\\" id=\\\"color-blue-grey\\\" />\\n                                            <label class=\\\"text-color-blue-grey-700\\\" for=\\\"color-blue-grey\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__encryption\\\"))]}' class=\\\"settings-block-wrap encryption\\\">\\n                        <div class=\\\"btn-more device-more-button dropdown-button\\\" data-activates=\\\"device-omemo-actions\\\">\\n                            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n                        </div>\\n                        <ul id=\\\"device-omemo-actions\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n                            <div class=\\\"property-variant btn-manage-devices\\\">\\n                                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_manage_devices\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"property-variant btn-purge-keys\\\">\\n                                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_purge_keys\\\"))]}</span>\\n                            </div>\\n                        </ul>\\n                        <div class=\\\"omemo-settings-wrap\\\">\\n                            <div class=\\\"settings\\\">\\n                                <div class=\\\"setting-wrap omemo-enable\\\">\\n                                    <span>{[print(xabber.getString(\\\"omemo__settings__toggle_enable_encryption\\\"))]}</span>\\n                                    <div class=\\\"field setting-use-omemo switch normal\\\">\\n                                        <label class=\\\"field-value\\\">\\n                                            <input type=\\\"checkbox\\\">\\n                                            <span class=\\\"lever\\\"></span>\\n                                        </label>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"setting-wrap send-chat-states\\\">\\n                                    <span>{[print(xabber.getString(\\\"omemo__settings__toggle_send_typing_notifications\\\"))]}</span>\\n                                    <div class=\\\"field setting-send-chat-states switch normal\\\">\\n                                        <label class=\\\"field-value\\\">\\n                                            <input type=\\\"checkbox\\\">\\n                                            <span class=\\\"lever\\\"></span>\\n                                        </label>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}' class=\\\"settings-block-wrap media-gallery\\\">\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__device_information\\\"))]}' class=\\\"settings-block-wrap device-information hidden\\\">\\n                        <div class=\\\"device-information-trust-text-wrap\\\">\\n                            <div class=\\\"device-information-trust-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-wrap\\\">\\n                            <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings_account__device_information\\\"))]}</div>\\n                            <div class=\\\"device-information-items-wrap device-information-basic\\\">\\n                                <div class=\\\"device-information-item device-information-status\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"status\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__status__label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-last-seen\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"history\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__status__label_last_seen\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-client\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"id\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__client__label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-ip\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__ip__label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-expires\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"expires\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__expire__label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-panel-label device-information-security-label\\\">{[print(xabber.getString(\\\"settings__menu_item__security\\\"))]}</div>\\n                            <div class=\\\"device-information-items-wrap device-information-encryption\\\">\\n                                <div class=\\\"device-information-item device-information-device-id\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"settings_account__device_information_device_id\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-fingerprint hidden\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"lock\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__fingerprint_label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text device-information-fingerprint-text\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab device-information-trust settings-deletion-button\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-alert\\\" data-svgname=\\\"lock-alert\\\"></svg>\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-check\\\" data-svgname=\\\"lock-check\\\"></svg>\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-cross\\\" data-svgname=\\\"lock-cross\\\"></svg>\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-question\\\" data-svgname=\\\"lock-question\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings_account__identity_verification\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab btn-revoke-token settings-deletion-button\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"device__info__terminate_session__button\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_add\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content login-panel-form\\\">\\n\\n        <div class=\\\"login-form-jid\\\">\\n            <div class=\\\"login-form-step-wrap\\\">\\n                <div class=\\\"input-field-wrap\\\">\\n                    <div class=\\\"input-field input-field-jid\\\">\\n                        <input id=\\\"jid\\\" placeholder='{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}' type=\\\"text\\\" name=\\\"jid\\\">\\n                        <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                            <div class=\\\"select-auth-xmpp-server\\\">\\n                                <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                                <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                                    <input id=\\\"sign_in_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"sign_in_domain\\\">\\n                                </div>\\n                                <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"caret\\\">\\n                                    <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                                    <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                                </div>\\n                            </div>\\n                            <div id=\\\"select-auth-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                                <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"input-field\\\">\\n                        <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"login-form-step-error login-jid-error hidden\\\"></div>\\n                <div class=\\\"login-form-step-error login-password-error hidden\\\"></div>\\n                <div class=\\\"login-form-step-description\\\"></div>\\n                <div class=\\\"login-step-wrap hidden\\\">\\n                    <div class=\\\"login-step connecting-step\\\">\\n                        <div class=\\\"login-step-text\\\">\\n                            {[print(xabber.getString(\\\"dialog_jingle_message__status_communicating\\\"))]}\\n                        </div>\\n                        <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                    </div>\\n                    <div class=\\\"login-step credentials-step\\\">\\n                        <div class=\\\"login-step-text\\\">\\n                            {[print(xabber.getString(\\\"dialog_jingle_message__status_checking_credentials\\\"))]}\\n                        </div>\\n                        <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"login-form-server-features hidden\\\">\\n            <div class=\\\"register-form-step-wrap\\\">\\n                <div class=\\\"register-form-step-header\\\"></div>\\n            </div>\\n            <div class=\\\"login-server-features-wrap\\\">\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.MAM)]}\\\" >\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_message_archive\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_archive_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.SYNCHRONIZATION)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_synchronization\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_quick_synchronization_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.REWRITE)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_message_editing\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_editing_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.AUTH_DEVICES)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_device_management\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_tokens_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.PUBSUB)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_publish_subscribe\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_pubsub_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.HTTP_UPLOAD)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_file_upload\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_file_upload_error'))]}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"server-features-error\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button disabled class=\\\"btn-flat btn-main btn-log-in\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main one-line hidden btn-finish-log-in\\\"></button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"library\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_library\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"library\\\" class=\\\"screen-wrap library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"hidden screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__text\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__button_upload\\\"))]}</button>\\n                <input type=\\\"file\\\">\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <div class=\\\"modal-preloader-wrap\\\"></div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span class=\\\"original-state\\\">{[print(xabber.getString(\\\"button_change_pass\\\"))]}</span>\\n        <span class=\\\"success-state hidden\\\">{[print(xabber.getString(\\\"password_changed_success\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content original-state\\\">\\n        <div class=\\\"change-password-fields\\\">\\n            <div class=\\\"block-subheader\\\">\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"hint_old_pass\\\"))]}</span>\\n            </div>\\n            <div class=\\\"change-password-field\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                <input class=\\\"input-glow account-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_old_pass\\\"))]}' id=\\\"old_password\\\" type=\\\"password\\\" name=\\\"old_password\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n            <div class=\\\"block-subheader\\\">\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"hint_new_pass\\\"))]}</span>\\n            </div>\\n            <div class=\\\"change-password-field\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key-variant\\\"></svg>\\n                <input class=\\\"input-glow account-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_new_pass\\\"))]}' id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n            <div class=\\\"change-password-field\\\">\\n                <input class=\\\"input-glow account-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_confirm_pass\\\"))]}' id=\\\"password_confirm\\\" type=\\\"password\\\" name=\\\"password_confirm\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-change btn-flat btn-main original-state\\\" disabled>{[print(xabber.getString(\\\"button_change_pass\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel btn-finish-change success-state hidden\\\">{[print(xabber.getString(\\\"ok\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel original-state\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"settings_account__dialog_change_password__header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row login-form-field\\\">\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"jid\\\" type=\\\"text\\\" class=\\\"input-glow\\\" name=\\\"jid\\\" disabled readonly>\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"password\\\" type=\\\"password\\\" class=\\\"input-glow\\\" placeholder=\\\"{[print(xabber.getString('account_password'))]}\\\" name=\\\"password\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-change\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"status_editor\\\"))]}</span>\\n    </div>\\n    <ul class=\\\"status-values noselect\\\">\\n        <li data-value=\\\"chat\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"chat\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"chat\\\"></span>\\n        </li>\\n        <li data-value=\\\"online\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"online\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"online\\\"></span>\\n        </li>\\n        <li data-value=\\\"away\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"away\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"away\\\"></span>\\n        </li>\\n        <li data-value=\\\"xa\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"xa\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"xa\\\"></span>\\n        </li>\\n        <li data-value=\\\"dnd\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"dnd\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"dnd\\\"></span>\\n        </li>\\n        <li data-value=\\\"offline\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"unavailable\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"offline\\\"></span>\\n        </li>\\n    </ul>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"input-field status-message-wrap\\\">\\n                <span class=\\\"static-label\\\">{[print(xabber.getString(\\\"dialog_status_editor__label_custom_status\\\"))]}</span>\\n                <input type=\\\"text\\\" class=\\\"status-message input-glow\\\">\\n                <i class=\\\"clear-input mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n            <div class=\\\"input-field checkbox-field no-padding\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"filled-in apply-to-all\\\" id=\\\"{{view.cid}}_apply_to_all\\\"/>\\n                <label for=\\\"{{view.cid}}_apply_to_all\\\">{[print(xabber.getString(\\\"dialog_status_editor__label_apply_to_all\\\"))]}</label>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"token-wrap settings-tab\\\" data-subblock-parent-name=\\\"devices\\\" data-block-name=\\\"device-information\\\" data-token-uid=\\\"{{token_uid}}\\\">\\n    <div class=\\\"token-icon-wrap\\\">\\n        <svg class=\\\"mdi token-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"device-web\\\"></svg>\\n    </div>\\n    <div class=\\\"token-client-wrap\\\">\\n        <div class=\\\"device one-line\\\">{{device}}</div>\\n        <div class=\\\"ip-address\\\">{{ip}}</div>\\n    </div>\\n    {[if (is_omemo) {]}\\n    <div class=\\\"device-encryption one-line active is-own\\\">\\n        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"security\\\"></svg>\\n    </div>\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"media_gallery_delete_files_header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"deletion-variants no-select\\\">\\n            <div class=\\\"delete-files-text-info\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_info_text\\\"))]}</div>\\n            <div class=\\\"property-variant btn-delete-files-percent\\\" data-value=\\\"15\\\">\\n                <svg class=\\\"percent-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circle-slice-1\\\"></svg>\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_button_15_percent\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files-percent\\\" data-value=\\\"25\\\">\\n                <svg class=\\\"percent-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circle-slice-2\\\"></svg>\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_button_25_percent\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files-percent\\\" data-value=\\\"50\\\">\\n                <svg class=\\\"percent-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circle-slice-4\\\"></svg>\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_button_50_percent\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files-percent\\\" data-value=\\\"100\\\">\\n                <svg class=\\\"percent-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circle-slice-8\\\"></svg>\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_button_100_percent\\\"))]}</span>\\n            </div>\\n        </div>\\n        <div class=\\\"media-gallery-delete-items-wrap hidden\\\">\\n            <div class=\\\"delete-files-preview-wrap media-gallery-items-wrap\\\">\\n                <div class=\\\"delete-files-text no-select\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_preview_text\\\"))]}</div>\\n                <div data-value=\\\"avatar\\\" class=\\\"setting-name header-setting no-select delete-files-avatars\\\">\\n                    {[print(xabber.getString(\\\"avatars\\\"))]}\\n                </div>\\n                <div class=\\\"gallery-files gallery-preview-image hidden grid delete-files-avatars delete-files-preview-container zoom-gallery\\\">\\n                </div>\\n                <div data-value=\\\"image\\\" class=\\\"setting-name header-setting no-select delete-files-images\\\">\\n                    {[print(xabber.getString(\\\"images\\\"))]}\\n                </div>\\n                <div class=\\\"gallery-files gallery-preview-image hidden grid delete-files-images delete-files-preview-container zoom-gallery\\\">\\n                </div>\\n                <div data-value=\\\"video\\\" class=\\\"setting-name header-setting no-select delete-files-videos\\\">\\n                    {[print(xabber.getString(\\\"videos\\\"))]}\\n                </div>\\n                <div class=\\\"gallery-files gallery-preview-video hidden grid delete-files-videos delete-files-preview-container zoom-gallery\\\">\\n                </div>\\n                <div data-value=\\\"voice\\\" class=\\\"setting-name header-setting no-select delete-files-voices\\\">\\n                    {[print(xabber.getString(\\\"vcard_type_voice\\\"))]}\\n                </div>\\n                <div class=\\\"gallery-files gallery-preview-file hidden voice delete-files-voices delete-files-preview-container zoom-gallery\\\">\\n                </div>\\n                <div data-value=\\\"file\\\" class=\\\"setting-name header-setting no-select delete-files-files\\\">\\n                    {[print(xabber.getString(\\\"files\\\"))]}\\n                </div>\\n                <div class=\\\"gallery-files gallery-preview-voice hidden file delete-files-files delete-files-preview-container zoom-gallery\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"no-files hidden\\\">{[print(xabber.getString(\\\"no_files\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <div class=\\\"input-field checkbox-field delete-avatars-checkbox\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"delete_avatars\\\"/>\\n            <label for=\\\"delete_avatars\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_confirm_delete_avatars\\\"))]}</label>\\n        </div>\\n        <button class=\\\"btn-confirm btn-flat btn-main\\\">{[print(xabber.getString(\\\"delete\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_emoji_profile_image_header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"dialog-text\\\">{[print(xabber.getString(\\\"account_emoji_profile_image_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"emoji-profile-image\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar ground-color-green-100\\\" data-value=\\\"green\\\">\\n                <div class=\\\"chosen-emoji\\\" data-value=\\\"🐈\\\">🐈</div>\\n            </div>\\n            <div class=\\\"circle-icon\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n            </div>\\n        </div>\\n\\n    </div>\\n    <div class=\\\"emoji-profile-colors\\\">\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-green-500 outline-color-green-500 chosen-background-color\\\" data-value=\\\"green\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-deep-orange-500 outline-color-deep-orange-500\\\" data-value=\\\"deep-orange\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-red-500 outline-color-red-500\\\" data-value=\\\"red\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-light-blue-500 outline-color-light-blue-500\\\" data-value=\\\"light-blue\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-blue-500 outline-color-blue-500\\\" data-value=\\\"blue\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-purple-500 outline-color-purple-500\\\" data-value=\\\"purple\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-lime-500 outline-color-lime-500\\\" data-value=\\\"lime\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-pink-500 outline-color-pink-500\\\" data-value=\\\"pink\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-orange-500 outline-color-orange-500\\\" data-value=\\\"orange\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-save\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        <div class=\\\"modal-preloader-wrap\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_emoji_profile_image_header\\\"))]}</span>\\n        <i class=\\\"close-modal mdi mdi-close mdi-24px\\\"></i>\\n    </div>\\n    <div class=\\\"emoji-picker-wrap no-select\\\">\\n\\n    </div>\\n</div>\\n\";","export default \"\\n{[ for (var i = 0; i < emojis.length; i++) { var tab = emojis[i] ]}\\n    <div class=\\\"emojis-tab{[if (i === 0){]} chosen-emoji-tab{[} else {]} hidden{[}]}\\\" data-value=\\\"{{tab.type}}\\\">\\n        {[ for (var y = 0; y < tab.emojis.length; y++) { var emoji = tab.emojis[y] ]}\\n            <div class=\\\"emoji-picker-emoji\\\" data-value=\\\"{{emoji[0]}}\\\">\\n                <div>{{emoji[0]}}</div>\\n            </div>\\n        {[ } ]}\\n    </div>\\n{[ } ]}\\n<div class=\\\"emoji-picker-tabs\\\">\\n    {[ for (var i = 0; i < emojis.length; i++) { var tab = emojis[i] ]}\\n    <div class=\\\"emojis-bottom-tab-selector{[if (i === 0){]} chosen-emoji-selector{[}]}\\\" data-value=\\\"{{tab.type}}\\\">\\n        {{tab.emojis[0][0]}}\\n    </div>\\n    {[ } ]}\\n</div>\\n\";","export default \"<div class=\\\"existing-chat-wrap\\\" data-name=\\\"{{name}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"existing-chat-item\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n    <button class=\\\"btn-join-existing-chat btn-flat btn-dark btn-main\\\">join</button>\\n</div>\";","export default \"<div class=\\\"account-info-wrap\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <!--<div class=\\\"status\\\"></div>-->\\n    <div class=\\\"text-info-wrap\\\">\\n        <div class=\\\"nickname-wrap\\\">\\n            <div class=\\\"nickname one-line\\\"></div>\\n        </div>\\n        <div class=\\\"jid-wrap\\\">\\n            <div class=\\\"jid one-line\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"field clickable-field enabled-state switch normal\\\">\\n    <label class=\\\"field-value\\\">\\n        <input type=\\\"checkbox\\\">\\n        <span class=\\\"lever\\\"></span>\\n    </label>\\n</div>\\n\";","export default \"<div class=\\\"gallery-wrap\\\">\\n    <!--<svg class=\\\"details-icon btn-go-back mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>-->\\n    <div class=\\\"gallery-storage-wrap\\\">\\n        <div class=\\\"storage-label-title\\\">{[print(xabber.getString(\\\"account_media_gallery\\\"))]}</div>\\n        <div class=\\\"storage-usage\\\"></div>\\n        <div class=\\\"storage-progress-bar\\\">\\n            <div class=\\\"storage-progress-images\\\"></div>\\n            <div class=\\\"storage-progress-videos\\\"></div>\\n            <div class=\\\"storage-progress-voices\\\"></div>\\n            <div class=\\\"storage-progress-files\\\"></div>\\n            <div class=\\\"storage-progress-avatars\\\"></div>\\n        </div>\\n        <div class=\\\"storage-labels\\\">\\n            <div class=\\\"storage-label storage-label-images\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"images\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-videos\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-voices\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-files\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"files\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-avatars\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</div></div>\\n        </div>\\n    </div>\\n    <div class=\\\"storage-usages\\\">\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-images hidden\\\" data-media-type=\\\"image\\\" data-header-text='{[print(xabber.getString(\\\"images\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"image\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"images\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_images_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-videos hidden\\\" data-media-type=\\\"video\\\" data-header-text='{[print(xabber.getString(\\\"videos\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"file-video\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_videos_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-voices hidden\\\" data-media-type=\\\"voice\\\" data-header-text='{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"file-audio\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_voice_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-files hidden\\\" data-media-type=\\\"file\\\" data-header-text='{[print(xabber.getString(\\\"files\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"file\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"files\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_files_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-avatars\\\" data-media-type=\\\"avatars\\\" data-header-text='{[print(xabber.getString(\\\"avatars\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"camera\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_avatars_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab show-deletion settings-deletion-button\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"media-gallery-items-wrap hidden\\\">\\n    <div class=\\\"gallery-sticky-buttons\\\">\\n        <i class=\\\"btn-back-gallery sticky-item mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <i class=\\\"btn-close-selection sticky-item mdi mdi-24px mdi-close\\\"></i>\\n        <div class=\\\"sticky-item gallery-selection-head\\\"></div>\\n        <i class=\\\"btn-delete-selection sticky-item mdi mdi-24px mdi-delete\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-files zoom-gallery\\\">\\n    </div>\\n</div>\\n\\n\";","export default \"<div class=\\\"gallery-file{[if (file.is_avatar === 'True'){]} gallery-avatar{[}]}\\\" title=\\\"{{file.name}}\\\" data-id=\\\"{{file.id}}\\\" data-file=\\\"{{file.file}}\\\" data-name=\\\"{{file.name}}\\\" data-size=\\\"{{file.size}}\\\" data-width=\\\"{{file.width}}\\\" data-height=\\\"{{file.height}}\\\" data-media-type=\\\"{{file.media_type}}\\\" >\\n    {[if (file.media_type && (file.media_type.includes('image') || file.media_type.includes('video'))){]}\\n        <img class=\\\"{[if (file.media_type.includes('video')){]}uploaded-video{[} else {]}uploaded-img popup-img{[}]}\\\" data-mfp-src=\\\"{{file.file}}\\\" src=\\\"{{file.thumbnail}}\\\" {[if (file.media_type && file.media_type.includes('image')){]}onerror=\\\"this.src = '{{file.file}}'; this.onerror = null;\\\" {[}]}>\\n    {[} else {]}\\n        {[if (svg_icon == 'file-audio' && file.context === 'voice'){]}\\n            <div class=\\\"gallery-file-placeholder-background gallery-audio-file-not-uploaded\\\">\\n                <i class=\\\"details-icon mdi mdi-play no-uploaded\\\"></i>\\n            </div>\\n            <div class=\\\"gallery-file-audio-container\\\">\\n            </div>\\n        {[} else {]}\\n            <div class=\\\"gallery-file-placeholder-background\\\">\\n                <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n                <div class=\\\"gallery-file-title-grid\\\">{{filesize}}</div>\\n            </div>\\n        {[}]}\\n        <div class=\\\"gallery-file-title one-line\\\">\\n            {{file.name}},  <span class=\\\"gallery-file-size\\\">{{filesize}}</span> <span class=\\\"gallery-file-date\\\">{{created_at}}</span>\\n        </div>\\n        {[if (duration && file.context === 'voice'){]}\\n            <div class=\\\"gallery-voice-file-duration\\\">\\n                0:00 / <span class=\\\"gallery-voice-file-total-duration\\\">{{duration}}</span>\\n            </div>\\n        {[}]}\\n    {[}]}\\n    <div class=\\\"input-field checkbox-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\"/>\\n        <label></label>\\n    </div>\\n    {[if (download_only){]}\\n        <div class=\\\"btn-download btn-more\\\">\\n            <a class=\\\"one-line\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{file.file}}\\\" download>\\n                <i class=\\\"mdi mdi-24px mdi-download\\\"></i>\\n            </a>\\n        </div>\\n    {[} else {]}\\n    <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{file.id}}-more\\\">\\n        <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n    </div>\\n    <ul id=\\\"{{file.id}}-more\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n        <a class=\\\"one-line\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{file.file}}\\\" download>\\n            <div class=\\\"property-variant btn-download\\\">\\n                {[print(xabber.getString(\\\"action_download\\\"))]}\\n            </div>\\n        </a>\\n        <div class=\\\"property-variant btn-delete\\\">\\n            <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete\\\"))]}</span>\\n        </div>\\n    </ul>\\n    {[}]}\\n</div>\";","export default \"<svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"ic-jabber\\\"></svg>\\n<table>\\n    <tbody>\\n    <tr class=\\\"info status-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n        <td>\\n            <div class=\\\"value status-message\\\"></div>\\n            <div class=\\\"status\\\"></div>\\n        </td>\\n    </tr>\\n    <tr class=\\\"info client-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_client\\\"))]}:</td>\\n        <td class=\\\"value client\\\"></td>\\n    </tr>\\n    <tr class=\\\"info resource-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n        <td class=\\\"value resource\\\"></td>\\n    </tr>\\n    <tr class=\\\"info priority-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n        <td class=\\\"value priority\\\"></td>\\n    </tr>\\n    </tbody>\\n</table>\";","export default \"<table>\\n    <tbody>\\n    <tr class=\\\"info status-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n        <td>\\n            <div class=\\\"value status-message one-line\\\"></div>\\n            <div class=\\\"status\\\"></div>\\n        </td>\\n    </tr>\\n    <tr class=\\\"info client-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_client\\\"))]}:</td>\\n        <td class=\\\"value client one-line\\\"></td>\\n    </tr>\\n    <tr class=\\\"info resource-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n        <td class=\\\"value resource one-line\\\"></td>\\n    </tr>\\n    <tr class=\\\"info priority-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n        <td class=\\\"value priority\\\"></td>\\n    </tr>\\n    </tbody>\\n</table>\";","export default \"\\n<div class=\\\"left-column settings-column noselect\\\">\\n    <div class=\\\"settings-account-head\\\">\\n        <svg class=\\\"btn-add-account mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"contact-add\\\"></svg>\\n        <div class=\\\"name one-line\\\"></div>\\n        <svg class=\\\"btn-color-picker dropdown-button mdi mdi-24px mdi-svg-template\\\" data-activates=\\\"color-picker-dropdown\\\" data-svgname=\\\"palette\\\"></svg>\\n        <ul id=\\\"color-picker-dropdown\\\" class=\\\"dropdown-content color-picker-dropdown bootstrap-dropdown noselect\\\">\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"red\\\">\\n                <span class=\\\"one-line text-color-red-700\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"pink\\\">\\n                <span class=\\\"one-line text-color-pink-700\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"purple\\\">\\n                <span class=\\\"one-line text-color-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"deep-purple\\\">\\n                <span class=\\\"one-line text-color-deep-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"indigo\\\">\\n                <span class=\\\"one-line text-color-indigo-700\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"blue\\\">\\n                <span class=\\\"one-line text-color-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"light-blue\\\">\\n                <span class=\\\"one-line text-color-light-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"cyan\\\">\\n                <span class=\\\"one-line text-color-cyan-700\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"teal\\\">\\n                <span class=\\\"one-line text-color-teal-700\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"green\\\">\\n                <span class=\\\"one-line text-color-green-700\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"light-green\\\">\\n                <span class=\\\"one-line text-color-light-green-700\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"lime\\\">\\n                <span class=\\\"one-line text-color-lime-700\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"amber\\\">\\n                <span class=\\\"one-line text-color-amber-700\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"orange\\\">\\n                <span class=\\\"one-line text-color-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"deep-orange\\\">\\n                <span class=\\\"one-line text-color-deep-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"brown\\\">\\n                <span class=\\\"one-line text-color-brown-700\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"blue-grey\\\">\\n                <span class=\\\"one-line text-color-blue-grey-700\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n        </ul>\\n        <svg class=\\\"btn-qr-code mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n        <div class=\\\"field clickable-field enabled-state switch normal\\\">\\n            <label class=\\\"field-value\\\">\\n                <input type=\\\"checkbox\\\">\\n                <span class=\\\"lever\\\"></span>\\n            </label>\\n        </div>\\n    </div>\\n    <div class=\\\"main-info-wrap account-main-info-wrap\\\">\\n        <div class=\\\"picture-wrap\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                    <img/>\\n                    <input type=\\\"file\\\"/>\\n                    <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown bootstrap-dropdown dropdown-content noselect\\\">\\n                        <div class=\\\"btn-emoji-panel property-variant\\\">\\n                            {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                        </div>\\n                        <div class=\\\"btn-selfie property-variant\\\">\\n                            {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                        </div>\\n                        <div class=\\\"btn-choose-image property-variant\\\">\\n                            {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                        </div>\\n                    </ul>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"name one-line\\\"></div>\\n        <div class=\\\"jid one-line\\\"></div>\\n    </div>\\n    <div class=\\\"settings-tabs-wrap\\\">\\n        <div class=\\\"settings-tab\\\" data-block-name=\\\"profile\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__profile_label\\\"))]}</div>\\n        </div>\\n        <div class=\\\"settings-tab\\\" data-block-name=\\\"media-gallery\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cloud\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n        </div>\\n        <div class=\\\"settings-tab\\\" data-block-name=\\\"encryption\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption\\\"))]}</div>\\n            <div class=\\\"settings-block-label hidden label-encryption-enabled one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_enabled_label\\\"))]}</div>\\n            <div class=\\\"settings-block-label label-encryption-disabled one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_disabled_label\\\"))]}</div>\\n        </div>\\n        <div class=\\\"settings-tab\\\" data-block-name=\\\"devices\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"devices\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__devices_subheader\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"right-column settings-column noselect\\\">\\n    <div class=\\\"settings-panel-head\\\">\\n        <i class=\\\"btn-back-settings mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <i class=\\\"btn-back-subsettings-account mdi mdi-24px mdi-arrow-left hidden\\\"></i>\\n        <span class=\\\"settings-panel-head-title\\\">{[print(xabber.getString(\\\"account_editor\\\"))]}</span>\\n        <i class=\\\"btn-sorting dropdown-button mdi mdi-24px mdi-sort hidden\\\" data-activates=\\\"storage-file-sorting\\\"></i>\\n        <ul id=\\\"storage-file-sorting\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n            <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-id\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_new\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-size\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_size\\\"))]}</span>\\n            </div>\\n        </ul>\\n        <div class=\\\"btn-more media-gallery-button dropdown-button hidden\\\" data-activates=\\\"storage-actions\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"storage-actions\\\" class=\\\"dropdown-content noselect\\\">\\n            <div class=\\\"property-variant btn-select-files hidden\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_select_files\\\"))]}</span>\\n            </div>\\n        </ul>\\n    </div>\\n\\n    <div class=\\\"panel-content-wrap\\\">\\n        <div class=\\\"panel-content details-panel\\\">\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__devices_subheader\\\"))]}' class=\\\"settings-block-wrap devices\\\">\\n                <div class=\\\"devices-wrap hidden\\\">\\n                    <div class=\\\"device-encryption-warning hidden\\\" data-not-trusted-count=\\\"0\\\">\\n                        <svg class=\\\"device-encryption-icon mdi mdi-40px mdi-svg-template\\\" data-svgname=\\\"alert-circle\\\"></svg>\\n                        <div class=\\\"device-encryption-warning-name one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_warning_header\\\"))]}</div>\\n                        <div class=\\\"device-encryption-warning-label\\\"></div>\\n                    </div>\\n                    <div class=\\\"tokens-wrap\\\">\\n                        <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings_account__label_this_device\\\"))]}</div>\\n                        <div class=\\\"current-token-wrap\\\">\\n                            <div class=\\\"sessions-wrap current-session selectable-text\\\"></div>\\n                            <div class=\\\"btn-revoke-all-tokens settings-button-devices\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"restrictions-outline\\\"></svg>\\n                                <div class=\\\"settings-button-devices-label\\\">{[print(xabber.getString(\\\"account_terminate_all_sessions\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-panel-label active-sessions-label\\\">{[print(xabber.getString(\\\"settings_account__label_active_sessions\\\"))]}</div>\\n                        <div class=\\\"all-sessions-wrap\\\">\\n                            <div class=\\\"sessions-wrap all-sessions selectable-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"orphaned-fingerprints hidden\\\">\\n                            <div class=\\\"orphaned-fingerprints-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__legacy_encryption_label\\\"))]}</div>\\n                            <div class=\\\"orphaned-fingerprints-wrap selectable-text\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}' class=\\\"settings-block-wrap profile\\\">\\n                <div class=\\\"settings-tabs-wrap\\\">\\n                    <div class=\\\"settings-tab settings-non-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"status\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"status\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__status_subheader\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\"></div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"vcard-tab\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__edit_profile\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__edit_profile_label\\\"))]}</div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"password\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__password_subheader\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__password_subheader_label\\\"))]}</div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"blocklist\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"block_list\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\"></div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"circles-groups\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles-outline\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\"></div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"capabitilies\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__capabilities_subheader\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__capabilities_subheader_label\\\"))]}</div>\\n                    </div>\\n                    <div class=\\\"settings-tab unregister-account settings-deletion-button settings-non-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"delete-account\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name settings-block-name-single one-line\\\">{[print(xabber.getString(\\\"settings_account__delete_account_subheader\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__status_subheader\\\"))]}' class=\\\"settings-block-wrap status\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"status-wrap setting\\\"></div>\\n                    <div class=\\\"status\\\"></div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__edit_profile\\\"))]}' class=\\\"settings-block-wrap vcard-tab\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"vcard\\\">\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"block-list-view-wrap\\\">\\n                <div data-header='{[print(xabber.getString(\\\"block_list\\\"))]}' data-parent-block=\\\"profile\\\" class=\\\"settings-block-wrap blocklist\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"blocklist-info\\\">\\n                            <div class=\\\"blocklist-wrap\\\">\\n                                <div class=\\\"buttons-wrap\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-tabs-wrap\\\">\\n                        <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-contacts\\\">\\n                            <div class=\\\"setting-icon-background\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-cancel\\\"></svg>\\n                            </div>\\n                            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_contacts\\\"))]}</div>\\n                            <div class=\\\"settings-block-label one-line\\\"></div>\\n                        </div>\\n                        <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-domains\\\">\\n                            <div class=\\\"setting-icon-background\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"web-cancel\\\"></svg>\\n                            </div>\\n                            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_domains\\\"))]}</div>\\n                            <div class=\\\"settings-block-label one-line\\\"></div>\\n                        </div>\\n                        <div class=\\\"settings-tab hidden\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-invitations\\\">\\n                            <div class=\\\"setting-icon-background\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"invite\\\"></svg>\\n                            </div>\\n                            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_invitations\\\"))]}</div>\\n                            <div class=\\\"settings-block-label one-line\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_contacts\\\"))]}' data-block-name=\\\"blocklist-contacts\\\" class=\\\"settings-block-wrap blocklist-contacts\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"blocklist-info\\\">\\n                            <div class=\\\"blocklist-wrap\\\">\\n                                <div class=\\\"buttons-wrap\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                    <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                    <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                </div>\\n                                <div class=\\\"blocked-items\\\">\\n                                    <div class=\\\"blocked-contacts-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_contacts_empty\\\"))]}</div>\\n                                    <div class=\\\"blocked-items-container blocked-contacts-wrap\\\" data-tab-name=\\\"contacts-item\\\">\\n                                        <div class=\\\"blocked-contacts blocked-list\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_domains\\\"))]}' data-block-name=\\\"blocklist-domains\\\" class=\\\"settings-block-wrap blocklist-domains\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"blocklist-info\\\">\\n                            <div class=\\\"blocklist-wrap\\\">\\n                                <div class=\\\"buttons-wrap\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                    <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                    <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                </div>\\n                                <div class=\\\"blocked-items\\\">\\n                                    <div class=\\\"blocked-domains-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_domains_empty\\\"))]}</div></div>\\n                                <div class=\\\"blocked-items-container blocked-domains-wrap\\\" data-tab-name=\\\"domains-item\\\">\\n                                    <div class=\\\"blocked-domains blocked-list\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_invitations\\\"))]}' data-block-name=\\\"blocklist-invitations\\\" class=\\\"settings-block-wrap blocklist-invitations\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"blocklist-info\\\">\\n                        <div class=\\\"blocklist-wrap\\\">\\n                            <div class=\\\"buttons-wrap\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                            </div>\\n                            <div class=\\\"blocked-items\\\">\\n                                <div class=\\\"blocked-invitations-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_invitations_empty\\\"))]}</div>\\n                                <div class=\\\"blocked-items-container blocked-invitations-wrap\\\" data-tab-name=\\\"invitations-item\\\">\\n                                    <div class=\\\"blocked-invitations blocked-list\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}' class=\\\"settings-block-wrap circles-groups\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"groups-info\\\">\\n                        <div class=\\\"groups-wrap\\\">\\n                            <div class=\\\"groups\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__capabilities_subheader\\\"))]}' class=\\\"settings-block-wrap capabitilies\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"server-info\\\">\\n                        <div class=\\\"capabilities-wrap\\\">\\n                            <div class=\\\"capabilities\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"color\\\"))]}' class=\\\"settings-block-wrap color-scheme\\\">\\n                <div class=\\\"color-scheme-wrap\\\">\\n                    <div class=\\\"account-color\\\">\\n                        <div class=\\\"field radio-field clickable-field\\\">\\n                            <form action=\\\"#\\\">\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"red\\\" type=\\\"radio\\\" id=\\\"color-red\\\" />\\n                                    <label class=\\\"text-color-red-700\\\" for=\\\"color-red\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"pink\\\" type=\\\"radio\\\" id=\\\"color-pink\\\" />\\n                                    <label class=\\\"text-color-pink-700\\\" for=\\\"color-pink\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"purple\\\" type=\\\"radio\\\" id=\\\"color-purple\\\" />\\n                                    <label class=\\\"text-color-purple-700\\\" for=\\\"color-purple\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-purple\\\" type=\\\"radio\\\" id=\\\"color-deep-purple\\\" />\\n                                    <label class=\\\"text-color-deep-purple-700\\\" for=\\\"color-deep-purple\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"indigo\\\" type=\\\"radio\\\" id=\\\"color-indigo\\\" />\\n                                    <label class=\\\"text-color-indigo-700\\\" for=\\\"color-indigo\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue\\\" type=\\\"radio\\\" id=\\\"color-blue\\\" />\\n                                    <label class=\\\"text-color-blue-700\\\" for=\\\"color-blue\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-blue\\\" type=\\\"radio\\\" id=\\\"color-light-blue\\\" />\\n                                    <label class=\\\"text-color-light-blue-700\\\" for=\\\"color-light-blue\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"cyan\\\" type=\\\"radio\\\" id=\\\"color-cyan\\\" />\\n                                    <label class=\\\"text-color-cyan-700\\\" for=\\\"color-cyan\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"teal\\\" type=\\\"radio\\\" id=\\\"color-teal\\\" />\\n                                    <label class=\\\"text-color-teal-700\\\" for=\\\"color-teal\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"green\\\" type=\\\"radio\\\" id=\\\"color-green\\\" />\\n                                    <label class=\\\"text-color-green-700\\\" for=\\\"color-green\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-green\\\" type=\\\"radio\\\" id=\\\"color-light-green\\\" />\\n                                    <label class=\\\"text-color-light-green-700\\\" for=\\\"color-light-green\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"lime\\\" type=\\\"radio\\\" id=\\\"color-lime\\\" />\\n                                    <label class=\\\"text-color-lime-700\\\" for=\\\"color-lime\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"amber\\\" type=\\\"radio\\\" id=\\\"color-amber\\\" />\\n                                    <label class=\\\"text-color-amber-700\\\" for=\\\"color-amber\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"orange\\\" type=\\\"radio\\\" id=\\\"color-orange\\\" />\\n                                    <label class=\\\"text-color-orange-700\\\" for=\\\"color-orange\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-orange\\\" type=\\\"radio\\\" id=\\\"color-deep-orange\\\" />\\n                                    <label class=\\\"text-color-deep-orange-700\\\" for=\\\"color-deep-orange\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"brown\\\" type=\\\"radio\\\" id=\\\"color-brown\\\" />\\n                                    <label class=\\\"text-color-brown-700\\\" for=\\\"color-brown\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue-grey\\\" type=\\\"radio\\\" id=\\\"color-blue-grey\\\" />\\n                                    <label class=\\\"text-color-blue-grey-700\\\" for=\\\"color-blue-grey\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__encryption\\\"))]}' class=\\\"settings-block-wrap encryption\\\">\\n                <div class=\\\"btn-more device-more-button dropdown-button\\\" data-activates=\\\"device-omemo-actions\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n                </div>\\n                <ul id=\\\"device-omemo-actions\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n                    <div class=\\\"property-variant btn-manage-devices\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_manage_devices\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant btn-purge-keys\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_purge_keys\\\"))]}</span>\\n                    </div>\\n                </ul>\\n                <div class=\\\"omemo-settings-wrap\\\">\\n                    <div class=\\\"settings\\\">\\n                        <div class=\\\"setting-wrap omemo-enable\\\">\\n                            <span>{[print(xabber.getString(\\\"omemo__settings__toggle_enable_encryption\\\"))]}</span>\\n                            <div class=\\\"field setting-use-omemo switch normal\\\">\\n                                <label class=\\\"field-value\\\">\\n                                    <input type=\\\"checkbox\\\">\\n                                    <span class=\\\"lever\\\"></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-wrap send-chat-states\\\">\\n                            <span>{[print(xabber.getString(\\\"omemo__settings__toggle_send_typing_notifications\\\"))]}</span>\\n                            <div class=\\\"field setting-send-chat-states switch normal\\\">\\n                                <label class=\\\"field-value\\\">\\n                                    <input type=\\\"checkbox\\\">\\n                                    <span class=\\\"lever\\\"></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}' class=\\\"settings-block-wrap media-gallery\\\">\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__device_information\\\"))]}' class=\\\"settings-block-wrap device-information hidden\\\">\\n                <div class=\\\"device-information-trust-text-wrap\\\">\\n                    <div class=\\\"device-information-trust-text\\\"></div>\\n                </div>\\n                <div class=\\\"device-information-wrap\\\">\\n                    <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings_account__device_information\\\"))]}</div>\\n                    <div class=\\\"device-information-items-wrap device-information-basic\\\">\\n                        <div class=\\\"device-information-item device-information-status\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"status\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__status__label\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-last-seen\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"history\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__status__label_last_seen\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-client\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"id\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__client__label\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-ip\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__ip__label\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-expires\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"expires\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__expire__label\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-panel-label device-information-security-label\\\">{[print(xabber.getString(\\\"settings__menu_item__security\\\"))]}</div>\\n                    <div class=\\\"device-information-items-wrap device-information-encryption\\\">\\n                        <div class=\\\"device-information-item device-information-device-id\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"settings_account__device_information_device_id\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-fingerprint hidden\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"lock\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__fingerprint_label\\\"))]}</div>\\n                            <div class=\\\"device-information-text device-information-fingerprint-text\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-tab device-information-trust settings-deletion-button\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-alert\\\" data-svgname=\\\"lock-alert\\\"></svg>\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-check\\\" data-svgname=\\\"lock-check\\\"></svg>\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-cross\\\" data-svgname=\\\"lock-cross\\\"></svg>\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-question\\\" data-svgname=\\\"lock-question\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings_account__identity_verification\\\"))]}</div>\\n                    </div>\\n                    <div class=\\\"settings-tab btn-revoke-token settings-deletion-button\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"device__info__terminate_session__button\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input input-glow field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"token-wrap settings-tab\\\" data-subblock-parent-name=\\\"devices\\\" data-block-name=\\\"device-information\\\" data-token-uid=\\\"{{token_uid}}\\\">\\n    <div class=\\\"token-icon-wrap\\\">\\n        {[if (device && (device.indexOf('Android') > -1 || device.indexOf('iOS') > -1)){]}\\n            <svg class=\\\"mdi token-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"device-cellphone\\\"></svg>\\n        {[} else {]}\\n            <svg class=\\\"mdi token-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"device-web\\\"></svg>\\n        {[}]}\\n    </div>\\n    <div class=\\\"token-client-wrap\\\">\\n        <div class=\\\"device one-line\\\">{{device}}</div>\\n        <div class=\\\"ip-address\\\">{{ip}} • {[ if (resource_obj) {]}{[print(xabber.getString(\\\"account_state_connected\\\"))]}{[} else {]}{{last_auth}}{[}]}</div>\\n    </div>\\n    <div class=\\\"device-encryption one-line\\\">\\n        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"security\\\"></svg>\\n    </div>\\n</div>\";","export default \"<div class=\\\"border ground-color-500\\\"></div>\\n<div class=\\\"account-item-avatar-wrap\\\">\\n    <div class=\\\"circle-avatar-wrap\\\">\\n        <div class=\\\"dropdown-button circle-avatar border-color noselect\\\"></div>\\n    </div>\\n</div>\\n<div class=\\\"status\\\"></div>\\n<i class=\\\"auth-failed mdi mdi-16px mdi-close\\\"></i>\\n<div class=\\\"account-actions-panel\\\">\\n    <div class=\\\"filter-chats\\\">\\n        <i class=\\\"mdi mdi-filter mdi-20px\\\"></i>\\n        <div class=\\\"text\\\">{[print(xabber.getString(\\\"account__toolbar_item__button_filter_chats\\\"))]}</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header no-select\\\">\\n        <span>{[print(xabber.getString(\\\"settings_account__delete_account_modal_title\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content login-panel-form\\\">\\n        <div class=\\\"modal-description-text no-select\\\">{[print(xabber.getString(\\\"settings_account__delete_account_modal_text\\\"))]}</div>\\n\\n        <div class=\\\"login-form-jid\\\">\\n            <div class=\\\"login-form-step-wrap\\\">\\n                <div class=\\\"input-field-wrap\\\">\\n                    <div class=\\\"input-field checkbox-field\\\">\\n                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"confirm_unregister_1\\\"/>\\n                        <label for=\\\"confirm_unregister_1\\\">{[print(xabber.getString(\\\"settings_account__checkbox_confirm_unregister_text_1\\\"))]}</label>\\n                    </div>\\n                    <div class=\\\"input-field checkbox-field\\\">\\n                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"confirm_unregister_2\\\"/>\\n                        <label for=\\\"confirm_unregister_2\\\">{[print(xabber.getString(\\\"settings_account__checkbox_confirm_unregister_text_2\\\"))]}</label>\\n                    </div>\\n                    <div class=\\\"input-field password-field\\\">\\n                        <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"settings_account__delete_account_modal_password_placeholder_text\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                        <div class=\\\"login-form-step-error login-password-error\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"login-confirm-form-step-wrap hidden\\\">\\n                <div class=\\\"input-field-wrap\\\">\\n                    <div class=\\\"input-field input-field-jid input-field-jid-borders\\\">\\n                        <input id=\\\"jid\\\" type=\\\"text\\\" name=\\\"jid\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"login-form-step-error login-jid-error hidden\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button disabled class=\\\"btn-flat btn-main btn-log-in\\\">{[print(xabber.getString(\\\"account_delete\\\"))]}</button>\\n        <button disabled class=\\\"btn-flat btn-main btn-submit-unregister hidden\\\">{[print(xabber.getString(\\\"account_delete\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"take_photo\\\"))]}</span>\\n    </div>\\n    <div class=\\\"webcam-profile-image-wrap\\\">\\n        <div class=\\\"camera\\\">\\n            <video class=\\\"webcam-video\\\">Video stream not available.</video>\\n        </div>\\n        <canvas id=\\\"canvas\\\" style=\\\"display: none;\\\">\\n        </canvas>\\n        <div class=\\\"output hidden\\\">\\n            <div class=\\\"webcam-photo-wrap\\\">\\n                <img class=\\\"webcam-photo\\\" alt=\\\"The screen capture will appear in this box.\\\">\\n            </div>\\n            <div class=\\\"circle-icon\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"camera-retake\\\"></svg>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-take-photo\\\">{[print(xabber.getString(\\\"capture\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-save hidden\\\">{[print(xabber.getString(\\\"account_webcam_profile_image_btn_save\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        <div class=\\\"modal-preloader-wrap\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"login-panel-intro\\\">\\n    <div class=\\\"login-panel-head noselect\\\">\\n        <img src=\\\"{{CLIENT_LOGO}}\\\" class=\\\"client-logo\\\">\\n        <span class=\\\"client-name\\\">{{SHORT_CLIENT_NAME}}</span>\\n        <span class=\\\"client-description\\\">{{SHORT_CLIENT_DESCRIPTION}}</span>\\n    </div>\\n    <div class=\\\"login-buttons\\\">\\n        <div class=\\\"btn-flat btn-main btn-register-form one-line\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_up\\\"))]}</div>\\n        <div class=\\\"btn-flat btn-main btn-login-form one-line\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_in\\\"))]}</div>\\n        <div class=\\\"auth-settings one-line\\\">{[print(xabber.getString(\\\"account_settings_privacy_settings\\\"))]}</div>\\n    </div>\\n\\n    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}'  class=\\\"settings-block-wrap privacy login-panel-form hidden\\\">\\n        <svg class=\\\"details-icon btn-go-back-menu mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>\\n        <div class=\\\"block-subheader\\\">\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__device_metadata_sharing\\\"))]}</span>\\n        </div>\\n        <div class=\\\"setting device-metadata radio-button field-wrap\\\">\\n            <div class=\\\"field radio-field clickable-field\\\">\\n                <form action=\\\"#\\\">\\n                    <p>\\n                        <input class=\\\"with-gap\\\" name=\\\"device_metadata\\\" value=\\\"contacts\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-contacts\\\" />\\n                        <label for=\\\"{{view.cid}}-contacts\\\">{[print(xabber.getString(\\\"settings__section_privacy__contacts_metadata\\\"))]}</label>\\n                    </p>\\n                    <p>\\n                        <input class=\\\"with-gap\\\" name=\\\"device_metadata\\\" value=\\\"server\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-server\\\" />\\n                        <label for=\\\"{{view.cid}}-server\\\">{[print(xabber.getString(\\\"settings__section_privacy__server_metadata\\\"))]}</label>\\n                    </p>\\n                    <p>\\n                        <input class=\\\"with-gap\\\" name=\\\"device_metadata\\\" value=\\\"none\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-none\\\" />\\n                        <label for=\\\"{{view.cid}}-none\\\">{[print(xabber.getString(\\\"settings__section_privacy__none_metadata\\\"))]}</label>\\n                    </p>\\n                </form>\\n            </div>\\n        </div>\\n        <div class=\\\"device-metadata-description\\\"></div>\\n    </div>\\n</div>\\n<div class=\\\"login-panel-form xmpp-login-form noselect hidden\\\">\\n    <svg class=\\\"details-icon btn-go-back-menu mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</div>\\n    <div class=\\\"login-form-jid\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"dialog_jingle_message__message_connect\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field input-field-jid\\\">\\n                    <input id=\\\"jid\\\" placeholder='{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}' type=\\\"text\\\" name=\\\"jid\\\">\\n                    <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                        <div class=\\\"select-auth-xmpp-server\\\">\\n                            <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                            <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                                <input id=\\\"sign_in_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' value=\\\"111111\\\" name=\\\"sign_in_domain\\\">\\n                            </div>\\n                            <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-auth-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                            <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-error login-jid-error hidden\\\"></div>\\n            <div class=\\\"register-form-step-error login-password-error hidden\\\"></div>\\n            <div class=\\\"register-form-step-description\\\"></div>\\n            <div class=\\\"login-step-wrap hidden\\\">\\n                <div class=\\\"login-step connecting-step\\\">\\n                    <div class=\\\"login-step-text\\\">\\n                        {[print(xabber.getString(\\\"dialog_jingle_message__status_communicating\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                </div>\\n                <div class=\\\"login-step credentials-step\\\">\\n                    <div class=\\\"login-step-text\\\">\\n                        {[print(xabber.getString(\\\"dialog_jingle_message__status_checking_credentials\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"login-form-server-features hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\"></div>\\n        </div>\\n        <div class=\\\"login-server-features-wrap\\\">\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.MAM)]}\\\" >\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_message_archive\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_archive_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.SYNCHRONIZATION)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_synchronization\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_quick_synchronization_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.REWRITE)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_message_editing\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_editing_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.AUTH_DEVICES)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_device_management\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_tokens_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.PUBSUB)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_publish_subscribe\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_pubsub_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.HTTP_UPLOAD)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_file_upload\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_file_upload_error'))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"server-features-error\\\"></div>\\n    </div>\\n    <div class=\\\"input-field buttons-wrap\\\">\\n        <button class=\\\"btn btn-flat btn-main-filled btn-log-in\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main-filled one-line hidden btn-sign-up-instead\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_up\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main-filled one-line hidden btn-finish-log-in\\\"></button>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\\n<div class=\\\"login-panel-form register-form noselect hidden\\\">\\n    <svg class=\\\"details-icon btn-go-back mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_register_xabber_account\\\"))]}</div>\\n    <div class=\\\"login-form-skip hidden\\\">{[print(xabber.getString(\\\"skip\\\"))]}</div>\\n    <div class=\\\"register-form-nickname\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_nickname\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_nickname\\\" placeholder='{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}' type=\\\"text\\\" name=\\\"register_nickname\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_nickname\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-jid hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_jid\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_jid\\\" placeholder='{[print(xabber.getString(\\\"hint_username\\\"))]}' type=\\\"text\\\" name=\\\"register_jid\\\">\\n                </div>\\n                <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                    <div class=\\\"select-xmpp-server\\\">\\n                        <div data-activates=\\\"select-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                        <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                            <input id=\\\"new_account_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"register_domain\\\">\\n                        </div>\\n                        <div data-activates=\\\"select-xmpp-server\\\" class=\\\"caret\\\">\\n                            <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                            <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div id=\\\"select-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                        <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_jid\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-password hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_password\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"register_password\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_password\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-picture hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_avatar\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"avatar-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                    <div class=\\\"circle-avatar\\\">\\n                        <input id=\\\"register_picture\\\"  title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                        <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown dropdown-content noselect\\\">\\n                            <div class=\\\"btn-emoji-panel property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-selfie property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-choose-image property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                            </div>\\n                        </ul>\\n                    </div>\\n                    <div class=\\\"circle-icon\\\">\\n                        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                        </svg>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    {[if (xabber.url_params && xabber.url_params.rkey){]}\\n        <div class=\\\"login-form-url\\\">\\n            <i class=\\\"mdi login-form-url-icon mdi-link-variant\\\"></i>\\n            <div class=\\\"login-form-url-text\\\">\\n                {[print(xabber.getString(\\\"xmpp_login__registration_via_link\\\"))]}\\n            </div>\\n        </div>\\n    {[}]}\\n    <div class=\\\"input-field buttons-wrap\\\">\\n        <button class=\\\"btn btn-flat btn-main-filled btn-next\\\">{[print(xabber.getString(\\\"xaccount_next\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main btn-skip\\\">{[print(xabber.getString(\\\"xmpp_login__registration_skip\\\"))]}</button>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\";","export default \"<div class=\\\"left-column noselect\\\">\\n    <div class=\\\"main-info-wrap xabber-info-wrap\\\">\\n        <div class=\\\"picture-wrap\\\">\\n            <img class=\\\"logo\\\" src=\\\"{{CLIENT_LOGO}}\\\"/>\\n        </div>\\n        <div class=\\\"name\\\">{{CLIENT_NAME}}</div>\\n        <div class=\\\"version\\\"></div>\\n    </div>\\n</div>\\n</div>\\n\\n<div class=\\\"right-column noselect\\\">\\n    <div class=\\\"settings-panel-head\\\">\\n        <span>{[print(xabber.getString(\\\"category_about\\\"))]}</span>\\n    </div>\\n\\n    <div class=\\\"panel-content-wrap\\\">\\n        <div class=\\\"panel-content\\\">\\n            <div class=\\\"settings-block-wrap about\\\">\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__preamble_1\\\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__preamble_2\\\", [`<a href=\\\"${CLIENT_URL}\\\" target=\\\"_blank\\\">${CLIENT_URL}</a>`]))]}</div>\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_1__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_1__text\\\"))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_2__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_2__text\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_1\\\", [constants.CLIENT_NAME, `<a href=\\\"${DEVELOPER_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"client_developer_company_name\\\")}</a>`, constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_2\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_3\\\"))]}</div>\\n                <div class=\\\"block-content flex-content\\\">\\n                    <img class=\\\"logo\\\" src=\\\"images/redsolution-logo.png\\\"/>\\n                    <a href=\\\"https://twitter.com/Xabber_XMPP\\\" target=\\\"_blank\\\"><div class=\\\"btn-social twitter-color\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-twitter\\\"></i>\\n                    </div></a>\\n                    <a href=\\\"${CLIENT_GITHUB_URL}\\\" target=\\\"_blank\\\"><img class=\\\"btn-social github-logo\\\" src=\\\"images/ic_github.png\\\"/></a>\\n                </div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__text_1\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__text_2\\\", [`<a href=\\\"${PROJECT_CROWDIN_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_4__text_2__link__text\\\", [constants.SHORT_CLIENT_NAME])}</a>`]))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_1\\\", [constants.CLIENT_NAME, `<a href=\\\"${CLIENT_GITHUB_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_5__text_1__link__text\\\")}</a>`]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_2\\\"))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_3\\\", [constants.SHORT_CLIENT_NAME, xabber.getString(\\\"client_developer_company_name\\\"), `<a href=\\\"${DEVELOPER_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"client_developer_company_full_name\\\")}</a>`]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_4\\\", [constants.CLIENT_NAME, `<a href=\\\"${CLIENT_LICENSE_GITHUB_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_5__text_4__link__text\\\")}</a>`]))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"library\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_library\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"library\\\" class=\\\"screen-wrap library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"hidden screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__text\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__button_upload\\\"))]}</button>\\n                <input type=\\\"file\\\">\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</div>\\n<div class=\\\"material-color-picker-wrap\\\">\\n    <div class=\\\"material-color-picker\\\">\\n        {[materialColors.forEach(function (color) {]}\\n        <div data-color-name=\\\"{{color.color}}\\\" class=\\\"color-palette-wrapper\\\">\\n            {[var default_color = color.variations.find(v => v.weight == 500);]}\\n            <div data-weight=\\\"500\\\" data-hex=\\\"{{default_color.hex}}\\\" style=\\\"background-color: {{default_color.hex}}\\\" class=\\\"color-palette-item\\\">\\n            </div>\\n            {[color.variations.forEach(function (variation) {]}\\n            <div data-weight=\\\"{{variation.weight}}\\\" data-hex=\\\"{{variation.hex}}\\\" style=\\\"background-color: {{variation.hex}}\\\" class=\\\"color-palette-item\\\">\\n            </div>\\n            {[})]}\\n        </div>\\n        {[})]}\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"hidden selected-color-wrap\\\">\\n        <div class=\\\"selected-color-item\\\"></div>\\n        <div class=\\\"selected-color-info\\\">\\n            <div class=\\\"selected-color-name\\\"></div>\\n            <div class=\\\"selected-color-hex\\\"></div>\\n            <input class=\\\"selected-color-hex-input hidden\\\"/>\\n        </div>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-set\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<ul class=\\\"color-values noselect\\\">\\n    <li class=\\\"color-value\\\" data-value=\\\"red\\\">\\n        <div class=\\\"color-name text-color-red-700\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-red-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"pink\\\">\\n        <div class=\\\"color-name text-color-pink-700\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-pink-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"purple\\\">\\n        <div class=\\\"color-name text-color-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-purple-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"deep-purple\\\">\\n        <div class=\\\"color-name text-color-deep-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-deep-purple-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"indigo\\\">\\n        <div class=\\\"color-name text-color-indigo-700\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-indigo-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"blue\\\">\\n        <div class=\\\"color-name text-color-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-blue-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"light-blue\\\">\\n        <div class=\\\"color-name text-color-light-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-light-blue-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"cyan\\\">\\n        <div class=\\\"color-name text-color-cyan-700\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-cyan-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"teal\\\">\\n        <div class=\\\"color-name text-color-teal-700\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-teal-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"green\\\">\\n        <div class=\\\"color-name text-color-green-700\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-green-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"light-green\\\">\\n        <div class=\\\"color-name text-color-light-green-700\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-light-green-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"lime\\\">\\n        <div class=\\\"color-name text-color-lime-700\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-lime-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"amber\\\">\\n        <div class=\\\"color-name text-color-amber-700\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-amber-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"orange\\\">\\n        <div class=\\\"color-name text-color-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-orange-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"deep-orange\\\">\\n        <div class=\\\"color-name text-color-deep-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-deep-orange-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"brown\\\">\\n        <div class=\\\"color-name text-color-brown-700\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-brown-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"blue-grey\\\">\\n        <div class=\\\"color-name text-color-blue-grey-700\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-blue-grey-700\\\"></div>\\n    </li>\\n</ul>\";","export default \"<div class=\\\"modal dialog-modal {{modal_class}}\\\">\\n    <div class=\\\"modal-header\\\">\\n        <div class=\\\"panel-header black-text\\\">{{header}}</div>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"dialog-text\\\">{{text}}</div>\\n        <div class=\\\"dialog-options-wrap\\\">\\n        {[ for (var idx in dialog_options) { var option = dialog_options[idx]; ]}\\n            <div class=\\\"dialog-option\\\" data-name=\\\"{{option.name}}\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"dialog_option_{{option.name}}\\\" {[ if (option.checked) { ]}checked=\\\"checked\\\"{[ } ]}/>\\n                <label for=\\\"dialog_option_{{option.name}}\\\">{{option.text}}</label>\\n            </div>\\n        {[ } ]}\\n        </div>\\n        <div class=\\\"container-for-img hidden\\\"><img class=\\\"img-from-clipboard\\\"></div>\\n    </div>\\n    <div class=\\\"modal-footer {{flag}}\\\">\\n        {[ for (var idx in optional_buttons) { var button = optional_buttons[idx]; ]}\\n        <button class=\\\"optional-button btn-flat btn-main\\\" data-option=\\\"{{button.value}}\\\">{{button.name}}</button>\\n        {[ } ]}\\n        {[ if (ok_button) { ]}\\n        <button class=\\\"ok-button btn-flat btn-main\\\" data-option=true>{{ok_button.text}}</button>\\n        {[ } ]}\\n        {[ if (cancel_button) { ]}\\n        <button class=\\\"cancel-button btn-flat btn-main btn-dark btn-cancel\\\" data-option=false>{{cancel_button.text}}</button>\\n        {[ } ]}\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"fingerprint-content\\\">\\n    {[if (svg_icon){]}\\n        <div class=\\\"fingerprint-device-icon\\\">\\n            <svg class=\\\"mdi mdi-72px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n        </div>\\n    {[}]}\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap device-fingerprints-part\\\">\\n        <div class=\\\"fingerprint-label\\\">\\n            <div class=\\\"value\\\">{{label}}</div>\\n        </div>\\n    </div>\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap device-fingerprints-part\\\">\\n        <div class=\\\"device-id\\\">\\n            <div class=\\\"value\\\">{{id}}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"fingerprint-wrap\\\">\\n        <div title=\\\"Device fingerprint\\\" class=\\\"fingerprint device-fingerprints-part\\\">\\n            <div class=\\\"label\\\">\\n                {[if (!edit_setting) {]}\\n                    {[print(xabber.getString(\\\"omemo__dialog_fingerprints__other_fingerprint_label\\\"))]}\\n                {[} else {]}\\n                <span class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_this_device\\\"))]}</span> {[print(xabber.getString(\\\"omemo__dialog_fingerprints__fingerprint_label\\\"))]}\\n                {[}]}</div>\\n            <div class=\\\"value\\\">{{fingerprint}}</div>\\n        </div>\\n        {[if (error) {]}\\n        <div class=\\\"fingerprint-error\\\">{{error}}</div>\\n        {[}]}\\n        {[if (old_fingerprint){]}<div title=\\\"Old device fingerprint\\\" class=\\\"old-fingerprint\\\">{{old_fingerprint}}</div>{[}]}\\n    </div>\\n</div>\\n<div data-trust=\\\"{{trust}}\\\" class=\\\"buttons\\\">\\n    {[if (trust !== null && !error) {]}\\n    <div class=\\\"dropdown-button\\\" data-activates=\\\"select-status-{{id}}\\\">\\n        <div class=\\\"trust-item-wrap btn-main btn-flat\\\">\\n            <div data-value=\\\"{{trust}}\\\">{[print(xabber.getString(`omemo__dialog_fingerprints__button_verify_device`))]}</div>\\n        </div>\\n    </div>\\n    <div id=\\\"select-status-{{id}}\\\" class=\\\"dropdown-content bootstrap-dropdown noselect fingerprint-dropdown\\\">\\n        <div data-value=\\\"ignore\\\" class=\\\"property-variant btn-ignore\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_ignore\\\"))]}</div>\\n        <div data-value=\\\"trust\\\" class=\\\"property-variant btn-trust\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_trust\\\"))]}</div>\\n    </div>\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"row\\\">\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap\\\">\\n        {[if (edit_setting) {]}\\n        <input class=\\\"hidden set-label one-line\\\" {[if (label) {]}value=\\\"{{label}}\\\"{[}]}>{[}]}\\n        {[if (label) {]}<div class=\\\"one-line label\\\">{{label}}</div>{[}]}\\n        <div class=\\\"device-id one-line\\\">{{id}}</div>\\n        {[if (!label) {]}<div class=\\\"device-id-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label_device_id\\\"))]}</div>{[}]}\\n        {[if (edit_setting) {]}<div class=\\\"set-label-label hidden\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label_set_label\\\"))]}</div>{[}]}\\n    </div>\\n    <div class=\\\"fingerprint-wrap\\\">\\n        <div title=\\\"Device fingerprint\\\" class=\\\"fingerprint\\\">{{fingerprint}}</div>\\n        {[if (error) {]}\\n        <div class=\\\"fingerprint-error\\\">{{error}}</div>\\n        {[}]}\\n        {[if (old_fingerprint){]}<div title=\\\"Old device fingerprint\\\" class=\\\"old-fingerprint\\\">{{old_fingerprint}}</div>{[}]}\\n    </div>\\n    <div data-trust=\\\"{{trust}}\\\" class=\\\"buttons\\\">\\n        {[if (trust !== null && !error) {]}\\n        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-status-{{id}}\\\">\\n            <div class=\\\"trust-item-wrap btn-main btn-flat\\\">\\n                <div data-value=\\\"{{trust}}\\\">{[print(xabber.getString(`omemo__dialog_fingerprints__button_${trust}`))]}</div>\\n            </div>\\n        </div>\\n        <div id=\\\"select-status-{{id}}\\\" class=\\\"dropdown-content noselect fingerprint-dropdown\\\">\\n            <div data-value=\\\"ignore\\\" class=\\\"btn-main text-color-grey-500 btn-ignore btn-flat\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_ignore\\\"))]}</div>\\n            <div data-value=\\\"trust\\\" class=\\\"btn-main btn-flat btn-trust text-color-green-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_trust\\\"))]}</div>\\n            {[if (delete_button){]}\\n            <div class=\\\"btn-main btn-flat btn-delete text-color-red-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_delete\\\"))]}</div>\\n            {[}]}\\n        </div>\\n        {[}]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header fingerprints-header\\\">\\n    <div class=\\\"header\\\"></div>\\n    <div class=\\\"additional-info\\\"></div>\\n</div>\\n<div class=\\\"fingerprints-content\\\">\\n</div>\\n<div class=\\\"fingerprints-bottom\\\">\\n    <div class=\\\"this-device-wrap\\\">\\n        <div class=\\\"this-device-header-wrap\\\">\\n            <div class=\\\"divider\\\"></div>\\n            <div class=\\\"this-device-header\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_this_device\\\"))]}</div>\\n        </div>\\n        <div class=\\\"this-device-content\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"fingerprints-description-wrap\\\">\\n        <div class=\\\"fingerprints-description\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_description\\\"))]}</div>\\n        <div class=\\\"link-about-encryption\\\"><a href=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__link_learn_more'))]}\\\" target=\\\"_blank\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_learn_more\\\"))]}</a></div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header fingerprints-header\\\">\\n    {[print(xabber.getString(\\\"omemo__dialog_fingerprints__device_verification_label\\\"))]}\\n</div>\\n<div class=\\\"fingerprints-content\\\">\\n    <div class=\\\"other-device-content\\\">\\n\\n    </div>\\n    <div class=\\\"this-device-content\\\">\\n\\n    </div>\\n</div>\\n<div class=\\\"fingerprints-bottom\\\">\\n    <div class=\\\"fingerprints-help-text\\\">\\n        {[print(xabber.getString(\\\"omemo__dialog_fingerprints__bottom_help_text\\\"))]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}} field-text one-line\\\"></div>\\n    <div class=\\\"btn-rename\\\">\\n        <span>{[print(xabber.getString(\\\"input_widget__button_rename\\\"))]}</span>\\n    </div>\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input field-input hidden\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"collapsed-movable\\\"></div>\\n<i class=\\\"mdi mdi-phone btn-collapse\\\"></i>\\n<div class=\\\"call-header\\\">\\n    {[print(xabber.getString(\\\"dialog_jingle_message__header\\\", [SHORT_CLIENT_NAME]))]}\\n    <div class=\\\"calling-status\\\"></div>\\n</div>\\n<div class=\\\"blur-background\\\"></div>\\n<div class=\\\"contact-info\\\">\\n    <div class=\\\"name one-line\\\"></div>\\n    <div class=\\\"calling-status\\\"></div>\\n</div>\\n<div class=\\\"video-wrap\\\">\\n    <video autoplay loop class=\\\"blank-video hidden\\\">\\n        <source src=\\\"{{BLANK_VIDEO.MP4}}\\\">\\n        <source src=\\\"{{BLANK_VIDEO.OGG}}\\\" type=\\\"video/ogg\\\">\\n        <source src=\\\"{{BLANK_VIDEO.WEBM}}\\\" type=\\\"video/webm\\\">\\n    </video>\\n    <audio autoplay class=\\\"webrtc-remote-audio hidden\\\"></audio>\\n    <video autoplay muted class=\\\"webrtc-local-video collapsed hidden\\\"></video>\\n    <div class=\\\"default-screen\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n        <div class=\\\"name one-line\\\"></div>\\n    </div>\\n</>\\n<div class=\\\"buttons-panel\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"btn-wrap\\\" title=\\\"Collapse window\\\"><svg class=\\\"btn-collapse mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M19.5,3.09L15,7.59V4H13V11H20V9H16.41L20.91,4.5L19.5,3.09M4,13V15H7.59L3.09,19.5L4.5,20.91L9,16.41V20H11V13H4Z\\\"></path>\\n        </svg></div>\\n        <div class=\\\"btn-wrap\\\" title=\\\"Fullscreen mode\\\"><svg class=\\\"btn-full-screen mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M11,21H3V13H5V17.59L17.59,5H13V3H21V11H19V6.41L6.41,19H11V21Z\\\" />\\n        </svg></div>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_mute_microphone__tooltip\\\"))]}' class=\\\"btn-microphone mdi mdi-24px mdi-microphone\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_switch_video__tooltip\\\"))]}' class=\\\"btn-video mdi mdi-24px mdi-video\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_mute__tooltip\\\"))]}' class=\\\"btn-volume mdi mdi-24px mdi-volume-high\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_share_screen__tooltip\\\"))]}' class=\\\"btn-share-screen mdi mdi-24px mdi-monitor\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_accept_call__tooltip\\\"))]}' class=\\\"btn-accept mdi mdi-24px mdi-phone\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_decline_call__tooltip\\\"))]}' class=\\\"btn-cancel mdi mdi-24px mdi-phone-hangup\\\"></i>\\n    </div>\\n</div>\";","export default \"<div class=\\\"msg-text ground-color-300\\\">\\n    <span title=\\\"{[print(xabber.getString('omemo__alert_enable__tooltip'))]}\\\" class=\\\"btn-enable\\\">{[print(xabber.getString(\\\"omemo__alert_enable__link_text\\\"))]}</span> {[print(xabber.getString(\\\"omemo__alert_enable__text\\\", [jid]))]}</div>\\n<i class=\\\"mdi mdi-22px mdi-close btn-escape\\\"></i>\\n<button class=\\\"btn-enable btn-flat hover-ground-color-500 btn-dark btn-main\\\">{[print(xabber.getString(\\\"omemo__alert_enable__link_text\\\"))]}</button>\";","export default \"<div class=\\\"plyr-player-popup-container\\\">\\n    <div class=\\\"plyr-player-popup-draggable\\\">\\n        <video class=\\\"plyr-player-popup\\\"></video>\\n        <div class=\\\"plyr-player-min-controls-tab\\\">\\n            <div class=\\\"plyr-player-min-controls-buttons\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-minimize-full mdi-svg-template\\\" data-svgname=\\\"player-full\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-play mdi-plyr-play mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-play mdi-plyr-pause mdi-svg-template\\\" data-svgname=\\\"pause\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-mute mdi-mute-plyr mdi-svg-template\\\" data-svgname=\\\"volume-off\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-mute mdi-unmute-plyr mdi-svg-template\\\" data-svgname=\\\"volume-high\\\"></svg>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"plyr-player-control-tab\\\">\\n    <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n    <svg class=\\\"mdi mdi-24px mdi-plyr-toolbar-item mdi-plyr-hide mdi-svg-template\\\" data-svgname=\\\"player-mini\\\"></svg>\\n</div>\";","export default \"<div class=\\\"emoji-font-field\\\">\\n    <input class=\\\"with-gap\\\" name=\\\"{{input_name}}\\\" value=\\\"{{value}}\\\" type=\\\"radio\\\" id=\\\"{{input_id}}\\\" />\\n    <label class=\\\"one-line\\\" for=\\\"{{input_id}}\\\">{{label}}</label>\\n    {[ if (hint) {]}<div class=\\\"emoji-hint\\\">{{hint}}</div>{[}]}\\n    {[ if (value === 'system') {]}<div class=\\\"emoji-hint\\\">{[print(xabber.getString(\\\"settings__menu_item__emoji_font_system_label\\\"))]}</div>{[}]}\\n</div>\";","export default \"<div class=\\\"language-item\\\">\\n    <input class=\\\"with-gap\\\" name=\\\"{{input_name}}\\\" value=\\\"{{value}}\\\" type=\\\"radio\\\" id=\\\"{{input_id}}\\\" />\\n    <label for=\\\"{{input_id}}\\\">{{label}}</label>\\n    {[ if (progress && progress.text) {]}<div class=\\\"translation-progress\\\">{{progress.text}}</div>{[}]}\\n</div>\";","export default \"<p>\\n    <input class=\\\"with-gap\\\" name=\\\"{{input_name}}\\\" value=\\\"{{value}}\\\" type=\\\"radio\\\" id=\\\"{{input_id}}\\\" />\\n    <label for=\\\"{{input_id}}\\\">{{label}}</label>\\n</p>\";","export default \"    <div class=\\\"left-column noselect\\\">\\n        <div class=\\\"main-info-wrap xabber-info-wrap\\\">\\n            <div class=\\\"picture-wrap\\\">\\n                <img class=\\\"logo\\\" src=\\\"{{CLIENT_LOGO}}\\\"/>\\n            </div>\\n            <div class=\\\"name\\\">{{CLIENT_NAME}}</div>\\n            <div class=\\\"version\\\"></div>\\n        </div>\\n        <div class=\\\"settings-tabs-wrap\\\">\\n            {[if (ENABLE_XABBER_ACCOUNT) {]}\\n            <div class=\\\"settings-tab xabber-account-tab offline\\\" data-block-name=\\\"xabber-account\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template xabber-offline-icon\\\" data-svgname=\\\"xabber-offline\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template xabber-online-icon\\\" data-svgname=\\\"xabber-online\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__xabber_account\\\"))]}</div>\\n            </div>\\n            {[}]}\\n            <div class=\\\"settings-tab active\\\" data-block-name=\\\"xmpp-accounts\\\">\\n                <i class=\\\"mdi mdi-24px mdi-lightbulb\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"palette\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"category_interface\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"notifications\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"privacy\\\">\\n                <i class=\\\"mdi mdi-24px mdi-incognito\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"interface_language\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"translate\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}</div>\\n            </div>\\n            {[if (PERSONAL_AREA_URL && Object.keys(PERSONAL_AREA_URL).length) {]}\\n            <a href=\\\"{{PERSONAL_AREA_URL.url}}\\\" target=\\\"_blank\\\"><div class=\\\"link-button settings-tab\\\" data-block-name=\\\"{{PERSONAL_AREA_URL.label}}\\\">\\n                <i class=\\\"mdi mdi-24px mdi-{{PERSONAL_AREA_URL.icon_name}}\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{{PERSONAL_AREA_URL.label}}</div>\\n            </div>\\n            </a>\\n            {[}]}\\n        </div>\\n        <div class=\\\"settings-tabs-bottom-wrap settings-tabs-wrap\\\">\\n            <div class=\\\"settings-tab delete-all-accounts\\\">\\n                <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"button_quit\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"right-column noselect\\\">\\n        <div class=\\\"settings-panel-head\\\">\\n            <span>{[print(xabber.getString(\\\"preference_editor\\\"))]}</span>\\n            <button class=\\\"btn-add-account btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"dialog_add__label_add_account\\\"))]}</button>\\n        </div>\\n\\n        <div class=\\\"panel-content-wrap\\\">\\n            <div class=\\\"panel-content\\\">\\n                {[if (ENABLE_XABBER_ACCOUNT) {]}\\n                <div data-block-name=\\\"\\\" class=\\\"settings-block-wrap xabber-account\\\">\\n                    <div class=\\\"block-header\\\">\\n                        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__xabber_account\\\"))]}</span>\\n                    </div>\\n                </div>\\n                {[}]}\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}' class=\\\"settings-block-wrap xmpp-accounts\\\">\\n                    <div class=\\\"setting xmpp-account-list\\\">\\n                        <div class=\\\"accounts-head-wrap\\\">\\n                            <div class=\\\"accounts-head xmppid-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_xmpp_id\\\"))]}</div>\\n                            <div class=\\\"accounts-head sync-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_sync\\\"))]}</div>\\n                            <div class=\\\"accounts-head enabled-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_enabled\\\"))]}</div>\\n                        </div>\\n                        <span class=\\\"no-accounts-tip\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__text_no_accounts\\\"))]}</span>\\n                        <div class=\\\"move-account-to-bottom droppable\\\"></div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"category_interface\\\"))]}' class=\\\"settings-block-wrap background hidden\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__appearance\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__palette\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"toolbar-main-color-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_main_color\\\"))]}</div>\\n                            <div class=\\\"setting toolbar-main-color-setting field-wrap\\\">\\n                                <div class=\\\"current-main-color-wrap\\\">\\n                                    <div class=\\\"current-main-color ground-color-500\\\"></div>\\n                                    <div class=\\\"color-name\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"toolbar-color-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</div>\\n                            <div class=\\\"setting toolbar-color-setting field-wrap\\\">\\n                                <div class=\\\"selected-color-wrap\\\">\\n                                    <div class=\\\"selected-color-item\\\"></div>\\n                                    <div class=\\\"selected-color-info\\\">\\n                                        <div class=\\\"selected-color-name\\\"></div>\\n                                        <div class=\\\"selected-color-hex\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"account_settings_background\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"background-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_background\\\"))]}</div>\\n                            <div class=\\\"setting background radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-default-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_default\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"repeating-pattern\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-repeating-pattern-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-repeating-pattern-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_pattern\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"image\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-image-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-image-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_image\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                                <div class=\\\"current-background-wrap\\\">\\n                                    <div class=\\\"dark-placeholder\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__button_update\\\"))]}</div>\\n                                    <div class=\\\"current-background\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"blur-setting-wrap\\\">\\n                                <div class=\\\"setting blur-setting field-wrap\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blur_switch\\\"/>\\n                                        <label for=\\\"blur_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_blur\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"blur\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"vignetting-setting-wrap\\\">\\n                                <div class=\\\"setting vignetting-setting field-wrap\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"vignetting_switch\\\"/>\\n                                        <label for=\\\"vignetting_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_vignette\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"vignetting\\\" min=\\\"0\\\" max=\\\"200\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"chat_viewer\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_behavior\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting hotkeys radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"enter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-enter\\\" />\\n                                        <label for=\\\"{{view.cid}}-enter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_enter\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"ctrlenter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-ctrlenter\\\" />\\n                                        <label for=\\\"{{view.cid}}-ctrlenter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_ctrlenter\\\"))]}</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap contact-list\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_contact_list\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"circle-avatar noselect\\\"></div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</div>\\n                        <div class=\\\"setting avatar-shape radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"circle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-circle\\\" />\\n                                        <label for=\\\"{{view.cid}}-circle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_circle\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"squircle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-squircle\\\" />\\n                                        <label for=\\\"{{view.cid}}-squircle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_squircle\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"octagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-octagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-octagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_octagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"hexagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hexagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-hexagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_hexagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"pentagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-pentagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-pentagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_pentagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"rounded\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-rounded\\\" />\\n                                        <label for=\\\"{{view.cid}}-rounded\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_rounded\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"star\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-star\\\" />\\n                                        <label for=\\\"{{view.cid}}-star\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_star\\\"))]}</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}'  class=\\\"settings-block-wrap notifications hidden\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__web_notifications\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting idling field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"idling\\\"/>\\n                                <label for=\\\"idling\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_idling\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"notifications\\\"/>\\n                                <label for=\\\"notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_desktop_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__volume\\\"))]}</div>\\n                        <div class=\\\"setting volume-setting\\\">\\n                            <i class=\\\"mdi mdi-24px mdi-volume-low\\\"></i>\\n                            <form action=\\\"#\\\">\\n                                <div class=\\\"disabled hidden\\\"></div>\\n                                <p class=\\\"range-field\\\">\\n                                    <input type=\\\"range\\\" id=\\\"notifications_volume\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                </p>\\n                            </form>\\n                            <i class=\\\"mdi mdi-24px mdi-volume-high\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting private-notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"private-notifications\\\"/>\\n                                <label for=\\\"private-notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-shifted-block\\\">\\n                            <div class=\\\"setting message-preview private-preview field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_private\\\"/>\\n                                    <label for=\\\"preview_private\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-no\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-no\\\">No sound</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting group-notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"group-notifications\\\"/>\\n                                <label for=\\\"group-notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-shifted-block\\\">\\n                            <div class=\\\"setting message-preview group-preview field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_group\\\"/>\\n                                    <label for=\\\"preview_group\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-no\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-no\\\">No sound</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__calls\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"call\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-call\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-call\\\">Call</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__dialtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"call\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-connecting\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-connecting\\\">Call</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"attention\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-attention\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-attention\\\">Attention</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__attention_calls\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting call-attention field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"call_attention\\\"/>\\n                                <label for=\\\"call_attention\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_call_attention\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"attention\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-attention\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-attention\\\">Attention</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}'  class=\\\"settings-block-wrap privacy hidden\\\">\\n                    <div class=\\\"setting load-media field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"load-media\\\"/>\\n                            <label for=\\\"load-media\\\">{[print(xabber.getString(\\\"settings__section_privacy__load_media\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"setting typing-notifications field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"typing-notifications\\\"/>\\n                            <label for=\\\"typing-notifications\\\">{[print(xabber.getString(\\\"settings__section_privacy__typing_notifications\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"setting mapping-service field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"mapping-service\\\"/>\\n                            <label for=\\\"mapping-service\\\">{[print(xabber.getString(\\\"settings__section_privacy__mapping_service\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}'  class=\\\"settings-block-wrap interface_language hidden\\\">\\n                    <div class=\\\"setting interface-language-setting\\\">\\n                        <div class=\\\"languages-list field radio-field clickable-field\\\">\\n                            <form action=\\\"#\\\">\\n                                <div class=\\\"language-item\\\">\\n                                    <input class=\\\"with-gap\\\" name=\\\"language\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default\\\" />\\n                                    <label for=\\\"{{view.cid}}-default\\\">{[print(xabber.getString(\\\"settings__languages_list___item_default\\\", [languages[xabber.get(\\\"default_language\\\") || 'en']]))]}</label>\\n                                </div>\\n                                {[if (window.navigator.language.indexOf(xabber.get(\\\"default_language\\\")) < 0) {]}\\n                                {[}]}\\n                                {[for (let lang in constants.languages) { if (!lang || lang == xabber.get(\\\"default_language\\\")) continue;]}\\n                                <div class=\\\"language-item\\\">\\n                                    <input class=\\\"with-gap\\\" name=\\\"language\\\" value=\\\"{{lang}}\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-{{lang}}\\\" />\\n                                    <label for=\\\"{{view.cid}}-{{lang}}\\\">{[print(constants.languages[lang]);]}</label>\\n                                    {[let locale = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));]}\\n                                    {[if (locale) { let progress = client_translation_progress[locale];]}<div class=\\\"translation-progress\\\">{[print((progress == 100) ? xabber.getString(\\\"settings__section_interface_language__translation_progress_fully\\\") : xabber.getString(\\\"settings__section_interface_language__translation_progress\\\", [`${progress}%`]))]}</div>{[}]}\\n                                </div>\\n                                {[}]}\\n                            </form>\\n                        </div>\\n                        <div class=\\\"description\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"background-overlay\\\"></div>\\n<div class=\\\"settings-panel\\\">\\n    <div class=\\\"settings-transition-wrap\\\">\\n        <div class=\\\"left-column main-left-column settings-column noselect\\\">\\n            <svg class=\\\"btn-add-account mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"contact-add\\\"></svg>\\n            <div class=\\\"single-account-info-wrap account-settings-panel\\\">\\n                <div class=\\\"single-account-info\\\"></div>\\n            </div>\\n            <div class=\\\"accounts-info-wrap\\\">\\n                <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}</div>\\n                <div class=\\\"settings-divider\\\"></div>\\n                <span class=\\\"no-accounts-tip\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__text_no_accounts\\\"))]}</span>\\n            </div>\\n            <div class=\\\"settings-tabs-wrap global-settings-tabs\\\">\\n                <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"preferences\\\"))]}</div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"background\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"palette\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"category_interface\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__background_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"notifications\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"client\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__notifications_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab disabled\\\" data-block-name=\\\"data_storage\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"database\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__data_storage\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__data_storage_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"privacy\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"group-private\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__privacy_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab disabled\\\" data-block-name=\\\"connection\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__connection\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__connection_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"debug\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bug\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__debug\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__debug_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"interface_language\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"translate\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\"></div>\\n                </div>\\n                <div class=\\\"settings-tab settings-deletion-button delete-all-accounts\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                    </div>\\n                    <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings__button_quit\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"right-column main-right-column settings-column hidden noselect\\\">\\n            <div class=\\\"settings-panel-head\\\">\\n                <i class=\\\"btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <i class=\\\"btn-back-subsettings mdi mdi-24px mdi-arrow-left hidden\\\"></i>\\n                <span class=\\\"settings-panel-head-title\\\">{[print(xabber.getString(\\\"preference_editor\\\"))]}</span>\\n                <div class=\\\"description\\\"></div>\\n            </div>\\n\\n            <div class=\\\"panel-content-wrap\\\">\\n                <div class=\\\"panel-content\\\">\\n\\n                    <div data-header='{[print(xabber.getString(\\\"category_interface\\\"))]}' class=\\\"settings-block-wrap background\\\">\\n                        <div class=\\\"settings-tabs-wrap global-settings-tabs\\\">\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"background\\\" data-block-name=\\\"appearance\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"palette\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__appearance\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__appearance_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"background\\\" data-block-name=\\\"chats\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chat\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"chat_viewer\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__chats_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"background\\\" data-block-name=\\\"avatars\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"star-face\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"background\\\" data-block-name=\\\"emoji_font\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"star-face\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__emoji_font_header\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__appearance\\\"))]}' class=\\\"settings-block-wrap appearance\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_main_color\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"toolbar-main-color-setting-wrap\\\">\\n                                <div class=\\\"setting toolbar-main-color-setting field-wrap\\\">\\n                                    <div class=\\\"client-main-color-picker\\\">\\n                                        <div class=\\\"colors-line\\\">\\n                                            <div class=\\\"client-main-color-item ground-color-red-500 outline-color-red-500\\\" data-value=\\\"red\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-pink-500 outline-color-pink-500\\\" data-value=\\\"pink\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-purple-500 outline-color-purple-500\\\" data-value=\\\"purple\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-deep-purple-500 outline-color-deep-purple-500\\\" data-value=\\\"deep-purple\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-indigo-500 outline-color-indigo-500\\\" data-value=\\\"indigo\\\">\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"colors-line\\\">\\n                                            <div class=\\\"client-main-color-item ground-color-deep-orange-500 outline-color-deep-orange-500\\\" data-value=\\\"deep-orange\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-orange-500 outline-color-orange-500\\\" data-value=\\\"orange\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-cyan-500 outline-color-cyan-500\\\" data-value=\\\"cyan\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-light-blue-500 outline-color-light-blue-500\\\" data-value=\\\"light-blue\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-blue-500 outline-color-blue-500\\\" data-value=\\\"blue\\\">\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"colors-line\\\">\\n                                            <div class=\\\"client-main-color-item ground-color-amber-500 outline-color-amber-500\\\" data-value=\\\"amber\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-lime-500 outline-color-lime-500\\\" data-value=\\\"lime\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-teal-500 outline-color-teal-500\\\" data-value=\\\"teal\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-brown-500 outline-color-brown-500\\\" data-value=\\\"brown\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-blue-grey-500 outline-color-blue-grey-500\\\" data-value=\\\"blue-grey\\\">\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"colors-line\\\">\\n                                            <div class=\\\"client-main-color-item ground-color-light-green-500 outline-color-light-green-500\\\" data-value=\\\"light-green\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-green-500 outline-color-green-500\\\" data-value=\\\"green\\\">\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"toolbar-color-setting-wrap\\\">\\n                                <div class=\\\"setting settings-color-padding toolbar-color-setting field-wrap\\\">\\n                                    <div class=\\\"selected-color-wrap\\\">\\n                                        <div class=\\\"selected-color-item\\\"></div>\\n                                        <div class=\\\"selected-color-info\\\">\\n                                            <div class=\\\"selected-color-name\\\"></div>\\n                                            <div class=\\\"selected-color-hex\\\"></div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_background\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"background-setting-wrap\\\">\\n                                <div class=\\\"setting background radio-button field-wrap\\\">\\n                                    <div class=\\\"field radio-field clickable-field\\\">\\n                                        <form action=\\\"#\\\">\\n                                            <p>\\n                                                <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default-background\\\" />\\n                                                <label for=\\\"{{view.cid}}-default-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_default\\\"))]}</label>\\n                                            </p>\\n                                            <p>\\n                                                <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"repeating-pattern\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-repeating-pattern-background\\\" />\\n                                                <label for=\\\"{{view.cid}}-repeating-pattern-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_pattern\\\"))]}</label>\\n                                            </p>\\n                                            <p>\\n                                                <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"image\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-image-background\\\" />\\n                                                <label for=\\\"{{view.cid}}-image-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_image\\\"))]}</label>\\n                                            </p>\\n                                        </form>\\n                                    </div>\\n                                    <div class=\\\"current-background-wrap\\\">\\n                                        <div class=\\\"dark-placeholder\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__button_update\\\"))]}</div>\\n                                        <div class=\\\"current-background\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_background_effects\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"background-setting-wrap\\\">\\n                                <div class=\\\"blur-setting-wrap\\\">\\n                                    <div class=\\\"setting blur-setting checkbox-setting field-wrap\\\">\\n                                        <div class=\\\"input-field checkbox-field\\\">\\n                                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blur_switch\\\"/>\\n                                            <label for=\\\"blur_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_blur\\\"))]}</label>\\n                                        </div>\\n                                        <form class=\\\"range-form\\\" action=\\\"#\\\">\\n                                            <div class=\\\"disabled hidden\\\"></div>\\n                                            <p class=\\\"range-field range-field-design\\\">\\n                                                <input type=\\\"range\\\" id=\\\"blur\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                                <span class=\\\"thumb\\\"><span class=\\\"value\\\"></span></span>\\n                                            </p>\\n                                        </form>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"vignetting-setting-wrap\\\">\\n                                    <div class=\\\"setting vignetting-setting checkbox-setting field-wrap\\\">\\n                                        <div class=\\\"input-field checkbox-field\\\">\\n                                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"vignetting_switch\\\"/>\\n                                            <label for=\\\"vignetting_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_vignette\\\"))]}</label>\\n                                        </div>\\n                                        <form class=\\\"range-form\\\" action=\\\"#\\\">\\n                                            <div class=\\\"disabled hidden\\\"></div>\\n                                            <p class=\\\"range-field range-field-design\\\">\\n                                                <input type=\\\"range\\\" id=\\\"vignetting\\\" min=\\\"0\\\" max=\\\"200\\\" />\\n                                                <span class=\\\"thumb\\\"><span class=\\\"value\\\"></span></span>\\n                                            </p>\\n                                        </form>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"chat_viewer\\\"))]}' class=\\\"settings-block-wrap chats\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_behavior\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"setting hotkeys radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"enter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-enter\\\" />\\n                                            <label for=\\\"{{view.cid}}-enter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_enter\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"ctrlenter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-ctrlenter\\\" />\\n                                            <label for=\\\"{{view.cid}}-ctrlenter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_ctrlenter\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__idle_timeout\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"setting idling checkbox-setting field-wrap\\\">\\n                                <div class=\\\"input-field  checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"idling\\\"/>\\n                                    <label for=\\\"idling\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_idling\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting idling-time field-wrap\\\">\\n                                <div class=\\\"idling-time-input\\\">\\n                                    <p class=\\\"range-field range-field-design\\\">\\n                                        <input class=\\\"materialize-timer\\\" placeholder='{[print(constants.IDLING_DEFAULT_TIMEOUT)]}' id=\\\"idle_timeout\\\" min=\\\"{[print(constants.IDLING_MINIMAL_TIMEOUT)]}\\\" max=\\\"{[print(constants.IDLING_MAXIMUM_TIMEOUT)]}\\\" value=\\\"{[print(xabber._settings.get('idling_time'))]}\\\" type=\\\"range\\\" name=\\\"idle_timeout\\\">\\n                                        <span class=\\\"thumb\\\"><span class=\\\"value\\\"></span></span>\\n                                    </p>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-clue\\\">{[print(xabber.getString(\\\"settings__menu_item__idle_timeout_clue\\\"))]}</div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"avatars\\\"))]}' class=\\\"settings-block-wrap avatars\\\">\\n                        <div class=\\\"settings-subblock-wrap contact-list\\\">\\n                            <div class=\\\"circle-avatar noselect\\\"></div>\\n                            <div class=\\\"setting avatar-shape radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"circle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-circle\\\" />\\n                                            <label for=\\\"{{view.cid}}-circle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_circle\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"squircle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-squircle\\\" />\\n                                            <label for=\\\"{{view.cid}}-squircle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_squircle\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"octagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-octagon\\\" />\\n                                            <label for=\\\"{{view.cid}}-octagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_octagon\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"hexagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hexagon\\\" />\\n                                            <label for=\\\"{{view.cid}}-hexagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_hexagon\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"pentagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-pentagon\\\" />\\n                                            <label for=\\\"{{view.cid}}-pentagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_pentagon\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"rounded\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-rounded\\\" />\\n                                            <label for=\\\"{{view.cid}}-rounded\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_rounded\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"star\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-star\\\" />\\n                                            <label for=\\\"{{view.cid}}-star\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_star\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__emoji_font_header\\\"))]}' class=\\\"settings-block-wrap emoji_font hidden\\\">\\n                        <div class=\\\"settings-subblock-wrap contact-list\\\">\\n                            <div class=\\\"setting emoji-font radio-button\\\">\\n                                <div class=\\\"emoji-fonts-list field radio-field clickable-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"emoji-font-information-wrap\\\">\\n                            <div class=\\\"emojis-preview no-select\\\">\\n                                <div class=\\\"emoji-preview\\\">😀</div>\\n                                <div class=\\\"emoji-preview\\\">😁</div>\\n                                <div class=\\\"emoji-preview\\\">😂</div>\\n                                <div class=\\\"emoji-preview\\\">😋</div>\\n                                <div class=\\\"emoji-preview\\\">😎</div>\\n                                <div class=\\\"emoji-preview\\\">😃</div>\\n                                <div class=\\\"emoji-preview\\\">😄</div>\\n\\n                                <div class=\\\"emoji-preview\\\">🐱</div>\\n                                <div class=\\\"emoji-preview\\\">🐭</div>\\n                                <div class=\\\"emoji-preview\\\">🐛</div>\\n                                <div class=\\\"emoji-preview\\\">🕸</div>\\n                                <div class=\\\"emoji-preview\\\">🕷</div>\\n                                <div class=\\\"emoji-preview\\\">🐢</div>\\n                                <div class=\\\"emoji-preview\\\">🐑</div>\\n\\n                                <div class=\\\"emoji-preview\\\">🍏</div>\\n                                <div class=\\\"emoji-preview\\\">🍜</div>\\n                                <div class=\\\"emoji-preview\\\">🍈</div>\\n                                <div class=\\\"emoji-preview\\\">🍕</div>\\n                                <div class=\\\"emoji-preview\\\">🥢</div>\\n                                <div class=\\\"emoji-preview\\\">🍰</div>\\n                                <div class=\\\"emoji-preview\\\">☕️</div>\\n\\n                                <div class=\\\"emoji-preview\\\">🏋️‍♂️</div>\\n                                <div class=\\\"emoji-preview\\\">🏏</div>\\n                                <div class=\\\"emoji-preview\\\">🏉</div>\\n                                <div class=\\\"emoji-preview\\\">🥇</div>\\n                                <div class=\\\"emoji-preview\\\">🎬</div>\\n                                <div class=\\\"emoji-preview\\\">⚽️</div>\\n                                <div class=\\\"emoji-preview\\\">🎸</div>\\n\\n                                <div class=\\\"emoji-preview\\\">🚗</div>\\n                                <div class=\\\"emoji-preview\\\">🏎</div>\\n                                <div class=\\\"emoji-preview\\\">🎡</div>\\n                                <div class=\\\"emoji-preview\\\">⛴</div>\\n                                <div class=\\\"emoji-preview\\\">🏛</div>\\n                                <div class=\\\"emoji-preview\\\">🏝</div>\\n                                <div class=\\\"emoji-preview\\\">🗿</div>\\n\\n                                <div class=\\\"emoji-preview\\\">🖱</div>\\n                                <div class=\\\"emoji-preview\\\">📡</div>\\n                                <div class=\\\"emoji-preview\\\">🎁</div>\\n                                <div class=\\\"emoji-preview\\\">📬</div>\\n                                <div class=\\\"emoji-preview\\\">⏰</div>\\n                                <div class=\\\"emoji-preview\\\">📹</div>\\n                                <div class=\\\"emoji-preview\\\">📱</div>\\n                            </div>\\n                            <div class=\\\"preloader-wrap hidden\\\">\\n                                <div class=\\\"preloader-wrapper preloader-20px active \\\">\\n                                    <div class=\\\"spinner-layer\\\">\\n                                        <div class=\\\"circle-clipper left\\\">\\n                                            <div class=\\\"circle\\\"></div>\\n                                        </div>\\n                                        <div class=\\\"gap-patch\\\">\\n                                            <div class=\\\"circle\\\"></div>\\n                                        </div>\\n                                        <div class=\\\"circle-clipper right\\\">\\n                                            <div class=\\\"circle\\\"></div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"emoji-font-attribution-text hidden\\\"></div>\\n                            <div class=\\\"emoji-font-external-url-text hidden\\\">{[print(xabber.getString(\\\"settings__menu_item__emoji_font_external_url_text\\\"))]}</div>\\n                            <div class=\\\"emoji-font-download-text hidden\\\">{[print(xabber.getString(\\\"settings__menu_item__emoji_font_downloading_text\\\"))]}</div>\\n                            <div class=\\\"emoji-font-button-background emoji-font-external-url-button hidden\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"download\\\"></svg>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}' class=\\\"settings-block-wrap notifications\\\">\\n                        <div class=\\\"settings-tabs-wrap global-settings-tabs\\\">\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"web-notifications\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"client\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__web_notifications\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__web_notifications_label\\\"))]}</div>\\n                                <div class=\\\"field notifications-lever clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"chats-notifications\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chat\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats\\\"))]}</div>\\n                                <div class=\\\"settings-block-label capitalized one-line\\\"></div>\\n                                <div class=\\\"field private-notifications clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab settings-tab-big-icon\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"groupchats-notifications\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"group-public\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats\\\"))]}</div>\\n                                <div class=\\\"settings-block-label capitalized one-line\\\"></div>\\n                                <div class=\\\"field group-notifications clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"calls-notifications\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__calls\\\"))]}</div>\\n                                <div class=\\\"settings-block-label capitalized one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__calls_label\\\"))]}</div>\\n                                <div class=\\\"field jingle-calls clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"attention-calls\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"alarm-bell\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__attention_calls\\\"))]}</div>\\n                                <div class=\\\"settings-block-label capitalized one-line\\\"></div>\\n                                <div class=\\\"field call-attention clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__web_notifications\\\"))]}' class=\\\"settings-block-wrap web-notifications\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting notifications checkbox-setting field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"notifications\\\"/>\\n                                    <label for=\\\"notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_desktop_notifications\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name volume-setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__volume\\\"))]}</div>\\n                            <!--<div class=\\\"setting volume-enable checkbox-setting field-wrap\\\">-->\\n                                <!--<div class=\\\"input-field checkbox-field\\\">-->\\n                                    <!--<input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"notifications_volume_enable\\\"/>-->\\n                                    <!--<label for=\\\"notifications_volume_enable\\\">{[print(xabber.getString(\\\"settings__section_notifications__volume_enable\\\"))]}</label>-->\\n                                <!--</div>-->\\n                            <!--</div>-->\\n                            <div class=\\\"setting volume-setting\\\">\\n                                <form class=\\\"range-form\\\" action=\\\"#\\\">\\n                                    <div class=\\\"disabled hidden\\\"></div>\\n                                    <p class=\\\"range-field range-field-design\\\">\\n                                        <input type=\\\"range\\\" id=\\\"notifications_volume\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                        <span style=\\\"display: none\\\" class=\\\"thumb\\\"><span class=\\\"value\\\"></span></span>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__private_chats\\\"))]}' class=\\\"settings-block-wrap chats-notifications\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting message-preview checkbox-setting private-preview field-wrap\\\">\\n                                <div class=\\\"input-field notifications-dependant checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_private\\\"/>\\n                                    <label for=\\\"preview_private\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                    <div class=\\\"desktop-notifications-clue-wrap\\\">\\n                                        {[print(xabber.getString(\\\"settings__section_notifications__desktop_notifications_clue\\\"))]}\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field notification-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__group_chats\\\"))]}' class=\\\"settings-block-wrap groupchats-notifications\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting message-preview checkbox-setting group-preview field-wrap\\\">\\n                                <div class=\\\"input-field notifications-dependant checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_group\\\"/>\\n                                    <label for=\\\"preview_group\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                    <div class=\\\"desktop-notifications-clue-wrap\\\">\\n                                        {[print(xabber.getString(\\\"settings__section_notifications__desktop_notifications_clue\\\"))]}\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field notification-field group-notification-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__calls\\\"))]}' class=\\\"settings-block-wrap calls-notifications\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field ringtone-field\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__section_notifications__dialtone\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field dialtone-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__attention_calls\\\"))]}' class=\\\"settings-block-wrap attention-calls\\\">\\n                        <div class=\\\"settings-subblock-wrap \\\">\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field attention-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}'  class=\\\"settings-block-wrap privacy hidden\\\">\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__device_metadata_sharing\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting device-metadata radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"device_metadata\\\" value=\\\"contacts\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-contacts\\\" />\\n                                        <label for=\\\"{{view.cid}}-contacts\\\">{[print(xabber.getString(\\\"settings__section_privacy__contacts_metadata\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"device_metadata\\\" value=\\\"server\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-server\\\" />\\n                                        <label for=\\\"{{view.cid}}-server\\\">{[print(xabber.getString(\\\"settings__section_privacy__server_metadata\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"device_metadata\\\" value=\\\"none\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-none\\\" />\\n                                        <label for=\\\"{{view.cid}}-none\\\">{[print(xabber.getString(\\\"settings__section_privacy__none_metadata\\\"))]}</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"device-metadata-description\\\"></div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting load-media checkbox-setting field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"load-media\\\"/>\\n                                <label for=\\\"load-media\\\">{[print(xabber.getString(\\\"settings__section_privacy__load_media\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting typing-notifications checkbox-setting field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"typing-notifications\\\"/>\\n                                <label for=\\\"typing-notifications\\\">{[print(xabber.getString(\\\"settings__section_privacy__typing_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting mapping-service checkbox-setting field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"mapping-service\\\"/>\\n                                <label for=\\\"mapping-service\\\">{[print(xabber.getString(\\\"settings__section_privacy__mapping_service\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting desktop-autostart checkbox-setting field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"desktop-autostart\\\"/>\\n                                <label for=\\\"desktop-autostart\\\">{[print(xabber.getString(\\\"settings__autostart\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}'  class=\\\"settings-block-wrap interface_language hidden\\\">\\n                        <div class=\\\"setting radio-button interface-language-setting\\\">\\n                            <div class=\\\"languages-list field radio-field clickable-field\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__debug\\\"))]}'  class=\\\"settings-block-wrap debug hidden\\\">\\n                        <div class=\\\"setting reconnection-popup-log checkbox-setting field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"reconnection-popup-log\\\"/>\\n                                <label for=\\\"reconnection-popup-log\\\">{[print(xabber.getString(\\\"settings__section_debug__reconnect_log\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"toolbar-top\\\">\\n    <div class=\\\"toolbar-item toolbar-logo\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__all_chats\\\"))]}'>\\n        <img class=\\\"logo\\\" src=\\\"{{TOOLBAR_LOGO}}\\\">\\n    </div>\\n</div>\\n\\n<div class=\\\"toolbar-middle\\\">\\n    <div class=\\\"toolbar-item all-chats active\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__all_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-message-text\\\"></i>\\n        <span class=\\\"all-msg-indicator\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item jingle-calls\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__jingle_calls\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-phone\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item mentions\\\" title='{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <svg class=\\\"toolbar-icon mdi mdi-24px mdi-svg-template\\\" viewBox=\\\"0 0 24 24\\\" data-svgname=\\\"bell\\\"></svg>\\n        <span class=\\\"mentions-indicator\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item contacts\\\" title='{[print(xabber.getString(\\\"category_title_contacts\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-account-multiple\\\"></i>\\n    </div>\\n\\n    <div class=\\\"toolbar-item geolocation-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__geolocation_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-compass\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item archive-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__archive_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-archive\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item saved-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__saved_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-bookmark\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"add-something-wrap\\\">\\n        <div class=\\\"toolbar-item dropdown-button add-something\\\" data-activates=\\\"{{view.cid}}-add\\\" title='{[print(xabber.getString(\\\"toolbar__button_add_tooltip\\\"))]}'>\\n            <i class=\\\"toolbar-icon mdi mdi-24px mdi-plus\\\"></i>\\n        </div>\\n\\n        <div id=\\\"{{view.cid}}-add\\\" class=\\\"add-variants dropdown-content noselect\\\">\\n            <div class=\\\"add-variant contact\\\">\\n                <i class=\\\"mdi mdi-20px mdi-account-plus\\\"></i>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"add_contact\\\"))]}</span>\\n            </div>\\n            <div class=\\\"add-variant public-groupchat\\\">\\n                <i class=\\\"mdi mdi-20px mdi-account-multiple-plus\\\"></i>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"create_group\\\"))]}</span>\\n            </div>\\n            <div class=\\\"add-variant incognito-groupchat\\\">\\n                <svg class=\\\"mdi mdi-20px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M13 11A3 3 0 1 0 10 8A3 3 0 0 0 13 11M13 7A1 1 0 1 1 12 8A1 1 0 0 1 13 7M17.11 10.86A5 5 0 0 0 17.11 5.14A2.91 2.91 0 0 1 18 5A3 3 0 0 1 18 11A2.91 2.91 0 0 1 17.11 10.86M13 13C7 13 7 17 7 17V19H19V17S19 13 13 13M9 17C9 16.71 9.32 15 13 15C16.5 15 16.94 16.56 17 17M24 17V19H21V17A5.6 5.6 0 0 0 19.2 13.06C24 13.55 24 17 24 17M8 12H5V15H3V12H0V10H3V7H5V10H8Z\\\" />\\n                </svg>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"create_incognito_group\\\"))]}</span>\\n            </div>\\n            <div class=\\\"add-variant account\\\">\\n                <i class=\\\"mdi mdi-20px mdi-account-circle\\\"></i>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"dialog_add__label_add_account\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"toolbar-bottom\\\">\\n    <div class=\\\"accounts-wrap\\\">\\n        <div class=\\\"accounts\\\">\\n            <div class=\\\"toolbar-item settings-modal hidden\\\" title='{[print(xabber.getString(\\\"settings\\\"))]}'>\\n                <div class=\\\"border\\\"></div>\\n                <i class=\\\"toolbar-icon mdi mdi-24px mdi-settings\\\"></i>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-item-wrap property-variant\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"name-wrap\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\";","export default \"    <div class=\\\"message-input-panel noselect\\\">\\n        <div class=\\\"my-avatar circle-avatar circle-image-fix\\\"></div>\\n        <div class=\\\"message-form\\\">\\n            <div class=\\\"fwd-messages-preview noselect hidden\\\">\\n                <div class=\\\"msg-border ground-color-700\\\">\\n                </div>\\n                <div class=\\\"msg-content\\\">\\n                    <p class=\\\"msg-author text-color-700 one-line\\\"></p>\\n                    <p class=\\\"msg-text one-line\\\"></p>\\n                </div>\\n                <div class=\\\"close-forward\\\">\\n                    <i class=\\\"mdi mdi-20px mdi-close hover-text-color-500\\\"></i>\\n                </div>\\n            </div>\\n            <div class=\\\"message-reference-preview hidden\\\">\\n                <div class=\\\"message-reference-preview-container\\\">\\n                </div>\\n                <div class=\\\"close-attachments\\\">\\n                    <i class=\\\"mdi mdi-20px mdi-close hover-text-color-500\\\"></i>\\n                </div>\\n            </div>\\n            <div class=\\\"input-field input-message\\\">\\n                <div class=\\\"mentions-list\\\"></div>\\n                <div class=\\\"rich-textarea-wrap notranslate\\\">\\n                </div>\\n                <div class=\\\"scrollbar-cover\\\"></div>\\n                <div class=\\\"insert-emoticon\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n                </div>\\n                <div class=\\\"preview-preloader-container hidden\\\" title='{[print(xabber.getString(\\\"chat_bottom__preview_preloader_cancel\\\"))]}'>\\n                    <svg class=\\\"preview-cancel-preloader mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"link\\\"></svg>\\n                </div>\\n                <div class=\\\"emoticons-panel-wrap\\\">\\n                    <div class=\\\"emoticons-panel\\\"></div>\\n                    <div class=\\\"emoji-menu\\\"></div>\\n                </div>\\n            </div>\\n            <div class=\\\"input-voice-message\\\">\\n                <div class=\\\"voice-visualizer\\\"></div>\\n                <div class=\\\"timer\\\">0:00</div>\\n                <div class=\\\"voice-msg-status\\\">{[print(xabber.getString(\\\"chat_bottom__placeholder__cancel_write_voice\\\"))]}</div>\\n            </div>\\n            <div class=\\\"input-toolbar\\\">\\n                <div class=\\\"attach attach-file\\\">\\n                    <input type=\\\"file\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_file\\\"))]}' multiple>\\n                    <i class=\\\"mdi mdi-24px mdi-paperclip\\\"></i>\\n                </div>\\n                <div class=\\\"attach attach-media\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_media\\\"))]}'>\\n                    <i class=\\\"mdi mdi-24px mdi-file-image\\\"></i>\\n                </div>\\n                <div class=\\\"attach attach-location\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_location\\\"))]}'>\\n                    <input type=\\\"text\\\" hidden title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_location\\\"))]}'>\\n                    <i class=\\\"mdi mdi-24px mdi-map-marker\\\"></i>\\n                </div>\\n                <div title=\\\"Format text\\\" class=\\\"format-text\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-format-text\\\"></i>\\n                </div>\\n                <div class=\\\"last-emoticons\\\">\\n                </div>\\n                <div class=\\\"account-info-wrap\\\">\\n                    <div class=\\\"account-jid text-color-700\\\"></div>\\n                    <div class=\\\"account-nickname text-color-700\\\"></div>\\n                    <div class=\\\"account-badge\\\"></div>\\n                    <div class=\\\"account-role ground-color-700\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"send-area\\\">\\n            <i class=\\\"send-message mdi mdi-32px mdi-send text-color-700 hover-text-color-500 hidden\\\"></i>\\n            <i class=\\\"mdi mdi-32px mdi-microphone attach-voice-message text-color-700 hover-text-color-500\\\"></i>\\n            <div class=\\\"ephemeral-timer-time text-color-700\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"blocked-msg hidden\\\">{[print(xabber.getString(\\\"chat_bottom__placeholder__blocked\\\"))]}</div>\\n    <div class=\\\"message-actions-panel noselect hidden\\\">\\n        <div class=\\\"button-wrap reply-message-wrap\\\">\\n            <i class=\\\"action-button reply-message mdi ground-color-700 mdi-reply mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"chat_reply\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"chat_reply\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap forward-message-wrap\\\">\\n            <i class=\\\"action-button forward-message mdi ground-color-700 mdi-forward mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"chat_froward\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"chat_froward\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap copy-message-wrap\\\">\\n            <i class=\\\"action-button copy-message mdi ground-color-700 mdi-content-copy mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_copy\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_copy\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap delete-message-wrap\\\">\\n            <i class=\\\"action-button delete-message mdi ground-color-700 mdi-delete mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"delete\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"delete\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap edit-message-wrap\\\">\\n            <i class=\\\"action-button edit-message mdi ground-color-700 mdi-pencil mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_edit\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_edit\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap pin-message-wrap\\\">\\n            <svg class=\\\"action-button pin-message ground-color-700\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path fill=\\\"#FFF\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\"></path>\\n            </svg>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_pin\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_pin\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap cancel-message-wrap\\\">\\n            <i class=\\\"action-button close-message-panel mdi mdi-close mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div>\\n        </div>\\n    </div>\\n\";","export default \"  <div class=\\\"search-form-header\\\">\\n    <div class=\\\"messages-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"chat__search_messages_panel__placeholder\\\"))]}' autofocus>\\n    </div>\\n    <div class=\\\"text-color-700 btn-cancel-searching\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div>\\n</div>\\n<div class=\\\"pinned-message\\\"></div>\\n<div class=\\\"elements-in-top\\\">\\n    <div class=\\\"subscription-buttons-wrap hidden\\\"></div>\\n    <div class=\\\"chat-day-indicator fixed-day-indicator-wrap hidden\\\"><div class=\\\"fixed-day-indicator\\\"></div></div>\\n</div>\\n<div class=\\\"load-history-feedback hidden\\\"></div>\\n<div class=\\\"participant-messages-header hidden\\\"><div class=\\\"messages-by-header\\\">{[print(xabber.getString(\\\"chat__placeholder_participant_messages__messages_by\\\"))]} <div class=\\\"participant-nickname text-color-700\\\"></div></div><div class=\\\"btn-cancel-selection\\\">{[print(xabber.getString(\\\"close\\\"))]}</div><div class=\\\"text-color-700 btn-retract-messages\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_all\\\"))]}</div></div>\\n<div class=\\\"chat-content\\\">\\n</div>\\n<div class=\\\"chat-notification hidden one-line\\\"></div>\\n<i class=\\\"mdi mdi-36px back-to-unread hidden mdi-chevron-down\\\"><div class=\\\"back-to-unread-counter\\\"></div></i>\\n<i class=\\\"mdi mdi-36px back-to-bottom mdi-chevron-down\\\"></i>\\n\";","export default \"<div class=\\\"search-wrap\\\">\\n    <div class=\\\"search-content\\\">\\n        <div class=\\\"search-form-header block-header\\\">\\n            <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n            <div class=\\\"messages-search-form search-form \\\">\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"chat__search_messages_panel__placeholder\\\"))]}' autofocus>\\n            </div>\\n            <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n        </div>\\n        <div class=\\\"search-messages-content-wrap\\\">\\n            <div class=\\\"search-results\\\">\\n                {[print(xabber.getString(\\\"nothing_was_searched\\\"))]}\\n            </div>\\n            <div class=\\\"preloader-wrap\\\">\\n                <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"messages-count\\\">\\n            </div>\\n            <div class=\\\"chat-content\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"chat-body-content-placeholder-text no-select\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n\";","export default \"<div class=\\\"chat-head-details\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"contact-status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"chat-head-info-buttons-container\\\">\\n    <div class=\\\"contact-info\\\">\\n        <div class=\\\"contact-name-wrap\\\">\\n            <i class=\\\"mdi encrypted-icon mdi-14px mdi-lock\\\"></i>\\n            <p class=\\\"contact-name one-line\\\"></p>\\n        </div>\\n        <p class=\\\"contact-status-message one-line\\\"></p>\\n    </div>\\n    <div class=\\\"chat-tools-wrap\\\">\\n        <div class=\\\"chat-tool chat-tool-player\\\">\\n            <div class=\\\"chat-tool-player-containter\\\">\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-previous-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-previous mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-play-pause-plyr\\\">\\n                    <i class=\\\"mdi mdi-play mdi-24px\\\"></i>\\n                    <i class=\\\"mdi mdi-pause mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-next-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-next mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-popup-plyr\\\">\\n                    <img class=\\\"player-poster hidden\\\">\\n                    <svg class=\\\"mdi mdi-32px mdi-player-type-icon mdi-svg-template\\\" data-svgname=\\\"video\\\"></svg>\\n                    <div class=\\\"voice-message-player-avatar circle-avatar hidden\\\"></div>\\n                </div>\\n                <div class=\\\"chat-tool chat-player-duration chat-tool-plyr-controls\\\">\\n                    <div class=\\\"chat-head-player-title one-line\\\"><div class=\\\"chat-head-player-title-text\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</div></div>\\n                    <div class=\\\"chat-head-player-title-bottom-container\\\">\\n                        <span class=\\\"chat-head-player-type one-line\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</span><span class=\\\"chat-head-player-type-dot\\\"> •</span>\\n                        <span class=\\\"chat-head-player-current-time\\\">0:00</span> /\\n                        <span class=\\\"chat-head-player-total-time\\\">0:00</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-stop-plyr\\\">\\n                    <i class=\\\"mdi mdi-close mdi-16px\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"chat-tool btn-show-fingerprints\\\">\\n            <i class=\\\"mdi mdi-lock mdi-24px\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-jingle-message\\\">\\n            <i class=\\\"mdi mdi-phone mdi-24px\\\"></i>\\n        </div>\\n        <!--<div class=\\\"chat-tool btn-set-status\\\">\\n            <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <g stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\">\\n                    <rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"/>\\n                    <path d=\\\"M20,4 C21.1045695,4 22,4.8954305 22,6 L22,16 C22,17.1045695 21.1045695,18 20,18 L16,18 L12,22 L8,18 L4,18 C2.8954305,18 2,17.1045695 2,16 L2,6 C2,4.8954305 2.8954305,4 4,4 L20,4 Z M16,12 L6,12 L6,14 L16,14 L16,12 Z M18,8 L6,8 L6,10 L18,10 L18,8 Z\\\" id=\\\"tooltip-variant\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\"></path>\\n                </g>\\n            </svg>\\n        </div>-->\\n        <div class=\\\"chat-tool btn-search-messages\\\">\\n            <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-more\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"{{view.cid}}-more\\\" class=\\\"chat-head-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-chat-pin\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-archive-chat\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-notifications active-hover\\\" data-activates=\\\"{{view.cid}}-mute-more\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"ephemeral-timer-dropdown active-hover\\\" data-activates=\\\"select-ephemeral-timer-{{view.cid}}\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"ephemeral_timer_menu\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-call-attention\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"call_attention\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-export-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"export_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-invite-users\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_invite\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-start-encryption\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_start_encrypted_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-open-encrypted-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_open_encrypted_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-open-regular-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_open_regular_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-delete-chat\\\">\\n                <span class=\\\"one-line text-color-500\\\">{[print(xabber.getString(\\\"delete_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-clear-history\\\">\\n                <span class=\\\"one-line text-color-500\\\">{[print(xabber.getString(\\\"clear_history\\\"))]}</span>\\n            </li>\\n        </ul>\\n        <ul id=\\\"{{view.cid}}-mute-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n            </li>\\n        </ul>\\n        <ul id=\\\"select-ephemeral-timer-{{view.cid}}\\\" class=\\\"ephemeral-timer-dropdown-content dropdown-content noselect\\\">\\n            <li class=\\\"btn-set-ephemeral-timer\\\" data-value=\\\"\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"ephemeral_timer_none\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-set-ephemeral-timer\\\" data-value=\\\"5\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"ephemeral_timer_5\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-set-ephemeral-timer\\\" data-value=\\\"10\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"ephemeral_timer_10\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-set-ephemeral-timer\\\" data-value=\\\"15\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"ephemeral_timer_15\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-set-ephemeral-timer\\\" data-value=\\\"30\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"ephemeral_timer_30\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-set-ephemeral-timer\\\" data-value=\\\"60\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"ephemeral_timer_60\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-set-ephemeral-timer\\\" data-value=\\\"300\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"ephemeral_timer_300\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-set-ephemeral-timer\\\" data-value=\\\"600\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"ephemeral_timer_600\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-set-ephemeral-timer\\\" data-value=\\\"900\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"ephemeral_timer_900\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"recent-chat-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <i class=\\\"mdi encrypted-icon mdi-14px mdi-lock\\\"></i>\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <i class=\\\"mdi muted-icon mdi-14px mdi-bell-off\\\"></i>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n</div>\\n<div class=\\\"chat-states\\\">\\n    <div class=\\\"chat-item-notifications-wrap\\\">\\n        <span class=\\\"msg-chat-error hidden\\\">!</span>\\n        <span class=\\\"msg-incoming-subscription hidden\\\">\\n            <svg class=\\\"mdi mdi-12px mdi-svg-template\\\" data-svgname=\\\"plus\\\"></svg>\\n        </span>\\n        <span class=\\\"msg-counter hidden\\\"></span>\\n        <i class=\\\"msg-delivering-state mdi mdi-16px hidden\\\"></i>\\n        <i class=\\\"pinned-icon\\\">\\n            <svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n                <g id=\\\"icon/material/pinned-circle-small\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n                    <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n                    <path d=\\\"M12,3 C16.9705627,3 21,7.02943725 21,12 C21,16.9705627 16.9705627,21 12,21 C7.02943725,21 3,16.9705627 3,12 C3,7.02943725 7.02943725,3 12,3 Z M12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 Z M14,6.5 L17.5,9.5 L16.5,10.5 L16,10 L14.25,13.25 L15.25,14.75 L14,16 L11.5,13.5 L8.75,16.25 L7.75,16.25 L7.75,15.25 L10.5,12.5 L8,10 L9.25,8.75 L10.75,9.75 L13.5,8 L13,7.5 L14,6.5 Z\\\" id=\\\"xabber:pinned-small\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n                </g>\\n            </svg>\\n        </i>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"chat_list__placeholder\\\"))]}</div>\\n\";","export default \"<div class=\\\"recent-chats-panel noselect\\\">\\n    <div class=\\\"chats-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"chat-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"pinned-chat-list item-list\\\">\\n        </div>\\n        <div class=\\\"chat-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"load-chats-feedback hidden\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n    </div>\\n    <div class=\\\"read-all-button hidden\\\">{[print(xabber.getString(\\\"mark_all_as_read_button\\\"))]}</div>\\n</div>\\n\";","export default \"<div class=\\\"field clickable-field {{className}} switch normal\\\">\\n    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{id}}\\\">\\n    <label for=\\\"{{id}}\\\"></label>\\n</div>\";","export default \"<div>\\n    <i class=\\\"mdi mdi-36px mdi-alert-circle\\\"></i>\\n</div>\\n<div class=\\\"warning-message\\\">{{message}}</div>\\n<button class=\\\"btn-manage-devices btn-flat btn-main btn-dark hover-ground-color-amber-300\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\";","export default \"<div class=\\\"warning-wrap\\\">\\n    <p class=\\\"warning-message\\\">{{message}}</p>\\n    <button class=\\\"btn-manage-devices btn-flat btn-main btn-dark ground-color-{{color}}-100 hover-ground-color-{{color}}-300\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"ephemeral_timer_modal__header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div data-value=\\\"\\\" class=\\\"btn-set-ephemeral-timer\\\">{[print(xabber.getString(\\\"ephemeral_timer_none\\\"))]}</div>\\n        <div data-value=\\\"5\\\" class=\\\"btn-set-ephemeral-timer\\\">{[print(xabber.getString(\\\"ephemeral_timer_5\\\"))]}</div>\\n        <div data-value=\\\"10\\\" class=\\\"btn-set-ephemeral-timer\\\">{[print(xabber.getString(\\\"ephemeral_timer_10\\\"))]}</div>\\n        <div data-value=\\\"15\\\" class=\\\"btn-set-ephemeral-timer\\\">{[print(xabber.getString(\\\"ephemeral_timer_15\\\"))]}</div>\\n        <div data-value=\\\"30\\\" class=\\\"btn-set-ephemeral-timer\\\">{[print(xabber.getString(\\\"ephemeral_timer_30\\\"))]}</div>\\n        <div data-value=\\\"60\\\" class=\\\"btn-set-ephemeral-timer\\\">{[print(xabber.getString(\\\"ephemeral_timer_60\\\"))]}</div>\\n        <div data-value=\\\"300\\\" class=\\\"btn-set-ephemeral-timer\\\">{[print(xabber.getString(\\\"ephemeral_timer_300\\\"))]}</div>\\n        <div data-value=\\\"600\\\" class=\\\"btn-set-ephemeral-timer\\\">{[print(xabber.getString(\\\"ephemeral_timer_600\\\"))]}</div>\\n        <div data-value=\\\"900\\\" class=\\\"btn-set-ephemeral-timer\\\">{[print(xabber.getString(\\\"ephemeral_timer_900\\\"))]}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"export_history\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"export-history-progress-bar\\\">\\n            <progress value=\\\"75\\\" min=\\\"0\\\" max=\\\"100\\\" style=\\\"visibility:hidden;height:0;width:0;\\\"></progress>\\n            <div class=\\\"export-history-msg-count\\\"></div>\\n            <i class=\\\"mdi mdi-stop mdi-72px\\\"></i>\\n        </div>\\n        <div class=\\\"file-format-choice\\\">\\n            <div class=\\\"file-format-choice-label\\\">{[print(xabber.getString(\\\"export_history_file_format_label\\\"))]}</div>\\n            <div class=\\\"field radio-field clickable-field\\\">\\n                <form action=\\\"#\\\">\\n                    <p>\\n                        <input class=\\\"with-gap\\\" name=\\\"file_format\\\" value=\\\"txt\\\" type=\\\"radio\\\" id=\\\"file-format-txt\\\" />\\n                        <label for=\\\"file-format-txt\\\">TXT</label>\\n                    </p>\\n                    <p>\\n                        <input class=\\\"with-gap\\\" name=\\\"file_format\\\" value=\\\"csv\\\" type=\\\"radio\\\" id=\\\"file-format-csv\\\" />\\n                        <label for=\\\"file-format-csv\\\">CSV</label>\\n                    </p>\\n                </form>\\n            </div>\\n        </div>\\n        <div class=\\\"date-format-choice\\\">\\n            <div class=\\\"date-format-choice-label\\\">{[print(xabber.getString(\\\"export_history_date_format_label\\\"))]}</div>\\n            <div class=\\\"field radio-field clickable-field\\\">\\n                <form action=\\\"#\\\">\\n                    <p>\\n                        <input class=\\\"with-gap\\\" name=\\\"date_format\\\" value=\\\"iso\\\" type=\\\"radio\\\" id=\\\"date-format-iso\\\" />\\n                        <label for=\\\"date-format-iso\\\">YYYY-MM-DD</label>\\n                    </p>\\n                    <p>\\n                        <input class=\\\"with-gap\\\" name=\\\"date_format\\\" value=\\\"eur\\\" type=\\\"radio\\\" id=\\\"date-format-eur\\\" />\\n                        <label for=\\\"date-format-eur\\\">DD.MM.YYYY</label>\\n                    </p>\\n                    <p>\\n                        <input class=\\\"with-gap\\\" name=\\\"date_format\\\" value=\\\"usa\\\" type=\\\"radio\\\" id=\\\"date-format-usa\\\" />\\n                        <label for=\\\"date-format-usa\\\">MM/DD/YYYY</label>\\n                    </p>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-confirm btn-flat btn-main\\\">{[print(xabber.getString(\\\"export_file\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"close\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header noselect\\\">\\n    <div class=\\\"panel-header\\\">\\n        <span class=\\\"header\\\">{[print(xabber.getString(\\\"dialog_forward_message__header\\\"))]}</span>\\n    </div>\\n</div>\\n<div class=\\\"modal-content noselect\\\">\\n    <div class=\\\"chats-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"chat-list-wrap\\\">\\n        <div class=\\\"pinned-chat-list forward-chats-list\\\">\\n        </div>\\n        <div class=\\\"chat-list forward-chats-list\\\">\\n        </div>\\n        <div class=\\\"contact-list forward-chats-list\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"error hidden\\\">{[print(xabber.getString(\\\"placeholder_no_matches\\\"))]}</div>\\n</div>\\n\";","export default \"<div class=\\\"modal-header\\\">\\n    <span>{[print(xabber.getString(\\\"create_groupchat\\\"))]}</span>\\n    <div class=\\\"account-dropdown-wrap\\\" data-activates=\\\"select-account-for-creating-groupchat\\\">\\n        <div class=\\\"dropdown-button\\\">\\n            <div class=\\\"account-item-wrap\\\">\\n                <div class=\\\"circle-avatar noselect\\\">\\n                    <img>\\n                </div>\\n            </div>\\n        </div>\\n        <div id=\\\"select-account-for-creating-groupchat\\\" class=\\\"dropdown-content noselect\\\">\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"row name-field\\\">\\n        <div class=\\\"input-field input-group-chat-name\\\">\\n            <label for=\\\"new_chat_name\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</label>\\n            <input id=\\\"new_chat_name\\\" type=\\\"text\\\" name=\\\"chat_name\\\" placeholder='{[print(xabber.getString(\\\"group_is_empty\\\"))]}' required>\\n        </div>\\n    </div>\\n    <div class=\\\"row jid-field\\\">\\n        <label for=\\\"new_chat_jid\\\">{[print(xabber.getString(\\\"groupchat_xmpp_jid\\\"))]}</label>\\n        <div class=\\\"input-field input-group-chat-jid\\\">\\n            <input id=\\\"new_chat_jid\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat_xmpp_jid\\\"))]}' name=\\\"chat_jid\\\">\\n            <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                <div class=\\\"select-xmpp-server\\\">\\n                    <div data-activates=\\\"select-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                    <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                        <input id=\\\"new_chat_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"chat_domain\\\">\\n                    </div>\\n                    <div data-activates=\\\"select-xmpp-server\\\" class=\\\"caret\\\">\\n                        <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                        <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                    </div>\\n                </div>\\n                <div id=\\\"select-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                    <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        <span class=\\\"errors\\\"></span>\\n    </div>\\n    <div class=\\\"row incognito-field hidden\\\">\\n        <i class=\\\"field-icon mdi mdi-24px mdi-incognito\\\"></i>\\n        <div class=\\\"property-field incognito-dropdown-wrap\\\">\\n           <div class=\\\"public-item-wrap property-wrap\\\"><div data-value=\\\"public\\\" class=\\\"property-value\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_public\\\"))]}</div></div>\\n           <div class=\\\"incognito-item-wrap property-wrap\\\"><div data-value=\\\"incognito\\\" class=\\\"property-value\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_incognito\\\"))]}</div></div>\\n        </div>\\n    </div>\\n    <div class=\\\"row group-radio-fields\\\">\\n        <div class=\\\"property-radio-field membership-dropdown-wrap\\\">\\n            <div class=\\\"membership-item-wrap property-wrap\\\">\\n                <div class=\\\"property-radio-label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n            </div>\\n            <div class=\\\"property-radio-wrap\\\">\\n                <div class=\\\"property-radio\\\">\\n                    <input checked id=\\\"membership_open\\\" data-value=\\\"open\\\" name=\\\"group_membership\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"membership-label\\\" for=\\\"membership_open\\\">{[print(xabber.getString(\\\"groupchat_membership_type_open\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"membership_member_only\\\" data-value=\\\"member-only\\\" name=\\\"group_membership\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"membership-label\\\" for=\\\"membership_member_only\\\">{[print(xabber.getString(\\\"groupchat_membership_type_members_only\\\"))]}</label>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"property-radio-field global-dropdown-wrap\\\">\\n            <div class=\\\"global-item-wrap property-wrap\\\">\\n                <div class=\\\"property-radio-label\\\">{[print(xabber.getString(\\\"groupchat_index\\\"))]}</div>\\n            </div>\\n            <div class=\\\"property-radio-wrap\\\">\\n                <div class=\\\"property-radio\\\">\\n                    <input checked id=\\\"index_none\\\" data-value=\\\"none\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_none\\\">{[print(xabber.getString(\\\"groupchat_index_type_none\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"index_local\\\" data-value=\\\"local\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_local\\\">{[print(xabber.getString(\\\"groupchat_index_type_local\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"index_global\\\" data-value=\\\"global\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_global\\\">{[print(xabber.getString(\\\"groupchat_index_type_global\\\"))]}</label>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row description-field\\\">\\n        <div class=\\\"input-field input-message\\\">\\n            <label class=\\\"description-label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</label>\\n            <div class=\\\"rich-textarea-wrap notranslate\\\">\\n                <div class=\\\"rich-textarea\\\" tabindex=\\\"2\\\" contenteditable=\\\"\\\"></div>\\n                <div class=\\\"placeholder\\\">{[print(xabber.getString(\\\"groupchat_example_description\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"create\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header noselect\\\">\\n    <div class=\\\"panel-header\\\">\\n        <span class=\\\"header\\\">{[print(xabber.getString(\\\"groupchat_invite_users\\\"))]}</span>\\n    </div>\\n</div>\\n<div class=\\\"modal-content noselect\\\">\\n    <div class=\\\"chats-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"contacts-list-wrap\\\">\\n    </div>\\n    <div class=\\\"error hidden\\\">{[print(xabber.getString(\\\"placeholder_no_matches\\\"))]}</div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"invitation-reason-wrap hidden\\\">\\n        <textarea class=\\\"text-field textarea-glow input-glow account-glow\\\" type=\\\"text\\\" cols=\\\"10\\\" rows=\\\"5\\\" placeholder='{[print(xabber.getString(\\\"invitation_text_placeholder\\\"))]}' id=\\\"invitation_text\\\" name=\\\"invitation_text\\\"></textarea>\\n    </div>\\n    <button class=\\\"btn-flat btn-main btn-invitation-reason\\\">{[print(xabber.getString(\\\"Invitation_reason_button_text\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-add\\\"><span class=\\\"counter hidden\\\"></span>{[print(xabber.getString(\\\"groupchat_invite\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-dark btn-main btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <span class=\\\"errors\\\"></span>\\n</div>\";","export default \"<div class=\\\"list-item mention-item\\\" data-jid=\\\"{{jid}}\\\" data-id=\\\"{{id}}\\\" data-nickname=\\\"{{nickname}}\\\">\\n    <div class=\\\"circle-avatar\\\"></div>\\n    <div class=\\\"participant-info\\\">\\n        <span class=\\\"one-line nickname\\\">{{nickname}}</span>\\n        <span class=\\\"one-line jid\\\">{{jid}}</span>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content full-pinned-message\\\"></div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-content\\\">\\n        <div id=\\\"map\\\" class=\\\"text-color-700\\\" style=\\\"width:800px; height:490px;\\\" data-type='map'></div>\\n        <div class=\\\"form-group\\\">\\n                <textarea id=\\\"output\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n                <textarea id=\\\"lat\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n                <textarea id=\\\"lon\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"recent-chat-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n</div>\\n\";","export default \"{[ if (blob) {]}\\n<div class=\\\"attached-image-preview message-reference-preview-attached message-reference-preview-item-file{[ if (file.is_errored) {]} attached-errored{[}]}\\\" title='{[ if (file.is_errored) {]}{[print(xabber.getString(\\\"chat_bottom__attached_file_error_hint\\\"))]}{[}]}' data-id=\\\"{{uid}}\\\">\\n    <div class=\\\"attached-file-size one-line\\\">{{filesize}}</div>\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n    {[ if (blob) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{blob}}\\\" src=\\\"{{blob}}\\\">\\n    {[}]}\\n</div>\\n{[} else {]}\\n<div class=\\\"attached-file-preview message-reference-preview-attached message-reference-preview-item-file{[ if (file.is_errored) {]} attached-errored{[}]}\\\" title='{[ if (file.is_errored) {]}{[print(xabber.getString(\\\"chat_bottom__attached_file_error_hint\\\"))]}{[}]}' data-id=\\\"{{uid}}\\\">\\n    <div class=\\\"attached-file-text\\\">\\n        <div class=\\\"attached-file-name one-line\\\">{{file.name}}</div>\\n        <div class=\\\"attached-file-size one-line\\\">{{filetype}}, {{filesize}}</div>\\n    </div>\\n    <i class=\\\"mdi attached-file-icon {{typeicon}}\\\"></i>\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n</div>\\n{[}]}\";","export default \"<div class=\\\"one-file-wrap link-file\\\">\\n    <i class=\\\"mdi mdi-play no-uploaded\\\"></i>\\n    <i class=\\\"mdi mdi-pause\\\"></i>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>{[ if (duration) { ]}, {{duration}}{[ } ]},  <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{sources[0]}}\\\" class=\\\"file-link-download\\\">{[print(xabber.getString(\\\"action_download\\\"))]}</a>\\n        <a class=\\\"voice-message-play\\\">Play</a>\\n    </div>\\n</div>\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div class=\\\"chat-message system auth-request\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"><img></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}<span class=\\\"accept-request\\\">Accept</span><span class=\\\"decline-request\\\">Decline</span><span class=\\\"block-request\\\">Block</span></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"one-file-wrap link-file\\\">\\n    <i class=\\\"mdi {{mdi_icon}}\\\"></i>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>{[ if (is_audio && duration) { ]}, {{duration}}{[ } ]},  <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{sources[0]}}\\\" class=\\\"file-link-download\\\">{[print(xabber.getString(\\\"action_download\\\"))]}</a>\\n    </div>\\n</div>\";","export default \"<div class=\\\"one-file-wrap link-file unuploaded-file\\\" data-upload-file-id=\\\"{{upload_id}}\\\">\\n    <div class=\\\"file-loading-container\\\"></div>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>, <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <div class=\\\"circle-percent-text\\\">0%</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"chat-message main {{classlist}} file-upload noselect\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content chat-main-upload-media\\\">\\n        </div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n        {[ if (is_sender) { ]}\\n        <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n        <div id=\\\"retry-send-msg-{{msgid}}\\\" class=\\\"dropdown-content retry-send-message noselect\\\">\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 repeat-upload\\\">{[print(xabber.getString(\\\"resend\\\"))]}</div>\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 edit-upload{[ if (encrypted) { ]} hidden{[ } ]}\\\">{[print(xabber.getString(\\\"edit\\\"))]}</div>\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 btn-delete-message\\\">{[print(xabber.getString(\\\"delete\\\"))]}</div>\\n        </div>\\n        {[ } ]}\\n        {[ if (ephemeral_timer_text) { ]}\\n            <div class=\\\"ephemeral-timer-msg-time text-color-700{[ if (is_sender) { ]} ephemeral-timer-own-msg-time{[ } ]}\\\">{{ephemeral_timer_text}}</div>\\n        {[ } ]}\\n        <div class=\\\"msg-copy-link\\\" title='{[print(xabber.getString(\\\"action_copy_link\\\"))]}'><i class=\\\"mdi mdi-link-variant\\\" data-image=\\\"{{is_image}}\\\"></i></div>\\n        <div class=\\\"msg-copy-location\\\"  title='{[print(xabber.getString(\\\"action_copy_location\\\"))]}'><div class=\\\"msg-copy-location-content\\\" data-location=\\\"false\\\"></div></div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"fwd-message\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-from-id=\\\"{{from_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"fwd-left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"fwd-msg-author-wrap\\\">\\n            <div class=\\\"fwd-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if ((role)&&(role != 'Member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n            <div class=\\\"msg-time selectable-text one-line\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content\\\"></div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message system auth-request\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}<div><span class=\\\"accept-request-group\\\">Accept</span><span class=\\\"decline-request-group\\\">Decline</span><span class=\\\"block-request-group\\\">Block</span></div></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-2\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-2\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-3 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"template-for-3 minor-images\\\"><div class=\\\"img-content-template template-for-3 minor\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-3 minor\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-4 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-4 minor-images\\\">\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-5\\\"><div class=\\\"img-content-wrap template-for-5 main\\\"><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\\n<div class=\\\"img-content-wrap template-for-5 minor-images\\\"><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-6\\\"><div class=\\\"img-content-wrap template-for-6 main-row\\\"><div class=\\\"img-content-template template-for-6 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-6 minor-1\\\"><div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\\n<div class=\\\"template-for-6 minor-2\\\"><div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6 last-image\\\"><img title=\\\"{{images[5].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[5].sources[0]}}\\\">\\n{[ if (images.length > 6) { ]}<span class=\\\"image-counter\\\"></span>{[ for (var i=6; i < images.length; i++) {]} <div class=\\\"img-content-template hidden\\\"><img title=\\\"{{images[i].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[i].sources[0]}}\\\"></div> {[}} ]}</div></div></div>\\n\";","export default \"<div class=\\\"images-details\\\">\\n    <div class=\\\"images-details-header\\\">\\n        {[print(xabber.getString(\\\"privacy_risk_images_header\\\"))]}\\n    </div>\\n    {[img_information.images.forEach((image) => {]}\\n        <div class=\\\"image-details\\\">\\n            {{image.name}} <span>{{image.pretty_size}}, {{image.height}}x{{image.width}}</span>\\n        </div>\\n    {[})]}\\n</div>\\n<div class=\\\"image-servers-details\\\">\\n    {[if (img_information.servers.length === 1) {]}\\n        <div class=\\\"images-details-header\\\">\\n            {[print(xabber.getString(\\\"privacy_risk_server_header\\\", [img_information.servers[0]]))]}\\n        </div>\\n    {[} else {]}\\n        <div class=\\\"images-details-header\\\">\\n            {[print(xabber.getString(\\\"privacy_risk_servers_header\\\"))]}\\n        </div>\\n        {[img_information.servers.forEach((server) => {]}\\n            <div class=\\\"server-details\\\">\\n                {{server}}\\n            </div>\\n        {[})]}\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"link-message-reference message-reference-preview-attached message-reference-preview-item {[ if (item.image && item.video_url) {]}link-message-reference-video{[}]}\\\" data-original-url=\\\"{{item.original_text}}\\\">\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n    {[ if (item.image && item.video_url) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{item.image}}\\\" src=\\\"{{item.image}}\\\">\\n    <div class=\\\"attached-site-name one-line\\\">{{item.site}}</div>\\n    {[} else if (item.image) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{item.image}}\\\" src=\\\"{{item.image}}\\\">\\n    <div class=\\\"attached-text-block\\\">\\n        <div class=\\\"link-site one-line\\\">{{domain}}</div>\\n        {[if (item.description) {]}\\n            <div class=\\\"link-title{[if (item.description.length <= 25) {]} link-title-short{[}]}\\\">{{item.description}}</div>\\n        {[} else {]}\\n            <div class=\\\"link-title{[if (item.title.length <= 25) {]} link-title-short{[}]}\\\">{{item.title}}</div>\\n        {[}]}\\n    </div>\\n    {[} else {]}\\n    <div class=\\\"attached-text-block\\\">\\n        <div class=\\\"link-site one-line\\\">{{domain}}</div>\\n        {[if (item.description) {]}\\n            <div class=\\\"link-title{[if (item.description.length <= 29) {]} link-title-short{[}]}\\\">{{item.description}}</div>\\n        {[} else {]}\\n            <div class=\\\"link-title{[if (item.title.length <= 29) {]} link-title-short{[}]}\\\">{{item.title}}</div>\\n        {[}]}\\n    </div>\\n    {[}]}\\n</div>\";","export default \"{[ if (is_video) {]}\\n        <div class=\\\"link-message-reference message-reference-preview-item message-reference-preview-item-big-image\\\">\\n            <div class=\\\"embed-video\\\">\\n                <div class=\\\"plyr-video-container\\\" data-provider=\\\"{{provider}}\\\" data-src=\\\"{{video_url}}\\\">\\n                    <div class=\\\"plyr-video-play\\\">\\n                        <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n                    </div>\\n                    <div class=\\\"plyr-video-playing\\\">\\n                        <svg class=\\\"mdi mdi-48px mdi-svg-template\\\" data-svgname=\\\"player-float\\\"></svg>\\n                        <div class=\\\"plyr-video-playing-hint\\\">{[print(xabber.getString(\\\"chat_message_video_playing_hint\\\"))]}</div>\\n                    </div>\\n                    {[ if (image) {]}\\n                    <img class=\\\"plyr-video-poster\\\" src=\\\"{{image}}\\\" onerror=\\\"this.style.display='none'\\\">\\n                    {[}]}\\n                </div>\\n            </div>\\n            <a href=\\\"{{original_text}}\\\" target=”_blank” class=\\\"msg-hyperlink\\\">\\n                <div class=\\\"attached-text-block\\\">\\n                    <div class=\\\"link-title one-line\\\">{{domain}}</div>\\n                    <div class=\\\"link-site-title\\\">{{title}}</div>\\n                    <div class=\\\"link-description\\\">{{description}}</div>\\n                </div>\\n            </a>\\n        </div>\\n{[} else {]}\\n    <a href=\\\"{{original_text}}\\\" target=”_blank” class=\\\"msg-hyperlink\\\">\\n        <div class=\\\"link-message-reference message-reference-preview-item{[if (image_width && image_width >= 590 || image_height && image_height < 80 || (1.5 * image_height) < image_width) {]} message-reference-preview-item-big-image{[}]}\\\">\\n            {[ if (image) {]}\\n            <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{image}}\\\" data-width=\\\"{{image_width}}\\\" data-height=\\\"{{image_height}}\\\" src=\\\"{{image}}\\\">\\n            {[}]}\\n            <div class=\\\"attached-text-block\\\">\\n                <div class=\\\"link-title one-line\\\">{{domain}}</div>\\n                <div class=\\\"link-site-title\\\">{{title}}</div>\\n                <div class=\\\"link-description\\\">{{description}}</div>\\n            </div>\\n        </div>\\n    </a>\\n{[}]}\";","export default \"<div class=\\\"circle-wrap\\\">\\n    <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"preloader-circular\\\" viewBox=\\\"27 27 54 54\\\">\\n        <circle class=\\\"preloader-path-new\\\" cx=\\\"54\\\" cy=\\\"54\\\" r=\\\"24\\\" fill=\\\"none\\\" stroke-miterlimit=\\\"10\\\"></circle>\\n    </svg>\\n    <div class=\\\"inside-circle\\\">\\n        <i class=\\\"mdi mdi-center-loading-indicator mdi-close mdi-20px\\\"></i>\\n        <i class=\\\"mdi mdi-alert-circle mdi-32px hidden\\\"></i>\\n    </div>\\n    <div class=\\\"circle-percent-text\\\">0%</div>\\n</div>\";","export default \"<div id=\\\"{{id}}\\\" class=\\\"text-color-700\\\" style=\\\"width:350px; height:300px;pointer-events: none;\\\" data-type='map'><img id=\\\"img_{{ id }}\\\" ></div>\";","export default \"<div class=\\\"chat-message main {{classlist}}\\\"\\n     {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]}\\n     {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]}\\n     data-time=\\\"{{timestamp}}\\\"\\n     data-uniqueid=\\\"{{unique_id}}\\\"\\n     {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]}\\n     data-from=\\\"{{from_jid}}\\\"\\n     {[if (device_id) {]} data-device-id=\\\"{{device_id}}\\\" {[}]}\\n>\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content\\\"></div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}{[ if (device_id) {]}&#013;{[print(xabber.getString('omemo__dialog_fingerprints__label_device_id'))]}: {{device_id}}{[}]}\\\">{{short_time}}</div>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n        {[ if (is_sender) { ]}\\n\\n            <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n            <div id=\\\"retry-send-msg-{{msgid}}\\\" class=\\\"dropdown-content retry-send-message noselect\\\">\\n                <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 btn-retry-send-message\\\">{[print(xabber.getString(\\\"chat_screen__message__button_retry_send\\\"))]}</div>\\n            </div>\\n        {[ } ]}\\n        <div class=\\\"not-decrypted-icon mdi-14px\\\" title=\\\"{[print(xabber.getString('omemo__not_verified_message_title'))]}\\\" {[ if (not_verified_device) { ]}data-device-id=\\\"{{not_verified_device}}\\\" {[ } ]} data-activates=\\\"not-verified-tooltip-{{msgid}}\\\">\\n            <svg class=\\\"mdi mdi-14px mdi-svg-template not-verified-icon-svg\\\" data-svgname=\\\"alert-circle\\\"></svg>\\n            <svg class=\\\"mdi mdi-14px mdi-svg-template not-decrypted-icon-svg\\\" data-svgname=\\\"information\\\"></svg>\\n        </div>\\n        <div id=\\\"not-verified-tooltip-{{msgid}}\\\" class=\\\"dropdown-content not-decrypted-tooltip noselect\\\">\\n            <div class=\\\"not-existing-device-tooltip-text\\\">{[print(xabber.getString(\\\"omemo__not_existing_device_message_tooltip\\\"))]}</div>\\n            <div class=\\\"not-decrypted-tooltip-text\\\">{[print(xabber.getString(\\\"omemo__not_decrypted_message_tooltip\\\"))]}</div>\\n            <div class=\\\"not-verified-tooltip-text\\\">{[print(xabber.getString(\\\"omemo__not_verified_message_tooltip\\\"))]}</div>\\n            <button class=\\\"btn-manage-devices btn-flat btn-main text-color-700\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\\n            <div class=\\\"not-verified-previously-tooltip-text\\\">{[print(xabber.getString(\\\"omemo__not_verified_previously_message_tooltip\\\"))]}</div>\\n        </div>\\n        {[ if (ephemeral_timer_text) { ]}\\n        <div class=\\\"ephemeral-timer-msg-time text-color-700{[ if (is_sender) { ]} ephemeral-timer-own-msg-time{[ } ]}\\\">{{ephemeral_timer_text}}</div>\\n        {[ } ]}\\n        <div class=\\\"msg-copy-link\\\" title='{[print(xabber.getString(\\\"action_copy_link\\\"))]}'><i class=\\\"mdi mdi-link-variant\\\" data-image=\\\"{{is_image}}\\\"></i></div>\\n        <div class=\\\"msg-copy-location\\\"  title='{[print(xabber.getString(\\\"action_copy_location\\\"))]}'><div class=\\\"msg-copy-location-content\\\" data-location=\\\"false\\\"></div></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message saved-main main {{classlist}}\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"fwd-msgs-block\\\"></div>\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message main {{classlist}}\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{msg_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message system\\\"  data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-2\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-2\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-3 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"template-for-3 minor-images\\\"><div class=\\\"img-content-template template-for-3 minor\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-3 minor\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-4 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-4 minor-images\\\">\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-5\\\"><div class=\\\"img-content-wrap template-for-5 main\\\"><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\\n<div class=\\\"img-content-wrap template-for-5 minor-images\\\"><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[4].upload_id}}\\\"><img src=\\\"{{images[4].sources[0]}}\\\" title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-6\\\"><div class=\\\"img-content-wrap template-for-6 main-row\\\"><div class=\\\"img-content-template template-for-6 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-6 minor-1\\\"><div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\\n<div class=\\\"template-for-6 minor-2\\\"><div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[4].upload_id}}\\\"><img src=\\\"{{images[4].sources[0]}}\\\" title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6 last-image\\\" data-upload-file-id=\\\"{{images[5].upload_id}}\\\"><img src=\\\"{{images[5].sources[0]}}\\\" title=\\\"{{images[5].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[5].sources[0]}}\\\">\\n{[ if (images.length > 6) { ]}<span class=\\\"image-counter\\\"></span>{[ for (var i=6; i < images.length; i++) {]} <div class=\\\"img-content-template hidden\\\" data-upload-file-id=\\\"{{images[i].upload_id}}\\\"><img src=\\\"{{images[i].sources[0]}}\\\" title=\\\"{{images[i].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[i].sources[0]}}\\\"></div> {[}} ]}</div></div></div>\\n\";","export default \"<div class=\\\"plyr-video-container\\\"  data-provider=\\\"html5\\\" data-msg-video-id=\\\"{{video_id}}\\\" data-src=\\\"{{video_src}}\\\">\\n    <div class=\\\"plyr-video-play\\\">\\n        <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n    </div>\\n    <div class=\\\"plyr-video-playing\\\">\\n        <svg class=\\\"mdi mdi-48px mdi-svg-template\\\" data-svgname=\\\"player-float\\\"></svg>\\n        <div class=\\\"plyr-video-playing-hint\\\">{[print(xabber.getString(\\\"chat_message_video_playing_hint\\\"))]}</div>\\n    </div>\\n    {[ if (thumbnail) {]}\\n        <img class=\\\"plyr-video-poster\\\" src=\\\"{{thumbnail}}\\\" onerror=\\\"this.style.display='none'\\\">\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"chat-message\\\"> {[alert({file_url})]} </div>\";","export default \"<div class=\\\"circle-avatar ground-color-700\\\"></div>\\n<div class=\\\"chat-head-info-buttons-container\\\">\\n    <div class=\\\"contact-info\\\">\\n        <p class=\\\"contact-name one-line\\\">{[print(xabber.getString(\\\"saved_messages__header\\\"))]}</p>\\n        <p class=\\\"one-liner\\\"></p>\\n    </div>\\n    <div class=\\\"chat-tools-wrap\\\">\\n        <div class=\\\"chat-tool chat-tool-player\\\">\\n            <div class=\\\"chat-tool-player-containter\\\">\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-previous-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-previous mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-play-pause-plyr\\\">\\n                    <i class=\\\"mdi mdi-play mdi-24px\\\"></i>\\n                    <i class=\\\"mdi mdi-pause mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-next-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-next mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-popup-plyr\\\">\\n                    <img class=\\\"player-poster hidden\\\">\\n                    <svg class=\\\"mdi mdi-32px mdi-player-type-icon mdi-svg-template\\\" data-svgname=\\\"video\\\"></svg>\\n                    <div class=\\\"voice-message-player-avatar circle-avatar hidden\\\"></div>\\n                </div>\\n                <div class=\\\"chat-tool chat-player-duration chat-tool-plyr-controls\\\">\\n                    <div class=\\\"chat-head-player-title one-line\\\"><div class=\\\"chat-head-player-title-text\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</div></div>\\n                    <div class=\\\"chat-head-player-title-bottom-container\\\">\\n                        <span class=\\\"chat-head-player-type one-line\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</span><span class=\\\"chat-head-player-type-dot\\\"> •</span>\\n                        <span class=\\\"chat-head-player-current-time\\\">0:00</span> /\\n                        <span class=\\\"chat-head-player-total-time\\\">0:00</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-stop-plyr\\\">\\n                    <i class=\\\"mdi mdi-close mdi-16px\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"chat-tool btn-jingle-message\\\">\\n            <i class=\\\"mdi mdi-phone mdi-24px\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-chat-pin\\\">\\n            <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path id=\\\"tooltip-variant\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\"></path>\\n                </svg>\\n            </svg>\\n        </div>\\n        <div class=\\\"chat-tool btn-search-messages\\\">\\n            <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-more\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"{{view.cid}}-more\\\" class=\\\"chat-head-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-delete-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_all\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"image\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"images\\\"))]}</div>\\n        <div data-screen-name=\\\"video\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"image\\\" class=\\\"screen-wrap hidden library-wrap\\\"></div>\\n    <div data-screen=\\\"video\\\" class=\\\"screen-wrap hidden library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"chat_bottom__drag_and_drop__text_drop_files_here\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"send_media__btn_upload\\\"))]}</button>\\n                <input type=\\\"file\\\" multiple>\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"add\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <div class=\\\"modal-preloader-wrap\\\"></div>\\n</div>\";","export default \"<div class=\\\"subscription-buttons\\\">\\n    <div class=\\\"subscription-info\\\"></div>\\n    <div class=\\\"button text-color-500 btn-add\\\">{[print(xabber.getString(\\\"contact_add\\\"))]}</div>\\n    <div class=\\\"button btn-block\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n    <div class=\\\"button text-color-500 btn-allow\\\">{[print(xabber.getString(\\\"chat_allow\\\"))]}</div>\\n    <div class=\\\"button text-color-500 btn-subscribe\\\">{[print(xabber.getString(\\\"chat_subscribe\\\"))]}</div>\\n    <i class=\\\"mdi-close btn-decline mdi mdi-24px\\\"></i>\\n</div>\";","export default \"<div class=\\\"unread-marker\\\">\\n    <div class=\\\"unread-marker-content no-select\\\">\\n        {{text}}\\n    </div>\\n</div>\";","export default \"<div class=\\\"roster-account-info-wrap\\\">\\n    <div class=\\\"roster-account-info ground-color-100\\\">\\n        <div class=\\\"account-indicator ground-color-700\\\"></div>\\n        <div class=\\\"circle-avatar noselect\\\"></div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <p class=\\\"name text-color-900 one-line\\\"></p>\\n            <p class=\\\"jid one-line\\\"></p>\\n        </div>\\n        <div class=\\\"button-divider\\\"></div>\\n    </div>\\n    <div class=\\\"status-button\\\">\\n        <div class=\\\"status\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer1 ground-color-50\\\">\\n        <div class=\\\"account-indicator ground-color-300\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer2 ground-color-50\\\">\\n        <div class=\\\"account-indicator ground-color-300\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"roster-account-info-wrap\\\">\\n    <div class=\\\"roster-account-info\\\">\\n        <div class=\\\"circle-avatar-wrap ground-color-500\\\">\\n            <div class=\\\"circle-avatar border-color ground-color-700 noselect\\\"></div>\\n        </div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <p class=\\\"name text-color-700 one-line\\\"></p>\\n            <p class=\\\"status-message text-color-700 one-line\\\"></p>\\n            <div class=\\\"roster-info\\\">\\n                <i class=\\\"mdi mdi-account-multiple-outline\\\"></i>\\n                <span class=\\\"counter\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"status-button\\\">\\n        <div class=\\\"status\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer1\\\"></div>\\n    <div class=\\\"roster-account-shrank-footer2\\\"></div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_add_contact__header\\\"))]}</span>\\n        <div class=\\\"account-dropdown-wrap\\\" data-activates=\\\"select-account-for-add-contact\\\">\\n            <div class=\\\"dropdown-button\\\">\\n                <div class=\\\"account-item-wrap\\\">\\n                    <div class=\\\"circle-avatar noselect\\\">\\n                        <img>\\n                    </div>\\n                </div>\\n            </div>\\n            <div id=\\\"select-account-for-add-contact\\\" class=\\\"dropdown-content noselect\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"add-contact-jid-step\\\">\\n            <div class=\\\"row name-field\\\">\\n                <div class=\\\"input-field\\\">\\n                    <!--<label for=\\\"new_contact_username\\\">{[print(xabber.getString(\\\"dialog_add_contact__label_jid\\\"))]}</label>-->\\n                    <input id=\\\"new_contact_username\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"dialog_add_contact__label_jid\\\"))]}' name=\\\"username\\\">\\n                    <span class=\\\"errors fixed\\\"></span>\\n                </div>\\n            </div>\\n        </div>\\n        <!--<div class=\\\"add-contact-contact-step\\\">-->\\n            <!--<div class=\\\"row name-field\\\">-->\\n                <!--<div class=\\\"input-field\\\">-->\\n                    <!--<label for=\\\"new_contact_name\\\">{[print(xabber.getString(\\\"contact_user\\\"))]}</label>-->\\n                    <!--<input id=\\\"new_contact_name\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"contact_user\\\"))]}' name=\\\"contact_name\\\" required>-->\\n                <!--</div>-->\\n            <!--</div>-->\\n            <!--<div class=\\\"row groups-field\\\">-->\\n                <!--<div class=\\\"field-header\\\">{[print(xabber.getString(\\\"contact_circle\\\"))]}</div>-->\\n                <!--<div class=\\\"groups checkbox-list\\\">-->\\n                <!--</div>-->\\n            <!--</div>-->\\n        <!--</div>-->\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-add\\\">{[print(xabber.getString(\\\"dialog_add_contact__button_add\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"dialog_add_contact__button_cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-item-wrap property-variant\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"name-wrap\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <div class=\\\"audio-control-time\\\">\\n        <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n        <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    </div>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div data-jid=\\\"{{jid}}\\\" class=\\\"blocked-contact\\\">\\n    <div class=\\\"input-field checkbox-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blocked-jid-switch-{{jid}}\\\"/>\\n        <label for=\\\"blocked-jid-switch-{{jid}}\\\">{{jid}}</label>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-background-clickable\\\"></div>\\n<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"header-buttons\\\">\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_viewer\\\"))]}</span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <div class=\\\"btn-qr-code\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n        </div>\\n        <div class=\\\"btn-edit\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n    </div>\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\"></div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap contact-details-name-wrap one-line\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"buttons-wrap sticky-details-wrap\\\">\\n        <div class=\\\"button-wrap btn-voice-call-wrap\\\">\\n            <div class=\\\"contact-btn btn-voice-call  fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_call\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-search-messages\\\">\\n            <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-mute-wrap\\\">\\n            <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n            <ul id=\\\"{{view.cid}}-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                <li class=\\\"btn-unmute-dropdown\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"unmute_chat\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                </li>\\n            </ul>\\n        </div>\\n        <div class=\\\"button-wrap btn-block-wrap\\\">\\n            <div class=\\\"contact-btn btn-block fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n            <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content private-chat\\\">\\n        <div class=\\\"block-wrap vcard\\\">\\n        </div>\\n        <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap edit-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap search-messages-block-wrap\\\"></div>\\n    </div>\\n    <ul class=\\\"tabs bottom-block-tabs\\\">\\n        <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n        <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n        <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n        <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n    </ul>\\n    <div class=\\\"panel-content private-chat\\\">\\n        <div class=\\\"bottom-block\\\">\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"circle-avatar noselect\\\"></div>\\n<div class=\\\"text-info-wrap\\\">\\n    <div class=\\\"name-wrap\\\">\\n        <p class=\\\"name one-line\\\"></p>\\n    </div>\\n    <p class=\\\"jid one-line\\\"></p>\\n</div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"contact_list__placeholder\\\"))]}</div>\\n\";","export default \"<div class=\\\"circle-avatar noselect\\\"></div>\\n<div class=\\\"text-info-wrap\\\">\\n    <p class=\\\"name one-line\\\"></p>\\n    <p class=\\\"jid one-line hidden\\\"></p>\\n    <p class=\\\"status-message one-line\\\"></p>\\n</div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n\";","export default \"\\n<div class=\\\"edit-wrap\\\">\\n    <div class=\\\"edit-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</span>\\n    </div>\\n    <div class=\\\"edit-contact\\\">\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"name-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"subscription-statuses\\\">\\n        <div class=\\\"status-out subscription-status-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-status-out\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"subscription-to\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value dotted-underline one-line\\\"></div>\\n            </div>\\n        </div>\\n        <div id=\\\"{{view.cid}}-status-out\\\" class=\\\"status-out-dropdown dropdown-content noselect\\\">\\n            <div class=\\\"btn-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_request_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_request_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-subscription-out property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_subscribe\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"status-in subscription-status-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-status-in\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"subscription-from\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value dotted-underline one-line\\\"></div>\\n            </div>\\n        </div>\\n        <div id=\\\"{{view.cid}}-status-in\\\" class=\\\"status-in-dropdown dropdown-content noselect\\\">\\n            <div class=\\\"btn-allow property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_allow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-allow-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_allow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-disallow-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"decline\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-disallow-preapproved property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_disallow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-subscription-in property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_subscription\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"status-description subscription-status-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information-outline\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-buttons\\\">\\n        <div class=\\\"edit-button btn-delete\\\">\\n            <div class=\\\"details-icon-wrap\\\"><i class=\\\"details-icon mdi mdi-24px mdi-delete text-color-500\\\"></i></div>\\n            <div class=\\\"edit-button-text \\\">\\n                <span class=\\\"text-color-500 dotted-underline text-decoration-color-300 one-line\\\">{[print(xabber.getString(\\\"contact_delete_full\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"\\n<div class=\\\"edit-wrap\\\">\\n    <div class=\\\"edit-save-preloader preloader-wrap\\\">\\n        <div class=\\\"preloader-wrapper preloader-17px visible\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-header main-edit-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <div class=\\\"btn-edit\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-group vcard\\\">\\n        <div class=\\\"info-wrap description-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\">\\n                <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg>\\n            </div>\\n            <div class=\\\"info-hover\\\">\\n                <div class=\\\"info description\\\">\\n                    <div class=\\\"edit-group-name value\\\"></div>\\n                    <div class=\\\"edit-group-description value\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"description-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header description-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_properties\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"main-info\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-group-image\\\">\\n                    <input class=\\\"hidden\\\" title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                    <div class=\\\"preloader-wrap\\\">\\n                        <div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div id=\\\"{{view.cid}}-group-image\\\" class=\\\"profile-image-dropdown bootstrap-dropdown dropdown-content noselect\\\">\\n                    <div class=\\\"btn-emoji-panel property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                    </div>\\n                    <div class=\\\"btn-selfie property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                    </div>\\n                    <div class=\\\"btn-choose-image property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-group\\\">\\n            <div class=\\\"edit-group-name-wrap\\\"></div>\\n            <div class=\\\"edit-group-description-wrap\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-properties\\\">\\n        <div class=\\\"group-property membership-property\\\">\\n            <div class=\\\"details-icon-wrap\\\" ><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"membership-outline\\\"></svg></div>\\n            <div class=\\\"group-property-text dotted-underline\\\">\\n                {[print(xabber.getString(\\\"groupchat_membership\\\"))]}\\n                <span></span>\\n            </div>\\n        </div>\\n        <div class=\\\"group-property index-property\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg></div>\\n            <div class=\\\"group-property-text dotted-underline\\\">\\n                {[print(xabber.getString(\\\"groupchat_index\\\"))]}\\n                <span></span>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-button btn-default-restrictions\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"restrictions-outline\\\"></svg></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"one-line dotted-underline\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span>\\n                <span class=\\\"edit-button-value\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"membership-property-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"property-wrap membership-field\\\">\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"open\\\" name=\\\"membership-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"open\\\">{[print(xabber.getString(\\\"groupchat_membership_type_open\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"member-only\\\" name=\\\"membership-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"member-only\\\">{[print(xabber.getString(\\\"groupchat_membership_type_members_only\\\"))]}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"property-description\\\">{[print(xabber.getString(\\\"groupchat_membership_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"index-property-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_index\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"property-wrap index-field\\\">\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"none\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"none\\\">{[print(xabber.getString(\\\"groupchat_index_type_none\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"local\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"local\\\">{[print(xabber.getString(\\\"groupchat_index_type_local\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"global\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"global\\\">{[print(xabber.getString(\\\"groupchat_index_type_global\\\"))]}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"property-description\\\">{[print(xabber.getString(\\\"groupchat_index_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"bottom-block edit-bottom-block\\\">\\n        <div class=\\\"edit-pictured-buttons\\\">\\n            <div data-value=\\\"invitations\\\" class=\\\"list-variant invitations-variant\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"invite-outline\\\"></svg></div>\\n                <div class=\\\"variant-text dotted-underline\\\">{[print(xabber.getString(\\\"groupchat_invitations\\\"))]}<span class=\\\"counted\\\"></span></div>\\n            </div>\\n            <div data-value=\\\"blocked\\\" class=\\\"list-variant blocked-variant\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n                <div class=\\\"variant-text dotted-underline\\\">{[print(xabber.getString(\\\"group_settings__block_list__header\\\"))]}<span class=\\\"counted\\\"></span></div>\\n            </div>\\n        </div>\\n        <i class=\\\"details-icon participants-edit-back btn-back-panel mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name-panel\\\"></span>\\n        <span class=\\\"block-name-panel second-text fade-out\\\">{[print(xabber.getString(\\\"groupchat_selected\\\"))]} <span></span></span>\\n        <div class=\\\"btn-add-block\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n        </div>\\n        <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite\\\"></i>\\n        <button class=\\\"btn-remove-selected btn-flat btn-main fade-out\\\">{[print(xabber.getString(\\\"groupchat_revoke\\\"))]}</button>\\n        <div class=\\\"block-wrap participants-edit-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"edit-buttons\\\">\\n        <div class=\\\"edit-button btn-clear-history-chat\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"history\\\"></svg></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"one-line dotted-underline\\\">{[print(xabber.getString(\\\"clear_history\\\"))]}</span>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-button btn-delete-group\\\">\\n            <div class=\\\"details-icon-wrap\\\"><i class=\\\"details-icon mdi mdi-24px mdi-delete text-color-500\\\"></i></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"text-color-500 one-line text-decoration-color-300 dotted-underline\\\">{[print(xabber.getString(\\\"group_settings__button_delete_group\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"block-form\\\">\\n    <div class=\\\"input-field\\\">\\n        <input id=\\\"blocking_id\\\" class=\\\"rich-textarea field-input\\\" placeholder=\\\"{[print(xabber.getString('vcard_jabber_id'))]}\\\" type=\\\"text\\\" name=\\\"title\\\">\\n    </div>\\n    <button class=\\\"btn-block-id btn btn-main-filled ground-color-700\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-content\\\">\\n    <div class=\\\"textarea-header\\\">{[print(xabber.getString(\\\"groupchat_member_badge\\\"))]}</div>\\n    <div class=\\\"rich-textarea badge-text\\\" tabindex=\\\"1\\\" contenteditable></div>\\n    <div class=\\\"error\\\"></div>\\n</div>\\n<div class=\\\"panel-footer noselect\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"insert-emoticon\\\">\\n            <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n        </div>\\n        <div class=\\\"emoticons-panel-wrap\\\">\\n            <div class=\\\"emoticons-panel\\\"></div>\\n            <div class=\\\"emoji-menu\\\"></div>\\n        </div>\\n        <button class=\\\"btn-save btn-flat btn-main\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-cancel btn-flat btn-main btn-dark\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\"><div class=\\\"panel-header black-text\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</div></div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"default-restrictions-list-wrap\\\"></div>\\n    <p class=\\\"default-restrictions-info\\\">{[print(xabber.getString(\\\"dialog_default_restrictions__placeholder\\\"))]}</p>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <button class=\\\"btn-default-restrictions-save btn-flat btn-main non-active\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-default-restrictions-cancel btn-flat btn-main btn-dark\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"restrictions-wrap\\\">\\n    <div class=\\\"restrictions-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span>\\n        <span class=\\\"block-name second-text fade-out\\\"></span>\\n        <button class=\\\"btn-default-restrictions-save text-color-500 btn-flat btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <div class=\\\"edit-save-preloader preloader-wrap\\\">\\n            <div class=\\\"preloader-wrapper preloader-17px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"restrictions-content edit-default-restrictions\\\">\\n        <div class=\\\"default-restrictions-list-wrap\\\"></div>\\n        <p class=\\\"default-restrictions-info\\\">{[print(xabber.getString(\\\"dialog_default_restrictions_right__placeholder\\\"))]}</p>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <textarea class=\\\"{{field_name}}-input rich-textarea field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\"></textarea>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"media-item\\\">\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\">\\n                <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                </svg>\\n                <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n            <div class=\\\"status-message one-line\\\"></div>\\n        </div>\\n        <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <li class=\\\"btn-qr-code\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_settings__button_show_qr_code\\\"))]}</span></li>\\n            <li class=\\\"btn-edit-settings\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_settings\\\"))]}</span></li>\\n            <li class=\\\"btn-default-restrictions\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span></li>\\n            <li class=\\\"btn-delete-group\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"group_settings__button_delete_group\\\"))]}</span></li>\\n        </ul>\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-chat-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_chat\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-invite-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell btn-mute\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-leave-wrap\\\">\\n                <div class=\\\"btn-leave\\\"><svg viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                </svg>\\n                </div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"head-block\\\">\\n            <div class=\\\"left-column\\\">\\n                <div class=\\\"block-wrap group-chat-properties-wrap\\\"></div>\\n            </div>\\n            <div class=\\\"right-column\\\">\\n                <div class=\\\"block-wrap status-block-wrap\\\"></div>\\n                <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"bottom-block\\\">\\n            <ul class=\\\"tabs\\\">\\n                <li data-value=\\\"participants\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__members_list__header\\\"))]}</a></li>\\n                <li data-value=\\\"invitations\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"groupchat_invitations\\\"))]}</a></li>\\n                <li data-value=\\\"blocked\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__block_list__header\\\"))]}</a></li>\\n            </ul>\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"panel-background-clickable\\\"></div>\\n<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"header-buttons\\\">\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_group\\\"))]}</span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <div class=\\\"btn-qr-code\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n        </div>\\n        <div class=\\\"btn-edit\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information-outline\\\"></svg>\\n        </div>\\n        <div class=\\\"group-edit-preloader\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\">\\n                <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"buttons-wrap sticky-details-wrap\\\">\\n        <div class=\\\"button-wrap btn-invite-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite text-color-500\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-search-messages\\\">\\n            <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-mute-wrap\\\">\\n            <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n            <ul id=\\\"{{view.cid}}-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                </li>\\n            </ul>\\n        </div>\\n        <div class=\\\"button-wrap btn-leave-wrap\\\">\\n            <div class=\\\"contact-btn btn-leave fill-color-500\\\">\\n                <svg viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                </svg>\\n            </div>\\n            <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"block-wrap group-chat-properties-wrap vcard\\\"></div>\\n        <div class=\\\"block-wrap status-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap edit-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap restrictions-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap search-messages-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap participant-view-wrap\\\"></div>\\n    </div>\\n    <ul class=\\\"tabs not-edit bottom-block-tabs\\\">\\n        <li data-value=\\\"participants\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__members_list__header\\\"))]}</a></li>\\n        <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n        <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n        <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n        <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n    </ul>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"bottom-block\\\">\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <span class=\\\"btn-edit-settings\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-properties vcard\\\">\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <div title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon-wrap\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg>\\n        </div>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap name-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap searchable-info-wrap\\\">\\n        <svg class=\\\"details-icon toolbar-icon mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\"></path>\\n        </svg>\\n        <div class=\\\"info searchable\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_indexed\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap model-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-lock\\\"></i>\\n        <div class=\\\"info model\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\"><div class=\\\"panel-header black-text\\\">{[if (privacy) { print(xabber.getString(\\\"incognito_group_settings__header\\\"))} else { print(xabber.getString(\\\"public_group_settings__header\\\"))}]}</div></div>\\n<div class=\\\"modal-content group-chat-properties-wrap selectable-text\\\">\\n    <div class=\\\"property-wrap jid-info-wrap\\\">\\n        <div class=\\\"property-header\\\">{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}</div>\\n        <div class=\\\"jabber-id\\\">\\n            <div class=\\\"value one-line\\\">{{jid}}</div>\\n        </div>\\n        <p id=\\\"anonymous-public\\\" class=\\\"property-description hidden\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_privacy__text_public\\\"))]}</p>\\n        <p id=\\\"anonymous-incognito\\\" class=\\\"property-description hidden\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_privacy__text_incognito\\\"))]}</p>\\n    </div>\\n    {[fields.forEach(function (field) { if (field.type === 'hidden' || field.type === 'jid-multi') return;]}\\n    <div class=\\\"property-wrap {{field.var}}-field\\\">\\n        {[if (!(field.type == 'fixed' && field.values[0] === \\\"\\\")) {]}\\n        <div class=\\\"property-header\\\">{{field.label}}</div>\\n        {[}]}\\n        {[if (field.type === 'text-single') {]}\\n        <div class=\\\"input-field input-group-chat-name\\\">\\n            <input value=\\\"{{field.values[0]}}\\\" id=\\\"new_{{field.var}}_value\\\" type=\\\"text\\\" name=\\\"{{field.var}}\\\" placeholder='{[print(xabber.getString(\\\"group_settings_edit__setting_name__hint\\\"))]}' class=\\\"text-field\\\">\\n        </div>\\n        {[} else if (field.type === 'text-multi') {]}\\n        <textarea placeholder='{[print(xabber.getString(\\\"groupchat_example_description\\\"))]}' id=\\\"{{field.var}}\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"text-field materialize-textarea rich-textarea\\\">{{field.values[0]}}</textarea>\\n        {[} else if (field.type === 'list-single') { field.options.forEach(function (option) {]}\\n        <div class=\\\"property-radio\\\">\\n            <input {[if (option.value === field.values[0]){]}checked{[}]} id=\\\"{{option.value}}\\\" name=\\\"{{field.var}}\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n            <label class=\\\"{{option.value}}-label\\\" for=\\\"{{option.value}}\\\">{{option.label}}</label>\\n        </div>\\n        {[});} else  if (field.type === 'fixed' && field.values[0] !== \\\"\\\") {]}\\n        <div class=\\\"fixed-field{[if (field.var === 'description'){]} description{[}]}\\\">\\n            <div class=\\\"value\\\">{{field.values[0]}}</div>\\n        </div>\\n        {[}]}\\n        {[if (field.var === 'index'){]}\\n        <p class=\\\"property-description\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_index__text\\\"))]}</p>\\n        {[} else if (field.var === 'membership') {]}\\n        <p class=\\\"property-description\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_membership__text\\\"))]}</p>\\n        {[}]}\\n    </div>\\n    {[})]}\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (!all_fixed){]}\\n        <button class=\\\"btn-save btn-flat btn-main non-active\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        {[}]}\\n        <button class=\\\"btn-cancel btn-flat btn-dark btn-main\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <span class=\\\"btn-edit-settings\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-properties vcard-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info jabber-id\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info description short\\\">\\n                <div class=\\\"value\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"full-vcard-wrap\\\">\\n    <div class=\\\"full-vcard-content\\\">\\n        <div class=\\\"vcard-header block-header\\\">\\n            <div class=\\\"vcard-header-title\\\">\\n                <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_vcard_header_title\\\"))]}</span>\\n            </div>\\n            <div class=\\\"main-info\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar\\\"></div>\\n                </div>\\n                <div class=\\\"text-info\\\">\\n                    <div class=\\\"name-wrap\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"vcard-list\\\">\\n            <div class=\\\"info-wrap jid-info-wrap\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info jabber-id\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap name-info-wrap\\\">\\n                <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap description-info-wrap\\\">\\n                <div class=\\\"details-icon-wrap\\\">\\n                    <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info description\\\">\\n                        <div class=\\\"value\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap searchable-info-wrap\\\">\\n                <svg class=\\\"details-icon toolbar-icon mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\"></path>\\n                </svg>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info searchable\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_indexed\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap model-info-wrap\\\">\\n                <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-lock\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info model\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<tr class=\\\"participant-wrap\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <td class=\\\"list-item group-chat-participant\\\">\\n        <div class=\\\"member-item\\\">\\n            <div class=\\\"circle-avatar\\\"></div>\\n            <div class=\\\"participant-info\\\">\\n            <div class=\\\"top-line\\\"><div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>{[if (badge) {]}<div class=\\\"badge one-line\\\">{{badge}}</div>{[}]}</div>\\n            {[if (jid) {]}<p class=\\\"jid one-line\\\">{{jid}}</p>{[}]}\\n            </div>\\n        </div>\\n    </td>\\n    <td class=\\\"last-seen\\\">{[if (!present) {]}<span class=\\\"online-status text-color-green-700\\\">{[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}</span>{[} else {]}<span title=\\\"{{present}}\\\">{{pretty_present}}</span>{[}]}</td>\\n    <td class=\\\"role\\\">{[if (role !== 'member') {]}{{role}}{[}]}</td>\\n    <td>\\n        {[if (is_me) {]}\\n        <span style=\\\"font-size:12px\\\" class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</span>\\n        {[} else {]}\\n        <div class=\\\"buttons-wrap\\\">\\n            <div title='{[print(xabber.getString(\\\"groupchat_kick\\\"))]}' class=\\\"btn-kick\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-remove\\\"></i>\\n            </div>\\n            <div title='{[print(xabber.getString(\\\"groupchat_kick_and_block\\\"))]}' class=\\\"btn-block\\\">\\n                <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path fill=\\\"#9e9e9e\\\" d=\\\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,4A8,8 0 0,0 4,12C4,13.85 4.63,15.55 5.68,16.91L16.91,5.68C15.55,4.63 13.85,4 12,4M12,20A8,8 0 0,0 20,12C20,10.15 19.37,8.45 18.32,7.09L7.09,18.32C8.45,19.37 10.15,20 12,20Z\\\" />\\n                </svg>\\n            </div>\\n        </div>\\n        {[}]}\\n    </td>\\n</tr>\";","export default \"<tr class=\\\"participant-wrap\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <td class=\\\"list-item group-chat-participant\\\">\\n        <div class=\\\"member-item\\\">\\n            <div class=\\\"circle-avatar\\\"></div>\\n            <div class=\\\"participant-info\\\">\\n            <div class=\\\"top-line\\\">\\n                <div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>\\n                {[if (badge) {]}<div class=\\\"badge one-line\\\">{{badge}}</div>{[}]}\\n            </div>\\n                <div class=\\\"bottom-line\\\">\\n                    {[ if (is_me) {]}\\n                    <div class=\\\"online-status text-color-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n                    {[}else if (!present) {]}<span class=\\\"online-status text-color-green-700\\\">{[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}</span>{[} else {]}<span title=\\\"{{present}}\\\">{{pretty_present}}</span>{[}]}\\n                </div>\\n            </div>\\n            {[if (role === 'owner' || role === 'admin') {]}\\n            <div class=\\\"participant-buttons-wrap\\\">\\n                <div class=\\\"participant-role\\\">\\n                    {[if (role === 'owner') {]}\\n                        <i class=\\\"mdi participant-role-image mdi-24px mdi-star\\\"></i>\\n                    {[}else if (role === 'admin') {]}\\n                        <i class=\\\"mdi participant-role-image mdi-24px mdi-star-outline\\\"></i>\\n                    {[}]}\\n                </div>\\n            </div>\\n            {[} else if (!is_me) {]}\\n                <div class=\\\"buttons-wrap\\\">\\n                    <div title='{[print(xabber.getString(\\\"groupchat_edit_member\\\"))]}' class=\\\"btn-edit-member\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n                    </div>\\n                    <!--<div title='{[print(xabber.getString(\\\"mute_chat\\\"))]}' class=\\\"btn-mute\\\">-->\\n                        <!--<i class=\\\"mdi mdi-24px mdi-microphone-off\\\"></i>-->\\n                    <!--</div>-->\\n                    <div title='{[print(xabber.getString(\\\"groupchat_kick\\\"))]}' class=\\\"btn-kick\\\">\\n                        <i class=\\\"mdi mdi-24px mdi-account-remove\\\"></i>\\n                    </div>\\n                </div>\\n            {[}]}\\n        </div>\\n    </td>\\n</tr>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input rich-textarea field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"insert-emoticon\\\">\\n                <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n            </div>\\n            <div class=\\\"emoticons-panel-wrap\\\">\\n                <div class=\\\"emoticons-panel\\\"></div>\\n                <div class=\\\"emoji-menu\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_status\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-status\\\">\\n    <div class=\\\"status-wrap\\\">\\n        <div class=\\\"status status-bulb\\\"></div>\\n        <div class=\\\"status-message\\\"></div>\\n    </div>\\n    <div class=\\\"btn-edit-status\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"group-chat-status-wrap\\\" title=\\\"{[print(xabber.getString('group_settings__properties__tooltip_click_to_set_status'))]}\\\">\\n    <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"status-outline\\\"></svg></div>\\n    <div class=\\\"group-chat-status-border\\\">\\n        <div class=\\\"group-chat-status\\\">\\n            <div class=\\\"status-wrap\\\">\\n                <div class=\\\"status-message dotted-underline\\\"></div>\\n                <div class=\\\"status status-bulb\\\"></div>\\n            </div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_status\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap one-line\\\"></div>\\n            <div class=\\\"jid one-line\\\"></div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"msg-wrap\\\"><p class=\\\"msg-text\\\"></p></div>\\n        <div class=\\\"panel-footer noselect\\\">\\n            <div class=\\\"buttons-wrap\\\">\\n                <button class=\\\"btn-join btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_join\\\"))]}</button>\\n                <button class=\\\"btn-decline btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_decline\\\"))]}</button>\\n                <button class=\\\"btn-block btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"list-item {{status}}-user\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"member-item\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n        <p title=\\\"{{jid}}\\\" class=\\\"one-line\\\">{{jid}}</p>\\n        {[if (status == 'invitations') {]}\\n        <div title='{[print(xabber.getString(\\\"groupchat_revoke\\\"))]}' class=\\\"revoke-invitation\\\">\\n            {[}else{]}\\n            <div title='{[print(xabber.getString(\\\"groupchat_unblock\\\"))]}' class=\\\"unblock-user\\\">\\n                {[}]}\\n                <i class=\\\"mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"rich-textarea field-input badge-text\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_member_badge\\\"))]}' contenteditable></div>\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"insert-emoticon\\\">\\n            <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n        </div>\\n        <div class=\\\"emoticons-panel-wrap\\\">\\n            <div class=\\\"emoticons-panel\\\"></div>\\n            <div class=\\\"emoji-menu\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item {[if (subscription === null) {]}unsubscribed{[}]}\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    {[if (subscription !== null) {]}\\n    <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{id}}-buttons-wrap\\\">\\n        <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n    </div>\\n    <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n        <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n    </ul>\\n    {[}]}\\n    <div class=\\\"circle-avatar\\\">\\n        {[if (subscription !== null) {]}\\n        <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\">\\n            <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n            </svg>\\n            <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            </div>\\n        {[}]}\\n    </div>\\n        <div class=\\\"participant-info\\\">\\n            {[if (subscription !== null) {]}<div id=\\\"edit-nickname\\\" class=\\\"rich-textarea\\\" tabindex=\\\"1\\\" contenteditable></div>{[}]}\\n            <div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>\\n            <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n            {[if (jid) {]}<p title=\\\"{{jid}}\\\" class=\\\"jid selectable-text one-line\\\">{{jid}}</p>{[}]}\\n            {[ if (is_myself) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n            {[}]}\\n            {[ if (is_blocked_contact) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"action_contact_blocked\\\"))]}</div>\\n            {[}]}\\n            {[if (subscription === null) {]}<p class=\\\"role selectable-text one-line\\\">{[if (blocked) { print(xabber.getString(\\\"groupchat_blocked\\\")); }else{print(xabber.getString(\\\"settings_group_member__placeholder_not_a_member\\\"));}]}</p>{[}]}\\n        </div>\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (incognito_chat) {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-incognito btn-chat\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_private_chat\\\"))]}</div>\\n        </div>\\n        {[} else {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_direct_chat\\\"))]}</div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"button-wrap btn-participant-messages-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-view-list btn-participant-messages\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_member_messages\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-set-badge-wrap\\\">\\n            <svg class=\\\"btn-set-badge\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M17,3H14V6H10V3H7A2,2 0 0,0 5,5V21A2,2 0 0,0 7,23H17A2,2 0 0,0 19,21V5A2,2 0 0,0 17,3M12,8A2,2 0 0,1 14,10A2,2 0 0,1 12,12A2,2 0 0,1 10,10A2,2 0 0,1 12,8M16,16H8V15C8,13.67 10.67,13 12,13C13.33,13 16,13.67 16,15V16M13,5H11V1H13V5M16,19H8V18H16V19M12,21H8V20H12V21Z\\\" />\\n            </svg>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_set_member_badge\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-kick-participant-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-account-remove btn-kick-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_kick\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item {[if (subscription === null) {]}unsubscribed{[}]}\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"block-header\\\">\\n        <i class=\\\"details-icon btn-back parent-btn mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <i class=\\\"details-icon btn-back-name child-btn mdi mdi-24px mdi-arrow-right hidden\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <button class=\\\"btn-save-user-rights non-active fade-out btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_save_member_settings\\\"))]}</button>\\n        {[if (subscription !== null) {]}\\n        <div class=\\\"btn-edit-participant\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n            <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n        </ul>\\n        {[}]}\\n    </div>\\n    <div class=\\\"circle-avatar\\\">\\n        {[if (subscription !== null) {]}\\n            <div class=\\\"preloader-wrap\\\">\\n                <div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        {[}]}\\n    </div>\\n        <div class=\\\"participant-info\\\">\\n            {[if (subscription !== null) {]}<div class=\\\"participant-edit-nickname hidden\\\"></div>{[}]}\\n            <div class=\\\"participant-edit-badge hidden\\\"></div>\\n            <div class=\\\"participant-info-text\\\">\\n                <div class=\\\"nickname\\\">\\n                    {{nickname}} <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n                </div>\\n                {[ if (is_myself) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n                {[}]}\\n                {[ if (subscription === null && blocked) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_blocked\\\"))]}</div>\\n                {[} else if (subscription === null) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_kicked\\\"))]}</div>\\n                {[}]}\\n\\n            </div>\\n        </div>\\n    <div class=\\\"buttons-wrap sticky-details-wrap\\\">\\n        {[if (incognito_chat) {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-incognito btn-chat-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_private_chat\\\"))]}</div>\\n        </div>\\n        {[} else {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-message-text btn-chat-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_direct_chat\\\"))]}</div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"button-wrap btn-participant-messages-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-view-list btn-participant-messages\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_member_messages\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap non-active btn-set-visibility-wrap\\\">\\n            <i title=\\\"Feature not yet implemented\\\" class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-eye btn-set-visibility\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_set_member_visibility_visible\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-kick-participant-wrap\\\">\\n            <i class=\\\"mdi contact-btn mdi-24px mdi-account-remove text-color-500 btn-kick-participant\\\"></i>\\n            <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_kick\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"vcard-wrap vcard\\\">\\n        {[if (jid) {]}\\n        <div class=\\\"info-wrap jid-info-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n            <div class=\\\"info-hover\\\">\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">{{jid}}</div>\\n                    <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        {[}]}\\n        {[if (role === 'owner' || role === 'admin') {]}\\n        <div class=\\\"info-wrap role-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\">\\n                {[if (role === 'owner') {]}\\n                    <i class=\\\"details-icon mdi mdi-24px mdi-star\\\"></i>\\n                {[}else if (role === 'admin') {]}\\n                    <i class=\\\"details-icon mdi mdi-24px mdi-star-outline\\\"></i>\\n                {[}]}\\n            </div>\\n            <div>\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">\\n                        <span>\\n                            {[if (role === 'owner') {]}\\n                                {[print(xabber.getString(\\\"groupchat_role_owner\\\"))]}\\n                            {[}else if (role === 'admin') {]}\\n                                {[print(xabber.getString(\\\"groupchat_role_admin\\\"))]}\\n                            {[}]}\\n                        </span>\\n                    </div>\\n                    <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_role\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"info-wrap present-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" {[if (!present) {]}data-svgname=\\\"status-outline\\\"{[} else {]}data-svgname=\\\"clock-outline\\\"{[}]}></svg></div>\\n            <div>\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">\\n                        <span>\\n                            {[if (!present) {]}\\n                                {[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}\\n                            {[} else {]}\\n                            {{pretty_present}}\\n                            {[}]}\\n                        </span>\\n                    </div>\\n                    <div class=\\\"label\\\">{[if (!present) {]}{[print(xabber.getString(\\\"groupchat_status\\\"))]}{[} else {]}{[print(xabber.getString(\\\"group_settings__members__label_last_seen\\\"))]}{[}]}</div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-wrap\\\">\\n    <div class=\\\"participant-details-info-wrap\\\">\\n    </div>\\n    <ul class=\\\"tabs participant-tabs bottom-block-tabs\\\">\\n        <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n        <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n        <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n        <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n    </ul>\\n    <div class=\\\"bottom-block participant-bottom-block\\\">\\n        <div class=\\\"block-wrap participants-details-media-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"participant-details-edit-wrap edit-wrap\\\">\\n        <div class=\\\"main-info\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-participant-image\\\">\\n                    <input class=\\\"hidden\\\" title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                    <div class=\\\"preloader-wrap\\\">\\n                        <div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div id=\\\"{{view.cid}}-participant-image\\\" class=\\\"profile-image-dropdown bootstrap-dropdown dropdown-content noselect\\\">\\n                    <div class=\\\"btn-emoji-panel property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                    </div>\\n                    <div class=\\\"btn-selfie property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                    </div>\\n                    <div class=\\\"btn-choose-image property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"participant-details-edit-inputs\\\">\\n            <div class=\\\"edit-participant-name-wrap\\\">\\n            </div>\\n            <div class=\\\"edit-participant-badge-wrap\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"rights-wrap\\\">\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"header\\\">\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"rights-wrap\\\">\\n    </div>\\n</div>\\n\";","export default \"<table class=\\\"members-list-wrap\\\">\\n    <thead>\\n    <tr>\\n        <th>\\n            <div class=\\\"participants-search-form search-form\\\">\\n                <svg class=\\\"search-icon\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z\\\" />\\n                </svg>\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_search_members\\\"))]}'>\\n                <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n        </th>\\n        <th>{[print(xabber.getString(\\\"group_settings__members__label_last_seen\\\"))]}</th>\\n        <th>{[print(xabber.getString(\\\"groupchat_role\\\"))]}</th>\\n        <th></th>\\n    </tr>\\n    </thead>\\n    <tbody></tbody>\\n</table>\\n<div class=\\\"preloader-wrapper preloader-17px active\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<table class=\\\"members-list-wrap\\\">\\n    <thead>\\n    <tr>\\n        <th>\\n            <div class=\\\"participants-search-form search-form\\\">\\n                <svg class=\\\"search-icon\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z\\\" />\\n                </svg>\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_search_members\\\"))]}'>\\n                <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n        </th>\\n    </tr>\\n    </thead>\\n    <tbody></tbody>\\n</table>\\n<div class=\\\"preloader-wrapper preloader-17px active\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<svg class=\\\"pin\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path fill=\\\"#757575\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\" />\\n</svg>\\n<div class=\\\"msg-wrap\\\">\\n    <div class=\\\"chat-msg-author-wrap\\\">\\n        <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{author}}</div>{[if (fwd_author){]}<svg class=\\\"fwd-chevron\\\" viewBox=\\\"0 0 24 24\\\"><path fill=\\\"#9E9E9E\\\" d=\\\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\\\"></path></svg><div class=\\\"chat-msg-author text-color-700 one-line\\\">{{fwd_author}}</div>{[}]}\\n        <div class=\\\"msg-time\\\">{{time}}</div>\\n    </div>\\n    <div class=\\\"chat-msg-content chat-text-content one-line\\\">\\n        {{message}}\\n    </div>\\n</div>\\n<svg title='{[print(xabber.getString(\\\"group_chat__pinned_message__tooltip_unpin\\\"))]}' class=\\\"close\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path class=\\\"close\\\" fill=\\\"#9E9E9E\\\" d=\\\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\\\" />\\n</svg>\";","export default \"<div class=\\\"participant-details-item\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"circle-avatar\\\">\\n        {[ if (is_myself) {]}\\n        <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\">\\n        {[}]}\\n        {[ if (is_myself) {]}\\n        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n        </svg>\\n        <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        </div>\\n        {[}]}\\n    </div>\\n    <div class=\\\"participant-info\\\">\\n        {[ if (is_myself) {]}\\n        <div id=\\\"edit-nickname\\\" class=\\\"rich-textarea\\\" tabindex=\\\"1\\\" contenteditable></div>\\n        {[}]}\\n        <div title=\\\"{{nickname}}\\\" class=\\\"{{is_myself && 'is-myself'}} nickname one-line\\\">{{nickname}}</div>\\n        <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n        {[ if (is_myself) {]}\\n        <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n        {[}]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"block-header\\\">\\n        <i class=\\\"details-icon btn-back parent-btn mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <i class=\\\"details-icon btn-back-name child-btn mdi mdi-24px mdi-arrow-right hidden\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <button class=\\\"btn-save-user-rights non-active fade-out btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_save_member_settings\\\"))]}</button>\\n        {[if (subscription !== null) {]}\\n        <div class=\\\"btn-edit-participant\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n            <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n        </ul>\\n        {[}]}\\n    </div>\\n    <div class=\\\"circle-avatar\\\">\\n        <div class=\\\"preloader-wrap\\\">\\n            <div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"participant-info\\\">\\n        {[if (subscription !== null) {]}<div class=\\\"participant-edit-nickname hidden\\\"></div>{[}]}\\n        <div class=\\\"participant-edit-badge hidden\\\"></div>\\n        <div class=\\\"participant-info-text\\\">\\n            <div class=\\\"nickname\\\">\\n                {{nickname}} <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n            </div>\\n            {[ if (is_myself) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n            {[}]}\\n\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"right-item restriction restriction-{{name}}\\\">\\n    <div class=\\\"right-name\\\">{{pretty_name}}</div>\\n    <div class=\\\"field clickable-field restriction-{{name}}-state switch normal\\\">\\n        <input type=\\\"checkbox\\\" {[if (type === 'fixed') {]} onclick=\\\"return false;\\\" {[}]} class=\\\"filled-in\\\" id=\\\"{{name}}\\\">\\n        <label for=\\\"{{name}}\\\"></label>\\n    </div>\\n</div>\";","export default \"<div class=\\\"select-timer\\\">\\n    <div class=\\\"dropdown-button\\\" data-activates=\\\"select-timer-{{right_name}}\\\">\\n        <div class=\\\"timer-item-wrap\\\"><div data-value=\\\"0\\\" class=\\\"default-value property-value\\\">{[print(xabber.getString(\\\"dialog_rights__button_set_timer\\\"))]}</div></div>\\n    </div>\\n    <div id=\\\"select-timer-{{right_name}}\\\" class=\\\"dropdown-content noselect\\\">\\n        {[expire_options.forEach(function (option) {]}\\n        <div data-value=\\\"{{option.value}}\\\" class=\\\"property-variant\\\">{{option.label}}</div>\\n        {[}.bind(this));]}\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_set_status__header\\\"))]}</span>\\n    </div>\\n    <ul class=\\\"status-values noselect\\\">\\n        <div class=\\\"loading-status\\\">\\n            <div class=\\\"preloader-wrapper preloader-17px active\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </ul>\\n</div>\\n\";","export default \"<li data-value=\\\"{{status.value}}\\\">\\n    <span class=\\\"status-value one-line\\\">{{status.label}}</span>\\n    <span class=\\\"status-bulb\\\" data-status=\\\"{{status.show}}\\\"></span>\\n</li>\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"group-head\\\">\\n    <i class=\\\"arrow mdi mdi-20px\\\"></i>\\n    <div class=\\\"group-title\\\">\\n        <span class=\\\"group-name one-line\\\"></span>\\n        <span class=\\\"member-counter one-line\\\"></span>\\n    </div>\\n    <i class=\\\"group-icon mdi mdi-20px hidden\\\"></i>\\n</div>\\n\";","export default \"<div class=\\\"group-head\\\">\\n    <i class=\\\"arrow mdi mdi-20px\\\"></i>\\n    <div class=\\\"group-title\\\">\\n        <span class=\\\"group-name one-line\\\"></span>\\n        <span class=\\\"member-counter one-line\\\"></span>\\n    </div>\\n    <i class=\\\"group-icon mdi mdi-20px hidden\\\"></i>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap settings-panel\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_circle_settings__header\\\"))]}</span>\\n    </div>\\n\\n    <div class=\\\"modal-content\\\">\\n            <div class=\\\"field-wrap group-name\\\">\\n                <div class=\\\"input-field\\\">\\n                    <label for=\\\"{{view.cid}}-group-name\\\">{[print(xabber.getString(\\\"circle_name\\\"))]}</label>\\n                    <input id=\\\"{{view.cid}}-group-name\\\" type=\\\"text\\\" name=\\\"group_name\\\">\\n                    <span class=\\\"errors fixed\\\"></span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"category_offline_contacts\\\"))]}</div>\\n            <div class=\\\"setting-wrap\\\">\\n                <div class=\\\"setting offline radio-button field-wrap\\\">\\n                    <div class=\\\"field radio-field clickable-field\\\">\\n                        <form action=\\\"#\\\">\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"yes\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show\\\" />\\n                                <label for=\\\"{{view.cid}}-show\\\">{[print(xabber.getString(\\\"show_offline_always\\\"))]}</label>\\n                            </p>\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"no\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hide\\\" />\\n                                <label for=\\\"{{view.cid}}-hide\\\">{[print(xabber.getString(\\\"hide_offline_always\\\"))]}</label>\\n                            </p>\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show-offline-default\\\" />\\n                                <label for=\\\"{{view.cid}}-show-offline-default\\\">{[print(xabber.getString(\\\"dialog_circle_settings__label_common_settings\\\"))]}</label>\\n                            </p>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-dark btn-delete left\\\">{[print(xabber.getString(\\\"circle_remove\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-apply\\\">{[print(xabber.getString(\\\"dialog_circle_settings__button_apply\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"groups-list-wrap\\\">\\n    <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles-outline\\\"></svg></div>\\n    <div class=\\\"groups\\\">\\n    </div>\\n    </div>\\n</div>\\n<div class=\\\"groups-wrap\\\">\\n    <div class=\\\"checkbox-list\\\">\\n    </div>\\n</div>\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    {[ if (!checked) {]}\\n        <div class=\\\"input-field checkbox-field existing-group-field\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{group_id}}\\\" data-groupname=\\\"{{name}}\\\" {[ if (checked) { ]}checked=\\\"checked\\\"{[ } ]} />\\n            <label for=\\\"{{group_id}}\\\">{{name}}</label>\\n        </div>\\n    {[}]}\\n{[ } ]}\\n\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    <div class=\\\"input-field checkbox-field existing-group-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{group_id}}\\\" data-groupname=\\\"{{name}}\\\" {[ if (checked) { ]}checked=\\\"checked\\\"{[ } ]} />\\n        <label for=\\\"{{group_id}}\\\">{{name}}</label>\\n    </div>\\n{[ } ]}\\n    <div class=\\\"new-group-field-wrap\\\">\\n        <div class=\\\"input-field checkbox-field new-group-checkbox\\\">\\n            <input type=\\\"checkbox\\\" disabled class=\\\"filled-in\\\" id=\\\"new_group_checkbox\\\"/>\\n            <label for=\\\"new_group_checkbox\\\"></label>\\n        </div>\\n        <div class=\\\"input-field new-group-name\\\">\\n            <input class=\\\"rich-textarea xabber-input\\\" id=\\\"new-group-name\\\" type=\\\"text\\\" name=\\\"new_group_name\\\" placeholder='{[print(xabber.getString(\\\"add_new_circle\\\"))]}'>\\n        </div>\\n    </div>\\n\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    {[ if (checked) {]}\\n        <div data-groupname=\\\"{{name}}\\\" title=\\\"{[print(xabber.getString('contact_tooltip_remove_by_click'))]}\\\" class=\\\"group ground-color-50\\\">\\n            <div>{{name}}</div>\\n        </div>\\n    {[}]}\\n\\n{[ } ]}\\n\";","export default \"<div class=\\\"new-group-field-wrap\\\">\\n    <div class=\\\"input-field checkbox-field new-group-checkbox\\\">\\n        <input type=\\\"checkbox\\\" disabled class=\\\"filled-in\\\" id=\\\"new_group_checkbox\\\"/>\\n        <label for=\\\"new_group_checkbox\\\"></label>\\n    </div>\\n    <div class=\\\"input-field new-group-name\\\">\\n        <input class=\\\"xabber-input\\\" id=\\\"new-group-name\\\" autocomplete=\\\"off\\\" type=\\\"text\\\" name=\\\"new_group_name\\\" placeholder='{[print(xabber.getString(\\\"add_new_circle\\\"))]}'>\\n    </div>\\n</div>\";","export default \"<div class=\\\"gallery-file\\\" title=\\\"{{file.name}}\\\" data-id=\\\"{{file.id}}\\\" data-uniqueid=\\\"{{file.uniqueid}}\\\"  data-file=\\\"{{file.sources[0]}}\\\" data-name=\\\"{{file.name}}\\\" data-size=\\\"{{file.size}}\\\" data-width=\\\"{{file.width}}\\\" data-height=\\\"{{file.height}}\\\" data-media-type=\\\"{{file.media_type}}\\\" >\\n    {[if (file.media_type && (file.media_type.includes('image') || (file.media_type.includes('video') && !file.has_encrypted_files && !is_encrypted))){]}\\n    <img class=\\\"{[if (file.media_type.includes('video')){]}uploaded-video{[} else {]}uploaded-img popup-img{[}]}\\\"\\n         data-mfp-src=\\\"{{file.sources[0]}}\\\"\\n         src=\\\"{[if (file.thumbnail){]}{{file.thumbnail}}{[} else {]}{{file.sources[0]}}{[}]}\\\"\\n         onError=\\\"this.parentElement.className = this.parentElement.className + ' hidden';\\\"\\n    >\\n    {[} else {]}\\n    {[if (svg_icon == 'file-audio' && file.true_voice){]}\\n    <div class=\\\"gallery-file-placeholder-background gallery-audio-file-not-uploaded\\\">\\n        <i class=\\\"details-icon mdi mdi-play no-uploaded\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-file-audio-container\\\">\\n    </div>\\n    {[} else {]}\\n    <div class=\\\"gallery-file-placeholder-background\\\">\\n        <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n        <div class=\\\"gallery-file-title-grid\\\">{{filesize}}</div>\\n    </div>\\n    {[}]}\\n    <div class=\\\"gallery-file-title one-line\\\">\\n        {{file.name}},  <span class=\\\"gallery-file-size\\\">{{filesize}}</span>\\n    </div>\\n    {[if (duration && file.true_voice){]}\\n    <div class=\\\"gallery-voice-file-duration\\\">\\n        0:00 / <span class=\\\"gallery-voice-file-total-duration\\\">{{duration}}</span>\\n    </div>\\n    {[}]}\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"gallery-empty\\\">\\n    <div class=\\\"gallery-empty-icon-wrap\\\">\\n        <i class=\\\"gallery-empty-icon mdi mdi-24px mdi-package-variant\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-empty-text\\\">{[print(xabber.getString(\\\"no_files\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"contacts-panel noselect\\\">\\n    <div class=\\\"contacts-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n\\n    <div class=\\\"contact-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"contact-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"contacts-panel noselect\\\">\\n    <div class=\\\"collapsed-wrap\\\">\\n        <i class=\\\"collapsed-contacts-icon mdi mdi-24px mdi-account-multiple\\\"></i>\\n        <div class=\\\"all-contacts-counter\\\"></div>\\n    </div>\\n    <div class=\\\"expanded-wrap\\\">\\n        <div class=\\\"roster-head panel-head\\\">\\n            <div class=\\\"contacts-header\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n            <div class=\\\"roster-button btn-pin\\\"></div>\\n        </div>\\n\\n        <div class=\\\"contact-list-wrap\\\">\\n            <div class=\\\"contact-list\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"    <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_contact_list__header_offline_contacts\\\"))]}</div>\\n    <div class=\\\"setting offline-contacts radio-button field-wrap\\\">\\n        <div class=\\\"field radio-field clickable-field\\\">\\n            <form action=\\\"#\\\">\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"offline-contacts\\\" value=\\\"yes\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show\\\" />\\n                    <label for=\\\"{{view.cid}}-show\\\">{[print(xabber.getString(\\\"settings__section_contact_list__offline_contacts__label_show\\\"))]}</label>\\n                </p>\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"offline-contacts\\\" value=\\\"no\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hide\\\" />\\n                    <label for=\\\"{{view.cid}}-hide\\\">{[print(xabber.getString(\\\"settings__section_contact_list__offline_contacts__label_hide\\\"))]}</label>\\n                </p>\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_contact_list__header_sorting\\\"))]}</div>\\n    <div class=\\\"setting sorting-contacts radio-button field-wrap\\\">\\n        <div class=\\\"field radio-field clickable-field\\\">\\n            <form action=\\\"#\\\">\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"sorting-contacts\\\" value=\\\"online-first\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-online-first\\\" />\\n                    <label for=\\\"{{view.cid}}-online-first\\\">{[print(xabber.getString(\\\"settings__section_contact_list__sorting__label_online_first\\\"))]}</label>\\n                </p>\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"sorting-contacts\\\" value=\\\"by-alphabet\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-by-alphabet\\\" />\\n                    <label for=\\\"{{view.cid}}-by-alphabet\\\">{[print(xabber.getString(\\\"settings__section_contact_list__sorting__label_alphabet\\\"))]}</label>\\n                </p>\\n            </form>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"group-chat-title-wrap hidden\\\">\\n    <div class=\\\"account-indicator ground-color-700\\\"></div>\\n    <div class=\\\"contact-icon\\\">\\n    </div>\\n    <div class=\\\"group-chat-name one-line\\\"></div>\\n</div>\\n<div class=\\\"mention-info-wrap\\\">\\n<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"mention-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n    <span class=\\\"msg-counter hidden\\\"></span>\\n</div>\\n</div>\";","export default \"<div class=\\\"mentions-panel noselect\\\">\\n    <div class=\\\"chats-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"mentions-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"mentions-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"mentions_list__placeholder\\\"))]}</div>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"searching__chat_properties__header\\\"))]}</span>\\n</div>\\n<div class=\\\"chat-properties-wrap selectable-text\\\">\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\">{{jid}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap name-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info name\\\">\\n            <div class=\\\"value one-line\\\">{{name}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value one-line\\\">{{description}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap anonymous-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-comment-question-outline\\\"></i>\\n        <div class=\\\"info anonymous\\\">\\n            <div class=\\\"value one-line\\\">{{privacy}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_incognito\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap model-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-lock-open-outline\\\"></i>\\n        <div class=\\\"info model\\\">\\n            <div class=\\\"value one-line\\\">{{membership}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\\n<button class=\\\"btn-join-chat btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"groupchat_join\\\"))]}</button>\\n\";","export default \"<div class=\\\"existing-chat-wrap\\\" data-name=\\\"{{name}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"account-indicator ground-color-{{color}}-500\\\"></div>\\n    <div class=\\\"circle-avatar\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"existing-chat-item\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"account-item-wrap\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"name one-line\\\">{{jid}}</div>\\n</div>\";","export default \"<div class=\\\"searching-panel\\\">\\n    <div class=\\\"search-wide search-form\\\">\\n        <div class=\\\"account-indicator ground-color-500\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"searching__placeholder_search_by_domain\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"searching-properties-field\\\">\\n        <div class=\\\"dropdown-button\\\" data-visible=\\\"false\\\">\\n            <i class=\\\"mdi mdi-24px mdi-chevron-down arrow\\\"></i>\\n        </div>\\n    </div>\\n    <ul id=\\\"select-searching-properties\\\" class=\\\"selectable-text\\\">\\n        <div class=\\\"account-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_account\\\"))]}</p>\\n            <div class=\\\"account-field\\\">\\n                <div class=\\\"multiple-acc\\\">\\n                    <div class=\\\"account-dropdown-wrap\\\">\\n                        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-account-for-searching\\\">\\n                            <div class=\\\"account-item-wrap\\\">\\n                            </div>\\n                            <div class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-account-for-searching\\\" class=\\\"dropdown-content\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"single-acc\\\">\\n                    <div class=\\\"dropdown-button\\\">\\n                        <div class=\\\"account-item-wrap\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"title-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_title\\\"))]}</p>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"searching_property_title\\\" type=\\\"text\\\" name=\\\"title\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"sorting-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_sort_by\\\"))]}</p>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"searching_property_sort_by\\\" type=\\\"text\\\" name=\\\"title\\\">\\n            </div>\\n        </div>\\n        <button class=\\\"btn-search btn btn-main-filled ground-color-700\\\">{[print(xabber.getString(\\\"search\\\"))]}</button>\\n    </ul>\\n</div>\\n<div class=\\\"searching-result-wrap\\\">\\n    <div class=\\\"chats-list-wrap\\\">\\n        <div class=\\\"result-string\\\"></div>\\n        <div class=\\\"preloader-wrapper preloader-17px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div></div>\\n        <div class=\\\"chats-list\\\"></div></div>\\n    <div class=\\\"searching-more\\\"></div>\\n</div>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/account-cancel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,4 C7.790861,4 6,5.790861 6,8 C6,10.209139 7.790861,12 10,12 C12.209139,12 14,10.209139 14,8 C14,5.790861 12.209139,4 10,4 M17.5,13 C15,13 13,15 13,17.5 C13,20 15,22 17.5,22 C20,22 22,20 22,17.5 C22,15 20,13 17.5,13 M10,14 C5.58,14 2,15.79 2,18 L2,20 L11.5,20 C11.169935,19.2078439 11,18.3581691 11,17.5 C11.004284,16.3143165 11.3328048,15.1523902 11.95,14.14 C11.32,14.06 10.68,14 10,14 M17.5,14.5 C19.16,14.5 20.5,15.84 20.5,17.5 C20.5,18.06 20.35,18.58 20.08,19 L16,14.92 C16.42,14.65 16.94,14.5 17.5,14.5 M14.92,16 L19,20.08 C18.58,20.35 18.06,20.5 17.5,20.5 C15.84,20.5 14.5,19.16 14.5,17.5 C14.5,16.94 14.65,16.42 14.92,16 Z\\\" id=\\\"mdi:account-cancel\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/account-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,19 L5,19 L5,5 L19,5 M19,3 L5,3 C3.8954305,3 3,3.8954305 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 M16.5,16.25 C16.5,14.75 13.5,14 12,14 C10.5,14 7.5,14.75 7.5,16.25 L7.5,17 L16.5,17 M12,12.25 C13.2426407,12.25 14.25,11.2426407 14.25,10 C14.25,8.75735931 13.2426407,7.75 12,7.75 C10.7573593,7.75 9.75,8.75735931 9.75,10 C9.75,11.2426407 10.7573593,12.25 12,12.25 Z\\\" id=\\\"mdi:account-box-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/account\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M6,17 C6,15 10,13.9 12,13.9 C14,13.9 18,15 18,17 L18,18 L6,18 M15,9 C15,10.6568542 13.6568542,12 12,12 C10.3431458,12 9,10.6568542 9,9 C9,7.34314575 10.3431458,6 12,6 C13.6568542,6 15,7.34314575 15,9 M3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.8954305 20.1045695,3 19,3 L5,3 C3.89,3 3,3.9 3,5 Z\\\" id=\\\"mdi:account-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/address-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 M12,2 C15.8659932,2 19,5.13400675 19,9 C19,14.25 12,22 12,22 C12,22 5,14.25 5,9 C5,5.13400675 8.13400675,2 12,2 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,10 7,12 12,18.71 C17,12 17,10 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:map-marker-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/address\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\\\" id=\\\"mdi:map-marker\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/alarm-bell\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M15,18.66 L15,22 L5,22 L5,18.66 C8.09301265,20.4500491 11.9069873,20.4500491 15,18.66 M22,4 C22,2.8954305 21.1045695,2 20,2 C19.69,2 19.39,2.07 19.12,2.21 C18.82,2.36 18.56,2.58 18.36,2.85 C17.9280885,3.46077217 17.873744,4.26171236 18.219194,4.92522914 C18.564644,5.58874591 19.2519508,6.00355658 20,6 L20.24,6 C21.97,10.43 20.66,15.46 17,18.5 C16.68,18.75 16.35,19 16,19.22 L16,21 L17,21 L17,19.74 C20.14,17.5 22,13.86 22,10 C22,8.5 21.72,7 21.17,5.62 C21.69,5.24 22,4.64 22,4 M18,10 C18,12.1217319 17.1571453,14.1565632 15.6568542,15.6568542 C14.1565632,17.1571453 12.1217319,18 10,18 C5.581722,18 2,14.418278 2,10 C2,5.581722 5.581722,2 10,2 C12.1217319,2 14.1565632,2.84285472 15.6568542,4.34314575 C17.1571453,5.84343678 18,7.87826808 18,10 L18,10 Z\\\" id=\\\"mdi:alarm-bell\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/alert-circle\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,13 L11,13 L11,7 L13,7 M13,17 L11,17 L11,15 L13,15 M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C14.6521649,22 17.195704,20.9464316 19.0710678,19.0710678 C20.9464316,17.195704 22,14.6521649 22,12 C22,9.3478351 20.9464316,6.80429597 19.0710678,4.92893219 C17.195704,3.0535684 14.6521649,2 12,2 Z\\\" id=\\\"mdi:alert-circle\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bell-off\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20.84,22.73 L18.11,20 L3,20 L3,19 L5,17 L5,11 C5.00430327,9.85524651 5.28929416,8.72901748 5.83,7.72 L1.11,3 L2.39,1.73 L22.11,21.46 L20.84,22.73 Z M19.0000002,15.8 L19.0000002,11 C19.0007944,7.90366232 16.9672665,5.17466784 14,4.29 C14.0049007,4.19339544 14.0049007,4.09660456 14,4 C14,2.8954305 13.1045695,2 12,2 C10.8954305,2 10,2.8954305 10,4 C9.99507868,4.09660403 9.99507868,4.19339597 10,4.29 C9.385,4.474 8.8,4.743 8.26,5.09 L19.0000002,15.8 Z M12,23 C13.1045695,23 14,22.1045695 14,21 L10,21 C10,22.1045695 10.8954305,23 12,23 Z\\\" id=\\\"mdi:bell-off\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bell-sleep\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,21 L14,21 C14,22.1045695 13.1045695,23 12,23 C10.8954305,23 10,22.1045695 10,21 Z M21,19 L21,20 L3,20 L3,19 L5,17 L5,11 C4.99920557,7.90366232 7.0327335,5.17466784 10,4.29 C9.99507868,4.19339597 9.99507868,4.09660403 10,4 C10,2.8954305 10.8954305,2 12,2 C13.1045695,2 14,2.8954305 14,4 C14.005,4.097 14.005,4.193 14,4.29 C16.9672665,5.17466784 19.0007944,7.90366232 19,11 L19,17 L21,19 L21,19 Z M15,9 L9,9 L9,11 L12.24,11 L9,13.7 L9,16 L15,16 L15,14 L11.76,14 L15,11.3 L15,9 Z\\\" id=\\\"mdi:bell-sleep\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bell\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,19 L21,20 L3,20 L3,19 L5,17 L5,11 C4.99920557,7.90366232 7.0327335,5.17466784 10,4.29 C9.99507868,4.19339597 9.99507868,4.09660403 10,4 C10,2.8954305 10.8954305,2 12,2 C13.1045695,2 14,2.8954305 14,4 C14.005,4.097 14.005,4.193 14,4.29 C16.9672665,5.17466784 19.0007944,7.90366232 19,11 L19,17 L21,19 L21,19 Z M14,21 C14,22.1045695 13.1045695,23 12,23 C10.8954305,23 10,22.1045695 10,21 L14,21 Z\\\" id=\\\"mdi:bell\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/birthday-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6 C13.1045695,6 14,5.1045695 14,4 C14,3.62 13.9,3.27 13.71,2.97 L12,0 L10.29,2.97 C10.1,3.27 10,3.62 10,4 C10,5.1 10.9,6 12,6 M18,9 L13,9 L13,7 L11,7 L11,9 L6,9 C4.34,9 3,10.34 3,12 L3,21 C3,21.55 3.45,22 4,22 L20,22 C20.55,22 21,21.55 21,21 L21,12 C21,10.34 19.66,9 18,9 M19,20 L5,20 L5,17 C5.9,17 6.76,16.63 7.4,16 L8.5,14.92 L9.56,16 C10.87,17.3 13.15,17.29 14.45,16 L15.53,14.92 L16.6,16 C17.24,16.63 18.1,17 19,17 L19,20 M19,15.5 C18.5,15.5 18,15.3 17.65,14.93 L15.5,12.8 L13.38,14.93 C12.64,15.67 11.35,15.67 10.61,14.93 L8.5,12.8 L6.34,14.93 C6,15.29 5.5,15.5 5,15.5 L5,12 C5,11.45 5.45,11 6,11 L18,11 C18.55,11 19,11.45 19,12 L19,15.5 Z\\\" id=\\\"mdi:cake-variant-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/birthday\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,7 C13.11,7 14,6.1 14,5 C14,4.62 13.9,4.27 13.71,3.97 L12,1 L10.29,3.97 C10.1,4.27 10,4.62 10,5 C10,6.1045695 10.8954305,7 12,7 M16.6,17 L15.53,15.92 L14.45,17 C13.15,18.29 10.87,18.3 9.56,17 L8.5,15.92 L7.4,17 C6.75,17.64 5.88,18 4.96,18 C4.23,18 3.56,17.77 3,17.39 L3,22 C3,22.5522847 3.44771525,23 4,23 L20,23 C20.5522847,23 21,22.5522847 21,22 L21,17.39 C20.44,17.77 19.77,18 19.04,18 C18.12,18 17.25,17.64 16.6,17 M18,10 L13,10 L13,8 L11,8 L11,10 L6,10 C4.34314575,10 3,11.3431458 3,13 L3,14.54 C3,15.62 3.88,16.5 4.96,16.5 C5.5,16.5 6,16.3 6.34,15.93 L8.5,13.8 L10.61,15.93 C11.35,16.67 12.64,16.67 13.38,15.93 L15.5,13.8 L17.65,15.93 C18,16.3 18.5,16.5 19.03,16.5 C20.11,16.5 21,15.62 21,14.54 L21,13 C21,11.3431458 19.6568542,10 18,10 Z\\\" id=\\\"mdi:cake-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/blocked-add\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,15 L20,18 L23,18 L23,20 L20,20 L20,23 L18,23 L18,20 L15,20 L15,18 L18,18 L18,15 L20,15 Z M12,2 C17.5,2 22,6.5 22,12 C22,12.5859564 21.9489239,13.1605626 21.851004,13.7195862 C21.2621133,13.4007388 20.6141835,13.1778427 19.9277796,13.0712956 C19.9754227,12.7216453 20,12.3635535 20,12 C20,10.1 19.4,8.4 18.3,7.1 L7.1,18.3 C8.5,19.3 10.2,20 12,20 C12.3635535,20 12.7216453,19.9754227 13.0726961,19.9278476 C13.1778427,20.6141835 13.4007388,21.2621133 13.719191,21.8507762 C13.1605626,21.9489239 12.5859564,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 Z M12,4 C7.6,4 4,7.6 4,12 C4,13.7882353 4.53148789,15.399308 5.51109302,16.6664767 L5.7,16.9 L16.9,5.7 C15.6,4.6 13.9,4 12,4 Z\\\" id=\\\"xabber:block-add\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/blocked\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8,1 C11.8659932,1 15,4.13400675 15,8 C15,11.8659932 11.8659932,15 8,15 C4.13400675,15 1,11.8659932 1,8 C1,4.13400675 4.13400675,1 8,1 Z M12.3574649,4.64359326 L4.64359326,12.3574649 C5.57228864,13.073866 6.73637986,13.5 8,13.5 C11.0375661,13.5 13.5,11.0375661 13.5,8 C13.5,6.73637986 13.073866,5.57228864 12.3574649,4.64359326 Z M8,2.5 C4.96243388,2.5 2.5,4.96243388 2.5,8 C2.5,9.26408031 2.92644441,10.4285592 3.64331784,11.3574212 L11.3574212,3.64331784 C10.4285592,2.92644441 9.26408031,2.5 8,2.5 Z\\\" id=\\\"blocked\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/bot-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8,3.5 C9.93299662,3.5 11.5,5.06700338 11.5,7 L11.5,9.5 C11.5,11.1568542 9.93299662,12.5 8,12.5 C6.06700338,12.5 4.5,11.1568542 4.5,9.5 L4.5,7 L4.50517886,6.8079648 C4.60487355,4.9642776 6.1314366,3.5 8,3.5 Z M8,5 C6.9456382,5 6.08183488,5.81587779 6.00548574,6.85073766 L6,7 L6,8 C6,8.82842712 6.8954305,9.5 8,9.5 C9.1045695,9.5 10,8.82842712 10,8 L10,7 C10,5.8954305 9.1045695,5 8,5 Z M3.5,6 C3.77614237,6 4,6.22385763 4,6.5 L4,9.5 C4,9.77614237 3.77614237,10 3.5,10 C3.22385763,10 3,9.77614237 3,9.5 L3,6.5 C3,6.22385763 3.22385763,6 3.5,6 Z M12.5,6 C12.7761424,6 13,6.22385763 13,6.5 L13,9.5 C13,9.77614237 12.7761424,10 12.5,10 C12.2238576,10 12,9.77614237 12,9.5 L12,6.5 C12,6.22385763 12.2238576,6 12.5,6 Z\\\" id=\\\"Bot\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/bot\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8.5,2.9 C8.83137085,2.9 9.1,3.16862915 9.1,3.5 C9.1,3.6775201 9.02290618,3.83703397 8.9003726,3.94688754 L8.899,4.999 L11,5 C11.5522847,5 12,5.44771525 12,6 L12,7 C12.2761424,7 12.5,7.22385763 12.5,7.5 L12.5,8.5 C12.5,8.77614237 12.2761424,9 12,9 L12,11 C12,11.5522847 11.5522847,12 11,12 L5,12 C4.44771525,12 4,11.5522847 4,11 L4,9 C3.72385763,9 3.5,8.77614237 3.5,8.5 L3.5,7.5 C3.5,7.22385763 3.72385763,7 4,7 L4,6 C4,5.44771525 4.44771525,5 5,5 L8.1,4.999 L8.0996274,3.94688754 C7.97709382,3.83703397 7.9,3.6775201 7.9,3.5 C7.9,3.16862915 8.16862915,2.9 8.5,2.9 Z M9.5,10 L6.5,10 C6.22385763,10 6,10.2238576 6,10.5 C6,10.7761424 6.22385763,11 6.5,11 L9.5,11 C9.77614237,11 10,10.7761424 10,10.5 C10,10.2238576 9.77614237,10 9.5,10 Z M6.5,6 C6.22385763,6 6,6.22385763 6,6.5 L6,7 L5.5,7 C5.22385763,7 5,7.22385763 5,7.5 C5,7.77614237 5.22385763,8 5.5,8 L6,8 L6,8.5 C6,8.77614237 6.22385763,9 6.5,9 C6.77614237,9 7,8.77614237 7,8.5 L7,8 L7.5,8 C7.77614237,8 8,7.77614237 8,7.5 C8,7.22385763 7.77614237,7 7.5,7 L7,7 L7,6.5 C7,6.22385763 6.77614237,6 6.5,6 Z M9.5,7 C9.22385763,7 9,7.22385763 9,7.5 C9,7.77614237 9.22385763,8 9.5,8 C9.77614237,8 10,7.77614237 10,7.5 C10,7.22385763 9.77614237,7 9.5,7 Z\\\" id=\\\"bot\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bug\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,12 L10,12 L10,10 L14,10 M14,16 L10,16 L10,14 L14,14 M20,8 L17.19,8 C16.7389578,7.21773668 16.1167554,6.54767256 15.37,6.04 L17,4.41 L15.59,3 L13.42,5.17 C12.4901518,4.94442551 11.5198482,4.94442551 10.59,5.17 L8.41,3 L7,4.41 L8.62,6.04 C7.88,6.55 7.26,7.22 6.81,8 L4,8 L4,10 L6.09,10 C6.04,10.33 6,10.66 6,11 L6,12 L4,12 L4,14 L6,14 L6,15 C6,15.34 6.04,15.67 6.09,16 L4,16 L4,18 L6.81,18 C7.85,19.79 9.78,21 12,21 C14.22,21 16.15,19.79 17.19,18 L20,18 L20,16 L17.91,16 C17.96,15.67 18,15.34 18,15 L18,14 L20,14 L20,12 L18,12 L18,11 C18,10.66 17.96,10.33 17.91,10 L20,10 L20,8 Z\\\" id=\\\"mdi:bug\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/call-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,15.5 C18.8,15.5 17.5,15.3 16.4,14.9 C16.3,14.9 16.2,14.9 16.1,14.9 C15.8,14.9 15.6,15 15.4,15.2 L13.2,17.4 C10.4,15.9 8,13.6 6.6,10.8 L8.8,8.6 C9.1,8.3 9.2,7.9 9,7.6 C8.7,6.5 8.5,5.2 8.5,4 C8.5,3.5 8,3 7.5,3 L4,3 C3.5,3 3,3.5 3,4 C3,13.4 10.6,21 20,21 C20.5,21 21,20.5 21,20 L21,16.5 C21,16 20.5,15.5 20,15.5 L20,15.5 Z M5,5 L6.5,5 C6.6,5.9 6.8,6.8 7,7.6 L5.8,8.8 C5.4,7.6 5.1,6.3 5,5 L5,5 Z M19,19 C17.7,18.9 16.4,18.6 15.2,18.2 L16.4,17 C17.2,17.2 18.1,17.4 19,17.4 L19,19 Z\\\" id=\\\"mdi:phone-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/call\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M6.62,10.79 C8.06,13.62 10.38,15.94 13.21,17.38 L15.41,15.18 C15.69,14.9 16.08,14.82 16.43,14.93 C17.55,15.3 18.75,15.5 20,15.5 C20.5522847,15.5 21,15.9477153 21,16.5 L21,20 C21,20.5522847 20.5522847,21 20,21 C10.6111593,21 3,13.3888407 3,4 C3,3.73478351 3.10535684,3.4804296 3.29289322,3.29289322 C3.4804296,3.10535684 3.73478351,3 4,3 L7.5,3 C8.05228475,3 8.5,3.44771525 8.5,4 C8.5,5.25 8.7,6.45 9.07,7.57 C9.18,7.92 9.1,8.31 8.82,8.59 L6.62,10.79 Z\\\" id=\\\"mdi:phone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/camera-retake\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,5 L17,5 L15,3 L9,3 L7,5 L4,5 C2.8954305,5 2,5.8954305 2,7 L2,19 C2,20.1045695 2.8954305,21 4,21 L20,21 C21.1045695,21 22,20.1045695 22,19 L22,7 C22,5.8954305 21.1045695,5 20,5 M12,18.0000026 C10.92,18.0000026 9.86,17.65 9,17 L10.44,15.56 C10.91,15.85 11.45,16 12,16 C13.6568542,16 15,14.6568542 15,13 C15,11.3431458 13.6568542,10 12,10 C10.74,10 9.6,10.8 9.18,12 L11,12 L8,15 L5,12 L7.1,12 C7.36424064,10.6999079 8.13463224,9.5582575 9.24136868,8.82668596 C10.3481051,8.09511441 11.7003328,7.83367752 13,8.1 C15.5173928,8.61117175 17.2378687,10.9467344 16.9797109,13.5024961 C16.7215532,16.0582577 14.5687655,18.0025816 12,18.0000026 L12,18.0000026 Z\\\" id=\\\"mdi:camera-retake\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/camera\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M4,5 L7,5 L9,3 L15,3 L17,5 L20,5 C21.1045695,5 22,5.8954305 22,7 L22,19 C22,20.1045695 21.1045695,21 20,21 L4,21 C2.8954305,21 2,20.1045695 2,19 L2,7 C2,5.8954305 2.8954305,5 4,5 M12,8 C9.23857625,8 7,10.2385763 7,13 C7,15.7614237 9.23857625,18 12,18 C14.7614237,18 17,15.7614237 17,13 C17,10.2385763 14.7614237,8 12,8 M12,10 C13.6568542,10 15,11.3431458 15,13 C15,14.6568542 13.6568542,16 12,16 C10.3431458,16 9,14.6568542 9,13 C9,11.3431458 10.3431458,10 12,10 Z\\\" id=\\\"mdi:camera\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/cancel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C14.6521649,2 17.195704,3.0535684 19.0710678,4.92893219 C20.9464316,6.80429597 22,9.3478351 22,12 C22,17.5228475 17.5228475,22 12,22 C9.3478351,22 6.80429597,20.9464316 4.92893219,19.0710678 C3.0535684,17.195704 2,14.6521649 2,12 C2,9.3478351 3.0535684,6.80429597 4.92893219,4.92893219 C6.80429597,3.0535684 9.3478351,2 12,2 M12,3.99999926 C7.581722,3.99999926 4,7.581722 4,11.9999993 C4,13.85 4.63,15.55 5.68,16.91 L16.91,5.68 C15.505295,4.59031127 13.7778124,3.99923779 12,3.99999926 M12,20.0000007 C16.418278,20.0000007 20,16.418278 20,12 C20,10.15 19.37,8.45 18.32,7.09 L7.09,18.32 C8.49470497,19.4096887 10.2221876,20.0007622 12,20.0000007 L12,20.0000007 Z\\\" id=\\\"mdi:cancel\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/channel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M6.5,12.5 C6.5,12.7761424 6.27614237,13 6,13 L5,13 C4.72385763,13 4.5,12.7761424 4.5,12.5 L4.5,9.997 L4.02563513,9.99796942 C3.49695533,9.99796942 3.06170233,9.63379568 3.00601829,9.10979782 L3,8.99514074 L3,7 C3,6.44278422 3.50172034,6 4.02563513,6 L8,6 L11,4 L11,12 L8,9.99796942 L6.5,9.997 L6.5,12.5 Z M12,6 C12.7835446,6.37375602 13.2808221,7.14951331 13.2820439,8 C13.2882682,8.85255761 12.7887168,9.63186239 12,10 L12,6 Z\\\" id=\\\"Horn\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chat\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,2 L4,2 C2.8954305,2 2,2.8954305 2,4 L2,22 L6,18 L20,18 C21.1045695,18 22,17.1045695 22,16 L22,4 C22,2.8954305 21.1045695,2 20,2 M6,9 L18,9 L18,11 L6,11 M14,14 L6,14 L6,12 L14,12 M18,8 L6,8 L6,6 L18,6\\\" id=\\\"mdi:message-text\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/check-circle\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C6.5,2 2,6.5 2,12 C2,17.5 6.5,22 12,22 C17.5,22 22,17.5 22,12 C22,6.5 17.5,2 12,2 M10,17 L5,12 L6.41,10.59 L10,14.17 L17.59,6.58 L19,8 L10,17 Z\\\" id=\\\"mdi:check-circle\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/check\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"check\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"21 7 9 19 3.5 13.5 4.91 12.09 9 16.17 19.59 5.59\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chevron-down\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:chevron-down\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"7.41 8.58 12 13.17 16.59 8.58 18 10 12 16 6 10\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chevron-left-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"xabber:chevron-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" transform=\\\"translate(11.5, 12) scale(-1, 1) translate(-11.5, -12)\\\" points=\\\"7 18.5 13.5 12 7 5.5 8.25 4.25 16 12 8.25 19.75\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chevron-right-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"xabber:chevron-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"8 18.5 14.5 12 8 5.5 9.25 4.25 17 12 9.25 19.75\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C13.93,5 15.68,5.78 16.95,7.05 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-1\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-2\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-2\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-3\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,13.93 18.22,15.68 16.95,16.95 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-3\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-4\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 L12,5 Z\\\" id=\\\"mdi:circle-slice-4\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-5\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 C10.07,19 8.32,18.22 7.05,16.95 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-5\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-6\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 C8.13,19 5,15.87 5,12 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-6\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-7\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 C8.13,19 5,15.87 5,12 C5,10.07 5.78,8.32 7.05,7.05 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-7\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-8\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 C8.13,19 5,15.87 5,12 C5,8.13 8.13,5 12,5 M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 Z\\\" id=\\\"mdi:circle-slice-8\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circles-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.61510772,4.31938417 C8.28417501,5.13922603 8.07752033,6.02134442 8.01792471,6.94352205 L7.91776678,6.99321105 C5.73983381,8.11301495 4.25,10.3825228 4.25,13 C4.25,16.7279221 7.27207794,19.75 11,19.75 C13.6571359,19.75 15.9556781,18.2146777 17.0568945,15.9827652 C17.9787775,15.9224511 18.8608306,15.7158021 19.6796219,15.3853225 C18.6352051,19.1981743 15.1448033,22 11,22 C6.02943725,22 2,17.9705627 2,13 C2,8.85508685 4.80197429,5.36460986 8.61510772,4.31938417 Z M16.5,1 C20.0898509,1 23,3.91014913 23,7.5 C23,11.0898509 20.0898509,14 16.5,14 C12.9101491,14 10,11.0898509 10,7.5 C10,3.91014913 12.9101491,1 16.5,1 Z M16.5,3 C14.0147186,3 12,5.01471863 12,7.5 C12,9.98528137 14.0147186,12 16.5,12 C18.9852814,12 21,9.98528137 21,7.5 C21,5.01471863 18.9852814,3 16.5,3 Z\\\" id=\\\"xabber:circles-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circles\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.61467749,4.32037814 C8.21824496,5.30257332 8,6.37579974 8,7.5 C8,12.1944204 11.8055796,16 16.5,16 C17.6242003,16 18.6974267,15.781755 19.6796219,15.3853225 C18.6352051,19.1981743 15.1448033,22 11,22 C6.02943725,22 2,17.9705627 2,13 C2,8.91703774 4.71884223,5.46909511 8.44481526,4.36788353 L8.61467749,4.32037814 Z M16.5,1 C20.0898509,1 23,3.91014913 23,7.5 C23,11.0898509 20.0898509,14 16.5,14 C12.9101491,14 10,11.0898509 10,7.5 C10,3.91014913 12.9101491,1 16.5,1 Z\\\" id=\\\"xabber:circles\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/client-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M23,4.5 C23,6.43 21.43,8 19.5,8 C17.57,8 16,6.43 16,4.5 C16,2.57 17.57,1 19.5,1 C21.43,1 23,2.57 23,4.5 M19.5,10 L19,10 L19,19 L5,19 L5,5 L14.03,5 C14,4.84 14,4.67 14,4.5 C14,4 14.08,3.5 14.21,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.11,21 21,20.11 21,19 L21,9.79 C20.5,9.92 20,10 19.5,10 Z\\\" id=\\\"mdi:checkbox-blank-badge-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/client\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M23,4.5 C23,6.43 21.43,8 19.5,8 C17.57,8 16,6.43 16,4.5 C16,2.57 17.57,1 19.5,1 C21.43,1 23,2.57 23,4.5 M19.5,10 C16.4647165,9.9944963 14.0055037,7.53528349 14,4.5 C14,4 14.08,3.5 14.21,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.11,21 21,20.11 21,19 L21,9.79 C20.5,9.92 20,10 19.5,10 Z\\\" id=\\\"mdi:checkout-blank-badge\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/clock-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 M12,2 C14.6521649,2 17.195704,3.0535684 19.0710678,4.92893219 C20.9464316,6.80429597 22,9.3478351 22,12 C22,17.5228475 17.5228475,22 12,22 C6.47,22 2,17.5 2,12 C2,6.4771525 6.4771525,2 12,2 M12.5,7 L12.5,12.25 L17,14.92 L16.25,16.15 L11,13 L11,7 L12.5,7 Z\\\" id=\\\"mdi:clock-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/close\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:close\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/cloud\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19.35,10.03 C18.67,6.59 15.64,4 12,4 C9.11,4 6.6,5.64 5.35,8.03 C2.34,8.36 0,10.9 0,14 C0,17.3137085 2.6862915,20 6,20 L19,20 C20.3260824,20 21.597852,19.4732158 22.5355339,18.5355339 C23.4732158,17.597852 24,16.3260824 24,15 C24,12.36 21.95,10.22 19.35,10.03 Z\\\" id=\\\"mdi:cloud\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/contact-add\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M15,14 C12.33,14 7,15.33 7,18 L7,20 L23,20 L23,18 C23,15.33 17.67,14 15,14 M6,10 L6,7.5 L4,7.5 L4,10 L1.5,10 L1.5,12 L4,12 L4,14.5 L6,14.5 L6,12 L8.5,12 L8.5,10 M15,12 C17.209139,12 19,10.209139 19,8 C19,5.790861 17.209139,4 15,4 C12.790861,4 11,5.790861 11,8 C11,10.209139 12.790861,12 15,12 Z\\\" id=\\\"xabber:contact-add\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/crosshairs-gps\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,8 C14.209139,8 16,9.790861 16,12 C16,14.209139 14.209139,16 12,16 C9.790861,16 8,14.209139 8,12 C8,9.790861 9.790861,8 12,8 M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\\\" id=\\\"mdi:crosshairs-gps\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/crosshairs-question\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13,5 5,8.13 5,12 C5,15.87 8.13,19 12,19 C15.87,19 19,15.87 19,12 C19,8.13 15.87,5 12,5 M11.13,17.25 L12.88,17.25 L12.88,15.5 L11.13,15.5 L11.13,17.25 M12,6.75 C10.07,6.75 8.5,8.32 8.5,10.25 L10.25,10.25 C10.25,9.28 11.03,8.5 12,8.5 C12.97,8.5 13.75,9.28 13.75,10.25 C13.75,12 11.13,11.78 11.13,14.63 L12.88,14.63 C12.88,12.66 15.5,12.44 15.5,10.25 C15.5,8.32 13.93,6.75 12,6.75 Z\\\" id=\\\"mdi:crosshairs-question\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/crosshairs\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\\\" id=\\\"mdi:crosshairs\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/database-lock\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,3 C15.42,3 19,4.79 19,7 C19,9.21 15.42,11 11,11 C6.58,11 3,9.21 3,7 C3,4.79 6.58,3 11,3 M19,12.03 C17.11,12.24 15.57,13.62 15.13,15.43 C13.92,15.79 12.5,16 11,16 C6.58,16 3,14.21 3,12 L3,9 C3,11.21 6.58,13 11,13 C15.42,13 19,11.21 19,9 L19,12.03 M14,17.71 L14,20.71 C13.07,20.9 12.06,21 11,21 C6.58,21 3,19.21 3,17 L3,14 C3,16.21 6.58,18 11,18 C12.06,18 13.07,17.9 14,17.71 M19.5,14 C20.8807119,14 22,15.1192881 22,16.5 L22,17 C22.5522847,17 23,17.4477153 23,18 L23,22 C23,22.5522847 22.5522847,23 22,23 L17,23 C16.4477153,23 16,22.5522847 16,22 L16,18 C16,17.4477153 16.4477153,17 17,17 L17,16.5 C17,15.1192881 18.1192881,14 19.5,14 M19.5,15 C18.6715729,15 18,15.6715729 18,16.5 L18,17 L21,17 L21,16.5 C21,15.6715729 20.3284271,15 19.5,15 Z\\\" id=\\\"mdi:database-lock\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/database\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 C7.58,3 4,4.79 4,7 C4,9.21 7.58,11 12,11 C16.42,11 20,9.21 20,7 C20,4.79 16.42,3 12,3 M4,9 L4,12 C4,14.21 7.58,16 12,16 C16.42,16 20,14.21 20,12 L20,9 C20,11.21 16.42,13 12,13 C7.58,13 4,11.21 4,9 M4,14 L4,17 C4,19.21 7.58,21 12,21 C16.42,21 20,19.21 20,17 L20,14 C20,16.21 16.42,18 12,18 C7.58,18 4,16.21 4,14 Z\\\" id=\\\"mdi:database\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/description-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.11 3.89,21 5,21 L19,21 C20.11,21 21,20.11 21,19 L21,5 C21,3.89 20.11,3 19,3 L5,3 M5,5 L19,5 L19,19 L5,19 L5,5 M7,7 L7,9 L17,9 L17,7 L7,7 M7,11 L7,13 L17,13 L17,11 L7,11 M7,15 L7,17 L14,17 L14,15 L7,15 Z\\\" id=\\\"mdi:text-box-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/description\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,17 L7,17 L7,15 L14,15 M17,13 L7,13 L7,11 L17,11 M17,9 L7,9 L7,7 L17,7 M19,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 Z\\\" id=\\\"mdi:text-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-cellphone\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,20 L7,20 L7,4 L17,4 M17,1 L7,1 C5.89,1 5,1.89 5,3 L5,21 C5,22.1045695 5.8954305,23 7,23 L17,23 C18.1045695,23 19,22.1045695 19,21 L19,3 C19,1.8954305 18.1045695,1 17,1 Z\\\" id=\\\"xabber:cellphone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-console\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,2 C22.0543618,2 22.9181651,2.81587779 22.9945143,3.85073766 L23,4 L23,16 C23,17.0543618 22.1841222,17.9181651 21.1492623,17.9945143 L21,18 L14,18 L14,20 L16,20 L16,22 L8,22 L8,20 L10,20 L10,18 L3,18 C1.9456382,18 1.08183488,17.1841222 1.00548574,16.1492623 L1,16 L1,4 C1,2.94045455 1.81092975,2.08136364 2.85006292,2.00545361 L3,2 L21,2 Z M21,4 L3,4 L3,16 L21,16 L21,4 Z M18,12 L18,14 L13,14 L13,12 L18,12 Z M8.4,6 L11.7,9.3 C12.09,9.69 12.09,10.33 11.7,10.72 L8.42,14 L5.59,14 L9.58,10 L5.57,6 L8.4,6 Z\\\" id=\\\"xabber.monitor-console\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-desktop\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,16 L3,16 L3,4 L21,4 M21,2 L3,2 C1.89,2 1,2.89 1,4 L1,16 C1,17.1045695 1.8954305,18 3,18 L10,18 L10,20 L8,20 L8,22 L16,22 L16,20 L14,20 L14,18 L21,18 C22.1045695,18 23,17.1045695 23,16 L23,4 C23,2.8954305 22.1045695,2 21,2 Z\\\" id=\\\"mdi:monitor\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-tablet\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,18 L4,18 L4,6 L20,6 M21,4 L3,4 C1.89,4 1,4.89 1,6 L1,18 C1,19.1045695 1.8954305,20 3,20 L21,20 C22.1045695,20 23,19.1045695 23,18 L23,6 C23,4.8954305 22.1045695,4 21,4 Z\\\" id=\\\"xabber:tablet\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-web\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,2 C22.0543618,2 22.9181651,2.81587779 22.9945143,3.85073766 L23,4 L23,16 C23,17.0543618 22.1841222,17.9181651 21.1492623,17.9945143 L21,18 L14,18 L14,20 L16,20 L16,22 L8,22 L8,20 L10,20 L10,18 L3,18 C1.9456382,18 1.08183488,17.1841222 1.00548574,16.1492623 L1,16 L1,4 C1,2.94045455 1.81092975,2.08136364 2.85006292,2.00545361 L3,2 L21,2 Z M21,4 L3,4 L3,16 L21,16 L21,4 Z M9.59,6.41 L10.5,7.5 L8,10 L10.5,12.5 L9.59,13.5 L6,10 L9.59,6.41 Z M14.5,6.50152764 L18,10 L14.5,13.5 L13.5,12.5 L16,10 L13.5,7.5 L14.5,6.50152764 Z\\\" id=\\\"xabber.monitor-tag\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/devices\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M23,11 L18,11 C17.4477153,11 17,11.4477153 17,12 L17,21 C17,21.5522847 17.4477153,22 18,22 L23,22 C23.5522847,22 24,21.5522847 24,21 L24,12 C24,11.4477153 23.5522847,11 23,11 M23,20 L18,20 L18,13 L23,13 L23,20 M20,2 L2,2 C0.89,2 0,2.89 0,4 L0,16 C0,17.1045695 0.8954305,18 2,18 L9,18 L9,20 L7,20 L7,22 L15,22 L15,20 L13,20 L13,18 L15,18 L15,16 L2,16 L2,4 L20,4 L20,9 L22,9 L22,4 C22,2.8954305 21.1045695,2 20,2 Z\\\" id=\\\"mdi:monitor-cellphone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/download\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M5,20 L19,20 L19,18 L5,18 M19,9 L15,9 L15,3 L9,3 L9,9 L5,9 L12,16 L19,9 Z\\\" id=\\\"mdi:download\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/edit-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14.06,9 L15,9.94 L5.92,19 L5,19 L5,18.08 L14.06,9 M17.66,3 C17.41,3 17.15,3.1 16.96,3.29 L15.13,5.12 L18.88,8.87 L20.71,7.04 C21.1,6.65 21.1,6 20.71,5.63 L18.37,3.29 C18.17,3.09 17.92,3 17.66,3 M14.06,6.19 L3,17.25 L3,21 L6.75,21 L17.81,9.94 L14.06,6.19 Z\\\" id=\\\"mdi:pencil-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/edit\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20.71,7.04 C21.1,6.65 21.1,6 20.71,5.63 L18.37,3.29 C18,2.9 17.35,2.9 16.96,3.29 L15.12,5.12 L18.87,8.87 M3,17.25 L3,21 L6.75,21 L17.81,9.93 L14.06,6.18 L3,17.25 Z\\\" id=\\\"mdi:pencil\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/email-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M22,6 C22,4.9 21.1,4 20,4 L4,4 C2.9,4 2,4.9 2,6 L2,18 C2,19.1 2.9,20 4,20 L20,20 C21.1,20 22,19.1 22,18 L22,6 M20,6 L12,11 L4,6 L20,6 M20,18 L4,18 L4,8 L12,13 L20,8 L20,18 Z\\\" id=\\\"mdi:email-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/email\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,8 L12,13 L4,8 L4,6 L12,11 L20,6 M20,4 L4,4 C2.89,4 2,4.89 2,6 L2,18 C2,19.1045695 2.8954305,20 4,20 L20,20 C21.1045695,20 22,19.1045695 22,18 L22,6 C22,4.89 21.1,4 20,4 Z\\\" id=\\\"mdi:email\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/expires\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19.03,7.39 L20.45,5.97 C20.0000001,5.46 19.55,5 19.04,4.56 L17.62,6 C16.07,4.74 14.12,4 12.0000001,4 C7.0294373,4 3.00000013,8.0294373 3.00000013,13 C3.00000013,17.9705627 7.0294373,22 12.0000001,22 C17.0000001,22 21.0000001,17.97 21.0000001,13 C21.0000001,10.88 20.26,8.93 19.03,7.39 M13,14 L11,14 L11,7 L13,7 L13,14 M15,1 L9,1 L9,3 L15,3 L15,1 Z\\\" id=\\\"mdi:timer\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-audio\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 L12,13.55 C11.41,13.21 10.73,13 10,13 C7.79,13 6,14.79 6,17 C6,19.21 7.79,21 10,21 C12.21,21 14,19.21 14,17 L14,7 L18,7 L18,3 L12,3 Z\\\" id=\\\"mdi:music-note\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-document\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L18.5,9 L13,3.5 L13,9 M6,2 L14,2 L20,8 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,4 C4,2.89 4.89,2 6,2 M15,18 L15,16 L6,16 L6,18 L15,18 M18,14 L18,12 L6,12 L6,14 L18,14 Z\\\" id=\\\"mdi:file-document\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-pdf\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,3 C20.1045695,3 21,3.8954305 21,5 L21,19 C21,20.1045695 20.1045695,21 19,21 L5,21 C3.89,21 3,20.1 3,19 L3,5 C3,3.89 3.89,3 5,3 L19,3 M10.59,10.08 C10.57,10.13 10.3,11.84 8.5,14.77 C8.5,14.77 5,16.58 5.83,17.94 C6.5,19 8.15,17.9 9.56,15.27 C9.56,15.27 11.38,14.63 13.79,14.45 C13.79,14.45 17.65,16.19 18.17,14.34 C18.69,12.5 15.12,12.9 14.5,13.09 C14.5,13.09 12.46,11.75 12,9.89 C12,9.89 13.13,5.95 11.38,6 C9.63,6.05 10.29,9.12 10.59,10.08 M11.4,11.13 C11.43,11.13 11.87,12.33 13.29,13.58 C13.29,13.58 10.96,14.04 9.9,14.5 C9.9,14.5 10.9,12.75 11.4,11.13 M15.32,13.84 C15.9,13.69 17.64,14 17.58,14.32 C17.5,14.65 15.32,13.84 15.32,13.84 M8.26,15.7 C7.73,16.91 6.83,17.68 6.6,17.67 C6.37,17.66 7.3,16.07 8.26,15.7 M11.4,8.76 C11.39,8.71 11.03,6.57 11.4,6.61 C11.94,6.67 11.4,8.71 11.4,8.76 Z\\\" id=\\\"mdi:file-pdf-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-presentation\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,2 L13,2 L13,3 L19,3 C20.1045695,3 21,3.8954305 21,5 L21,16 C21,17.1045695 20.1045695,18 19,18 L13,18 L13,21 L17,21 L17,23 L7,23 L7,21 L11,21 L11,18 L5,18 C3.8954305,18 3,17.1045695 3,16 L3,5 C3,3.8954305 3.8954305,3 5,3 L11,3 L11,2 Z M19,5 L5,5 L5,16 L19,16 L19,5 Z M9,9 L9,14 L7,14 L7,9 L9,9 Z M13,7 L13,14 L11,14 L11,7 L13,7 Z M17,11 L17,14 L15,14 L15,11 L17,11 Z\\\" id=\\\"xabber:presentation\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-video\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18,9 L16,9 L16,7 L18,7 M18,13 L16,13 L16,11 L18,11 M18,17 L16,17 L16,15 L18,15 M8,9 L6,9 L6,7 L8,7 M8,13 L6,13 L6,11 L8,11 M8,17 L6,17 L6,15 L8,15 M18,3 L18,5 L16,5 L16,3 L8,3 L8,5 L6,5 L6,3 L4,3 L4,21 L6,21 L6,19 L8,19 L8,21 L16,21 L16,19 L18,19 L18,21 L20,21 L20,3 L18,3 Z\\\" id=\\\"mdi:filmstrip\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-zip\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,17 L12,17 L12,15 L10,15 L10,13 L12,13 L12,15 L14,15 M14,9 L12,9 L12,11 L14,11 L14,13 L12,13 L12,11 L10,11 L10,9 L12,9 L12,7 L10,7 L10,5 L12,5 L12,7 L14,7 M19,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 Z\\\" id=\\\"mdi:zip-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L13,3.5 L18.5,9 M6,2 C4.89,2 4,2.89 4,4 L4,20 C4,21.1045695 4.8954305,22 6,22 L18,22 C19.1045695,22 20,21.1045695 20,20 L20,8 L14,2 L6,2 Z\\\" id=\\\"mdi:file\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/fullname-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8,9 C9.1045695,9 10,9.8954305 10,11 C10,12.1045695 9.1045695,13 8,13 C6.8954305,13 6,12.1045695 6,11 C6,9.8954305 6.8954305,9 8,9 M12,17 L4,17 L4,16 C4,14.67 6.67,14 8,14 C9.33,14 12,14.67 12,16 L12,17 M20,8 L14,8 L14,10 L20,10 L20,8 M20,12 L14,12 L14,14 L20,14 L20,12 M20,16 L14,16 L14,18 L20,18 L20,16 M22,4 L14,4 L14,6 L22,6 L22,20 L2,20 L2,6 L10,6 L10,4 L2,4 C0.8954305,4 0,4.8954305 0,6 L0,20 C0,21.1045695 0.8954305,22 2,22 L22,22 C23.1045695,22 24,21.1045695 24,20 L24,6 C24,4.8954305 23.1045695,4 22,4 M13,6 L11,6 L11,2 L13,2 L13,6 Z\\\" id=\\\"mdi:badge-account-horizontal-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/fullname\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M22,4 L14,4 L14,7 L10,7 L10,4 L2,4 C0.8954305,4 0,4.8954305 0,6 L0,20 C0,21.1045695 0.8954305,22 2,22 L22,22 C23.1045695,22 24,21.1045695 24,20 L24,6 C24,4.8954305 23.1045695,4 22,4 M8,9 C9.1045695,9 10,9.8954305 10,11 C10,12.1045695 9.1045695,13 8,13 C6.8954305,13 6,12.1045695 6,11 C6,9.8954305 6.8954305,9 8,9 M12,17 L4,17 L4,16 C4,14.67 6.67,14 8,14 C9.33,14 12,14.67 12,16 L12,17 M20,18 L14,18 L14,16 L20,16 L20,18 M20,14 L14,14 L14,12 L20,12 L20,14 M20,10 L14,10 L14,8 L20,8 L20,10 M13,6 L11,6 L11,2 L13,2 L13,6 Z\\\" id=\\\"mdi:badge-account-horizontal\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-incognito\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10,8.00704958 C10.9597902,8.00704958 12.8474987,8.64533875 12.9912872,9.91524601 L13,10.0706662 L13,11.0070496 L10.7492023,11.0070496 L10.75,9.875 C10.75,9.10242267 10.3751421,8.46914598 9.75414509,8.01828756 L9.88054216,8.01011295 L10,8.00704958 Z M7,8 C8.71428571,8 10,8.75 10,9.875 L10,11 L4,11 L4,9.875 C4,8.75 5.28571429,8 7,8 Z M7,8.75 C5.68529006,8.75 4.83790401,9.22876096 4.75645218,9.78636102 L4.75,9.875 L4.75,10.25 L9.25,10.25 L9.25,9.875 C9.25,9.31020891 8.46834945,8.80320839 7.20365867,8.75392032 L7,8.75 Z M10.5,4 C11.3284271,4 12,4.67157288 12,5.5 C12,6.32842712 11.3284271,7 10.5,7 C10.0309641,7 9.61220865,6.78472342 9.33715065,6.44758714 C9.59948544,6.02690214 9.75,5.53102835 9.75,5 C9.75,4.7455993 9.71545544,4.49926692 9.65080116,4.2654377 C9.89064982,4.09777196 10.183907,4 10.5,4 Z M7,3 C8.1045695,3 9,3.8954305 9,5 C9,6.1045695 8.1045695,7 7,7 C5.8954305,7 5,6.1045695 5,5 C5,3.8954305 5.8954305,3 7,3 Z M7,3.75 C6.30964406,3.75 5.75,4.30964406 5.75,5 C5.75,5.69035594 6.30964406,6.25 7,6.25 C7.69035594,6.25 8.25,5.69035594 8.25,5 C8.25,4.30964406 7.69035594,3.75 7,3.75 Z\\\" id=\\\"incognito\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-invite\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M4.8,5 L11.2,5 C11.64,5 12,5.33981818 12,5.76363636 L12,10.2363636 C12,10.6581084 11.6418278,11 11.2,11 L4.8,11 C4.3581722,11 4,10.6581084 4,10.2363636 L4,5.76363636 C4,5.33981818 4.356,5 4.8,5 Z M4.57142857,5.81818182 L4.57142857,6.90909091 L8,9.09090909 L11.4285714,6.90909091 L11.4285714,5.81818182 L8,8 L4.57142857,5.81818182 Z\\\" id=\\\"invitation\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-private\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M5.54386908,9.00001406 C4.74833179,9.00015914 4.03626356,9.50273575 3.75677818,10.2613541 C3.4772928,11.0199725 3.68898239,11.8755937 4.28805949,12.4087226 C4.88713659,12.9418515 5.74800895,13.0407214 6.44860686,12.6568582 C7.14920477,12.272995 7.54265288,11.4868729 7.43605089,10.683913 C7.61005089,10.6450242 7.79823271,10.6139132 7.99841453,10.6144687 C8.19859635,10.6155798 8.38677817,10.6450242 8.56077817,10.683913 C8.45417618,11.4868729 8.84762429,12.272995 9.5482222,12.6568582 C10.2488201,13.0407214 11.1096925,12.9418515 11.7087696,12.4087226 C12.3078467,11.8755937 12.5195363,11.0199725 12.2400509,10.2613541 C11.9605655,9.50273575 11.2484973,9.00015914 10.45296,9.00001406 C9.6733377,8.99699984 8.97079939,9.47872777 8.68023271,10.2155808 C8.45968538,10.1448214 8.22964016,10.109582 7.99841453,10.1111366 C7.69841453,10.1111366 7.49059635,10.1616921 7.31659635,10.2155808 C7.02602967,9.47872777 6.32349136,8.99699984 5.54386908,9.00001406 L5.54386908,9.00001406 Z M5.54386908,9.55558244 C6.29698464,9.55558244 6.90750544,10.1774076 6.90750544,10.9444679 C6.90750544,11.7115282 6.29698464,12.3333534 5.54386908,12.3333534 C4.79075351,12.3333534 4.18023271,11.7115282 4.18023271,10.9444679 C4.18023271,10.1774076 4.79075351,9.55558244 5.54386908,9.55558244 Z M10.45296,9.55558244 C11.2060756,9.55558244 11.8165963,10.1774076 11.8165963,10.9444679 C11.8165963,11.7115282 11.2060756,12.3333534 10.45296,12.3333534 C9.69984442,12.3333534 9.08932362,11.7115282 9.08932362,10.9444679 C9.08932362,10.1774076 9.69984442,9.55558244 10.45296,9.55558244 Z M8,7 C6.512,7 4.39345455,7.268 4.25,7.297 C3.78243762,7.41026088 3.32163107,7.54577794 2.86945455,7.703 C2.31418182,7.877 2,8 2,8 L14,8 C14,8 13.6858182,7.877 13.1305455,7.703 C12.6727414,7.54549536 12.2062901,7.40997808 11.7330909,7.297 C11.7330909,7.297 9.54036364,7 8,7 Z M8,3 C6.53163636,3.0015 5.49418182,3.6095 5.49418182,3.6095 L4.72727273,6 L11.2727273,6 L10.5058182,3.6095 C10.5058182,3.6095 9.46836364,3.001 8,3 Z\\\" id=\\\"private\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-public\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10.500501,8 C11.3287776,8 11.995,7.328 11.995,6.5 C11.995,5.672 11.3287776,5 10.500501,5 C9.67222445,5 9,5.672 9,6.5 C9,7.328 9.67222445,8 10.500501,8 Z M6.5,7 C7.33,7 7.995,6.33 7.995,5.5 C7.995,4.67 7.33,4 6.5,4 C5.67,4 5,4.67 5,5.5 C5,6.33 5.67,7 6.5,7 Z M10.5,9 C9.66818182,9 8,9.46 8,10.375 L8,10.9989178 L13,10.9989178 L13,10.375 C13,9.46 11.3318182,9 10.5,9 Z M6.50474946,7.99186821 C4.77490105,7.99186821 3,8.585 3,9.75 L3,11 L7,11 L7,10 C7,9.24841871 7.73828683,8.72461975 8.70884076,8.35916117 C8.08932051,8.04219075 6.85693708,7.99186821 6.50474946,7.99186821 Z\\\" id=\\\"xabber:group-public\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/history\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.5,8 L12,8 L12,13 L16.28,15.54 L17,14.33 L13.5,12.25 L13.5,8 M13,3 C8.02943725,3 4,7.02943725 4,12 L1,12 L4.96,16.03 L9,12 L6,12 C6,8.13400675 9.13400675,5 13,5 C16.8659932,5 20,8.13400675 20,12 C20,15.8659932 16.8659932,19 13,19 C11.07,19 9.32,18.21 8.06,16.94 L6.64,18.36 C8.31963558,20.0581063 10.6115589,21.0094707 13,21.00007 C17.9705627,21.00007 22,16.9705627 22,12 C22,7.02943725 17.9705627,3 13,3\\\" id=\\\"mdi:history\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<path fill=\\\"#9E9E9E\\\" d=\\\"M12,15C12.81,15 13.5,14.7 14.11,14.11C14.7,13.5 15,12.81 15,12C15,11.19 14.7,10.5 14.11,9.89C13.5,9.3 12.81,9 12,9C11.19,9 10.5,9.3 9.89,9.89C9.3,10.5 9,11.19 9,12C9,12.81 9.3,13.5 9.89,14.11C10.5,14.7 11.19,15 12,15M12,2C14.75,2 17.1,3 19.05,4.95C21,6.9 22,9.25 22,12V13.45C22,14.45 21.65,15.3 21,16C20.3,16.67 19.5,17 18.5,17C17.3,17 16.31,16.5 15.56,15.5C14.56,16.5 13.38,17 12,17C10.63,17 9.45,16.5 8.46,15.54C7.5,14.55 7,13.38 7,12C7,10.63 7.5,9.45 8.46,8.46C9.45,7.5 10.63,7 12,7C13.38,7 14.55,7.5 15.54,8.46C16.5,9.45 17,10.63 17,12V13.45C17,13.86 17.16,14.22 17.46,14.53C17.76,14.84 18.11,15 18.5,15C18.92,15 19.27,14.84 19.57,14.53C19.87,14.22 20,13.86 20,13.45V12C20,9.81 19.23,7.93 17.65,6.35C16.07,4.77 14.19,4 12,4C9.81,4 7.93,4.77 6.35,6.35C4.77,7.93 4,9.81 4,12C4,14.19 4.77,16.07 6.35,17.65C7.93,19.23 9.81,20 12,20H17V22H12C9.25,22 6.9,21 4.95,19.05C3,17.1 2,14.75 2,12C2,9.25 3,6.9 4.95,4.95C6.9,3 9.25,2 12,2Z\\\" />\";","export default \"<path\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path5\\\"\\n     d=\\\"m 5.2462478,6.4309194 c 0,0 0.2534497,0.5323027 1.6195791,-0.2126538 C 9.2126105,5.0708821 11.67437,4.0095 14.785441,5.5382202 17.009904,6.7924 17.27733,10.360371 13.864368,13.369134 c -1.679464,1.609494 -1.887868,4.226006 -1.825254,4.993295 -0.128246,1.561168 0.259655,1.837265 0.594912,1.938246 0.335257,0.100981 1.461445,-0.04379 1.305934,-1.000087 -0.193265,-1.461227 -0.06192,-2.413209 0.855267,-4.044829 0.758763,-1.162942 2.123721,-1.871086 3.273016,-4.211889 C 18.840748,9.1444158 18.891207,6.503336 17.479328,4.894053 16.152845,3.3821059 14.670099,2.4131656 12.422552,2.4210559 9.8716741,2.446853 8.13424,2.8374168 6.751418,3.5206351 4.5012489,4.730324 4.2973099,4.8714754 5.2462478,6.4309194 z\\\"\\n     clip-rule=\\\"evenodd\\\"\\n     sodipodi:nodetypes=\\\"cccccscccsccc\\\" />\\n<path\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path7\\\"\\n     d=\\\"M 10.393116,10.546893 C 10.179036,9.8582024 9.6418168,9.5037588 9.1268128,9.5037588 c -0.686671,0 -1.6386388,0.1373222 -1.6546508,1.5832442 0,0 0.5308711,2.944458 1.5235151,2.93234 0.364542,-0.004 0.7403587,-0.28287 0.017892,-1.856769 0,0 -0.4395592,-0.974022 -0.1380497,-1.193301 0.5440269,-0.394487 0.5911749,0.418754 0.9156116,1.069105 0.674692,0.328471 1.06244,-0.702948 1.201092,-0.722298 1.026124,-0.142524 -0.130551,1.372622 -0.2386,1.539241 -0.467844,0.515308 -1.3020963,1.251877 -0.614252,1.612091 0.864686,0.205725 1.292561,-0.492065 1.464229,-0.658684 0.2663,-0.37565 0.549622,-0.820112 0.721289,-1.133153 0.877971,-1.468145 0.834305,-2.8722146 -0.558429,-2.9011876 -0.515004,0 -0.814918,0.2302366 -1.373344,0.7725056 z\\\"\\n     clip-rule=\\\"evenodd\\\"\\n     sodipodi:nodetypes=\\\"cscccccccccccc\\\" />\\n<path\\n     sodipodi:nodetypes=\\\"cssccsccccssccssc\\\"\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path9\\\"\\n     d=\\\"m 6.8360046,14.735541 c -0.2526865,-0.134842 -0.341246,-0.148685 -0.556785,-0.125105 -0.4758127,0.05205 -0.712045,0.475393 -0.6165306,0.901178 0.2727696,1.215955 1.0359093,1.641989 2.25985,2.132257 1.2530682,0.41756 2.475738,0.396638 3.398493,-0.0757 0.298412,-0.05064 0.287556,-0.683612 0.292618,-1.034981 0.006,-0.414484 -0.327129,-0.528727 -0.651454,-0.493243 -0.82369,0.222079 -0.891361,0.338578 -1.882259,0.248554 -1.1996954,-0.369888 -1.6284239,-0.589257 -2.2439324,-1.55296 z m -0.596727,2.884244 c -0.1641271,-0.121 -0.2921232,-0.08347 -0.442594,-0.06701 -0.3893935,0.0426 -0.727761,0.382603 -0.6463412,0.81143 0.2795655,1.472433 3.2776659,2.179707 4.6014193,2.113323 1.0831623,-0.05044 1.6865703,-0.273231 1.7646093,-1.16247 -0.03364,-0.366114 -0.266964,-0.659232 -0.720411,-0.609623 -0.432095,0.04727 -0.373883,0.118182 -1.0438868,0.191485 C 8.563559,19.026954 7.5842504,18.723225 6.2392776,17.619785 z\\\"\\n     clip-rule=\\\"evenodd\\\" />\\n\";","export default \"<path fill=\\\"#9E9E9E\\\" d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\" />\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/id-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C15.8659932,2 19,5.13400675 19,9 C19,11.38 17.81,13.47 16,14.74 L16,17 C16,17.5522847 15.5522847,18 15,18 L9,18 C8.44771525,18 8,17.5522847 8,17 L8,14.74 C6.19,13.47 5,11.38 5,9 C5,5.13400675 8.13400675,2 12,2 M9,21 L9,20 L15,20 L15,21 C15,21.5522847 14.5522847,22 14,22 L10,22 C9.44771525,22 9,21.5522847 9,21 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,11.05 8.23,12.81 10,13.58 L10,16 L14,16 L14,13.58 C15.77,12.81 17,11.05 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:lightbulb-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/id\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C8.13400675,2 5,5.13400675 5,9 C5,11.38 6.19,13.47 8,14.74 L8,17 C8,17.5522847 8.44771525,18 9,18 L15,18 C15.5522847,18 16,17.5522847 16,17 L16,14.74 C17.81,13.47 19,11.38 19,9 C19,5.13400675 15.8659932,2 12,2 M9,21 C9,21.5522847 9.44771525,22 10,22 L14,22 C14.5522847,22 15,21.5522847 15,21 L15,20 L9,20 L9,21 Z\\\" id=\\\"mdi:lightbulb\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/image\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.5,13.5 L11,16.5 L14.5,12 L19,18 L5,18 M21,19 L21,5 C21,3.89 20.1,3 19,3 L5,3 C3.8954305,3 3,3.8954305 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 Z\\\" id=\\\"mdi:image\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/index\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C7.581722,2 4,5.581722 4,10 C4,14.03 7,17.42 11,17.93 L11,19 L10,19 C9.44771525,19 9,19.4477153 9,20 L2,20 L2,22 L9,22 C9,22.5522847 9.44771525,23 10,23 L14,23 C14.5522847,23 15,22.5522847 15,22 L22,22 L22,20 L15,20 C15,19.4477153 14.5522847,19 14,19 L13,19 L13,17.93 C17,17.43 20,14.03 20,10 C20,5.581722 16.418278,2 12,2 M12,4 C12,4 12.74,5.28 13.26,7 L10.74,7 C11.26,5.28 12,4 12,4 M9.77,4.43 C9.5,4.93 9.09,5.84 8.74,7 L6.81,7 C7.5,5.84 8.5,4.93 9.77,4.43 M14.23,4.44 C15.5,4.94 16.5,5.84 17.19,7 L15.26,7 C14.91,5.84 14.5,4.93 14.23,4.44 M6.09,9 L8.32,9 C8.28,9.33 8.25,9.66 8.25,10 C8.25,10.34 8.28,10.67 8.32,11 L6.09,11 C5.96891098,10.3388318 5.96891098,9.66116821 6.09,9 M10.32,9 L13.68,9 C13.72,9.33 13.75,9.66 13.75,10 C13.75,10.34 13.72,10.67 13.68,11 L10.32,11 C10.28,10.67 10.25,10.34 10.25,10 C10.25,9.66 10.28,9.33 10.32,9 M15.68,9 L17.91,9 C18.031089,9.66116821 18.031089,10.3388318 17.91,11 L15.68,11 C15.72,10.67 15.75,10.34 15.75,10 C15.75,9.66 15.72,9.33 15.68,9 M6.81,13 L8.74,13 C9.09,14.16 9.5,15.07 9.77,15.56 C8.5,15.06 7.5,14.16 6.81,13 M10.74,13 L13.26,13 C12.74,14.72 12,16 12,16 C12,16 11.26,14.72 10.74,13 M15.26,13 L17.19,13 C16.5,14.16 15.5,15.07 14.23,15.57 C14.5,15.07 14.91,14.16 15.26,13 Z\\\" id=\\\"mdi:wan\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/information-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,9 L13,9 L13,7 L11,7 M12,20 C7.59,20 4,16.41 4,12 C4,7.59 7.59,4 12,4 C16.41,4 20,7.59 20,12 C20,16.41 16.41,20 12,20 M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 M11,17 L13,17 L13,11 L11,11 L11,17 Z\\\" id=\\\"mdi:information-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/information\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L11,9 L11,7 L13,7 M13,17 L11,17 L11,11 L13,11 M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 Z\\\" id=\\\"mdi:information\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/invite-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 L15.77,4.36 L19,4.36 L19,6.36 L21.03,7.65 C21.5653846,7.97307692 21.9388757,8.53473373 21.993168,9.19339554 L22,9.36 L22,19.36 C22,20.4195455 21.1890702,21.2786364 20.1499371,21.3545464 L20,21.36 L4,21.36 C2.9456382,21.36 2.08183488,20.5441222 2.00548574,19.5092623 L2,19.36 L2,9.36 C2,8.68615385 2.33230769,8.09751479 2.83961766,7.73565772 L5,6.36 L5,4.36 L8.23,4.36 L12,2 Z M20,11.36 L12,16.36 L4,11.36 L4,19.36 L20,19.36 L20,11.36 Z M17,6.36 L7,6.36 L7,11.24 L12,14.36 L17,11.24 L17,6.36 Z M16,9.86 L16,11.36 L8,11.36 L8,9.86 L16,9.86 Z M19,8.74 L19,9.99 L20,9.36 L19,8.74 Z M5,8.74 L4,9.36 L5,9.99 L5,8.74 Z M16,7.36 L16,8.86 L8,8.86 L8,7.36 L16,7.36 Z\\\" id=\\\"xabber:invite-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/invite\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,0.64 L8.23,3 L5,3 L5,5 L2.97,6.29 C2.39,6.64 2,7.27 2,8 L2,18 C2,19.1045695 2.8954305,20 4,20 L20,20 C21.11,20 22,19.11 22,18 L22,8 C22,7.27 21.61,6.64 21.03,6.29 L19,5 L19,3 L15.77,3 M7,5 L17,5 L17,9.88 L12,13 L7,9.88 M8,6 L8,7.5 L16,7.5 L16,6 M5,7.38 L5,8.63 L4,8 M19,7.38 L20,8 L19,8.63 M8,8.5 L8,10 L16,10 L16,8.5 L8,8.5 Z\\\" id=\\\"mdi:email-newsletter\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/job-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,6 C20.58,6 21.05,6.2 21.42,6.59 C21.8,7 22,7.45 22,8 L22,19 C22,19.55 21.8,20 21.42,20.41 C21.05,20.8 20.58,21 20,21 L4,21 C3.42,21 2.95,20.8 2.58,20.41 C2.2,20 2,19.55 2,19 L2,8 C2,7.45 2.2,7 2.58,6.59 C2.95,6.2 3.42,6 4,6 L8,6 L8,4 C8,3.42 8.2,2.95 8.58,2.58 C8.95,2.2 9.42,2 10,2 L14,2 C14.58,2 15.05,2.2 15.42,2.58 C15.8,2.95 16,3.42 16,4 L16,6 L20,6 M4,8 L4,19 L20,19 L20,8 L4,8 M14,6 L14,4 L10,4 L10,6 L14,6 Z\\\" id=\\\"mdi:briefcase-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/job\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,2 L14,2 C15.1045695,2 16,2.8954305 16,4 L16,6 L20,6 C21.1045695,6 22,6.8954305 22,8 L22,19 C22,20.1045695 21.1045695,21 20,21 L4,21 C2.89,21 2,20.1 2,19 L2,8 C2,6.89 2.89,6 4,6 L8,6 L8,4 C8,2.89 8.89,2 10,2 M14,6 L14,4 L10,4 L10,6 L14,6 Z\\\" id=\\\"mdi:briefcase\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/key-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M7,14 C5.8954305,14 5,13.1045695 5,12 C5,10.8954305 5.8954305,10 7,10 C8.1045695,10 9,10.8954305 9,12 C9,13.1045695 8.1045695,14 7,14 M12.65,10 C11.8057828,7.60319579 9.54113618,6 7,6 C3.6862915,6 1,8.6862915 1,12 C1,15.3137085 3.6862915,18 7,18 C9.54113618,18 11.8057828,16.3968042 12.65,14 L15,14 L15,18 L18,18 L18,14 L19,14 L19,18 L22,18 L22,14 L23,14 L23,10 L12.65,10 Z\\\" id=\\\"xabber:key-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/key\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M7,14 C5.8954305,14 5,13.1045695 5,12 C5,10.8954305 5.8954305,10 7,10 C8.1045695,10 9,10.8954305 9,12 C9,13.1045695 8.1045695,14 7,14 M12.65,10 C11.8057828,7.60319579 9.54113618,6 7,6 C3.6862915,6 1,8.6862915 1,12 C1,15.3137085 3.6862915,18 7,18 C9.54113618,18 11.8057828,16.3968042 12.65,14 L17,14 L17,18 L21,18 L21,14 L23,14 L23,10 L12.65,10 Z\\\" id=\\\"mdi:key\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/link\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.9,12 C3.9,10.29 5.29,8.9 7,8.9 L11,8.9 L11,7 L7,7 C4.23857625,7 2,9.23857625 2,12 C2,14.7614237 4.23857625,17 7,17 L11,17 L11,15.1 L7,15.1 C5.29,15.1 3.9,13.71 3.9,12 M8,13 L16,13 L16,11 L8,11 L8,13 M17,7 L13,7 L13,8.9 L17,8.9 C18.71,8.9 20.1,10.29 20.1,12 C20.1,13.71 18.71,15.1 17,15.1 L13,15.1 L13,17 L17,17 C19.7614237,17 22,14.7614237 22,12 C22,9.23857625 19.7614237,7 17,7 Z\\\" id=\\\"mdi:link\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-alert\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,17 C11.1,17 12,16.1 12,15 C12,13.9 11.1,13 10,13 C8.9,13 8,13.9 8,15 C8,16.1 8.9,17 10,17 M16,8 C17.1,8 18,8.9 18,10 L18,20 C18,21.1 17.1,22 16,22 L4,22 C2.9,22 2,21.1 2,20 L2,10 C2,8.9 2.9,8 4,8 L5,8 L5,6 C5,3.2 7.2,1 10,1 C12.8,1 15,3.2 15,6 L15,8 L16,8 M10,3 C8.3,3 7,4.3 7,6 L7,8 L13,8 L13,6 C13,4.3 11.7,3 10,3 M22,13 L20,13 L20,7 L22,7 L22,13 M22,17 L20,17 L20,15 L22,15 L22,17 Z\\\" id=\\\"mdi:lock-alert\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-check\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,1 C13.3260824,1 14.597852,1.5267842 15.5355339,2.46446609 C16.4732158,3.40214799 17,4.67391755 17,6 L17,8 L18,8 C19.1045695,8 20,8.8954305 20,10 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,10 C4,8.89 4.9,8 6,8 L7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M15.6,11 L10.47,16.18 L8.4,14.09 L7,15.5 L10.47,19 L17,12.41 L15.6,11 Z M12,3 C10.3431458,3 9,4.34314575 9,6 L9,8 L15,8 L15,6 C15,4.34314575 13.6568542,3 12,3 Z\\\" id=\\\"mdi:lock-check\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-cross\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,1 C13.3260824,1 14.597852,1.5267842 15.5355339,2.46446609 C16.4732158,3.40214799 17,4.67391755 17,6 L17,8 L18,8 C19.1045695,8 20,8.8954305 20,10 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,10 C4,8.89 4.9,8 6,8 L7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M14.12,11.47 L12,13.59 L9.88,11.47 L8.5,12.86 L10.61,15 L8.5,17.11 L9.91,18.53 L12.03,16.41 L14.12,18.5 L15.5,17.11 L13.43,15 L15.55,12.9 L14.12,11.47 Z M12,3 C10.3431458,3 9,4.34314575 9,6 L9,8 L15,8 L15,6 C15,4.34314575 13.6568542,3 12,3 Z\\\" id=\\\"mdi:lock-cross\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-open\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18,1 C15.24,1 13,3.24 13,6 L13,8 L4,8 C2.8954305,8 2,8.8954305 2,10 L2,20 C2,21.1045695 2.8954305,22 4,22 L16,22 C17.11,22 18,21.11 18,20 L18,10 C18,8.8954305 17.1045695,8 16,8 L15,8 L15,6 C15,4.34 16.34,3 18,3 C19.66,3 21,4.34 21,6 L21,8 L23,8 L23,6 C23,3.24 20.76,1 18,1 M10,13 C11.1045695,13 12,13.8954305 12,15 C12,16.11 11.11,17 10,17 C8.8954305,17 8,16.1045695 8,15 C8,13.8954305 8.8954305,13 10,13 Z\\\" id=\\\"mdi:lock-open-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-question\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,1 C9.23857625,1 7,3.23857625 7,6 L7,8 L6,8 C4.8954305,8 4,8.8954305 4,10 L4,20 C4,21.1045695 4.8954305,22 6,22 L18,22 C19.1045695,22 20,21.1045695 20,20 L20,10 C20,8.8954305 19.1045695,8 18,8 L17,8 L17,6 C17,4.67391755 16.4732158,3.40214799 15.5355339,2.46446609 C14.597852,1.5267842 13.3260824,1 12,1 M12,2.9 C13.71,2.9 15.1,4.29 15.1,6 L15.1,8 L8.9,8 L8.9,6 C8.9,4.29 10.29,2.9 12,2.9 M12.19,10.5 C13.13,10.5 13.88,10.71 14.42,11.12 C14.96,11.54 15.23,12.1 15.23,12.8 C15.23,13.24 15.08,13.63 14.79,14 C14.5,14.36 14.12,14.64 13.66,14.85 C13.4,15 13.23,15.15 13.14,15.32 C13.05,15.5 13,15.72 13,16 L11,16 C11,15.5 11.1,15.16 11.29,14.92 C11.5,14.68 11.84,14.4 12.36,14.08 C12.62,13.94 12.83,13.76 13,13.54 C13.14,13.33 13.22,13.08 13.22,12.8 C13.22,12.5 13.13,12.28 12.95,12.11 C12.77,11.93 12.5,11.85 12.19,11.85 C11.92,11.85 11.7,11.92 11.5,12.06 C11.34,12.2 11.24,12.41 11.24,12.69 L9.27,12.69 C9.22,12 9.5,11.4 10.05,11.04 C10.59,10.68 11.3,10.5 12.19,10.5 M11,17 L13,17 L13,19 L11,19 L11,17 Z\\\" id=\\\"mdi:lock-question\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,17 C13.1045695,17 14,16.1045695 14,15 C14,13.89 13.1,13 12,13 C10.8954305,13 10,13.8954305 10,15 C10,16.1045695 10.8954305,17 12,17 M18,8 C19.1045695,8 20,8.8954305 20,10 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,10 C4,8.89 4.9,8 6,8 L7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 C13.3260824,1 14.597852,1.5267842 15.5355339,2.46446609 C16.4732158,3.40214799 17,4.67391755 17,6 L17,8 L18,8 M12,3 C10.3431458,3 9,4.34314575 9,6 L9,8 L15,8 L15,6 C15,4.34314575 13.6568542,3 12,3 Z\\\" id=\\\"mdi:lock\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/map-marker-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 M12,2 C15.8659932,2 19,5.13400675 19,9 C19,14.25 12,22 12,22 C12,22 5,14.25 5,9 C5,5.13400675 8.13400675,2 12,2 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,10 7,12 12,18.71 C17,12 17,10 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:map-marker-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/map-marker\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\\\" id=\\\"mdi:map-marker\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/membership-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 M7.07,18.28 C7.5,17.38 10.12,16.5 12,16.5 C13.88,16.5 16.5,17.38 16.93,18.28 C15.5293835,19.3960251 13.7908746,20.0025637 12,20 C10.14,20 8.43,19.36 7.07,18.28 M18.36,16.83 C16.93,15.09 13.46,14.5 11.9999999,14.5 C10.54,14.5 7.07,15.09 5.64,16.83 C4.57618516,15.4446232 3.99966563,13.7467029 3.99999985,12 C3.99999985,7.59 7.59,4 11.9999999,4 C16.41,4 19.9999999,7.59 19.9999999,12 C19.9999999,13.82 19.38,15.5 18.36,16.83 M12,6 C10.06,6 8.5,7.56 8.5,9.5 C8.5,11.44 10.06,13 12,13 C13.94,13 15.5,11.44 15.5,9.5 C15.5,7.56 13.94,6 12,6 M12,11 C11.1715729,11 10.5,10.3284271 10.5,9.5 C10.5,8.67157288 11.1715729,8 12,8 C12.8284271,8 13.5,8.67157288 13.5,9.5 C13.5,10.3284271 12.8284271,11 12,11 Z\\\" id=\\\"mdi:account-circle-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/message-bookmark-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,2 L4,2 C2.9,2 2,2.9 2,4 L2,22 L6,18 L20,18 C21.1,18 22,17.1 22,16 L22,4 C22,2.9 21.1,2 20,2 M20,16 L5.2,16 L4,17.2 L4,4 L20,4 L20,16 M18,14 L18,6 L13,6 L13,14 L15.5,12.5 L18,14\\\" id=\\\"mdi:message-bookmark-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"message-group-variant2\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M14.2526206,6 L21.4947588,6 C22.3260806,6 23,6.6752491 23,7.49824524 L23,24 L19,20 L8.50524116,20 C7.67391942,20 7,19.3247509 7,18.5017548 L7,17 L17.0005775,17 C18.6556493,17 20,15.6542582 20,13.9942017 L20,6 L14.2526206,6 Z\\\" id=\\\"Message2\\\"></path>\\n        <path d=\\\"M1,2.49824524 C1,1.67078724 1.66642015,1 2.50863659,1 L16.4913634,1 C17.3245604,1 18,1.6752491 18,2.49824524 L18,13.5017548 C18,14.3292128 17.3335799,15 16.4913634,15 L5,15 L1,19 L1,2.49824524 Z M4,10 L4,12 L12,12 L12,10 L4,10 Z M4,7 L4,9 L15,9 L15,7 L4,7 Z M4,4 L4,6 L15,6 L15,4 L4,4 Z\\\" id=\\\"Combined-Shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/minus\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:minus\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 13 5 13 5 11 19 11\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/mobile\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10,1 C11.1045695,1 12,1.8954305 12,3 L12,12 C12,13.1045695 11.1045695,14 10,14 L6,14 C4.8954305,14 4,13.1045695 4,12 L4,3 C4,1.8954305 4.8954305,1 6,1 L10,1 Z M10,4 L6,4 L6,10 L10,10 L10,4 Z\\\" id=\\\"Mobile\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/palette\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17.5,12 C16.6715729,12 16,11.3284271 16,10.5 C16,9.67157288 16.6715729,9 17.5,9 C18.3284271,9 19,9.67157288 19,10.5 C19,11.3284271 18.3284271,12 17.5,12 M14.5,8 C13.6715729,8 13,7.32842712 13,6.5 C13,5.67157288 13.6715729,5 14.5,5 C15.3284271,5 16,5.67157288 16,6.5 C16,7.32842712 15.3284271,8 14.5,8 M9.5,8 C8.67157288,8 8,7.32842712 8,6.5 C8,5.67157288 8.67157288,5 9.5,5 C10.3284271,5 11,5.67157288 11,6.5 C11,7.32842712 10.3284271,8 9.5,8 M6.5,12 C5.67157288,12 5,11.3284271 5,10.5 C5,9.67157288 5.67157288,9 6.5,9 C7.32842712,9 8,9.67157288 8,10.5 C8,11.3284271 7.32842712,12 6.5,12 M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C12.8284271,21 13.5,20.3284271 13.5,19.5 C13.5,19.11 13.35,18.76 13.11,18.5 C12.88,18.23 12.73,17.88 12.73,17.5 C12.73,16.6715729 13.4015729,16 14.23,16 L16,16 C18.7614237,16 21,13.7614237 21,11 C21,6.58 16.97,3 12,3 L12,3 Z\\\" id=\\\"mdi:palette\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/pause\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,19 L18,19 L18,5 L14,5 M6,19 L10,19 L10,5 L6,5 L6,19 Z\\\" id=\\\"mdi:pause\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/picture-in-picture-bottom-right\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,11 L11,11 L11,17 L19,17 L19,11 M23,19 L23,5 C23,3.88 22.1,3 21,3 L3,3 C1.8954305,3 1,3.8954305 1,5 L1,19 C1,20.1045695 1.8954305,21 3,21 L21,21 C22.1045695,21 23,20.1045695 23,19 M21,19 L3,19 L3,4.97 L21,4.97 L21,19 Z\\\" id=\\\"mdi:picture-in-picture-bottom-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/picture-in-picture-minimize\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,3 C22.1,3 23,3.88 23,5 L23.0008195,11.8103588 C22.4253055,11.2578757 21.7483079,10.8103075 21.000576,10.4984036 L21,4.97 L3,4.97 L3,19 L12.4984036,19.000576 C12.8103075,19.7483079 13.2578757,20.4253055 13.8103588,21.0008195 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L21,3 Z M21,13 L21,14.5 L17.5,14.5 L22,19 L21,20 L16.5,15.5 L16.5,19 L15,19 L15,13 L21,13 Z M13,7 L13,13 L5,13 L5,7 L13,7 Z\\\" id=\\\"xabber:picture-in-picture-minimize\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/picture-in-picture-top-right\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,7 L11,7 L11,13 L19,13 L19,7 M21,3 L3,3 C1.8954305,3 1,3.8954305 1,5 L1,19 C1,20.1045695 1.8954305,21 3,21 L21,21 C22.1045695,21 23,20.1045695 23,19 L23,5 C23,3.8954305 22.1045695,3 21,3 M21,19 L3,19 L3,5 L21,5 L21,19 Z\\\" id=\\\"mdi:picture-in-picture-top-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/pinned-circle-small\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 C16.9705627,3 21,7.02943725 21,12 C21,16.9705627 16.9705627,21 12,21 C7.02943725,21 3,16.9705627 3,12 C3,7.02943725 7.02943725,3 12,3 Z M12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 Z M14,6.5 L17.5,9.5 L16.5,10.5 L16,10 L14.25,13.25 L15.25,14.75 L14,16 L11.5,13.5 L8.75,16.25 L7.75,16.25 L7.75,15.25 L10.5,12.5 L8,10 L9.25,8.75 L10.75,9.75 L13.5,8 L13,7.5 L14,6.5 Z\\\" id=\\\"xabber:pinned-small\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/pinned\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5228475,2 22,6.4771525 22,12 C22,17.5228475 17.5228475,22 12,22 C6.4771525,22 2,17.5228475 2,12 C2,6.4771525 6.4771525,2 12,2 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M14.5,6 L18,9.5 L17,10.5 L16.5,10 L14.5,13 L15.5,14.5 L14,16 L11.5,13.5 L8.5,16.5 L7.5,16.5 L7.5,15.5 L10.5,12.5 L8,10 L9.5,8.5 L11,9.5 L14,7.5 L13.5,7 L14.5,6 Z\\\" id=\\\"xabber:pinned\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/play\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:play\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"8 5 8 19 19 12\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-float\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,3 L13,5 L3,5 L3,19 L20,19 L20,11 L22,11 L22,19 C22,20.1045695 21.1045695,21 20,21 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L13,3 Z M13,9 L13,15 L11.5,15 L11.5,11.5 L6.5,16.5 L5.5,15.5 L10.5,10.5 L7,10.5 L7,9 L13,9 Z M22,2 C23.1045695,2 24,2.8954305 24,4 L24,7 C24,8.1045695 23.1045695,9 22,9 L17,9 C15.8954305,9 15,8.1045695 15,7 L15,4 C15,2.8954305 15.8954305,2 17,2 L22,2 Z\\\" id=\\\"xabber:player-float\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-full\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14.8101336,2.99941507 C14.2575941,3.5750451 13.8100058,4.25218587 13.4981326,5.00007375 L3,5 L3,19 L20,19 L20.000332,13.9810299 C20.7043777,13.9274362 21.3770687,13.7616821 22.000576,13.5015964 L22,19 C22,20.1045695 21.1045695,21 20,21 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L14.8101336,2.99941507 Z M12,10 C13.1045695,10 14,10.8954305 14,12 L14,15 C14,16.1045695 13.1045695,17 12,17 L7,17 C5.8954305,17 5,16.1045695 5,15 L5,12 C5,10.8954305 5.8954305,10 7,10 L12,10 Z M22,4 L23,5 L18.5,9.5 L22,9.5 L22,11 L16,11 L16,5 L17.5,5 L17.5,8.5 L22,4 Z\\\" id=\\\"xabber:picture-in-picture-full\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-mini-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19.5,4.5 C19.5,5.32842712 18.8284271,6 18,6 L6,6 C5.17157288,6 4.5,5.32842712 4.5,4.5 C4.5,3.67157288 5.17157288,3 6,3 L18,3 C18.8284271,3 19.5,3.67157288 19.5,4.5 Z\\\" id=\\\"xabber:player-mini-variant\\\" fill=\\\"#000000\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-mini\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,8 L17,9.5 L13.5,9.5 L18,14 L17,15 L12.5,10.5 L12.5,14 L11,14 L11,8 L17,8 Z M19.5,4.5 C19.5,5.32842712 18.8284271,6 18,6 L6,6 C5.17157288,6 4.5,5.32842712 4.5,4.5 C4.5,3.67157288 5.17157288,3 6,3 L18,3 C18.8284271,3 19.5,3.67157288 19.5,4.5 Z\\\" id=\\\"xabber:player-mini\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/plus\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:plus\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 12.998 13 12.998 13 18.998 11 18.998 11 12.998 5 12.998 5 10.998 11 10.998 11 4.998 13 4.998 13 10.998 19 10.998\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <symbol id=\\\"plyr-airplay\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16 1H2a1 1 0 00-1 1v10a1 1 0 001 1h3v-2H3V3h12v8h-2v2h3a1 1 0 001-1V2a1 1 0 00-1-1z\\\"></path><path d=\\\"M4 17h10l-5-6z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-captions-off\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h4.6l2.7 2.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3l2.7-2.7H17c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1H1zm4.52 10.15c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41C8.47 4.96 7.46 3.76 5.5 3.76c-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69zm7.57 0c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41c-.28-1.15-1.29-2.35-3.25-2.35-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69z\\\" fill-rule=\\\"evenodd\\\" fill-opacity=\\\".5\\\"></path></symbol>\\n    <symbol id=\\\"plyr-captions-on\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h4.6l2.7 2.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3l2.7-2.7H17c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1H1zm4.52 10.15c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41C8.47 4.96 7.46 3.76 5.5 3.76c-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69zm7.57 0c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41c-.28-1.15-1.29-2.35-3.25-2.35-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69z\\\" fill-rule=\\\"evenodd\\\"></path></symbol>\\n    <symbol id=\\\"plyr-download\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M9 13c.3 0 .5-.1.7-.3L15.4 7 14 5.6l-4 4V1H8v8.6l-4-4L2.6 7l5.7 5.7c.2.2.4.3.7.3zm-7 2h14v2H2z\\\"></path></symbol><symbol id=\\\"plyr-enter-fullscreen\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M10 3h3.6l-4 4L11 8.4l4-4V8h2V1h-7zM7 9.6l-4 4V10H1v7h7v-2H4.4l4-4z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-exit-fullscreen\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 12h3.6l-4 4L2 17.4l4-4V17h2v-7H1zM16 .6l-4 4V1h-2v7h7V6h-3.6l4-4z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-fast-forward\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M7.875 7.171L0 1v16l7.875-6.171V17L18 9 7.875 1z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-logo-vimeo\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M17 5.3c-.1 1.6-1.2 3.7-3.3 6.4-2.2 2.8-4 4.2-5.5 4.2-.9 0-1.7-.9-2.4-2.6C5 10.9 4.4 6 3 6c-.1 0-.5.3-1.2.8l-.8-1c.8-.7 3.5-3.4 4.7-3.5 1.2-.1 2 .7 2.3 2.5.3 2 .8 6.1 1.8 6.1.9 0 2.5-3.4 2.6-4 .1-.9-.3-1.9-2.3-1.1.8-2.6 2.3-3.8 4.5-3.8 1.7.1 2.5 1.2 2.4 3.3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-logo-youtube\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16.8 5.8c-.2-1.3-.8-2.2-2.2-2.4C12.4 3 9 3 9 3s-3.4 0-5.6.4C2 3.6 1.3 4.5 1.2 5.8 1 7.1 1 9 1 9s0 1.9.2 3.2c.2 1.3.8 2.2 2.2 2.4C5.6 15 9 15 9 15s3.4 0 5.6-.4c1.4-.3 2-1.1 2.2-2.4.2-1.3.2-3.2.2-3.2s0-1.9-.2-3.2zM7 12V6l5 3-5 3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-muted\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M12.4 12.5l2.1-2.1 2.1 2.1 1.4-1.4L15.9 9 18 6.9l-1.4-1.4-2.1 2.1-2.1-2.1L11 6.9 13.1 9 11 11.1zM3.786 6.008H.714C.286 6.008 0 6.31 0 6.76v4.512c0 .452.286.752.714.752h3.072l4.071 3.858c.5.3 1.143 0 1.143-.602V2.752c0-.601-.643-.977-1.143-.601L3.786 6.008z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-pause\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M6 1H3c-.6 0-1 .4-1 1v14c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1zm6 0c-.6 0-1 .4-1 1v14c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1h-3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-pip\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M13.293 3.293L7.022 9.564l1.414 1.414 6.271-6.271L17 7V1h-6z\\\"></path><path d=\\\"M13 15H3V5h5V3H2a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1v-6h-2v5z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-play\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M15.562 8.1L3.87.225c-.818-.562-1.87 0-1.87.9v15.75c0 .9 1.052 1.462 1.87.9L15.563 9.9c.584-.45.584-1.35 0-1.8z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-restart\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M9.7 1.2l.7 6.4 2.1-2.1c1.9 1.9 1.9 5.1 0 7-.9 1-2.2 1.5-3.5 1.5-1.3 0-2.6-.5-3.5-1.5-1.9-1.9-1.9-5.1 0-7 .6-.6 1.4-1.1 2.3-1.3l-.6-1.9C6 2.6 4.9 3.2 4 4.1 1.3 6.8 1.3 11.2 4 14c1.3 1.3 3.1 2 4.9 2 1.9 0 3.6-.7 4.9-2 2.7-2.7 2.7-7.1 0-9.9L16 1.9l-6.3-.7z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-rewind\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M10.125 1L0 9l10.125 8v-6.171L18 17V1l-7.875 6.171z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-settings\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16.135 7.784a2 2 0 01-1.23-2.969c.322-.536.225-.998-.094-1.316l-.31-.31c-.318-.318-.78-.415-1.316-.094a2 2 0 01-2.969-1.23C10.065 1.258 9.669 1 9.219 1h-.438c-.45 0-.845.258-.997.865a2 2 0 01-2.969 1.23c-.536-.322-.999-.225-1.317.093l-.31.31c-.318.318-.415.781-.093 1.317a2 2 0 01-1.23 2.969C1.26 7.935 1 8.33 1 8.781v.438c0 .45.258.845.865.997a2 2 0 011.23 2.969c-.322.536-.225.998.094 1.316l.31.31c.319.319.782.415 1.316.094a2 2 0 012.969 1.23c.151.607.547.865.997.865h.438c.45 0 .845-.258.997-.865a2 2 0 012.969-1.23c.535.321.997.225 1.316-.094l.31-.31c.318-.318.415-.781.094-1.316a2 2 0 011.23-2.969c.607-.151.865-.547.865-.997v-.438c0-.451-.26-.846-.865-.997zM9 12a3 3 0 110-6 3 3 0 010 6z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-volume\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M15.6 3.3c-.4-.4-1-.4-1.4 0-.4.4-.4 1 0 1.4C15.4 5.9 16 7.4 16 9c0 1.6-.6 3.1-1.8 4.3-.4.4-.4 1 0 1.4.2.2.5.3.7.3.3 0 .5-.1.7-.3C17.1 13.2 18 11.2 18 9s-.9-4.2-2.4-5.7z\\\"></path><path d=\\\"M11.282 5.282a.909.909 0 000 1.316c.735.735.995 1.458.995 2.402 0 .936-.425 1.917-.995 2.487a.909.909 0 000 1.316c.145.145.636.262 1.018.156a.725.725 0 00.298-.156C13.773 11.733 14.13 10.16 14.13 9c0-.17-.002-.34-.011-.51-.053-.992-.319-2.005-1.522-3.208a.909.909 0 00-1.316 0zm-7.496.726H.714C.286 6.008 0 6.31 0 6.76v4.512c0 .452.286.752.714.752h3.072l4.071 3.858c.5.3 1.143 0 1.143-.602V2.752c0-.601-.643-.977-1.143-.601L3.786 6.008z\\\"></path></symbol>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/qrcode\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3,11 L5,11 L5,13 L3,13 L3,11 M11,5 L13,5 L13,9 L11,9 L11,5 M9,11 L13,11 L13,15 L11,15 L11,13 L9,13 L9,11 M15,11 L17,11 L17,13 L19,13 L19,11 L21,11 L21,13 L19,13 L19,15 L21,15 L21,19 L19,19 L19,21 L17,21 L17,19 L13,19 L13,21 L11,21 L11,17 L15,17 L15,15 L17,15 L17,13 L15,13 L15,11 M19,19 L19,15 L17,15 L17,19 L19,19 M15,3 L21,3 L21,9 L15,9 L15,3 M17,5 L17,7 L19,7 L19,5 L17,5 M3,3 L9,3 L9,9 L3,9 L3,3 M5,5 L5,7 L7,7 L7,5 L5,5 M3,15 L9,15 L9,21 L3,21 L3,15 M5,17 L5,19 L7,19 L7,17 L5,17 Z\\\" id=\\\"mdi:qrcode\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/restrictions-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18.5,8 C18.33,8 18.16,8 18,8.05 L18,4.5 C18,3.11928813 16.8807119,2 15.5,2 C15.31,2 15.13,2 14.96,2.06 C14.7461874,0.868716938 13.7103179,0.0012815407 12.5,0 C11.44,0 10.54,0.66 10.17,1.59 C9.41693202,1.38051444 8.60922719,1.53531349 7.98697307,2.00838366 C7.36471894,2.48145383 6.99954575,3.21833807 7,4 L7,4.55 C6.84,4.5 6.67,4.5 6.5,4.5 C5.11928813,4.5 4,5.61928813 4,7 L4,15.5 C4,20.19 7.81,24 12.5,24 C17.19,24 21,20.19 21,15.5 L21,10.5 C21,9.11928813 19.8807119,8 18.5,8 M19,15.5 C19,19.0898509 16.0898509,22 12.5,22 C8.91014913,22 6,19.0898509 6,15.5 L6,7 C6,6.72 6.22,6.5 6.5,6.5 C6.78,6.5 7,6.72 7,7 L7,12 L9,12 L9,4 C9,3.72 9.22,3.5 9.5,3.5 C9.78,3.5 10,3.72 10,4 L10,11 L12,11 L12,2.5 C12,2.22 12.22,2 12.5,2 C12.78,2 13,2.22 13,2.5 L13,11 L15,11 L15,4.5 C15,4.22 15.22,4 15.5,4 C15.78,4 16,4.22 16,4.5 L16,13.42 C14.23,14.19 13,15.95 13,18 L15,18 C15,16.34 16.34,15 18,15 L18,10.5 C18,10.22 18.22,10 18.5,10 C18.78,10 19,10.22 19,10.5 L19,15.5 Z\\\" id=\\\"mdi:hand-front-right-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/rss-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M5,10 C5.55228475,10 6,10.4477153 6,11 C6,11.5412844 5.55045872,12 5,12 C4.4587156,12 4,11.5412844 4,11 C4,10.4477153 4.44771525,10 5,10 M4,4 C8.418278,4 12,7.581722 12,12 L10.5449871,12 C10.5449871,8.38530341 7.61469659,5.45501285 4,5.45501285 L4,4 M4,7 C6.76142375,7 9,9.23857625 9,12 L7.57070707,12 C7.57070707,11.0529896 7.19450866,10.1447663 6.52487118,9.47512882 C5.85523371,8.80549134 4.9470104,8.42929293 4,8.42929293 L4,7 Z\\\" id=\\\"rss-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/rss\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M4.75,10 C5.44035594,10 6,10.5596441 6,11.25 C6,11.9403559 5.44035594,12.5 4.75,12.5 C4.05964406,12.5 3.5,11.9403559 3.5,11.25 C3.5,10.5596441 4.05964406,10 4.75,10 Z M5.11116669,7.54639605 C6.82660407,7.80940186 8.1830606,9.16218778 8.45158391,10.8758014 L7.23152342,11.1795044 C7.08441894,9.91212418 6.07561709,8.9075227 4.80628203,8.7668642 L5.11116669,7.54639605 Z M5.72009926,5.11432766 C8.32885675,5.60976503 10.3855062,7.6642481 10.8841422,10.2718714 L9.66858256,10.5739265 C9.28406621,8.41337145 7.57799724,6.7100586 5.41602734,6.32963962 L5.72009926,5.11432766 Z M6.32787101,2.68573625 C9.83044069,3.40831848 12.5892971,6.16611302 13.3134345,9.66811414 L12.0989255,9.96960741 C11.4871421,6.91510726 9.07973668,4.50930363 6.02438684,3.89987406 L6.32787101,2.68573625 Z\\\" id=\\\"Channel-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/saved-messages\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17.1666667,1 C17.9487847,1 18.6165365,1.26855469 19.1699219,1.80566406 C19.7233073,2.34277344 20,2.99088542 20,3.75 L20,21.625 C20,21.9973958 19.8634983,22.3196615 19.5904948,22.5917969 C19.3174913,22.8639323 18.9817708,23 18.5833333,23 L12,18.1875 L5.41666667,23 C5.01822917,23 4.68250868,22.8639323 4.40950521,22.5917969 C4.13650174,22.3196615 4,21.9973958 4,21.625 L4,3.75 C4,2.99088542 4.27669271,2.34277344 4.83007812,1.80566406 C5.38346354,1.26855469 6.05121528,1 6.83333333,1 L17.1666667,1 Z M12.0016667,4.4375 L10.2972396,8.1328125 L6.335,8.6484375 L9.256875,11.4199219 L8.50427083,15.4375 L12.0016667,13.4609375 L15.4990625,15.4375 L14.7464583,11.4199219 L17.6683333,8.6484375 L13.7060938,8.1328125 L12.0016667,4.4375 Z\\\" id=\\\"xabber:saved-messages\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <defs>\\n        <path d=\\\"M15.5,14 L14.71,14 L14.43,13.73 C15.41,12.59 16,11.11 16,9.5 C16,5.91 13.09,3 9.5,3 C5.91,3 3,5.91 3,9.5 C3,13.09 5.91,16 9.5,16 C11.11,16 12.59,15.41 13.73,14.43 L14,14.71 L14,15.5 L19,20.49 L20.49,19 L15.5,14 Z M9.5,14 C7.01,14 5,11.99 5,9.5 C5,7.01 7.01,5 9.5,5 C11.99,5 14,7.01 14,9.5 C14,11.99 11.99,14 9.5,14 Z\\\" id=\\\"path-1\\\"></path>\\n    </defs>\\n    <g id=\\\"icon/material/search\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <mask id=\\\"mask-2\\\" fill=\\\"white\\\">\\n            <use xlink:href=\\\"#path-1\\\"></use>\\n        </mask>\\n        <use id=\\\"mdi:search\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" xlink:href=\\\"#path-1\\\"></use>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/security\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,12 L19,12 C18.47,16.11 15.72,19.78 12,20.92 L12,12 L5,12 L5,6.3 L12,3.19 M12,1 L3,5 L3,11 C3,16.55 6.84,21.73 12,23 C17.16,21.73 21,16.55 21,11 L21,5 L12,1 Z\\\" id=\\\"mdi:security\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/server\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10.1428571,13 L5.85714286,13 C5.38571429,13 5,12.625 5,12.1666667 L5,3.83333333 C5,3.375 5.38571429,3 5.85714286,3 L10.1428571,3 C10.6142857,3 11,3.375 11,3.83333333 L11,12.1666667 C11,12.625 10.6142857,13 10.1428571,13 Z M10,5 L6,5 L6,6 L10,6 L10,5 Z M10,7 L6,7 L6,8 L10,8 L10,7 Z M10,11 L9,11 L9,12 L10,12 L10,11 Z\\\" id=\\\"Server\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/star-face\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2.5 L8.42,8.06 L2,9.74 L6.2,14.88 L5.82,21.5 L12,19.09 L18.18,21.5 L17.8,14.88 L22,9.74 L15.58,8.06 L12,2.5 M9.38,10.5 C10,10.5 10.5,11 10.5,11.63 C10.5,11.9270425 10.3820003,12.2119189 10.1719596,12.4219596 C9.96191885,12.6320003 9.67704247,12.75 9.38,12.75 C8.75,12.75 8.25,12.25 8.25,11.63 C8.25,11 8.75,10.5 9.38,10.5 M14.63,10.5 C15.25,10.5 15.75,11 15.75,11.63 C15.75,12.2485589 15.2485589,12.75 14.63,12.75 C14,12.75 13.5,12.25 13.5,11.63 C13.5,11 14,10.5 14.63,10.5 M9,15 L15,15 C14.4960889,16.2119097 13.3124982,17.0016023 12,17.0016023 C10.6875018,17.0016023 9.50391113,16.2119097 9,15 L9,15 Z\\\" id=\\\"mdi:star-face\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/status-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M16.06,2.2 L17.74,6.26 L21.8,7.94 L20.12,12 L21.8,16.06 L17.74,17.74 L16.06,21.8 L12,20.12 L7.94,21.8 L6.26,17.74 L2.2,16.06 L3.88,12 L2.2,7.94 L6.26,6.26 L7.94,2.2 L12,3.88 L16.06,2.2 Z M15,4.81 L12,6.05 L9,4.81 L7.79,7.79 L4.81,9 L6.05,12 L4.81,15 L7.79,16.21 L9,19.19 L12,17.95 L15,19.19 L16.21,16.21 L19.19,15 L17.95,12 L19.19,9 L16.21,7.79 L15,4.81 Z M13.5,7 L12,11 L15,11 L11.5,17 L10.5,17 L12,13 L9,13 L12.5,7 L13.5,7 Z\\\" id=\\\"xabber:status-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/status\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M16.06,2.2 L17.74,6.26 L21.8,7.94 L20.12,12 L21.8,16.06 L17.74,17.74 L16.06,21.8 L12,20.12 L7.94,21.8 L6.26,17.74 L2.2,16.06 L3.88,12 L2.2,7.94 L6.26,6.26 L7.94,2.2 L12,3.88 L16.06,2.2 Z M13.5,7 L12.5,7 L9,13 L12,13 L10.5,17 L11.5,17 L15,11 L12,11 L13.5,7 Z\\\" id=\\\"xabber:status\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/subscription-from\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,8 C17.3137085,8 20,10.6862915 20,14 C20,17.3137085 17.3137085,20 14,20 C10.6862915,20 8,17.3137085 8,14 C8,13.462632 8.07064283,12.9417636 8.20314833,12.4461748 L9.67168223,13.9143229 C9.77459988,14.0172246 9.8859413,14.1065666 10.0034864,14.1823489 L10.0048953,14.1996403 C10.1089211,16.3160315 11.8578046,18 14,18 C16.209139,18 18,16.209139 18,14 C18,11.851413 16.3059677,10.0984884 14.180685,10.0040081 C14.1065666,9.8859413 14.0172246,9.77459988 13.9143229,9.67168223 L12.4461748,8.20314833 C12.9417636,8.07064283 13.462632,8 14,8 Z M11,4 L11,6 L7.415,6 L12.5,11.0857864 L11.0857864,12.5 L6,7.415 L6,11 L4,11 L4,4 L11,4 Z\\\" id=\\\"xabber:subscribe-from\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/subscription-to\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.9994979,8.00000002 C17.3137085,8.00000002 20,10.6862915 20,14 C20,17.3137085 17.3137085,20 14,20 C10.7616031,20 8.12242824,17.4344251 8.00413847,14.2249383 L8,13.999 L10,14 L10,14 C10,16.209139 11.790861,18 14,18 C16.209139,18 18,16.209139 18,14 C18,11.8578046 16.3160315,10.1089211 14.1996403,10.0048953 L13.999,10 L13.9994979,8.00000002 Z M4.91421356,3.5 L10,8.585 L10,5 L12,5 L12,12 L5,12 L5,10 L8.585,10 L3.5,4.91421356 L4.91421356,3.5 Z\\\" id=\\\"xabber:subscribe-to\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/circle/task\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <circle id=\\\"Circle\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" cx=\\\"8\\\" cy=\\\"8\\\" r=\\\"7\\\"></circle>\\n        <g id=\\\"icon16/bot-variant\\\">\\n            <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n            <polygon id=\\\"Path\\\" fill=\\\"#FFFFFF\\\" fill-rule=\\\"nonzero\\\" points=\\\"7 12.5 2.75 8.25 4 7 7 10 12 5 13.25 6.25\\\"></polygon>\\n        </g>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/translate\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12.87,15.07 L10.33,12.56 L10.36,12.53 C12.0541502,10.6471017 13.3198948,8.41925464 14.07,6 L17,6 L17,4 L10,4 L10,2 L8,2 L8,4 L1,4 L1,6 L12.17,6 C11.5,7.92 10.44,9.75 9,11.35 C8.07,10.32 7.3,9.19 6.69,8 L4.69,8 C5.42,9.63 6.42,11.17 7.67,12.56 L2.58,17.58 L4,19 L9,14 L12.11,17.11 L12.87,15.07 M18.5,10 L16.5,10 L12,22 L14,22 L15.12,19 L19.87,19 L21,22 L23,22 L18.5,10 M15.88,17 L17.5,12.67 L19.12,17 L15.88,17 L15.88,17 Z\\\" id=\\\"mdi:translate\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/trash\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,4 L15.5,4 L14.5,3 L9.5,3 L8.5,4 L5,4 L5,6 L19,6 M6,19 C6,20.1045695 6.8954305,21 8,21 L16,21 C17.1045695,21 18,20.1045695 18,19 L18,7 L6,7 L6,19 Z\\\" id=\\\"mdi:trash\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/video\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,10.5 L17,7 C17,6.44771525 16.5522847,6 16,6 L4,6 C3.44771525,6 3,6.44771525 3,7 L3,17 C3,17.5522847 3.44771525,18 4,18 L16,18 C16.5522847,18 17,17.5522847 17,17 L17,13.5 L21,17.5 L21,6.5 L17,10.5 Z\\\" id=\\\"mdi:video\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/volume-high\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,3.23 L14,5.29 C16.89,6.15 19,8.83 19,12 C19,15.17 16.89,17.84 14,18.7 L14,20.77 C18,19.86 21,16.28 21,12 C21,7.72 18,4.14 14,3.23 M16.5,12 C16.5,10.23 15.5,8.71 14,7.97 L14,16 C15.5,15.29 16.5,13.76 16.5,12 M3,9 L3,15 L7,15 L12,20 L12,4 L7,9 L3,9 Z\\\" id=\\\"mdi:volume-high\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Mobile-Portrait\\\" transform=\\\"translate(-41.000000, -4.000000)\\\">\\n        <g id=\\\"volume-off-variant\\\" transform=\\\"translate(34.000000, 0.000000)\\\">\\n            <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n            <polygon id=\\\"Path-2\\\" points=\\\"7 9 7 15 11 15 16 20 16 16.5 8.5 9\\\"></polygon>\\n            <polygon id=\\\"Path-3\\\" points=\\\"7 6 18.5 17.5 19.5 16.5 16 13 16 4 11.5 8.5 8 5\\\"></polygon>\\n        </g>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/volume-off\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,4 L9.91,6.09 L12,8.18 M4.27,3 L3,4.27 L7.73,9 L3,9 L3,15 L7,15 L12,20 L12,13.27 L16.25,17.53 C15.58,18.04 14.83,18.46 14,18.7 L14,20.77 C15.38,20.45 16.63,19.82 17.68,18.96 L19.73,21 L21,19.73 L12,10.73 M19,12 C19,12.94 18.8,13.82 18.46,14.64 L19.97,16.15 C20.62,14.91 21,13.5 21,12 C21,7.72 18,4.14 14,3.23 L14,5.29 C16.89,6.15 19,8.83 19,12 M16.5,12 C16.5,10.23 15.5,8.71 14,7.97 L14,10.18 L16.45,12.63 C16.5,12.43 16.5,12.21 16.5,12 Z\\\" id=\\\"mdi:volume-off\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/web-cancel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.82,14 L9.66,14 C9.56,13.34 9.5,12.68 9.5,12 C9.5,11.32 9.56,10.65 9.66,10 L14.34,10 C14.43,10.65 14.5,11.32 14.5,12 C14.5,12.5 14.46,13 14.4,13.46 C15,12.96 15.72,12.57 16.5,12.32 L16.5,12 C16.5,11.32 16.44,10.66 16.36,10 L19.74,10 C19.9,10.64 20,11.31 20,12 L20,12.18 C20.7,12.35 21.35,12.63 21.95,13 C22,12.68 22,12.34 22,12 C22,6.5 17.5,2 12,2 C6.47,2 2,6.5 2,12 C2,17.5 6.5,22 12,22 C12.34,22 12.68,22 13,21.95 C12.59,21.29 12.29,20.55 12.13,19.75 C12.09,19.82 12.05,19.89 12,19.96 C11.17,18.76 10.5,17.43 10.09,16 L12.5,16 C12.81,15.25 13.26,14.58 13.82,14 M18.92,8 L15.97,8 C15.6570216,6.76145777 15.1935734,5.56589587 14.59,4.44 C16.43,5.07 17.96,6.34 18.92,8 M12,4.03 C12.83,5.23 13.5,6.57 13.91,8 L10.09,8 C10.5,6.57 11.17,5.23 12,4.03 M4.26,14 C4.1,13.36 4,12.69 4,12 C4,11.31 4.1,10.64 4.26,10 L7.64,10 C7.56,10.66 7.5,11.32 7.5,12 C7.5,12.68 7.56,13.34 7.64,14 L4.26,14 M5.08,16 L8,16 C8.35,17.25 8.8,18.45 9.4,19.56 C7.57862399,18.9316655 6.0448462,17.667719 5.08,16 M8,8 L5.08,8 C6.03885577,6.32721463 7.57479586,5.06148622 9.4,4.44 C8.8,5.55 8.35,6.75 8,8 M18.5,14 C16,14 14,16 14,18.5 C14,21 16,23 18.5,23 C21,23 23,21 23,18.5 C23,16 21,14 18.5,14 M18.5,21.5 C16.84,21.5 15.5,20.16 15.5,18.5 C15.5,17.94 15.65,17.42 15.92,17 L20,21.08 C19.58,21.35 19.06,21.5 18.5,21.5 M21.08,20 L17,15.92 C17.42,15.65 17.94,15.5 18.5,15.5 C20.16,15.5 21.5,16.84 21.5,18.5 C21.5,19.06 21.35,19.58 21.08,20 Z\\\" id=\\\"mdi:web-cancel\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/web\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M16.36,14 C16.44,13.34 16.5,12.68 16.5,12 C16.5,11.32 16.44,10.66 16.36,10 L19.74,10 C19.9,10.64 20,11.31 20,12 C20,12.69 19.9,13.36 19.74,14 M14.59,19.56 C15.19,18.45 15.65,17.25 15.97,16 L18.92,16 C17.96,17.65 16.43,18.93 14.59,19.56 M14.34,14 L9.66,14 C9.56,13.34 9.5,12.68 9.5,12 C9.5,11.32 9.56,10.65 9.66,10 L14.34,10 C14.43,10.65 14.5,11.32 14.5,12 C14.5,12.68 14.43,13.34 14.34,14 M12,19.96 C11.17,18.76 10.5,17.43 10.09,16 L13.91,16 C13.5,17.43 12.83,18.76 12,19.96 M8,8 L5.08,8 C6.03,6.34 7.57,5.06 9.4,4.44 C8.8,5.55 8.35,6.75 8,8 M5.08,16 L8,16 C8.35,17.25 8.8,18.45 9.4,19.56 C7.57,18.93 6.03,17.65 5.08,16 M4.26,14 C4.1,13.36 4,12.69 4,12 C4,11.31 4.1,10.64 4.26,10 L7.64,10 C7.56,10.66 7.5,11.32 7.5,12 C7.5,12.68 7.56,13.34 7.64,14 M12,4.03 C12.83,5.23 13.5,6.57 13.91,8 L10.09,8 C10.5,6.57 11.17,5.23 12,4.03 M18.92,8 L15.97,8 C15.65,6.75 15.19,5.55 14.59,4.44 C16.43,5.07 17.96,6.34 18.92,8 M12,2 C6.47,2 2,6.5 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,9.3478351 20.9464316,6.80429597 19.0710678,4.92893219 C17.195704,3.0535684 14.6521649,2 12,2 Z\\\" id=\\\"mdi:web\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Xabber-Offline\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M13.4146471,22.5 L14.009222,22.5 C14.5490248,22.5 15,22.0522847 15,21.5 C15,20.9438648 14.5564136,20.5 14.009222,20.5 L9.99077797,20.5 C9.45097518,20.5 9,20.9477153 9,21.5 C9,22.0561352 9.44358641,22.5 9.99077797,22.5 L10.5853529,22.5 C10.7912711,23.0825962 11.3468906,23.5 12,23.5 C12.6531094,23.5 13.2087289,23.0825962 13.4146471,22.5 Z\\\" id=\\\"Base\\\"></path>\\n        <rect id=\\\"Middle-base\\\" x=\\\"8\\\" y=\\\"17.75\\\" width=\\\"8\\\" height=\\\"2\\\" rx=\\\"1\\\"></rect>\\n        <path d=\\\"M17.5099945,14.8015103 L17.5099945,14.8015103 C17.1966102,15.1049344 17.0013821,15.5296633 17,16 C17,16.5522847 16.5443356,17 16.0046024,17 L7.99539757,17 C7.44565467,17 7,16.5561352 6.99998649,16 C6.99861167,15.5296664 6.80338616,15.10494 6.49000549,14.8015163 L6.49000549,14.8000192 C4.95622884,13.3424727 4,11.282906 4,9 C4,4.581722 7.581722,1 12,1 C16.418278,1 20,4.581722 20,9 C20,11.282906 19.0437712,13.3424727 17.5099945,14.8000192 L17.5099945,14.8015103 Z M8.86088543,15 L15.1391084,15 C15.3021338,14.4253123 15.6014858,13.895093 16,13.472213 C17.2274987,12.3735719 18,10.7769996 18,9 C18,5.6862915 15.3137085,3 12,3 C8.6862915,3 6,5.6862915 6,9 C6,10.7769996 6.77250128,12.3735719 8,13.472213 C8.39851111,13.8950917 8.69786083,14.4253152 8.86088543,15 Z\\\" id=\\\"Bulb-shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Xabber-Online\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M13.4146471,22.5 L14.009222,22.5 C14.5490248,22.5 15,22.0522847 15,21.5 C15,20.9438648 14.5564136,20.5 14.009222,20.5 L9.99077797,20.5 C9.45097518,20.5 9,20.9477153 9,21.5 C9,22.0561352 9.44358641,22.5 9.99077797,22.5 L10.5853529,22.5 C10.7912711,23.0825962 11.3468906,23.5 12,23.5 C12.6531094,23.5 13.2087289,23.0825962 13.4146471,22.5 Z\\\" id=\\\"Base\\\"></path>\\n        <rect id=\\\"Middle-base\\\" x=\\\"8\\\" y=\\\"17.75\\\" width=\\\"8\\\" height=\\\"2\\\" rx=\\\"1\\\"></rect>\\n        <path d=\\\"M17.5099945,14.8015103 L17.5099945,14.8000192 C19.0437712,13.3424727 20,11.282906 20,9 C20,4.581722 16.418278,1 12,1 C7.581722,1 4,4.581722 4,9 C4,11.282906 4.95622884,13.3424727 6.49000549,14.8000192 L6.49000549,14.8015163 C6.80338616,15.10494 6.99861167,15.5296664 6.99998649,16 C7,16.5561352 7.44565467,17 7.99539757,17 L16.0046024,17 C16.5443356,17 17,16.5522847 17,16 C17.0013821,15.5296633 17.1966102,15.1049344 17.5099945,14.8015103 L17.5099945,14.8015103 Z\\\" id=\\\"Bulb-shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/xmpp\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,16.4 C9.75,14.09 8,10.54 8,7 C2,5 8,7 2,5 C2,10.65 6.33,15.11 10.55,17.66 C9.38,18.5 8.15,19 7,19 C7,20 7,19 7,20 C8.2,20 10.03,19.46 12,18.46 C13.97,19.46 15.8,20 17,20 C17,19 17,20 17,19 C15.85,19 14.62,18.5 13.45,17.66 C17.66,15.11 22,10.65 22,5 C16,7 22,5 16,7 C16,10.54 14.25,14.09 12,16.4 Z\\\" id=\\\"mdi:xmpp\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <div class=\\\"btn-vcard-refresh\\\">\\n        <div class=\\\"button\\\">\\n            <i class=\\\"mdi mdi-20px mdi-refresh\\\"></i>\\n        </div>\\n        <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"vcard-wrap\\\">\\n    <div class=\\\"info-wrap jid-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg></div>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap personal-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"info first-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info middle-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_middle_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info last-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info fullname\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_full_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap nickname-info-wrap hidden\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info nickname\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap birthday-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n        <div class=\\\"info birthday\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap job-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n        <div class=\\\"info org-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info job-title\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_title\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info org-unit\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization_unit\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info role\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_role\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap site-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n        <div class=\\\"info url\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap phone-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-phone\\\"></i>\\n        <div class=\\\"info phone-work\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-home\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-mobile\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_mobile\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-default\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap email-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-email\\\"></i>\\n        <div class=\\\"info email-work\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info email-home\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info email-default\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap address-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-map-marker\\\"></i>\\n        <div class=\\\"info address-home\\\">\\n            <div class=\\\"pobox value one-line\\\"></div>\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info address-work\\\">\\n            <div class=\\\"pobox value one-line\\\"></div>\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info address-default\\\">\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_address\\\"))]}</div>\\n        </div>\\n    </div>\\n    <button class=\\\"btn-vcard-edit btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</button>\\n</div>\\n\";","export default \"<div class=\\\"buttons-wrap\\\">\\n    <button class=\\\"btn-vcard-save btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"vcard_edit__button_save\\\"))]}</button>\\n</div>\\n<div class=\\\"vcard-edit-wrap\\\">\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n    <div class=\\\"info-wrap personal-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field first-name\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-first-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_given_name'))]}\\\" type=\\\"text\\\" name=\\\"first_name\\\">\\n        </div>\\n        <div class=\\\"input-field middle-name\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-middle-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_middle_name'))]}\\\" type=\\\"text\\\" name=\\\"middle_name\\\">\\n        </div>\\n        <div class=\\\"input-field last-name\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-last-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_family_name'))]}\\\" type=\\\"text\\\" name=\\\"last_name\\\">\\n        </div>\\n        <div class=\\\"input-field fullname\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-fullname\\\" placeholder=\\\"{[print(xabber.getString('vcard_full_name'))]}\\\" type=\\\"text\\\" name=\\\"fullname\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n    <div class=\\\"info-wrap nickname-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field nickname\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-nickname\\\" placeholder=\\\"{[print(xabber.getString('vcard_nick_name'))]}\\\" type=\\\"text\\\" name=\\\"nickname\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n    <div class=\\\"info-wrap birthday-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field birthday\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-birthday\\\" placeholder=\\\"{[print(xabber.getString('vcard_birth_date_placeholder'))]}\\\" type=\\\"text\\\" class=\\\"datepicker\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_job\\\"))]}</div>\\n    <div class=\\\"info-wrap job-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field org-name\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-org-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_organization'))]}\\\" type=\\\"text\\\" name=\\\"org_name\\\">\\n        </div>\\n        <div class=\\\"input-field job-title\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-job-title\\\" placeholder=\\\"{[print(xabber.getString('vcard_title'))]}\\\" type=\\\"text\\\" name=\\\"job_title\\\">\\n        </div>\\n        <div class=\\\"input-field org-unit\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-org-unit\\\" placeholder=\\\"{[print(xabber.getString('vcard_organization_unit'))]}\\\" type=\\\"text\\\" name=\\\"org_unit\\\">\\n        </div>\\n        <div class=\\\"input-field role\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-role\\\" placeholder=\\\"{[print(xabber.getString('vcard_role'))]}\\\" type=\\\"text\\\" name=\\\"role\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n    <div class=\\\"info-wrap site-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"web\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field url\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-url\\\" placeholder=\\\"{[print(xabber.getString('vcard_url_placeholder'))]}\\\" type=\\\"text\\\" name=\\\"url\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field description\\\">\\n            <textarea id=\\\"{{view.cid}}-description\\\" placeholder=\\\"{[print(xabber.getString('vcard_decsription_placeholder'))]}\\\" type=\\\"text\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"text-field textarea-glow input-glow account-glow\\\" name=\\\"description\\\"></textarea>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n    <div class=\\\"info-wrap phone-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field phone-work\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-phone-work\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_work'))]}\\\" type=\\\"text\\\" name=\\\"phone_work\\\">\\n        </div>\\n        <div class=\\\"input-field phone-home\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-phone-home\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_home'))]}\\\" type=\\\"text\\\" name=\\\"phone_home\\\">\\n        </div>\\n        <div class=\\\"input-field phone-mobile\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-phone-mobile\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_mobile'))]}\\\" type=\\\"text\\\" name=\\\"phone_mobile\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n    <div class=\\\"info-wrap email-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"email\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field email-work\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-email-work\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_work'))]}\\\" type=\\\"text\\\" name=\\\"email_work\\\">\\n        </div>\\n        <div class=\\\"input-field email-home\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-email-home\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_personal'))]}\\\" type=\\\"text\\\" name=\\\"email_home\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_home_address\\\"))]}</div>\\n    <div class=\\\"info-wrap address-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"address\\\"></svg>\\n        </div>\\n        <div class=\\\"input-wrap address-wrap address-home-wrap\\\">\\n            <div class=\\\"input-field pobox\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-po-home-box\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pobox'))]}\\\" type=\\\"text\\\" name=\\\"po_home_box\\\">\\n            </div>\\n            <div class=\\\"input-field extadd\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-extadd\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_extadr'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_extadd\\\">\\n            </div>\\n            <div class=\\\"input-field street\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-street\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_street'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_street\\\">\\n            </div>\\n            <div class=\\\"input-field locality\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-locality\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_locality'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_locality\\\">\\n            </div>\\n            <div class=\\\"input-field region\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-region\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_region'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_region\\\">\\n            </div>\\n            <div class=\\\"input-field pcode\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-pcode\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pcode'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_pcode\\\">\\n            </div>\\n            <div class=\\\"input-field country\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-country\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_ctry'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_country\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_work_address\\\"))]}</div>\\n    <div class=\\\"info-wrap address-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"address\\\"></svg>\\n        </div>\\n        <div class=\\\"input-wrap address-wrap address-work-wrap\\\">\\n            <div class=\\\"input-field pobox\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-po-work-box\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pobox'))]}\\\" type=\\\"text\\\" name=\\\"po_work_box\\\">\\n            </div>\\n            <div class=\\\"input-field extadd\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-extadd\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_extadr'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_extadd\\\">\\n            </div>\\n            <div class=\\\"input-field street\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-street\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_street'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_street\\\">\\n            </div>\\n            <div class=\\\"input-field locality\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-locality\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_locality'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_locality\\\">\\n            </div>\\n            <div class=\\\"input-field region\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-region\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_region'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_region\\\">\\n            </div>\\n            <div class=\\\"input-field pcode\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-pcode\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pcode'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_pcode\\\">\\n            </div>\\n            <div class=\\\"input-field country\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-country\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_ctry'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_country\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"vcard-wrap\\\">\\n    <button class=\\\"btn-vcard-edit btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</button>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <div class=\\\"btn-vcard-refresh\\\">\\n        <div class=\\\"button\\\">\\n            <i class=\\\"mdi mdi-20px mdi-refresh\\\"></i>\\n        </div>\\n        <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"vcard-wrap\\\">\\n    <div class=\\\"info-wrap jid-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info jabber-id\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap nickname-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info nickname\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap personal-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info first-name\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info last-name\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap birthday-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info birthday\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap site-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info url\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap more\\\">\\n        <div class=\\\"show-vcard\\\">\\n            {[print(xabber.getString(\\\"contact_vcard_more\\\"))]}\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"full-vcard-wrap\\\">\\n    <div class=\\\"full-vcard-content\\\">\\n        <div class=\\\"vcard-header block-header\\\">\\n            <div class=\\\"vcard-header-title\\\">\\n                <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_vcard_header_title\\\"))]}</span>\\n            </div>\\n            <div class=\\\"main-info\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar\\\"></div>\\n                </div>\\n                <div class=\\\"text-info\\\">\\n                    <div class=\\\"name-wrap\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"vcard-list\\\">\\n            <div class=\\\"info-wrap jid-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info jabber-id\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap nickname-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info nickname\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap personal-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info first-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info middle-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_middle_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info last-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info fullname\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_full_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap birthday-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info birthday\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap job-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info org-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info job-title\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_title\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info org-unit\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization_unit\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info role\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_role\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap site-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info url\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap description-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info description\\\">\\n                        <div class=\\\"value\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap phone-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-work\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-home\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-mobile\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_mobile\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-default\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap email-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"email-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-work\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-home\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-default\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap address-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-home\\\">\\n                        <div class=\\\"pobox value one-line\\\"></div>\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-work\\\">\\n                        <div class=\\\"pobox value one-line\\\"></div>\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-default\\\">\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_address\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"resources-block-wrap hidden\\\">\\n                <div class=\\\"resources-wrap\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","module.exports = {\"background-images\":{\"image\":[{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0293+he.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-A0tXm8gjfMU/U08VDMRGtuI/AAAAAAAAvrI/IQEscTGZyJY/s1920-w1920-h1080-c/IMG_0293%2Bhe.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0660.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-wkrGBuk0DoA/Us9JnUoXnTI/AAAAAAAAkTA/yDQexzLKhKY/s1920-w1920-h1080-c/DSC_0660.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071227-4144-PtLomaReef.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-1xZqgaRDIec/Tg1dMJq1vBI/AAAAAAAAALc/7m0Tpv2htVc/s1920-w1920-h1080-c/071227-4144-PtLomaReef.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/976865336_a+view+of+queenstown.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-36YdSRh6q9w/TgtZEChvrkI/AAAAAAAJA0M/zVvIUAdwQ3Q/s1920-w1920-h1080-c/976865336_a%2Bview%2Bof%2Bqueenstown.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB-MarshallBeach-lightSky.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/--L7AhWZit78/TysVss3ThoI/AAAAAAAARho/n2ToQ-2Kw7g/s1920-w1920-h1080-c/GGB-MarshallBeach-lightSky.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01079+(1).png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-ePzy0PYNkjY/ToE9F9iPxKI/AAAAAAAAsWg/o7LkkqWEs2o/s1920-w1920-h1080-c/DSC01079%2B%25281%2529.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8492_HDR-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-pnosgcd6G2c/UbheNBeniVI/AAAAAAAAWp0/hSEX3IwAgyI/s1920-w1920-h1080-c/DSC_8492_HDR-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/02202012-04.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-El8tXEJMqm4/UOD9tk8_rkI/AAAAAAAAkM0/sZP34rwkVsQ/s1920-w1920-h1080-c/02202012-04.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20100530_120257_0273-Edit-2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-EpsKJMBxb6I/TBpXudG4_PI/AAAAAAABEHk/_knVZZOptTY/s1920-w1920-h1080-c/20100530_120257_0273-Edit-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Lines.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Ot1wFdQdaqw/UBSl7ewGOkI/AAAAAAAAPd4/3tUkrKTWDgM/s1920-w1920-h1080-c/Lines.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DunesEdge.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-WbNq4f1kE7Y/Tu9tVtXGCYI/AAAAAAABFWY/N9NL1MKUt4A/s1920-w1920-h1080-c/DunesEdge.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_2857.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-YPiBdTDD5Vo/UpExbztAgWI/AAAAAAAAFg8/8n5CyP4w8Ps/s1920-w1920-h1080-c/DSC_2857.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0513-edited.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-CY6T5q8rqmA/UZWyvmYhLYI/AAAAAAAAAw4/Pi0Uy3nq19I/s1920-w1920-h1080-c/DSC_0513-edited.jpeg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/stuck_04.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-fc8aRqsAEzk/U0MjlhykUtI/AAAAAAAJF1s/nRoV1Yk1z2E/s1920-w1920-h1080-c/stuck_04.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Dandelion_.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ExqBtlpobeE/T-aKZZzVcKI/AAAAAAABhl4/jrErtktlcuA/s1920-w1920-h1080-c/Dandelion_.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8670434759_91e92fd1ee_k.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-3nqLFWiEm3E/UXXCrC5RBeI/AAAAAAAANoY/8_ktEhLdCLs/s1920-w1920-h1080-c/8670434759_91e92fd1ee_k.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/2049233526_19f97ff57f_o.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-gJmej39yU_c/TgtZECWgTtI/AAAAAAAJFFY/Y0nVr5_Tchg/s1920-w1920-h1080-c/2049233526_19f97ff57f_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RodeoBeach-firespinning-2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-teMxOetSsy0/TwNDboHbM0I/AAAAAAABFao/F9yQHylkRdo/s1920-w1920-h1080-c/RodeoBeach-firespinning-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Iceland.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-rF8zodn1xAI/U_yjoZyDgcI/AAAAAAAB-38/U62D7hi4-NU/s1920-w1920-h1080-c/20140204_Iceland_0234_5_6_32bit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6887-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-KiRwrTTHEWk/UdFoWqh2bFI/AAAAAAAAXhA/6PIDVYH9nFY/s1920-w1920-h1080-c/DSC_6887-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SealRocks-sunset-beach-rock.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-6_QxmRRnJO8/TwjqsB2kshI/AAAAAAABFZw/__-irT00R2k/s1920-w1920-h1080-c/SealRocks-sunset-beach-rock.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_7112.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-HWAadtEQKQE/UtTyRxs2u4I/AAAAAAAAOhk/Y3jT0QJtdhQ/s1920-w1920-h1080-c/DSC_7112.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Invitation.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-5NKrifl_xpo/UUxwAqoj7nI/AAAAAAAAwGk/82Dkiz_sEaw/s1920-w1920-h1080-c/Invitation.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_DX_7114-Edit-Recovered.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-W5qc4LH_lpo/U_yjzHjSpzI/AAAAAAAB-7E/8MQAw4fsEJc/s1920-w1920-h1080-c/_DX_7114-Edit-Recovered.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP8993.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-sy3wa9ofb38/UQtPlF6YOQI/AAAAAAAAfXc/9uYpeM68vOc/s1920-w1920-h1080-c/IMGP8993.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/dsc_4194.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-cFySK9YoOOI/SwTDSXWTa2I/AAAAAAABNnY/1VFL3dYXkgA/s1920-w1920-h1080-c/dsc_4194.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/panthercreek_7509-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-JoKkOqJLegk/T7KQORntaBI/AAAAAAABjLg/FbmDYu5k3DY/s1920-w1920-h1080-c/panthercreek_7509-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6464.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-RYt_J-BlGJs/UmBWyVrQZII/AAAAAAAAFAA/9Y9zqjdXQeU/s1920-w1920-h1080-c/DSC_6464.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/080820-5209-MakenaLL.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-6IrulujJPwU/Tg1d_n1nptI/AAAAAAAAAMc/O4OAV6udX8Y/s1920-w1920-h1080-c/080820-5209-MakenaLL.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_5300.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-cn-CS-vxFn4/UtTvqLzjmrI/AAAAAAAAX3Y/OdfK9XhRGeE/s1920-w1920-h1080-c/DSC_5300.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/080327-4706-JoshuaTreeOasis.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-mwobIYTjtko/Tg1dd90GDjI/AAAAAAAAAL0/M_NjYSMqoG0/s1920-w1920-h1080-c/080327-4706-JoshuaTreeOasis.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/217440037_8ca190627e_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-EjnJBBcvhrU/TgtZEIVpLlI/AAAAAAAJJ5s/CQK74NolX7E/s1920-w1920-h1080-c/217440037_8ca190627e_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MSU_1184.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-lM1sKRbIu7A/T_mdon8mP-I/AAAAAAAAAwc/SJMO-kWHQLY/s1920-w1920-h1080-c/MSU_1184.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0537-Edit-Edit-Edit-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-HfCYnCbpqww/Us1HNtNz00I/AAAAAAAAkFE/UJChD7bbmm0/s1920-w1920-h1080-c/DSC_0537-Edit-Edit-Edit-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TetonShwabacher.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-gi8-azW5hAQ/UGdSQqk9G_I/AAAAAAAAJto/inIHRwOCy3c/s1920-w1920-h1080-c/TetonShwabacher.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/PVK_5178.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-zAuJ1AZC34Y/TrsJH22VV5I/AAAAAAAAEvc/EzBqDb6tQRE/s1920-w1920-h1080-c/PVK_5178.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3824+pe.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-QgFnhS9tfuI/U0tzKPZox-I/AAAAAAAAvhg/EjRaa8ETaYM/s1920-w1920-h1080-c/IMG_3824%2Bpe.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/101016-4858-GrayWhaleGran1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-gb7vG0Z6jrU/Tg1gas5e87I/AAAAAAAAAPY/4zsNQt6LotI/s1920-w1920-h1080-c/101016-4858-GrayWhaleGran1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+Queenstown+Aurora+Australis.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-F1T9flY075Y/U0Mgnwr2AJI/AAAAAAAJBJY/eeooel6-ZXY/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BQueenstown%2BAurora%2BAustralis.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_4393.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-RtJjOCkuYL8/UtTvDO3sraI/AAAAAAAAX3c/VVVtMV1yPW0/s1920-w1920-h1080-c/DSC_4393.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-road-to-paradise.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-2Lhxkz2EBz4/U0MlX7aExHI/AAAAAAAJXMc/Lh1kPpcrBi8/s1920-w1920-h1080-c/trey-ratcliff-road-to-paradise.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Sunrise+in+Sangam.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-7X44UiG6ohw/Ua2Qmj06zkI/AAAAAAAAfYA/owBHOfu6u_I/s1280-w1280-c-h720-k-no/Sunrise%2Bin%2BSangam\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061012-1109-PigeonPEve.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-r3D0LQrT3K4/Tg1bQhpX5hI/AAAAAAAAAIs/ONg4BWnADUM/s1920-w1920-h1080-c/061012-1109-PigeonPEve.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Motion.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-eYFfx8sHLZY/UBSl8KkdpRI/AAAAAAAAPeA/5sJreKxzLYc/s1920-w1920-h1080-c/Motion.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGate+Dawn+from+Slacker+Hill.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-GYfXywevB-4/UtTtugxGWlI/AAAAAAAAXpw/e5tyHYdIIK0/s1920-w1920-h1080-c/GGate%2BDawn%2Bfrom%2BSlacker%2BHill.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_7006-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-iqs_ihvxlzM/Ur0B20OjdgI/AAAAAAAAF7Y/yJ1rAuyEQjQ/s1920-w1920-h1080-c/IMG_7006-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MoraineLake.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-YNlHO0F-y_U/UoazYeYqMvI/AAAAAAAAVqg/h8tLY6Zwktw/s1920-w1920-h1080-c/MoraineLake.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/12-11-12-original.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-qdhLu3VPZU8/Uqjrkz-1dzI/AAAAAAAAYTY/Is8QaEy3rZo/s1920-w1920-h1080-c/12-11-12-original.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20090411_132734_.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-0EQ-4alz8RY/S9aXij2EEzI/AAAAAAABDQ8/SUAUmq9rm60/s1920-w1920-h1080-c/20090411_132734_.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Seattle_BrianMatiash.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-BK4o8MjAzHY/T6vkuyTuQ7I/AAAAAAAIovQ/rWAnhK0bJqQ/s1920-w1920-h1080-c/Seattle_BrianMatiash.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Infinity+of+Tokyo.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-vCWMbf5t3RI/U0MbNIFWMsI/AAAAAAAJA-w/hbek0tN8Oqk/s1920-w1920-h1080-c/The%2BInfinity%2Bof%2BTokyo.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/PatriciaLake.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-oMSn89uorIA/UktkPI4oEVI/AAAAAAAAVqo/d_0ZasIPfnc/s1920-w1920-h1080-c/PatriciaLake.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/02212012-08.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-_ApXZ5TKn2Y/UOD9xbbz3OI/AAAAAAAAkNY/p6fXkvjZNY8/s1920-w1920-h1080-c/02212012-08.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/LandsEnds-le-sunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-aqN5sgbqggQ/T3sLvuIoTmI/AAAAAAABFlQ/jxR2IgWbFM4/s1920-w1920-h1080-c/LandsEnds-le-sunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Approaching+Yosemite.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-bEYj5hwZ1G8/U0MSbgTqo4I/AAAAAAAJF9c/ijCLJ4jvSuU/s1920-w1920-h1080-c/Approaching%2BYosemite.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Rust.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-B7_iA_X9u6k/UBSl-nRhkxI/AAAAAAAAPeg/QCRwYky8OXM/s1920-w1920-h1080-c/Rust.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3054580997_b9c89c7d9f_o.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-KilhfjagQZw/TgtZGB0uBJI/AAAAAAAJXZc/rjj3xvxSkso/s1920-w1920-h1080-c/3054580997_b9c89c7d9f_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0853-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-3dXv-q-kMJg/Ute8DoCJgSI/AAAAAAAAlHI/A3PJNXvm8g4/s1920-w1920-h1080-c/DSC_0853-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Across+the+Alaskan+Fjords.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-h782AeqXwL4/U0MTcwzNuyI/AAAAAAAJBlg/B0ICHy6uj-I/s1920-w1920-h1080-c/Across%2Bthe%2BAlaskan%2BFjords.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP0592.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-rOuBbaxoNAU/T-zOq9MmziI/AAAAAAAABdU/y24M7n3oj70/s1920-w1920-h1080-c/IMGP0592.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071121-3891-MontcitoMorn.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-X5n9ak4dE1s/Tg1c8c9xvWI/AAAAAAAAALE/M9bf_hSgUHI/s1920-w1920-h1080-c/071121-3891-MontcitoMorn.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8551.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-0QWWEWkAEkA/UTmo6qnkIgI/AAAAAAAAWsU/VIzT5UsUyh8/s1920-w1920-h1080-c/DSC_8551.png\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_20130330_120430-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-f1YF98XfEmY/UVmHsvQBxvI/AAAAAAAAT9g/0Uk7XjxUFCw/s1920-w1920-h1080-c/IMG_20130330_120430-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SutroSunset-surf-burn.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-zcGhuTDGZ7Q/TvI44kbopOI/AAAAAAABFaY/677iL2Z8O8s/s1920-w1920-h1080-c/SutroSunset-surf-burn.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Beach.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-lMCO5r3MLUQ/UZURZdDoWWI/AAAAAAAAPOU/FayJm6cQrN4/s1920-w1920-h1080-c/The%2BBeach.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Take+It+or+Leave+It.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-jrCbEVo5pok/UTUniMfAPQI/AAAAAAAAMlc/taFKyOwN7ro/s1920-w1920-h1080-c/Take%2BIt%2Bor%2BLeave%2BIt.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ENS-+Macro+Snow-.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-JMRLCkgYWUI/UR0He_hKbyI/AAAAAAAAOyM/Fjml1QshbrU/s1920-w1920-h1080-c/ENS-%2BMacro%2BSnow-.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1351.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-DHg264B2vlg/Ul9y7zxl9iI/AAAAAAAAE6A/KNGHpq_cH1M/s1920-w1920-h1080-c/DSC_1351.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_7939+he.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-lA8lfuSjpBY/U0tzavr8B0I/AAAAAAAAvh8/YNJ4VVT6axk/s1920-w1920-h1080-c/IMG_7939%2Bhe.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071124-3917-BigSurSky.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-vQXExn8x3Wo/Tg1dCJ3WSJI/AAAAAAAAALM/j6v5p4iMLDc/s1920-w1920-h1080-c/071124-3917-BigSurSky.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3189889363_6357f5f645_o.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-mA6_1F0fM7U/TgtZGJt2oII/AAAAAAAJKTg/te1m0BOVycg/s1920-w1920-h1080-c/3189889363_6357f5f645_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01070+Mosaic.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-nCN9lgyjKd0/UpBNC_yRLBI/AAAAAAAAD_s/xH5Pb5wEGH4/s1920-w1920-h1080-c/DSC01070%2BMosaic.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1182.CR2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-2y17u99oVV8/TwyPAbOBPqI/AAAAAAAAF9w/EQOhIwGaHiA/s1920-w1920-h1080-c/IMG_1182.CR2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Grassy+Roof.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Y_Bp6GUWfSE/U0Maxnb6OyI/AAAAAAAJA4U/a05iPi39_7c/s1920-w1920-h1080-c/The%2BGrassy%2BRoof.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Seal+Rocks-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-rQdS7R8LdHM/T1Jy2z5kZcI/AAAAAAABFZY/Cqb-Q9aWw2Q/s1920-w1920-h1080-c/Seal%2BRocks-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MountainSplendor.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-f6OToCJWRrg/UUsOySkJXoI/AAAAAAAATgk/DWwubrzxFPY/s1920-w1920-h1080-c/MountainSplendor.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_4460.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GQv4Q_NZKH8/UDZ1v6AEcSI/AAAAAAAA6ik/i90ZeH2jexc/s1920-w1920-h1080-c/IMG_4460.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untitled+(101+of+207).png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-tw3AkYSVojM/U0MlwltSINI/AAAAAAAJBMA/7_5x_BUOOww/s1920-w1920-h1080-c/untitled%2B%2528101%2Bof%2B207%2529.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6674-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-X3k5JeDbKW4/UZtfuMrJ49I/AAAAAAAAVpI/Qy3yA3weGXM/s1920-w1920-h1080-c/DSC_6674-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/5-07-13-hodgeman-ks-lightning-supercell.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-NE7B7ZtjC9M/UknSexY2-_I/AAAAAAAAN6g/od62b4KTS9U/s1920-w1920-h1080-c/5-07-13-hodgeman-ks-lightning-supercell.png\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Thamserku.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-gvCvkN6ll9Y/UtRUq4mYc8I/AAAAAAAAGpo/RecztlhW01k/s1920-w1920-h1080-c/Thamserku.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ohau-cliff-hawaii-trey-ratcliff.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-lKPOvxP_3hQ/U0MjW1IS8QI/AAAAAAAJBP4/qTn4pFXZq_8/s1920-w1920-h1080-c/ohau-cliff-hawaii-trey-ratcliff.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/7439storm2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-PBAhFhrSEPM/Ugj3wyodrvI/AAAAAAAAIOs/Fo7lNmwWNu0/s1920-w1920-h1080-c/7439storm2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/bondi_sml.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-OuaQJ-ktrms/TmH7HMco5NI/AAAAAAAADYk/CvmoywXR_ck/s1920-w1920-h1080-c/bondi_sml.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+China+2011+-+A+Great+Wall+at+Sunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Bm8YwGRxgzI/U0MfR72bkDI/AAAAAAAJKHE/TKs1mWF8US4/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BChina%2B2011%2B-%2BA%2BGreat%2BWall%2Bat%2BSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TwilightRocks_SanMateoCoast-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-WiGnP1yACq0/T2-Ib08jHdI/AAAAAAABFaw/uRs4YlY_qss/s1920-w1920-h1080-c/TwilightRocks_SanMateoCoast-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Farm+of+Eden.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-To5JBx7eAO4/U0MaTRPOM4I/AAAAAAAJEWM/8Bgvm9uL6Do/s1920-w1920-h1080-c/The%2BFarm%2Bof%2BEden.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8031438226_5713c1a86c_o.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-VeCrM9fKDYw/UkPR39wFICI/AAAAAAAALrQ/1VmRr7zq_N4/s1920-w1920-h1080-c/8031438226_5713c1a86c_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061012-1078-PelicanCove.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Hn2QgYPEDxo/Tg1bUgAlTfI/AAAAAAAAAI0/R33ZpN3IaJ8/s1920-w1920-h1080-c/061012-1078-PelicanCove.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC03916+Green+Leaf+Texture.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Lpppujp4Qb4/UpBTNYFdx7I/AAAAAAAAD_4/SCgq46wEvcU/s1920-w1920-h1080-c/DSC03916%2BGreen%2BLeaf%2BTexture.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Fickle+Mistress.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Z9mJn5vva2U/T6sVZGdrvgI/AAAAAAAAdAo/rdpy_ia2NS8/s1920-w1920-h1080-c/The%2BFickle%2BMistress.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090227-0384-McCluresPoint.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-K7DKKrLhMec/Tg1eUKdLbXI/AAAAAAAAAM4/BaH6ytbEX4U/s1920-w1920-h1080-c/090227-0384-McCluresPoint.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/080816-4952-WaianSands.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-tCgHZWwSulc/Tg1dtfmRPHI/AAAAAAAAAMI/ol6-WLOo7WU/s1920-w1920-h1080-c/080816-4952-WaianSands.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0684.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-xOVjmeJjM3o/TqtYP_buAoI/AAAAAAAAFlA/xUHqJSkr-MU/s1920-w1920-h1080-c/IMG_0684.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071229-4276-LaJollaFalls.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-e6TcvHbkNxo/Tg1dYGAJKTI/AAAAAAAAALw/_t-M3-wmbeg/s1920-w1920-h1080-c/071229-4276-LaJollaFalls.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090911-2088-AngelIslandSky2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-n76GULHmI8U/Tg1fNmGyDbI/AAAAAAAAAOA/pNieTMoo0ro/s1920-w1920-h1080-c/090911-2088-AngelIslandSky2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1134103121_gateway+to+the+temple+of+heaven.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-08NVs0omPPw/TgtZEFlihuI/AAAAAAAJBBo/KKdqrpOP5Z0/s1920-w1920-h1080-c/1134103121_gateway%2Bto%2Bthe%2Btemple%2Bof%2Bheaven.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DolphinWalk.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-WHdVljxASJk/UOue-BcvLNI/AAAAAAAAwoo/ENRQQBJtKsA/s1920-w1920-h1080-c/DolphinWalk.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Red+paint+on+rock!.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-1OMPOm50As0/Ua2didd-IjI/AAAAAAAAfX4/afXkw0vQ4Nc/s1280-w1280-c-h720-k-no/Red%2Bpaint%2Bon%2Brock%2521\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/5-20-11-sunset-clouds365-kdelay.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-sVsjQwFKpM0/UFN9mKAiexI/AAAAAAAASuM/qpOQevOJY8k/s1920-w1920-h1080-c/5-20-11-sunset-clouds365-kdelay.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/maui-13.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-A5xnIm26hoM/UQ6xWBcP60I/AAAAAAAAFZI/xCilpfxW-3Y/s1920-w1920-h1080-c/maui-13.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Sloat-SunsetBeachFoam.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-2oWY5eMxbnY/TwJ1W3DnAII/AAAAAAABFbs/V9UTfZKkOnM/s1920-w1920-h1080-c/Sloat-SunsetBeachFoam.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6436.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Hjg_1FAJV7k/T8miVTXavMI/AAAAAAAAIgo/Ksveh_v5Pws/s1920-w1920-h1080-c/DSC_6436.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090501-0963-CycloneOfLt.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-duWLWrx3RtU/Tg1erB-vvtI/AAAAAAAAANU/3iD8-ATfJsw/s1920-w1920-h1080-c/090501-0963-CycloneOfLt.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1189866210_spanish+sunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-zAb56uSfuX0/TgtZEG6yqnI/AAAAAAAJBDQ/5prXR1sSzyU/s1920-w1920-h1080-c/1189866210_spanish%2Bsunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_5433.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-dN576MDlyEM/TiRJgIjUtZI/AAAAAAAD6lY/sbNK1sQOiow/s1920-w1920-h1080-c/IMG_5433.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A4957.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-7EJI2_bMWrg/U0_6WXfnu0I/AAAAAAAA2IA/qnv2qDY374E/s1920-w1920-h1080-c/388A4957.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Olmsted-Sunset-1.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-_X4BN2gmOh4/TqTdEJ8Q95I/AAAAAAAAEx4/4HIX-pD4OuI/s1920-w1920-h1080-c/Olmsted-Sunset-1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/new-england-4.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-z9s9Br2P5fo/UKZedhD_eYI/AAAAAAAACfk/2-qRWoFQDcs/s1920-w1920-h1080-c/new-england-4.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20101103_TorresDelPaine_Cuernos_Horns_6215_blended-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-9VBXTbvWld0/U_yjmbN6zVI/AAAAAAAB-3c/rSgR3kL3uTQ/s1920-w1920-h1080-c/20101103_TorresDelPaine_Cuernos_Horns_6215_blended-Edit-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/bodie-11.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-NFuPWEa3vrE/UFs2mhJrWQI/AAAAAAAAST4/QAg74w1fZpI/s1920-w1920-h1080-c/bodie-11.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP8003.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-xjlOWCsBOHg/UL2Bg7-fWJI/AAAAAAAAEQM/_Af3LToQDmg/s1920-w1920-h1080-c/IMGP8003.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20110710-160024.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GN97YhnT3Qo/Tj1SVC1wv-I/AAAAAAAADi0/upwFGIqVhPQ/s1920-w1920-h1080-c/20110710-160024.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/River+and+Mount.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-mdbG7ZFFzKQ/U0MX5tKa1vI/AAAAAAAJCBM/XGhf_-p25Ys/s1920-w1920-h1080-c/River%2Band%2BMount.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/060607-0405-PillarsPast.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-USkNl2UVpk8/Tg1a6ynrEKI/AAAAAAAAc0c/fcUJz1E5SKw/s1920-w1920-h1080-c/060607-0405-PillarsPast.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8949932059_416d4806ab_o.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-rU4h5IKilhs/UbC8PJyZCII/AAAAAAAABBo/tPQZAwV8nxA/s1920-w1920-h1080-c/8949932059_416d4806ab_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untitled-5.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-iXtTEIicPCE/Thz5P1Y-mFI/AAAAAAACqmA/QwzDzmHWk94/s1920-w1920-h1080-c/untitled-5.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20140105-untitled+shoot-2908_HDR_HDR.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-kM5nzgAtWSI/Us2ewqEBtFI/AAAAAAAABiM/iwvLzC2OMEk/s1920-w1920-h1080-c/20140105-untitled%2Bshoot-2908_HDR_HDR.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100731-4524-HapunaLight1.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-EF8NaWPwjTM/Tg1gLGBR_9I/AAAAAAAAAPE/3DlU_Kv1HHQ/s1920-w1920-h1080-c/100731-4524-HapunaLight1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TetonSnakeOverlook.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-RCFt3utBaXk/UE5kxyUxo6I/AAAAAAAAJWQ/jtgzKjcGfuU/s1920-w1920-h1080-c/TetonSnakeOverlook.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20120212-IMG_4250.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-5FV5VQzT0WQ/Tzy0dNznpGI/AAAAAAAAEwc/5uIfwjNBMhc/s1920-w1920-h1080-c/20120212-IMG_4250.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100312-3521-MonolithicLight1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-KKZmrbmQdYM/Tg1fx0f9EaI/AAAAAAAAAOs/zg07LmkK2eg/s1920-w1920-h1080-c/100312-3521-MonolithicLight1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8156803630_fcb67dbe98_k.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-p3T0Z0zLK5E/UJhoD6_Ac1I/AAAAAAAAgMQ/fqQxNGKpL-c/s1920-w1920-h1080-c/8156803630_fcb67dbe98_k.jpeg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/4088949046_5d094cb2e2_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-yX9BOjrswig/TgtZEPKtS_I/AAAAAAAJEmo/jrnHGoDlpHw/s1920-w1920-h1080-c/4088949046_5d094cb2e2_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8621-2-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-4eLicoBRkAQ/Uc7OMQqqKMI/AAAAAAAAXbw/eMQHZ3fhXGA/s1920-w1920-h1080-c/DSC_8621-2-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1171692863_the+eiffel+from+beneath.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-PQQBBUfBmNs/TgtZENaPpRI/AAAAAAAJA1Y/mfOoa5PJw4g/s1920-w1920-h1080-c/1171692863_the%2Beiffel%2Bfrom%2Bbeneath.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/A+Sunset+on+a+Texas+Farm.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-9-6Sd41GxEQ/U0MR8Gvqf4I/AAAAAAAJRB0/9fYITnA4fQk/s1920-w1920-h1080-c/A%2BSunset%2Bon%2Ba%2BTexas%2BFarm.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/300928932_3bf6d408df_o.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-DfDrf9tZth0/TgtZGBjmXqI/AAAAAAAJA_A/e6jq_VQrXaY/s1920-w1920-h1080-c/300928932_3bf6d408df_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ReflectingMoonlight.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-B7gaJXyGoIs/UHOmYB8GzPI/AAAAAAAAwHA/MGpwJlaw7Yw/s1920-w1920-h1080-c/Reflecting%25252520Moonlight.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Solar+Flower.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-zuD-bqjkRMs/U0MdYYTiWJI/AAAAAAAJJLE/xEEn0-D32-Q/s1920-w1920-h1080-c/The%2BSolar%2BFlower.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061119-1290-HaenaSurf.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-DtOOMCEQEzs/Tg1baI_IkFI/AAAAAAAAc0g/4HYnmK0I21k/s1920-w1920-h1080-c/061119-1290-HaenaSurf.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3425202839_7a6b829432_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Mo0DARoQ5pg/TgtZGObV66I/AAAAAAAJA4A/x3NBiBZ1T08/s1920-w1920-h1080-c/3425202839_7a6b829432_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A3302.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-EGI_DF6_jjM/U0_6WeYaAcI/AAAAAAAA2IA/onrkX5wYXC0/s1920-w1920-h1080-c/388A3302.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2388+e.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-uWYftkrNY7Y/U08nbhRFXEI/AAAAAAAAvt8/Jvqvy9ZX7Rw/s1920-w1920-h1080-c/IMG_2388%2Be.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/060506-0094-Farscape.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-mB0CsB02334/Tg1a0rca9TI/AAAAAAAAc0M/poMn2aae0XU/s1920-w1920-h1080-c/060506-0094-Farscape.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090102-0143-SeaAndStorm.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-rqPXOCN3Sf4/Tg1eJr7jzJI/AAAAAAAAAMs/neSQj8_NJbQ/s1920-w1920-h1080-c/090102-0143-SeaAndStorm.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB-Wave_mono-square.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-_9KsThqIDII/TsKQNHpnMcI/AAAAAAABFcM/myl4tBgFSMs/s1920-w1920-h1080-c/GGB-Wave_mono-square.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_2817.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-KTagpsQRiZw/Tk84FHT3wvI/AAAAAAABMJE/lGUSRehuqK0/s1920-w1920-h1080-c/DSC_2817.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/A+Morning+at+the+Secret+Lak2e.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-r9JZ23uiJdw/U0MRzWVvfDI/AAAAAAAJA5Q/4xCghAQGdp8/s1920-w1920-h1080-c/A%2BMorning%2Bat%2Bthe%2BSecret%2BLak2e.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/C21T0817.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-s8Arhr77hCs/UqTF_xWLYVI/AAAAAAAAXK8/uRcPFpV7CPM/s1920-w1920-h1080-c/C21T0817.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/091009-2169-LibOfAges3.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-VeOuV8_xtzQ/Tg1fcY4BfBI/AAAAAAAAAOQ/y0D10NZbTOw/s1920-w1920-h1080-c/091009-2169-LibOfAges3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SFBay-Sunrise-Hank-n-Pilings-2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-NZ_Ll43savw/TzCKeTsXQHI/AAAAAAAASAc/n4AJeYm6ehA/s1920-w1920-h1080-c/SFBay-Sunrise-Hank-n-Pilings-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Adventure+in+Argentina-7283-March+31,+2009-2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-q7WJKw9Oqog/U0MSH9OpjdI/AAAAAAAJGxU/FDOzRfCcMro/s1920-w1920-h1080-c/Adventure%2Bin%2BArgentina-7283-March%2B31%252C%2B2009-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SunetReflection_16x9-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/--s1xvTZu_8s/TvEFum2qOkI/AAAAAAABFiQ/RVtjU4CacrI/s1920-w1920-h1080-c/SunetReflection_16x9-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1221.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-id9Mf91TyIg/UQmGXFzYiAI/AAAAAAAAlfo/n2RM1udWSeM/s1920-w1920-h1080-c/IMG_1221.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey-Ratcliff-New-Zealand+(362+of+696).png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-4-wMlkvbnxI/U0MiMX47iJI/AAAAAAAJJJ8/lstLqeHqMOM/s1920-w1920-h1080-c/Trey-Ratcliff-New-Zealand%2B%2528362%2Bof%2B696%2529.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Rocks+of+Iceland.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-7EENXFBPvH8/U0Mc5Ty31YI/AAAAAAAJBIY/d9kb4PcgsXc/s1920-w1920-h1080-c/The%2BRocks%2Bof%2BIceland.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/2012-Favorites-3.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-_TPUkTQ0foE/UOu3R1Fih9I/AAAAAAAAUwU/n2BcAi9lFAI/s1920-w1920-h1080-c/2012-Favorites-3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Exclamation-4.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-p2S6pYJG8TY/UkLZ-2heppI/AAAAAAAAdAo/UEwJsuYTGXM/s1920-w1920-h1080-c/Exclamation-4.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01099+Plant.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-AM_AYNzr-a0/UpBNRCa9JbI/AAAAAAAAD_w/gATI2Qr7EHw/s1920-w1920-h1080-c/DSC01099%2BPlant.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1-24-13.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-k85UvBDxqso/UbdXjw35hhI/AAAAAAAAFh4/E7cP1B2hXgg/s1920-w1920-h1080-c/1-24-13.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/LowerAntelope1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Hy-GW9jdRmM/UOOY4T51IhI/AAAAAAAAKiI/dj3WLyRqMJE/s1920-w1920-h1080-c/LowerAntelope1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DelicateArch.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-lTCOr1mGi98/T0m262j2RnI/AAAAAAAAGbs/4Ab-Mhv-4_A/s1920-w1920-h1080-c/DelicateArch.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_3091-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-dzQdFd1d2cg/UpExTYfIJ6I/AAAAAAAAFgo/jW1vrNByXqg/s1920-w1920-h1080-c/DSC_3091-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Lorne+Road.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-SPVIRuebjx0/U0MWpwm-GJI/AAAAAAAJJKQ/b1X__UQq1K8/s1920-w1920-h1080-c/Lorne%2BRoad.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/110429-7971-Faultlines.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-9evAJAwXovk/Tg1aR0viDRI/AAAAAAAAc0I/TecuJZTaV44/s1920-w1920-h1080-c/110429-7971-Faultlines.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+NEX+7-+Sunset+2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-2Q98cG0kiX8/U0MgMcXhJgI/AAAAAAAJKoU/iqJaKYOi6J0/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BNEX%2B7-%2BSunset%2B2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP8556-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-ree1zkofuLM/UPBTkiEo3pI/AAAAAAAAfWU/t0UKepl53qw/s1920-w1920-h1080-c/IMGP8556-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Most+Beautiful+Road+in+the+World.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Cp1EGSOiT7o/U0MbuGaep5I/AAAAAAAJIA0/Hi4dBFthsQE/s1920-w1920-h1080-c/The%2BMost%2BBeautiful%2BRoad%2Bin%2Bthe%2BWorld.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Chicago.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-KxjcNjAfrow/U0MTi1JasjI/AAAAAAAJKS4/JcqmHStMKgE/s1920-w1920-h1080-c/Chicago.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/070211-2329-GarrapataSurf1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-p8gu7w4UaB0/Tg1cD-zJRXI/AAAAAAAAAJw/xKPs4AJ8WTU/s1920-w1920-h1080-c/070211-2329-GarrapataSurf1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Day+Break+G+.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-KwGZ0753oAA/T_SUbhKUrmI/AAAAAAAAhqg/aN2q0nhUYNA/s1920-w1920-h1080-c/Day%2BBreak%2BG%252B.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/070902-3129-BowlingBall1.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-EIrEuHD0skg/Tg1cUtz3htI/AAAAAAAAc00/ykp5Z4-BtGg/s1920-w1920-h1080-c/070902-3129-BowlingBall1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+OTW+to+Glen.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-ggjaMcHz6Fw/U0Mgf-CsIDI/AAAAAAAJFdQ/iyuO6PIuUdg/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BOTW%2Bto%2BGlen.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/136.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-DZDQ-Jc4VPA/TSjtGSyY5lI/AAAAAAAAkNQ/r8BTRHGP7qI/s1920-w1920-h1080-c/136.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1311-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-smKqSEXvptA/UpZ3FAZqrSI/AAAAAAAAf5w/iIG6Dg0XSKs/s1920-w1920-h1080-c/DSC_1311-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/In+a+Foreign+Land+-+West+Fjords,+Iceland.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-5vOp8Qd9Cr0/UZURZbC6EvI/AAAAAAAAgTY/jZBHwF9W4VU/s1920-w1920-h1080-c/In%2Ba%2BForeign%2BLand%2B-%2BWest%2BFjords%252C%2BIceland.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Hell's+Gate+Bridge-6.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-sZXaqdy-xcA/UKzgVo7pqnI/AAAAAAAAIaA/tvF7kHoKH2I/s1920-w1920-h1080-c/Hell%2527s%2BGate%2BBridge-6.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/End+Game+.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-vYrcLbr_syE/UO0CdVlLb_I/AAAAAAAAgOE/-NoOWCD3-LY/s1920-w1920-h1080-c/End%2BGame%252B.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+China+2011+-+The+Egg+at+Sunset.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-fSZtzjxYoBk/U0MfcOvbsrI/AAAAAAAJBP8/prm689xvgE4/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BChina%2B2011%2B-%2BThe%2BEgg%2Bat%2BSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_8642.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-IFmqkzp2Z74/SlgjPMN0INI/AAAAAAAAJlI/cVrfkqJwBj4/s1920-w1920-h1080-c/IMG_8642.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A3234.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-81O00JEe7GY/U0_6WV9qs6I/AAAAAAAA2IA/xSYNSA5zuIo/s1920-w1920-h1080-c/388A3234.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A4648-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Xb-0VhFJErE/U0_6WZpo_5I/AAAAAAAA2IA/3wWOfPmtuno/s1920-w1920-h1080-c/388A4648-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_2238-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-0gRcRJvCyq8/UYWMMwK-xyI/AAAAAAAAgOg/YAmwDINMMW4/s1920-w1920-h1080-c/MOL_2238-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Kona-Hawaii-Stormy-Sky.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-EgToYDexIWA/TugFtw6MbOI/AAAAAAAAJ_E/AFdXppomBHM/s1920-w1920-h1080-c/Kona-Hawaii-Stormy-Sky.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/BakerBeach-SunsetColor.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-AGyN05vOAVg/Trv455hOvXI/AAAAAAABFag/ruA7zfHRDik/s1920-w1920-h1080-c/BakerBeach-SunsetColor.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/red+bridge+in+late+afternoon.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-voPn3r8W5cQ/TgtZEGX9FFI/AAAAAAAJG7g/wotb_OlghAE/s1920-w1920-h1080-c/red%2Bbridge%2Bin%2Blate%2Bafternoon.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/LandsEnd-sunset-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-i1rPphMhUYQ/T1l7sJNRR5I/AAAAAAABFaA/ISCx26OdOHM/s1920-w1920-h1080-c/LandsEnd-sunset-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20130915-7372-34873c91-2048.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-3d-tkshy_0Y/Um32gHQ1usI/AAAAAAAACGA/O4ZCsNcd1-M/s1920-w1920-h1080-c/20130915-7372-34873c91-2048.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Ocean+Sigh.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-KKLEMMadjkQ/UO8V4We8BYI/AAAAAAAAwHI/245vkVmGU8w/s1920-w1920-h1080-c/Ocean%2BSigh.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RodeoCove-SmallSunset-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-cFtlqrFqSy0/Tpr3ij-CA7I/AAAAAAABC7g/PhNSHOv9-dw/s1920-w1920-h1080-c/RodeoCove-SmallSunset-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1556-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-01ZxJyYSOq4/UtTs57pjoXI/AAAAAAAAOYg/L4SWL7LqweM/s1920-w1920-h1080-c/DSC_1556-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Road+to+Lindis+Pass.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-wBaT-XTU5lw/U0McsiS2QGI/AAAAAAAJG6g/emxVwa5ILwo/s1920-w1920-h1080-c/The%2BRoad%2Bto%2BLindis%2BPass.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Life+in+the+greenhouse-3.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-t4GuDMvJgtk/TPK0WgSeLBI/AAAAAAADI4c/zYc1x7I-S9k/s1920-w1920-h1080-c/Life%2Bin%2Bthe%2Bgreenhouse-3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/7995122298_d4743a46ce_k.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-dVPjiuCL-og/UNi-6EF0QjI/AAAAAAAAK5E/33w0ipRlzuc/s1920-w1920-h1080-c/7995122298_d4743a46ce_k.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/McWay+Milky+Way.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-4J2fjwHlZpk/UtTyvD-FnJI/AAAAAAAAX1k/TuYoeLc-Ku8/s1920-w1920-h1080-c/McWay%2BMilky%2BWay.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-queenstown-nz-nikon-d800.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uxsx0IEs6eA/U0MlLb1IerI/AAAAAAAJP20/dPosYR9XVxw/s1920-w1920-h1080-c/trey-ratcliff-queenstown-nz-nikon-d800.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Chef+at+Sunset.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-YB4kZ5ge9Cc/U0MTgZTfmZI/AAAAAAAJQpw/V9nAX7xkgF0/s1920-w1920-h1080-c/Chef%2Bat%2BSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ConvictLakeSunrise.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-FAIPD0L_XLs/UBctAcHLwcI/AAAAAAAAJAo/fsicVZWEcT8/s1920-w1920-h1080-c/ConvictLakeSunrise.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01009+(1).png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-k1Op3rHp90U/ToFAGEMaH4I/AAAAAAAAraU/f_xZikhzlCY/s1920-w1920-h1080-c/DSC01009%2B%25281%2529.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0444_5_6-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-UHWxgek6Ei0/T58Hpp9zkeI/AAAAAAAANzY/M8D4GtsE6cY/s1920-w1920-h1080-c/DSC_0444_5_6-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090424-0690-CrystCvBreakers.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-9FMwjMIo6MU/Tg1efx1FWSI/AAAAAAAAANE/NuC3xJSPApo/s1920-w1920-h1080-c/090424-0690-CrystCvBreakers.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Sky+Forever.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-rYUyEz24110/U0MddxVVpKI/AAAAAAAJI0g/Yo2Aeee9akk/s1920-w1920-h1080-c/The%2BSky%2BForever.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20140310_Iceland_1392-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-bjac3OgFBG8/U_yjp004PtI/AAAAAAAB-4U/jq6sA93FbVI/s1920-w1920-h1080-c/20140310_Iceland_1392-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3410783929_310572ed16_o.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-1oYAqn8Hi9o/TgtZEE_8tKI/AAAAAAAJJKI/8CbtKab2l0U/s1920-w1920-h1080-c/3410783929_310572ed16_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/G+.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-udPQ4zAGUYg/UZURZTfLDhI/AAAAAAAAPSc/ptIJgEKd2LQ/s1920-w1920-h1080-c/G%252B.jpeg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/C21T0861.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-v6_xr8m1Nh4/UqTF_6FhNQI/AAAAAAAATJY/VWbCHgg5quc/s1920-w1920-h1080-c/C21T0861.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3505475407_d776e4d589_o-1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-TVzStzhfexU/S_5S8_zMy5I/AAAAAAADFE0/fN7-JZzP46I/s1920-w1920-h1080-c/3505475407_d776e4d589_o-1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Seattle.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-DteiBArt5UI/U0MYH6zthEI/AAAAAAAJFtY/UU1t1FU6uX4/s1920-w1920-h1080-c/Seattle.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100409-3657-PinnacleRock3.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-eOzWq5Yn-SY/Tg1f10Dgx4I/AAAAAAAAAOw/PiXj6h2JAio/s1920-w1920-h1080-c/100409-3657-PinnacleRock3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey-Ratcliff-Milford-Sound-100.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-PwjNo1puYPI/U0MiQaw-PxI/AAAAAAAJF3M/gyTiKomggGc/s1920-w1920-h1080-c/Trey-Ratcliff-Milford-Sound-100.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061125-1635-Maelstrom3.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-5E0jD9xU4kU/Tg1brt6WipI/AAAAAAAAc0s/2YRKYYKsEkM/s1920-w1920-h1080-c/061125-1635-Maelstrom3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A1865_HDR.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-zrMZyIFb_wM/U0_6WbX2k0I/AAAAAAAA2IA/EM_Lt3L7XOg/s1920-w1920-h1080-c/388A1865_HDR.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2337.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uxwr24FdX3I/TwZMCaKx4XI/AAAAAAAAQnE/DcLxR0jnfqE/s1920-w1920-h1080-c/IMG_2337.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1531.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-EIEk1-tv81w/TGD0hHBXZEI/AAAAAAAAav0/MfGEerqGlfk/s1920-w1920-h1080-c/IMG_1531.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/FI4C4577.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-KN7d8PlNOxU/UA7HP8WNpTI/AAAAAAAASLc/esv8pSYjYmQ/s1920-w1920-h1080-c/FI4C4577.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RaceTrack-tilted.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-TiuUGmgrIJo/T2fhWrPoAtI/AAAAAAAAX-0/KhLFCt5muZ0/s1920-w1920-h1080-c/RaceTrack-tilted.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/tempest+(1)-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-aN5bGPX4Rig/UW_esdzHpZI/AAAAAAAAUYo/lhx3gIuY2Tc/s1920-w1920-h1080-c/tempest%2B%25281%2529-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/the+lonely+grass+house.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-BqdD6DbXnso/TgtZGH_h6AI/AAAAAAAJA0Q/VNpKkFnn1eg/s1920-w1920-h1080-c/the%2Blonely%2Bgrass%2Bhouse.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/BeanHollow-sunset-surf.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-bhHK29YjgVc/T3CquVOc6hI/AAAAAAABFZI/Z-FfTyBzwLI/s1920-w1920-h1080-c/BeanHollow-sunset-surf.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20140328_Hawaii_2209-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-JOT24t6ZLx4/U_yjrKLK2zI/AAAAAAAB-4o/KC0ZWVXh110/s1920-w1920-h1080-c/20140328_Hawaii_2209-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RHeaRy_402.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-a860A9miaZQ/ThtTuOdNWNI/AAAAAAABSE0/tjO54r6kego/s1920-w1920-h1080-c/RHeaRy_402.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MorningBlue-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-w_It3dmq8_Q/Tr26ZtIDRNI/AAAAAAAAGVg/qOM8lD2pCpU/s1920-w1920-h1080-c/MorningBlue-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071118-3765-LvrsPtMorn.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-3l1ZJxwb6rI/Tg1czp-9MFI/AAAAAAAAAK0/rdFg0gGfCqg/s1920-w1920-h1080-c/071118-3765-LvrsPtMorn.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/forest+fog+v2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-f3E6blFBDVk/Tg0tjUx3BJI/AAAAAAAAgMY/f8tnlRGQisU/s1920-w1920-h1080-c/forest%2Bfog%2Bv2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/oil3.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-cQXP45_tLq0/T0m27oIexHI/AAAAAAAAGb8/keNzP_2lN60/s1920-w1920-h1080-c/oil3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/FoggySunrise-HawkHill-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-nwpgAk2m0O8/ToM1yp5NLQI/AAAAAAABC64/ExPWPjc-oLE/s1920-w1920-h1080-c/FoggySunrise-HawkHill-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB-SlackersRidge-Sunrise-fog-headlights-wide.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-s-CrcrZfoEY/TzlsdNVcPpI/AAAAAAAAS2I/vgewR4SWII0/s1920-w1920-h1080-c/GGB-SlackersRidge-Sunrise-fog-headlights-wide.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/4+horses.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-PFORpB2nRWU/TgtZEBZXStI/AAAAAAAJG78/sg8P1h1FTu4/s1920-w1920-h1080-c/4%2Bhorses.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1-02-12-part2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-LuTnYJ-_AcA/UbdXj-v1fMI/AAAAAAAAFhg/emAw_2y06Ak/s1920-w1920-h1080-c/1-02-12-part2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1071616194_the+farm+of+eden.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-mWoPAMsZ8qM/TgtZECWsZDI/AAAAAAAJGYQ/mGJ5umfc76I/s1920-w1920-h1080-c/1071616194_the%2Bfarm%2Bof%2Beden.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MWF_2155.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-ll7ATwQQOnE/UkPP_YH9WKI/AAAAAAAALoA/_9E2BHedhG4/s1920-w1920-h1080-c/MWF_2155.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RHeaRy_465.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-hDuDewqWJhc/ThYuDF3m4II/AAAAAAABSc8/OMs4oB1Xj6U/s1920-w1920-h1080-c/RHeaRy_465.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/101027-4887-TestOfTime.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-lOZvJ3yPdfc/Tg1gbgvj2bI/AAAAAAAAAPc/bgWip6MWRVI/s1920-w1920-h1080-c/101027-4887-TestOfTime.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1272-Edit-Edit-2-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Ov6cnpCqcKo/Ue52zucefaI/AAAAAAAAZuc/Ya8H97MGDxo/s1920-w1920-h1080-c/DSC_1272-Edit-Edit-2-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MarshallBeachSunset.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-BjCgH3F-OtM/ToojnEsMoHI/AAAAAAAAFNw/RMun2UfSHvI/s1920-w1920-h1080-c/MarshallBeachSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/by+Chris+Chabot.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-5L66J8m3eOc/US-gTtMRQbI/AAAAAAAAX5c/kyQnx5QiiKw/s1920-w1920-h1080-c/by%2BChris%2BChabot.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Chasing+the+Sunset.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-oeJbNPb-T-M/UZURZeo6N9I/AAAAAAAAPQU/py94YP9ogqg/s1920-w1920-h1080-c/Chasing%2Bthe%2BSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1428.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-KK0a8yX7hUc/TnemEmslOEI/AAAAAAAAG4I/qj90bfgIkqs/s1920-w1920-h1080-c/IMG_1428.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6160-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Fz5s5Sq3uSc/UqXO06_DNPI/AAAAAAAAhPw/UNBDEnOdEhs/s1920-w1920-h1080-c/DSC_6160-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20130805_mit_and_river_00001-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GGY-AaDQgJc/UgG4BcMHLWI/AAAAAAAAVgA/pUfLz3uxV-w/s1920-w1920-h1080-c/20130805_mit_and_river_00001-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/tree+in+the+park.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-OIKJTN2YWhU/TgtZGPb42zI/AAAAAAAJA5c/IY3N83zJARw/s1920-w1920-h1080-c/tree%2Bin%2Bthe%2Bpark.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_MG_1449.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-qLopnv-fFT0/TxYB5_vxoEI/AAAAAAABFlo/0zpzDJeTYYk/s1920-w1920-h1080-c/_MG_1449.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3K9C4807.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-4x17JQmbu1s/Ur0CrKBRTzI/AAAAAAAAGH4/t-G8zEmm1jU/s1920-w1920-h1080-c/3K9C4807.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP4090-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Hhp_SMvb6a0/UOSjNI1cZnI/AAAAAAAAGjU/0XLFokAU-bw/s1920-w1920-h1080-c/IMGP4090-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8703.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-ZVK5-96bzpA/UtTypXkQUHI/AAAAAAAARwI/_iTqNhaMZ6c/s1920-w1920-h1080-c/DSC_8703.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-milford11.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-ISfFDxxtu-s/U0MkxpnU1rI/AAAAAAAJBQQ/gmuXSo3KcFQ/s1920-w1920-h1080-c/trey-ratcliff-milford11.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/by+Joel++Tjintjelaar.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-sVAg7ixe6zM/US-gUOy49yI/AAAAAAAAXrM/6iXuvw5XdBw/s1920-w1920-h1080-c/by%2BJoel%2B%2BTjintjelaar.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3857-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-V4KqnGwqPtA/Ur0CJf-GmTI/AAAAAAAAGBA/LO0uFjb-Erc/s1920-w1920-h1080-c/IMG_3857-Edit-Edit-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1311.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-9n3C3hJmGGc/UQmHUE2y6RI/AAAAAAAAlfs/6JKtNnI29Uk/s1920-w1920-h1080-c/IMG_1311.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6743-Edit-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-NZsqwlPxJ08/Ulff-DU9xQI/AAAAAAAAdbg/pJkMnw8uLCk/s1920-w1920-h1080-c/DSC_6743-Edit-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB_DarkMorningWindyFog.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-qiK0GrZEcpQ/TtZtCl10xrI/AAAAAAAAHow/WGJu8GP6dmA/s1920-w1920-h1080-c/GGB_DarkMorningWindyFog.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey-ratcliff-toronto-Recovered.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-HiLp9PsqEEg/U0MiTxSu0yI/AAAAAAAJP3w/ZWMfpXVaQVI/s1920-w1920-h1080-c/Trey-ratcliff-toronto-Recovered.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/070319-2657-PathToLight.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-VGh9JQ9DCzM/Tg1cKU7qBRI/AAAAAAAAAJ4/Dyi6MrlgffU/s1920-w1920-h1080-c/070319-2657-PathToLight.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MWF_6244-7.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-UBxJsB_kCVU/UettpK1i2BI/AAAAAAAAK3s/siEVsMTSHIg/s1920-w1920-h1080-c/MWF_6244-7.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A3363.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Fje9gDslRI0/U0_6WU_6rMI/AAAAAAAA2IA/m4PXkm_hAvI/s1920-w1920-h1080-c/388A3363.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8520.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-sTiWMAC13YQ/UTmo6ED7v9I/AAAAAAAAWsQ/PfI4WYswhJw/s1920-w1920-h1080-c/DSC_8520.png\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/700_1870.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-YOIwgQ1uXcM/SRGZJ-A3yvI/AAAAAAAADMI/6qvORkHqWS4/s1920-w1920-h1080-c/700_1870.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Dream+Catcher+-+Palouse,WA.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-skB9ljKV58M/UXp3kiaG3DI/AAAAAAAAgRM/hZ3rTbu1XwU/s1920-w1920-h1080-c/The%2BDream%2BCatcher%2B-%2BPalouse%252CWA.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Farewell+India.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-H8NDmFzpF_A/TgtZEOagTaI/AAAAAAAIPp0/eTfdvWDBvt4/s1920-w1920-h1080-c/Farewell%2BIndia.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SonomaCoast-Arch-surf-longexp.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-x0qCPDjYL9w/T2Z8tuYaHII/AAAAAAABFXc/empnlAhR_eY/s1920-w1920-h1080-c/SonomaCoast-Arch-surf-longexp.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/2398605326_bf7dde0cf7_o.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-bXrGY2Cafa0/TgtZGEzbZDI/AAAAAAAJA5g/JWbeuWkbTLc/s1920-w1920-h1080-c/2398605326_bf7dde0cf7_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/A+View+from+the+Ranch+in+Argentina.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-txUs9Q95dM8/U0MR9lvvDNI/AAAAAAAJIA8/vY9TD4TiPzw/s1920-w1920-h1080-c/A%2BView%2Bfrom%2Bthe%2BRanch%2Bin%2BArgentina.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/inverness-to-istanbul-00077.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-5uz5EzVcvNU/UEpN7gJg2nI/AAAAAAAAI7s/-Xwxg57SCn0/s1920-w1920-h1080-c/inverness-to-istanbul-00077.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SanGregorioCliffReflection.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-465XgZS4LQo/UOuDAiDRcrI/AAAAAAAAKng/4m7maZotsgg/s1920-w1920-h1080-c/SanGregorioCliffReflection.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/santa-cruz-trey-ratcliff.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-U0yjKIXF2fs/U0MjfTbjf1I/AAAAAAAJEbY/MkqCoe1DfG4/s1920-w1920-h1080-c/santa-cruz-trey-ratcliff.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061122-1421-LtAtEndOfPier.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-7Zi62qJ-NNg/Tg1bfusNzfI/AAAAAAAAAJA/P4bDaf-68Ys/s1920-w1920-h1080-c/061122-1421-LtAtEndOfPier.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_SUE4322.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-vA0vdrM3_ro/UnDyzCqXFaI/AAAAAAAAGxw/GAtvLCwZbAM/s1920-w1920-h1080-c/_SUE4322.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Bamboo+Forest.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-bkNEhcz00Z8/U0MZQ3MdO3I/AAAAAAAJGy4/S-coTfmsQfE/s1920-w1920-h1080-c/The%2BBamboo%2BForest.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC02146+Red+Plant.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-tyOlTzJRvmw/UpBQXuuK_JI/AAAAAAAAD_0/PL7enPiYUT8/s1920-w1920-h1080-c/DSC02146%2BRed%2BPlant.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/01_MG_3677.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-YHEf8jl_LDg/Tgxgtdub2iI/AAAAAAAAAMQ/zmkWf0WkFTI/s1920-w1920-h1080-c/01_MG_3677.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RedTide.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-feW_gVKW6j8/UI5fg6xQBXI/AAAAAAAAWQY/DIOuGTieAMM/s1920-w1920-h1080-c/RedTide.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/091220-2536-TheCurl.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-lR3vG062kEk/Tg1fjlh053I/AAAAAAAAAOc/Sv1zKPXPkPQ/s1920-w1920-h1080-c/091220-2536-TheCurl.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-close-to-tepako-new-zealand.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Q1AA5A9uiYU/U0MkdTp90YI/AAAAAAAJJIw/SuamKxYgwts/s1920-w1920-h1080-c/trey-ratcliff-close-to-tepako-new-zealand.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6837_CropBrightContrast.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Hqmu2H_l2XY/SwIysuFOIiI/AAAAAAABLWk/W9rX5qlmk4c/s1920-w1920-h1080-c/DSC_6837_CropBrightContrast.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061121-1389-UndPierHanalei.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-VZ8vGJ6Qfvc/Tg1bgCMJ1HI/AAAAAAAAAJE/QMa5LYy7phM/s1920-w1920-h1080-c/061121-1389-UndPierHanalei.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20100924-IMG_5794-HDR-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-eCSjsP08EcA/T_0K5wVePeI/AAAAAAAARxk/I-Qx3ciOzUE/s1920-w1920-h1080-c/20100924-IMG_5794-HDR-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Farewell+San+Francisco.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-N7h4Iit041g/U0MUZ6H8WdI/AAAAAAAJKok/V-IfPQ_XXK4/s1920-w1920-h1080-c/Farewell%2BSan%2BFrancisco.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/stream.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-GCr_cZIif7g/Tnarp7XhOMI/AAAAAAAABPU/WNrHyAJOLNA/s1920-w1920-h1080-c/stream.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071110-3579-HvnsGate.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-0DC0pkVJw5g/Tg1cjeX4YpI/AAAAAAAAAKc/bNEDQtv0J4A/s1920-w1920-h1080-c/071110-3579-HvnsGate.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100726-4239-LightAtAhalanui.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-m-0LmCqZxSo/Tg1gLoaJJKI/AAAAAAAAAPI/KNkzyqLgUa0/s1920-w1920-h1080-c/100726-4239-LightAtAhalanui.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RHeaRy_380.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-4026KDnYCqc/ThYb2MMKRLI/AAAAAAABSEs/3N3nOtyl_lI/s1920-w1920-h1080-c/RHeaRy_380.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/CrissyField-SaltMarsh-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-OwU2batkg6A/TrbvnMATI7I/AAAAAAAAF3w/q_7_jgF0ngE/s1920-w1920-h1080-c/CrissyField-SaltMarsh-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/tekapo-new-zealand-trey-ratcliff-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-mGgW1ovI2PE/U0Mjzq2YJuI/AAAAAAAJA0o/aLuxOVgUjlY/s1920-w1920-h1080-c/tekapo-new-zealand-trey-ratcliff-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/p1000284.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-patMHu2oyfs/RJBWFz5TABI/AAAAAAACnSo/ZP9KYfCSFM8/s1920-w1920-h1080-c/p1000284.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2617.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-_p1iKjPzjGc/TIW63f_px1I/AAAAAAAAOck/NCDLhcVRam8/s1920-w1920-h1080-c/IMG_2617.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8280686512_7820f388dc_k.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-NeMzsWIU6RU/UZURZR7U_aI/AAAAAAAAgSY/-AtSrt0ig5Q/s1920-w1920-h1080-c/8280686512_7820f388dc_k.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC02700.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-9Nj6ilPU0NI/Ts9Gk0pfW_I/AAAAAAAAD4I/GWbtz0c91tE/s1920-w1920-h1080-c/DSC02700.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A6457.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-jTQjx2iGz84/U0_6WWCDwxI/AAAAAAAA2IA/FmHhYqwC0Y8/s1920-w1920-h1080-c/388A6457.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TufaSunset-1-2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uk4W-F3OXbM/Tqwm9e_vuJI/AAAAAAABFcE/zPYFePKqTxs/s1920-w1920-h1080-c/TufaSunset-1-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/P1142336.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-7ZuJOGpJ5-0/UHRHfwcGEUI/AAAAAAAAKsU/s31OrXjVZ9A/s1920-w1920-h1080-c/P1142336.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Glacier+Point+Milky+Way+Panorama.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-YxXTf0j_MTQ/UtTwF4t9yEI/AAAAAAAAW8g/dYsGmWzs81Y/s1920-w1920-h1080-c/Glacier%2BPoint%2BMilky%2BWay%2BPanorama.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_DX_6908_09_10_11_32bit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-gBb9HtLb3zw/U_yjyTFvcAI/AAAAAAAB-64/G_Jt5mnm-mU/s1920-w1920-h1080-c/_DX_6908_09_10_11_32bit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/inverness-to-istanbul-00177.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-yCO0vebn5x0/UFBrOZtDNZI/AAAAAAAAJO8/jX4MgPfHQbE/s1920-w1920-h1080-c/inverness-to-istanbul-00177.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0554.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-59MYsAxhB_I/UtTzqg1a7VI/AAAAAAAAWds/BLWELYZHUWE/s1920-w1920-h1080-c/DSC_0554.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Blue.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-p4V1WVO8Dhw/UBSl6P5W35I/AAAAAAAAPdg/UFIS4M1KDBE/s1920-w1920-h1080-c/Blue.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/BayBridge-night-mono.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-5IpprOs0T78/T3PwhE-VJ9I/AAAAAAAAYzA/-2X-oY9C3N0/s1920-w1920-h1080-c/BayBridge-night-mono.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_9645-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-utp4ouvAO10/Ud6okYh24yI/AAAAAAAAYrg/fRr-tnaqxBI/s1920-w1920-h1080-c/DSC_9645-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_X7A8818-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-bCmJvz5jD9s/U_yj0wk6KLI/AAAAAAAB-7s/t7dIu3T7nvw/s1920-w1920-h1080-c/_X7A8818-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/FI4C6008.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Pg1HXtyXBZ0/UGHWhKaSrhI/AAAAAAAASZE/q3omNbvxCJU/s1920-w1920-h1080-c/FI4C6008.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/10-13-12highres.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-boXHwu7eW_g/UjjGBMhSzwI/AAAAAAAANJE/9w555NqrJws/s1920-w1920-h1080-c/10-13-12highres.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/P1080441.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-gKcKe_o5slw/RapYX1Oyx0I/AAAAAAAAa9Q/P9rYqEPs7dc/s1920-w1920-h1080-c/P1080441.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Seal_Rocks-centered.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-PtAU0On5OII/Tr8FOZ3yVuI/AAAAAAAAGY4/IYyAYzHZzo0/s1920-w1920-h1080-c/Seal_Rocks-centered.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3144-3.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-129Q91osfKU/UKsTjV0_Q0I/AAAAAAACKD0/ejMXCx6_w14/s1920-w1920-h1080-c/IMG_3144-3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_X7A5208-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-7wj7ipdaCbI/U_yj0qysNgI/AAAAAAAB-7k/dl8d2M4N5vE/s1920-w1920-h1080-c/_X7A5208-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Red+by+Alistair+Nicol.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-vK7sTdwps8g/UKPHFTynz-I/AAAAAAAARas/_RETAXGVU9g/s1920-w1920-h1080-c/Red%2Bby%2BAlistair%2BNicol.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Silver+Lake+StarTrails.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-rQ9SZ0dfJ_I/UtTzyqBufcI/AAAAAAAAOj4/zAOnrvu9aG8/s1920-w1920-h1080-c/Silver%2BLake%2BStarTrails.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP7962.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-fOXNAoVsl2E/UONnO-Zp2zI/AAAAAAAAyPo/kjEzrMZXylk/s1920-w1920-h1080-c/IMGP7962.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untitled-19.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-q2yAJwhwIic/Th0QR-JaxiI/AAAAAAAABCo/YIGFyyYRXBI/s1920-w1920-h1080-c/untitled-19.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/080229-4653-GraytonStream.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-cjUv9eE6oRE/Tg1dXWtEjRI/AAAAAAAAc1E/ScCXWwu6HbM/s1920-w1920-h1080-c/080229-4653-GraytonStream.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6902-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-x838dk0Z5UE/UaXxyeQ21gI/AAAAAAAAm-o/7OSZeQrHSO0/s1920-w1920-h1080-c/DSC_6902-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Lupines.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-oWXc6hihoxM/UAQ2flp_ioI/AAAAAAAAgLE/wL2UgiGSdRk/s1920-w1920-h1080-c/Lupines.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/BayBridgeSunrise-LE.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-k1-SvxtkRaI/TzW2PE5LU_I/AAAAAAAA14A/JuGDMoDvbCQ/s1920-w1920-h1080-c/BayBridgeSunrise-LE.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Iceland.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-fJVeA8ZcZSU/UAbPQdXxfbI/AAAAAAAAgLI/tIVVrrPINVs/s1920-w1920-h1080-c/Iceland.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/the+trane+and+the+pharoah.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-B4s7SDef3U8/TwttGH3PVKI/AAAAAAAAR8k/Gp5uWnBs4JE/s1920-w1920-h1080-c/the%2Btrane%2Band%2Bthe%2Bpharoah.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6930-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-F44_mY6bA2c/UaiW3nWnsrI/AAAAAAAAWKk/pVPuQcy_ygQ/s1920-w1920-h1080-c/DSC_6930-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Funston-Sunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-hs9pldJQseQ/Tw9Z3Mea0PI/AAAAAAABFTs/u8KBBQQ9At4/s1920-w1920-h1080-c/Funston-Sunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP0913.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-ouB3hbNdnVY/Tzlw8hO_W7I/AAAAAAAAAVQ/GNAVkaDa0lw/s1920-w1920-h1080-c/IMGP0913.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP5017.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-YiCUO9G6Vfg/ULgv8pQPeGI/AAAAAAAAD-k/NGhYvPuu5bc/s1920-w1920-h1080-c/IMGP5017.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061228-2049-UTPScripps1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-JkxqJu_ZG6I/Tg1b6ZErN-I/AAAAAAAAAJk/sD_vHpTz-hU/s1920-w1920-h1080-c/061228-2049-UTPScripps1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071010-3287-SausMorn1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-o11hGOKretw/Tg1cW-5ZUOI/AAAAAAAAAKQ/bz8-ylAE0_A/s1920-w1920-h1080-c/071010-3287-SausMorn1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+New+York+-+Inception.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-uw6YFcXJKbo/U0MgUuctfgI/AAAAAAAJEXg/rLxRH7N4ths/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BNew%2BYork%2B-%2BInception.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/LandsEnd-Sunset.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-lEy_31bnK1A/TyYVYFaoUxI/AAAAAAAAPxc/_4v9O3EKy6c/s1920-w1920-h1080-c/LandsEnd-Sunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Spires-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-MjADvnIjxV0/U0MdmA5ytOI/AAAAAAAJKn4/0ZUjaXODMKA/s1920-w1920-h1080-c/The%2BSpires-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/32+Hours++Counting.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-xbmT1vIDvZc/UZURZTZzmhI/AAAAAAAAgSo/f1msNjQ2YSw/s1920-w1920-h1080-c/32%2BHours%2B%2526%2BCounting.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_2018-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-IPbUv2dc9E4/Ugotamqb0xI/AAAAAAAAbME/zTVKgdkCdRY/s1920-w1920-h1080-c/DSC_2018-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MSU_9976.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-tFk1NsophJc/UqWc4p6NF9I/AAAAAAAAHws/4zvvKSi-qRk/s1920-w1920-h1080-c/MSU_9976.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Reef-mono.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-5-bmm_yEw8Q/ToaN8JLAR1I/AAAAAAABC7I/eMpXTtyj67Y/s1920-w1920-h1080-c/Reef-mono.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Dreams.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-wWAxuHAMqWo/UZURZU59sUI/AAAAAAAAPOY/bxIdsdlg4DE/s1920-w1920-h1080-c/Dreams.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2705.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-D-a8TeEMxVU/T0u5OcN_KcI/AAAAAAAAQ3A/buaoFgy2i-Y/s1920-w1920-h1080-c/IMG_2705.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SutroSunset-WaterfallRock.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-F3PyWBuTa9A/Txo6n6KVzRI/AAAAAAABFQ4/bhv0lJobcUE/s1920-w1920-h1080-c/SutroSunset-WaterfallRock.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/060820-0818-ThePhotogs.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-m6gJXedR5K0/Tg1bJIJrdDI/AAAAAAAAAIk/luzGf-NHcC0/s1920-w1920-h1080-c/060820-0818-ThePhotogs.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Portofino2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-F33Ezsq01cw/TgkRlUvin5I/AAAAAAAI6wA/g434OYIBJiA/s1920-w1920-h1080-c/Portofino2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/110521-8046-PacificaLt2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-QOLm5NyrBAg/Tg1hGjt7CQI/AAAAAAAAc2A/oW-ErAUPpKY/s1920-w1920-h1080-c/110521-8046-PacificaLt2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_DX_3511_2_3_4_5_32bit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-QVbxD_ZZCa0/U_yjxBJn4WI/AAAAAAAB-6k/fAnDqFKCfh4/s1920-w1920-h1080-c/_DX_3511_2_3_4_5_32bit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/C21T0880.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uNim7D5ywdM/UqTGRcbr78I/AAAAAAAAXKY/2Fv7yLI2kZc/s1920-w1920-h1080-c/C21T0880.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Pescadero.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-FNrstx8M7hY/TyH51o60WuI/AAAAAAAAGTY/3nRvYRuPjEU/s1920-w1920-h1080-c/Pescadero.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Temple+Over+Kyoto.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-I7qT8fiUqZU/TgkSotvmFkI/AAAAAAAI6h0/ASyt4FPWAso/s1920-w1920-h1080-c/Temple%2BOver%2BKyoto.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_4154b.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-7FTPwrBoDBs/Ufb1a1gM-UI/AAAAAAAADK0/NrOPNAfCG7I/s1920-w1920-h1080-c/DSC_4154b.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0663-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-JLMulqzQsQQ/UqBrOg83JWI/AAAAAAAAgsY/vzUeMdvC-h0/s1920-w1920-h1080-c/DSC_0663-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB_130628_MCu_1-2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-IevMmNQigxY/Uc3F-z0I5qI/AAAAAAAAItw/eRKlk6yr6TY/s1920-w1920-h1080-c/GGB_130628_MCu_1-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090810-1930-NeedleAndHaystack.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-SUKN-r5lw5A/Tg1fNM6yIEI/AAAAAAAAAN8/PULlaJpHBkI/s1920-w1920-h1080-c/090810-1930-NeedleAndHaystack.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/2012.+purple+is+my+favorite+color.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-vtVHPLJKT3w/T9KLSzUhuOI/AAAAAAAABiY/3a5M4phhFs0/s1920-w1920-h1080-c/2012.%2Bpurple%2Bis%2Bmy%2Bfavorite%2Bcolor.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SealRocks-sunset-reflection.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-55UeILqE2s0/T0PDELei3HI/AAAAAAABFbU/4_nqVtef2m8/s1920-w1920-h1080-c/SealRocks-sunset-reflection.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/New+York+-+NEX7+-+Trey+Ratcliff+(8+of+21).png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-XxP1oir93Fg/U0MW6gL3miI/AAAAAAAJA0U/hP0D1e9JC-w/s1920-w1920-h1080-c/New%2BYork%2B-%2BNEX7%2B-%2BTrey%2BRatcliff%2B%25288%2Bof%2B21%2529.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Patience.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Gp7BKH79U6k/T_rPHeEUv4I/AAAAAAAAPL8/LSoFOwB9QNU/s1920-w1920-h1080-c/Patience.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP8828.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-RZKOyMbLobw/UONnVGAE9tI/AAAAAAAAyPM/60as7LUVuHI/s1920-w1920-h1080-c/IMGP8828.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/5-01-13-spider-crawler-lightning-road-albany-tx.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-oYOr7AcS0F4/UZUYFMNixiI/AAAAAAAAGL0/6fp4ZSWjH90/s1920-w1920-h1080-c/5-01-13-spider-crawler-lightning-road-albany-tx.png\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Blue+City.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-4wJlrgKnUsI/U0MZbQCL-5I/AAAAAAAJOwE/yL0yy2OMWtI/s1920-w1920-h1080-c/The%2BBlue%2BCity.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/06152012-12.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-_OVIBu35BFs/UOD9ybxkzmI/AAAAAAAAkNo/YyQXlMNgeEk/s1920-w1920-h1080-c/06152012-12.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/D30_0895.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-onm54VnIRFQ/SBnwVTP3Y4I/AAAAAAAAvJc/jJxlxmTu5t8/s1920-w1920-h1080-c/D30_0895.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Metal-1.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-TKsDKeRS95U/Tkrw6TiAyPI/AAAAAAAC4HY/bygELaJa5-s/s1920-w1920-h1080-c/Metal-1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0300.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-b_ZyO6A8eec/UNcwXdvdtMI/AAAAAAAAR4k/YcThGSa1EHE/s1920-w1920-h1080-c/DSC_0300.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6868.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Mc32ZHV--b0/SwIy9sStc0I/AAAAAAABLXg/AB-YvtyK-wk/s1920-w1920-h1080-c/DSC_6868.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/class3_05.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-EUrlRFim4uQ/Uo5D2fBJduI/AAAAAAAABZU/73PLVw3Xxk0/s1920-w1920-h1080-c/class3_05.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MarshalBeach-sunset-rocks-.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-_SFDsIPPKzI/TxhNwgko__I/AAAAAAABFhY/uz_fTrjtNFg/s1920-w1920-h1080-c/MarshalBeach-sunset-rocks-.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_O9V5569_HDR.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-WrzPVL3SMFs/Uq-D3XLVHUI/AAAAAAAAPBY/JQpQw38ggyM/s1920-w1920-h1080-c/_O9V5569_HDR.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-road-to-mountain-forever.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-n8kCRwIAl3I/U0MlTxDHALI/AAAAAAAJEL0/VwbBzYmP0nQ/s1920-w1920-h1080-c/trey-ratcliff-road-to-mountain-forever.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RodeoBeach-sunset-16x9.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-grccgI_cL8k/TwH0-_dHIvI/AAAAAAABFbM/sqNxtA-Gi30/s1920-w1920-h1080-c/RodeoBeach-sunset-16x9.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Sky+Painting.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-XZGw1LIoIQk/Ua2ANshiwmI/AAAAAAAAfX8/PIcgUJRHb3M/s1280-w1280-c-h720-k-no/Sky%2BPainting\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0816-Edit-Edit-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-dKrL8_a8MmE/UrWktdbZX_I/AAAAAAAAilY/2Ce0qzN9r3s/s1920-w1920-h1080-c/DSC_0816-Edit-Edit-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1204.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-NvzWYFZm9b0/UQmFrRIGaDI/AAAAAAAAlew/em5aqVHnV3M/s1920-w1920-h1080-c/IMG_1204.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_MSU8463.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-9SBIVQE_N98/UnDyKXBM-VI/AAAAAAAAGw8/JRqWBIObFek/s1920-w1920-h1080-c/_MSU8463.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_4067.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-oVqvzpNBaE8/UlmYCAD6pNI/AAAAAAAAQPQ/xDn8iGotkyo/s1920-w1920-h1080-c/DSC_4067.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_D3_0763-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-SzwsBTne5SM/U_yjvpyvA6I/AAAAAAAB-6A/q0imuvbf0Yw/s1920-w1920-h1080-c/_D3_0763-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_4772+p4.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uXesNMoRpN8/U08k4CCBTsI/AAAAAAAAvr0/7ZtIaGpNfHU/s1920-w1920-h1080-c/IMG_4772%2Bp4.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SutroSunset-rocks-misty.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-sSh1MI_KB_c/TwXF_f9Tr4I/AAAAAAAAL-g/ivbuKnmkfLI/s1920-w1920-h1080-c/SutroSunset-rocks-misty.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/the+docs.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-djAiXa_L7EU/TgtZGJZPcFI/AAAAAAAJBA0/Ih2FgNUBZYE/s1920-w1920-h1080-c/the%2Bdocs.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/AtAnchor.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-25-BIcSpaLU/UX-tEB0seYI/AAAAAAAAU2Y/SX0W4AL4YQM/s1920-w1920-h1080-c/AtAnchor.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/A+Razor+to+the+Sky.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-WUT3n130gGw/U0MR8lh-SbI/AAAAAAAIpgw/VO52olLVJN8/s1920-w1920-h1080-c/A%2BRazor%2Bto%2Bthe%2BSky.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/4070581709_a1c668a779_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/--ETG9eU1_Xw/Tgt5l8cyMwI/AAAAAAAIWTg/nWSbj2O5c6w/s1920-w1920-h1080-c/4070581709_a1c668a779_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6165.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-PAZT1pXjMM8/UrM5S_Ht1cI/AAAAAAAACVE/adGv8TflzYc/s1920-w1920-h1080-c/IMG_6165.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/CliffHouseSunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-aIBq7YhM6-M/TxMQytFssDI/AAAAAAAANXs/9RurRnKmOOw/s1920-w1920-h1080-c/CliffHouseSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01034.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/--Km5pB3lBaM/Ua3DdDBGtcI/AAAAAAAAPV4/p_BFy_Ps50w/s2560/DSC01034\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Big-Sur-Coastal-Seascape-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-LVkYomDgo1g/TwoREmpuoLI/AAAAAAAAMiE/duaVKfg5Blg/s1920-w1920-h1080-c/Big-Sur-Coastal-Seascape-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100804-4696-PololuMorn1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-hXPVBw1iPyc/Tg1gUs9WABI/AAAAAAAAAPU/J-g25o_00Gk/s1920-w1920-h1080-c/100804-4696-PololuMorn1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_1600.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GwSLzDzfyGA/UWoqCg-pk2I/AAAAAAAAMh0/JeyhZ3UqFys/s1920-w1920-h1080-c/MOL_1600.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP0652_3_4_tonemapped.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Sm0TD1_vzFo/ULrHwJOPf3I/AAAAAAAAEMY/NGUYdwUEtGY/s1920-w1920-h1080-c/IMGP0652_3_4_tonemapped.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/CGPier-storm-mono.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-gE1QbuQR45Q/TqiD0bdOG7I/AAAAAAAAE8w/fawdaKhXGu4/s1920-w1920-h1080-c/CGPier-storm-mono.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Night+Falls+on+Crater+Lake+-+Crater+Lake,+OR1.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-8h4vm06cRYo/UZURZQG4KwI/AAAAAAAAPOE/GltqdZojKKE/s1920-w1920-h1080-c/Night%2BFalls%2Bon%2BCrater%2BLake%2B-%2BCrater%2BLake%252C%2BOR1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0213.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uaGTbkMBysI/R7qYVHTGv6I/AAAAAAAABiQ/IU0yK7OgvYc/s1920-w1920-h1080-c/IMG_0213.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP1985_stitch.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-14sNcCfmulY/UOj-YBSQ8oI/AAAAAAAALsk/v-C7ZmZ-UIk/s1920-w1920-h1080-c/IMGP1985_stitch.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Reflection.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-qd290nJU0FM/UZYXTBbrzeI/AAAAAAAAVhI/gNH2tEzLT80/s1920-w1920-h1080-c/Reflection.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ibiza+dock.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-QyxGZeaBON4/TgtZEYemvZI/AAAAAAAAgVE/_VepyvNFiTE/s1920-w1920-h1080-c/ibiza%2Bdock.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trippin'-3.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-b4ZiJXUmZLg/TUCPhc_z2pI/AAAAAAAAAgM/uY37UMRjGsw/s1920-w1920-h1080-c/Trippin%2527-3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1612.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-2A31P4WBC8s/UtT1BndamcI/AAAAAAAAO1E/Qj5CF7S1UeU/s1920-w1920-h1080-c/DSC_1612.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/YosemiteFalls.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-1dANL8dJDT0/T6h0JShpn-I/AAAAAAAAIDk/l_dKhWvFXUs/s1920-w1920-h1080-c/YosemiteFalls.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/07_20090416.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-8kQQYYzz_l8/UZSathUsJGI/AAAAAAAAsUM/3Z4WK9CG8wE/s1920-w1920-h1080-c/07_20090416.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_7222-Edit-2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-yYJUfqBHHXw/UoffDIFgJOI/AAAAAAAARpQ/M7Nskp7pTDg/s1920-w1920-h1080-c/DSC_7222-Edit-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_9581.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-gcU_icksx-A/TnuyXEh2MeI/AAAAAAAAFhE/sjZHDkU_Vlg/s1920-w1920-h1080-c/IMG_9581.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20100525-IMG_6788-HDR-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/--y_TRuOOPTA/T_0KxukaPeI/AAAAAAAARw0/VTeenM1J2xI/s1920-w1920-h1080-c/20100525-IMG_6788-HDR-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MagicBallContest.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-6nBwDVfR-BE/UXrL2u6iqII/AAAAAAAAUro/CL47d2nXDzE/s1920-w1920-h1080-c/MagicBallContest.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3857-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-eDbulGr2hu8/Ur0CIxLk-FI/AAAAAAAAGA4/R7oAYMeXRws/s1920-w1920-h1080-c/IMG_3857-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP9268.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-K258GmbSDxM/T_TBV0i4kLI/AAAAAAAABro/rW_nlHdct7U/s1920-w1920-h1080-c/IMGP9268.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Hooded+Lady+of+the+Valley.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-31H2j9KKMi0/UTpeMK5JrEI/AAAAAAAAPHo/4QOl-12J750/s1920-w1920-h1080-c/Hooded%2BLady%2Bof%2Bthe%2BValley.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_MG_4776.CR2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-MxVUPW7j-L0/UCFpW985f5I/AAAAAAAAJI8/HQfELZDoN7I/s1920-w1920-h1080-c/_MG_4776.CR2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untitled-3-2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-1cz2zcbiz-4/Th0QVgyAMBI/AAAAAAAABC4/gVc-Bp_mFGs/s1920-w1920-h1080-c/untitled-3-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/sky_leaves.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-1o-jUyycpcE/UIdjwEWDS3I/AAAAAAAAED4/7Mj-xSqdO5E/s1920-w1920-h1080-c/sky_leaves.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TunnelViewWinter.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GGVPhdUiKwY/UOOZDe9JFQI/AAAAAAAAKiY/Noq6gsZlXxk/s1920-w1920-h1080-c/TunnelViewWinter.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3674678524_f49854f3b1_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ZGfUihferj8/TgtZGKAJjOI/AAAAAAAAdd8/e-EXjm51hhA/s1920-w1920-h1080-c/3674678524_f49854f3b1_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/I+Cover+the+Waterfront+-+Alki+Beach,+WA.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Zj8Aex6oXYo/UW6x5FfAtjI/AAAAAAAANiY/lukbqNiI2go/s1920-w1920-h1080-c/I%2BCover%2Bthe%2BWaterfront%2B-%2BAlki%2BBeach%252C%2BWA.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/morning+with+coffee+in+yellowstone.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-HdhuOcwGEcs/TgtZEZtITGI/AAAAAAAAVmw/nPx5UAR0qic/s1920-w1920-h1080-c/morning%2Bwith%2Bcoffee%2Bin%2Byellowstone.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Bristlecone_Stars.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-xu-TTAEZtQo/UbtDr65unqI/AAAAAAAABKo/-2asqRlMolw/s1920-w1920-h1080-c/Bristlecone_Stars.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/StillStanding.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Bz1rXnbAy1s/UQNThZKgMRI/AAAAAAAAScM/eUItE7glPn0/s1920-w1920-h1080-c/StillStanding.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Salt_Point.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-FDe6_2rxtEs/UkBgjq9ZJmI/AAAAAAAAELo/zT29ZhT2NAA/s1920-w1920-h1080-c/Salt_Point.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untouched.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-KPCupfttZeg/UYEMyuiN84I/AAAAAAAAU5k/74L4iR6gMDk/s1920-w1920-h1080-c/untouched.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TacomaChiluly--10.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/--LqjPK05as8/TsSfH1cu69I/AAAAAAAATUE/JyMyDxcW1Ms/s1920-w1920-h1080-c/TacomaChiluly--10.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_5165-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-5ntl45J8Lxg/UiHZG2mJ1nI/AAAAAAAAb8s/f10TxWDh2zA/s1920-w1920-h1080-c/DSC_5165-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Group+TWO.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-HbF8zRNZt-o/UMPHYkBuCMI/AAAAAAAAKUQ/GYFSC7-LVqs/s1920-w1920-h1080-c/Group%2BTWO.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/CrackedIsSometimesGood.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-5lm5qxI06OU/TqkYjHdt_lI/AAAAAAAAKOc/Eqb40U2Jsiw/s1920-w1920-h1080-c/CrackedIsSometimesGood.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0472.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ot6zDqm0p1s/UM-oZwFOYBI/AAAAAAAAImc/_9QNnbQXa5Y/s1920-w1920-h1080-c/IMG_0472.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_2167.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-HW1I0DVsq6A/UlmXtm9TvGI/AAAAAAAAQOM/MBQeGBzVB2M/s1920-w1920-h1080-c/MOL_2167.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/T3_IMG_3936.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-r3jKfQruwv4/Uc6B8fRsKmI/AAAAAAAAIAg/VCLgE4EqjtY/s1920-w1920-h1080-c/T3_IMG_3936.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8941Autumn.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-TFEx1ptMuoc/UpN7a9C-YlI/AAAAAAAAKUI/A3KeBF2vSnE/s1920-w1920-h1080-c/8941Autumn.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6682.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-l9peRQpmVRQ/T54s3ZTfGBI/AAAAAAAAJQk/-_8lDImWzwE/s1920-w1920-h1080-c/IMG_6682.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_5908.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-nFgpOv4T3M0/TWLTD6xOiJI/AAAAAAAAPFs/PSfnLjBIrVU/s1920-w1920-h1080-c/IMG_5908.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0935.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-acdH1dPsUdk/ToQNXK7HgDI/AAAAAAAATyM/95rFxKIy_Dw/s1920-w1920-h1080-c/IMG_0935.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/11-17-12-India+Trip-Kanheri+Caves+(JPEGs)-20.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-ko4QbKawOzs/UMrlGpBHGtI/AAAAAAAAMbA/TVYDrsxchf4/s1920-w1920-h1080-c/11-17-12-India%2BTrip-Kanheri%2BCaves%2B%2528JPEGs%2529-20.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_MSU3203.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-E5h_DjLkO9g/UJGAP4Q_1jI/AAAAAAAABI0/xb_a1wwuddA/s1920-w1920-h1080-c/_MSU3203.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_5328.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-3vJ7YydpvVU/T3Fad0DfOvI/AAAAAAAAIIg/rJ5piFMcgKg/s1920-w1920-h1080-c/IMG_5328.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_5974.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-qwOaqE4cYCg/Ur0CAf2nO5I/AAAAAAAAF-I/b2vYQp-TxW4/s1920-w1920-h1080-c/IMG_5974.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_1755.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-nVpMVoplcjA/UlmXtr57GiI/AAAAAAAAQOo/YPNo51GXyLU/s1920-w1920-h1080-c/MOL_1755.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2828.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-RM253k65h0g/RuWXqF2PN3I/AAAAAAAAASw/bWQAJ47AvxQ/s1920-w1920-h1080-c/IMG_2828.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_T3_0788.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-JhsS5Efemfw/UAUNCf1J1aI/AAAAAAAACno/1178JtnVPVQ/s1920-w1920-h1080-c/IMG_T3_0788.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0471-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-IOB7UYjdfKk/UWxRNQruJpI/AAAAAAAAqYo/ZYOTEFEaUUQ/s1920-w1920-h1080-c/DSC_0471-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_8176.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-97kOELXyRw0/UpKzpdSGLsI/AAAAAAAACU8/t7toymdF9ys/s1920-w1920-h1080-c/IMG_8176.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSCF0155-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-v5W9oXSutcs/UjX_nq7Q1DI/AAAAAAAAPVE/A201XC4J5qs/s1920-w1920-h1080-c/DSCF0155-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1017.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-OvptEVwUDuA/UE_P875OPoI/AAAAAAAAPWM/ocqkejUt5AQ/s1920-w1920-h1080-c/IMG_1017.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_4701.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-SCc_19Vl5Ng/SuoniirQlZI/AAAAAAAAGOo/UsRZ0o6GJeI/s1920-w1920-h1080-c/IMG_4701.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6000.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-GMJoozxAcgE/Tk7h8aldhrI/AAAAAAAAFZ8/SnFiv5CZcYE/s1920-w1920-h1080-c/IMG_6000.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/austin+2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-G4bChH6K3mY/ULdpTli69GI/AAAAAAAAJIg/cfku63jtnY4/s1920-w1920-h1080-c/austin%2B2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2526-3b.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-11t9DgvNYhY/UG3HjpR9T9I/AAAAAAAAIO4/FSkNbPYzUMA/s1920-w1920-h1080-c/IMG_2526-3b.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6451.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-YtE41zDzZZM/UBCa4Ui2cuI/AAAAAAAAOMg/Uzs03aPfWak/s1920-w1920-h1080-c/IMG_6451.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_4369+-+Large.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-mPicgJz8Yes/USOzc3Ki2TI/AAAAAAAADVA/QzQqtctMISI/s1920-w1920-h1080-c/IMG_4369%2B-%2BLarge.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0109.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-1n2blvh-lkQ/TX_WqEAkKAI/AAAAAAAAAI4/xlaLPLcp6nI/s1920-w1920-h1080-c/DSC_0109.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20120128-20120128-ENS_3119_20_21_tonemapped-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-HBDE39Hgv9M/TyXGMvNUzjI/AAAAAAAAA_A/nBMmnHMcT0o/s1920-w1920-h1080-c/20120128-20120128-ENS_3119_20_21_tonemapped-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6499.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-iTxENBfrZfY/T5ZLrTvoeCI/AAAAAAAAJD8/ik0c31ZcTOw/s1920-w1920-h1080-c/IMG_6499.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MorningGlory.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-8K8X3n7zPKE/UOOZGSlNvjI/AAAAAAAAKig/yTCbEVh-lCw/s1920-w1920-h1080-c/MorningGlory.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1984.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-MXAy1Q1e8pw/TtPRnPCM4AI/AAAAAAAAQc0/Vvc74HYL35s/s1920-w1920-h1080-c/IMG_1984.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_1841.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-LQXZpNUUdw8/UWoqJONj7-I/AAAAAAAAMh0/7m100XOFcEo/s1920-w1920-h1080-c/MOL_1841.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/9082667654_c7919ec6ed_o.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-iVr5r1Yycbs/UkPSMp_2CZI/AAAAAAAALrA/ME5aBtr5fdM/s1920-w1920-h1080-c/9082667654_c7919ec6ed_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Wyoming-5.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-jwJEWGscrls/T-dsvGIbyRI/AAAAAAAABp4/Pgn_t5V2LNs/s1920-w1920-h1080-c/Wyoming-5.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_8981.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-FeRCoqwVOB4/Tkgq-geJE3I/AAAAAAAAFYo/xdj-91ytvg8/s1920-w1920-h1080-c/IMG_8981.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/04_20080526.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ENSOsH-5iPQ/UZSar_1xTLI/AAAAAAAAsTo/CjPKgR3jXAs/s1920-w1920-h1080-c/04_20080526.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0432.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-jmMSVP61kaQ/TqtX5OPLfZI/AAAAAAAAFkk/8dE_CxpTiHM/s1920-w1920-h1080-c/IMG_0432.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/tah+prohm+ruins.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-N-jkCCpnvmM/Tg0t85f5-dI/AAAAAAAABj8/otdYcgGq4ZU/s1920-w1920-h1080-c/tah%2Bprohm%2Bruins.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0642.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Lk6txIIotmM/ToZuJ99slYI/AAAAAAAAQIg/y0jvaiYTIHA/s1920-w1920-h1080-c/IMG_0642.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MC2_8779.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-QpB1YMuAXEA/TikI95S2KmI/AAAAAAAAPSw/kJPeHft92m4/s1920-w1920-h1080-c/MC2_8779.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0366.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-E57LJIzkkd8/UM-oHjiKHJI/AAAAAAAAIjY/QKAP7QTXBNY/s1920-w1920-h1080-c/IMG_0366.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_1818.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/--qL9ddvO4gs/UWoqHffdewI/AAAAAAAAMh0/uf5mp_xqsHI/s1920-w1920-h1080-c/MOL_1818.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3027.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Xdz2ceNVzdw/Tm5L7A9tdYI/AAAAAAAAFsg/k4Tjwbi73Cw/s1920-w1920-h1080-c/IMG_3027.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0242.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ejLi6Bg7IUI/TonR_AZLYLI/AAAAAAAAQWk/A1bVgL3p2A4/s1920-w1920-h1080-c/IMG_0242.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0423-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-iNpCGNJTrRo/Ugbk1ZMLczI/AAAAAAAAOE0/FZWVWqXGdT8/s1920-w1920-h1080-c/DSC_0423-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/WahclelaFalls.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-q9gWC1ZIAvg/UbZrg9lIcAI/AAAAAAAAL4I/xzSlyLfAGrQ/s1920-w1920-h1080-c/WahclelaFalls.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_9166.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-CaqC7SHp_2w/SF8sHokHjwI/AAAAAAAACyw/gC4j26zZen8/s1920-w1920-h1080-c/DSC_9166.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_7449.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Bo0_R3Hshio/UOUefGb4bpI/AAAAAAAARno/EBZGWRhWwzk/s1920-w1920-h1080-c/IMG_7449.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/path_of_leaves.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-y9mHkm6F9NI/UJH6oUvIN3I/AAAAAAAADqU/ueLAmjtceMI/s1920-w1920-h1080-c/path_of_leaves.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/700_1905.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-nEEPZA887gc/SRGbDPl6jgI/AAAAAAAADOc/LH5WYu-Vc1k/s1920-w1920-h1080-c/700_1905.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_2079-1.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ps4uT_pEdCE/RpKjlC16MuI/AAAAAAAAAt0/n09gNExGMl0/s1920-w1920-h1080-c/DSC_2079-1.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MWF_6457-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-M6BRAUZHPyo/UfbbKobVOKI/AAAAAAAAK_M/4WIHtFv7Idk/s1920-w1920-h1080-c/MWF_6457-2.jpg\"]}]}}","module.exports = {\"background-patterns\":{\"image\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/01.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern1.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern2.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern3.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern4.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern5.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern6.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern7.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-1667135_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-2069198_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-2425614_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-2790359_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-2863542_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-3288642_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-geometric-pattern-background_1319-242.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/animals-16908_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/autumn-1801896_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/backdrop-3346304_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/background-1141891_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/background-1141892_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/basket-2023197_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begflo41.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begflo45.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begflo55.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begflo63.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begtkan01.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begtkan20.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begtkan56.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo02.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo102.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo106.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo135.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo33.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo75.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo76.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo80.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan11.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan15.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan17.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan21.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan30.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan33.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan46.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan48.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan50.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan56.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/blue-1545368_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/blue-3368023_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/braiding-2697075_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cactus-2191647_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cactus-3324067_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cactus-3334141_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/camouflage-145980_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/camouflage-33708_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor05.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor125.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor126.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor129.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor131.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor139.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor15.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor41.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor44.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/christmas-1091551_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/circle-2696910_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/circles-1005197_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/circles-1005321_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cube-402231_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cute-3047767_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/decor-763806_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/decorative-1781458_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/design-3289984_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/diamonds-1524471_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/dreamcatcher-3334128_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/floral-1299131_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/floral-1788412_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/floral-4655084_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/floral-pattern-1603073_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/foil02.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/foil09.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/foil10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/foil14.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/galk06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/galk07.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/galk09.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/geluzor81.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/geluzor82.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/geluzor84.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/geometric-patterns-1978688_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/goltum10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/gothic-756211_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/green-753533_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/green-763804_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart05.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart32.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart33.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart34.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart39.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart41.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart51.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart53.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/hexagon-1312786_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-1bjZ4CEqGLSGiWI.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-3PniNaR4EM.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-6oQV3ly2I1vFY5Je.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-9fPsO9xLXxzONha.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-AJ5CKq0awy4d9EF.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-Elrl20LiRFHXr.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-Fu9UMDonFXB4mIqU.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-HxkaMXBjzP.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-UwawezoPZ9I.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-VFpI9G4V62V.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-VcTxveu7iXkz.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-ka9dtT7zZFsY.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-nJw0PAz0l03dSZY.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-ybmMVJ4cYA.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-z9Xwv2KKSbgW2b.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga16.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga17.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga25.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga31.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga32.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga37.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/kortkan03.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/kortkan06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/kortkan07.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/lilflow110.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/lilflow24.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/lilflow82.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/lilflow84.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/magnolia-732331_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/meha10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/meha18.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/meha23.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/mesh-2697072_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic18.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic28.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic59.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic82.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic83.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic87.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic88.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/mosaic-2790339_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/music57.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/music58.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-1008150_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-3289978_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-403769_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-5415668_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-728509_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/purple-755266_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/purple-756209_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rail-2721626_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast02.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast11.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast22.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast38.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast43.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast46.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast48.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast59.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast60.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast68.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast69.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast79.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast83.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/roses-5095521_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/roses-5100472_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor12.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor26.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor27.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor35.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor67.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sand89.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-1320742_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-1781493_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-1837442_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-3289975_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1085294_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1085297_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1086306_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1086309_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1086311_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1089796_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1089797_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1822610_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-5095737_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-757848_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sersv01.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sersv32.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seruzor06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seruzor47.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sinkrasuz10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sinkrasuz101.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sinkrasuz37.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star-2721633_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star02.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star41.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star48.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star49.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/stars-1005267_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/tile-1892631_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/tree-5970709_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/tree-5970776_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/triangle-753534_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/vector-1603109_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/violet10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/wave-2697053_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/wave-2721632_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/white-2484120_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/white-abstract-background_23-2148806274.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/white-abstract-background_23-2148810246.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/white-abstract-background_23-2148810353.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/zolot31.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/zolot47.png\"]}}","var map = {\n\t\"./attention/attention.mp3\": 17533\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 10253;","var map = {\n\t\"./marching-band-dave-girtsman/marching-band-dave-girtsman.mp3\": 65705\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 81089;","var map = {\n\t\"./beep_positive/beep_positive.mp3\": 66391,\n\t\"./beep_up/beep_up.mp3\": 51922,\n\t\"./bleep/bleep.mp3\": 83113,\n\t\"./cellular_click/cellular_click.mp3\": 70180,\n\t\"./computer_chime/computer_chime.mp3\": 14528,\n\t\"./ether/ether.mp3\": 86123,\n\t\"./good_chime/good_chime.mp3\": 11691,\n\t\"./mono_u/mono_u.mp3\": 63414,\n\t\"./pixel_beep/pixel_beep.mp3\": 66488,\n\t\"./plop/plop.mp3\": 88711,\n\t\"./pop/pop.mp3\": 730,\n\t\"./retro_game/retro_game.mp3\": 76496,\n\t\"./tiny_noize/tiny_noize.mp3\": 28288\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 60255;","var map = {\n\t\"./future-synth/future-synth.mp3\": 66849,\n\t\"./marching-band-dave-girtsman/marching-band-dave-girtsman.mp3\": 36445,\n\t\"./retro-chiptune/retro-chiptune.mp3\": 15737\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 90683;","var map = {\n\t\"./_auth_request/_auth_request.mp3\": 48710,\n\t\"./_call_connecting/_call_connecting.mp3\": 2301,\n\t\"./_phone_busy/_phone_busy.mp3\": 33246\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 60623;","var constants = {\n\n    ASSETS_URL_PREFIX: './',\n    STORAGE_NAME: 'xabber-storage',\n    STORAGE_VERSION: 'v8',\n\n    CONTAINER_ELEMENT: \"#xabber-container\",\n\n    FAVICON_DEFAULT: \"assets/images/favicon.png\",\n    FAVICON_DEFAULT_GREY: \"assets/images/favicon-grey.png\",\n    FAVICON_MESSAGE: \"assets/images/favicon-message.png\",\n    BACKGROUND_IMAGE: \"assets/images/background.png\",\n\n    WIDTH_MEDIUM: 1650,\n    WIDTH_NARROW: 1280,\n    WIDTH_TINY: 1152,\n\n    LOG_LEVEL_NONE: -1,\n    LOG_LEVEL_ERROR: 1,\n    LOG_LEVEL_WARN: 2,\n    LOG_LEVEL_INFO: 3,\n    LOG_LEVEL_DEBUG: 4,\n\n    LOG_LEVEL: 'ERROR',\n\n    KEY_BACKSPACE: 8,\n    KEY_TAB: 9,\n    KEY_ENTER: 13,\n    KEY_SHIFT: 16,\n    KEY_CTRL: 17,\n    KEY_ESCAPE: 27,\n    KEY_SPACE: 32,\n    KEY_ARROW_LEFT: 37,\n    KEY_ARROW_UP: 38,\n    KEY_ARROW_RIGHT: 39,\n    KEY_ARROW_DOWN: 40,\n    KEY_DELETE: 46,\n    KEY_FORWARD_SLASH: 47,\n    KEY_AT: 50,\n\n    VOICE_MSG_TIME: 120,\n\n    PASSWORD_DOT: String.fromCharCode(0x2022),\n\n    CONNECTION_URL: null,\n\n    CONN_STATUSES: {\n        0: 'ERROR',\n        1: 'CONNECTING',\n        2: 'CONNFAIL',\n        3: 'AUTHENTICATING',\n        4: 'AUTHFAIL',\n        5: 'CONNECTED',\n        6: 'DISCONNECTED',\n        7: 'DISCONNECTING',\n        8: 'ATTACHED',\n        9: 'REDIRECT',\n        10: 'CONNTIMEOUT'\n    },\n\n    PREKEYS_COUNT: 100,\n    MIN_PREKEYS_COUNT: 80,\n\n    AES_KEY_LENGTH: 128,\n    AES_TAG_LENGTH: 128,\n    AES_EXTRACTABLE: true,\n\n    BAD_CONN_STATUSES: [0, 2, 4, 6, 10],\n\n    RECONNECTION_TIMEOUTS: [5000, 10000, 15000],\n    DOWNTIME_RECONNECTION_TIMEOUT: 15,\n    PING_SENDING_INTERVAL: 10,\n\n    IDLING_MINIMAL_TIMEOUT: 10,\n    IDLING_MAXIMUM_TIMEOUT: 90,\n    IDLING_DEFAULT_TIMEOUT: 30,\n\n    STATUS_WEIGHTS: {\n        chat: 1,\n        online: 2,\n        away: 3,\n        xa: 4,\n        dnd: 5,\n        offline: 6,\n        unavailable: 7\n    },\n\n    PRESENT_INTERVAL: 900000,\n    CHATSTATE_INTERVAL_COMPOSING_AUDIO: 5000,\n    CHATSTATE_TIMEOUT_PAUSED: 15000,\n    CHATSTATE_TIMEOUT_STOPPED: 5000,\n    CHATSTATE_TIMEOUT_PAUSED_AUDIO: 10000,\n\n    JINGLE_WAITING_TIME: 60,\n\n    SYNCHRONIZATION_RSM_MAX: 25,\n\n    REGISTRATION_DOMAINS: [],\n    LOGIN_DOMAINS: [],\n    TRUSTED_DOMAINS: [],\n    RECOMMENDED_DOMAIN: '',\n    REGISTRATION_BUTTON: true,\n    REGISTRATION_CUSTOM_DOMAIN: true,\n    LOGIN_CUSTOM_DOMAIN: true,\n\n    TURN_SERVERS_LIST: [\n        {\n            urls: 'turn:numb.viagenie.ca',\n            credential: 'muazkh',\n            username: 'webrtc@live.com'\n        },\n        {\n            urls: \"turn:turn.editcompany.org:5439\",\n            username: \"test\",\n            credential: \"1111\"\n        },\n        {\n            urls: 'turn:192.158.29.39:3478?transport=udp',\n            credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n            username: '28224511:1379330808'\n        },\n        {\n            urls: 'turn:192.158.29.39:3478?transport=tcp',\n            credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n            username: '28224511:1379330808'\n        }\n    ],\n\n    JINGLE_MSG_PROPOSE: 0,\n    JINGLE_MSG_REJECT: 1,\n    JINGLE_MSG_ACCEPT: 2,\n\n    MSG_BLOCKED: -2,\n    MSG_ERROR: -1,\n    MSG_PENDING: 0,\n    MSG_SENT: 1,\n    MSG_DELIVERED: 2,\n    MSG_DISPLAYED: 3,\n    MSG_ARCHIVED: 4,\n    MSG_SAVED: 5,\n\n    RSM_ATTRIBUTES: ['max', 'first', 'last', 'after', 'before', 'index', 'count'],\n    MAM_ATTRIBUTES: ['with', 'start', 'end'],\n\n    GENERAL_GROUP_ID: 1,\n    NON_ROSTER_GROUP_ID: 2,\n\n    MATERIAL_COLORS: [\n        \"red\", \"green\", \"blue\", \"deep-purple\", \"orange\", \"lime\",\n        \"pink\", \"purple\", \"indigo\", \"light-blue\", \"cyan\", \"teal\",\n        \"light-green\", \"amber\", \"deep-orange\", \"brown\", \"blue-grey\"\n    ],\n\n    MAX_AVATAR_FILE_SIZE: 64000,\n\n    AVATAR_PRIORITIES: {\n        VCARD_AVATAR: 0,\n        PUBSUB_AVATAR: 1\n    },\n\n    EMAIL_FOR_JOIN_TRANSLATION: \"info@xabber.com\",\n\n    AVATAR_SIZES: {\n        TOOLBAR_ACCOUNT_ITEM: 32,\n        SETTINGS_ACCOUNT_ITEM: 32,\n        XABBER_ACCOUNT: 32,\n        SYNCHRONIZE_ACCOUNT_ITEM: 36,\n        MENTION_ITEM: 36,\n        ACCOUNT_SETTINGS_LEFT: 96,\n        ACCOUNT_VCARD_EDIT: 80,\n        ROSTER_RIGHT_ACCOUNT_ITEM: 38,\n        ROSTER_LEFT_ACCOUNT_ITEM: 40,\n        PARTICIPANT_DETAILS_ITEM: 48,\n        CONTACT_RIGHT_ITEM: 32,\n        GROUPCHAT_MEMBER_ITEM: 32,\n        CONTACT_LEFT_ITEM: 32,\n        CONTACT_BLOCKED_ITEM: 32,\n        CONTACT_DETAILS: 192,\n        GROUP_SETTINGS: 96,\n        CHAT_ITEM: 40,\n        CHAT_HEAD: 40,\n        CHAT_MESSAGE: 32,\n        CHAT_BOTTOM: 48,\n        XABBER_VOICE_CALL_VIEW: 128,\n        OMEMO_ENABLE_SETTING: 182\n    },\n\n\n    SYNC_WAY_DATA: {\n        no: {\n            tip: 'xabber_account__sync__settings_already_synced',\n            icon: 'mdi-cloud-check'\n        },\n        from_server: {\n            tip: 'xabber_account__sync__settings_will_be_downloaded',\n            icon: 'mdi-cloud-download'\n        },\n        to_server: {\n            tip: 'xabber_account__sync__settings_will_be_uploaded',\n            icon: 'mdi-cloud-upload'\n        },\n        delete: {\n            tip: 'xabber_account__sync__acc_will_be_deleted',\n            icon: 'mdi-delete'\n        },\n        off_local: {\n            tip: 'xabber_account__sync__local_acc',\n            icon: 'mdi-cloud-outline-off'\n        },\n        off_remote: {\n            tip: 'xabber_account__sync__remote_acc',\n            icon: 'mdi-cloud-outline-off'\n        }\n    },\n\n    SYNCED_STATUS_DATA: {\n        off: {\n            tip: 'xabber_account__sync_status__disabled',\n            icon: 'mdi-cloud-outline-off'\n        },\n        yes: {\n            tip: 'xabber_account__sync_status__synced',\n            icon: 'mdi-cloud-check'\n        },\n        no: {\n            tip: 'xabber_account__sync_status__not_synced',\n            icon: 'mdi-cloud'\n        }\n    },\n\n    EMOJI_LIST_NAME: function (emoji_list) {\n        return {\n            \"smiles_and_people\": 'emoji_list__catelory_name__smiles_and_people',\n            \"body_and_clothes\": 'emoji_list__catelory_name__body_and_clothes',\n            \"animals_and_nature\": 'emoji_list__catelory_name__animals_and_nature',\n            \"food_and_drinks\": 'emoji_list__catelory_name__food_and_drinks',\n            \"travel_and_places\": 'emoji_list__catelory_name__travel_and_places',\n            \"events\": 'emoji_list__catelory_name__events',\n            \"objects\": 'emoji_list__catelory_name__objects',\n            \"signs\": 'emoji_list__catelory_name__signs'\n        }[emoji_list]\n    },\n\n    QUOTE_MARKER: '&gt;',\n    MARKUP_TAGS: ['bold', 'underline', 'italic', 'strike', 'link', 'quote'],\n\n    BLANK_VIDEO: {\n        OGG: 'data:video/ogg;base64, ',\n        MP4: 'data:video/mp4;base64, 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',\n        WEBM: 'data:video/webm;base64, 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qqqruu6sgxQVdd1XVmWZQCu67qyLMsCAAAOHAAAAoygk4wqi7DRhAsPQKEhKwKAKAAAwBimFFPKMCYhpBAaxiSEFEImJaXSUqogpFJSKRWEVEoqJaOUUmopVRBSKamUCkIqJZVSAADYgQMA2IGFUGjISgAgDwCAMEYpxhhzTiKkFGPOOScRUoox55yTSjHmnHPOSSkZc8w556SUzjnnnHNSSuacc845KaVzzjnnnJRSSuecc05KKSWEzkEnpZTSOeecEwAAVOAAABBgo8jmBCNBhYasBABSAQAMjmNZmuZ5omialiRpmud5niiapiZJmuZ5nieKqsnzPE8URdE0VZXneZ4oiqJpqirXFUXTNE1VVV2yLIqmaZqq6rowTdNUVdd1XZimaaqq67oubFtVVdV1ZRm2raqq6rqyDFzXdWXZloEsu67s2rIAAPAEBwCgAhtWRzgpGgssNGQlAJABAEAYg5BCCCFlEEIKIYSUUggJAAAYcAAACDChDBQashIASAUAAIyx1lprrbXWQGettdZaa62AzFprrbXWWmuttdZaa6211lJrrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmstpZRSSimllFJKKaWUUkoppZRSSgUA+lU4APg/2LA6wknRWGChISsBgHAAAMAYpRhzDEIppVQIMeacdFRai7FCiDHnJKTUWmzFc85BKCGV1mIsnnMOQikpxVZjUSmEUlJKLbZYi0qho5JSSq3VWIwxqaTWWoutxmKMSSm01FqLMRYjbE2ptdhqq7EYY2sqLbQYY4zFCF9kbC2m2moNxggjWywt1VprMMYY3VuLpbaaizE++NpSLDHWXAAAd4MDAESCjTOsJJ0VjgYXGrISAAgJACAQUooxxhhzzjnnpFKMOeaccw5CCKFUijHGnHMOQgghlIwx5pxzEEIIIYRSSsaccxBCCCGEkFLqnHMQQgghhBBKKZ1zDkIIIYQQQimlgxBCCCGEEEoopaQUQgghhBBCCKmklEIIIYRSQighlZRSCCGEEEIpJaSUUgohhFJCCKGElFJKKYUQQgillJJSSimlEkoJJYQSUikppRRKCCGUUkpKKaVUSgmhhBJKKSWllFJKIYQQSikFAAAcOAAABBhBJxlVFmGjCRcegEJDVgIAZAAAkKKUUiktRYIipRikGEtGFXNQWoqocgxSzalSziDmJJaIMYSUk1Qy5hRCDELqHHVMKQYtlRhCxhik2HJLoXMOAAAAQQCAgJAAAAMEBTMAwOAA4XMQdAIERxsAgCBEZohEw0JweFAJEBFTAUBigkIuAFRYXKRdXECXAS7o4q4DIQQhCEEsDqCABByccMMTb3jCDU7QKSp1IAAAAAAADADwAACQXAAREdHMYWRobHB0eHyAhIiMkAgAAAAAABcAfAAAJCVAREQ0cxgZGhscHR4fICEiIyQBAIAAAgAAAAAggAAEBAQAAAAAAAIAAAAEBB9DtnUBAAAAAAAEPueBAKOFggAAgACjzoEAA4BwBwCdASqwAJAAAEcIhYWIhYSIAgIABhwJ7kPfbJyHvtk5D32ych77ZOQ99snIe+2TkPfbJyHvtk5D32ych77ZOQ99YAD+/6tQgKOFggADgAqjhYIAD4AOo4WCACSADqOZgQArADECAAEQEAAYABhYL/QACIBDmAYAAKOFggA6gA6jhYIAT4AOo5mBAFMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAGSADqOFggB6gA6jmYEAewAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAj4AOo5mBAKMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAKSADqOFggC6gA6jmYEAywAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAz4AOo4WCAOSADqOZgQDzADECAAEQEAAYABhYL/QACIBDmAYAAKOFggD6gA6jhYIBD4AOo5iBARsAEQIAARAQFGAAYWC/0AAiAQ5gGACjhYIBJIAOo4WCATqADqOZgQFDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggFPgA6jhYIBZIAOo5mBAWsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAXqADqOFggGPgA6jmYEBkwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIBpIAOo4WCAbqADqOZgQG7ADECAAEQEAAYABhYL/QACIBDmAYAAKOFggHPgA6jmYEB4wAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIB5IAOo4WCAfqADqOZgQILADECAAEQEAAYABhYL/QACIBDmAYAAKOFggIPgA6jhYICJIAOo5mBAjMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAjqADqOFggJPgA6jmYECWwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYICZIAOo4WCAnqADqOZgQKDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggKPgA6jhYICpIAOo5mBAqsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCArqADqOFggLPgA6jmIEC0wARAgABEBAUYABhYL/QACIBDmAYAKOFggLkgA6jhYIC+oAOo5mBAvsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAw+ADqOZgQMjADECAAEQEAAYABhYL/QACIBDmAYAAKOFggMkgA6jhYIDOoAOo5mBA0sAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA0+ADqOFggNkgA6jmYEDcwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIDeoAOo4WCA4+ADqOZgQObADECAAEQEAAYABhYL/QACIBDmAYAAKOFggOkgA6jhYIDuoAOo5mBA8MAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA8+ADqOFggPkgA6jhYID+oAOo4WCBA+ADhxTu2sBAAAAAAAAEbuPs4EDt4r3gQHxghEr8IEK'\n    },\n\n    MIME_TYPES: {\n        image: [\n            'image/gif',\n            'image/jpeg',\n            'image/pjpeg',\n            'image/png',\n            'image/svg+xml',\n            'image/tiff',\n            'image/vnd.microsoft.icon',\n            'image/vnd.wap.wbmp',\n            'image/webp'\n        ],\n        audio: [\n            'audio/basic',\n            'audio/L24',\n            'audio/mp4',\n            'audio/aac',\n            'audio/mpeg',\n            'audio/ogg',\n            'audio/ogg; codecs=opus',\n            'audio/ogg; codecs=opus+voice',\n            'audio/vorbis',\n            'audio/x-ms-wma',\n            'audio/x-ms-wax',\n            'audio/vnd.rn-realaudio',\n            'audio/vnd.wave',\n            'audio/webm',\n            'audio/x-wav'\n        ],\n        video: [\n            'video/mpeg',\n            'video/mp4',\n            'video/ogg',\n            'video/quicktime',\n            'video/webm',\n            'video/x-ms-wmv',\n            'video/x-flv',\n            'video/3gpp',\n            'video/3gpp2'\n        ],\n        document: [\n            'text/cmd',\n            'text/css',\n            'text/csv',\n            'text/html',\n            'text/javascript (Obsolete)',\n            'text/plain',\n            'text/php',\n            'text/xml',\n            'text/markdown',\n            'text/cache-manifestapplication/json',\n            'application/xml',\n            'application/vnd.oasis.opendocument.text',\n            'application/vnd.oasis.opendocument.graphics',\n            'application/msword'\n        ],\n        pdf: [\n            'application/pdf'\n        ],\n        table: [\n            'application/vnd.oasis.opendocument.spreadsheet',\n            'application/vnd.ms-excel'\n        ],\n        archive: [\n            'application/zip',\n            'application/gzip',\n            'application/x-rar-compressed',\n            'application/x-tar',\n            'application/x-7z-compressed'\n        ],\n        presentation: [\n            'application/vnd.ms-powerpoint',\n            'application/vnd.oasis.opendocument.presentation'\n        ]\n    },\n\n    languages: {\n        \"en\": \"English\",\n        \"ar-SA\": \"العربية\",\n        \"az-AZ\": \"Azərbaycanca\",\n        \"be-BY\": \"Беларуская\",\n        \"bg-BG\": \"Български\",\n        \"bs-BA\": \"Bosanski\",\n        \"ca-ES\": \"Català\",\n        \"cs-CZ\": \"Čeština\",\n        \"cy-GB\": \"Cymraeg\",\n        \"da-DK\": \"Dansk\",\n        \"de-DE\": \"Deutsch\",\n        \"el-GR\": \"Ελληνικά\",\n        \"es419\": \"Spanish Latin America\",\n        \"es-ES\": \"Español\",\n        \"et-EE\": \"Eesti\",\n        \"fa-IR\": \"فارسی\",\n        \"fi-FI\": \"Suomi\",\n        \"fil-PH\": \"Pilipino\",\n        \"fr-FR\": \"Français\",\n        \"ga-IE\": \"Gaeilge\",\n        \"he\": \"עברית\",\n        \"hi-IN\": \"हिन्दी\",\n        \"hr-HR\": \"Hrvatski\",\n        \"hu-HU\": \"Magyar\",\n        \"hy-AM\": \"Հայերեն\",\n        \"in-ID\": \"Bahasa Indonesia\",\n        \"is-IS\": \"Íslenska\",\n        \"it-IT\": \"Italiano\",\n        \"ja-JP\": \"日本語\",\n        \"ka-GE\": \"ქართული\",\n        \"kmr-TR\": \"Kurmancî (Kurdî)\",\n        \"ko-KR\": \"한국어\",\n        \"ku-TR\": \"Kurdî\",\n        \"ky-KG\": \"Кыргызча\",\n        \"la-LA\": \"Latina\",\n        \"lb-LU\": \"Luxembourgish\",\n        \"lt-LT\": \"Lietuvių\",\n        \"mk-MK\": \"Македонски\",\n        \"mn-MN\": \"Монгол\",\n        \"mr-IN\": \"मराठी\",\n        \"ms-MY\": \"Bahasa Melayu\",\n        \"nb-NO\": \"Norsk (bokmål)\",\n        \"ne-NP\": \"Nepālī\",\n        \"nl-NL\": \"Nederlands\",\n        \"no-NO\": \"Norsk (nynorsk)\",\n        \"oc-FR\": \"Occitan\",\n        \"pa-IN\": \"ਪੰਜਾਬੀ (ਗੁਰਮੁਖੀ)\",\n        \"pl-PL\": \"Polski\",\n        \"pt-BR\": \"Português, brasileiro\",\n        \"pt-PT\": \"Português\",\n        \"qya-AA\": \"quenya\",\n        \"ro-RO\": \"Română\",\n        \"ru-RU\": \"Русский\",\n        \"sco-GB\": \"Scots\",\n        \"si-LK\": \"සිංහල\",\n        \"sk-SK\": \"Slovenčina\",\n        \"sl-SI\": \"Slovenščina\",\n        \"sq-AL\": \"Shqip\",\n        \"sr-Cyrl-ME\": \"Montenegrin (Cyrillic)\",\n        \"sr-SP\": \"Српски / Srpski\",\n        \"sv-SE\": \"Svenska\",\n        \"sw-KE\": \"Kiswahili\",\n        \"ta-IN\": \"தமிழ்\",\n        \"te-IN\": \"తెలుగు\",\n        \"tg-TJ\": \"Тоҷикӣ\",\n        \"tk-TM\": \"Türkmençe\",\n        \"tlh-AA\": \"Klingon\",\n        \"tr-TR\": \"Türkçe\",\n        \"uk-UA\": \"Українська\",\n        \"uz-UZ\": \"Oʻzbekcha / Ўзбекча\",\n        \"vi-VN\": \"Tiếng Việt\",\n        \"yo-NG\": \"Yorùbá\",\n        \"zh-CN\": \"简体中文\",\n        \"zh-TW\": \"中國傳統的\",\n        \"zu-ZA\": \"isiZulu\"\n    },\n\n    languages_another_locales: {\n        \"es419\": \"es-latin\",\n        \"in-ID\": \"id\"\n    },\n\n    PERSONAL_AREA_URL: {},\n\n    XABBER_ACCOUNT_URL: 'https://www.xabber.com/account',\n    USE_SOCIAL_AUTH: true,\n    USE_TAB_SIGNALS: true,\n    REGISTER_XMPP_ACCOUNT: true,\n    REGISTER_XMPP_ACCOUNT_URL: 'https://www.xabber.com/account/auth/signup/',\n    CHECK_VERSION: true,\n    DESKTOP_AUTOSTART_OPTION: false,\n    DEFAULT_LOGIN_SCREEN: 'xmpp',\n\n    GCM_SENDER_ID: '868637702480',\n    GCM_API_KEY: 'AIzaSyC1JCBB3LLf_4DG_vRWMEEe0I4X5msEU-M',\n    MESSAGE_ARCHIVE_DB_NAME: 'MessageArchive',\n    STANZA_MAX_SIZE: Math.pow(2, 16),\n\n    BLUR_VALUE: 25,\n    VIGNETTING_VALUE: 128,\n    TRANSPARENCY_VALUE: 50,\n\n    MAIN_COLOR: 'red',\n    CLIENT_NAME: 'Xabber for Web',\n    CLIENT_RESOURCE: 'xabber-web',\n    SHORT_CLIENT_NAME: 'Xabber',\n    SHORT_CLIENT_DESCRIPTION: 'World’s best XMPP experience',\n    CLIENT_LOGO: 'assets/images/xabber-logo-96.png',\n    TOOLBAR_LOGO: 'assets/images/xabber-logo.png',\n    ENABLE_XABBER_ACCOUNT: false,\n    SCREEN_ABOUT: true,\n    BACKGROUND_IMAGES_XML_URL: 'https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/background-images.xml',\n    BACKGROUND_PATTERNS_XML_URL: 'https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/background-patterns.xml',\n    DEVELOPER_URL: 'https://redsolution.com',\n    CLIENT_GITHUB_URL: 'https://github.com/redsolution/xabber-web',\n    PROJECT_CROWDIN_URL: 'https://crowdin.com/project/xabber',\n    CLIENT_LICENSE_GITHUB_URL: 'https://github.com/redsolution/xabber-web/blob/master/LICENSE',\n    DEFAULT_EMOJI_FONT: 'system',\n\n};\n\nconstants.JINGLE_MSG_STATE = {};\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_REJECT] = 'reject';\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_PROPOSE] = 'propose';\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_ACCEPT] = 'accept';\n\nconstants.MSG_STATE = {};\nconstants.MSG_STATE[constants.MSG_ERROR] = 'error';\nconstants.MSG_STATE[constants.MSG_PENDING] = 'pending';\nconstants.MSG_STATE[constants.MSG_SENT] = 'sent';\nconstants.MSG_STATE[constants.MSG_DELIVERED] = 'delivered';\nconstants.MSG_STATE[constants.MSG_DISPLAYED] = 'displayed';\nconstants.MSG_STATE[constants.MSG_ARCHIVED] = 'archived';\nconstants.MSG_STATE[constants.MSG_BLOCKED] = 'not-allowed';\nconstants.MSG_STATE[constants.MSG_SAVED] = 'saved';\n\nconstants.MSG_VERBOSE_STATE = {};\nconstants.MSG_VERBOSE_STATE[constants.MSG_ERROR] = 'message__delivering_state__error';\nconstants.MSG_VERBOSE_STATE[constants.MSG_PENDING] = 'message__delivering_state__pending';\nconstants.MSG_VERBOSE_STATE[constants.MSG_SENT] = 'message__delivering_state__sent';\nconstants.MSG_VERBOSE_STATE[constants.MSG_DELIVERED] = 'message__delivering_state__delivered';\nconstants.MSG_VERBOSE_STATE[constants.MSG_DISPLAYED] = 'message__delivering_state__displayed';\nconstants.MSG_VERBOSE_STATE[constants.MSG_ARCHIVED] = 'message__delivering_state__archived';\nconstants.MSG_VERBOSE_STATE[constants.MSG_BLOCKED] = 'message__delivering_state__error';\nconstants.MSG_VERBOSE_STATE[constants.MSG_SAVED] = 'message__delivering_state__saved';\n\nconstants.EMOJI_FONTS_LIST = {\n    notoColor: {\n        name: 'NotoColorEmoji',\n        value: 'notoColor',\n        url: `assets/fonts/notocolor/NotoColorEmoji-Regular.ttf`,\n        hint: `23 MiB download from ${window.location.hostname}`,\n        attribution_text: '<p>Noto Emoji (Stands for No Tofu) is an <a href=\"https://github.com/googlefonts/noto-emoji\" target=\"_blank\">open source</a> emoji library developed by <a href=\"https://google.com/\" target=\"_blank\">Google</a>.</p><p>Version: 2.042</p><p>License: <a href=\"https://github.com/googlefonts/noto-emoji/blob/main/fonts/LICENSE\" target=\"_blank\">SIL Open Font License 1.1</a></p>',\n        order: 0\n    },\n};\nexport default constants;\n","// only external libs and plugins for them\n// import Backbone from \"backbone\";\nimport \"backbone\";\nimport _ from \"underscore\";\nimport $ from \"jquery\";\nimport moment from \"moment\";\nimport WaveSurfer from \"wavesurfer\";\nimport slug from \"slug\";\nimport sha256 from \"sha256\";\nimport magnificPopup from \"magnific-popup\";\nimport i18next from \"i18next\";\nimport i18next_sprintf from \"i18next-post\";\nimport Strophe from \"strophe\";\nimport plyr from \"Plyr\";\nimport Quill from \"Quill\";\nimport libsignal from \"libsignal-protocol\";\nimport sha1 from \"sha1_hasher\";\nimport Recorder from 'opus-recorder';\nimport encoderPath from 'opus-recorder/dist/encoderWorker.min.js';\nimport VanillaQR from \"VanillaQR\";\nimport idleJs from \"idle-js\";\nimport backgroundImagesXml from \"xml-loader!~/xmls/background-images.xml\";\nimport backgroundPatternsXml from \"xml-loader!~/xmls/background-patterns.xml\";\nimport \"~/css/color-scheme.css\";\nimport \"~/css/materialdesignicons.css\";\nimport \"~/css/materialize.css\";\nimport \"~/css/plyr.css\";\nimport \"~/css/quill.snow.css\";\nimport \"~/css/xabber.css\";\nimport \"~/node_modules/magnific-popup/dist/magnific-popup.css\";\nimport \"~/node_modules/perfect-scrollbar/dist/css/perfect-scrollbar.css\";\nimport \"strophe.disco\";\nimport \"strophe.ping\";\nimport \"strophe.rsm\";\nimport \"strophe.caps\";\nimport \"strophe.pubsub\";\nimport \"omemo\";\nimport \"backbone.localsync\";\nimport \"materialize\";\nimport \"perfectScrollbarJQuery\";\n\nexport default _.extend({\n    $: $,\n    _: _,\n    moment: moment,\n    WaveSurfer: WaveSurfer,\n    Plyr: plyr,\n    Quill: Quill,\n    libsignal: libsignal,\n    slug: slug,\n    sha1: sha1,\n    idleJs: idleJs,\n    opusRecorder: Recorder,\n    opusRecorderEncoderPath: encoderPath,\n    xabber_i18next: i18next,\n    xabber_i18next_sprintf: i18next_sprintf,\n    sha256: sha256,\n    VanillaQR: VanillaQR,\n    magnificPopup: magnificPopup,\n    backgroundImagesXml: backgroundImagesXml,\n    backgroundPatternsXml: backgroundPatternsXml,\n    Strophe: Strophe\n}, Strophe);\n","    import _ from \"underscore\";\n    import $ from \"jquery\";\n\n    _.templateSettings = {\n        evaluate : /\\{\\[([\\s\\S]+?)\\]\\}/g,\n        interpolate : /\\{\\{([\\s\\S]+?)\\}\\}/g\n    };\n\n    let templates = {};\n\n    let insertSvg = function (html) {\n        let $html = $('<div/>').html(html);\n        $html.find('.mdi-svg-template').each(function () {\n            let $el = $(this),\n                svg_name = $el.data('svgname');\n            $el.removeClass('mdi-svg-template').addClass('mdi-'+svg_name)\n                .attr('data-svgname', null);\n            $el.html(templates.svg[svg_name]());\n        });\n        return $html.html();\n    };\n\n    let _addTemplate = function (name, options) {\n        options || (options = {});\n        let path = name.split('.'),\n            tpl = _.template(require('raw-loader!~/templates/'+path.join('/')+'.html').default),\n            tpl_name = path.pop(),\n            res = templates;\n        _.each(path, function (attr) {\n            res[attr] || (res[attr] = {});\n            res = res[attr];\n        });\n        if (options.is_svg) {\n            res[tpl_name] = tpl;\n        } else {\n            res[tpl_name] = function (data) {\n                return insertSvg(tpl(data));\n            };\n        }\n    };\n\n    let addJSONTemplate = function (name, ) {\n        let path = name.split('.'),\n            tpl = require('~/templates/'+path.join('/')+'.json'),\n            tpl_name = path.pop(),\n            res = templates;\n        _.each(path, function (attr) {\n            res[attr] || (res[attr] = {});\n            res = res[attr];\n        });\n        res[tpl_name] = tpl;\n    };\n\n    let addTemplate = function (name) {\n        _addTemplate(name, {is_svg: false});\n    };\n\n    let addSvgTemplate = function (name) {\n        _addTemplate(name, {is_svg: true});\n    };\n\n\n    addTemplate('base.dialog');\n    addTemplate('base.fingerprints');\n    addTemplate('base.fingerprints_devices');\n    addTemplate('base.fingerprint_item');\n    addTemplate('base.fingerprint_devices_item');\n    addTemplate('base.jingle_message_calling');\n    addTemplate('base.plyr_player_popup');\n    addTemplate('base.input_widget');\n    addTemplate('base.toolbar');\n    addTemplate('base.settings');\n    addTemplate('base.settings_modal');\n    addTemplate('base.setting_radio_input');\n    addTemplate('base.setting_emoji_font_radio_input');\n    addTemplate('base.setting_language_radio_input');\n    addTemplate('base.about');\n    addTemplate('base.omemo_enable');\n    addTemplate('base.backgrounds_gallery');\n    addTemplate('base.color_picker');\n    addTemplate('base.color_scheme');\n\n    addTemplate('accounts.xmpp_login');\n    addTemplate('accounts.add_account');\n    addTemplate('accounts.unregister_account');\n    addTemplate('accounts.change_password');\n    addTemplate('accounts.change_account_password');\n    addTemplate('accounts.toolbar_item');\n    addTemplate('accounts.media_gallery_account_file');\n    addTemplate('accounts.media_gallery_account');\n    addTemplate('accounts.delete_files_media_gallery');\n    addTemplate('accounts.single_account_settings_modal');\n    addTemplate('accounts.account_settings_modal');\n    addTemplate('accounts.existing_groupchat_item');\n    addTemplate('accounts.resource');\n    addTemplate('accounts.resource_right');\n    addTemplate('accounts.webcam_panel');\n    addTemplate('accounts.emoji_panel');\n    addTemplate('accounts.emoji_picker');\n    addTemplate('accounts.emoji_picker_tabs');\n    addTemplate('accounts.global_settings_item_modal');\n    addTemplate('accounts.change_status');\n    addTemplate('accounts.token_item_modal');\n    addTemplate('accounts.current_token_item_modal');\n    addTemplate('accounts.audio_file_waveform');\n    addTemplate('accounts.avatars_gallery');\n    addTemplate('accounts.status_message_input_widget');\n\n    addTemplate('vcard.vcard');\n    addTemplate('vcard.vcard_modal');\n    addTemplate('vcard.vcard_edit_modal');\n    addTemplate('vcard.vcard_right');\n\n    addTemplate('searching.searching_wide');\n    addTemplate('searching.searching_account_item');\n    addTemplate('searching.existing_groupchat_item');\n    addTemplate('searching.existing_groupchat_details_view');\n\n    addTemplate('contacts.roster_right');\n    addTemplate('contacts.roster_left');\n    addTemplate('contacts.account_roster_right');\n    addTemplate('contacts.account_roster_left');\n    addTemplate('contacts.group_right');\n    addTemplate('contacts.group_left');\n    addTemplate('contacts.add_contact');\n    addTemplate('contacts.contact_right_item');\n    addTemplate('contacts.contact_left_item');\n    addTemplate('contacts.contact_blocked_item');\n    addTemplate('contacts.contact_details_right');\n    addTemplate('contacts.roster_settings');\n    addTemplate('contacts.group_settings');\n    addTemplate('contacts.groups_checkbox_list');\n    addTemplate('contacts.groups_checkbox_list_contact');\n    addTemplate('contacts.groups_new_group');\n    addTemplate('contacts.groups_list');\n    addTemplate('contacts.add_contact_account_item');\n    addTemplate('contacts.contact_placeholder');\n    addTemplate('contacts.groups');\n    addTemplate('contacts.edit_contact');\n    addTemplate('contacts.edit_group');\n    addTemplate('contacts.preloader');\n    addTemplate('contacts.media_item');\n    addTemplate('contacts.media_items_empty');\n    addTemplate('contacts.audio_file_waveform');\n    addTemplate('contacts.group_chats.group_chat_properties');\n    addTemplate('contacts.group_chats.group_chat_properties_right');\n    addTemplate('contacts.group_chats.group_chat_details');\n    addTemplate('contacts.group_chats.group_chat_details_right');\n    addTemplate('contacts.group_chats.invitation');\n    addTemplate('contacts.group_chats.group_chat_properties_edit');\n    addTemplate('contacts.group_chats.default_restrictions');\n    addTemplate('contacts.group_chats.default_restrictions_right');\n    addTemplate('contacts.group_chats.group_member_item');\n    addTemplate('contacts.group_chats.group_member_item_right');\n    addTemplate('contacts.group_chats.description_input_widget');\n    addTemplate('contacts.group_chats.group_name_input_widget');\n    addTemplate('contacts.group_chats.participant_badge_input_widget');\n    addTemplate('contacts.group_chats.invited_member_item');\n    addTemplate('contacts.group_chats.add_blocked_participant_form');\n    addTemplate('contacts.group_chats.participant_details_right');\n    addTemplate('contacts.group_chats.participant_rights');\n    addTemplate('contacts.group_chats.restriction_item');\n    addTemplate('contacts.group_chats.right_expire_variants');\n    addTemplate('contacts.group_chats.pinned_message');\n    addTemplate('contacts.group_chats.participant_details_item_right');\n    addTemplate('contacts.group_chats.participant_details_item');\n    addTemplate('contacts.group_chats.participants');\n    addTemplate('contacts.group_chats.participants_right_panel');\n    addTemplate('contacts.group_chats.badge_edit_view');\n    addTemplate('contacts.group_chats.private_participant_details');\n    addTemplate('contacts.group_chats.private_participant_details_item_right');\n    addTemplate('contacts.group_chats.set_status');\n    addTemplate('contacts.group_chats.status_item');\n    addTemplate('contacts.group_chats.group_status');\n    addTemplate('contacts.group_chats.group_status_right');\n    addTemplate('contacts.group_chats.file_item');\n\n    addTemplate('chats.chats_panel');\n    addTemplate('chats.add_chat_account_item');\n    addTemplate('chats.chat_item');\n    addTemplate('chats.chat_head');\n    addTemplate('chats.send_media');\n    addTemplate('chats.saved_chat_head');\n    addTemplate('chats.chat_content');\n    addTemplate('chats.chat_content_placeholder');\n    addTemplate('chats.chat_content_contact');\n    addTemplate('chats.chat_bottom');\n    addTemplate('chats.unread_marker');\n    addTemplate('chats.location_popup');\n    addTemplate('chats.subscription_buttons');\n    addTemplate('chats.forward_panel');\n    addTemplate('chats.chat_placeholder');\n    addTemplate('chats.message_item');\n    addTemplate('chats.messages.main');\n    addTemplate('chats.messages.searched');\n    addTemplate('chats.messages.forwarded');\n    addTemplate('chats.messages.system');\n    addTemplate('chats.messages.file_upload');\n    addTemplate('chats.messages.loading_circle');\n    addTemplate('chats.messages.file');\n    addTemplate('chats.messages.file_loading');\n    addTemplate('chats.messages.link_reference');\n    addTemplate('chats.messages.link_reference_chat');\n    addTemplate('chats.messages.attached_file');\n    addTemplate('chats.messages.video');\n    addTemplate('chats.messages.location');\n    addTemplate('chats.messages.audio_file');\n    addTemplate('chats.messages.audio_file_waveform');\n    addTemplate('chats.messages.auth_request');\n    addTemplate('chats.messages.group_request');\n    addTemplate('chats.messages.template-for-2');\n    addTemplate('chats.messages.template-for-3');\n    addTemplate('chats.messages.template-for-4');\n    addTemplate('chats.messages.template-for-5');\n    addTemplate('chats.messages.template-for-6');\n    addTemplate('chats.messages.hidden-template-for-2');\n    addTemplate('chats.messages.hidden-template-for-3');\n    addTemplate('chats.messages.hidden-template-for-4');\n    addTemplate('chats.messages.hidden-template-for-5');\n    addTemplate('chats.messages.hidden-template-for-6');\n    addTemplate('chats.messages.images_details');\n    addTemplate('chats.messages.saved_main');\n    addTemplate('chats.group_chats.pinned_message_panel');\n    addTemplate('chats.group_chats.add_group_chat');\n    addTemplate('chats.group_chats.invitation_panel_view');\n    addTemplate('chats.group_chats.mention_item');\n    addTemplate('chats.encryption_warning');\n    addTemplate('chats.content_encryption_warning');\n    addTemplate('chats.ephemeral_timer_selector');\n    addTemplate('chats.export_history');\n\n\n    addTemplate('mentions.mentions_panel');\n    addTemplate('mentions.mentions_placeholder');\n    addTemplate('mentions.mention_item');\n\n    addSvgTemplate('svg.ic-jabber');\n    addSvgTemplate('svg.xmpp');\n    addSvgTemplate('svg.account-outline');\n    addSvgTemplate('svg.qrcode');\n    addSvgTemplate('svg.id-outline');\n    addSvgTemplate('svg.clock-outline');\n    addSvgTemplate('svg.index');\n    addSvgTemplate('svg.restrictions-outline');\n    addSvgTemplate('svg.history');\n    addSvgTemplate('svg.chevron-down');\n    addSvgTemplate('svg.camera');\n    addSvgTemplate('svg.camera-retake');\n    addSvgTemplate('svg.membership-outline');\n    addSvgTemplate('svg.invite');\n    addSvgTemplate('svg.invite-outline');\n    addSvgTemplate('svg.chevron-right-variant');\n    addSvgTemplate('svg.chevron-left-variant');\n    addSvgTemplate('svg.subscription-to');\n    addSvgTemplate('svg.subscription-from');\n    addSvgTemplate('svg.image');\n    addSvgTemplate('svg.file-audio');\n    addSvgTemplate('svg.file-video');\n    addSvgTemplate('svg.file-document');\n    addSvgTemplate('svg.file-presentation');\n    addSvgTemplate('svg.file-zip');\n    addSvgTemplate('svg.file');\n    addSvgTemplate('svg.file-pdf');\n    addSvgTemplate('svg.close');\n    addSvgTemplate('svg.link');\n    addSvgTemplate('svg.picture-in-picture-minimize');\n    addSvgTemplate('svg.picture-in-picture-bottom-right');\n    addSvgTemplate('svg.picture-in-picture-top-right');\n    addSvgTemplate('svg.pause');\n    addSvgTemplate('svg.volume-off');\n    addSvgTemplate('svg.volume-high');\n    addSvgTemplate('svg.plyr');\n    addSvgTemplate('svg.plus');\n    addSvgTemplate('svg.player-float');\n    addSvgTemplate('svg.player-full');\n    addSvgTemplate('svg.player-mini-variant');\n    addSvgTemplate('svg.player-mini');\n    addSvgTemplate('svg.message-bookmark-outline');\n    addSvgTemplate('svg.play');\n    addSvgTemplate('svg.video');\n    addSvgTemplate('svg.cancel');\n    addSvgTemplate('svg.status');\n    addSvgTemplate('svg.status-outline');\n    addSvgTemplate('svg.birthday');\n    addSvgTemplate('svg.birthday-outline');\n    addSvgTemplate('svg.web');\n    addSvgTemplate('svg.xmpp');\n    addSvgTemplate('svg.job');\n    addSvgTemplate('svg.job-outline');\n    addSvgTemplate('svg.address');\n    addSvgTemplate('svg.address-outline');\n    addSvgTemplate('svg.email');\n    addSvgTemplate('svg.email-outline');\n    addSvgTemplate('svg.description');\n    addSvgTemplate('svg.description-outline');\n    addSvgTemplate('svg.contact-add');\n    addSvgTemplate('svg.check');\n    addSvgTemplate('svg.call-outline');\n    addSvgTemplate('svg.call');\n    addSvgTemplate('svg.search');\n    addSvgTemplate('svg.device-cellphone');\n    addSvgTemplate('svg.device-console');\n    addSvgTemplate('svg.device-desktop');\n    addSvgTemplate('svg.device-tablet');\n    addSvgTemplate('svg.device-web');\n    addSvgTemplate('svg.devices');\n    addSvgTemplate('svg.bell');\n    addSvgTemplate('svg.bell-sleep');\n    addSvgTemplate('svg.bell-off');\n    addSvgTemplate('svg.cancel');\n    addSvgTemplate('svg.trash');\n    addSvgTemplate('svg.client');\n    addSvgTemplate('svg.client-outline');\n    addSvgTemplate('svg.database-lock');\n    addSvgTemplate('svg.index');\n    addSvgTemplate('svg.bug');\n    addSvgTemplate('svg.cloud');\n    addSvgTemplate('svg.key');\n    addSvgTemplate('svg.key-variant');\n    addSvgTemplate('svg.account');\n    addSvgTemplate('svg.alert-circle');\n    addSvgTemplate('svg.security');\n    addSvgTemplate('svg.edit');\n    addSvgTemplate('svg.edit-outline');\n    addSvgTemplate('svg.check-circle');\n    addSvgTemplate('svg.blocked-add');\n    addSvgTemplate('svg.information-outline');\n    addSvgTemplate('svg.information');\n    addSvgTemplate('svg.fullname');\n    addSvgTemplate('svg.fullname-outline');\n    addSvgTemplate('svg.ic-at');\n    addSvgTemplate('svg.ic-searching');\n    addSvgTemplate('svg.blocked');\n    addSvgTemplate('svg.bot');\n    addSvgTemplate('svg.bot-variant');\n    addSvgTemplate('svg.group-incognito');\n    addSvgTemplate('svg.group-invite');\n    addSvgTemplate('svg.group-public');\n    addSvgTemplate('svg.task');\n    addSvgTemplate('svg.group-private');\n    addSvgTemplate('svg.channel');\n    addSvgTemplate('svg.rss');\n    addSvgTemplate('svg.rss-variant');\n    addSvgTemplate('svg.server');\n    addSvgTemplate('svg.volume-off-variant');\n    addSvgTemplate('svg.message-group');\n    addSvgTemplate('svg.xabber-offline');\n    addSvgTemplate('svg.xabber-online');\n    addSvgTemplate('svg.saved-messages');\n    addSvgTemplate('svg.account-cancel');\n    addSvgTemplate('svg.web-cancel');\n    addSvgTemplate('svg.palette');\n    addSvgTemplate('svg.chat');\n    addSvgTemplate('svg.star-face');\n    addSvgTemplate('svg.alarm-bell');\n    addSvgTemplate('svg.id');\n    addSvgTemplate('svg.expires');\n    addSvgTemplate('svg.database');\n    addSvgTemplate('svg.download');\n    addSvgTemplate('svg.lock');\n    addSvgTemplate('svg.lock-open');\n    addSvgTemplate('svg.lock-alert');\n    addSvgTemplate('svg.lock-check');\n    addSvgTemplate('svg.lock-cross');\n    addSvgTemplate('svg.lock-question');\n    addSvgTemplate('svg.circles');\n    addSvgTemplate('svg.circles-outline');\n    addSvgTemplate('svg.circle-slice-1');\n    addSvgTemplate('svg.circle-slice-2');\n    addSvgTemplate('svg.circle-slice-3');\n    addSvgTemplate('svg.circle-slice-4');\n    addSvgTemplate('svg.circle-slice-5');\n    addSvgTemplate('svg.circle-slice-6');\n    addSvgTemplate('svg.circle-slice-7');\n    addSvgTemplate('svg.circle-slice-8');\n    addSvgTemplate('svg.translate');\n    addSvgTemplate('svg.trash');\n    addSvgTemplate('svg.crosshairs-gps');\n    addSvgTemplate('svg.crosshairs-question');\n    addSvgTemplate('svg.crosshairs');\n    addSvgTemplate('svg.map-marker-outline');\n    addSvgTemplate('svg.map-marker');\n    addSvgTemplate('svg.minus');\n\n    addJSONTemplate('accounts.emojis');\n\n    export default templates;","\n    let sounds = {};\n\n    let attention_json = require('~/sounds/attention/attention.json'),\n        attention = [];\n\n\n    Object.keys(attention_json).forEach(item => {\n        let audio = require(`~/sounds/attention/${item}/${item}.mp3`),\n            attention_sound = {\n                file_name: item,\n                name: attention_json[item].name,\n                audio: audio,\n                not_selectable: attention_json[item].not_selectable,\n        };\n        attention.push(attention_sound);\n    });\n\n    let ringtones_json = require('~/sounds/ringtones/ringtones.json'),\n        ringtones = [];\n\n\n    Object.keys(ringtones_json).forEach(item => {\n        let audio = require(`~/sounds/ringtones/${item}/${item}.mp3`),\n            ringtone = {\n                file_name: item,\n                name: ringtones_json[item].name,\n                audio: audio,\n                not_selectable: ringtones_json[item].not_selectable,\n        };\n        ringtones.push(ringtone);\n    });\n\n    let dialtones_json = require('~/sounds/dialtones/dialtones.json'),\n        dialtones = [];\n\n\n    Object.keys(dialtones_json).forEach(item => {\n        let audio = require(`~/sounds/dialtones/${item}/${item}.mp3`),\n            dialtone = {\n                file_name: item,\n                name: dialtones_json[item].name,\n                audio: audio,\n                not_selectable: dialtones_json[item].not_selectable,\n        };\n        dialtones.push(dialtone);\n    });\n\n    let notifications_json = require('~/sounds/notifications/notifications.json'),\n        notifications = [];\n\n\n    Object.keys(notifications_json).forEach(item => {\n        let audio = require(`~/sounds/notifications/${item}/${item}.mp3`),\n            notification = {\n                file_name: item,\n                name: notifications_json[item].name,\n                audio: audio,\n                not_selectable: notifications_json[item].not_selectable,\n        };\n        notifications.push(notification);\n    });\n\n    let system_json = require('~/sounds/system/system.json'),\n        system_sound_list = [];\n\n\n    Object.keys(system_json).forEach(item => {\n        let audio = require(`~/sounds/system/${item}/${item}.mp3`),\n            system_item = {\n                file_name: item,\n                name: system_json[item].name,\n                audio: audio,\n                not_selectable: system_json[item].not_selectable,\n        };\n        system_sound_list.push(system_item);\n    });\n\n    sounds.attention = attention;\n    sounds.ringtones = ringtones;\n    sounds.dialtones = dialtones;\n    sounds.notifications = notifications;\n    sounds.system = system_sound_list;\n    sounds.all_sounds = attention.concat(ringtones).concat(dialtones).concat(notifications).concat(system_sound_list);\n\n    export default sounds;","import _ from \"underscore\";\nimport $ from \"jquery\";\nimport constants from \"xabber-constants\";\n\nvar raw_data = {\n    \"smiles_and_people\": [{code:0x1f600,x:9,y:3},{code:0x1f603,x:12,y:3},{code:0x1f604,x:13,y:3},{code:0x1f601,x:10,y:3},{code:0x1f606,x:1,y:4},{code:0x1f605,x:0,y:4},{code:0x1f923,x:6,y:10},{code:0x1f602,x:11,y:3},{code:0x1f642,x:5,y:8},{code:0x1f643,x:6,y:8},{code:0x1f609,x:4,y:4},{code:0x1f60a,x:5,y:4},{code:0x1f607,x:2,y:4},{code:0x1f60d,x:8,y:4},{code:0x1f929,x:12,y:10},{code:0x1f617,x:4,y:5},{code:0x263a,x:14,y:5},{code:0x1f61a,x:7,y:5},{code:0x1f619,x:6,y:5},{code:0x1f60b,x:6,y:4},{code:0x1f61b,x:8,y:5},{code:0x1f61c,x:9,y:5},{code:0x1f92a,x:13,y:10},{code:0x1f61d,x:10,y:5},{code:0x1f911,x:10,y:9},{code:0x1f917,x:2,y:10},{code:0x1f92d,x:2,y:11},{code:0x1f92b,x:0,y:11},{code:0x1f914,x:13,y:9},{code:0x1f910,x:9,y:9},{code:0x1f928,x:11,y:10},{code:0x1f610,x:11,y:4},{code:0x1f611,x:12,y:4},{code:0x1f636,x:7,y:7},{code:0x1f60f,x:10,y:4},{code:0x1f612,x:13,y:4},{code:0x1f644,x:7,y:8},{code:0x1f62c,x:11,y:6},{code:0x1f925,x:8,y:10},{code:0x1f60c,x:7,y:4},{code:0x1f614,x:1,y:5},{code:0x1f62a,x:9,y:6},{code:0x1f924,x:7,y:10},{code:0x1f634,x:5,y:7},{code:0x1f637,x:8,y:7},{code:0x1f912,x:11,y:9},{code:0x1f915,x:0,y:10},{code:0x1f922,x:5,y:10},{code:0x1f92e,x:3,y:11},{code:0x1f927,x:10,y:10},{code:0x1f975,x:7,y:12},{code:0x1f976,x:8,y:12},{code:0x1f974,x:6,y:12},{code:0x1f635,x:6,y:7},{code:0x1f92f,x:4,y:11},{code:0x1f920,x:3,y:10},{code:0x1f973,x:5,y:12},{code:0x1f60e,x:9,y:4},{code:0x1f913,x:12,y:9},{code:0x1f9d0,x:1,y:13},{code:0x1f615,x:2,y:5},{code:0x1f61f,x:12,y:5},{code:0x1f641,x:4,y:8},{code:0x2639,x:14,y:4},{code:0x1f62e,x:13,y:6},{code:0x1f62f,x:0,y:7},{code:0x1f632,x:3,y:7},{code:0x1f633,x:4,y:7},{code:0x1f97a,x:9,y:12},{code:0x1f626,x:5,y:6},{code:0x1f627,x:6,y:6},{code:0x1f628,x:7,y:6},{code:0x1f630,x:1,y:7},{code:0x1f625,x:4,y:6},{code:0x1f622,x:1,y:6},{code:0x1f62d,x:12,y:6},{code:0x1f631,x:2,y:7},{code:0x1f616,x:3,y:5},{code:0x1f623,x:2,y:6},{code:0x1f61e,x:11,y:5},{code:0x1f613,x:0,y:5},{code:0x1f629,x:8,y:6},{code:0x1f62b,x:10,y:6},{code:0x1f624,x:3,y:6},{code:0x1f621,x:0,y:6},{code:0x1f620,x:13,y:5},{code:0x1f92c,x:1,y:11},{code:0x1f608,x:3,y:4},{code:0x1f47f,x:9,y:2},{code:0x1f480,x:10,y:2},{code:0x2620,x:14,y:3},{code:0x1f4a9,x:4,y:3},{code:0x1f921,x:4,y:10},{code:0x1f479,x:3,y:2},{code:0x1f47a,x:4,y:2},{code:0x1f47b,x:5,y:2},{code:0x1f47d,x:7,y:2},{code:0x1f47e,x:8,y:2},{code:0x1f916,x:1,y:10},{code:0x1f63a,x:11,y:7},{code:0x1f638,x:9,y:7},{code:0x1f639,x:10,y:7},{code:0x1f63b,x:12,y:7},{code:0x1f63c,x:13,y:7},{code:0x1f63d,x:0,y:8},{code:0x1f640,x:3,y:8},{code:0x1f63f,x:2,y:8},{code:0x1f63e,x:1,y:8},{code:0x1f648,x:11,y:8},{code:0x1f649,x:12,y:8},{code:0x1f64a,x:13,y:8},{code:0x1f476,x:0,y:2},{code:0x1f9d2,x:3,y:13},{code:0x1f466,x:12,y:0},{code:0x1f467,x:13,y:0},{code:0x1f471,x:9,y:1},{code:0x1f9d4,x:5,y:13},{code:0x1f9d3,x:4,y:13},{code:0x1f474,x:12,y:1},{code:0x1f475,x:13,y:1},{code:0x1f64d,x:1,y:9},{code:0x1f64e,x:2,y:9},{code:0x1f645,x:8,y:8},{code:0x1f646,x:9,y:8},{code:0x1f481,x:11,y:2},{code:0x1f64b,x:0,y:9},{code:0x1f647,x:10,y:8},{code:0x1f926,x:9,y:10},{code:0x1f937,x:10,y:11},{code:0x1f46e,x:6,y:1},{code:0x1f575,x:6,y:3},{code:0x1f482,x:12,y:2},{code:0x1f477,x:1,y:2},{code:0x1f934,x:7,y:11},{code:0x1f478,x:2,y:2},{code:0x1f473,x:11,y:1},{code:0x1f472,x:10,y:1},{code:0x1f9d5,x:6,y:13},{code:0x1f935,x:8,y:11},{code:0x1f470,x:8,y:1},{code:0x1f930,x:5,y:11},{code:0x1f931,x:6,y:11},{code:0x1f47c,x:6,y:2},{code:0x1f385,x:0,y:0},{code:0x1f936,x:9,y:11},{code:0x1f9b8,x:10,y:12},{code:0x1f9b9,x:11,y:12},{code:0x1f9d9,x:10,y:13},{code:0x1f9da,x:11,y:13},{code:0x1f9db,x:12,y:13},{code:0x1f9dc,x:13,y:13},{code:0x1f9dd,x:14,y:0},{code:0x1f9de,x:14,y:1},{code:0x1f9df,x:14,y:2},{code:0x1f486,x:0,y:3},{code:0x1f487,x:1,y:3},{code:0x1f6b6,x:6,y:9},{code:0x1f3c3,x:2,y:0},{code:0x1f483,x:13,y:2},{code:0x1f57a,x:7,y:3},{code:0x1f574,x:5,y:3},{code:0x1f46f,x:7,y:1},{code:0x1f9d6,x:7,y:13},{code:0x1f9d7,x:8,y:13},{code:0x1f93a,x:13,y:11},{code:0x1f3c7,x:4,y:0},{code:0x26f7,x:14,y:6},{code:0x1f3c2,x:1,y:0},{code:0x1f3cc,x:7,y:0},{code:0x1f3c4,x:3,y:0},{code:0x1f6a3,x:3,y:9},{code:0x1f3ca,x:5,y:0},{code:0x26f9,x:14,y:7},{code:0x1f3cb,x:6,y:0},{code:0x1f6b4,x:4,y:9},{code:0x1f6b5,x:5,y:9},{code:0x1f938,x:11,y:11},{code:0x1f93c,x:0,y:12},{code:0x1f93d,x:1,y:12},{code:0x1f93e,x:2,y:12},{code:0x1f939,x:12,y:11},{code:0x1f9d8,x:9,y:13},{code:0x1f6c0,x:7,y:9},{code:0x1f6cc,x:8,y:9},{code:0x1f46d,x:5,y:1},{code:0x1f46b,x:3,y:1},{code:0x1f46c,x:4,y:1},{code:0x1f48f,x:2,y:3},{code:0x1f491,x:3,y:3},{code:0x1f46a,x:2,y:1},{code:0x1f5e3,x:8,y:3},{code:0x1f464,x:10,y:0},{code:0x1f465,x:11,y:0},{code:0x1f463,x:9,y:0}],\n    \"body_and_clothes\": [{code:0x1f44b,x:3,y:1},{code:0x1f91a,x:10,y:7},{code:0x1f590,x:7,y:6},{code:0x270b,x:9,y:10},{code:0x1f596,x:9,y:6},{code:0x1f44c,x:4,y:1},{code:0x270c,x:10,y:10},{code:0x1f91e,x:3,y:8},{code:0x1f91f,x:4,y:8},{code:0x1f918,x:8,y:7},{code:0x1f919,x:9,y:7},{code:0x1f448,x:0,y:1},{code:0x1f449,x:1,y:1},{code:0x1f446,x:9,y:0},{code:0x1f595,x:8,y:6},{code:0x1f447,x:10,y:0},{code:0x261d,x:6,y:10},{code:0x1f44d,x:5,y:1},{code:0x1f44e,x:6,y:1},{code:0x270a,x:8,y:10},{code:0x1f44a,x:2,y:1},{code:0x1f91b,x:0,y:8},{code:0x1f91c,x:1,y:8},{code:0x1f44f,x:7,y:1},{code:0x1f64c,x:2,y:7},{code:0x1f450,x:8,y:1},{code:0x1f932,x:5,y:8},{code:0x1f91d,x:2,y:8},{code:0x1f64f,x:3,y:7},{code:0x270d,x:11,y:0},{code:0x1f485,x:6,y:3},{code:0x1f933,x:6,y:8},{code:0x1f4aa,x:9,y:5},{code:0x1f9b5,x:2,y:9},{code:0x1f9b6,x:3,y:9},{code:0x1f442,x:5,y:0},{code:0x1f443,x:6,y:0},{code:0x1f9e0,x:6,y:9},{code:0x1f9b7,x:4,y:9},{code:0x1f9b4,x:1,y:9},{code:0x1f440,x:3,y:0},{code:0x1f445,x:8,y:0},{code:0x1f444,x:7,y:0},{code:0x1f48b,x:7,y:3},{code:0x1f48c,x:8,y:3},{code:0x1f498,x:5,y:4},{code:0x1f49d,x:10,y:4},{code:0x1f496,x:3,y:4},{code:0x1f497,x:4,y:4},{code:0x1f493,x:0,y:4},{code:0x1f49e,x:0,y:5},{code:0x1f495,x:2,y:4},{code:0x1f49f,x:1,y:5},{code:0x2763,x:11,y:1},{code:0x1f494,x:1,y:4},{code:0x2764,x:11,y:2},{code:0x1f9e1,x:7,y:9},{code:0x1f49b,x:8,y:4},{code:0x1f49a,x:7,y:4},{code:0x1f499,x:6,y:4},{code:0x1f49c,x:9,y:4},{code:0x1f5a4,x:10,y:6},{code:0x1f4af,x:3,y:6},{code:0x1f4a2,x:2,y:5},{code:0x1f4a5,x:5,y:5},{code:0x1f4ab,x:10,y:5},{code:0x1f4a6,x:6,y:5},{code:0x1f4a8,x:8,y:5},{code:0x1f573,x:5,y:6},{code:0x1f4a3,x:3,y:5},{code:0x1f4ac,x:0,y:6},{code:0x1f441,x:4,y:0},{code:0x1f5e8,x:0,y:7},{code:0x1f5ef,x:1,y:7},{code:0x1f4ad,x:1,y:6},{code:0x1f4a4,x:4,y:5},{code:0x1f453,x:0,y:2},{code:0x1f576,x:6,y:6},{code:0x1f97d,x:9,y:8},{code:0x1f97c,x:8,y:8},{code:0x1f454,x:1,y:2},{code:0x1f455,x:2,y:2},{code:0x1f456,x:3,y:2},{code:0x1f9e3,x:9,y:9},{code:0x1f9e4,x:10,y:9},{code:0x1f9e5,x:0,y:10},{code:0x1f9e6,x:1,y:10},{code:0x1f457,x:4,y:2},{code:0x1f458,x:5,y:2},{code:0x1f459,x:6,y:2},{code:0x1f45a,x:7,y:2},{code:0x1f45b,x:8,y:2},{code:0x1f45c,x:9,y:2},{code:0x1f45d,x:10,y:2},{code:0x1f6cd,x:4,y:7},{code:0x1f392,x:0,y:0},{code:0x1f45e,x:0,y:3},{code:0x1f45f,x:1,y:3},{code:0x1f97e,x:10,y:8},{code:0x1f97f,x:0,y:9},{code:0x1f460,x:2,y:3},{code:0x1f461,x:3,y:3},{code:0x1f462,x:4,y:3},{code:0x1f451,x:9,y:1},{code:0x1f452,x:10,y:1},{code:0x1f3a9,x:2,y:0},{code:0x1f393,x:1,y:0},{code:0x1f9e2,x:8,y:9},{code:0x26d1,x:7,y:10},{code:0x1f4ff,x:4,y:6},{code:0x1f484,x:5,y:3},{code:0x1f48d,x:9,y:3},{code:0x1f48e,x:10,y:3}],\n    \"animals_and_nature\": [{code:0x1f435,x:6,y:6},{code:0x1f412,x:4,y:3},{code:0x1f98d,x:2,y:9},{code:0x1f436,x:7,y:6},{code:0x1f415,x:7,y:3},{code:0x1f429,x:6,y:5},{code:0x1f43a,x:0,y:7},{code:0x1f98a,x:10,y:8},{code:0x1f99d,x:7,y:10},{code:0x1f408,x:5,y:2},{code:0x1f981,x:1,y:8},{code:0x1f42f,x:1,y:6},{code:0x1f405,x:2,y:2},{code:0x1f406,x:3,y:2},{code:0x1f434,x:5,y:6},{code:0x1f40e,x:0,y:3},{code:0x1f984,x:4,y:8},{code:0x1f993,x:8,y:9},{code:0x1f98c,x:1,y:9},{code:0x1f42e,x:0,y:6},{code:0x1f402,x:10,y:1},{code:0x1f403,x:0,y:2},{code:0x1f404,x:1,y:2},{code:0x1f437,x:8,y:6},{code:0x1f416,x:9,y:3},{code:0x1f417,x:10,y:3},{code:0x1f43d,x:3,y:7},{code:0x1f40f,x:1,y:3},{code:0x1f411,x:3,y:3},{code:0x1f410,x:2,y:3},{code:0x1f42a,x:7,y:5},{code:0x1f42b,x:8,y:5},{code:0x1f999,x:3,y:10},{code:0x1f992,x:7,y:9},{code:0x1f418,x:0,y:4},{code:0x1f98f,x:4,y:9},{code:0x1f99b,x:5,y:10},{code:0x1f42d,x:10,y:5},{code:0x1f401,x:9,y:1},{code:0x1f400,x:8,y:1},{code:0x1f439,x:10,y:6},{code:0x1f430,x:2,y:6},{code:0x1f407,x:4,y:2},{code:0x1f43f,x:5,y:7},{code:0x1f994,x:9,y:9},{code:0x1f987,x:7,y:8},{code:0x1f43b,x:1,y:7},{code:0x1f428,x:5,y:5},{code:0x1f43c,x:2,y:7},{code:0x1f998,x:2,y:10},{code:0x1f9a1,x:11,y:0},{code:0x1f43e,x:4,y:7},{code:0x1f983,x:3,y:8},{code:0x1f414,x:6,y:3},{code:0x1f413,x:5,y:3},{code:0x1f423,x:0,y:5},{code:0x1f424,x:1,y:5},{code:0x1f425,x:2,y:5},{code:0x1f426,x:3,y:5},{code:0x1f427,x:4,y:5},{code:0x1f54a,x:7,y:7},{code:0x1f985,x:5,y:8},{code:0x1f986,x:6,y:8},{code:0x1f9a2,x:11,y:1},{code:0x1f989,x:9,y:8},{code:0x1f99a,x:4,y:10},{code:0x1f99c,x:6,y:10},{code:0x1f438,x:9,y:6},{code:0x1f40a,x:7,y:2},{code:0x1f422,x:10,y:4},{code:0x1f98e,x:3,y:9},{code:0x1f40d,x:10,y:2},{code:0x1f432,x:3,y:6},{code:0x1f409,x:6,y:2},{code:0x1f995,x:10,y:9},{code:0x1f996,x:0,y:10},{code:0x1f433,x:4,y:6},{code:0x1f40b,x:8,y:2},{code:0x1f42c,x:9,y:5},{code:0x1f41f,x:7,y:4},{code:0x1f420,x:8,y:4},{code:0x1f421,x:9,y:4},{code:0x1f988,x:8,y:8},{code:0x1f419,x:1,y:4},{code:0x1f41a,x:2,y:4},{code:0x1f40c,x:9,y:2},{code:0x1f98b,x:0,y:9},{code:0x1f41b,x:3,y:4},{code:0x1f41c,x:4,y:4},{code:0x1f41d,x:5,y:4},{code:0x1f41e,x:6,y:4},{code:0x1f997,x:1,y:10},{code:0x1f577,x:8,y:7},{code:0x1f578,x:9,y:7},{code:0x1f982,x:2,y:8},{code:0x1f99f,x:9,y:10},{code:0x1f9a0,x:10,y:10},{code:0x1f490,x:6,y:7},{code:0x1f338,x:6,y:0},{code:0x1f3f5,x:7,y:1},{code:0x1f339,x:7,y:0},{code:0x1f940,x:10,y:7},{code:0x1f33a,x:8,y:0},{code:0x1f33b,x:9,y:0},{code:0x1f33c,x:10,y:0},{code:0x1f337,x:5,y:0},{code:0x1f331,x:0,y:0},{code:0x1f344,x:6,y:1},{code:0x1f332,x:1,y:0},{code:0x1f333,x:2,y:0},{code:0x1f334,x:3,y:0},{code:0x1f335,x:4,y:0},{code:0x1f33e,x:0,y:1},{code:0x1f33f,x:1,y:1},{code:0x2618,x:11,y:8},{code:0x1f340,x:2,y:1},{code:0x1f341,x:3,y:1},{code:0x1f342,x:4,y:1},{code:0x1f343,x:5,y:1},{code:0x1f980,x:0,y:8},{code:0x1f99e,x:8,y:10},{code:0x1f990,x:5,y:9},{code:0x1f991,x:6,y:9}],\n    \"food_and_drinks\": [{code:0x1f347,x:8,y:0},{code:0x1f348,x:9,y:0},{code:0x1f349,x:0,y:1},{code:0x1f34a,x:1,y:1},{code:0x1f34b,x:2,y:1},{code:0x1f34c,x:3,y:1},{code:0x1f34d,x:4,y:1},{code:0x1f96d,x:10,y:0},{code:0x1f34e,x:5,y:1},{code:0x1f34f,x:6,y:1},{code:0x1f350,x:7,y:1},{code:0x1f351,x:8,y:1},{code:0x1f352,x:9,y:1},{code:0x1f353,x:0,y:2},{code:0x1f95d,x:4,y:8},{code:0x1f345,x:6,y:0},{code:0x1f965,x:2,y:9},{code:0x1f951,x:2,y:7},{code:0x1f346,x:7,y:0},{code:0x1f954,x:5,y:7},{code:0x1f955,x:6,y:7},{code:0x1f33d,x:5,y:0},{code:0x1f336,x:4,y:0},{code:0x1f952,x:3,y:7},{code:0x1f96c,x:9,y:9},{code:0x1f966,x:3,y:9},{code:0x1f95c,x:3,y:8},{code:0x1f330,x:3,y:0},{code:0x1f35e,x:1,y:3},{code:0x1f950,x:1,y:7},{code:0x1f956,x:7,y:7},{code:0x1f968,x:5,y:9},{code:0x1f96f,x:10,y:2},{code:0x1f95e,x:5,y:8},{code:0x1f9c0,x:10,y:3},{code:0x1f356,x:3,y:2},{code:0x1f357,x:4,y:2},{code:0x1f969,x:6,y:9},{code:0x1f953,x:4,y:7},{code:0x1f354,x:1,y:2},{code:0x1f35f,x:2,y:3},{code:0x1f355,x:2,y:2},{code:0x1f32d,x:0,y:0},{code:0x1f96a,x:7,y:9},{code:0x1f32e,x:1,y:0},{code:0x1f32f,x:2,y:0},{code:0x1f959,x:0,y:8},{code:0x1f95a,x:1,y:8},{code:0x1f373,x:2,y:5},{code:0x1f958,x:9,y:7},{code:0x1f372,x:1,y:5},{code:0x1f963,x:0,y:9},{code:0x1f957,x:8,y:7},{code:0x1f37f,x:4,y:6},{code:0x1f9c2,x:10,y:5},{code:0x1f96b,x:8,y:9},{code:0x1f371,x:0,y:5},{code:0x1f358,x:5,y:2},{code:0x1f359,x:6,y:2},{code:0x1f35a,x:7,y:2},{code:0x1f35b,x:8,y:2},{code:0x1f35c,x:9,y:2},{code:0x1f35d,x:0,y:3},{code:0x1f360,x:3,y:3},{code:0x1f362,x:5,y:3},{code:0x1f363,x:6,y:3},{code:0x1f364,x:7,y:3},{code:0x1f365,x:8,y:3},{code:0x1f96e,x:10,y:1},{code:0x1f361,x:4,y:3},{code:0x1f95f,x:6,y:8},{code:0x1f960,x:7,y:8},{code:0x1f961,x:8,y:8},{code:0x1f366,x:9,y:3},{code:0x1f367,x:0,y:4},{code:0x1f368,x:1,y:4},{code:0x1f369,x:2,y:4},{code:0x1f36a,x:3,y:4},{code:0x1f382,x:5,y:6},{code:0x1f370,x:9,y:4},{code:0x1f9c1,x:10,y:4},{code:0x1f967,x:4,y:9},{code:0x1f36b,x:4,y:4},{code:0x1f36c,x:5,y:4},{code:0x1f36d,x:6,y:4},{code:0x1f36e,x:7,y:4},{code:0x1f36f,x:8,y:4},{code:0x1f37c,x:1,y:6},{code:0x1f95b,x:2,y:8},{code:0x2615,x:4,y:10},{code:0x1f375,x:4,y:5},{code:0x1f376,x:5,y:5},{code:0x1f37e,x:3,y:6},{code:0x1f377,x:6,y:5},{code:0x1f378,x:7,y:5},{code:0x1f379,x:8,y:5},{code:0x1f37a,x:9,y:5},{code:0x1f37b,x:0,y:6},{code:0x1f942,x:8,y:6},{code:0x1f943,x:9,y:6},{code:0x1f964,x:1,y:9},{code:0x1f962,x:9,y:8},{code:0x1f37d,x:2,y:6},{code:0x1f374,x:3,y:5},{code:0x1f944,x:0,y:7},{code:0x1f52a,x:7,y:6},{code:0x1f3fa,x:6,y:6}],\n    \"travel_and_places\": [{code:0x1f30d,x:13,y:0},{code:0x1f30e,x:0,y:1},{code:0x1f30f,x:1,y:1},{code:0x1f310,x:2,y:1},{code:0x1f5fa,x:0,y:8},{code:0x1f5fe,x:4,y:8},{code:0x1f9ed,x:12,y:12},{code:0x1f3d4,x:9,y:3},{code:0x26f0,x:14,y:8},{code:0x1f30b,x:11,y:0},{code:0x1f5fb,x:1,y:8},{code:0x1f3d5,x:10,y:3},{code:0x1f3d6,x:11,y:3},{code:0x1f3dc,x:3,y:4},{code:0x1f3dd,x:4,y:4},{code:0x1f3de,x:5,y:4},{code:0x1f3df,x:6,y:4},{code:0x1f3db,x:2,y:4},{code:0x1f3d7,x:12,y:3},{code:0x1f9f1,x:13,y:12},{code:0x1f3d8,x:13,y:3},{code:0x1f3da,x:1,y:4},{code:0x1f3e0,x:7,y:4},{code:0x1f3e1,x:8,y:4},{code:0x1f3e2,x:9,y:4},{code:0x1f3e3,x:10,y:4},{code:0x1f3e4,x:11,y:4},{code:0x1f3e5,x:12,y:4},{code:0x1f3e6,x:13,y:4},{code:0x1f3e8,x:0,y:5},{code:0x1f3e9,x:1,y:5},{code:0x1f3ea,x:2,y:5},{code:0x1f3eb,x:3,y:5},{code:0x1f3ec,x:4,y:5},{code:0x1f3ed,x:5,y:5},{code:0x1f3ef,x:6,y:5},{code:0x1f3f0,x:7,y:5},{code:0x1f492,x:9,y:5},{code:0x1f5fc,x:2,y:8},{code:0x1f5fd,x:3,y:8},{code:0x26ea,x:14,y:7},{code:0x1f54c,x:0,y:6},{code:0x1f54d,x:1,y:6},{code:0x26e9,x:14,y:6},{code:0x1f54b,x:13,y:5},{code:0x26f2,x:14,y:10},{code:0x26fa,x:0,y:14},{code:0x1f301,x:1,y:0},{code:0x1f303,x:3,y:0},{code:0x1f3d9,x:0,y:4},{code:0x1f304,x:4,y:0},{code:0x1f305,x:5,y:0},{code:0x1f306,x:6,y:0},{code:0x1f307,x:7,y:0},{code:0x1f309,x:9,y:0},{code:0x2668,x:14,y:0},{code:0x1f3a0,x:1,y:3},{code:0x1f3a1,x:2,y:3},{code:0x1f3a2,x:3,y:3},{code:0x1f488,x:8,y:5},{code:0x1f3aa,x:5,y:3},{code:0x1f682,x:8,y:8},{code:0x1f683,x:9,y:8},{code:0x1f684,x:10,y:8},{code:0x1f685,x:11,y:8},{code:0x1f686,x:12,y:8},{code:0x1f687,x:13,y:8},{code:0x1f688,x:0,y:9},{code:0x1f689,x:1,y:9},{code:0x1f68a,x:2,y:9},{code:0x1f69d,x:7,y:10},{code:0x1f69e,x:8,y:10},{code:0x1f68b,x:3,y:9},{code:0x1f68c,x:4,y:9},{code:0x1f68d,x:5,y:9},{code:0x1f68e,x:6,y:9},{code:0x1f690,x:8,y:9},{code:0x1f691,x:9,y:9},{code:0x1f692,x:10,y:9},{code:0x1f693,x:11,y:9},{code:0x1f694,x:12,y:9},{code:0x1f695,x:13,y:9},{code:0x1f696,x:0,y:10},{code:0x1f697,x:1,y:10},{code:0x1f698,x:2,y:10},{code:0x1f699,x:3,y:10},{code:0x1f69a,x:4,y:10},{code:0x1f69b,x:5,y:10},{code:0x1f69c,x:6,y:10},{code:0x1f3ce,x:8,y:3},{code:0x1f3cd,x:7,y:3},{code:0x1f6f5,x:4,y:12},{code:0x1f6b2,x:4,y:11},{code:0x1f6f4,x:3,y:12},{code:0x1f6f9,x:7,y:12},{code:0x1f68f,x:7,y:9},{code:0x1f6e3,x:9,y:11},{code:0x1f6e4,x:10,y:11},{code:0x1f6e2,x:8,y:11},{code:0x26fd,x:1,y:14},{code:0x1f6a8,x:3,y:11},{code:0x1f6a5,x:0,y:11},{code:0x1f6a6,x:1,y:11},{code:0x1f6d1,x:6,y:11},{code:0x1f6a7,x:2,y:11},{code:0x2693,x:14,y:1},{code:0x26f5,x:14,y:13},{code:0x1f6f6,x:5,y:12},{code:0x1f3a3,x:4,y:3},{code:0x1f6a4,x:13,y:10},{code:0x1f6f3,x:2,y:12},{code:0x26f4,x:14,y:12},{code:0x1f6e5,x:11,y:11},{code:0x1f6a2,x:12,y:10},{code:0x2708,x:2,y:14},{code:0x1f6e9,x:12,y:11},{code:0x1f6eb,x:13,y:11},{code:0x1f6ec,x:0,y:12},{code:0x1f4ba,x:11,y:5},{code:0x1f681,x:7,y:8},{code:0x1f69f,x:9,y:10},{code:0x1f6a0,x:10,y:10},{code:0x1f6a1,x:11,y:10},{code:0x1f6f0,x:1,y:12},{code:0x1f680,x:6,y:8},{code:0x1f6f8,x:6,y:12},{code:0x1f6ce,x:5,y:11},{code:0x1f9f3,x:0,y:13},{code:0x231b,x:3,y:13},{code:0x23f3,x:7,y:13},{code:0x231a,x:2,y:13},{code:0x23f0,x:4,y:13},{code:0x23f1,x:5,y:13},{code:0x23f2,x:6,y:13},{code:0x1f570,x:12,y:7},{code:0x1f55b,x:13,y:6},{code:0x1f567,x:11,y:7},{code:0x1f550,x:2,y:6},{code:0x1f55c,x:0,y:7},{code:0x1f551,x:3,y:6},{code:0x1f55d,x:1,y:7},{code:0x1f552,x:4,y:6},{code:0x1f55e,x:2,y:7},{code:0x1f553,x:5,y:6},{code:0x1f55f,x:3,y:7},{code:0x1f554,x:6,y:6},{code:0x1f560,x:4,y:7},{code:0x1f555,x:7,y:6},{code:0x1f561,x:5,y:7},{code:0x1f556,x:8,y:6},{code:0x1f562,x:6,y:7},{code:0x1f557,x:9,y:6},{code:0x1f563,x:7,y:7},{code:0x1f558,x:10,y:6},{code:0x1f564,x:8,y:7},{code:0x1f559,x:11,y:6},{code:0x1f565,x:9,y:7},{code:0x1f55a,x:12,y:6},{code:0x1f566,x:10,y:7},{code:0x1f311,x:3,y:1},{code:0x1f312,x:4,y:1},{code:0x1f313,x:5,y:1},{code:0x1f314,x:6,y:1},{code:0x1f315,x:7,y:1},{code:0x1f316,x:8,y:1},{code:0x1f317,x:9,y:1},{code:0x1f318,x:10,y:1},{code:0x1f319,x:11,y:1},{code:0x1f31a,x:12,y:1},{code:0x1f31b,x:13,y:1},{code:0x1f31c,x:0,y:2},{code:0x1f321,x:5,y:2},{code:0x2600,x:8,y:13},{code:0x1f31d,x:1,y:2},{code:0x1f31e,x:2,y:2},{code:0x2b50,x:4,y:14},{code:0x1f31f,x:3,y:2},{code:0x1f320,x:4,y:2},{code:0x1f30c,x:12,y:0},{code:0x2601,x:9,y:13},{code:0x26c5,x:14,y:4},{code:0x26c8,x:14,y:5},{code:0x1f324,x:6,y:2},{code:0x1f325,x:7,y:2},{code:0x1f326,x:8,y:2},{code:0x1f327,x:9,y:2},{code:0x1f328,x:10,y:2},{code:0x1f329,x:11,y:2},{code:0x1f32a,x:12,y:2},{code:0x1f32b,x:13,y:2},{code:0x1f32c,x:0,y:3},{code:0x1f300,x:0,y:0},{code:0x1f308,x:8,y:0},{code:0x1f302,x:2,y:0},{code:0x2602,x:10,y:13},{code:0x2614,x:13,y:13},{code:0x26f1,x:14,y:9},{code:0x26a1,x:14,y:2},{code:0x2744,x:3,y:14},{code:0x2603,x:11,y:13},{code:0x26c4,x:14,y:3},{code:0x2604,x:12,y:13},{code:0x1f525,x:12,y:5},{code:0x1f4a7,x:10,y:5},{code:0x1f30a,x:10,y:0}],\n    \"events\": [{code:0x1f383,x:4,y:0},{code:0x1f384,x:5,y:0},{code:0x1f386,x:6,y:0},{code:0x1f387,x:7,y:0},{code:0x1f9e8,x:5,y:6},{code:0x2728,x:9,y:3},{code:0x1f388,x:8,y:0},{code:0x1f389,x:0,y:1},{code:0x1f38a,x:1,y:1},{code:0x1f38b,x:2,y:1},{code:0x1f38d,x:3,y:1},{code:0x1f38e,x:4,y:1},{code:0x1f38f,x:5,y:1},{code:0x1f390,x:6,y:1},{code:0x1f391,x:7,y:1},{code:0x1f9e7,x:4,y:6},{code:0x1f380,x:2,y:0},{code:0x1f381,x:3,y:0},{code:0x1f397,x:0,y:2},{code:0x1f39f,x:1,y:2},{code:0x1f3ab,x:3,y:2},{code:0x1f396,x:8,y:1},{code:0x1f3c6,x:7,y:3},{code:0x1f3c5,x:6,y:3},{code:0x1f947,x:4,y:5},{code:0x1f948,x:5,y:5},{code:0x1f949,x:6,y:5},{code:0x26bd,x:8,y:8},{code:0x26be,x:9,y:0},{code:0x1f94e,x:2,y:6},{code:0x1f3c0,x:5,y:3},{code:0x1f3d0,x:2,y:4},{code:0x1f3c8,x:8,y:3},{code:0x1f3c9,x:0,y:4},{code:0x1f3be,x:3,y:3},{code:0x1f94f,x:3,y:6},{code:0x1f3b3,x:1,y:3},{code:0x1f3cf,x:1,y:4},{code:0x1f3d1,x:3,y:4},{code:0x1f3d2,x:4,y:4},{code:0x1f94d,x:1,y:6},{code:0x1f3d3,x:5,y:4},{code:0x1f3f8,x:6,y:4},{code:0x1f94a,x:7,y:5},{code:0x1f94b,x:8,y:5},{code:0x1f945,x:3,y:5},{code:0x26f3,x:9,y:1},{code:0x26f8,x:9,y:2},{code:0x1f3bd,x:2,y:3},{code:0x1f3bf,x:4,y:3},{code:0x1f6f7,x:2,y:5},{code:0x1f94c,x:0,y:6},{code:0x1f3af,x:6,y:2},{code:0x1f3b1,x:8,y:2},{code:0x1f52e,x:8,y:4},{code:0x1f9ff,x:1,y:7},{code:0x1f3ae,x:5,y:2},{code:0x1f579,x:0,y:5},{code:0x1f3b0,x:7,y:2},{code:0x1f3b2,x:0,y:3},{code:0x1f9e9,x:6,y:6},{code:0x1f9f8,x:0,y:7},{code:0x2660,x:4,y:8},{code:0x2665,x:6,y:8},{code:0x2666,x:7,y:8},{code:0x2663,x:5,y:8},{code:0x265f,x:3,y:8},{code:0x1f0cf,x:1,y:0},{code:0x1f004,x:0,y:0},{code:0x1f3ad,x:4,y:2},{code:0x1f5bc,x:1,y:5},{code:0x1f3a8,x:2,y:2},{code:0x1f9f5,x:7,y:6},{code:0x1f9f6,x:8,y:6}],\n    \"objects\": [{code:0x1f507,x:1,y:7},{code:0x1f508,x:2,y:7},{code:0x1f509,x:3,y:7},{code:0x1f50a,x:4,y:7},{code:0x1f4e2,x:3,y:5},{code:0x1f4e3,x:4,y:5},{code:0x1f4ef,x:3,y:6},{code:0x1f514,x:1,y:8},{code:0x1f515,x:2,y:8},{code:0x1f3bc,x:2,y:1},{code:0x1f3b5,x:8,y:0},{code:0x1f3b6,x:9,y:0},{code:0x1f399,x:0,y:0},{code:0x1f39a,x:1,y:0},{code:0x1f39b,x:2,y:0},{code:0x1f3a4,x:4,y:0},{code:0x1f3a7,x:6,y:0},{code:0x1f4fb,x:11,y:6},{code:0x1f3b7,x:10,y:0},{code:0x1f3b8,x:11,y:0},{code:0x1f3b9,x:12,y:0},{code:0x1f3ba,x:0,y:1},{code:0x1f3bb,x:1,y:1},{code:0x1f941,x:6,y:11},{code:0x1f4f1,x:5,y:6},{code:0x1f4f2,x:6,y:6},{code:0x260e,x:13,y:3},{code:0x1f4de,x:12,y:4},{code:0x1f4df,x:0,y:5},{code:0x1f4e0,x:1,y:5},{code:0x1f50b,x:5,y:7},{code:0x1f50c,x:6,y:7},{code:0x1f4bb,x:4,y:2},{code:0x1f5a5,x:5,y:9},{code:0x1f5a8,x:6,y:9},{code:0x2328,x:13,y:2},{code:0x1f5b1,x:7,y:9},{code:0x1f5b2,x:8,y:9},{code:0x1f4bd,x:6,y:2},{code:0x1f4be,x:7,y:2},{code:0x1f4bf,x:8,y:2},{code:0x1f4c0,x:9,y:2},{code:0x1f9ee,x:2,y:12},{code:0x1f3a5,x:5,y:0},{code:0x1f39e,x:3,y:0},{code:0x1f4fd,x:0,y:7},{code:0x1f3ac,x:7,y:0},{code:0x1f4fa,x:10,y:6},{code:0x1f4f7,x:7,y:6},{code:0x1f4f8,x:8,y:6},{code:0x1f4f9,x:9,y:6},{code:0x1f4fc,x:12,y:6},{code:0x1f50d,x:7,y:7},{code:0x1f50e,x:8,y:7},{code:0x1f56f,x:12,y:8},{code:0x1f4a1,x:8,y:1},{code:0x1f526,x:5,y:8},{code:0x1f3ee,x:3,y:1},{code:0x1f4d4,x:3,y:4},{code:0x1f4d5,x:4,y:4},{code:0x1f4d6,x:5,y:4},{code:0x1f4d7,x:6,y:4},{code:0x1f4d8,x:7,y:4},{code:0x1f4d9,x:8,y:4},{code:0x1f4da,x:9,y:4},{code:0x1f4d3,x:2,y:4},{code:0x1f4d2,x:1,y:4},{code:0x1f4c3,x:12,y:2},{code:0x1f4dc,x:10,y:4},{code:0x1f4c4,x:0,y:3},{code:0x1f4f0,x:4,y:6},{code:0x1f5de,x:4,y:10},{code:0x1f4d1,x:0,y:4},{code:0x1f516,x:3,y:8},{code:0x1f3f7,x:4,y:1},{code:0x1f4b0,x:9,y:1},{code:0x1f4b4,x:11,y:1},{code:0x1f4b5,x:12,y:1},{code:0x1f4b6,x:0,y:2},{code:0x1f4b7,x:1,y:2},{code:0x1f4b8,x:2,y:2},{code:0x1f4b3,x:10,y:1},{code:0x1f9fe,x:13,y:0},{code:0x1f4b9,x:3,y:2},{code:0x2709,x:1,y:13},{code:0x1f4e7,x:8,y:5},{code:0x1f4e8,x:9,y:5},{code:0x1f4e9,x:10,y:5},{code:0x1f4e4,x:5,y:5},{code:0x1f4e5,x:6,y:5},{code:0x1f4e6,x:7,y:5},{code:0x1f4eb,x:12,y:5},{code:0x1f4ea,x:11,y:5},{code:0x1f4ec,x:0,y:6},{code:0x1f4ed,x:1,y:6},{code:0x1f4ee,x:2,y:6},{code:0x1f5f3,x:6,y:10},{code:0x270f,x:2,y:13},{code:0x2712,x:3,y:13},{code:0x1f58b,x:2,y:9},{code:0x1f58a,x:1,y:9},{code:0x1f58c,x:3,y:9},{code:0x1f58d,x:4,y:9},{code:0x1f4dd,x:11,y:4},{code:0x1f4bc,x:5,y:2},{code:0x1f4c1,x:10,y:2},{code:0x1f4c2,x:11,y:2},{code:0x1f5c2,x:9,y:9},{code:0x1f4c5,x:1,y:3},{code:0x1f4c6,x:2,y:3},{code:0x1f5d2,x:0,y:10},{code:0x1f5d3,x:1,y:10},{code:0x1f4c7,x:3,y:3},{code:0x1f4c8,x:4,y:3},{code:0x1f4c9,x:5,y:3},{code:0x1f4ca,x:6,y:3},{code:0x1f4cb,x:7,y:3},{code:0x1f4cc,x:8,y:3},{code:0x1f4cd,x:9,y:3},{code:0x1f4ce,x:10,y:3},{code:0x1f587,x:0,y:9},{code:0x1f4cf,x:11,y:3},{code:0x1f4d0,x:12,y:3},{code:0x2702,x:0,y:13},{code:0x1f5c3,x:10,y:9},{code:0x1f5c4,x:11,y:9},{code:0x1f5d1,x:12,y:9},{code:0x1f512,x:12,y:7},{code:0x1f513,x:0,y:8},{code:0x1f50f,x:9,y:7},{code:0x1f510,x:10,y:7},{code:0x1f511,x:11,y:7},{code:0x1f5dd,x:3,y:10},{code:0x1f528,x:7,y:8},{code:0x26cf,x:13,y:11},{code:0x2692,x:13,y:4},{code:0x1f6e0,x:3,y:11},{code:0x1f5e1,x:5,y:10},{code:0x2694,x:13,y:5},{code:0x1f52b,x:9,y:8},{code:0x1f3f9,x:5,y:1},{code:0x1f6e1,x:4,y:11},{code:0x1f527,x:6,y:8},{code:0x1f529,x:8,y:8},{code:0x2699,x:13,y:8},{code:0x1f5dc,x:2,y:10},{code:0x2696,x:13,y:6},{code:0x1f517,x:4,y:8},{code:0x26d3,x:13,y:12},{code:0x1f9f0,x:4,y:12},{code:0x1f9f2,x:5,y:12},{code:0x2697,x:13,y:7},{code:0x1f9ea,x:12,y:11},{code:0x1f9eb,x:0,y:12},{code:0x1f9ec,x:1,y:12},{code:0x1f52c,x:10,y:8},{code:0x1f52d,x:11,y:8},{code:0x1f4e1,x:2,y:5},{code:0x1f489,x:6,y:1},{code:0x1f48a,x:7,y:1},{code:0x1f6aa,x:8,y:10},{code:0x1f6cf,x:1,y:11},{code:0x1f6cb,x:0,y:11},{code:0x1f6bd,x:10,y:10},{code:0x1f6bf,x:11,y:10},{code:0x1f6c1,x:12,y:10},{code:0x1f9f4,x:6,y:12},{code:0x1f9f7,x:7,y:12},{code:0x1f9f9,x:8,y:12},{code:0x1f9fa,x:9,y:12},{code:0x1f9fb,x:10,y:12},{code:0x1f9fc,x:11,y:12},{code:0x1f9fd,x:12,y:12},{code:0x1f9ef,x:3,y:12},{code:0x1f6d2,x:2,y:11},{code:0x1f6ac,x:9,y:10},{code:0x26b0,x:13,y:9},{code:0x26b1,x:13,y:10},{code:0x1f5ff,x:7,y:10}],\n    \"signs\": [{code:0x1f6ae,x:4,y:8},{code:0x1f6b0,x:6,y:8},{code:0x267f,x:3,y:13},{code:0x1f6b9,x:11,y:8},{code:0x1f6ba,x:12,y:8},{code:0x1f6bb,x:13,y:8},{code:0x1f6bc,x:14,y:8},{code:0x1f6be,x:0,y:9},{code:0x1f6c2,x:1,y:9},{code:0x1f6c3,x:2,y:9},{code:0x1f6c4,x:3,y:9},{code:0x1f6c5,x:4,y:9},{code:0x1f3e7,x:13,y:4},{code:0x26a0,x:7,y:13},{code:0x1f6b8,x:10,y:8},{code:0x26d4,x:11,y:13},{code:0x1f6ab,x:2,y:8},{code:0x1f6b3,x:8,y:8},{code:0x1f6ad,x:3,y:8},{code:0x1f6af,x:5,y:8},{code:0x1f6b1,x:7,y:8},{code:0x1f6b7,x:9,y:8},{code:0x1f4f5,x:7,y:5},{code:0x1f51e,x:7,y:6},{code:0x2622,x:10,y:11},{code:0x2623,x:11,y:11},{code:0x2b06,x:15,y:5},{code:0x2197,x:14,y:9},{code:0x27a1,x:14,y:14},{code:0x2198,x:0,y:10},{code:0x2b07,x:15,y:6},{code:0x2199,x:1,y:10},{code:0x2b05,x:15,y:4},{code:0x2196,x:13,y:9},{code:0x2195,x:12,y:9},{code:0x2194,x:11,y:9},{code:0x21a9,x:2,y:10},{code:0x21aa,x:3,y:10},{code:0x2934,x:15,y:2},{code:0x2935,x:15,y:3},{code:0x1f503,x:12,y:5},{code:0x1f504,x:13,y:5},{code:0x1f519,x:2,y:6},{code:0x1f51a,x:3,y:6},{code:0x1f51b,x:4,y:6},{code:0x1f51c,x:5,y:6},{code:0x1f51d,x:6,y:6},{code:0x1f6d0,x:5,y:9},{code:0x269b,x:5,y:13},{code:0x1f549,x:14,y:7},{code:0x2721,x:1,y:14},{code:0x2638,x:1,y:12},{code:0x262f,x:0,y:12},{code:0x271d,x:0,y:14},{code:0x2626,x:12,y:11},{code:0x262a,x:13,y:11},{code:0x262e,x:14,y:11},{code:0x1f54e,x:0,y:8},{code:0x1f52f,x:14,y:6},{code:0x2648,x:4,y:12},{code:0x2649,x:5,y:12},{code:0x264a,x:6,y:12},{code:0x264b,x:7,y:12},{code:0x264c,x:8,y:12},{code:0x264d,x:9,y:12},{code:0x264e,x:10,y:12},{code:0x264f,x:11,y:12},{code:0x2650,x:12,y:12},{code:0x2651,x:13,y:12},{code:0x2652,x:14,y:12},{code:0x2653,x:0,y:13},{code:0x26ce,x:10,y:13},{code:0x1f500,x:9,y:5},{code:0x1f501,x:10,y:5},{code:0x1f502,x:11,y:5},{code:0x25b6,x:3,y:11},{code:0x23e9,x:5,y:10},{code:0x23ed,x:9,y:10},{code:0x23ef,x:11,y:10},{code:0x25c0,x:4,y:11},{code:0x23ea,x:6,y:10},{code:0x23ee,x:10,y:10},{code:0x1f53c,x:12,y:7},{code:0x23eb,x:7,y:10},{code:0x1f53d,x:13,y:7},{code:0x23ec,x:8,y:10},{code:0x23f8,x:12,y:10},{code:0x23f9,x:13,y:10},{code:0x23fa,x:14,y:10},{code:0x23cf,x:4,y:10},{code:0x1f3a6,x:11,y:4},{code:0x1f505,x:14,y:5},{code:0x1f506,x:0,y:6},{code:0x1f4f6,x:8,y:5},{code:0x1f4f3,x:5,y:5},{code:0x1f4f4,x:6,y:5},{code:0x2640,x:2,y:12},{code:0x2642,x:3,y:12},{code:0x2716,x:14,y:13},{code:0x2795,x:11,y:14},{code:0x2796,x:12,y:14},{code:0x2797,x:13,y:14},{code:0x267e,x:2,y:13},{code:0x203c,x:6,y:9},{code:0x2049,x:7,y:9},{code:0x2753,x:7,y:14},{code:0x2754,x:8,y:14},{code:0x2755,x:9,y:14},{code:0x2757,x:10,y:14},{code:0x3030,x:15,y:10},{code:0x1f4b1,x:2,y:5},{code:0x1f4b2,x:3,y:5},{code:0x2695,x:4,y:13},{code:0x267b,x:1,y:13},{code:0x269c,x:6,y:13},{code:0x1f531,x:1,y:7},{code:0x1f4db,x:4,y:5},{code:0x1f530,x:0,y:7},{code:0x2b55,x:15,y:9},{code:0x2705,x:12,y:13},{code:0x2611,x:9,y:11},{code:0x2714,x:13,y:13},{code:0x274c,x:5,y:14},{code:0x274e,x:6,y:14},{code:0x27b0,x:15,y:0},{code:0x27bf,x:15,y:1},{code:0x303d,x:15,y:11},{code:0x2733,x:2,y:14},{code:0x2734,x:3,y:14},{code:0x2747,x:4,y:14},{code:0x00a9,x:12,y:0},{code:0x00ae,x:13,y:0},{code:0x2122,x:9,y:9},{code:0x1f520,x:9,y:6},{code:0x1f521,x:10,y:6},{code:0x1f522,x:11,y:6},{code:0x1f523,x:12,y:6},{code:0x1f524,x:13,y:6},{code:0x1f170,x:14,y:0},{code:0x1f18e,x:3,y:1},{code:0x1f171,x:0,y:1},{code:0x1f191,x:4,y:1},{code:0x1f192,x:5,y:1},{code:0x1f193,x:6,y:1},{code:0x2139,x:10,y:9},{code:0x1f194,x:7,y:1},{code:0x24c2,x:0,y:11},{code:0x1f195,x:8,y:1},{code:0x1f196,x:9,y:1},{code:0x1f17e,x:1,y:1},{code:0x1f197,x:10,y:1},{code:0x1f17f,x:2,y:1},{code:0x1f198,x:11,y:1},{code:0x1f199,x:12,y:1},{code:0x1f19a,x:13,y:1},{code:0x1f201,x:10,y:3},{code:0x1f202,x:11,y:3},{code:0x1f237,x:4,y:4},{code:0x1f236,x:3,y:4},{code:0x1f22f,x:13,y:3},{code:0x1f250,x:8,y:4},{code:0x1f239,x:6,y:4},{code:0x1f21a,x:12,y:3},{code:0x1f232,x:14,y:3},{code:0x1f251,x:9,y:4},{code:0x1f238,x:5,y:4},{code:0x1f234,x:1,y:4},{code:0x1f233,x:0,y:4},{code:0x3297,x:15,y:12},{code:0x3299,x:15,y:13},{code:0x1f23a,x:7,y:4},{code:0x1f235,x:2,y:4},{code:0x1f534,x:4,y:7},{code:0x1f535,x:5,y:7},{code:0x26ab,x:9,y:13},{code:0x26aa,x:8,y:13},{code:0x2b1c,x:15,y:8},{code:0x25fc,x:6,y:11},{code:0x25fb,x:5,y:11},{code:0x25fe,x:8,y:11},{code:0x25fd,x:7,y:11},{code:0x25aa,x:1,y:11},{code:0x25ab,x:2,y:11},{code:0x1f536,x:6,y:7},{code:0x1f537,x:7,y:7},{code:0x1f538,x:8,y:7},{code:0x1f539,x:9,y:7},{code:0x1f53a,x:10,y:7},{code:0x1f53b,x:11,y:7},{code:0x1f4a0,x:1,y:5},{code:0x1f518,x:1,y:6},{code:0x1f533,x:3,y:7},{code:0x1f532,x:2,y:7},{code:0x1f3c1,x:12,y:4},{code:0x1f6a9,x:1,y:8},{code:0x1f38c,x:10,y:4},{code:0x1f3f4,x:0,y:5},{code:0x1f3f3,x:14,y:4},{code:0x1f1e6,x:14,y:1},{code:0x1f1e7,x:0,y:2},{code:0x1f1e8,x:1,y:2},{code:0x1f1e9,x:2,y:2},{code:0x1f1ea,x:3,y:2},{code:0x1f1eb,x:4,y:2},{code:0x1f1ec,x:5,y:2},{code:0x1f1ed,x:6,y:2},{code:0x1f1ee,x:7,y:2},{code:0x1f1ef,x:8,y:2},{code:0x1f1f0,x:9,y:2},{code:0x1f1f1,x:10,y:2},{code:0x1f1f2,x:11,y:2},{code:0x1f1f3,x:12,y:2},{code:0x1f1f4,x:13,y:2},{code:0x1f1f5,x:14,y:2},{code:0x1f1f6,x:0,y:3},{code:0x1f1f7,x:1,y:3},{code:0x1f1f8,x:2,y:3},{code:0x1f1f9,x:3,y:3},{code:0x1f1fa,x:4,y:3},{code:0x1f1fb,x:5,y:3},{code:0x1f1fc,x:6,y:3},{code:0x1f1fd,x:7,y:3},{code:0x1f1fe,x:8,y:3},{code:0x1f1ff,x:9,y:3}]\n};\n\nvar getEmoji = function (code) {\n    if (code < 0x10000) {\n        return String.fromCharCode(code);\n    }\n    var offset = code - 0x10000,\n        lead = 0xd800 + (offset >> 10),\n        trail = 0xdc00 + (offset & 0x3ff);\n    return String.fromCharCode(lead)+String.fromCharCode(trail);\n};\n\nvar emoji_data = {}, all = {};\n\nvar getEmojiByIndex = function (idx) {\n    var emoji;\n    for (var emoji_list in raw_data) {\n       if (raw_data[emoji_list][idx]) {\n           emoji = raw_data[emoji_list][idx];\n           break;\n       }\n    }\n    return getEmoji(emoji.code);\n};\n\nfor (var emoji_list in raw_data) {\n    _.each(raw_data[emoji_list], function (item) {\n        var emoji = getEmoji(item.code);\n        emoji_data[emoji] = item;\n        !all[emoji_list] && (all[emoji_list] = []);\n        all[emoji_list].push(emoji);\n    });\n}\n\nvar emoji_regexp = /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/g;\n\nString.prototype.emojify = function (options) {\n    options || (options = {});\n    let emoji_size = options.emoji_size || 20,\n        title = options.title ? ` title=\"${options.title}\" ` :\"\";\n    return this.replace(emoji_regexp, function (emoji) {\n        return `<span ${title} class=\"emoji emoji-w${emoji_size}\" data-emoji=\"${emoji}\"><span class=\"positioned-emoji\">${emoji}</span></span>`;\n    });\n};\n\nString.prototype.removeEmoji = function () {\n    return this.replace(emoji_regexp, function (emoji) {\n        var data = emoji_data[emoji];\n        if (data) {\n            return \"\";\n        } else {\n            return emoji;\n        }\n    });\n};\n\nString.prototype.replaceEmoji = function () {\n    return this.replace(emoji_regexp, function (emoji) {\n        var data = emoji_data[emoji];\n        if (data) {\n            return \" \";\n        } else {\n            return emoji;\n        }\n    });\n};\n\n$.fn.emojify = function (selector, options) {\n    this.find(selector).each(function () {\n        var text = $(this).html();\n        if ($(`<div>${text}</div>`).find('.positioned-emoji').length)\n            return;\n        $(this).html(text.emojify(options));\n    });\n    return this;\n};\n\nexport default {\n    all: all,\n    get: getEmoji,\n    getByIndex: getEmojiByIndex\n};\n","import deps from \"xabber-dependencies\"\n\nvar _ = deps._,\n    $ = deps.$,\n    hasher = deps.SHA1.b64_sha1;\n\nvar _image_cache = {};\n\nvar COLORS = [\n    \"#1abc9c\", \"#16a085\", \"#f1c40f\", \"#f39c12\",\n    \"#2ecc71\", \"#27ae60\", \"#e67e22\", \"#d35400\",\n    \"#3498db\", \"#2980b9\", \"#e74c3c\", \"#c0392b\",\n    \"#9b59b6\", \"#8e44ad\", \"#bdc3c7\", \"#34495e\",\n    \"#2c3e50\", \"#95a5a6\", \"#7f8c8d\", \"#ec87bf\",\n    \"#d870ad\", \"#f69785\", \"#9ba37e\", \"#b49255\",\n    \"#a94136\"\n];\n\nvar MAX_SIZE = 200;\nvar MAX_IMG_SIZE = 1280;\n\nvar b64toBlob = function (b64Data, contentType, sliceSize) {\n    contentType = contentType || '';\n    sliceSize = sliceSize || 512;\n    var byteCharacters = atob(b64Data);\n    var byteArrays = [];\n    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n        var slice = byteCharacters.slice(offset, offset + sliceSize);\n        var byteNumbers = new Array(slice.length);\n        for (var i = 0; i < slice.length; i++) {\n            byteNumbers[i] = slice.charCodeAt(i);\n        }\n        var byteArray = new Uint8Array(byteNumbers);\n        byteArrays.push(byteArray);\n    }\n    var blob = new Blob(byteArrays, {type: contentType});\n    return blob;\n};\n\nvar CachedImage = function (image) {\n    this.url = window.URL.createObjectURL(b64toBlob(image));\n    _image_cache[image] = this;\n    return this;\n};\n\nvar getCachedImage = function (image) {\n    // save often used image and get blob url for it\n    if (image instanceof CachedImage) {\n        return image;\n    } else if (image && (_.isString(image) && image.indexOf('http') == 0 || _.isObject(image) && image.url && image.url.indexOf('http') == 0)) {\n        if (_.isString(image))\n            return {url: image};\n        else if (_.isObject(image))\n            return image;\n    }\n    return _image_cache[image] || new CachedImage(image);\n};\n\nvar getDefaultAvatar = function (name, color, font, width, height) {\n    // generate colored avatar with first letters of username\n    var canvas = document.createElement('canvas'),\n        ctx = canvas.getContext('2d'),\n        _name = name ? name.trim() : '',\n        first_name, last_name, splitted_name = _name.split(' ', 2),\n        first_letter, second_letter;\n        // color_index;\n    first_name = splitted_name[0];\n    last_name = (splitted_name.length > 1 ? splitted_name[1] : '');\n    first_letter = first_name[0] || '';\n    if (last_name) {\n        second_letter = last_name[0];\n    } else {\n        second_letter = (first_name.length > 1 ? first_name[1] : '');\n    }\n    // color_index = Math.floor(hasher(_name).charCodeAt(0) % COLORS.length);\n    canvas.width = width || 256;\n    canvas.height = height || 256;\n    ctx.rect(0, 0, width || 256, height || 256);\n    ctx.fillStyle = color || getAccountColor(name);//COLORS[color_index];\n    ctx.fill();\n    ctx.font = font || \"bold 100px sans-serif\";\n    ctx.fillStyle = font ? '#000' : \"#FFF\";\n    ctx.textAlign = \"center\";\n    if (font){\n        ctx.textBaseline = 'ideographic';\n        ctx.fillText(_name, width/2 || 128, (height/2 + height *0.33) || 160);\n    }\n    else\n        ctx.fillText(first_letter.toUpperCase()+second_letter.toUpperCase(), 128, 160);\n    var image = canvas.toDataURL().replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n    return image;\n};\n\nvar getAccountColor = function (name) {\n    var _name = name ? name.trim() : '',\n        color_index = Math.floor(hasher(_name).charCodeAt(0) % COLORS.length);\n    return COLORS[color_index];\n};\n\nvar getImageSize = function (size, max_size) {\n    if (max_size){\n        if (size.width > size.height) {\n            if (size.width > max_size) {\n                size.height *= max_size / size.width;\n                size.width = max_size;\n            }\n        } else {\n            if (size.height > max_size) {\n                size.width *= max_size / size.height;\n                size.height = max_size;\n            }\n        }\n    }\n    return size;\n};\n\nvar compressImage = function (file) {\n    var image_obj = new Image(),\n        src = window.URL.createObjectURL(file),\n        deferred = new $.Deferred();\n    image_obj.onload = function () {\n        image_obj.onload = null;\n        var canvas = document.createElement('canvas'),\n            ctx = canvas.getContext('2d'),\n            width = image_obj.naturalWidth,\n            height = image_obj.naturalHeight,\n            file_type = file.type,\n            file_name = file.name,\n            new_size = getImageSize({width: width, height: height}, MAX_IMG_SIZE);\n        if (file.type === 'image/svg+xml' || file.type.includes('image/gif') || (width < MAX_IMG_SIZE && height < MAX_IMG_SIZE)) {\n            file.width = width;\n            file.height = height;\n            deferred.resolve(file);\n        }\n        canvas.width = new_size.width;\n        canvas.height = new_size.height;\n        ctx.drawImage(image_obj, 0, 0, new_size.width, new_size.height);\n        canvas.toBlob((blob) => {\n            const file = new File([blob], file_name, {\n                type: file_type,\n                lastModified: Date.now()\n            });\n            deferred.resolve(file);\n        }, file_type, 0.8);\n        window.URL.revokeObjectURL(src);\n    };\n    image_obj.onerror = function() {\n        image_obj.onerror = null;\n        window.URL.revokeObjectURL(src);\n        deferred.resolve(false);\n    };\n    image_obj.src = src;\n    return deferred.promise();\n};\n\nvar setCss = function (image_el, cached_image, img_size) {\n    var $image_el = $(image_el),\n        css = {\n            backgroundImage: 'url(\"' + cached_image.url + '\")',\n            backgroundSize: 'cover',\n            backgroundColor: '#FFF'\n        };\n    $image_el.css(css);\n};\n\nvar getCachedBackground = function (base64) {\n    if (base64.indexOf('http') == 0)\n        return base64;\n    return getCachedImage(base64.replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')).url;\n};\n\nvar getAvatarFromFile = function (file) {\n    var image_obj = new Image(),\n         src = window.URL.createObjectURL(file),\n         deferred = new $.Deferred();\n     image_obj.onload = function () {\n         image_obj.onload = null;\n         var canvas = document.createElement('canvas'),\n             ctx = canvas.getContext('2d'),\n             width = image_obj.naturalWidth,\n             height = image_obj.naturalHeight,\n             b64_image, hash,\n             new_size = getImageSize({width: width, height: height}, MAX_SIZE);\n         canvas.width = new_size.width;\n         canvas.height = new_size.height;\n         ctx.drawImage(image_obj, 0, 0, canvas.width, canvas.height);\n         b64_image = canvas.toDataURL().replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n         window.URL.revokeObjectURL(src);\n         canvas.toBlob((blob) => {\n             var reader = new FileReader();\n             reader.onload = function () {\n                 b64_image = reader.result.replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n                 let binary_file = atob(b64_image),\n                    bytes = new Uint8Array(binary_file.length);\n\n                 for (let i = 0; i < binary_file.length; i++)\n                     bytes[i] = binary_file.charCodeAt(i);\n\n                 hash = sha1(bytes);\n                 deferred.resolve(b64_image, hash, binary_file.length);\n             }.bind(this);\n             reader.readAsDataURL(blob);\n         }, file.type, 0.8);\n     };\n     image_obj.onerror = function() {\n         image_obj.onerror = null;\n         window.URL.revokeObjectURL(src);\n         deferred.resolve(false, false, false);\n     };\n     image_obj.src = src;\n     return deferred.promise();\n};\n\n$.fn.setAvatar = function (image, size) {\n    var cached_image = getCachedImage(image);\n    setCss(this, cached_image, size);\n};\n\nexport default {\n    getCachedImage: getCachedImage,\n    getBlobImage: b64toBlob,\n    getDefaultAvatar: getDefaultAvatar,\n    getAvatarFromFile: getAvatarFromFile,\n    getDefaultColor: getAccountColor,\n    getCachedBackground: getCachedBackground,\n    compressImage: compressImage\n};\n","import deps from \"xabber-dependencies\"\nimport templates from \"xabber-templates\";\nimport constants from \"xabber-constants\";\n\nvar _ = deps._,\n    $ = deps.$;\n\nvar $modal_container = $('<div>').attr('id', 'modals').appendTo(constants.CONTAINER_ELEMENT);\nvar modal_queue = [];\n\nvar Modal = function (modal_constructor, options) {\n    if (modal_constructor instanceof Function) {\n        this.$modal = $(modal_constructor());\n    } else {\n        this.$modal = $(modal_constructor);\n    }\n    this.options = options || {};\n    this.closed = new $.Deferred();\n};\n\nlet getString = function (id, params) {\n    if (deps.xabber_i18next.exists(id)) {\n        return deps.xabber_i18next.t(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n    } else if (deps.xabber_i18next.default_lang) {\n        return deps.xabber_i18next.default_lang(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n    } else\n        return \"\";\n};\n\n_.extend(Modal.prototype, {\n    open: function (options) {\n        if (this.options.use_queue) {\n            modal_queue.push(this);\n            (modal_queue.length === 1) && this.throw();\n        } else {\n            this.throw();\n        }\n        setTimeout(() => {\n            document.addEventListener(\"keyup\", this.clickHandler.bind(this));\n        }, 500);\n        return this.closed.promise();\n    },\n\n    throw: function () {\n        this.$modal.appendTo($('#modals')).prop('modal', this);\n        var modal_options = _.omit(this.options, ['use_queue']);\n        _.extend(modal_options, {\n            is_default_complete: true,\n            complete_data: null\n        });\n\n        if (this.options.use_queue) {\n            this.$modal.one('modal_close', function (ev, data) {\n                this.$modal.detach();\n                this.closed.resolve(data.value);\n                modal_queue.shift();\n                modal_queue.length && modal_queue[0].throw();\n            }.bind(this));\n        }\n\n        this.$modal._openModal(modal_options);\n    },\n\n    close: function (options) {\n        var modal_options = _.omit(options, ['use_queue', 'is_default_complete', 'complete_data']);\n        _.extend(modal_options, {\n            complete: function () {\n                if (this.options.use_queue) {\n                    var data = _.isUndefined(options.complete_data) ? null : options.complete_data;\n                    this.complete(data);\n                }\n                if (options.is_default_complete) {\n                    if (typeof(this.options.complete) === \"function\") {\n                        this.options.complete();\n                    }\n                } else {\n                    if (this.options.use_queue) {\n                        this.complete();\n                    }\n                    if (typeof(options.complete) === \"function\") {\n                        options.complete();\n                    }\n                }\n            }.bind(this)\n        });\n\n        this.$modal.prop('modal', null);\n        this.$modal._closeModal(modal_options);\n    },\n\n    complete: function (value) {\n        document.removeEventListener(\"keyup\", this.clickHandler);\n        this.$modal.trigger('modal_close', {value: value});\n    },\n\n    clickHandler: function (ev) {\n        if (ev.keyCode === 13) {\n            this.$modal.find('.modal-footer button.ok-button').click();\n            ev.preventDefault();\n        }\n    }\n});\n\n$.fn._openModal = $.fn.openModal;\n\n$.fn.openModal = function (options) {\n    var modal = new Modal(this, options);\n    return modal.open();\n};\n\n$.fn._closeModal = $.fn.closeModal;\n\n$.fn.closeModal = function (options) {\n    var modal = this.prop('modal');\n    if (modal) {\n        modal.close(options);\n    } else {\n        this._closeModal(options);\n    }\n};\n\nexport default {\n    Modal: Modal,\n\n    clear_queue: function () {\n        modal_queue = [];\n    },\n\n    dialogs: {\n        common: function (header, text, buttons, dialog_options, flag, modal_class) {\n            var dialog = new Modal(function () {\n                dialog_options || (dialog_options = []);\n                let options = dialog_options || [];\n                buttons || (buttons = {});\n                if (typeof(dialog_options) === \"object\" && !Array.isArray(dialog_options)){\n                    options = [];\n                }\n                var ok_button = buttons.ok_button,\n                    cancel_button = buttons.cancel_button,\n                    optional_buttons = (buttons.optional_buttons || []).reverse();\n                ok_button && (ok_button = {text: ok_button.text || getString(\"ok\")});\n                cancel_button && (cancel_button = {text: cancel_button.text || getString(\"cancel\")});\n                return templates.base.dialog({\n                    header: header,\n                    text: text,\n                    ok_button: ok_button,\n                    cancel_button: cancel_button,\n                    optional_buttons: optional_buttons,\n                    dialog_options: options,\n                    flag: flag || \"\",\n                    modal_class: modal_class || \"\"\n                });\n            }, {use_queue: true});\n\n            if (dialog_options.modal_class) {\n                dialog.$modal.addClass(dialog_options.modal_class)\n            }\n\n            if (dialog_options.no_dialog_options) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n            }\n\n            if (dialog_options.quoted_text) {\n                dialog.$modal.find('.modal-content').append(`<div class=\"dialog-quoted-text\">${dialog_options.quoted_text}</div>`);\n            }\n            if (dialog_options.cancel_button_main) {\n                dialog.$modal.find('.cancel-button').removeClass('btn-dark');\n            }\n            if (dialog_options.inverted_buttons) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.cancel-button').removeClass('btn-dark');\n                dialog.$modal.find('.ok-button').addClass('btn-dark');\n                dialog.$modal.find('.modal-footer').addClass('inverted-buttons');\n            }\n\n            if (dialog_options.img_details) {\n                dialog.$modal.find('.modal-content').append('<div class=\"modal-images-details\"/>').append('<div class=\"modal-images-details-btn btn-flat btn-dark btn-main\"/>');\n                dialog.$modal.find('.modal-images-details-btn').text(xabber.getString(\"details\"));\n                dialog.$modal.find('.modal-images-details').append('<div class=\"image-details-container hidden\"/>');\n                dialog.$modal.find('.image-details-container').html(dialog_options.img_details);\n                dialog.$modal.find('.modal-images-details-btn').click(function () {\n                    dialog.$modal.find('.image-details-container').switchClass('hidden', !dialog.$modal.find('.image-details-container').hasClass('hidden'));\n                });\n            }\n\n            if (dialog_options.blob_image_from_clipboard) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.img-from-clipboard')[0].src = dialog_options.blob_image_from_clipboard;\n                dialog.$modal.find('.container-for-img').removeClass('hidden');\n            }\n\n            if (dialog_options.canvas) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.container-for-img').html(\"\").removeClass('hidden')[0].appendChild(dialog_options.canvas);\n                if (dialog_options.bottom_text)\n                    $('<div class=\"dialog-bottom-text\"/>').html(dialog_options.bottom_text).appendTo(dialog.$modal.find('.container-for-img'));\n            }\n\n            if (dialog_options.escape_button) {\n                dialog.$modal.find('.modal-header').append('<i class=\"close-modal mdi mdi-close mdi-24px\"></i>');\n            }\n\n            if (!_.isUndefined(dialog_options.input_placeholder_value) || dialog_options.input_value) {\n                dialog.$modal.find('.dialog-options-wrap').html($('<input type=\"text\" placeholder=\"' + dialog_options.input_placeholder_value + '\" id=\"user_value\"/>').val(dialog_options.input_value));\n            }\n\n            dialog.$modal.find('.modal-footer button').click(function (ev) {\n                var option = $(ev.target).data('option'),\n                    $options = dialog.$modal.find('.dialog-option'),\n                    user_value_input = dialog.$modal.find('#user_value');\n                if (option && $options.length) {\n                    var result = {};\n                    _.each($options, function (item) {\n                        var $item = $(item);\n                        result[$item.data('name')] = $item.find('input').prop('checked');\n                    });\n                    dialog.close({complete_data: result});\n                } else {\n                    if (user_value_input.length) {\n                        if ($(ev.target).hasClass('btn-cancel')) {\n                            dialog.close({complete_data: false});\n                        } else if ($(ev.target).hasClass('optional-button')) {\n                            dialog.close({complete_data: option});\n                        }\n                        else {\n                            var user_value = user_value_input.val();\n                            dialog.close({complete_data: user_value});\n                        }\n                    }\n                    else\n                        dialog.close({complete_data: option});\n                }\n            });\n\n            dialog.$modal.find('.modal-header .close-modal').click(function () {\n                    dialog.close({complete_data: false});\n            });\n\n            return dialog.open();\n        },\n\n        warning: function (text, dialog_options) {\n            return this.common(getString(\"warning\"), text, {ok_button: true}, dialog_options);\n        },\n\n        error: function (text, dialog_options, header) {\n            return this.common(header || getString(\"xabber_account__login__dialog_error__header\"), text, {ok_button: true}, dialog_options);\n        },\n\n        ask: function (header, text, dialog_options, buttons, flag) {\n            var ok_text, cancel_text;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                cancel_text = buttons.cancel_button_text;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, cancel_button: {text: cancel_text}}, dialog_options, flag);\n        },\n\n        ask_extended: function (header, text, dialog_options, buttons) {\n            var ok_text, cancel_text, optional_button;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                cancel_text = buttons.cancel_button_text;\n                optional_button = (buttons.optional_button) ? [{value: buttons.optional_button, name: buttons.optional_button_text}] : false;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, cancel_button: {text: cancel_text}, optional_buttons: optional_button}, dialog_options, 'extended');\n        },\n\n        ask_enter_value: function (header, text, dialog_options, buttons) {\n            var ok_text, resend_button;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                resend_button = (buttons.resend_button_text) ? [{value: buttons.resend_to, name: buttons.resend_button_text}] : false;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, optional_buttons: resend_button, cancel_button: true}, dialog_options);\n        },\n\n        notify: function (header, text) {\n            return this.common(header, text, {ok_button: true});\n        }\n    }\n};\n","import deps from \"xabber-dependencies\"\n\nvar _ = deps._,\n    $ = deps.$;\n\n$.fn.placeCaretAtEnd = function () {\n    if (!this.length) {\n        return this;\n    }\n    var el = this[0];\n    el.focus();\n    if (!_.isUndefined(window.getSelection) && !_.isUndefined(document.createRange)) {\n        var range = document.createRange();\n        range.selectNodeContents(el);\n        range.collapse(false);\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n    } else if (!_.isUndefined(document.body.createTextRange)) {\n        var textRange = document.body.createTextRange();\n        textRange.moveToElementText(el);\n        textRange.collapse(false);\n        textRange.select();\n    }\n    return this;\n};\n\n$.fn.updateRichTextarea = function () {\n    var text = this.getTextFromRichTextarea();\n    if (!text) {\n        this.html('');\n    }\n    return this;\n};\n\n$.fn.flushRichTextarea = function () {\n    this.html('');\n    return this;\n};\n\n$.fn.pasteHtmlAtCaret = function (html) {\n    var sel, range;\n    this[0].focus();\n    if (window.getSelection) {\n        // IE9 and non-IE\n        sel = window.getSelection();\n        if (sel.getRangeAt && sel.rangeCount) {\n            range = sel.getRangeAt(0);\n            range.deleteContents();\n\n            // Range.createContextualFragment() would be useful here but is\n            // non-standard and not supported in all browsers (IE9, for one)\n            var el = document.createElement(\"div\");\n            el.innerHTML = html;\n            var frag = document.createDocumentFragment(), node, lastNode;\n            while ( (node = el.firstChild) ) {\n                lastNode = frag.appendChild(node);\n            }\n            range.insertNode(frag);\n\n            // Preserve the selection\n            if (lastNode) {\n                range = range.cloneRange();\n                range.setStartAfter(lastNode);\n                range.collapse(true);\n                sel.removeAllRanges();\n                sel.addRange(range);\n            }\n        }\n    } else if (document.selection && document.selection.type != \"Control\") {\n        // IE < 9\n        document.selection.createRange().pasteHTML(html);\n    }\n    return this;\n};\n\n$.fn.getTextFromRichTextarea = function () {\n    var $div = $('<div>').html(this.html());\n    $div.find('.emoji').each(function () {\n        $(this).replaceWith($(this).data('emoji'));\n    });\n    $div.find('p').each(function () {\n        $(this).replaceWith($(this).html() + '\\n');\n    });\n    /*$div.find('blockquote').each(function () {\n        $(this).replaceWith($(this).html() + '\\n');\n    });*/\n    $div.find('span').each(function () {\n        $(this).replaceWith($(this).html());\n    });\n    $div.find('div').each(function () {\n        var $this = $(this);\n        $this.find('br').remove();\n        var html = $this.html();\n        if ($this.hasClass('emoji'))\n            $this.replaceWith(html);\n        else\n            $this.replaceWith('\\n'+html);\n    });\n    /*$div.find('br').each(function () {\n        $(this).replaceWith('\\n');\n    });*/\n    return $div.text();\n};\n\nexport default null;\n","import deps from \"xabber-dependencies\";\nimport emoji from \"xabber-emoji-utils\";\nimport images from \"xabber-image-utils\";\nimport modals from \"xabber-modal-utils\";\nimport constants from \"xabber-constants\";\nimport textarea from \"xabber-textarea-utils\";\n\nvar $ = deps.$,\n    _ = deps._,\n    moment = deps.moment;\n\n// jQuery extensions\n$.fn.switchClass = function (klass, condition) {\n    if (arguments.length === 1) {\n        condition = !this.hasClass(klass);\n    }\n    if (condition) {\n        this.addClass(klass);\n    } else {\n        this.removeClass(klass);\n    }\n    return this;\n};\n\n$.fn.showIf = function (condition) {\n    return this.switchClass('hidden', !condition);\n};\n\n$.fn.hideIf = function (condition) {\n    return this.switchClass('hidden', condition);\n};\n\n$.fn.isVisibleInViewport = function() {\n    let elementTop = $(this).offset().top,\n        elementBottom = elementTop + $(this).outerHeight();\n\n    let viewportTop = $(window).scrollTop(),\n        viewportBottom = viewportTop + $(window).height();\n\n    return elementBottom > viewportTop && elementTop < viewportBottom;\n};\n\n$.fn.isVisibleInContainer = function(container) {\n    if (!this.length || !container.length)\n        return;\n    container = container[0];\n    let eleTop = this[0].offsetTop,\n        eleBottom = eleTop + this[0].clientHeight;\n\n    let containerTop = container.scrollTop,\n        containerBottom = containerTop + container.clientHeight;\n\n    return (\n        (eleTop >= containerTop && eleBottom <= containerBottom) ||\n        // Some part of the element is visible in the container\n        (eleTop < containerTop && containerTop < eleBottom) ||\n        (eleTop < containerBottom && containerBottom < eleBottom)\n    );\n};\n\n$.fn.isFullyVisibleInContainer = function(container) {\n    if (!this.length || !container.length)\n        return;\n    container = container[0];\n    let eleTop = this[0].offsetTop,\n        eleBottom = eleTop + this[0].clientHeight;\n\n    let containerTop = container.scrollTop,\n        containerBottom = containerTop + container.clientHeight;\n\n    return (\n        eleTop >= containerTop && eleBottom <= containerBottom\n    );\n};\n\n$.fn.isBottomVisibleInContainer = function(container) {\n    if (!this.length || !container.length)\n        return;\n    container = container[0];\n    let eleTop = this[0].offsetTop,\n        eleBottom = eleTop + this[0].clientHeight;\n\n    let containerTop = container.scrollTop,\n        containerBottom = containerTop + container.clientHeight;\n\n    return (\n        eleBottom <= containerBottom\n    );\n};\n\nvar getHyperLink = function (url) {\n    var prot = (url.indexOf('http://') === 0 ||  url.indexOf('https://') === 0) ? '' : 'http://',\n        escaped_url = \"\";\n    try {\n        escaped_url = encodeURI(decodeURI(url)).replace(/[!'()]/g, escape).replace(/\\*/g, \"%2A\");\n    }\n    catch (e) {\n        escaped_url = url;\n    }\n    try {\n        url = decodeURI(url);\n    }\n    catch (e) {\n        return url;\n    }\n    return \"<a target='_blank' class='msg-hyperlink' href='\"+prot+escaped_url + \"'>\"+url+\"</a>\";\n};\n\n$.fn.hyperlinkify = function (options) {\n    options || (options = {});\n    var $query = options.selector ? this.find(options.selector) : this;\n    $query.each(function (i, obj) {\n        var $obj = $(obj),\n            html_concat = \"\",\n            url_regexp = /((((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)|((\\b)(([\\w#:.@\\-]+))?(\\.net|\\.edu|\\.cloud|\\.top|\\.vip|\\.cash|\\.im|\\.online|\\.chat|\\.com|\\.org|\\.ru|\\.travel|\\.info|\\.tv|\\.biz|\\.mobi|\\.tel|\\.ar|\\.al|\\.asia|\\.np|\\.ng|\\.io|\\.bb|\\.br|\\.ca|\\.tr|\\.co|\\.ec|\\.fr|\\.ht|\\.in|\\.eg|\\.ie|\\.et|\\.jo|\\.mr|\\.id|\\.iq|\\.nl|\\.ps|\\.ph|\\.sl|\\.si|\\.se|\\.af|\\.ag|\\.be|\\.bd|\\.bg|\\.cl|\\.cd|\\.my|\\.mz|\\.mx|\\.cz|\\.eu|\\.dz|\\.de|\\.hk|\\.it|\\.la|\\.no|\\.pl|\\.ro|\\.sg|\\.ke|\\.kr|\\.ch|\\.ug|\\.us|\\.ve|\\.vn|\\.at|\\.bo|\\.cm|\\.cn|\\.cg|\\.dk|\\.fi|\\.gr|\\.gh|\\.is|\\.ir|\\.jp|\\.lv|\\.ma|\\.me|\\.pk|\\.pe|\\.pt|\\.sa|\\.sk|\\.es|\\.tz|\\.tw|\\.ua|\\.uz|\\.ye)((\\/[\\w#!:;.?+=&%@!\\-\\/]+)|(\\b)|\\/))/gim;\n        $obj[0].childNodes.forEach(function (node) {\n            let $node = $(node),\n                x = node.outerHTML;\n            if (node.tagName === 'A') {\n                html_concat += x;\n                return;\n            }\n            else {\n                if (node.nodeName === '#text')\n                    x = _.escape($node.text());\n                let list = x && x.match(url_regexp);\n                list = Array.from(new Set(list));\n                if (!list || list.length === 0) {\n                    html_concat += x;\n                    return;\n                }\n                if (list.length === 1 && list[0] === x) {\n                    html_concat += options.decode_uri ? decodeURI(x) : getHyperLink(x);\n                } else {\n                    for (i = 0; i < list.length; i++) {\n                            if (options.decode_uri) {\n                                try {\n                                    x = x.replace(list[i], decodeURI(list[i]));\n                                } catch (e) {\n                                    console.log(list[i])\n                                    console.error(e)\n                                }\n                            }\n                            else\n                                x = x.replaceAll(new RegExp(`(\\\\s|^)(${list[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')})`,\"g\"), '$1' + getHyperLink(list[i]));\n                    }\n                    html_concat += x;\n                }\n            }\n        }.bind(this));\n        $obj.html(html_concat);\n    });\n    return this;\n};\n\nvar utils = {\n    uuid: function () {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0,\n                v = c == 'x' ? r : r & 0x3 | 0x8;\n            return v.toString(16);\n        });\n    },\n\n    utoa: function (str) {\n        return window.btoa(_.unescape(encodeURIComponent(str)));\n    },\n\n    atou: function (str) {\n        return decodeURIComponent(_.escape(window.atob(str)));\n    },\n\n    now: function () {\n        return Math.floor(moment.now() / 1000);\n    },\n\n    getDateFormat: function (date_format) {\n        let final_format;\n        if (date_format === 'iso'){\n            final_format = 'YYYY-MM-DD';\n        } else if (date_format === 'eur') {\n            final_format = 'DD.MM.YYYY';\n        } else if (date_format === 'usa') {\n            final_format = 'MM/DD/YYYY';\n        }\n        return final_format;\n    },\n\n    pretty_time: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format('HH:mm:ss');\n    },\n\n    pretty_date: function (timestamp, format) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format(format || 'dddd, MMMM D, YYYY');\n    },\n\n    pretty_datetime: function (timestamp, format) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format(format || 'MMMM D, YYYY HH:mm:ss');\n    },\n\n    pretty_short_datetime_recent_chat: function (timestamp) {\n        timestamp = Number(timestamp ? moment(timestamp) : moment());\n        if (moment(timestamp).startOf('day').isSame(moment().startOf('day')) || Number(moment().subtract(12, 'hours') < timestamp)) {\n            return moment(timestamp).format(\"HH:mm:ss\");\n        }\n        if (Number(moment().subtract(12, 'hours')) > timestamp && Number(moment().subtract(7, 'days')) <= timestamp) {\n            return moment(timestamp).format(\"ddd\");\n        }\n        if (Number(moment().subtract(7, 'days')) > timestamp && Number(moment().subtract(1, 'year')) <= timestamp) {\n            return moment(timestamp).format(\"MMM D\");\n        }\n        if (timestamp && Number(moment().subtract(1, 'year')) > timestamp) {\n            return moment(timestamp).format(\"D MMM YYYY\");\n        }\n    },\n\n    pretty_short_datetime: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment(),\n            day = moment(datetime).startOf('day'),\n            year = moment(datetime).startOf('year');\n        if (day.isSame(moment().startOf('day'))) {\n            return datetime.format('HH:mm:ss');\n        } else if (year.isSame(moment().startOf('year'))) {\n            return datetime.format('MMM D');\n        } else {\n            return datetime.format('DD/MM/gg');\n        }\n    },\n\n    pretty_short_month_date: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment(),\n            day = moment(datetime).startOf('day');\n        if (day.isSame(moment().startOf('day'))) {\n            return datetime.format('HH:mm:ss');\n        } else {\n            return datetime.format('MMM D, YYYY HH:mm:ss');\n        }\n    },\n\n    isImageType: function(type) {\n        if (type.indexOf('image') > -1 && !(type.indexOf('application') > -1))\n            return true;\n        else\n            return false;\n    },\n\n    tryReadingFile: function(file) {\n        return new Promise((resolve, reject) => {\n            let r = new FileReader();\n            r.onload = (e) => {\n                resolve();\n            };\n            r.onerror = (e) => {\n                console.log(r.error);\n                reject(r.error);\n            };\n            r.readAsDataURL(file)\n        });\n    },\n\n    getDomainFromUrl: function(url) {\n        let a = document.createElement('a');\n        if (url && !/^https?:\\/\\//i.test(url))\n            url = 'http://' + url;\n        a.href = url;\n        return a.hostname;\n    },\n\n    isVideoType: function(type) {\n        if (type.indexOf('video') > -1)\n            return true;\n        else\n            return false;\n    },\n\n    file_type_icon: function (mime_type) {\n        let filetype = utils.pretty_file_type(mime_type);\n        if (filetype === 'image')\n            return 'mdi-image';\n        if (filetype === 'audio')\n            return 'mdi-music-note';\n        if (filetype === 'video')\n            return 'mdi-filmstrip';\n        if (filetype === 'document')\n            return 'mdi-file-document-box';\n        if (filetype === 'presentation')\n            return 'mdi-presentation';\n        if (filetype === 'archive')\n            return 'mdi-zip-box';\n        if (filetype === 'file')\n            return 'mdi-file';\n        if (filetype === 'pdf')\n            return 'mdi-file-pdf';\n        return 'mdi-file'\n    },\n\n    file_type_icon_svg: function (mime_type) {\n        let filetype = utils.pretty_file_type(mime_type);\n        if (filetype === 'image')\n            return 'image';\n        if (filetype === 'audio')\n            return 'file-audio';\n        if (filetype === 'video')\n            return 'file-video';\n        if (filetype === 'document')\n            return 'file-document';\n        if (filetype === 'presentation')\n            return 'file-presentation';\n        if (filetype === 'archive')\n            return 'file-zip';\n        if (filetype === 'file')\n            return 'file';\n        if (filetype === 'pdf')\n            return 'file-pdf';\n        return 'file'\n    },\n\n    pretty_file_type: function (mime_type) {\n        if (constants.MIME_TYPES.image.includes(mime_type))\n            return 'image';\n        if (constants.MIME_TYPES.audio.includes(mime_type))\n            return 'audio';\n        if (constants.MIME_TYPES.video.includes(mime_type))\n            return 'video';\n        if (constants.MIME_TYPES.document.includes(mime_type))\n            return 'document';\n        if (constants.MIME_TYPES.pdf.includes(mime_type))\n            return 'pdf';\n        if (constants.MIME_TYPES.presentation.includes(mime_type))\n            return 'presentation';\n        if (constants.MIME_TYPES.archive.includes(mime_type))\n            return 'archive';\n        if (constants.MIME_TYPES.table.includes(mime_type))\n            return 'electronic table';\n        return 'file';\n    },\n\n    pretty_file_type_with_article: function (mime_type) {\n        let type = utils.pretty_file_type(mime_type),\n            vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n        (type === 'pdf') && (type = 'document');\n        if (vowels.includes(type[0]))\n            return 'an ' + type;\n        else\n            return 'a ' + type;\n    },\n\n    pretty_size: function (size) {\n        if (!size && size != 0)\n            return \"\";\n        if (_.isNaN(Number(size)))\n            return size;\n        if (size < 1024) {\n            return size+' B';\n        } else if (size < 1048576) {\n            return (size/1024).toFixed(2)+' KiB';\n        } else if (size < 1073741824) {\n            return (size/1048576).toFixed(2)+' MiB';\n        } else {\n            return (size/1073741824).toFixed(2)+' GiB';\n        }\n    },\n\n    pretty_duration: function (duration) {\n        if (_.isNaN(Number(duration)))\n            return duration;\n        if (_.isUndefined(duration) || duration === \"\")\n            return \"\";\n        if (duration < 10)\n            return (\"0:0\" + duration);\n        if (duration < 60)\n            return (\"0:\" + duration);\n        if (duration >= 60)\n            return (Math.trunc(duration/60) + \":\" + ((duration%60 < 10) ? (\"0\" + (duration%60)) : duration%60));\n    },\n\n    pretty_duration_ephemeral_timer: function (timer) {\n        let text = '';\n        switch (timer) {\n            case '5':\n                text = '5s';\n                break;\n            case '10':\n                text = '10s';\n                break;\n            case '15':\n                text = '15s';\n                break;\n            case '30':\n                text = '30s';\n                break;\n            case '60':\n                text = '1m';\n                break;\n            case '300':\n                text = '5m';\n                break;\n            case '600':\n                text = '10m';\n                break;\n            case '900':\n                text = '15m';\n                break;\n            default:\n                text = '';\n                break;\n        }\n        return text;\n    },\n\n    pretty_name: function (name) {\n        return name ? (name[0].toUpperCase() + name.replace(/-/,' ').substr(1).toLowerCase()) : \"\";\n    },\n\n    getKeyByValue: function (object, value) {\n        return Object.keys(object).find(key => object[key] === value);\n    },\n\n    slice_string: function (str, from, to) {\n        to = _.isNumber(to) ? to : [...str].length;\n        if (str.length === [...str].length)\n            return str.slice(from, to);\n        else\n            return Array.from(str).slice(from, to).join(\"\");\n    },\n\n    slice_pretty_body: function (body, mutable_refs) {\n        if (!mutable_refs || !mutable_refs.length)\n            return body;\n        body = body || \"\";\n        mutable_refs = mutable_refs.filter(m => m.type === 'groupchat' || m.type === 'forward');\n        let pretty_body = Array.from(deps.Strophe.xmlescape(body));\n        mutable_refs && mutable_refs.forEach(function (ref) {\n            for (let idx = ref.start; idx < ref.end; idx++)\n                pretty_body[idx] = \"\";\n        }.bind(this));\n        return deps.Strophe.xmlunescape(pretty_body.join(\"\").trim());\n    },\n\n    markupBodyMessage: function (message, mention_tag) {\n        let attrs = _.clone(message.attributes),\n            mentions = attrs.mentions || [],\n            markups = attrs.markups || [],\n            mutable_refs = attrs.mutable_content || [],\n            blockquotes = attrs.blockquotes || [],\n            markup_body = Array.from(deps.Strophe.xmlescape(attrs.original_message || attrs.message || \"\"));\n        !mention_tag && (mention_tag = 'span');\n\n        mutable_refs.forEach(function (muted) {\n            for (let idx = muted.start; idx < muted.end; idx++)\n                markup_body[idx] = \"\";\n        }.bind(this));\n\n        mentions.forEach(function (mention) {\n            let start_idx = mention.start,\n                end_idx = mention.end > (markup_body.length - 1) ? (markup_body.length - 1) : (mention.end - 1), target = mention.target;\n            if (start_idx > markup_body.length - 1)\n                return;\n            if (mention.is_gc) {\n                let id = target.match(/\\?id=\\w*/),\n                    jid = target.match(/\\?jid=.*/);\n                if (id)\n                    target = id[0].slice(4);\n                else if (jid)\n                    target = jid[0].slice(5);\n                else {\n                    target = \"\";\n                    mention.me = true;\n                }\n            }\n            else\n                target = target.slice(5);\n            if (mention_tag === 'mention'){\n                markup_body[start_idx] = '<' + mention_tag + ' data-target=\"?jid=' + target + '\">' + markup_body[start_idx];\n                markup_body[end_idx] += '</' + mention_tag + '>';\n                return;\n            }\n            markup_body[start_idx] = '<' + mention_tag + ' data-target=\"' + target + '\" class=\"mention' + (mention.me ? ' ground-color-100' : '') + '\">' + markup_body[start_idx];\n            markup_body[end_idx] += '</' + mention_tag + '>';\n        }.bind(this));\n\n        markups.forEach(function (markup) {\n            let start_idx = markup.start,\n                end_idx = markup.end > (markup_body.length - 1) ? (markup_body.length - 1) : (markup.end - 1);\n            if (start_idx > markup_body.length - 1)\n                return;\n            if (markup.markup.length) {\n                let start_tags = \"\",\n                    end_tags = \"\";\n                markup.markup.forEach(function (mark_up_style) {\n                    if (typeof(mark_up_style) === 'object') {\n                        start_tags = '<a target=\"_blank\" class=\"msg-hyperlink\" href=\"' + mark_up_style.uri + '\">' + start_tags;\n                        end_tags += '</a>';\n                    } else {\n                        start_tags = '<' + mark_up_style[0].toLowerCase() + '>' + start_tags;\n                        end_tags += '</' + mark_up_style[0].toLowerCase() + '>';\n                    }\n                }.bind(this));\n                markup_body[start_idx] = start_tags + markup_body[start_idx];\n                markup_body[end_idx] += end_tags;\n            }\n        }.bind(this));\n\n        blockquotes.forEach(function (quote) {\n            let end_idx = quote.end > (markup_body.length - 1) ? (markup_body.length - 1) : (quote.end - 1);\n            for (let idx = quote.start; idx < (quote.start + constants.QUOTE_MARKER.length); idx++) {\n                if (idx === end_idx)\n                    markup_body[idx] = '<br>';\n                else\n                    markup_body[idx] = \"\";\n\n            }\n            for (let idx = quote.start; idx < end_idx; idx++) {\n                if (markup_body[idx] === '\\n') {\n                    for (let child_idx = idx + 1; child_idx <= (idx + constants.QUOTE_MARKER.length); child_idx++)\n                        markup_body[child_idx] = \"\";\n                    idx+= constants.QUOTE_MARKER.length - 1;\n                }\n            }\n            if (mention_tag === 'mention'){\n                markup_body[quote.start] = '<blockquote>';\n                markup_body[end_idx] += '</blockquote>';\n                return;\n            }\n            markup_body[quote.start] = '<div class=\"quote\">';\n            markup_body[end_idx] += '</div>';\n        }.bind(this));\n\n        return markup_body.join(\"\").trim();\n    },\n\n    getOS: function() {\n        let platform = window.navigator.platform,\n            macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],\n            windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],\n            os = null;\n\n        if (macosPlatforms.indexOf(platform) !== -1) {\n            os = 'mac OS';\n        } else if (windowsPlatforms.indexOf(platform) !== -1) {\n            os = 'Windows';\n        } else if (!os && /Linux/.test(platform)) {\n            os = 'Linux';\n        }\n\n        return os;\n    },\n\n    isOverflownWidth: function(element) {\n        return element.scrollWidth > element.clientWidth;\n    },\n\n    isOverflownHeight: function(element) {\n        return element.scrollHeight > element.clientHeight;\n    },\n\n    render_data_form: function (data_form) {\n        let $data_form = $('<div class=\"data-form\"/>');\n        data_form.fields.forEach(function (field) {\n            if (field.type === 'hidden')\n                return;\n            if (field.type === 'fixed') {\n                let $fixed_field = $('<div class=\"data-form-field fixed-field\"/>');\n                field.label && $fixed_field.append($('<div class=\"label\"/>').text(field.label));\n                field.values.forEach(function (value) {\n                    let $input = $('<div class=\"value\"/>').text(value);\n                    $fixed_field.append($input);\n                }.bind(this));\n                $data_form.append($fixed_field);\n            }\n            if (field.type === 'boolean') {\n                let $input = $(`<button id=${field.var} class=\"data-form-field ground-color-100 btn-dark btn-flat btn-main boolean-field\"/>`).text(field.label);\n                $data_form.append($input);\n            }\n        }.bind(this));\n        return $data_form;\n    },\n\n    copyTextToClipboard: function(text, callback_msg, errback_msg) {\n        if (!window.navigator.clipboard) {\n            return;\n        }\n        window.navigator.clipboard.writeText(text).then(function() {\n            if (callback_msg) {\n                let info_msg = callback_msg;\n                this.callback_popup_message(info_msg, 1500);\n            }\n        }.bind(this), function() {\n            if (errback_msg) {\n                let info_msg = errback_msg;\n                this.callback_popup_message(info_msg, 1500);\n            }\n        }.bind(this));\n    },\n\n    callback_popup_message: function (info_msg, time) {\n        let $body = $(document.body),\n            $popup_msg = $('<div class=\"callback-popup-message\"/>').text(info_msg);\n        time = time || 3000;\n        $body.find('.callback-popup-message').remove();\n        $body.append($popup_msg);\n        setTimeout( function() {\n            $popup_msg.remove();\n        }, time);\n    },\n\n    emoji_size: function (count) {\n        let size;\n        switch (count) {\n            case 1:\n                size = 56;\n                break;\n            case 2:\n                size = 44;\n                break;\n            case 3:\n                size = 32;\n                break;\n            case 4:\n                size = 24;\n                break;\n            case 5:\n                size = 22;\n                break;\n            default:\n                size = 20;\n                break;\n        }\n        return size;\n    },\n\n    openWindow: function (url, errback) {\n        let win = window.open(url, '_blank');\n        if (win) {\n            win.focus();\n        } else {\n            errback && errback();\n        }\n    },\n\n    clearSelection: function () {\n        var selection = window.getSelection();\n        if (selection.empty) {\n            selection.empty();\n        } else if (selection.removeAllRanges) {\n            selection.removeAllRanges();\n        }\n    },\n\n    getCookie: function (name) {\n        let matches = window.document.cookie.match(new RegExp(\n            \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n        ));\n        return matches ? decodeURIComponent(matches[1]) : undefined;\n    },\n\n    isMobile: {\n        Android: function () {\n            return navigator.userAgent.match(/Android/i);\n        },\n        BlackBerry: function () {\n            return navigator.userAgent.match(/BlackBerry/i);\n        },\n        iOS: function () {\n            return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n        },\n        Opera: function () {\n            return navigator.userAgent.match(/Opera Mini/i);\n        },\n        Windows: function () {\n            return navigator.userAgent.match(/IEMobile/i) || navigator.userAgent.match(/WPDesktop/i);\n        },\n        any: function () {\n            return (this.Android() || this.BlackBerry() || this.iOS() || this.Opera() || this.Windows());\n        }\n    },\n\n    fromBase64toArrayBuffer: function (b64_string) {\n        return Uint8Array.from(atob(b64_string), c => c.charCodeAt(0)).buffer;\n    },\n\n    ArrayBuffertoBase64: function (arrayBuffer) {\n        return btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n    },\n\n    generateHOTPKey: async function(secret, counter) {\n        let Crypto = window.crypto.subtle;\n        let counterArray = this.padCounter(counter);\n\n        let key = await Crypto.importKey(\n            'raw',\n            secret,\n            { name: 'HMAC', hash: { name: 'SHA-1' } },\n            false,\n            ['sign']\n        );\n\n        let HS = await Crypto.sign('HMAC', key, counterArray);\n\n        return HS;\n    },\n\n    padCounter: function(counter) {\n        let buffer = new ArrayBuffer(8);\n        let bView = new DataView(buffer);\n\n        let byteString = '0'.repeat(64); // 8 bytes\n        let bCounter = (byteString + counter.toString(2)).slice(-64);\n\n        for (let byte = 0; byte < 64; byte += 8) {\n            let byteValue = parseInt(bCounter.slice(byte, byte + 8), 2);\n            bView.setUint8(byte / 8, byteValue);\n        }\n\n        return buffer;\n    },\n\n    DT: function(HS) {\n        let offset = HS[19] & 0b1111;\n        let P = ((HS[offset] & 0x7f) << 24) | (HS[offset + 1] << 16) | (HS[offset + 2] << 8) | HS[offset + 3]\n        let pString = P.toString(2);\n\n        return pString;\n    },\n\n    truncate: function(uKey) {\n        let Sbits = this.DT(uKey);\n        let Snum = parseInt(Sbits, 2);\n\n        return Snum;\n    },\n\n    generateHOTP: async function(secret, counter) {\n        let key = await this.generateHOTPKey(secret, counter);\n        let uKey = new Uint8Array(key);\n\n        let Snum = this.truncate(uKey);\n        let padded = ('000000' + (Snum % (10 ** 8))).slice(-8);\n\n        return padded;\n    },\n\n    hmacSha256: async function(key, message) {\n\n        let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n\n        let hashBuffer = await crypto.subtle.sign(\n            algorithm.name,\n            key,\n            message\n        );\n\n        return hashBuffer;\n    },\n\n    stringToArrayBuffer: function (string) {\n        let { length } = string;\n        let buffer = new Uint8Array(length);\n\n        for (let i = 0; i < length; i++) {\n            buffer[i] = string.charCodeAt(i);\n        }\n\n        return buffer;\n    },\n\n    AES: {\n        ALGO_NAME: 'AES-GCM',\n\n        decoder: new window.TextDecoder('utf-8'),\n        encoder: new window.TextEncoder('utf-8'),\n\n        decrypt: async function (masterKey, HMACData, payload) {\n            let masterObj = await window.crypto.subtle.importKey('raw', masterKey, {name: 'HKDF'}, false, ['deriveKey', 'deriveBits']),\n                hkdfCtrParams = { name: 'HKDF', salt: new Uint8Array(32), info: utils.stringToArrayBuffer('OMEMO Payload'), hash: 'SHA-256'};\n\n            let key = await window.crypto.subtle.deriveBits(hkdfCtrParams, masterObj, 640);\n\n            key = new Uint8Array(key);\n\n            let encryptionKey = key.slice(0,32),\n                authenticationKey = key.slice(32,64),\n                iv = key.slice(64);\n\n            let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n\n            authenticationKey = await crypto.subtle.importKey(\n                \"raw\",\n                authenticationKey,\n                algorithm,\n                false, [\"sign\", \"verify\"]\n            );\n\n            let generatedHMAC = await utils.hmacSha256(authenticationKey, payload);\n\n            generatedHMAC = generatedHMAC.slice(0, generatedHMAC.byteLength - 16);\n\n            if (!(utils.ArrayBuffertoBase64(HMACData) === utils.ArrayBuffertoBase64(generatedHMAC)))\n                return;\n\n            encryptionKey = await window.crypto.subtle.importKey('raw', encryptionKey, { \"name\": 'AES-CBC' }, true, ['decrypt'])\n\n\n            let decryptedBuffer = await window.crypto.subtle.decrypt({\n                name: 'AES-CBC',\n                iv,\n            }, encryptionKey, payload);\n\n            return utils.AES.decoder.decode(decryptedBuffer);\n        },\n\n        encrypt: async function (plaintext) {\n            let masterKey = window.crypto.getRandomValues(new Uint8Array(32)),\n                masterObj = await window.crypto.subtle.importKey('raw', masterKey, {name: 'HKDF'}, false, ['deriveKey', 'deriveBits']),\n                hkdfCtrParams = { name: 'HKDF', salt: new Uint8Array(32), info: utils.stringToArrayBuffer('OMEMO Payload'), hash: 'SHA-256'};\n\n            let key = await window.crypto.subtle.deriveBits(hkdfCtrParams, masterObj, 640);\n\n            key = new Uint8Array(key);\n\n            let encryptionKey = key.slice(0,32),\n                authenticationKey = key.slice(32,64),\n                iv = key.slice(64);\n\n            encryptionKey = await window.crypto.subtle.importKey('raw', encryptionKey, { \"name\": 'AES-CBC' }, true, ['encrypt']);\n\n            let encrypted = await utils.AES.generateAESencryptedMessage(iv, encryptionKey, plaintext);\n\n            let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n            authenticationKey = await crypto.subtle.importKey(\n                \"raw\",\n                authenticationKey,\n                algorithm,\n                false, [\"sign\", \"verify\"]\n            );\n\n            let payload = await utils.hmacSha256(authenticationKey, encrypted);\n\n            payload = payload.slice(0, payload.byteLength - 16);\n\n            let keydata = new Uint8Array([...masterKey, ...new Uint8Array(payload)]);\n\n            return {\n                keydata: keydata.buffer,\n                payload: encrypted,\n            }\n        },\n\n        generateAESencryptedMessage: async function (iv, key, plaintext) {\n            let encryptOptions = {\n                name: 'AES-CBC',\n                iv,\n            };\n            let encodedPlaintext = utils.AES.encoder.encode(plaintext),\n                encrypted = await window.crypto.subtle.encrypt(encryptOptions, key, encodedPlaintext);\n\n            return encrypted;\n        },\n\n        arrayBufferConcat: function () {\n            let length = 0,\n                buffer = null;\n\n            for (let i in arguments) {\n                buffer = arguments[i];\n                length += buffer.byteLength;\n            }\n\n            let joined = new Uint8Array(length),\n                offset = 0;\n\n            for (let i in arguments) {\n                buffer = arguments[i];\n                joined.set(new Uint8Array(buffer), offset);\n                offset += buffer.byteLength;\n            }\n\n            return joined.buffer\n        },\n\n        generateAESKey: async function () {\n            let algo = {\n                name: utils.AES.ALGO_NAME,\n                length: constants.AES_KEY_LENGTH,\n            };\n            let keyUsage = ['encrypt', 'decrypt'],\n                key = await window.crypto.subtle.generateKey(algo, constants.AES_EXTRACTABLE, keyUsage);\n\n            return key;\n        }\n    },\n\n    getBrowser: function () {\n        // Get the user-agent string\n        let userAgentString =\n            navigator.userAgent;\n\n        // Detect Chrome\n        let chromeAgent =\n            userAgentString.indexOf(\"Chrome\") > -1;\n\n        // Detect Internet Explorer\n        let IExplorerAgent =\n            userAgentString.indexOf(\"MSIE\") > -1 ||\n            userAgentString.indexOf(\"Windows NT:\") > -1;\n\n        // Detect Firefox\n        let firefoxAgent =\n            userAgentString.indexOf(\"Firefox\") > -1;\n\n        // Detect Safari\n        let safariAgent =\n            userAgentString.indexOf(\"Safari\") > -1;\n\n        // Discard Safari since it also matches Chrome\n        if ((chromeAgent) && (safariAgent))\n            safariAgent = false;\n\n        // Detect Opera\n        let operaAgent =\n            userAgentString.indexOf(\"OP\") > -1;\n\n        // Discard Chrome since it also matches Opera\n        if ((chromeAgent) && (operaAgent))\n            chromeAgent = false;\n\n        if (safariAgent)\n            return 'Safari';\n        if (chromeAgent)\n            return 'Chrome';\n        if (IExplorerAgent)\n            return 'IE';\n        if (operaAgent)\n            return 'Opera';\n        if (firefoxAgent)\n            return 'Firefox';\n        return 'Unknown browser';\n    },\n\n    emoji: emoji,\n    images: images,\n    modals: modals,\n    dialogs: modals.dialogs\n};\n\n    export default utils;\n","// expands dependencies with internal xabber modules\nimport deps from \"xabber-dependencies\";\nimport constants from \"xabber-constants\";\nimport templates from \"xabber-templates\";\nimport sounds from \"xabber-sounds\";\nimport utils from \"xabber-utils\";\nimport client_translation_progress from \"xabber-translations-info\";\nimport version from \"xabber-version\";\nimport _ from \"underscore\";\n\nexport default _.extend({\n    constants: constants,\n    templates: templates,\n    sounds: sounds,\n    client_translation_progress: client_translation_progress,\n    utils: utils,\n    uuid: utils.uuid\n}, version, deps);","import env from \"xabber-environment\";\n\nlet constants = env.constants,\n    _ = env._,\n    $ = env.$,\n    moment = env.moment,\n    client_translation_progress = env.client_translation_progress,\n    xabber_i18next = env.xabber_i18next,\n    xabber_i18next_sprintf = env.xabber_i18next_sprintf,\n    uuid = env.uuid,\n    utils = env.utils;\n\n\nlet Xabber = Backbone.Model.extend({\n    defaults: {\n        version_number: env.version_number,\n        actual_version_number: env.version_number,\n        audio: false,\n        video: false,\n        client_id: uuid().substring(0, 8),\n        // client_name: 'Xabber for Web 1'\n    },\n\n    initialize: function () {\n        this.env = env;\n        this.fetchURLParams();\n        this.cleanUpStorage();\n        this.initDefaultLanguage();\n        this.detectMediaDevices();\n        window.navigator.mediaDevices && (window.navigator.mediaDevices.ondevicechange = this.detectMediaDevices.bind(this));\n        this.check_config = new $.Deferred();\n        this._settings = new this.Settings({id: 'settings'},\n                {storage_name: this.getStorageName(), fetch: 'before'});\n        this.settings = this._settings.attributes;\n        let url = window.location.host + window.location.pathname.replace(/\\//g, \"-\");\n        if (url[url.length - 1] == \"-\")\n            url.slice(0, url.length - 1);\n        this._cache = new Backbone.ModelWithStorage({id: `cache-${url}`},\n                {storage_name: this.getStorageName(), fetch: 'before'});\n        this.cache = this._cache.attributes;\n        this.cache.client_id && (this.set('client_id', this.cache.client_id));\n        this._cache.save('client_id', this.get('client_id'));\n        this.extendFunction();\n        this.plyr_players = [];\n        this.current_plyr_player = null;\n        this.on(\"change:actual_version_number\", this.throwNewVersion, this);\n        this.on(\"quit\", this.onQuit, this);\n        this._version_interval = setInterval(this.readActualVersion.bind(this), 600000);\n\n        window.onerror = (msg, url, line, col, error) => {\n            utils.dialogs.error(msg + '\\n' + url + '\\n' + line + ':' + col + '\\n' + error);\n        };\n        window.ononline = () => {\n            this.disconnectWhenConnecting();\n        };\n    },\n\n    initDefaultLanguage: function () {\n        let lang = window.navigator.language,\n            progress = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));\n        if (progress != 100)\n            lang = 'en';\n        this.set(\"default_language\", lang);\n    },\n\n    loadTranslations: async function (lang) {\n        return new Promise((resolve, reject) => {\n            let language = {};\n            language.lang = lang;\n            !language.lang && (language.lang = this.settings.language);\n            if (language.lang == 'default' && this.default_translation) {\n                language.lang = this.get(\"default_language\");\n                language.translation  = this.default_translation;\n                resolve(language);\n                return;\n            }\n            import(`~/translations/${language.lang.replace(/-/g, \"-r\")}.js`).then(translation => {\n                language.translation  = translation;\n                resolve(language)\n            });\n        });\n    },\n\n    setLocale: function (lang, translations) {\n        let default_lang = this.get(\"default_language\"),\n            _translations = {\n                [default_lang]: {\n                    translation: this.default_translation\n                }\n            };\n        lang && (_translations[lang] = {translation: translations});\n        xabber_i18next.use(xabber_i18next_sprintf);\n        xabber_i18next.init({\n            lng: default_lang,\n            debug: false,\n            pluralSeparator: '-',\n            resources: _translations\n        });\n        if (lang) {\n            xabber_i18next.changeLanguage(lang);\n            moment.locale(lang);\n        }\n        xabber_i18next.default_lang = xabber_i18next.getFixedT(default_lang);\n    },\n    getOneLiners: function () {\n        if (xabber_i18next.exists(\"motivating_oneliner\")) {\n            return xabber_i18next.t(\"motivating_oneliner\").replace(/\\\\'/g, \"'\").split('\\n');\n        } else if (xabber_i18next.default_lang) {\n            return xabber_i18next.default_lang(\"motivating_oneliner\").replace(/\\\\'/g, \"'\").split('\\n');\n        } else\n            return [];\n    },\n    getString: function (id, params) {\n        if (xabber_i18next.exists(id)) {\n            return xabber_i18next.t(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n        } else if (xabber_i18next.default_lang) {\n            return xabber_i18next.default_lang(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n        } else\n            return \"\";\n    },\n\n    getQuantityString: function (id, count, params) {\n        let lang = xabber_i18next.language,\n            plurals = xabber_i18next.services.pluralResolver.getRule(lang);\n        if (!plurals)\n            return this.getString(`${id}_plural_0`, (params || [count]));\n        let _count = parseInt(count, 10);\n        xabber_i18next.services.pluralResolver.options.compatibilityJSON = 'v0';\n        let suffix = xabber_i18next.services.pluralResolver.getSuffix(lang, _count);\n        suffix = suffix.replace(/-/g, \"_\");\n        if (xabber_i18next.language == 'en' || !xabber_i18next.exists(`${id}_plural${suffix}`)) {\n            suffix = xabber_i18next.services.pluralResolver.getSuffix(\"en\", _count);\n            if (!suffix || suffix && !suffix.length)\n                suffix = '_0';\n            else\n                suffix = '_1';\n        }\n        return this.getString(`${id}_plural${suffix}`, (params || [count]));\n    },\n\n    error: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_ERROR) {\n            console.error(msg);\n        }\n    },\n\n    warn: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_WARN) {\n            console.warn(msg);\n        }\n    },\n\n    info: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_INFO) {\n            console.log(msg);\n        }\n    },\n\n    debug: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_DEBUG) {\n            console.log(msg);\n        }\n    },\n\n    pretty_last_seen: function (seconds) {\n        if (seconds >= 0 && seconds <= 120)\n            return this.getString(\"last_seen_now\");\n        if (seconds > 120 && seconds < 3600)\n            return this.getString(\"last_seen_minutes\", [Math.trunc(seconds/60)]);\n        if (seconds >= 3600 && seconds < 7200)\n            return this.getString(\"last_seen_hours\");\n        if (seconds >= 3600*48*2)\n            return this.getString(\"last_seen_date\", [env.moment().subtract(seconds, 'seconds').format('LL')]);\n        else\n            return this.getString(\"last_seen_date\", [env.moment().subtract(seconds, 'seconds').calendar().toLowerCase()]);\n    },\n\n    readActualVersion: function () {\n        if (!constants.CHECK_VERSION)\n            return;\n        // get version.js file from server and parse it\n        let rawFile = new XMLHttpRequest();\n        rawFile.open(\"GET\", \"version.js?\"+uuid(), true);\n        rawFile.onreadystatechange = () => {\n            if (rawFile.readyState === 4 && rawFile.status === 200) {\n                let text, json;\n                rawFile.onreadystatechange = null;\n                try {\n                    text = rawFile.responseText;\n                    json = JSON.parse(text.split('\\n')[1].slice(1, -1));\n                } catch (e) {\n                    return;\n                }\n                this.set({\n                    actual_version_number: json.version_number,\n                    version_description: json.version_description\n                });\n            }\n        };\n        rawFile.send();\n    },\n\n    extendFunction: function () {\n        if (!String.prototype.trimStart) {\n            String.prototype.trimStart = function () {\n                return this.replace(/^\\s+/, '');\n            }\n        }\n        if (!String.prototype.trimEnd) {\n            String.prototype.trimEnd = function () {\n                return Array.from(Array.from(this).reverse().join(\"\").trimStart(/\\s$/, '')).reverse().join(\"\");\n            }\n        }\n    },\n\n    onQuit: function () {\n        if (window.indexedDB.databases) {\n            window.indexedDB.databases().then((a) => {\n                a.forEach((db) => {\n                    window.indexedDB.deleteDatabase(db.name)\n                });\n            });\n        } else {\n            this.accounts.forEach((acc) => {\n                indexedDB.deleteDatabase(acc.cached_roster.database.name);\n                indexedDB.deleteDatabase(acc.cached_sync_conversations.database.name);\n                indexedDB.deleteDatabase(acc.cached_server_features.database.name);\n            });\n        }\n        let full_storage_name = this.getStorageName();\n        for (let key in window.localStorage) {\n            if (key.startsWith(full_storage_name) || key.startsWith(constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION + '-' + this.cache.id)) {\n                window.localStorage.removeItem(key);\n            }\n        }\n    },\n\n    cacheFavicons: async function () {\n        this._cache.save('favicon', URL.createObjectURL(await fetch(constants.FAVICON_DEFAULT).then(r => r.blob())));\n        this._cache.save('favicon_gray', URL.createObjectURL(await fetch(constants.FAVICON_DEFAULT_GREY).then(r => r.blob())));\n        this._cache.save('favicon_message', URL.createObjectURL(await fetch(constants.FAVICON_MESSAGE).then(r => r.blob())));\n    },\n\n    detectMediaDevices: function () {\n        this.getMediaDevices((media_devices) => {\n            this.set(media_devices);\n        });\n    },\n\n    getMediaDevices: function (callback, errback) {\n        if (window.navigator && window.navigator.mediaDevices) {\n            window.navigator.mediaDevices.enumerateDevices()\n                .then((devices) => {\n                    let media_devices = {audio: false, video: false};\n                    (devices.find(device => device.kind === 'audioinput')) && (media_devices.audio = true);\n                    (devices.find(device => device.kind === 'videoinput')) && (media_devices.video = true);\n                    callback && callback(media_devices);\n                })\n                .catch((err) => {\n                    errback && errback(err);\n                });\n        }\n    },\n\n    throwNewVersion: function () {\n        if (!constants.CHECK_VERSION)\n            return;\n        let version_number = this.get('actual_version_number'),\n            version_description = this.get('version_description');\n        utils.dialogs.common(this.getString(\"dialog_version_update__header\", [constants.CLIENT_NAME]), `${this.getString(\"dialog_version_update__confirm_text__new_version\", [version_number])}<div class=\"new-version-description client-text-color-500\">${version_description}</div>${this.getString(\"dialog_version_update__confirm_text__question_reload_page\")}`,\n            {ok_button: {text: this.getString(\"dialog_version_update__button_reload\")}, cancel_button: {text: this.getString(\"dialog_version_update__option_not_now\")}}\n        ).done((result) => {\n            if (result) {\n                window.location.reload(true);\n            }\n        });\n    },\n\n    Settings: Backbone.ModelWithStorage.extend({\n        defaults: {\n            max_connection_retries: -1,\n            idling: true,\n            idling_time: 'default',\n            notifications: true,\n            notifications_private: true,\n            notifications_group: true,\n            jingle_calls: true,\n            notifications_volume_enabled: true,\n            notifications_volume: 0.50,\n            message_preview_private: false,\n            message_preview_group: false,\n            private_sound: true,\n            group_sound: true,\n            background: {type: 'default'},\n            side_panel: {theme: 'dark', blur: false, transparency: 50},\n            appearance: {blur: 0, vignetting: 0, color: '#E0E0E0'},\n            main_color: 'default',\n            emoji_font: 'default',\n            sound_on_private_message: 'beep_up',\n            sound_on_group_message: 'beep_up',\n            call_attention: true,\n            load_media: 'default',\n            typing_notifications: 'default',\n            mapping_service: 'default',\n            desktop_autostart: false,\n            reconnection_logs: false,\n            sound_on_call: 'marching-band-dave-girtsman',\n            sound_on_dialtone: 'marching-band-dave-girtsman',\n            sound_on_connection: '_call_connecting',\n            sound_on_attention: 'attention',\n            sound_on_auth_request: '_auth_request',\n            sound_on_call_busy: '_phone_busy',\n            hotkeys: 'enter',\n            avatar_shape: 'circle',\n            device_metadata: 'default',\n            language: 'default',\n            load_history: true,\n            mam_requests_limit: 200,\n            mam_messages_limit_start: 1,\n            mam_messages_limit: 20,\n        }\n    }),\n\n    start: function () {\n        this.check_config.done((result) => {\n            this.cacheFavicons();\n            this.check_config = undefined;\n            result && this.trigger('start');\n        });\n    },\n\n    configure: function (config) {\n        this.loadTranslations(this.get('default_language')).then((language) => {\n            this.default_translation = language.translation ;\n            return this.loadTranslations();}).then((language) => {\n                this.setLocale(language.lang, language.translation);\n            _.extend(constants, _.pick(config, [\n                'CONNECTION_URL',\n                'PERSONAL_AREA_URL',\n                'LOG_LEVEL',\n                'SYNCHRONIZATION_RSM_MAX',\n                'ASSETS_URL_PREFIX',\n                'CONTAINER_ELEMENT',\n                'XABBER_ACCOUNT_URL',\n                'REGISTER_XMPP_ACCOUNT',\n                'REGISTER_XMPP_ACCOUNT_URL',\n                'REGISTER_XMPP_ACCOUNT_TEXT',\n                'USE_SOCIAL_AUTH',\n                'USE_TAB_SIGNALS',\n                'CLIENT_RESOURCE',\n                'CONTAINER',\n                'CHECK_VERSION',\n                'DESKTOP_AUTOSTART_OPTION',\n                'DEFAULT_LOGIN_SCREEN',\n                'STORAGE_NAME_ENDING',\n                'CLIENT_NAME',\n                'SHORT_CLIENT_NAME',\n                'CLIENT_LOGO',\n                'TOOLBAR_LOGO',\n                'ENABLE_XABBER_ACCOUNT',\n                'SCREEN_ABOUT',\n                'DISABLE_LOOKUP_WS',\n                'PRIVACY_LOAD_MEDIA',\n                'PRIVACY_TYPING_NOTIFICATIONS',\n                'PRIVACY_MAPPING_SERVICE',\n            ]));\n\n            let log_level = constants['LOG_LEVEL_'+constants.LOG_LEVEL];\n            constants.LOG_LEVEL = log_level || constants.LOG_LEVEL_ERROR;\n            constants.MATERIAL_COLORS.includes(config.MAIN_COLOR) && (constants.MAIN_COLOR = config.MAIN_COLOR);\n            (this._settings.get(\"main_color\") == 'default') && this._settings.set(\"main_color\", constants.MAIN_COLOR);\n            this.trigger(\"update_main_color\");\n            if (this._settings.get(\"load_media\") === 'default' && config.PRIVACY_LOAD_MEDIA != null)\n                this._settings.set(\"load_media\", config.PRIVACY_LOAD_MEDIA);\n            else if (this._settings.get(\"load_media\") === 'default')\n                this._settings.set(\"load_media\", true);\n            if (this._settings.get(\"typing_notifications\") === 'default' && config.PRIVACY_TYPING_NOTIFICATIONS != null)\n                this._settings.set(\"typing_notifications\", config.PRIVACY_TYPING_NOTIFICATIONS);\n            else if (this._settings.get(\"typing_notifications\") === 'default')\n                this._settings.set(\"typing_notifications\", true);\n            if (this._settings.get(\"device_metadata\") === 'default' && config.PRIVACY_DEVICE_METADATA_DEFAULT != null)\n                this._settings.set(\"device_metadata\", config.PRIVACY_DEVICE_METADATA_DEFAULT);\n            else if (this._settings.get(\"device_metadata\") === 'default')\n                this._settings.set(\"device_metadata\", 'contacts');\n            if (this._settings.get(\"mapping_service\") === 'default' && config.PRIVACY_MAPPING_SERVICE != null)\n                this._settings.set(\"mapping_service\", config.PRIVACY_MAPPING_SERVICE);\n            else if (this._settings.get(\"mapping_service\") === 'default')\n                this._settings.set(\"mapping_service\", true);\n            if (this._settings.get(\"idling_time\") === 'default' && config.IDLING_DEFAULT_TIMEOUT != null)\n                this._settings.set(\"idling_time\", config.IDLING_DEFAULT_TIMEOUT);\n            else if (this._settings.get(\"idling_time\") === 'default')\n                this._settings.set(\"idling_time\", constants.IDLING_DEFAULT_TIMEOUT);\n\n            window.xabber = this;\n            _.extend(window, env);\n            if (config.SYNCHRONIZATION_RSM_MAX)\n                constants.SYNCHRONIZATION_RSM_MAX = config.SYNCHRONIZATION_RSM_MAX;\n            if (config.ASSETS_URL_PREFIX) {\n                constants.ASSETS_URL_PREFIX = config.ASSETS_URL_PREFIX;\n            }\n            if (config.BACKGROUND_IMAGES_XML_URL)\n                constants.BACKGROUND_IMAGES_XML_URL = config.BACKGROUND_IMAGES_XML_URL;\n            if (config.BACKGROUND_PATTERNS_XML_URL)\n                constants.BACKGROUND_PATTERNS_XML_URL = config.BACKGROUND_PATTERNS_XML_URL;\n            if (config.CONTAINER_ELEMENT)\n                constants.CONTAINER_ELEMENT = config.CONTAINER_ELEMENT;\n            if (config.REGISTRATION_DOMAINS)\n                constants.REGISTRATION_DOMAINS = config.REGISTRATION_DOMAINS;\n            if (config.LOGIN_DOMAINS)\n                constants.LOGIN_DOMAINS = config.LOGIN_DOMAINS;\n            if (config.TRUSTED_DOMAINS)\n                constants.TRUSTED_DOMAINS = config.TRUSTED_DOMAINS;\n            if (config.RECOMMENDED_DOMAIN)\n                constants.RECOMMENDED_DOMAIN = config.RECOMMENDED_DOMAIN;\n            if (config.DOWNTIME_RECONNECTION_TIMEOUT)\n                constants.DOWNTIME_RECONNECTION_TIMEOUT = config.DOWNTIME_RECONNECTION_TIMEOUT;\n            if (config.IDLING_MINIMAL_TIMEOUT)\n                constants.IDLING_MINIMAL_TIMEOUT = config.IDLING_MINIMAL_TIMEOUT;\n            if (config.IDLING_MAXIMUM_TIMEOUT)\n                constants.IDLING_MAXIMUM_TIMEOUT = config.IDLING_MAXIMUM_TIMEOUT;\n            if (config.PING_SENDING_INTERVAL)\n                constants.PING_SENDING_INTERVAL = config.PING_SENDING_INTERVAL;\n            if (config.REGISTRATION_BUTTON != null)\n                constants.REGISTRATION_BUTTON = config.REGISTRATION_BUTTON;\n            if (config.REGISTRATION_CUSTOM_DOMAIN != null)\n                constants.REGISTRATION_CUSTOM_DOMAIN = config.REGISTRATION_CUSTOM_DOMAIN;\n            if (config.LOGIN_CUSTOM_DOMAIN != null)\n                constants.LOGIN_CUSTOM_DOMAIN = config.LOGIN_CUSTOM_DOMAIN;\n            if (config.SHORT_CLIENT_DESCRIPTION)\n                constants.SHORT_CLIENT_DESCRIPTION = config.SHORT_CLIENT_DESCRIPTION;\n            if (config.DEFAULT_EMOJI_FONT)\n                constants.DEFAULT_EMOJI_FONT = config.DEFAULT_EMOJI_FONT;\n            if (config.EMOJI_FONTS_LIST && _.isObject(config.EMOJI_FONTS_LIST))\n                constants.EMOJI_FONTS_LIST = config.EMOJI_FONTS_LIST;\n            else {\n                Object.keys(constants.EMOJI_FONTS_LIST).forEach((item_key) => {\n                    let item = constants.EMOJI_FONTS_LIST[item_key];\n                    if (item.is_outside_url)\n                        return;\n                    item.url = constants.ASSETS_URL_PREFIX + item.url;\n                });\n            }\n            (this._settings.get(\"emoji_font\") == 'default') && this._settings.set(\"emoji_font\", constants.DEFAULT_EMOJI_FONT);\n\n            if (config.CLIENT_NAME && !config.SHORT_CLIENT_NAME)\n                constants.SHORT_CLIENT_NAME = config.CLIENT_NAME;\n            else if (!config.CLIENT_NAME && config.SHORT_CLIENT_NAME)\n                constants.CLIENT_NAME = config.SHORT_CLIENT_NAME;\n\n            if (config.TURN_SERVERS_LIST) {\n                if (_.isArray(config.TURN_SERVERS_LIST))\n                    _.extend(constants, {TURN_SERVERS_LIST: config.TURN_SERVERS_LIST});\n                else if (_.isObject(config.TURN_SERVERS_LIST) && Object.keys(config.TURN_SERVERS_LIST).length)\n                    _.extend(constants, {TURN_SERVERS_LIST: [config.TURN_SERVERS_LIST]});\n            }\n\n            constants.FAVICON_DEFAULT = constants.ASSETS_URL_PREFIX + constants.FAVICON_DEFAULT;\n            constants.FAVICON_DEFAULT_GREY = constants.ASSETS_URL_PREFIX + constants.FAVICON_DEFAULT_GREY;\n            constants.FAVICON_MESSAGE = constants.ASSETS_URL_PREFIX + constants.FAVICON_MESSAGE;\n            constants.BACKGROUND_IMAGE = constants.ASSETS_URL_PREFIX + constants.BACKGROUND_IMAGE;\n\n\n            constants.CLIENT_LOGO = constants.ASSETS_URL_PREFIX + constants.CLIENT_LOGO;\n            constants.TOOLBAR_LOGO = constants.ASSETS_URL_PREFIX + constants.TOOLBAR_LOGO;\n\n            if (!constants.CONNECTION_URL) {\n                utils.dialogs.error(this.getString(\"client_error__missing_connection_url\"));\n                this.check_config.resolve(false);\n                return;\n            }\n            let bc;\n            if (constants.USE_TAB_SIGNALS){\n                try {\n                    bc = new BroadcastChannel(\"xabber-web\");\n                } catch (e) {\n                    console.log(e);\n                }\n                if (bc){\n                    bc.onmessage = (event) => {\n                        if (event.data === `1` && !bc.disabled_client) {\n                            bc.postMessage(`2`);\n                        }\n                        if (event.data === `2`) {\n                            bc.disabled_client = true\n                        }\n                    };\n\n                    bc.postMessage(`1`);\n                }\n            }\n            if (bc && bc.disabled_client){\n                utils.dialogs.error(this.getString(\"client_error__another_tab_active\"));\n                this.check_config.resolve(false);\n                return;\n            }\n\n            let self = this;\n            if (!Backbone.useLocalStorage && !this.cache.ignore_localstorage_warning) {\n                utils.dialogs.warning(this.getString(\"client_warning__no_local_storage\"),\n                    [{name: this.getString(\"ignore\"), text: this.getString(\"client_error__option_show_msg_again\")}]\n                ).done(function (res) {\n                    res && res.ignore && self._cache.save('ignore_localstorage_warning', true);\n                });\n            }\n\n            this.requestNotifications().done(function (granted) {\n                let emoji_dfd = new $.Deferred();\n                emoji_dfd.done(() => {\n                    self._cache.save('notifications', granted);\n                    self._cache.save('endpoint_key', undefined);\n                    self.check_config.resolve(true);\n                })\n                if (self._settings.get(\"emoji_font\") === 'system' || !Object.keys(constants.EMOJI_FONTS_LIST).length)\n                    emoji_dfd.resolve();\n                else {\n                    let emoji_obj = constants.EMOJI_FONTS_LIST[self._settings.get(\"emoji_font\")],\n                        emoji_url;\n                    if (emoji_obj && emoji_obj.url) {\n                        emoji_url = emoji_obj.url;\n                        self.loadEmojiFont(emoji_url, emoji_dfd);\n                    }\n                    else {\n                        emoji_dfd.resolve();\n                    }\n                }\n            });\n        });\n    },\n\n    fetchURLParams: function () {\n        let splitted_url = window.location.href.split(/[?#]/),\n            splitted_url_anchor = window.location.href.split('#');\n        this.url_params = {};\n        if (splitted_url.length > 1) {\n            let idx, param, params = splitted_url[1].split('&');\n            for (idx = 0; idx < params.length; idx++) {\n                param = params[idx].split('=');\n                if (param.length === 1) {\n                    this.url_params[param[0]] = null;\n                } else {\n                    this.url_params[param[0]] = param[1];\n                }\n            }\n        }\n        if (splitted_url_anchor.length > 1) {\n            this.url_params['anchor'] = splitted_url[1];\n        }\n        window.history.pushState(null, null, window.location.pathname);\n    },\n\n    getStorageName: function () {\n        let name = constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION;\n        if (constants.STORAGE_NAME_ENDING) {\n            name = name + '-' + constants.STORAGE_NAME_ENDING;\n        }\n        return name;\n    },\n\n    cleanUpStorage: function () {\n        let full_storage_name = constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION;\n        for (let key in window.localStorage) {\n            if (key.startsWith('xabber') &&\n                    !key.startsWith(full_storage_name)) {\n                window.localStorage.removeItem(key);\n            }\n        }\n    },\n\n    requestNotifications: function () {\n        let result = new $.Deferred(),\n            self = this;\n        if (!window.Notification) {\n            result.resolve(null);\n        } else if (window.Notification.permission === 'granted') {\n            result.resolve(true);\n        } else {\n            if (!self.cache.ignore_notifications_warning)\n                self.notifications_placeholder = new self.NotificationsPlaceholder();\n            result.resolve(false);\n        }\n        return result.promise();\n    },\n\n    updateFaviconConnected: function () {\n        let is_disconnected = false;\n        this.accounts.each((account) => {\n            if (account.get('enabled') && (!account.isConnected() || (account.session && account.session.get('auth_failed')))){\n                is_disconnected = true;\n                return;\n            }\n        });\n        this.updateAllMessageCounterOnDisconnect(is_disconnected);\n    },\n\n    disconnectWhenConnecting: function (is_fast) {\n        this.accounts.each((account) => {\n            if (account.session && account.connection && account.get('enabled') && !account.session.get('reconnecting') && !account.session.get('connected')){\n                account.activate();\n            }\n        });\n    },\n\n    extendWith: function () {\n        return _.reduce(arguments, function (instance, module) {\n            return instance;\n        }, this);\n    }\n});\n\nexport default new Xabber();\n","import xabber from \"xabber-core\";\nimport { transliterate as query_transliterate } from 'transliteration';\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.base,\n    utils = env.utils,\n    uuid = env.uuid,\n    $ = env.$,\n    _ = env._;\n\nxabber.ViewPath = function (str) {\n    this.path = str.split('.');\n    this.applyTo = function (obj) {\n        let result = obj;\n        for (let idx = 0; idx < this.path.length; idx++) {\n            if (!(result = _.result(result, this.path[idx]))) {\n                return null;\n            }\n        }\n        return result;\n    };\n};\n\nxabber.BasicView = Backbone.View.extend({\n    template: function () {\n        return '';\n    },\n\n    initialize: function (options) {\n        options || (options = {});\n        this.parent = options.parent;\n        this.vname = options.vname;\n        this.children = {};\n        this.$el.addClass(options.classlist);\n        if (!options.el) {\n            this.$el.html(this.template(_.extend({view: this}, constants)));\n        }\n        if (!_.isUndefined(this.ps_selector)) {\n            this.ps_container = this.$(this.ps_selector);\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        this.data = new Backbone.Model({visible: false});\n        this.data.on(\"change:visible\", this.onChangedVisibility, this);\n        xabber.on(\"update_css\", function (options) {\n            this.updateCSS && this.updateCSS();\n            (options && options.size_changed && this.windowResized) && this.windowResized();\n        }, this);\n        this._initialize && this._initialize(options);\n        this.__initialize && this.__initialize(options);\n    },\n\n    isVisible: function () {\n        return this.data.get('visible');\n    },\n\n    onChangedVisibility: function () {},\n\n    show: function () {\n        this.onShow.apply(this, arguments);\n        this.data.set('visible', true);\n        this.trigger('after_show', this);\n        this.updateScrollBar();\n    },\n\n    hide: function () {\n        this.trigger('before_hide', this);\n        this.data.set('visible', false);\n        this.onHide.apply(this, arguments);\n    },\n\n    onShow: function () {\n        this.render.apply(this, arguments);\n        _.each(this.children, function (view) {\n            view.render.apply(view, arguments);\n        });\n    },\n\n    onHide: function () {\n        _.each(this.children, function (view) {\n            view.onHide.apply(view, arguments);\n        });\n    },\n\n    detach: function () {\n        this.$el.detach();\n    },\n\n    child: function (name) {\n        return this.children[name];\n    },\n\n    addChild: function (name, constructor, options) {\n        let view;\n        if (constructor instanceof Backbone.View) {\n            view = constructor;\n            view.parent = this;\n        } else {\n            view = new constructor(_.extend({\n                parent: this,\n                vname: name\n            }, options));\n        }\n        this.children[name] = view;\n        return view;\n    },\n\n    removeChild: function (name, options) {\n        options || (options = {});\n        let view = this.children[name];\n        if (view) {\n            delete this.children[name];\n            options.soft ? view.detach() : (view.trigger(\"remove\") && view.remove());\n        }\n    },\n\n    removeChildren: function () {\n        _.each(_.keys(this.children), (view_id) => {\n            this.removeChild(view_id);\n        });\n    },\n\n    setCustomCss: function (styles) {\n        this.$el.css(styles);\n    },\n\n    removeCustomCss: function () {\n        this.$el.removeAttr('style');\n    },\n\n    saveScrollBarOffset: function () {\n        if (this.ps_container && this.isVisible()) {\n            let scroll_top = this.data.get('scroll_top');\n            if (typeof scroll_top === \"undefined\") {\n                this.data.set('scroll_top', this.getScrollTop());\n            }\n        }\n    },\n\n    updateScrollBar: function () {\n        // let start_scrolled_bottom = this.getScrollBottom();\n        if (this.ps_container && this.isVisible()) {\n            let scroll_top = this.data.get('scroll_top');\n            if (typeof scroll_top === \"undefined\") {\n                this.ps_container.perfectScrollbar('update');\n            } else {\n                this.data.set('scroll_top', undefined);\n                this.scrollTo(scroll_top);\n            }\n        }\n        // this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - start_scrolled_bottom);\n        return this;\n    },\n\n    scrollTo: function (offset) {\n        this.ps_container[0].scrollTop = offset;\n        this.ps_container.perfectScrollbar('update');\n    },\n\n    scrollToTop: function () {\n        this.scrollTo(0);\n    },\n\n    scrollToBottom: function () {\n        let scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        this.scrollTo(scrollHeight - offsetHeight);\n    },\n\n    scrollToChild: function ($child) {\n        let scrollTop = _.reduce($child.prevAll(), function (sum, el) {\n            return sum + el.offsetHeight + 2;\n        }, 0);\n        this.scrollTo(scrollTop);\n    },\n\n    scrollToChildPlus: function ($child, plus_scroll) {\n        let scrollTop = _.reduce($child.prevAll(), function (sum, el) {\n            return sum + el.offsetHeight + 2;\n        }, 0);\n        plus_scroll = plus_scroll || 0;\n\n        this.scrollTo(scrollTop + plus_scroll);\n    },\n\n    getScrollTop: function () {\n        return this.ps_container[0].scrollTop;\n    },\n\n    getScrollBottom: function () {\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollHeight - (scrollTop + offsetHeight);\n    },\n\n    getPercentScrolled: function () {\n        if (this.isScrolledToTop()) {\n            return 0;\n        }\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollTop / (scrollHeight - offsetHeight);\n    },\n\n    isScrolledToTop: function () {\n        return this.getScrollTop() === 0;\n    },\n\n    isScrolledToBottom: function () {\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return (scrollHeight - (scrollTop + offsetHeight)) < 10;\n    },\n\n    destroyView: function() {\n        this.data.set('removed', true);\n        // COMPLETELY UNBIND THE VIEW\n        this.undelegateEvents();\n        this.$el.removeData().unbind();\n        // Remove view from DOM\n        this.remove();\n        Backbone.View.prototype.remove.call(this);\n    }\n});\n\nxabber.NodeView = xabber.BasicView.extend({\n    onShow: function (options, tree) {\n        if ((xabber.body.data.get('contact_details_view') && (this.vname === 'right_contact'))){\n            xabber.body.data.get('contact_details_view').scrollTo(xabber.body.data.get('contact_details_view').data.get('scroll_top'));\n            xabber.body.data.set('contact_details_view', null)\n            return;\n        }\n        if (options.close_settings && this.children.main_overlay){\n            this.children.main_overlay.hide();\n            this.children.main_overlay.$el.detach();\n            return;\n        }\n        if (!(tree && tree.main_overlay)){\n            _.each(this.children, function (view) {\n                view.hide();\n            });\n        }\n        if (!(tree && tree.main_overlay))\n            this.$el.children().detach();\n        tree = this.patchTree(tree, options) || tree;\n        _.each(this.children, (view, name) => {\n            if (tree.main_overlay && (name != 'main_overlay'))\n                return;\n            if (_.has(tree, name)) {\n                if (name !== 'login')\n                    this.$el.append(view.$el);\n                this.$el.switchClass('hidden', name === 'login');\n                view.show(options, tree[name]);\n            }\n        });\n        return this.render(options);\n    },\n\n    onHide: function (options) {\n        _.each(this.children, function (view) {\n            view.hide(options);\n        });\n    },\n\n    patchTree: function () {}\n});\n\nxabber.Container = xabber.BasicView.extend({\n    className: 'container',\n\n    render: function (options, path) {\n        if (_.isNull(path)){\n            this.$el.addClass('hidden');\n            return;\n        } else {\n            this.$el.removeClass('hidden');\n        }\n        let new_view = path.applyTo(options);\n        this.$el.children().detach();\n        if (this.view !== new_view) {\n            this.onHide(options);\n        }\n        this.view = new_view;\n        if (this.view) {\n            this.$el.append(this.view.$el);\n            this.view.show(options);\n        }\n        return this;\n    },\n\n    onHide: function (options) {\n        if (this.view) {\n            this.view.hide(options);\n        }\n        this.view = null;\n    }\n});\n\nxabber.SearchView = xabber.BasicView.extend({\n    events: {\n        \"keydown .search-input\": \"keyUpOnSearch\",\n        \"focusout .search-input\": \"clearSearchSelection\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .list-item\": \"onClickItem\"\n    },\n\n    keyUpOnSearch: function (ev) {\n        ev.stopPropagation();\n        this.ids = this.$('.list-item:not(.hidden)').map(function () {\n            return $(this).data('id');\n        }).toArray();\n        let $selection = this.getSelectedItem();\n        if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n            return this.selectNextItem();\n        }\n        if (ev.keyCode === constants.KEY_ARROW_UP) {\n            return this.selectPreviousItem();\n        }\n        if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n            ev.preventDefault();\n            return this.onEnterPressed($selection);\n        }\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            ev.preventDefault();\n            if ($(ev.target).val())\n                return this.clearSearch();\n            else\n                this.close();\n        }\n        this.updateSearch();\n    },\n\n    getSelectedItem: function () {\n        return this.$('.list-item[data-id=\"'+this.selection_id+'\"]');\n    },\n\n    selectItem: function (id, arrow) {\n        if (!id)\n            return;\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            this.ps_container[0].scrollTop = 0;\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        if (arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop || $selection[0].clientHeight + $selection[0].offsetTop < this.ps_container[0].scrollTop))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop;\n        if (arrow === 'up' && ($selection[0].offsetTop <= this.ps_container[0].scrollTop || $selection[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop;\n        $selection.addClass('selected');\n    },\n\n    selectNextItem: function () {\n        this.selectItem(this.ids[this.ids.indexOf(this.selection_id)+1], 'down');\n    },\n\n    selectPreviousItem: function () {\n        this.selectItem(this.ids[this.ids.indexOf(this.selection_id)-1], 'up');\n    },\n\n    updateSearch: function () {\n        if (!this._update_search_timeout) {\n            let query = this.$('.search-input').val();\n            this.$('.search-form').switchClass('active', query);\n            this.clearSearchSelection();\n            if (query)\n                this.search(query.toLowerCase());\n            else {\n                this.$('.list-item').removeClass('hidden');\n                this.onEmptyQuery();\n            }\n            this.updateScrollBar();\n            this.query = false;\n            this._update_search_timeout = setTimeout(() => {\n                this._update_search_timeout = null;\n                this.query && this.updateSearch();\n            }, 150);\n        } else {\n            this.query = true;\n        }\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.updateSearch();\n    },\n\n    clearSearchSelection: function (ev) {\n        this.selection_id = null;\n        this.$('.list-item.selected').removeClass('selected');\n    },\n\n    searchAll: function () {\n        this.$('.list-item').removeClass('hidden');\n    },\n\n    keyUpOnSearchWithQuery: function () {},\n\n    close: function () {},\n\n    search: function () {},\n\n    onEnterPressed: function () {},\n\n    onEmptyQuery: function () {},\n\n    onClickItem: function () {}\n});\n\n  xabber.SearchPanelView = xabber.SearchView.extend({\n      events: {\n          \"keydown .search-input\": \"keyUpOnSearch\",\n          \"focusout .search-input\": \"clearSearchSelection\",\n          \"click .close-search-icon\": \"clearSearch\",\n          \"click .list-item\": \"onClickItem\",\n          \"click .btn-search-messages\": \"updateSearchWithMessages\"\n      },\n\n      updateSearchWithMessages: function (ev) {\n          this.search_messages = true;\n          this.updateSearch();\n      },\n\n      keyUpOnSearch: function (ev) {\n          ev.stopPropagation();\n          if ($(ev.target).val()) {\n              this.keyUpOnSearchWithQuery(ev);\n              return;\n          }\n          this.ids = this.$('.list-item:not(.hidden)').map(function () {\n              return $(this).data('id');\n          }).toArray();\n          let $selection = this.getSelectedItem();\n          if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n              return this.selectNextItem();\n          }\n          if (ev.keyCode === constants.KEY_ARROW_UP) {\n              return this.selectPreviousItem();\n          }\n          if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n              ev.preventDefault();\n              return this.onEnterPressed($selection);\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              ev.preventDefault();\n              if ($(ev.target).val())\n                  return this.clearSearch();\n              else\n                  this.close();\n          }\n          this.updateSearch();\n      },\n\n      onScrollY: function (options) {\n          if (xabber.all_searched_messages && xabber.all_searched_messages.length && this.queryid && !this._loading_messages && !this._messages_loaded && this.isScrolledToBottom()) {\n              this._loading_messages = true;\n              options = options || {};\n              this.queryid = uuid();\n              options.query_id = this.queryid;\n              let accounts = xabber.accounts.connected;\n              accounts.forEach((account) => {\n                  let first_message = xabber.all_searched_messages.find(message => (message.account.get('jid') === account.get('jid')));\n                  if (!first_message || account.searched_msgs_loaded) {\n                      // this._loading_messages = false;\n                      return;\n                  }\n                  options.account = account;\n                  options.before = first_message.get('archive_id');\n                  this.MAMRequest(this.query_text, options, (messages) => {\n                      _.each(messages, (message) => {\n                          let message_from_stanza = account.chats.receiveChatMessage(message,\n                              _.extend({is_searched: true}, options)\n                              ),\n                              msg_idx = xabber.all_searched_messages.indexOf(message_from_stanza),\n                              $message_item_view;\n                          if (!message_from_stanza)\n                              return;\n                          else\n                              $message_item_view = new xabber.MessageItemView({model: message_from_stanza});\n                          if (msg_idx === 0) {\n                              $message_item_view.$el.appendTo(this.$('.messages-list-wrap .messages-list'));\n                          } else {\n                              $message_item_view.$el.insertBefore(this.$('.messages-list-wrap .message-item').eq(-msg_idx));\n                          }\n                      });\n                      this.$('.messages-list-wrap').switchClass('hidden', !this.$('.messages-list').children().length);\n                      this.updateScrollBar();\n                      this._loading_messages = false;\n                  });\n              });\n              (accounts.filter(account => account.searched_msgs_loaded).length === accounts.length) && (this._messages_loaded = true);\n          }\n      },\n\n      onScroll: function () {},\n\n      keyUpOnSearchWithQuery: function (ev) {\n          ev.stopPropagation();\n          this.ids = this.$('.searched-lists-wrap .list-item:not(.hidden)').map(function () {\n              return $(this).data('id');\n          }).toArray();\n          let $selection = this.getSelectedItemWithQuery();\n          if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n              return this.selectNextItemWithQuery();\n          }\n          if (ev.keyCode === constants.KEY_ARROW_UP) {\n              return this.selectPreviousItemWithQuery();\n          }\n          if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n              ev.preventDefault();\n              return this.onEnterPressed($selection);\n          }\n          else if (ev.keyCode === constants.KEY_ENTER){\n              this.search_messages = true;\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              ev.preventDefault();\n              if ($(ev.target).val())\n                  return this.clearSearch();\n              else\n                  this.close();\n          }\n          this.updateSearch();\n      },\n\n      getSelectedItemWithQuery: function () {\n          return this.$('.searched-lists-wrap .list-item[data-id=\"'+this.selection_id+'\"]');\n      },\n\n      selectItemWithQuery: function (id, arrow) {\n          if (!id) {\n              if (this.isScrolledToBottom())\n                  this.onScrollY();\n              return;\n          }\n          this.clearSearchSelection();\n          let $selection = this.$('.searched-lists-wrap .list-item[data-id=\"'+id+'\"]');\n          if ($selection.length) {\n              this.selection_id = id;\n          } else {\n              this.ps_container[0].scrollTop = 0;\n              $selection = this.$('.searched-lists-wrap .list-item:visible').first();\n              this.selection_id = $selection.data('id');\n          }\n          if (arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop\n          || $selection[0].clientHeight + $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop < this.ps_container[0].scrollTop))\n              this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop;\n          if (arrow === 'up' && ($selection[0].offsetTop + $selection.parent().parent()[0].offsetTop <= this.ps_container[0].scrollTop\n          || $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n              this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop;\n          $selection.addClass('selected');\n      },\n\n      selectNextItemWithQuery: function () {\n          this.selectItemWithQuery(this.ids[this.ids.indexOf(this.selection_id)+1], 'down');\n      },\n\n      selectPreviousItemWithQuery: function () {\n          this.selectItemWithQuery(this.ids[this.ids.indexOf(this.selection_id)-1], 'up');\n      },\n\n      search: function (query) {\n          this.$(this.main_container).addClass('hidden');\n          clearTimeout(this.keyup_timeout);\n          this.keyup_timeout = null;\n          this.query_text = query;\n          let query_transliterated = query_transliterate(query);\n          this.$('.contacts-list').html(\"\");\n          this.$('.chats-list').html(\"\");\n          xabber.accounts.connected.forEach((acc) => {\n              if (acc.server_features.get(Strophe.NS.XABBER_FAVORITES)) {\n                  let saved_chat = acc.chats.getSavedChat();\n                  saved_chat.set('opened', true);\n                  saved_chat.item_view.updateLastMessage();\n              }\n          });\n          let query_chats = _.clone(xabber.chats);\n          query_chats.comparator = 'timestamp';\n          query_chats.sort('timestamp').forEach((chat) => {\n              let jid = chat.get('jid').toLowerCase(),\n                  name = chat.contact ? (chat.contact.get('roster_name') || chat.contact.get('name')) : chat.get('name');\n              name && (name = name.toLowerCase());\n              if (chat.get('timestamp') || chat.get('saved')) {\n                  if (name.indexOf(query) > -1 || jid.indexOf(query) > -1\n                      || name.indexOf(query_transliterated) > -1 || jid.indexOf(query_transliterated) > -1\n                      || (chat.get('saved') && query.includes('saved'))) {\n                      let searched_by = name.indexOf(query) > -1 || name.indexOf(query_transliterated) > -1 ? 'by-name' : 'by-jid',\n                          chat_item = xabber.chats_view.child(chat.get('id'));\n                      chat_item && (chat_item = chat_item.$el.clone().addClass(searched_by));\n                      if (chat_item) {\n                          this.$('.chats-list-wrap').removeClass('hidden');\n                          if (searched_by === 'by-name')\n                              this.$('.chats-list').prepend(chat_item);\n                          else if (this.$('.chats-list .by-jid').length)\n                              chat_item.insertBefore(this.$('.chats-list .by-jid').first());\n                          else\n                              this.$('.chats-list').append(chat_item);\n                          chat_item.click(() => {\n                              this.$('.list-item.active').removeClass('active');\n                              xabber.chats_view.openChat(chat.item_view, {screen: xabber.body.screen.get('name')});\n                              chat_item.addClass('active');\n                          });\n                      }\n                  }\n              }\n          });\n          xabber.accounts.each((account) => {\n              account.contacts.each((contact) => {\n                  let jid = contact.get('jid').toLowerCase(),\n                      name = contact.get('roster_name') || contact.get('name'),\n                      chat = account.chats.get(contact.hash_id),\n                      chat_id = chat && chat.id;\n                  name && (name = name.toLowerCase());\n                  if (!chat_id || chat_id && !this.$('.chat-item[data-id=\"' + chat_id + '\"]').length)\n                      if (name.indexOf(query) > -1 || jid.indexOf(query) > -1\n                          || name.indexOf(query_transliterated) > -1 || jid.indexOf(query_transliterated) > -1) {\n                          let searched_by = name.indexOf(query) > -1 || name.indexOf(query_transliterated) > -1 ? 'by-name' : 'by-jid',\n                              item_list = xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${account.get('jid')}\"] .list-item[data-jid=\"${jid}\"]`).first().clone().data('account-jid', account.get('jid'));\n                          item_list.attr({'data-color': account.settings.get('color'), 'data-account': account.get('jid')}).addClass(searched_by).prepend($('<div class=\"account-indicator ground-color-700\"/>'));\n                          if (searched_by === 'by-name')\n                              this.$('.contacts-list').prepend(item_list);\n                          else if (this.$('.contacts-list .by-jid').length)\n                              item_list.insertBefore(this.$('.contacts-list .by-jid').first());\n                          else\n                              this.$('.contacts-list').append(item_list);\n                          item_list.click(() => {\n                              this.$('.list-item.active').removeClass('active');\n                              let chat = account.chats.getChat(contact);\n                              chat && xabber.chats_view.openChat(chat.item_view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                              item_list.addClass('active');\n                          });\n                      }\n              });\n          });\n          this.$('.chats-list-wrap').switchClass('hidden', !this.$('.chats-list').children().length);\n          this.$('.pinned-chat-list').switchClass('hidden', query);\n          this.$('.contacts-list-wrap').switchClass('hidden', !this.$('.contacts-list').children().length);\n          this.$('.messages-list-wrap').addClass('hidden').find('.messages-list').html(\"\");\n          if (query.length >= 2 && this.search_messages) {\n              this.search_messages = false;\n              this.queryid = uuid();\n              this.searchMessages(query, {query_id: this.queryid});\n          }\n          else if (query.length >= 2 && !this.search_messages){\n              this.$('.btn-search-messages').showIf(query);\n          }\n      },\n\n      searchMessages: function (query, options) {\n          this._loading_messages = true;\n          this._messages_loaded = false;\n          this.$('.messages-list-wrap').showIf(query);\n          this.$('.btn-search-messages').hideIf(query);\n          this.$('.messages-list-wrap .messages-list').html(env.templates.contacts.preloader());\n          options = options || {};\n          !options.max && (options.max = xabber.settings.mam_messages_limit);\n          !options.before && (options.before = \"\");\n          xabber.all_searched_messages = new xabber.SearchedMessages();\n          let accounts = xabber.accounts.connected;\n          accounts.forEach((account) => {\n              account.searched_msgs_loaded = false;\n              options.account = account;\n              this.MAMRequest(query, options, (messages) => {\n                  this.$('.messages-list-wrap .messages-list').html('');\n                  if (!this.query_text)\n                      return;\n                  _.each(messages, (message) => {\n                      if (!this.query_text)\n                          return;\n                      let message_from_stanza = account.chats.receiveChatMessage(message,\n                          _.extend({is_searched: true}, options)\n                          ),\n                          msg_idx = xabber.all_searched_messages.indexOf(message_from_stanza), $message_item_view;\n                          if (!message_from_stanza)\n                              return;\n                          else\n                              $message_item_view = new xabber.MessageItemView({model: message_from_stanza});\n                      if (msg_idx === 0) {\n                          $message_item_view.$el.appendTo(this.$('.messages-list-wrap .messages-list'));\n                      } else {\n                          $message_item_view.$el.insertBefore(this.$('.messages-list-wrap .message-item').eq(-msg_idx));\n                      }\n                  });\n                  this.$('.messages-list-wrap').switchClass('hidden', !this.$('.messages-list').children().length);\n                  this.updateScrollBar();\n                  this._loading_messages = false;\n              });\n          });\n          (accounts.filter(account => account.searched_msgs_loaded).length === accounts.length) && (this._messages_loaded = true);\n      },\n\n      MAMRequest: function (query, options, callback, errback) {\n          let messages = [],\n              account = options.account,\n              queryid = uuid(),\n              iq = $iq({type: 'set'})\n                  .c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                  .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                  .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                  .c('value').t(Strophe.NS.MAM).up().up()\n                  .c('field', {'var': 'withtext'})\n                  .c('value').t(query).up().up().up().cnode(new Strophe.RSM(options).toXML()),\n              handler = account.connection.addHandler((message) => {\n                  let $msg = $(message);\n                  if ($msg.find('result').attr('queryid') === queryid && options.query_id === this.queryid) {\n                      messages.push(message);\n                  }\n                  return true;\n              }, env.Strophe.NS.MAM);\n          account.sendIQFast(iq,\n              function (res) {\n                  account.connection.deleteHandler(handler);\n                  let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                  if ($fin.length && $fin.attr('queryid') === queryid) {\n                      let rsm_complete = ($fin.attr('complete') === 'true') ? true : false;\n                      rsm_complete && (account.searched_msgs_loaded = true);\n                  }\n                  callback && callback(messages);\n              },\n              function () {\n                  account.connection.deleteHandler(handler);\n                  errback && errback();\n              }\n          );\n      },\n\n      clearSearch: function (ev) {\n          ev && ev.preventDefault();\n          this.$('.search-input').val('');\n          this.updateSearch();\n          this.onEmptyQuery();\n      },\n\n      onEmptyQuery: function () {\n          xabber.accounts.forEach(function (account) {\n              account.searched_msgs_loaded = false;\n          });\n          this.query_text = null;\n          this.queryid = null;\n          this._messages_loaded = false;\n          this._loading_messages = false;\n          this.$(this.main_container).removeClass('hidden');\n          this.$('.chats-list-wrap').addClass('hidden');\n          this.$('.pinned-chat-list').removeClass('hidden');\n          this.$('.contacts-list-wrap').addClass('hidden');\n          this.$('.messages-list-wrap').addClass('hidden');\n      }\n  });\n\n  xabber.InputWidget = Backbone.View.extend({\n    field_type: 'text',\n    template: templates.input_widget,\n\n    events: {\n        \"click .field-text\": \"showInput\",\n        \"click .btn-rename\": \"showInput\",\n        \"keydown .field-input\": \"keyDown\",\n        \"keyup .field-input\": \"keyUp\",\n        \"focusout .field-input\": \"changeValue\"\n    },\n\n    initialize: function () {\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n        this.data.on(\"change:input_mode\", this.onChangedInputMode, this);\n        this.bindModelEvents();\n    },\n\n    bindModelEvents: function () {\n        this.model.on(\"change:\"+this.model_field, this.updateValue, this);\n    },\n\n    showInput: function () {\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    onChangedInputMode: function () {\n        let input_mode = this.data.get('input_mode');\n        this.$value.hideIf(input_mode);\n        this.$btn.hideIf(input_mode);\n        this.$input.showIf(input_mode).focus();\n    },\n\n    keyDown: function (ev) {\n        ev.stopPropagation();\n        let value = this.getValue();\n        if (ev.keyCode === constants.KEY_ENTER) {\n            this.changeValue();\n        } else if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.$input.removeClass('changed').val(value);\n            this.data.set('input_mode', false);\n        }\n    },\n\n    keyUp: function (ev) {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        return this.model.get(this.model_field);\n    },\n\n    setValue: function (value) {\n        this.model.save(this.model_field, value);\n    },\n\n    changeValue: function () {\n        let value = this.getValue(),\n            new_value = this.$input.removeClass('changed').val();\n        new_value !== value && this.setValue(new_value);\n        this.data.set('input_mode', false);\n    },\n\n    updateValue: function () {\n        let value = this.getValue();\n        this.$value.text(value);\n        this.$input.val(value);\n    }\n});\n\nxabber.Body = xabber.NodeView.extend({\n    className: 'client-body-wrap',\n\n    _initialize: function () {\n        this.vname = 'body';\n        this.data.set('visible', true);\n        this.screen = new Backbone.Model();\n        this.screen_map = new Backbone.Model();\n        this.screen.on(\"change\", this.update, this);\n        this.screen_map.on(\"change\", this.onScreenMapChanged, this);\n        $(constants.CONTAINER_ELEMENT).append(this.$el);\n        this.updateBackground();\n        this.updateMainColor();\n        this.updateAvatarShape();\n        $('#modals').insertAfter(this.$el);\n        xabber.on('update_main_color', this.updateMainColor, this);\n        xabber.on('update_avatar_shape', this.updateAvatarShape, this);\n    },\n\n    addScreen: function (name, attrs) {\n        this.screen_map.set(name, attrs);\n    },\n\n    updateMainColor: function () {\n        this.$el.attr('data-main-color', xabber.settings.main_color);\n        this.$el.siblings('#modals').attr('data-main-color', xabber.settings.main_color);\n        $(window.document).find('.login-container').attr('data-main-color', xabber.settings.main_color);\n    },\n\n    updateAvatarShape: function () {\n        let shape = xabber.settings.avatar_shape;\n        $(constants.CONTAINER_ELEMENT).switchClass('non-circle-avatars', shape != 'circle');\n        $(constants.CONTAINER_ELEMENT).switchClass('octagon-avatars', shape === 'octagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('hexagon-avatars', shape === 'hexagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('pentagon-avatars', shape === 'pentagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('rounded-avatars', shape === 'rounded');\n        $(constants.CONTAINER_ELEMENT).switchClass('star-avatars', shape === 'star');\n        $(constants.CONTAINER_ELEMENT).switchClass('squircle-avatars', shape === 'squircle');\n    },\n\n    updateBackground: function () {\n        let background_settings = xabber.settings.background || {};\n        if (background_settings.image) {\n            if (background_settings.type === 'repeating-pattern') {\n                this.$el.css({\n                    'background-repeat': 'repeat',\n                    'background-size': 'unset',\n                    'background-image': `url(\"${utils.images.getCachedBackground(background_settings.image)}\")`\n                });\n            } else if (background_settings.type === 'image') {\n                this.$el.css({\n                    'background-repeat': 'no-repeat',\n                    'background-size': 'cover',\n                    'background-image': `url(\"${utils.images.getCachedBackground(background_settings.image)}\")`\n                });\n            }\n        } else {\n            this.$el.css({\n                'background-repeat': 'repeat',\n                'background-size': 'unset',\n                'background-image': `url(\"${constants.BACKGROUND_IMAGE}\")`,\n                'box-shadow': 'none'\n            });\n        }\n        this.updateBoxShadow(xabber.settings.appearance.vignetting);\n    },\n\n    updateBoxShadow: function (value) {\n        value = Number(value);\n        if (!value)\n            this.$el.css({\n                'box-shadow': `unset`\n            });\n        else\n            this.$el.css({\n            'box-shadow': `${value}px 0 100px 1px rgba(0, 0, 0, 0.7) inset, -${value}px 0 100px -1px rgba(0, 0, 0, 0.7) inset`\n        });\n    },\n\n    updateBlur: function (value) {\n        value = Number(value);\n        xabber.blur_overlay.$el.css({\n            \"backdrop-filter\": `blur(${value}px)`,\n            \"-webkit-backdrop-filter\": `blur(${value}px)`\n        });\n    },\n\n    setScreen: function (name, attrs, options) {\n        xabber.error(name);\n        options = options || {};\n        $(window).unbind(\"keydown.contact_panel\");\n        xabber.notifications_placeholder && xabber.main_panel.$el.addClass('notifications-request');\n        $(constants.CONTAINER_ELEMENT).switchClass('xabber-login', name === 'login');\n        $(constants.CONTAINER_ELEMENT).switchClass('on-xabber-login', name !== 'login');\n        let new_attrs = {stamp: _.uniqueId()};\n        if (name && !this.isScreen(name)) {\n            new_attrs.name = name;\n        }\n        if (!attrs || !attrs.show_placeholder) {\n            new_attrs.show_placeholder = null;\n        }\n        if ((attrs && attrs.right && attrs.right === 'group_invitation') || options.right_force_close)\n            new_attrs.right_contact = null;\n        else {\n            new_attrs.right_contact = xabber.body.screen.get('right_contact');\n        }\n        if ((!attrs && xabber.body.screen.get('right'))\n            || (attrs && !attrs.right && attrs.right !== null && xabber.body.screen.get('right')))\n            new_attrs.right = xabber.body.screen.get('right');\n        new_attrs = _.extend(new_attrs, attrs);\n        let chat_item_view;\n        if (_.isUndefined(new_attrs.chat_item)){\n            chat_item_view = this.screen.get('chat_item');\n            if (chat_item_view && chat_item_view.content)\n                chat_item_view.content._prev_scrolltop = chat_item_view.content.getScrollTop() || chat_item_view.content._scrolltop;\n        }\n        if (name){\n            let tree = this.screen_map.get(name);\n            if (tree && tree.main_overlay){\n                if (!this.screen.get('previous_screen'))\n                    new_attrs.previous_screen = {...this.screen.attributes};\n            } else {\n                new_attrs.previous_screen = undefined;\n            }\n        }\n        this.screen.set(_.extend(new_attrs, attrs), options);\n    },\n\n    isScreen: function (name) {\n        return this.screen.get('name') === name;\n    },\n\n    onScreenMapChanged: function () {\n        let name = this.screen.get('name');\n        if (_.has(this.screen_map.changed, name)) {\n            this.update();\n        }\n    },\n\n    showChatPlaceholder: function () {\n        try {\n            xabber.right_panel.$el.children().detach();\n            xabber.right_panel.$el.append(xabber.chat_placeholder.$el);\n        } catch (e) {\n            console.log(e)\n        }\n    },\n\n    update: function () {\n        let options = this.screen.attributes,\n            tree = this.screen_map.get(options.name);\n        if (typeof tree !== \"undefined\") {\n            this.onShow(options, tree);\n            this.model.trigger('update_screen', this.screen.get('name'));\n            this.model.trigger('update_layout', {screen_changed: options.name});\n        }\n    }\n});\n\nxabber.ToolbarView = xabber.BasicView.extend({\n    className: \"toolbar noselect\",\n    ps_selector: '.accounts',\n    template: templates.toolbar,\n\n    events: {\n        \"click .toolbar-logo\":             \"clickAllChats\",\n        \"click .all-chats\":             \"showAllChats\",\n        \"click .contacts\":              \"showContacts\",\n        \"click .archive-chats\":         \"showArchive\",\n        \"click .saved-chats\":           \"showSavedChats\",\n        \"click .mentions\":              \"showNotifications\",\n        \"click .settings\":              \"showSettings\",\n        \"click .settings-modal\":              \"showSettingsModal\",\n        \"click .jingle-calls\":              \"showPlaceholder\",\n        \"click .geolocation-chats\":              \"showPlaceholder\",\n        \"click .add-variant.contact\":   \"showAddContactView\",\n        \"click .add-variant.account\":   \"showAddAccountView\",\n        \"click .add-variant.public-groupchat\": \"showAddPublicGroupChatView\",\n        \"click .add-variant.incognito-groupchat\": \"showAddIncognitoGroupChatView\",\n    },\n\n    _initialize: function () {\n        this.$('.add-something').on(\"change_state\", function (ev, state) {\n            $(this).switchClass('active', state).find('.mdi')\n                    .switchClass('mdi-close', state)\n                    .switchClass('mdi-plus', !state);\n            if (state) {\n                this.setAttribute('data-title',  this.getAttribute('title'));\n                this.setAttribute('title', \"\");\n            } else {\n                this.setAttribute('title', this.getAttribute('data-title'));\n                this.removeAttribute('data-title');\n            }\n        });\n\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        this.data.on(\"change:all_msg_counter\", this.onChangedAllMessageCounter, this);\n        this.data.on(\"change:group_msg_counter\", this.onChangedGroupMessageCounter, this);\n        this.data.on(\"change:mentions_counter\", this.onChangedMentionsCounter, this);\n        this.data.on(\"change:msg_counter\", this.onChangedMessageCounter, this);\n        this.data.set({msg_counter: 0});\n        this.data.set({group_msg_counter: 0});\n        this.data.set({all_msg_counter: 0});\n        this.data.set({mentions_counter: 0});\n    },\n\n    render: function () {\n        this.$('.add-something').dropdown({\n            inDuration: 50,\n            outDuration: 50,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        this.$('.add-variant.account').hideIf(!constants.LOGIN_CUSTOM_DOMAIN && !constants.LOGIN_DOMAINS.length);\n    },\n\n    updateColor: function (color) {\n    },\n\n    onUpdatedScreen: function (name) {\n        if (name === 'account_settings_modal' || name === 'settings-modal'){\n            return;\n        }\n        if ((name === 'all-chats') &&\n            (this.$('.toolbar-item:not(.toolbar-logo).all-chats').hasClass('active') ||\n                this.$('.toolbar-item:not(.toolbar-logo).chats').hasClass('active')||\n                this.$('.toolbar-item:not(.toolbar-logo).saved-chats').hasClass('active')||\n                this.$('.toolbar-item:not(.toolbar-logo).mentions').hasClass('active')||\n                this.$('.toolbar-item:not(.toolbar-logo).archive-chats').hasClass('active'))) {\n            return;\n        }\n        this.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n        if (_.contains(['all-chats', 'contacts', 'mentions',\n                        'settings', 'settings-modal', 'search', 'jingle-calls', 'geolocation-chats', 'about'], name)) {\n            this.$('.toolbar-item:not(.toolbar-logo).'+name).addClass('active');\n        }\n    },\n\n    clickAllChats: function (ev) {\n        this.$('.all-chats').click();\n    },\n\n    showAllChats: function (ev, no_unread) {\n        let $el;\n        if (ev && ev.target)\n            $el = $(ev.target).closest('.toolbar-item:not(.toolbar-logo)');\n        else\n            $el = this.$('.all-chats');\n        let is_active = $el.hasClass('active') && !$el.hasClass('unread');\n        this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n            .filter('.all-chats').addClass('active').switchClass('unread', is_active);\n        let options = {}\n        no_unread && (options.no_unread = no_unread);\n        xabber.body.setScreen('all-chats', options);\n        xabber.trigger('show_all_chats', no_unread);\n        xabber.trigger('update_placeholder');\n    },\n\n    showArchive: function (ev, no_unread) {\n        this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n            .filter('.archive-chats').addClass('active');\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_archive_chats', no_unread);\n        xabber.trigger('update_placeholder');\n    },\n\n    showSavedChats: function (ev, no_unread) {\n        if (xabber.accounts.enabled.length === 1){\n            if (!xabber.accounts.enabled[0].server_features.get(Strophe.NS.XABBER_FAVORITES)) {\n                return;\n            }\n            let saved_chat = xabber.accounts.enabled[0].chats.getSavedChat();\n            saved_chat.item_view && saved_chat.item_view.open({right_contact_save: true, clear_search: false, scroll_to_chat: true});\n            this.$('.active').removeClass('active');\n            this.$('.saved-chats').addClass('active');\n            saved_chat.once(\"change:active\", () => {\n                xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n                xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).'+xabber.body.screen.get('name')).addClass('active');\n            });\n        } else {\n            this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n                .filter('.saved-chats').addClass('active');\n            xabber.body.setScreen('all-chats',);\n            xabber.trigger('show_saved_chats', no_unread);\n            xabber.trigger('update_placeholder');\n        }\n    },\n\n    showNotifications: function (ev, no_unread) {\n        this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n            .filter('.mentions').addClass('active');\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_notification_chats', no_unread);\n        xabber.trigger('update_placeholder');\n    },\n\n    showChatsByAccount: function (account) {\n        if (this.data.get('account_filtering') === account.get('jid'))\n            this.data.set('account_filtering', null);\n        else\n            this.data.set('account_filtering', account.get('jid'));\n        if (this.$('.toolbar-item:not(.toolbar-logo).all-chats').hasClass('active')) {\n            this.showAllChats(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).archive-chats').hasClass('active')) {\n            this.showArchive(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).saved-chats').hasClass('active')) {\n            this.showSavedChats(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).mentions').hasClass('active')) {\n            this.showNotifications(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).jingle-calls').hasClass('active') ||\n            this.$('.toolbar-item:not(.toolbar-logo).geolocation-chats').hasClass('active')){\n            this.showAllChats(null, true);\n            return;\n        }\n    },\n\n    showContacts: function () {\n        xabber.body.setScreen('contacts', {right_contact: null});\n        xabber.trigger('update_placeholder');\n    },\n\n    showMentions: function () {\n        xabber.body.setScreen('mentions');\n        xabber.trigger('update_placeholder');\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    },\n\n    showSettingsModal: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    },\n\n    showPlaceholder: function (ev) {\n        if (xabber.chats_view && xabber.chats_view.active_chat){\n            xabber.chats_view.active_chat.model.trigger('hide_chat');\n            xabber.chats_view.active_chat = null;\n        }\n        let screen_name = this.$('.toolbar-item:not(.toolbar-logo).settings').hasClass('active') ? 'all-chats' : xabber.body.screen.get('name');\n        xabber.body.setScreen(screen_name, {chat_item: null});\n        let $el = $(ev.target).closest('.toolbar-item:not(.toolbar-logo)');\n        this.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n        $el.addClass('active');\n        xabber.trigger('update_placeholder');\n    },\n\n    showAddContactView: function () {\n        xabber.trigger('add_contact', {right: null});\n    },\n\n    showAddAccountView: function () {\n        xabber.trigger('add_account', {right: null});\n    },\n\n    showAddIncognitoGroupChatView: function () {\n        xabber.trigger('add_group_chat', {incognito: true, right: null});\n    },\n\n    showAddPublicGroupChatView: function () {\n        xabber.trigger('add_group_chat', {public: true, right: null});\n    },\n\n    setAllMessageCounter: function () {\n        let count_msg = 0, count_all_msg = 0, count_group_msg = 0, mentions = 0;\n        xabber.accounts.each((account) => {\n            account.chats.each((chat) => {\n                if (chat.contact && !chat.isMuted()) {\n                    if (chat.get('unread') || chat.get('const_unread')){\n                        xabber.error(chat);\n                    }\n                    count_all_msg += chat.get('unread') + chat.get('const_unread');\n                    if (chat.contact.get('group_chat'))\n                        count_group_msg += chat.get('unread') + chat.get('const_unread');\n                    else\n                        count_msg += chat.get('unread') + chat.get('const_unread');\n                }\n            });\n            let incoming_subscriptions = account.contacts.filter(item => (item.get('invitation') && !item.get('removed')) || (item.get('subscription_request_in') && item.get('subscription') != 'both')).length;\n            count_all_msg += incoming_subscriptions;\n            mentions += account.unread_mentions.length;\n        });\n        return { msgs: count_msg, all_msgs: count_all_msg, group_msgs: count_group_msg, mentions: mentions };\n    },\n\n    recountAllMessageCounter: function () {\n        let unread_messages = this.setAllMessageCounter();\n        this.data.set('all_msg_counter', unread_messages.all_msgs);\n        this.data.set('msg_counter', unread_messages.msgs);\n        this.data.set('group_msg_counter', unread_messages.group_msgs);\n        this.data.set('mentions_counter', unread_messages.mentions);\n        xabber.recountAllMessageCounter();\n    },\n\n    onChangedMessageCounter: function () {\n        let c = this.data.get('msg_counter');\n        this.$('.msg-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedGroupMessageCounter: function () {\n        let c = this.data.get('group_msg_counter');\n        this.$('.group-msg-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedMentionsCounter: function () {\n        let c = this.data.get('mentions_counter');\n        this.$('.mentions-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedAllMessageCounter: function () {\n        let c = this.data.get('all_msg_counter');\n        if (c >= 100)\n            c = '99+';\n        this.$('.all-msg-indicator').switchClass('unread', c).text(c);\n    },\n});\n\nxabber.JingleMessageView = xabber.BasicView.extend({\n    className: 'modal main-modal jingle-message-view',\n    template: templates.jingle_message_calling,\n    avatar_size: constants.AVATAR_SIZES.XABBER_VOICE_CALL_VIEW,\n\n    events: {\n        \"click\": \"clickOnWindow\",\n        \"click .btn-accept\": \"accept\",\n        \"click .btn-share-screen\": \"shareScreen\",\n        \"click .btn-microphone\": \"toggleMicrophone\",\n        \"click .btn-video\": \"videoCall\",\n        \"click .btn-volume\": \"toggleVolume\",\n        \"click .btn-collapse\": \"collapse\",\n        \"click .btn-cancel\": \"cancel\",\n        \"click .btn-full-screen\": \"setFullScreen\"\n    },\n\n    _initialize: function (options) {\n        this.model = options.model;\n        this.model.on('destroy', this.onDestroy, this);\n        this.contact = this.model.contact;\n        this.account = this.contact.account;\n        this.model.on('change:state', this.updateCallingStatus, this);\n        this.model.on('change:status', this.updateBackground, this);\n        this.model.on('change:volume_on', this.updateButtons, this);\n        this.model.on('change:video_live', this.updateButtons, this);\n        this.model.on('change:video_screen', this.updateButtons, this);\n        this.model.on('change:video_in', this.updateCollapsedWindow, this);\n        this.model.on('change:video', this.updateCollapsedWindow, this);\n        this.model.on('change:audio', this.updateButtons, this);\n    },\n\n    render: function (options) {\n        options = options || {};\n        this.updateName();\n        this.updateCallingStatus(options.status);\n        if (options.status === 'in') {\n            this.updateStatusText(xabber.getString(\"dialog_jingle_message__status_calling\"));\n        }\n        else {\n            this.model.set('status', 'calling');\n        }\n        this.updateAccountJid();\n        this.updateButtons();\n        this.$el.openModal({\n            dismissible: false,\n            ready: () => {\n                this.updateAvatar();\n                this.pos1 = 0;\n                this.pos2 = 0;\n                this.pos3 = 0;\n                this.pos4 = 0;\n                this.$('.collapsed-movable').mousedown((e) => {\n                    e = e || window.event;\n                    e.preventDefault();\n                    // get the mouse cursor position at startup:\n                    this.pos3 = e.clientX;\n                    this.pos4 = e.clientY;\n                    let didDrag = false;\n                    document.onmouseup = (e) => {\n                        document.onmouseup = null;\n                        document.onmousemove = null;\n                        if (!didDrag)\n                            this.collapse();\n                    };\n                    // call a function whenever the cursor moves:\n                    document.onmousemove = (e) => {\n                        e = e || window.event;\n                        e.preventDefault();\n                        // calculate the new cursor position:\n                        this.pos1 = this.pos3 - e.clientX;\n                        this.pos2 = this.pos4 - e.clientY;\n                        this.pos3 = e.clientX;\n                        this.pos4 = e.clientY;\n                        // set the element's new position:\n                        this.$el.css('top', (this.$el.offset().top - this.pos2) + \"px\");\n                        this.$el.css('left', (this.$el.offset().left - this.pos1) + \"px\");\n                        this.$el.css('transform', \"none\");\n                        this.$el.css('right', \"unset\");\n                        didDrag = true;\n                    };\n                });\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n\n    },\n\n    setFullScreen: function () {\n        if (document.fullscreenElement) {\n            document.exitFullscreen();\n        } else if(this.$el.length) {\n            this.$el[0].requestFullscreen();\n        }\n    },\n\n    cancelFullScreen: function () {\n        if (document.exitFullscreen) {\n            let full_screen_el = document.fullscreenElement;\n            full_screen_el && document.exitFullscreen().then(() => {\n                document.fullscreenElement && this.cancelFullScreen();\n            });\n        } else if (document.mozCancelFullScreen) { /* Firefox */\n            let full_screen_el = document.mozFullScreenElement;\n            full_screen_el && document.mozCancelFullScreen();\n            document.mozFullScreenElement && this.cancelFullScreen();\n        } else if (document.webkitExitFullscreen) { /* Chrome, Safari and Opera */\n            let full_screen_el = document.webkitCurrentFullScreenElement;\n            full_screen_el && document.webkitExitFullscreen();\n            document.webkitCurrentFullScreenElement && this.cancelFullScreen();\n        } else if (document.msExitFullscreen) { /* IE/Edge */\n            let full_screen_el = document.msFullscreenElement;\n            full_screen_el && document.msExitFullscreen();\n            document.msFullscreenElement && this.cancelFullScreen();\n        }\n    },\n\n    windowResized: function () {\n        this.$el.hasClass('collapsed') && this.$el.css('right', parseInt(xabber.main_panel.$el.css('margin-right')) + 8 + 'px');\n    },\n\n    updateButtons: function () {\n        this.$('.btn-video .video').switchClass('hidden', !this.model.get('video'));\n        this.$('.btn-share-screen').switchClass('active', this.model.get('video_screen'));\n        this.$('.btn-full-screen').switchClass('hidden', !this.model.get('video_in'));\n        this.$('.btn-video').switchClass('mdi-video active', this.model.get('video_live'))\n            .switchClass('mdi-video-off', !this.model.get('video_live'));\n        this.$('.btn-volume').switchClass('mdi-volume-high active', this.model.get('volume_on'))\n            .switchClass('mdi-volume-off', !this.model.get('volume_on'));\n        this.$('.btn-microphone').switchClass('active mdi-microphone', this.model.get('audio'))\n            .switchClass('mdi-microphone-off', !this.model.get('audio'));\n    },\n\n    updateAvatar: function () {\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateBackground: function () {\n        let status = this.model.get('status');\n        this.$el.attr('data-state', status);\n    },\n\n    updateCallingStatus: function (status) {\n        this.$('.buttons-wrap').switchClass('incoming', (status === 'in'));\n    },\n\n    updateStatusText: function (status) {\n        this.$('.calling-status').text(status || \"\");\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.contact.get('name'));\n    },\n\n    updateAccountJid: function () {\n        this.$('.modal-footer .contact-info .jid').text(this.contact.get('jid'));\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    shareScreen: function () {\n        this.model.set('video_screen', !this.model.get('video_screen'));\n    },\n\n    isFullScreen: function () {\n        if (document.fullscreenElement)\n            return true;\n        else if (document.webkitFullscreenElement)\n            return true;\n        else if (document.mozFullScreenElement)\n            return true;\n        else return false;\n    },\n\n    accept: function () {\n        this.model.accept();\n        this.updateCallingStatus(constants.JINGLE_MSG_ACCEPT);\n        this.model.initSession();\n    },\n\n    clickOnWindow: function (ev) {\n        if ($(ev.target).closest('.collapsed-movable').length)\n            return;\n        if ($(ev.target).closest('.video-wrap').length && this.$el.hasClass('collapsed') && this.$el.hasClass('collapsed-video'))\n            this.collapse();\n    },\n\n    collapse: function (ev) {\n        ev && ev.stopPropagation();\n        if (this.isFullScreen()) {\n            this.cancelFullScreen();\n            return;\n        }\n        let $overlay = this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId'));\n        $overlay.toggle();\n        this.$el.toggleClass('collapsed');\n        if (this.$el.hasClass('collapsed')) {\n            this.$el.switchClass('collapsed-video', (this.model.get('video') || this.model.get('video_in')));\n            this.$el.switchClass('multiple-videos', this.model.get('video') && this.model.get('video_in'));\n        }\n        else {\n            this.$el.css('right', \"\");\n            this.$el.css('left', \"\");\n            this.$el.css('width', \"\");\n            this.$el.css('height', \"\");\n            this.$el.removeClass('collapsed-video');\n        }\n        this.windowResized();\n    },\n\n    updateCollapsedWindow: function () {\n        this.updateButtons();\n        if (this.$el.hasClass('collapsed')) {\n            this.$el.switchClass('collapsed-video', (this.model.get('video') || this.model.get('video_in')));\n            this.$el.switchClass('multiple-videos', this.model.get('video') && this.model.get('video_in'));\n        }\n    },\n\n    toggleMicrophone: function () {\n        this.model.set('audio', !this.model.get('audio'));\n    },\n\n    onDestroy: function (status) {\n        let status_text;\n        if (this.model.get('status') == 'device_busy')\n            status_text = 'dialog_jingle_message__status_device_busy';\n        else if (this.model.get('status') == 'busy')\n            status_text = 'dialog_jingle_message__status_busy';\n        else if (this.model.get('status') == 'accepted_another_device')\n            status_text = 'dialog_jingle_message__status_another_device_accepted';\n        else\n            status_text = 'dialog_jingle_message__status_disconnected';\n        this.updateStatusText(xabber.getString(status_text));\n        setTimeout(() => {\n            this.close();\n            this.$el.detach();\n        }, 3000);\n    },\n\n    videoCall: function () {\n        this.model.set('video_live', !this.model.get('video_live'));\n    },\n\n    toggleVolume: function (ev) {\n        let $target = $(ev.target);\n        $target.switchClass(this.model.set('volume_on', !this.model.get('volume_on')));\n    },\n\n    cancel: function () {\n        this.model.reject();\n        this.close();\n    }\n});\n\nxabber.PlyrPlayerPopupView = xabber.BasicView.extend({\n    className: 'modal main-modal player-overlay plyr-player-popup-view',\n    template: templates.plyr_player_popup,\n\n    events: {\n        \"click .mdi-close\": \"closePopup\",\n        \"click .mdi-minimize-float\": \"floatPopup\",\n        \"click .mdi-minimize-full\": \"fullPopup\",\n        \"click .mdi-plyr-hide\": \"hidePopup\",\n        \"click .btn-next-plyr\": \"nextPlyr\",\n        \"click .btn-previous-plyr\": \"previousPlyr\",\n        \"click .mdi-open-message\": \"openMessage\",\n        \"click .mdi-toggle-play\": \"togglePlay\",\n        \"click .mdi-toggle-mute\": \"toggleMute\",\n    },\n\n    _initialize: function (options) {\n        this.data.set('visibility_state', 0);\n        this.data.on('change:visibility_state', this.onVisibilityChange, this);\n        xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n    },\n\n    render: function (options) {\n        options = options || {};\n        this.$el.openModal({\n            dismissible: false,\n            ready: () => {\n                if (!this.player){\n                    this.player = new Plyr('.plyr-player-popup', {\n                        controls: [\n                            'play-large', 'play', 'progress', 'duration', 'mute', 'volume', 'settings', 'download', 'fullscreen',\n                        ],\n                        youtube: {controls: 0, disablekb: 1, iv_load_policy: 3, modestbranding: 1, rel: 0, showinfo: 0}\n                    });\n                    this.player.on('play',(event) => {\n                        let other_players = xabber.plyr_players.filter(other => other != this.player);\n                        other_players.forEach(function(other) {\n                            if (other.$audio_elem){\n                                if (other.$audio_elem.voice_message)\n                                    other.$audio_elem.voice_message.stopTime();\n                            }\n                        })\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('pause',(event) => {\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('timeupdate',(event) => {\n                        xabber.trigger('plyr_player_time_updated');\n                    });\n                    this.player.on('volumechange',(event) => {\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('statechange',(event) => {\n                        if (event.detail.code === 3) {\n                            this.$('.plyr-player-popup-draggable').removeClass('hidden');\n                            this.$('.plyr-player-popup-draggable').css({\n                                width: '',\n                                height: '',\n                            });\n                        }\n                        xabber.trigger('plyr_player_updated');\n                    });\n                }\n                this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId')).mousedown(() => {this.minimizePopup()});\n                this.showNewVideo(options);\n                this.onVisibilityChange();\n                this.updatePlyrControls();\n                this.pos1 = 0;\n                this.pos2 = 0;\n                this.pos3 = 0;\n                this.pos4 = 0;\n                this.$('.plyr-player-min-controls-tab').mousedown((e) => {\n                    e = e || window.event;\n                    if ($(e.target).closest('.plyr__control--overlaid').length || $(e.target).closest('.plyr__controls').length || $(e.target).closest('.mdi-close').length || $(e.target).closest('.plyr-player-min-controls-buttons').length)\n                        return;\n                    e.preventDefault();\n                    // get the mouse cursor position at startup:\n                    this.pos3 = e.clientX;\n                    this.pos4 = e.clientY;\n                    let didDrag = false;\n                    document.onmouseup = (e) => {\n                        document.onmouseup = null;\n                        document.onmousemove = null;\n                        if (!didDrag && !$(e.target).closest('.plyr__control--overlaid').length)\n                            this.$('.plyr__video-wrapper').click();\n                    };\n                    // call a function whenever the cursor moves:\n                    document.onmousemove = (e) => {\n                        e = e || window.event;\n                        didDrag = true;\n                        e.preventDefault();\n                        if (this.$el.hasClass('player-overlay'))\n                            return;\n                        // calculate the new cursor position:\n                        this.pos1 = this.pos3 - e.clientX;\n                        this.pos2 = this.pos4 - e.clientY;\n                        this.pos3 = e.clientX;\n                        this.pos4 = e.clientY;\n\n                        let xPercent = (((this.$el.offset().left - this.pos1)/window.innerWidth) * 100),\n                            yPercent = (((this.$el.offset().top - this.pos2)/window.innerHeight) * 100);\n\n\n                        // set the element's new position:\n                        this.$el.css('left', xPercent + '%');\n                        this.$el.css('top', yPercent + '%');\n                        this.$el.css('transform', \"none\");\n                        this.$el.css('right', \"unset\");\n                    };\n                });\n            },\n        });\n\n    },\n\n    showNewVideo: function (options) {\n        options = options || {};\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            if (options.player.provider === 'youtube'){\n                this.$('.plyr-player-popup-draggable').addClass('hidden');\n                this.$('.plyr-player-popup-draggable').css({\n                    width: 400,\n                    height: 200,\n                });\n            }\n            this.account = options.player.chat_item.account;\n            this.updateColorScheme();\n            this.player.chat_item = options.player.chat_item;\n            this.player.player_item = options.player;\n            this.player.message_unique_id = options.player.message_unique_id;\n            let video_sources = {\n                src: options.player.video_src,\n                provider: options.player.provider,\n            };\n            options.player.type && (video_sources.type = options.player.type);\n            this.player.source = {\n                type: 'video',\n                sources: [\n                    video_sources,\n                ],\n            }\n            xabber.current_plyr_player = this.player;\n            this.player.once('ready',(event) => {\n                let $minimize_element_float = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-minimize mdi-minimize-float mdi-svg-template\" data-svgname=\"player-float\"></svg>')\n                $minimize_element_float.append(env.templates.svg['player-float']())\n                $minimize_element_float.insertBefore(this.$('.plyr__controls__item[data-plyr=\"fullscreen\"]'));\n                let $minimize_element_full = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-minimize mdi-minimize-full mdi-svg-template\" data-svgname=\"player-full\"></svg>')\n                $minimize_element_full.append(env.templates.svg['player-full']())\n                $minimize_element_full.insertBefore(this.$('.plyr__controls__item[data-plyr=\"fullscreen\"]'));\n                let $show_message_element_full = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-open-message mdi-svg-template\" data-svgname=\"message-bookmark-outline\"></svg>')\n                $show_message_element_full.append(env.templates.svg['message-bookmark-outline']())\n                $show_message_element_full.insertAfter(this.$('.plyr__controls__item[data-plyr=\"download\"]'));\n                let $previous_element = $('<div class=\"btn-previous-plyr\"><i class=\"mdi mdi-skip-previous mdi-24px\"></i></div>')\n                $previous_element.insertBefore(this.$('.plyr__controls__item[data-plyr=\"play\"]'));\n                let $next_element = $('<div class=\"btn-next-plyr\"><i class=\"mdi mdi-skip-next mdi-24px\"></i></div>')\n                $next_element.insertAfter(this.$('.plyr__controls__item[data-plyr=\"play\"]'));\n                this.player.play();\n                xabber.trigger('plyr_player_updated');\n            });\n        });\n\n        if (options.player && options.player.video_file && options.player.video_file.key) {\n            options.player.key = options.player.video_file.key;\n            options.player.video_file.type && (options.player.type = options.player.video_file.type);\n        }\n\n        if (options.player && options.player.key && options.player.chat_item.model && options.player.video_src && !options.player.video_decrypted){\n            options.player.chat_item.model.messages.decryptFile(options.player.video_src, options.player.key).then((result) => {\n                options.player.video_src = result;\n                options.player.video_decrypted = true;\n                dfd.resolve();\n            });\n        } else\n            dfd.resolve();\n    },\n\n    closePopup: function () {\n        this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId')).detach();\n        this.$el.detach();\n        xabber.current_plyr_player = null;\n        xabber.plyr_player_popup = null;\n        xabber.trigger('plyr_player_updated');\n    },\n\n    minimizePopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        let visibility_state = this.data.get('visibility_state');\n        visibility_state = visibility_state + 1;\n        (visibility_state > 2) && (visibility_state = 0);\n        this.data.set('visibility_state', visibility_state);\n    },\n\n    hidePopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 2);\n    },\n\n    floatPopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 1);\n    },\n\n    fullPopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 0);\n    },\n\n    onVisibilityChange: function () {\n        let visibility_state = this.data.get('visibility_state'),\n            $overlay = this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId'));\n        $overlay.switchClass('hidden', visibility_state != 0);\n        this.$el.switchClass('player-overlay', visibility_state === 0);\n        this.$el.switchClass('hidden', visibility_state === 2);\n    },\n\n    nextPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n            let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n            if (!next_item.$audio_elem.voice_message){\n                let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                next_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n        }\n    },\n\n    previousPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n            let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n            if (!prev_item.$audio_elem.voice_message){\n                let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                prev_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n        }\n    },\n\n    updatePlyrControls: function () {\n        if (xabber.current_plyr_player) {\n            let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n            this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n            this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n            this.$('.mdi-plyr-play').switchClass('hidden', xabber.current_plyr_player.playing);\n            this.$('.mdi-plyr-pause').switchClass('hidden', !xabber.current_plyr_player.playing);\n            this.$('.mdi-mute-plyr').switchClass('hidden', !xabber.current_plyr_player.muted);\n            this.$('.mdi-unmute-plyr').switchClass('hidden', xabber.current_plyr_player.muted);\n        }\n    },\n\n    openMessage: function () {\n        if (!(this.player && this.player.chat_item && this.player.message_unique_id))\n            return;\n        this.floatPopup();\n        let chat = this.player.chat_item.model;\n        xabber.chats_view.openChat(chat.item_view, {right_contact_save: true, clear_search: false});\n        xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'message_context', model: chat });\n        if (xabber.right_contact_panel_saveable && xabber.body.screen.get('right_contact') && xabber.body.screen.get('right') === 'message_context') {\n            if (xabber.right_contact_panel_saveable)\n                chat.contact.showDetailsRight('all-chats', {right_saved: true});\n            else\n                chat.contact.showDetailsRight('all-chats', {right_saved: false});\n        }\n        chat.getMessageContext(this.player.message_unique_id, {message: true});\n    },\n\n    togglePlay: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        if (xabber.current_plyr_player.$audio_elem){\n            if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n            } else {\n                xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n            }\n        } else\n            xabber.current_plyr_player.togglePlay();\n    },\n\n    toggleMute: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        xabber.current_plyr_player.muted = !xabber.current_plyr_player.muted;\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n        this.account.settings.once(\"change:color\", this.updateColorScheme, this);\n    },\n});\n\nxabber.SettingsModalView = xabber.BasicView.extend({\n    className: 'settings-panel-wrap',\n    template: templates.settings_modal,\n    ps_selector: '.settings-panel',\n\n    events: {\n        \"click .background-overlay\": \"closeSettings\",\n        \"click .btn-back\": \"backToMenu\",\n        \"click .btn-back-subsettings\": \"backToSubMenu\",\n        \"click .settings-tabs-wrap.global-settings-tabs .settings-tab:not(.delete-all-accounts)\": \"jumpToBlock\",\n        \"click .desktop-notifications-clue-wrap b\": \"goToWebNotifications\",\n        \"click .btn-add-account\": \"showAddAccountView\",\n        \"click .setting.idling label\": \"setIdling\",\n        \"change #idle_timeout\": \"setIdlingTimeout\",\n        \"click .setting.notifications label\": \"setNotifications\",\n        // \"click .setting.volume-enable label\": \"setNotificationsVolumeEnabled\",\n        \"click .private-notifications label\": \"setPrivateNotifications\",\n        \"click .group-notifications label\": \"setGroupNotifications\",\n        \"click .notifications-lever label\": \"setNotifications\",\n        \"click .jingle-calls label\": \"setJingleCalls\",\n        \"click .setting.message-preview.private-preview label\": \"setPrivateMessagePreview\",\n        \"click .setting.message-preview.group-preview label\": \"setGroupMessagePreview\",\n        \"click .call-attention label\": \"setCallAttention\",\n        \"click .setting.load-media label\": \"setLoadMedia\",\n        \"click .setting.typing-notifications label\": \"setTypingNotifications\",\n        \"click .setting.mapping-service label\": \"setMappingService\",\n        \"click .setting.desktop-autostart label\": \"setDesktopAutostart\",\n        \"click .setting.reconnection-popup-log label\": \"setReconnectionLogs\",\n        \"change .sound input[type=radio][name=private_sound]\": \"setPrivateSound\",\n        \"change .sound input[type=radio][name=group_sound]\": \"setGroupSound\",\n        \"change .sound input[type=radio][name=call_sound]\": \"setCallSound\",\n        \"change .sound input[type=radio][name=dialtone_sound]\": \"setDialtoneSound\",\n        \"change .sound input[type=radio][name=attention_sound]\": \"setAttentionSound\",\n        \"change .languages-list input[type=radio][name=language]\": \"changeLanguage\",\n        \"change .emoji-fonts-list input[type=radio][name=emoji_font]\": \"changeEmojiFont\",\n        \"click .emoji-font-external-url-button\": \"loadExternalEmojiFont\",\n        \"change #vignetting\": \"changeVignetting\",\n        \"change #blur\": \"changeBlur\",\n        \"change #notifications_volume\": \"changeNotificationsVolume\",\n        \"change #blur_switch\": \"switchBlur\",\n        \"change #vignetting_switch\": \"switchVignetting\",\n        \"click .selected-color-wrap\": \"openColorPicker\",\n        \"click .client-main-color-item\": \"chooseMainColor\",\n        \"change .background input[type=radio][name=background]\": \"setBackground\",\n        \"click .current-background-wrap\": \"changeBackgroundImage\",\n        \"change .hotkeys input[type=radio][name=hotkeys]\": \"setHotkeys\",\n        \"change .avatar-shape input[type=radio][name=avatar_shape]\": \"setAvatarShape\",\n        \"change .device-metadata input[type=radio][name=device_metadata]\": \"setDeviceMetadata\",\n        \"click .settings-tab.delete-all-accounts\": \"deleteAllAccounts\"\n    },\n\n    _initialize: function (options) {\n        this.$('.xabber-info-wrap .version').text(xabber.get('version_number'));\n        xabber.on('update_main_color', this.updateMainColor, this);\n        this.model.on('change:language', this.updateLanguage, this);\n        this.model.on('change:emoji_font', this.updateEmojiFontLabel, this);\n        this.model.on('change:avatar_shape', this.updateAvatarLabel, this);\n        this.model.on('change:notifications_private', this.updateSoundsLabel, this);\n        this.model.on('change:notifications_group', this.updateSoundsLabel, this);\n        this.model.on('change:call_attention', this.updateSoundsLabel, this);\n        this.model.on('change:private_sound', this.updateSoundsLabel, this);\n        this.model.on('change:group_sound', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_private_message', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_group_message', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_call', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_dialtone', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_attention', this.updateSoundsLabel, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        $(document).on(\"keyup\", (ev) => {\n            if (ev.keyCode === constants.KEY_ESCAPE && this.data.get('visible')) {\n                this.closeSettings();\n            }\n        });\n        xabber.once('accounts_ready',() => {\n            xabber.accounts.on(\"list_changed add change:enabled destroy\", this.updateAccounts, this);\n        })\n    },\n\n    render: function (options) {\n        let settings = this.model.attributes,\n            lang = settings.language,\n            emoji_font = settings.emoji_font;\n        this.updateSounds();\n        this.updateLanguages();\n        this.updateEmojiFonts();\n        this.$('.notifications input[type=checkbox]').prop({\n            checked: settings.notifications && xabber._cache.get('notifications')\n        });\n        this.$('.notifications-lever input[type=checkbox]').prop({\n            checked: settings.notifications && xabber._cache.get('notifications')\n        });\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !settings.notifications_group)\n        this.$('.private-notifications input[type=checkbox]')\n            .prop({checked: settings.notifications_private});\n        this.$('.sound input[type=radio][name=private_sound]').prop('disabled', !settings.notifications_private)\n        this.$('.sound input[type=radio][name=call_sound]').prop('disabled', !settings.jingle_calls);\n        this.$('.sound input[type=radio][name=dialtone_sound]').prop('disabled', !settings.jingle_calls);\n        this.$('.group-notifications input[type=checkbox]')\n            .prop({checked: settings.notifications_group});\n        this.$('.jingle-calls input[type=checkbox]')\n            .prop({checked: settings.jingle_calls});\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !settings.notifications_group)\n        this.$('.sound input[type=radio][name=attention_sound]').prop('disabled', !settings.call_attention)\n        this.$('.message-preview.private-preview input[type=checkbox]')\n            .prop({checked: settings.message_preview_private}).prop('disabled', !(settings.notifications && xabber._cache.get('notifications') && settings.notifications_private));\n        this.$('.message-preview.group-preview input[type=checkbox]')\n            .prop({checked: settings.message_preview_group}).prop('disabled', !(settings.notifications && xabber._cache.get('notifications') && settings.notifications_group));\n        this.$('.desktop-notifications-clue-wrap').hideIf(settings.notifications);\n        this.$('.notifications-dependant').switchClass('notifications-dependant-two-line', !settings.notifications);\n        this.$('.call-attention input[type=checkbox]')\n            .prop({checked: settings.call_attention});\n        this.$('.load-media input[type=checkbox]')\n            .prop({checked: settings.load_media});\n        this.$('.typing-notifications input[type=checkbox]')\n            .prop({checked: settings.typing_notifications});\n        this.$('.idling input[type=checkbox]')\n            .prop({checked: settings.idling});\n        this.$('#idle_timeout')\n            .val(settings.idling_time).prop('disabled', !settings.idling);\n        // this.$(`#notifications_volume_enable`)\n        //     .prop('checked', settings.notifications_volume_enabled);\n        this.$('.mapping-service input[type=checkbox]')\n            .prop({checked: settings.mapping_service});\n        this.$('.reconnection-popup-log input[type=checkbox]')\n            .prop({checked: settings.reconnection_logs});\n        if (constants.DESKTOP_AUTOSTART_OPTION) {\n            this.$('.desktop-autostart input[type=checkbox]')\n                .prop({checked: settings.desktop_autostart});\n        } else {\n            this.$('.desktop-autostart').remove();\n        }\n        let sound_private_value = settings.private_sound ? settings.sound_on_private_message : '';\n        this.$(`.sound input[type=radio][name=private_sound][value=\"${sound_private_value}\"]`)\n                .prop('checked', true);\n        let sound_group_value = settings.group_sound ? settings.sound_on_group_message : '';\n        this.$(`.sound input[type=radio][name=group_sound][value=\"${sound_group_value}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=call_sound][value=\"${settings.sound_on_call}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=dialtone_sound][value=\"${settings.sound_on_dialtone}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=attention_sound][value=\"${settings.sound_on_attention}\"]`)\n                .prop('checked', true);\n        this.$(`.hotkeys input[type=radio][name=hotkeys][value=${settings.hotkeys}]`)\n                .prop('checked', true);\n        this.$(`.avatar-shape input[type=radio][name=avatar_shape][value=${settings.avatar_shape}]`)\n                .prop('checked', true);\n        this.$(`.device-metadata input[type=radio][name=device_metadata][value=${settings.device_metadata}]`)\n                .prop('checked', true);\n        this.$(`.device-metadata-description`).text(xabber.getString(`settings__section_privacy__${settings.device_metadata}_metadata_description`));\n        (lang == xabber.get(\"default_language\")) && (lang = 'default');\n        this.$(`.languages-list input[type=radio][name=language][value=\"${lang}\"]`)\n            .prop('checked', true);\n        this.$(`.emoji-fonts-list input[type=radio][name=emoji_font][value=\"${emoji_font}\"]`)\n            .prop('checked', true);\n        this.$(`.client-main-color-item`).removeClass('chosen-client-color');\n        this.$(`.client-main-color-item[data-value=\"${settings.main_color}\"]`).addClass('chosen-client-color');\n        let notifications_volume = !isNaN(settings.notifications_volume) ? settings.notifications_volume * 100 : 100;\n        this.$(`#notifications_volume`).val(notifications_volume);\n        // this.$('.volume-setting .disabled').switchClass('hidden', settings.notifications_volume_enabled);\n        // this.$('#notifications_volume').prop('disabled', !settings.notifications_volume_enabled);\n        this.$('.settings-panel-head span').text(this.$('.settings-block-wrap:not(.hidden)').attr('data-header'))\n        this.updateAvatarLabel();\n        this.updateSoundsLabel();\n        this.updateDescription();\n        this.updateBackgroundSetting();\n        this.updateColor();\n        this.updateMainColor();\n        this.updateLanguage();\n        this.updateEmojiFontLabel();\n        this.$('.toolbar-main-color-setting-wrap .dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            belowOrigin: true,\n            hover: false\n        });\n        this.$('.left-column').removeClass('hidden');\n        this.$('.left-column .settings-tabs-wrap.global-settings-tabs').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.$('.btn-back').removeClass('hidden');\n        this.$('.btn-back-subsettings').addClass('hidden');\n        this.$('.settings-panel-head .description').addClass('hidden');\n        this.$('.desktop-notifications-clue-wrap b').addClass('client-text-color-500');\n        this.updateAccounts(options);\n        this.updateHeight();\n        this.updateSliders();\n        if (options && options.block_name) {\n            let $elem = this.$(`.settings-tab[data-block-name=\"${options.block_name}\"]`);\n            if ($elem.length)\n                this.jumpToBlock({target: $elem[0]});\n        }\n        return this;\n    },\n\n    updateAccounts: function (options) {\n        if (this.settings_single_account_modal){\n            this.settings_single_account_modal.removeChild('blocklist');\n            this.removeChild('single_account');\n            this.settings_single_account_modal.destroyView();\n            this.settings_single_account_modal = undefined;\n        }\n        if (xabber.accounts.length === 1 && xabber.accounts.enabled.length){\n            this.$('.accounts-info-wrap').addClass('hidden');\n            this.$('.btn-add-account').addClass('hidden');\n            this.$('.single-account-info-wrap').removeClass('hidden');\n            let first_account = xabber.accounts.models[0];\n            this.single_account_has_rendered = false;\n            this.settings_single_account_modal = this.addChild('single_account', xabber.AccountSettingsSingleModalView, {\n                model: first_account,\n                forced_ps_container: this.ps_container,\n                single_account_modal: true,\n                el: this.$('.single-account-info-wrap .single-account-info')[0]\n            });\n            if (!this.single_account_has_rendered){\n                this.settings_single_account_modal.show(null, options);\n            }\n            first_account.trigger('render_single_settings', this.settings_single_account_modal);\n            this.settings_single_account_modal.addChild('blocklist', xabber.BlockListView, {\n                account: first_account,\n                el: this.settings_single_account_modal.$('.block-list-view-wrap')[0]\n            });\n        } else {\n            this.$('.btn-add-account').removeClass('hidden');\n            this.$('.accounts-info-wrap').removeClass('hidden');\n            this.$('.single-account-info-wrap').addClass('hidden');\n        }\n        this.updateHeight();\n    },\n\n    updateMainColor: function () {\n        this.$('.toolbar-main-color-setting').attr('data-color', this.model.get('main_color'));\n    },\n\n    updateBackgroundSetting: function () {\n        this.$(`.background input[type=radio][name=background][value=${this.model.get('background').type}]`)\n            .prop('checked', true);\n        if (this.model.get('background').image) {\n            this.$('.current-background').css('background-image', `url(${utils.images.getCachedBackground(this.model.get('background').image)})`);\n        }\n        this.$('.current-background-wrap').switchClass('hidden', !this.model.get('background').image);\n        let appearance = this.model.get('appearance'),\n            blur_switched = appearance.blur !== false,\n            vignetting_switched = appearance.vignetting !== false;\n        this.$('#blur_switch')[0].checked = blur_switched;\n        this.$('.blur-setting .disabled').switchClass('hidden', blur_switched);\n        if (blur_switched)\n            this.$('#blur')[0].value = appearance.blur;\n        this.$('#vignetting_switch')[0].checked = vignetting_switched;\n        this.$('.vignetting-setting .disabled').switchClass('hidden', vignetting_switched);\n        if (vignetting_switched)\n            this.$('#vignetting')[0].value = appearance.vignetting;\n        this.updateScrollBar();\n    },\n\n    updateColor: function () {\n        let color = this.model.get('appearance').color || '#E0E0E0';\n        this.$('.selected-color-item').css('background-color', color);\n        this.$('.selected-color-hex').text(color);\n        let material_color = xabber.ColorPicker.prototype.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == color.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == color.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n        xabber.toolbar_view.updateColor(color);\n    },\n\n    jumpToBlock: function (ev) {\n        if ($(ev.target).closest('.switch').length)\n            return;\n        let $tab = $(ev.target).closest('.settings-tab'),\n            $elem = this.$('.settings-block-wrap.' + $tab.attr('data-block-name'));\n        if ($tab.hasClass('link-button')) {\n            $tab.parent().siblings().removeClass('active');\n            this.scrollTo(0);\n            return;\n        }\n        this.$('.settings-block-wrap').addClass('hidden');\n        this.$('.left-column').addClass('hidden');\n        this.$('.right-column').removeClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span').text($elem.attr('data-header'))\n        $tab.addClass('active').siblings().removeClass('active');\n        if ($tab.closest('.right-column') && $tab.attr('data-subblock-parent-name')) {\n            this.$('.btn-back').addClass('hidden');\n            this.$('.btn-back-subsettings').removeClass('hidden');\n            this.$('.btn-back-subsettings').attr('data-subblock-parent-name', $tab.attr('data-subblock-parent-name'));\n        }\n        if ($tab.attr('data-block-name') === 'interface_language')\n            this.$('.settings-panel-head .description').removeClass('hidden');\n        else\n            this.$('.settings-panel-head .description').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    updateHeight: function () {\n        let height;\n        if (!this.$('.left-column.main-left-column').hasClass('hidden'))\n            height = this.$('.left-column.main-left-column').height();\n        if (!this.$('.right-column.main-right-column').hasClass('hidden'))\n            height = this.$('.right-column.main-right-column').height();\n        this.ps_container.css('height', height + 'px');\n        setTimeout(() => {\n            this.updateScrollBar();\n        }, 500)\n    },\n\n    updateSliders: function () {\n        this.$('.range-field.range-field-design').each((idx, item) => {\n            let $input = $(item).find('input'),\n                range_min = $input.attr('min'),\n                range_max = $input.attr('max'),\n                range_value = $input.val(),\n                left =  ((182 / (range_max - range_min)) * (range_value - range_min)) + 10;\n            $(item).find('span.thumb').css('left', left + 'px');\n            if ($input.hasClass('materialize-timer'))\n                $(item).find('span.value').text(range_value + 's');\n            else\n                $(item).find('span.value').text(range_value);\n        })\n\n    },\n\n    updateSounds: function () {\n\n        this.$('.notification-field').html('<form action=\"#\"></form>');\n\n        sounds.notifications.forEach((item,idx) => {\n            if (!item.not_selectable){\n                let element = $(templates.setting_radio_input({\n                    input_name: 'private_sound',\n                    input_id: `${this.cid}-private-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.notification-field:not(.group-notification-field)').append(element);\n                let group_element = $(templates.setting_radio_input({\n                    input_name: 'group_sound',\n                    input_id: `${this.cid}-group-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.group-notification-field').append(group_element);\n            }\n        });\n\n        let element_no_sound = $(templates.setting_radio_input({\n            input_name: 'private_sound',\n            input_id: `${this.cid}-private-sound-no`,\n            label: 'No sound',\n            value: '',\n        }));\n        this.$('.notification-field:not(.group-notification-field)').prepend(element_no_sound);\n\n        let group_element_no_sound = $(templates.setting_radio_input({\n            input_name: 'group_sound',\n            input_id: `${this.cid}-group-sound-no`,\n            label: 'No sound',\n            value: '',\n        }));\n        this.$('.group-notification-field').prepend(group_element_no_sound);\n\n        this.$('.dialtone-field').html('<form action=\"#\"></form>');\n        sounds.dialtones.forEach((item,idx) => {\n            if (!item.not_selectable){\n                let element = $(templates.setting_radio_input({\n                    input_name: 'dialtone_sound',\n                    input_id: `${this.cid}-dialtone-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.dialtone-field').append(element);\n            }\n        });\n\n        this.$('.ringtone-field').html('<form action=\"#\"></form>');\n        sounds.ringtones.forEach((item,idx) => {\n            if (!item.not_selectable){\n                let element = $(templates.setting_radio_input({\n                    input_name: 'call_sound',\n                    input_id: `${this.cid}-call-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.ringtone-field').append(element);\n            }\n        });\n\n        this.$('.attention-field').html('<form action=\"#\"></form>');\n        sounds.attention.forEach((item,idx) => {\n            if (!item.not_selectable){\n                let element = $(templates.setting_radio_input({\n                    input_name: 'attention_sound',\n                    input_id: `${this.cid}-attention-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.attention-field').append(element);\n            }\n        });\n\n    },\n\n    updateLanguages: function () {\n        this.$('.languages-list').html('<form action=\"#\"></form>');\n\n        let default_element = $(templates.setting_language_radio_input({\n            input_name: 'language',\n            input_id: `${this.cid}-default`,\n            label: xabber.getString(\"settings__languages_list___item_default\", [constants.languages[xabber.get(\"default_language\") || 'en']]),\n            value: 'default',\n            progress: {},\n        }));\n\n        this.$('.languages-list').append(default_element);\n\n        if (!window.navigator.language.includes('en')){\n            let second_lang = xabber.get(\"default_language\") === 'en' ? window.navigator.language : 'en',\n                second_prog, second_prog_text,\n                second_locale = Object.keys(client_translation_progress)\n                    .find(key => !second_lang.indexOf(key)) || constants.languages_another_locales[second_lang] && Object.keys(client_translation_progress)\n                    .find(key => !constants.languages_another_locales[second_lang].indexOf(key)); // < - check for locales that differ in names\n\n            if (second_locale) {\n                second_prog = client_translation_progress[second_locale];\n                second_prog_text = (second_prog == 100) ? xabber.getString(\"settings__section_interface_language__translation_progress_fully\")\n                    : xabber.getString(\"settings__section_interface_language__translation_progress\", [`${second_prog}%`]);\n\n                let second_element = $(templates.setting_language_radio_input({\n                    input_name: 'language',\n                    input_id: `${this.cid}-${second_lang}`,\n                    label: constants.languages[second_lang],\n                    value: second_lang,\n                    progress: {\n                        text: second_prog_text\n                    },\n                }));\n                this.$('.languages-list').append(second_element);\n            }\n        }\n\n\n        for (let lang in constants.languages) {\n            if (!lang || lang == xabber.get(\"default_language\") || lang == window.navigator.language)\n                continue;\n\n            let locale = Object.keys(client_translation_progress)\n                .find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress)\n                .find(key => !constants.languages_another_locales[lang].indexOf(key)); // < - check for locales that differ in names\n\n            if (locale) {\n                let progress = client_translation_progress[locale],\n                    progress_text = (progress == 100) ? xabber.getString(\"settings__section_interface_language__translation_progress_fully\")\n                        : xabber.getString(\"settings__section_interface_language__translation_progress\", [`${progress}%`]);\n\n                let element = $(templates.setting_language_radio_input({\n                    input_name: 'language',\n                    input_id: `${this.cid}-${lang}`,\n                    label: constants.languages[lang],\n                    value: lang,\n                    progress: {\n                        text: progress_text\n                    },\n                }));\n                this.$('.languages-list').append(element);\n            }\n        }\n    },\n\n    updateEmojiFonts: function () {\n        let emoji_fonts_list = constants.EMOJI_FONTS_LIST;\n\n        if (!Object.keys(emoji_fonts_list).length) {\n            this.$('.settings-tab[data-block-name=\"emoji_font\"').addClass('hidden');\n            return;\n        }\n        this.$('.settings-tab[data-block-name=\"emoji_font\"').removeClass('hidden');\n\n        this.$('.emoji-fonts-list').html('<form action=\"#\"></form>');\n\n        let system_element = $(templates.setting_emoji_font_radio_input({\n            input_name: 'emoji_font',\n            input_id: `${this.cid}-emoji-font-system`,\n            label: xabber.getString(\"settings__menu_item__emoji_font_system\"),\n            value: 'system',\n            hint: null,\n        }));\n\n        this.$('.emoji-fonts-list').append(system_element);\n        emoji_fonts_list = Object.values(emoji_fonts_list);\n\n        emoji_fonts_list.sort((a, b) => {\n            return a.order - b.order;\n        })\n\n        emoji_fonts_list.forEach((item) => {\n            let item_name = item.name,\n                element = $(templates.setting_emoji_font_radio_input({\n                    input_name: 'emoji_font',\n                    input_id: `${this.cid}-emoji-font-${item.value}`,\n                    label: item_name,\n                    value: item.value,\n                    hint: item.hint,\n                }));\n            this.$('.emoji-fonts-list').append(element);\n        });\n    },\n\n    onScrollY: function () {\n        if (this.getScrollTop() === 0)\n            this.$('.settings-panel-head').removeClass('lined-head')\n        else\n            this.$('.settings-panel-head').addClass('lined-head')\n    },\n\n    closeSettings: function (ev) {\n        this.current_sound && this.current_sound.pause();\n        if (xabber.body.screen && xabber.body.screen.get('previous_screen')){\n            let previous_screen = xabber.body.screen.get('previous_screen');\n            previous_screen.close_settings = true;\n            xabber.body.setScreen(previous_screen.name, previous_screen);\n            xabber.body.screen.attributes.close_settings = undefined;\n        } else\n            xabber.toolbar_view.showAllChats();\n    },\n\n    backToMenu: function (ev) {\n        this.current_sound && this.current_sound.pause();\n        this.$('.left-column').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.$('.settings-panel-head .description').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    backToSubMenu: function (ev) {\n        this.current_sound && this.current_sound.pause();\n        let $tab = $(ev.target).closest('.btn-back-subsettings'),\n            block_name = $tab.attr('data-subblock-parent-name'),\n            $elem = this.$('.settings-block-wrap.' + block_name),\n            elem_parent = $elem.attr('data-parent-block');\n        this.$('.settings-block-wrap').addClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span.settings-panel-head-title').text($elem.attr('data-header'));\n        if (elem_parent) {\n            $tab.attr('data-subblock-parent-name', elem_parent)\n        } else {\n            this.$('.btn-back').removeClass('hidden');\n            this.$('.btn-back-subsettings').addClass('hidden');\n        }\n        this.$('.settings-panel-head .description').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    goToWebNotifications: function (ev) {\n        this.$('.settings-tab[data-block-name=\"web-notifications\"]').click();\n    },\n\n    setIdling: function (ev) {\n        let value = !this.model.get('idling');\n        this.model.save('idling', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.idling').find('input').prop('checked', value);\n        this.$('#idle_timeout').prop('disabled', !value);\n    },\n\n    setIdlingTimeout: function (ev) {\n        let $target = $(ev.target),\n            value = $(ev.target).val();\n        value = parseInt(value);\n        if (_.isNaN(value)){\n            value = constants.IDLING_DEFAULT_TIMEOUT;\n        } else if (value < constants.IDLING_MINIMAL_TIMEOUT){\n            value = constants.IDLING_MINIMAL_TIMEOUT;\n        }\n        this.model.save('idling_time', value);\n        $target.val(value);\n        ev.preventDefault();\n    },\n\n    setNotificationsVolumeEnabled: function (ev) {\n        ev.preventDefault();\n        let value = !this.model.get('notifications_volume_enabled');\n        this.model.save('notifications_volume_enabled', value);\n        this.$('#notifications_volume_enable').prop('checked', value);\n        this.$('.volume-setting .disabled').switchClass('hidden', value);\n        this.$('#notifications_volume').prop('disabled', !value);\n    },\n\n    setNotifications: function (ev) {\n        let value = this.model.get('notifications');\n        ev.preventDefault();\n        if (value === null) {\n            utils.callback_popup_message(xabber.getString(\"notifications__toast_notifications_not_supported\"), 1500);\n        } else {\n            value = value && xabber._cache.get('notifications');\n            if (!xabber._cache.get('notifications')) {\n                window.Notification.requestPermission((permission) => {\n                    xabber._cache.save({'notifications': (permission === 'granted'), 'ignore_notifications_warning': true});\n                    xabber.notifications_placeholder && xabber.notifications_placeholder.close();\n                    value = (permission === 'granted');\n                    this.model.save('notifications', value ? value : this.model.get('notifications'));\n                    this.$('.setting.notifications input[type=checkbox]').prop('checked', value);\n                    this.$('.notifications-lever input[type=checkbox]').prop('checked', value);\n                    this.$('.message-preview.private-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_private')));\n                    this.$('.message-preview.group-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_group')));\n                    this.$('.desktop-notifications-clue-wrap').hideIf(value);\n                    this.$('.notifications-dependant').switchClass('notifications-dependant-two-line', !value);\n                });\n            } else {\n                value = !value;\n                this.model.save('notifications', value);\n                this.$('.setting.notifications input[type=checkbox]').prop('checked', value);\n                this.$('.notifications-lever input[type=checkbox]').prop('checked', value);\n                this.$('.message-preview.private-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_private')));\n                this.$('.message-preview.group-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_group')));\n                this.$('.desktop-notifications-clue-wrap').hideIf(value);\n                this.$('.notifications-dependant').switchClass('notifications-dependant-two-line', !value);\n            }\n        }\n    },\n\n    setPrivateNotifications: function (ev) {\n        let value = !this.model.get('notifications_private');\n        this.model.save('notifications_private', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=private_sound]').prop('disabled', !value)\n        this.$('.message-preview.private-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_private')));\n        $(ev.target).closest('.private-notifications').find('input').prop('checked', value);\n    },\n\n    setGroupNotifications: function (ev) {\n        let value = !this.model.get('notifications_group');\n        this.model.save('notifications_group', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !value)\n        this.$('.message-preview.group-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_group')));\n        $(ev.target).closest('.group-notifications').find('input').prop('checked', value);\n    },\n\n    setJingleCalls: function (ev) {\n        let value = !this.model.get('jingle_calls');\n        this.model.save('jingle_calls', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=call_sound]').prop('disabled', !value)\n        this.$('.sound input[type=radio][name=dialtone_sound]').prop('disabled', !value)\n        $(ev.target).closest('.jingle-calls').find('input').prop('checked', value);\n    },\n\n    setPrivateMessagePreview: function (ev) {\n        let value = !this.model.get('message_preview_private');\n        this.model.save('message_preview_private', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.message-preview').find('input').prop('checked', value);\n    },\n\n    setGroupMessagePreview: function (ev) {\n        let value = !this.model.get('message_preview_group');\n        this.model.save('message_preview_group', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.message-preview').find('input').prop('checked', value);\n    },\n\n    setCallAttention: function (ev) {\n        let value = !this.model.get('call_attention');\n        this.model.save('call_attention', value);\n        ev.preventDefault();\n        $(ev.target).closest('.call-attention').find('input').prop('checked', value);\n    },\n\n    setLoadMedia: function (ev) {\n        let value = !this.model.get('load_media');\n        this.model.save('load_media', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.load-media').find('input').prop('checked', value);\n    },\n\n    setTypingNotifications: function (ev) {\n        let value = !this.model.get('typing_notifications');\n        this.model.save('typing_notifications', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.typing-notifications').find('input').prop('checked', value);\n    },\n\n    setMappingService: function (ev) {\n        let value = !this.model.get('mapping_service');\n        this.model.save('mapping_service', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.mapping-service').find('input').prop('checked', value);\n    },\n\n    setDesktopAutostart: function (ev) {\n        let value = !this.model.get('desktop_autostart');\n        this.model.save('desktop_autostart', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.desktop-autostart').find('input').prop('checked', value);\n    },\n\n    setReconnectionLogs: function (ev) {\n        let value = !this.model.get('reconnection_logs');\n        this.model.save('reconnection_logs', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.reconnection-popup-log').find('input').prop('checked', value);\n    },\n\n    setPrivateSound: function (ev) {\n        let value = ev.target.value;\n        if (value) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false, !this.model.get('notifications_volume_enabled') ? 0 : this.model.get('notifications_volume'));\n            this.model.save({private_sound: true, sound_on_private_message: value});\n        } else {\n            this.model.save('private_sound', false);\n        }\n    },\n\n    setGroupSound: function (ev) {\n        let value = ev.target.value;\n        if (value) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false, !this.model.get('notifications_volume_enabled') ? 0 : this.model.get('notifications_volume'));\n            this.model.save({group_sound: true, sound_on_group_message: value});\n        } else {\n            this.model.save('group_sound', false);\n        }\n    },\n\n    setCallSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_call: value});\n    },\n\n    setDialtoneSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_dialtone: value});\n    },\n\n    setAttentionSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_attention: value});\n    },\n\n    setBackground: function (ev) {\n        let value = ev.target.value;\n        if (value == 'default') {\n            this.model.save('background', {type: 'default'});\n            xabber.body.updateBackground();\n            this.updateBackgroundSetting();\n        } else if (value == 'repeating-pattern' || value == 'image') {\n            let background_view = new xabber.SetBackgroundView();\n            background_view.render({type: value, model: this.model});\n        }\n    },\n\n    changeBackgroundImage: function () {\n        let type = this.model.get('background').type;\n        if (type == 'repeating-pattern' || type == 'image') {\n            let background_view = new xabber.SetBackgroundView();\n            background_view.render({type: type, model: this.model});\n        }\n    },\n\n    openColorPicker: function () {\n        if (!this.colorPicker)\n            this.colorPicker = new xabber.ColorPicker({model: this.model});\n        this.colorPicker.render();\n    },\n\n    chooseMainColor: function (ev) {\n        let color = $(ev.target).closest('.client-main-color-item').attr('data-value');\n        this.model.save('main_color', color);\n        this.$(`.client-main-color-item`).removeClass('chosen-client-color');\n        this.$(`.client-main-color-item[data-value=\"${color}\"]`).addClass('chosen-client-color');\n        xabber.trigger('update_main_color');\n    },\n\n    changeBlur: function () {\n        let value = this.$('#blur')[0].value,\n            appearance = this.model.get('appearance');\n        xabber.body.updateBlur(value);\n        this.model.save('appearance', _.extend(appearance, {blur: value}));\n    },\n\n    changeNotificationsVolume: function () {\n        let volume = this.$('#notifications_volume')[0].value / 100,\n            sound = this.$('.sound input[type=radio][name=private_sound]:checked').val() || this.$('.sound input[type=radio][name=group_sound]:checked').val();\n        this.model.save('notifications_volume', volume);\n        if (sound) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(sound, false, volume);\n        }\n    },\n\n    changeVignetting: function () {\n        let value = this.$('#vignetting')[0].value,\n            appearance = this.model.get('appearance');\n        xabber.body.updateBoxShadow(value);\n        this.model.save('appearance', _.extend(appearance, {vignetting: value}));\n    },\n\n    switchVignetting: function () {\n        let is_switched = this.$('#vignetting_switch:checked').length,\n            appearance = this.model.get('appearance'),\n            value = is_switched ? this.$('#vignetting')[0].value : false;\n        this.$('.vignetting-setting .disabled').switchClass('hidden', is_switched);\n        this.model.save('appearance', _.extend(appearance, {vignetting: value}));\n        xabber.body.updateBoxShadow(value);\n    },\n\n    switchBlur: function () {\n        let is_switched = this.$('#blur_switch:checked').length,\n            appearance = this.model.get('appearance'),\n            value = is_switched ? this.$('#blur')[0].value : false;\n        this.$('.blur-setting .disabled').switchClass('hidden', is_switched);\n        this.model.save('appearance', _.extend(appearance, {blur: value}));\n        xabber.body.updateBlur(value);\n    },\n\n    setHotkeys: function (ev) {\n        this.model.save('hotkeys', ev.target.value);\n    },\n\n    setAvatarShape: function (ev) {\n        this.model.save('avatar_shape', ev.target.value);\n        xabber.trigger('update_avatar_shape');\n    },\n\n\n    setDeviceMetadata: function (ev) {\n        this.model.save('device_metadata', ev.target.value);\n        this.$(`.device-metadata-description`).text(xabber.getString(`settings__section_privacy__${this.model.get('device_metadata')}_metadata_description`));\n        this.updateHeight();\n    },\n\n    deleteAllAccounts: function (ev) {\n        utils.dialogs.ask(xabber.getString(\"button_quit\"), xabber.getString(\"settings__dialog_quit_client__confirm\", [constants.CLIENT_NAME]), null, { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            res && xabber.trigger('quit');\n        });\n    },\n\n    changeLanguage: function (ev) {\n        let value = ev.target.value,\n            locale = Object.keys(client_translation_progress).find(key => !value.indexOf(key)) || constants.languages_another_locales[value] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[value].indexOf(key)),\n            progress = client_translation_progress[locale],\n            platform_text;\n\n        (value == 'default') && (progress = 100);\n\n        if (progress == 100 && ((xabber.get(\"default_language\") === 'en' && value === 'default') || value === 'en')) {\n            platform_text = xabber.getString(\"settings__dialog_change_language__confirm\");\n        } else if (progress == 100) {\n            platform_text = xabber.getString(\"settings__interface_language__change_language_text_full_translation\",\n                [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" href='${constants.PROJECT_CROWDIN_URL}'>${xabber.getString(\"settings__section_interface_language__text_description__text_translations\")}</a>`, constants.SHORT_CLIENT_NAME, ])\n             + '\\n\\n' +xabber.getString(\"settings__dialog_change_language__confirm\");\n        } else if (progress == 0) {\n            platform_text = xabber.getString(\"settings__interface_language__change_language_text_no_translation\",\n                [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" href='${constants.PROJECT_CROWDIN_URL}'>${xabber.getString(\"settings__section_interface_language__text_description__text_translation\")}</a>`]);\n        } else {\n            platform_text = xabber.getString(\"settings__interface_language__change_language_text_partial_translation\",\n                [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" href='${constants.PROJECT_CROWDIN_URL}'>${xabber.getString(\"settings__section_interface_language__text_description__text_translation_team\")}</a>`, constants.SHORT_CLIENT_NAME])\n                + '\\n\\n' +xabber.getString(\"settings__dialog_change_language__confirm\");\n        }\n        let modal_classes = ['change-language-modal'], inverted_buttons;\n        if (progress == 0){\n            modal_classes.push('change-language-modal-no-ok');\n        } else if (progress != 0 && progress < 70){\n            inverted_buttons = true;\n        }\n        utils.dialogs.ask(xabber.getString(\"settings__dialog_change_language__header\"),\n            platform_text,\n            {modal_class: modal_classes, no_dialog_options: true, inverted_buttons: inverted_buttons},\n            { ok_button_text: xabber.getString(\"settings__dialog_change_language__button_change\")}).done((result) => {\n\n            if (result) {\n                this.model.save('language', value);\n                window.location.reload(true);\n            } else {\n                this.$(`.languages-list input[type=radio][name=language][value=\"${this.model.get('language')}\"]`)\n                    .prop('checked', true);\n            }\n        });\n    },\n\n    changeEmojiFont: function (ev) {\n        let value = ev.target.value,\n            emoji_font = constants.EMOJI_FONTS_LIST[value],\n            current_time;\n\n\n        if (!emoji_font && value !== 'system'){\n            $(ev.target).closest('.emoji-font-field').detach();\n            utils.dialogs.error(xabber.getString(\"settings__menu_item__emoji_font_chosen_does_not_exist\"));\n            this.$(`.emoji-fonts-list input[type=radio][name=emoji_font][value=\"${this.model.get('emoji_font')}\"]`)\n                .prop('checked', true);\n            return\n        }\n        this.load_emoji_external_dfd = new $.Deferred();\n        this.load_emoji_external_dfd.done(() => {\n\n            this.font_load_dfd = new $.Deferred();\n            this.currently_loaded_font_value = value;\n\n            this.font_load_dfd.done((response) => {\n                if (this.emoji_load_date !== current_time)\n                    return;\n                this.$('.emoji_font .preloader-wrap').addClass('hidden');\n                this.$('.emoji_font .emoji-font-download-text').addClass('hidden');\n                this.$('.emoji_font .emojis-preview').removeClass('hidden');\n                this.$('.emoji_font .emoji-font-external-url-text').addClass('hidden');\n                this.$('.emoji_font .emoji-font-external-url-button').addClass('hidden');\n                this.$(`.emoji-fonts-list input[type=radio][name=emoji_font]`)\n                    .prop('disabled', false);\n\n                this.font_load_dfd = null;\n                this.currently_loaded_font_value = null;\n                if (response && response.error){\n                    this.$('.emoji_font .emoji-font-attribution-text').addClass('hidden');\n                    this.$(`.emoji-fonts-list input[type=radio][name=emoji_font][value=\"${this.model.get('emoji_font')}\"]`)\n                        .prop('checked', true);\n                    $(ev.target).prop('disabled', true);\n                } else {\n                    this.model.save('emoji_font', value);\n                }\n            });\n\n            this.$('.emoji_font .emoji-font-external-url-text').addClass('hidden');\n            this.$('.emoji_font .emoji-font-external-url-button').addClass('hidden');\n            this.$('.emoji_font .preloader-wrap').removeClass('hidden');\n            this.$('.emoji_font .emoji-font-download-text').removeClass('hidden');\n            let emoji_url = value === 'system' ? value : emoji_font.url;\n            this.load_emoji_external_dfd = null;\n            this.$(`.emoji-fonts-list input[type=radio][name=emoji_font]`)\n                .prop('disabled', true);\n            this.emoji_load_date = Date.now();\n            current_time = this.emoji_load_date;\n            this.$('.settings-tab[data-block-name=\"emoji_font\"] .settings-block-label').text(xabber.getString(\"settings__menu_item__emoji_font_downloading_text\"));\n            xabber.loadEmojiFont(emoji_url, this.font_load_dfd);\n        });\n\n        this.$('.emoji_font .emojis-preview').addClass('hidden');\n        this.$('.emoji_font .emoji-font-attribution-text').addClass('hidden');\n\n        if (emoji_font && emoji_font.is_outside_url && value !== 'system'){\n            this.$('.emoji_font .emoji-font-external-url-text').removeClass('hidden');\n            this.$('.emoji_font .emoji-font-external-url-button').removeClass('hidden');\n        } else {\n            this.load_emoji_external_dfd.resolve();\n        }\n    },\n\n    loadExternalEmojiFont: function (ev) {\n        this.load_emoji_external_dfd && this.load_emoji_external_dfd.resolve();\n    },\n\n    updateEmojiFontLabel: function () {\n        if (!constants.EMOJI_FONTS_LIST[this.model.get('emoji_font')] && this.model.get('emoji_font') !== 'system') {\n            this.$('.settings-tab[data-block-name=\"emoji_font\"] .settings-block-label').text(xabber.getString(\"settings__menu_item__emoji_font_chosen_does_not_exist\"))\n            return;\n        }\n        let label = this.model.get('emoji_font') === 'system' ? 'system' : constants.EMOJI_FONTS_LIST[this.model.get('emoji_font')].name,\n            attribution_text = this.model.get('emoji_font') === 'system' ? '' : constants.EMOJI_FONTS_LIST[this.model.get('emoji_font')].attribution_text;\n        if (label === 'system')\n            label = xabber.getString(\"settings__menu_item__emoji_font_system\");\n        this.$('.settings-tab[data-block-name=\"emoji_font\"] .settings-block-label').text(label);\n        this.$('.emoji-font-attribution-text').switchClass('hidden', !attribution_text);\n        this.$('.emoji-font-attribution-text').html(attribution_text);\n        this.$(`.emoji-fonts-list input[type=radio][name=emoji_font][value=\"${this.model.get('emoji_font')}\"]`)\n            .prop('checked', true);\n        this.$(`.emoji-fonts-list input[type=radio][name=emoji_font]`)\n            .prop('disabled', false);\n        this.$('.emoji_font .emoji-font-external-url-text').addClass('hidden');\n        this.$('.emoji_font .emoji-font-external-url-button').addClass('hidden');\n        this.$('.emoji_font .preloader-wrap').addClass('hidden');\n        this.$('.emoji_font .emoji-font-download-text').addClass('hidden');\n        this.$('.emoji_font .emojis-preview').removeClass('hidden');\n        if (this.font_load_dfd && this.currently_loaded_font_value){\n            this.$('.emoji_font .emojis-preview').addClass('hidden');\n            this.$('.emoji-font-attribution-text').addClass('hidden');\n            this.$('.emoji_font .preloader-wrap').removeClass('hidden');\n            this.$('.emoji_font .emoji-font-download-text').removeClass('hidden');\n            this.$(`.emoji-fonts-list input[type=radio][name=emoji_font]`)\n                .prop('disabled', true);\n            this.$(`.emoji-fonts-list input[type=radio][name=emoji_font][value=\"${this.currently_loaded_font_value}\"]`)\n                .prop('checked', true);\n            this.$('.settings-tab[data-block-name=\"emoji_font\"] .settings-block-label').text(xabber.getString(\"settings__menu_item__emoji_font_downloading_text\"));\n        }\n    },\n\n    updateLanguage: function () {\n        if (this.model.get('language') === 'default'){\n            this.$('.settings-tab[data-block-name=\"interface_language\"] .settings-block-label').text(xabber.getString(\"settings__languages_list___item_default\", [constants.languages[xabber.get(\"default_language\") || 'en']]));\n        } else {\n            this.$('.settings-tab[data-block-name=\"interface_language\"] .settings-block-label').text(constants.languages[this.model.get('language')]);\n        }\n    },\n\n    showAddAccountView: function () {\n        xabber.trigger('add_account', {right: null});\n    },\n\n    updateDescription: function () {\n\n        if (!xabber.settings.language)\n            return;\n\n        let lang = xabber.settings.language,\n            locale = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key)),\n            progress = client_translation_progress[locale];\n\n        (lang == 'default' || !lang.indexOf('en')) && (progress = 100);\n\n        if (!_.isUndefined(progress)) {\n            let progress_text, platform_text;\n            if (progress == 100 && ((xabber.get(\"default_language\") === 'en' && lang === 'default') || lang === 'en')) {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_full_translation_english\", [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" class=\"email-link\" href='mailto:${constants.EMAIL_FOR_JOIN_TRANSLATION}'>${constants.EMAIL_FOR_JOIN_TRANSLATION}</a>`, constants.SHORT_CLIENT_NAME]);\n            } else if (progress == 100) {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_full_translation\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n            } else if (progress == 0) {\n                progress_text = xabber.getString(\"settings__section_interface_language__text_description_no_translations\", [constants.SHORT_CLIENT_NAME]);\n            } else {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_unfull_translation\", [constants.SHORT_CLIENT_NAME]);\n            }\n            platform_text = xabber.getString(\"settings__interface_language__text_description_platform\",\n                [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" href='${constants.PROJECT_CROWDIN_URL}'>${constants.PROJECT_CROWDIN_URL}</a>`]);\n            this.$('.description').html(`${progress_text}<br><br>${platform_text}`);\n        }\n    },\n\n    updateAvatarLabel: function () {\n        let shape = this.model.get('avatar_shape'), label_text;\n        if (shape === 'circle')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_circle\");\n        if (shape === 'squircle')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_squircle\");\n        if (shape === 'octagon')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_octagon\");\n        if (shape === 'hexagon')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_hexagon\");\n        if (shape === 'pentagon')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_pentagon\");\n        if (shape === 'rounded')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_rounded\");\n        if (shape === 'star')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_star\");\n        this.$('.settings-tab[data-block-name=\"avatars\"] .settings-block-label').text(label_text);\n    },\n\n    updateSoundsLabel: function () {\n        let sound_private_value = this.model.get('private_sound') && this.model.get('notifications_private') ? this.model.get('sound_on_private_message') : '',\n            sound_group_value = this.model.get('group_sound') && this.model.get('notifications_group') ? this.model.get('sound_on_group_message') : '',\n            sound_on_attention = this.model.get('call_attention') ? this.model.get('sound_on_attention') : '',\n            sound_private_text, sound_group_text, sound_on_attention_text;\n\n\n        if (sound_private_value === '')\n            sound_private_text = 'No sound';\n        else\n            sound_private_text = sound_private_value.replace('_', ' ');\n\n        if (sound_group_value === '')\n            sound_group_text = 'No sound';\n        else\n            sound_group_text = sound_group_value.replace('_', ' ');\n\n        if (sound_on_attention === '')\n            sound_on_attention_text = 'No sound';\n        else\n            sound_on_attention_text = sound_on_attention.replace('_', ' ');\n\n        this.$('.settings-tab[data-block-name=\"chats-notifications\"] .settings-block-label').text(sound_private_text);\n        this.$('.settings-tab[data-block-name=\"groupchats-notifications\"] .settings-block-label').text(sound_group_text);\n        this.$('.settings-tab[data-block-name=\"attention-calls\"] .settings-block-label').text(sound_on_attention_text);\n    },\n});\n\nxabber.mainColorPicker = xabber.BasicView.extend({\n    className: 'modal main-modal main-color-picker',\n    template: templates.color_scheme,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .color-value\": \"setColor\"\n    },\n\n    _initialize: function (options) {\n        this.model = options.model;\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('max-height', Math.min(($(window).height() - 341), 456)).perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n    },\n\n    setColor: function (ev) {\n        let color = $(ev.target).closest('.color-value').attr('data-value');\n        this.model.save('main_color', color);\n        xabber.trigger('update_main_color');\n        this.close();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n\n});\n\nxabber.ColorPicker = xabber.BasicView.extend({\n    className: 'modal main-modal color-picker',\n    materialColors: [\n        {\n            color: \"red\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFEBEE\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFCDD2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#EF9A9A\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#E57373\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#EF5350\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#F44336\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#E53935\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#D32F2F\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#C62828\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#B71C1C\"\n                }\n            ]\n        },\n        {\n            color: \"pink\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FCE4EC\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F8BBD0\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#F48FB1\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#F06292\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#EC407A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#E91E63\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#D81B60\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#C2185B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#AD1457\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#880E4F\"\n                }\n            ]\n        },\n        {\n            color: \"purple\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F3E5F5\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#E1BEE7\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#CE93D8\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#BA68C8\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#AB47BC\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#9C27B0\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#8E24AA\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#7B1FA2\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#6A1B9A\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#4A148C\"\n                }\n            ]\n        },\n        {\n            color: \"deep-purple\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#EDE7F6\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#D1C4E9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#B39DDB\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#9575CD\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#7E57C2\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#673AB7\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#5E35B1\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#512DA8\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#4527A0\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#311B92\"\n                }\n            ]\n        },\n        {\n            color: \"indigo\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E8EAF6\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#C5CAE9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#9FA8DA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#7986CB\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#5C6BC0\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#3F51B5\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#3949AB\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#303F9F\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#283593\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#1A237E\"\n                }\n            ]\n        },\n        {\n            color: \"blue\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E3F2FD\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#BBDEFB\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#90CAF9\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#64B5F6\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#42A5F5\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#2196F3\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#1E88E5\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#1976D2\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#1565C0\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#0D47A1\"\n                }\n            ]\n        },\n        {\n            color: \"light-blue\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E1F5FE\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B3E5FC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#81D4FA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4FC3F7\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#29B6F6\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#03A9F4\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#039BE5\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#0288D1\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#0277BD\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#01579B\"\n                }\n            ]\n        },\n        {\n            color: \"cyan\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E0F7FA\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B2EBF2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#80DEEA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4DD0E1\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#26C6DA\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#00BCD4\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#00ACC1\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#0097A7\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#00838F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#006064\"\n                }\n            ]\n        },\n        {\n            color: \"teal\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E0F2F1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B2DFDB\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#80CBC4\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4DB6AC\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#26A69A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#009688\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#00897B\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#00796B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#00695C\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#004D40\"\n                }\n            ]\n        },\n        {\n            color: \"green\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E8F5E9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#C8E6C9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#A5D6A7\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#81C784\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#66BB6A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#4CAF50\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#43A047\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#388E3C\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#2E7D32\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#1B5E20\"\n                }\n            ]\n        },\n        {\n            color: \"light-green\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F1F8E9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#DCEDC8\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#C5E1A5\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#AED581\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#9CCC65\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#8BC34A\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#7CB342\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#689F38\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#558B2F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#33691E\"\n                }\n            ]\n        },\n        {\n            color: \"lime\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F9FBE7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F0F4C3\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#E6EE9C\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#DCE775\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#D4E157\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#CDDC39\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#C0CA33\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#AFB42B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#9E9D24\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#827717\"\n                }\n            ]\n        },\n        {\n            color: \"yellow\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFFDE7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFF9C4\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFF59D\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFF176\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFEE58\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FFEB3B\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FDD835\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#FBC02D\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#F9A825\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#F57F17\"\n                }\n            ]\n        },\n        {\n            color: \"amber\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFF8E1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFECB3\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFE082\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFD54F\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFCA28\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FFC107\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FFB300\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#FFA000\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#FF8F00\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#FF6F00\"\n                }\n            ]\n        },\n        {\n            color: \"orange\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFF3E0\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFE0B2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFCC80\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFB74D\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFA726\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FF9800\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FB8C00\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#F57C00\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#EF6C00\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#E65100\"\n                }\n            ]\n        },\n        {\n            color: \"deep-orange\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FBE9E7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFCCBC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFAB91\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FF8A65\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FF7043\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FF5722\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#F4511E\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#E64A19\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#D84315\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#BF360C\"\n                }\n            ]\n        },\n        {\n            color: \"brown\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#EFEBE9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#D7CCC8\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#BCAAA4\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#A1887F\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#8D6E63\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#795548\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#6D4C41\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#5D4037\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#4E342E\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#3E2723\"\n                }\n            ]\n        },\n        {\n            color: \"grey\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FAFAFA\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F5F5F5\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#EEEEEE\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#E0E0E0\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#BDBDBD\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#9E9E9E\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#757575\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#616161\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#424242\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#212121\"\n                }\n            ]\n        },\n        {\n            color: \"blue-grey\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#ECEFF1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#CFD8DC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#B0BEC5\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#90A4AE\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#78909C\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#607D8B\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#546E7A\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#455A64\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#37474F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#263238\"\n                }\n            ]\n        }\n    ],\n\n    ps_selector: '.material-color-picker-wrap',\n    events: {\n        \"click .color-palette-item\": \"selectColor\",\n        \"click .selected-color-hex\": \"updateInputField\",\n        \"focusout .selected-color-hex-input\": \"focusoutInputField\",\n        \"keyup .selected-color-hex-input\": \"keyUpInput\",\n        \"click .btn-set\": \"setColor\"\n    },\n\n    _initialize(options) {\n        this.model = options.model;\n        this.$el.html(templates.color_picker({materialColors: this.materialColors}));\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                let $input = this.$('.selected-color-hex-input'),\n                    $color_hex = this.$('.selected-color-hex'),\n                    value = this.model.get('appearance').color || '#E0E0E0';\n                let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n                if (material_color) {\n                    let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n                    this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n                } else {\n                    this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n                }\n                if (value) {\n                    this.$('.selected-color-wrap').removeClass('hidden');\n                    $input.addClass('hidden');\n                    $color_hex.removeClass('hidden').text(value);\n                    value && this.$('.selected-color-item').css('background-color', value);\n                }\n            },\n            complete: this.close.bind(this)\n        });\n\n    },\n\n    updateInputField: function () {\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex');\n        $input.removeClass('hidden');\n        $input[0].value = $color_hex.text();\n        $color_hex.addClass('hidden');\n    },\n\n    keyUpInput: function (ev) {\n        if (ev.keyCode == constants.KEY_ENTER) {\n            ev.preventDefault();\n            this.focusoutInputField();\n        }\n        let $input = this.$('.selected-color-hex-input'),\n            value = $input[0].value.trim();\n        this.$('.selected-color-item').css('background-color', value);\n        let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n    },\n\n    focusoutInputField: function () {\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex'),\n            value = $input[0].value.trim();\n        let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n        $input.addClass('hidden');\n        $color_hex.removeClass('hidden').text(value);\n        this.$('.selected-color-item').css('background-color', value);\n    },\n\n    selectColor: function (ev) {\n        let $target = $(ev.target),\n            hex = $target.attr('data-hex'),\n            color_name = $target.closest('.color-palette-wrapper').attr('data-color-name').replace(/-/g, \"_\"),\n            weight = $target.attr('data-weight');\n        this.$('.selected-color-wrap').removeClass('hidden');\n        this.$('.selected-color-item').css('background-color', hex);\n        this.$('.selected-color-name').text(xabber.getString(`account_color_name_${color_name}`).replace(/-/g, \" \").replace(/-/g, \" \") + ` ${weight}`);\n        this.$('.selected-color-hex').text(hex);\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex');\n        $input.addClass('hidden');\n        $color_hex.removeClass('hidden');\n    },\n\n    setColor: function () {\n        this.close();\n        let appearance = this.model.get('appearance');\n        this.model.save('appearance', _.extend(appearance, {color: this.$('.selected-color-hex').text()}));\n\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                xabber.settings_modal_view.updateColor();\n            }\n        });\n    }\n\n});\n\nxabber.SetBackgroundView = xabber.BasicView.extend({\n    className: 'modal main-modal settings-background background-panel',\n    template: templates.backgrounds_gallery,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .menu-btn\": \"updateActiveMenu\",\n        \"click .library-wrap .image-item\": \"setActiveImage\",\n        'change input[type=\"file\"]': \"onFileInputChanged\",\n        'keyup input.url': \"onInputChanged\",\n        \"click .btn-add\": \"addBackground\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n    },\n\n    render: function (options) {\n        this.model = options.model;\n        this.type = options.type;\n        this.createLibrary();\n        this.$('.menu-btn').removeClass('active');\n        this.$('.menu-btn[data-screen-name=\"library\"]').addClass('active');\n        if (this.type == 'repeating-pattern')\n            this.$('.modal-header span').text(xabber.getString(\"settings__dialog_background__header_pattern\"));\n        else\n            this.$('.modal-header span').text(xabber.getString(\"settings__dialog_background__header_image\"));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('max-height', Math.min(($(window).height() - 341), 456)).perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n        let draggable = this.$('.upload-wrap');\n        draggable[0].ondragenter = function (ev) {\n            ev.preventDefault();\n            draggable.addClass('file-drop');\n        };\n        draggable[0].ondragover = function (ev) {\n            ev.preventDefault();\n        };\n        draggable[0].ondragleave = function (ev) {\n            if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                return;\n            ev.preventDefault();\n            draggable.removeClass('file-drop');\n        };\n        draggable[0].ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            draggable.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [], file;\n            for (let i = 0; i < files.length; i++) {\n                if (utils.isImageType(files[i].type)) {\n                    file = files[i];\n                    break;\n                }\n            }\n            file && this.addFile(file);\n        };\n    },\n\n    onScrollY: function () {\n        if (this.$('.screen-wrap:not(.hidden)').attr('data-screen') === 'library' && this.getScrollBottom() < 5) {\n            this.loadMoreImages();\n        }\n    },\n\n    getImagesFromXML: function (callback) {\n        if (this.type == 'repeating-pattern' && this.model.patterns_library || this.type == 'images' && this.model.img_library) {\n            callback && callback();\n            return;\n        }\n        if (this.type == 'repeating-pattern') {\n            this.onGetPatternsCallback(env.backgroundPatternsXml)\n        } else {\n            this.onGetImagesCallback(env.backgroundImagesXml);\n        }\n        callback && callback();\n    },\n\n    onGetPatternsCallback: function (data) {\n        if (!(data && data['background-patterns'] && data['background-patterns'].image))\n            return;\n        let images = [];\n        data = data['background-patterns'].image;\n        data.forEach((item) => {\n            images.push({thumbnail: item});\n        });\n        this.model.patterns_library = images;\n    },\n\n    onGetImagesCallback: function (data) {\n        if (!(data && data['background-images'] && data['background-images'].image))\n            return;\n        let images = [];\n        data = data['background-images'].image;\n        data.forEach((item) => {\n            let thumbnail = item.thumbnail,\n                fs_img = item['fullscreen-image'];\n            images.push({thumbnail, fs_img});\n        });\n        this.model.img_library = images;\n    },\n\n    onPaste: function (ev) {\n        let url = ev.clipboardData.getData('text').trim();\n        this.$('.image-preview img')[0].onload = () => {\n            this.$('.image-preview img').removeClass('hidden');\n            this.updateActiveButton();\n        };\n        this.$('.image-preview img').addClass('hidden')[0].src = url;\n        this.updateActiveButton();\n    },\n\n    updateActiveMenu: function (ev) {\n        let screen_name = ev.target.getAttribute('data-screen-name');\n        this.$('.menu-btn').removeClass('active');\n        this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n        this.updateScreen(screen_name);\n    },\n\n    updateScreen: function (name) {\n        this.$('.screen-wrap').addClass('hidden');\n        this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n        this.scrollToTop();\n        this.updateActiveButton();\n    },\n\n    updateActiveButton: function () {\n        let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            non_active = true;\n        if ($active_screen.attr('data-screen') == 'library') {\n            $active_screen.find('div.active').length && (non_active = false);\n        } else {\n            $active_screen.find('img:not(.hidden)').length && (non_active = false);\n        }\n        this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n    },\n\n    createLibrary: function () {\n        this.getImagesFromXML(() => {\n            this.loadMoreImages(40);\n        });\n    },\n\n    loadMoreImages: function (count) {\n        if ((this.type == 'repeating-pattern' && !this.model.patterns_library) || (this.type == 'images' && !this.model.img_library))\n            return;\n        !count && (count = 20);\n        let current_count = this.$(`.image-item`).length;\n        if (this.type == 'repeating-pattern' && current_count >= this.model.patterns_library.length || this.type == 'images' && current_count >= this.model.img_library.length)\n            return;\n        for (let i = current_count; i < (current_count + count); i++) {\n            let img = $(`<div class=\"image-item\"/>`),\n                img_sources = this.type == 'repeating-pattern' ? this.model.patterns_library[i] : this.model.img_library[i];\n            if (!img_sources)\n                break;\n            img.css('background-image', `url(\"${img_sources.thumbnail}\")`);\n            img.attr('data-src', this.type == 'repeating-pattern' ? img_sources.thumbnail : img_sources.fs_img);\n            this.$('.library-wrap').append(img);\n        }\n    },\n\n    setActiveImage: function (ev) {\n        let $target = $(ev.target);\n        if ($target.hasClass('active'))\n            $target.removeClass('active');\n        else {\n            this.$('.library-wrap>div').removeClass('active');\n            $target.addClass('active');\n        }\n        this.updateActiveButton();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target, file;\n        for (let i = 0; i < target.files.length; i++) {\n            if (utils.isImageType(target.files[i].type)) {\n                file = target.files[i];\n                break;\n            }\n        }\n        file && this.addFile(file);\n        $(target).val('');\n    },\n\n    addFile: function (file) {\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            let image_prev = new Image(),\n                src = e.target.result;\n            image_prev.src = src;\n            this.$('.screen-wrap[data-screen=\"upload\"] img').detach();\n            this.$('.screen-wrap[data-screen=\"upload\"]').prepend(image_prev);\n            this.updateActiveButton();\n        };\n        reader.readAsDataURL(file);\n    },\n\n    onInputChanged: function (ev) {\n        if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n            return;\n        if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n            let url = ev.target.value.trim();\n            this.$('.image-preview img')[0].onload = () => {\n                this.$('.image-preview img').removeClass('hidden');\n                this.updateActiveButton();\n            };\n            this.$('.image-preview img').addClass('hidden')[0].src = url;\n            this.updateActiveButton();\n        } else {\n            this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n            this.updateActiveButton();\n        }\n    },\n\n    addBackground: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n        dfd.done((img) => {\n            if (img) {\n                this.model.save('background', {type: this.type, image: img});\n            }\n            else {\n                this.model.save('background', {type: 'default'});\n            }\n            xabber.body.updateBackground();\n            this.close();\n        });\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = $active_screen.find('div.active').attr('data-src');\n            dfd.resolve(image);\n        } else {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            if ($active_screen.attr('data-screen') == 'web-address') {\n                let request = {\n                    type: \"GET\",\n                    url: image,\n                    headers: {\"Access-Control-Allow-Origin\": \"*\"},\n                    dataType: 'blob',\n                    success: function (data) {\n                        image = data;\n                        dfd.resolve(image);\n                    },\n                    error: () => {\n                        dfd.resolve(image);\n                    }\n                };\n                $.ajax(request);\n            } else\n                dfd.resolve(image);\n        }\n    },\n\n    close: function () {\n        xabber.settings_modal_view.updateBackgroundSetting();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n});\n\nxabber.AboutView = xabber.BasicView.extend({\n    className: 'settings-panel about-panel',\n    template: templates.about,\n    ps_selector: '.panel-content',\n\n    _initialize: function () {\n        this.$('.xabber-info-wrap .version').text(this.model.get('version_number'));\n    },\n\n    render: function () {\n    }\n});\n\nxabber.DragManager = Backbone.Model.extend({\n    initialize: function () {\n        window.document.onmousedown = this.onMouseDown.bind(this);\n        window.document.onmousemove = this.onMouseMove.bind(this);\n        window.document.onmouseup = this.onMouseUp.bind(this);\n    },\n\n    onMouseDown: function (ev) {\n        if (ev.which != 1) {\n            return;\n        }\n        let draghandle_elem = ev && ev.target && ev.target.closest ? ev.target.closest('.drag-handle') : $(ev.target).closest('.drag-handle'),\n            elem = draghandle_elem && draghandle_elem.closest('.draggable');\n        if (!elem) {\n            return this.resetElem();\n        }\n        this.set({\n            elem: elem,\n            draghandle_elem: draghandle_elem,\n            downX: ev.pageX,\n            downY: ev.pageY\n        });\n    },\n\n    onMouseMove: function (ev) {\n        if (!this.get('elem')) {\n            return;\n        }\n        let avatar = this.get('avatar');\n        if (!avatar) {\n            if (    Math.abs(ev.pageX - this.get('downX')) < 3 &&\n                    Math.abs(ev.pageY - this.get('downY')) < 3) {\n                return;\n            }\n            avatar = this.createAvatar(ev);\n            if (!avatar) {\n                return this.resetElem();\n            }\n            this.set('avatar', avatar);\n            let coords = this.getCoords(avatar);\n            this.set({\n                shiftX: this.get('downX') - coords.left,\n                shiftY: this.get('downY') - coords.top\n            });\n            this.startDrag(ev);\n        }\n        avatar.style.left = ev.pageX - this.get('shiftX') + 'px';\n        avatar.style.top = ev.pageY - this.get('shiftY') + 'px';\n        let drop_elem = this.findDropElem(ev);\n        this.updateDropElem(drop_elem);\n        return;\n    },\n\n    onMouseUp: function (ev) {\n        let selector = document.querySelector('.recording');\n        if (selector) {\n            $(selector).removeClass('recording');\n            return;\n        }\n        this.get('avatar') && this.finishDrag(ev);\n        this.resetElem();\n    },\n\n    resetElem: function () {\n        this.set({elem: null, draghandle_elem: null, avatar: null});\n    },\n\n    getCoords: function (elem) {\n        let box = elem.getBoundingClientRect();\n        return {\n            top: box.top + window.pageYOffset,\n            left: box.left + window.pageXOffset\n        };\n    },\n\n    createAvatar: function () {\n        let avatar = this.get('elem'),\n            $avatar = $(avatar),\n            draghandle_elem = this.get('draghandle_elem');\n        let old = {\n            parent: avatar.parentNode,\n            nextSibling: avatar.nextSibling,\n            position: avatar.position || '',\n            left: avatar.left || '',\n            top: avatar.top || '',\n            zIndex: avatar.zIndex || '',\n            avatar_cursor: avatar.style.cursor || '',\n            draghandle_elem_cursor: draghandle_elem.style.cursor || ''\n        };\n\n        $avatar.addClass('dragging');\n        avatar.style.cursor = '-webkit-grabbing';\n        draghandle_elem.style.cursor = '-webkit-grabbing';\n\n        avatar.rollback = function () {\n            old.parent.insertBefore(avatar, old.nextSibling);\n            $avatar.removeClass('dragging');\n            avatar.style.position = old.position;\n            avatar.style.left = old.left;\n            avatar.style.top = old.top;\n            avatar.style.zIndex = old.zIndex;\n            avatar.style.cursor = old.avatar_cursor;\n            draghandle_elem.style.cursor = old.draghandle_elem_cursor;\n        };\n\n        return avatar;\n    },\n\n    startDrag: function (ev) {\n        let avatar = this.get('avatar');\n        window.document.body.appendChild(avatar);\n        avatar.style.zIndex = 9999;\n        avatar.style.position = 'absolute';\n    },\n\n    finishDrag: function (ev) {\n        let elem = this.get('elem'),\n            avatar = this.get('avatar'),\n            drop_elem = this.findDropElem(ev);\n        avatar.rollback();\n        this.updateDropElem(null);\n        if (elem && drop_elem) {\n            $(elem).trigger('drag_to', drop_elem);\n            $(drop_elem).trigger('drag_from', elem);\n        }\n    },\n\n    findDropElem: function (ev) {\n        let avatar = this.get('avatar');\n        avatar.hidden = true;\n        let elem = window.document.elementFromPoint(ev.clientX, ev.clientY);\n        avatar.hidden = false;\n        if (!elem) {\n            return null;\n        }\n        return elem.closest('.droppable');\n    },\n\n    updateDropElem: function (drop_elem) {\n        let old_drop_elem = this.get('drop_elem');\n        this.set('drop_elem', drop_elem);\n        old_drop_elem && $(old_drop_elem).removeClass('drag-on');\n        drop_elem && $(drop_elem).addClass('drag-on');\n    }\n});\n\n_.extend(xabber, {\n    modal_settings: {\n        open: {\n            in_duration: 10,\n            out_duration: 10,\n            opacity: 0.4\n        },\n        close: {out_duration: 10}\n    },\n\n    ps_settings: {\n        minScrollbarLength: 40,\n        suppressScrollX: true,\n        wheelSpeed: 0.5\n    },\n\n    startBlinkingFavicon: function (is_disconnected) {\n        if (this._blink_interval && is_disconnected === undefined)\n            return;\n        clearInterval(this._blink_interval);\n        this._blink_interval = setInterval(() => {\n            let $icon = $(\"link[rel='shortcut icon']\"), url;\n            if ($icon.attr('href').indexOf(this.cache.favicon) > -1 || $icon.attr('href').indexOf(constants.FAVICON_DEFAULT) > -1 || $icon.attr('href').indexOf(this.cache.favicon_gray) > -1 || $icon.attr('href').indexOf(constants.FAVICON_DEFAULT_GREY) > -1)\n                url = this.cache.favicon_message || constants.FAVICON_MESSAGE;\n            else\n                url = is_disconnected ? this.cache.favicon_gray || constants.FAVICON_DEFAULT_GREY : this.cache.favicon || constants.FAVICON_DEFAULT;\n            $icon.attr('href', url);\n        }, 1000);\n    },\n\n    stopBlinkingFavicon: function (is_disconnected) {\n        if (this._blink_interval || is_disconnected !== undefined) {\n            clearInterval(this._blink_interval);\n            this._blink_interval = null;\n            let url = is_disconnected ? this.cache.favicon_gray || constants.FAVICON_DEFAULT_GREY : this.cache.favicon || constants.FAVICON_DEFAULT;\n            $(\"link[rel='shortcut icon']\").attr(\"href\", url);\n        }\n    },\n\n    onChangedAllMessageCounter: function () {\n        if (this.get('all_msg_counter')) {\n            this.startBlinkingFavicon();\n            window.document.title = xabber.getString(\"notofications__desktop_notification__text\", [this.get('all_msg_counter')]);\n        } else {\n            this.stopBlinkingFavicon();\n            window.document.title = constants.CLIENT_NAME;\n        }\n    },\n\n    updateAllMessageCounterOnDisconnect: function (is_disconnected) {\n        if (this.get('all_msg_counter')) {\n            this.startBlinkingFavicon(is_disconnected);\n            window.document.title = xabber.getString(\"notofications__desktop_notification__text\", [this.get('all_msg_counter')]);\n        } else {\n            this.stopBlinkingFavicon(is_disconnected);\n            window.document.title = constants.CLIENT_NAME;\n        }\n    },\n\n    loadEmojiFont: function (url, dfd) {\n        xabber.error('loading Font!');\n        if (url && url !== 'system') {\n            let FontName = \"EmojiFont\",\n                FontURL = url,\n                emoji_font = new FontFace(FontName, `url(${FontURL})`),\n                font_loaded;\n\n            let load_check_interval = setInterval(() => {\n                console.log('status - ' + emoji_font.status);\n                if (emoji_font.status == 'loaded' || emoji_font.status == 'error'){\n                    clearInterval(load_check_interval);\n                    if (emoji_font.status == 'loaded' && !font_loaded){\n                        font_loaded = true;\n                        console.log('loaded - interval');\n                        document.fonts.add(emoji_font);\n                        $(constants.CONTAINER_ELEMENT).addClass('custom-emoji-font');\n                        dfd && dfd.resolve({});\n                    } else if (emoji_font.status == 'error' && !font_loaded) {\n                        font_loaded = true;\n                        console.log('error - interval');\n                        utils.dialogs.error(xabber.getString(\"settings__menu_item__emoji_font_error_loading\"));\n                        $(constants.CONTAINER_ELEMENT).removeClass('custom-emoji-font');\n                        dfd && dfd.resolve({error: true});\n                    }\n                }\n            }, 1000);\n\n            emoji_font.load().then(() => {\n                console.log('loaded');\n                if (font_loaded)\n                    return;\n                font_loaded = true;\n                document.fonts.add(emoji_font);\n                $(constants.CONTAINER_ELEMENT).addClass('custom-emoji-font');\n                dfd && dfd.resolve({});\n            }).catch((error) => {\n                console.log('error');\n                if (font_loaded)\n                    return;\n                font_loaded = true;\n                utils.dialogs.error(xabber.getString(\"settings__menu_item__emoji_font_error_loading\") + error);\n                $(constants.CONTAINER_ELEMENT).removeClass('custom-emoji-font');\n                dfd && dfd.resolve({error: true});\n            });\n        } else if (url === 'system'){\n            console.log('system font');\n            $(constants.CONTAINER_ELEMENT).removeClass('custom-emoji-font');\n            dfd && dfd.resolve({});\n        }\n    },\n\n    setAllMessageCounter: function () {\n        let count_msg = 0;\n        xabber.accounts.each((account) => {\n            account.chats.each((chat) => {\n                if (chat.contact && !chat.isMuted())\n                    count_msg += chat.get('unread') + chat.get('const_unread');\n            });\n            let incoming_subscriptions = account.contacts.filter(item => (item.get('invitation') && !item.get('removed')) || (item.get('subscription_request_in') && item.get('subscription') != 'both')).length;\n            count_msg += incoming_subscriptions;\n        });\n        return count_msg;\n    },\n\n    recountAllMessageCounter: function () {\n        if (!this.get('focused')) {\n            this.set('all_msg_counter', this.setAllMessageCounter());\n        }\n    },\n\n    resetMessageCounter: function () {\n        this.set('all_msg_counter', 0);\n    },\n\n    onChangedFocusState: function () {\n        if (this.get('focused')) {\n            this.resetMessageCounter();\n        }\n    },\n\n    openWindow: function (url) {\n        utils.openWindow(url, () => {\n            utils.dialogs.error(xabber.getString(\"notifications__error__text_could_not_open_new_tab\"));\n        });\n    },\n\n    popupNotification: function (params) {\n        let notification = new window.Notification(params.title, {\n            body: params.text,\n            icon: params.icon\n        });\n        setTimeout(notification.close.bind(notification), 5000);\n        return notification;\n    },\n\n    playAudio: function (name, loop, volume) {\n        if (!((volume || volume === 0) && !isNaN(volume)))\n            volume = 1;\n        loop = loop || false;\n        let filename = sounds.all_sounds.find(item => item.file_name === name);\n        if (filename) {\n            let audio = new window.Audio(filename.audio);\n            audio.loop = loop;\n            audio.volume = volume;\n            audio.play();\n            return audio;\n        }\n        return;\n    },\n\n    stopAudio: function (audio) {\n        if (audio) {\n            audio.pause();\n            audio.remove();\n        }\n    },\n\n    registerDOMEvents: function () {\n        let self = this;\n\n        $(window).on(\"blur focus\", function (ev) {\n            self.set('focused', ev.type === 'focus');\n        });\n\n        $(window).on(\"resize\", function (ev) {\n            self.set({\n                width: window.innerWidth,\n                height: window.innerHeight\n            });\n            self.trigger('update_layout', {size_changed: true});\n        });\n\n        window.document.body.ondragover = (ev) => {\n            ev.preventDefault();\n        };\n\n        window.document.body.ondrop = (ev) => {\n            ev.preventDefault();\n        };\n    },\n\n\n    initIdleJS: function () {\n        if (this.idleJs)\n            this.idleJs.stop();\n        let self = this,\n            idling_time = self._settings.get('idling_time') * 1000\n\n        this.idleJs = new idleJs({\n            idle: idling_time, // idle time in ms\n            events: ['mousemove', 'keydown', 'mousedown', 'touchstart', 'focus', 'blur'], // events that will trigger the idle resetter\n            onIdle: () => {\n                if (self._settings.get('idling'))\n                    self.set('idle', true);\n                else\n                    self.set('idle', false);\n            } , // callback function to be executed after idle time\n            onActive:() => {\n                self.set('idle', false);\n            }  , // callback function to be executed after back form idleness\n            keepTracking: true, // set it to false if you want to be notified only on the first idleness change\n            startAtIdle: false // set it to true if you want to start in the idle state\n        })\n        this.idleJs.start();\n    },\n\n\n    autostartHandler: function () {\n        if (!constants.DESKTOP_AUTOSTART_OPTION)\n            return;\n        if (!window.electronAPI || !window.electronAPI.autostartHandler)\n            return;\n        let desktop_autostart = this._settings.get('desktop_autostart');\n\n        window.electronAPI.autostartHandler(Boolean(desktop_autostart));\n    },\n});\n\nxabber.once(\"start\", function () {\n    this.set('all_msg_counter', 0);\n    this.on(\"change:all_msg_counter\", this.onChangedAllMessageCounter, this);\n    this.on(\"change:focused\", this.onChangedFocusState, this);\n    this._settings.on(\"change:idling_time\", this.initIdleJS, this);\n    this._settings.on(\"change:desktop_autostart\", this.autostartHandler, this);\n    this.set({\n        focused: window.document.hasFocus(),\n        width: window.innerWidth,\n        height: window.innerHeight\n    });\n    this.registerDOMEvents();\n    this.initIdleJS();\n    this.autostartHandler();\n\n    Materialize.modalSettings = this.modal_settings;\n\n    this.drag_manager = new this.DragManager();\n\n    this.body = new this.Body({model: this});\n\n    this.login_page = this.body.addChild('login', this.NodeView, {\n        classlist: 'login-page-wrap', el: $(document).find('.login-container')[0]});\n\n    this.toolbar_view = this.body.addChild('toolbar', this.ToolbarView);\n    this.settings.appearance.color && this.toolbar_view.updateColor(this.settings.appearance.color);\n    xabber.trigger('toolbar_initialized');\n\n    this.blur_overlay = this.body.addChild('blur_overlay', this.NodeView, {\n        classlist: 'blur-overlay'});\n\n    this.main_panel = this.body.addChild('main', this.NodeView, {\n        classlist: 'main-wrap'});\n    this.main_overlay_panel = this.body.addChild('main_overlay', this.NodeView, {\n        classlist: 'main-overlay-wrap hidden'});\n    this.body.updateBlur(this.settings.appearance.blur);\n    this.left_panel = this.main_panel.addChild(\n        'left', this.NodeView, {classlist: 'panel-wrap left-panel-wrap'});\n    this.right_panel = this.main_panel.addChild(\n        'right', this.NodeView, {classlist: 'panel-wrap right-panel-wrap'});\n    this.right_contact_panel = this.main_panel.addChild(\n        'right_contact', this.NodeView, {classlist: 'panel-wrap right-contact-panel-wrap'});\n    this.wide_panel = this.main_panel.addChild(\n        'wide', this.NodeView, {classlist: 'panel-wrap wide-panel-wrap'});\n    this.placeholders_wrap = this.main_panel.addChild('placeholders', this.NodeView, {classlist: 'wide-placeholders-wrap'});\n    this.settings_modal_view = this.main_overlay_panel.addChild(\n        'settings_modal', this.SettingsModalView, {model: this._settings});\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    utils = env.utils;\n\n\nxabber.AccountSettings = Backbone.Model.extend({\n    idAttribute: 'jid',\n\n    defaults: {\n        timestamp: 0,\n        to_sync: false,\n        synced: false,\n        deleted: false\n    },\n\n    update_timestamp: function () {\n        this.save('timestamp', utils.now());\n    },\n\n    update_settings: function (settings) {\n        this.save(_.extend({timestamp: utils.now()}, settings));\n    },\n\n    request_data: function () {\n        return {\n            jid: this.get('jid'),\n            timestamp: this.get('timestamp'),\n            settings: _.omit(this.attributes, [\n                'jid', 'timestamp', 'order',\n                'to_sync', 'synced', 'deleted'\n            ])\n        };\n    }\n});\n\nxabber.AccountSettingsList = Backbone.CollectionWithStorage.extend({\n    model: xabber.AccountSettings,\n});\n\nxabber.AccountsOrderTimestamp = Backbone.ModelWithStorage.extend({\n    defaults: {\n        timestamp: 0\n    }\n});\n\nxabber.once(\"start\", function () {\n        this.account_settings_list = new this.AccountSettingsList(null, {\n            storage_name: this.getStorageName() + '-account-settings'\n        });\n        this.account_settings_list.fetch();\n        this.account_settings_list.order_timestamp = new this.AccountsOrderTimestamp(\n            {id: 'accounts-order-timestamp'},\n            {storage_name: this.getStorageName(), fetch: 'after'}\n        );\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    _ = env._,\n    uuid = env.uuid,\n    $iq = env.$iq,\n    utils = env.utils,\n    Strophe = env.Strophe,\n    constants = env.constants;\n\nStrophe.log = function (log_level, msg) {\n    let do_log = (constants.LOG_LEVEL === constants.LOG_LEVEL_DEBUG) ||\n        (constants.LOG_LEVEL >= constants.LOG_LEVEL_WARN &&\n            log_level >= Strophe.LogLevel.WARN) ||\n        (constants.LOG_LEVEL >= constants.LOG_LEVEL_ERROR &&\n            log_level >= Strophe.LogLevel.ERROR);\n    if (do_log) {\n        console.info('Strophe log: ');\n        console.info(msg);\n    }\n};\n\nStrophe.addConnectionPlugin('register', {\n    _connection: null,\n\n    //The plugin must have the init function.\n    init: function(conn) {\n        this._connection = conn;\n\n        // compute free emun index number\n        let i = 0;\n        Object.keys(Strophe.Status).forEach(function (key) {\n            i = Math.max(i, Strophe.Status[key]);\n        });\n\n        /* extend name space\n         *  NS.REGISTER - In-Band Registration\n         *              from XEP 77.\n         */\n        Strophe.addNamespace('REGISTER', 'jabber:iq:register');\n        Strophe.Status.REGIFAIL        = i + 1;\n        Strophe.Status.REGISTER        = i + 2;\n        Strophe.Status.REGISTERED      = i + 3;\n        Strophe.Status.CONFLICT        = i + 4;\n        Strophe.Status.NOTACCEPTABLE   = i + 5;\n\n        if (conn.disco) {\n            if(conn.disco.addFeature)\n                conn.disco.addFeature(Strophe.NS.REGISTER);\n            if(conn.disco.addNode)\n                conn.disco.addNode(Strophe.NS.REGISTER, {items:[]});\n        }\n\n        // hooking strophe's connection.reset\n        var self = this, reset = conn.reset.bind(conn);\n        conn.reset = function () {\n            reset();\n            self.instructions = \"\";\n            self.fields = {};\n            self.registered = false;\n        };\n\n        // hooking strophe's _connect_cb\n        var connect_cb = conn._connect_cb.bind(conn);\n        conn._connect_cb = function (req, callback, raw) {\n            if (!self._registering) {\n                if (self.processed_features) {\n                    // exchange Input hooks to not print the stream:features twice\n                    var xmlInput = conn.xmlInput;\n                    conn.xmlInput = Strophe.Connection.prototype.xmlInput;\n                    var rawInput = conn.rawInput;\n                    conn.rawInput = Strophe.Connection.prototype.rawInput;\n                    connect_cb(req, callback, raw);\n                    conn.xmlInput = xmlInput;\n                    conn.rawInput = rawInput;\n                    delete self.processed_features;\n                } else {\n                    connect_cb(req, callback, raw);\n                }\n            } else {\n                if(!self._check_user) {\n                    // Save this request in case we want to authenticate later\n                    self._connect_cb_data = {\n                        req: req,\n                        raw: raw\n                    };\n                    if (self._register_cb(req, callback, raw)) {\n                        // remember that we already processed stream:features\n                        self.processed_features = true;\n                        delete self._registering;\n                    }\n                }\n                else {\n                    if (self._register_cb_check_user(req, callback, raw)) {\n                        // remember that we already processed stream:features\n                        self.processed_features = true;\n                        delete self._registering;\n                    }\n\n                }\n            }\n        };\n\n        // hooking strophe`s authenticate\n        var auth_old = conn.authenticate.bind(conn);\n        conn.authenticate = function(matched) {\n            if (typeof matched === \"undefined\") {\n                var conn = this._connection;\n\n                if (!this.fields.username || !this.domain || !this.fields.password) {\n                    Strophe.info(\"Register a JID first!\");\n                    return;\n                }\n\n                var jid = this.fields.username + \"@\" + this.domain;\n\n                conn.jid = jid;\n                conn.authzid = Strophe.getBareJidFromJid(conn.jid);\n                conn.authcid = Strophe.getNodeFromJid(conn.jid);\n                conn.pass = this.fields.password;\n\n                var req = this._connect_cb_data.req;\n                var callback = conn.connect_callback;\n                var raw = this._connect_cb_data.raw;\n                conn._connect_cb(req, callback, raw);\n            } else {\n                auth_old(matched);\n            }\n        }.bind(this);\n\n    },\n\n    /** Function: connect\n     *  Starts the registration process.\n     *\n     *  As the registration process proceeds, the user supplied callback will\n     *  be triggered multiple times with status updates.  The callback\n     *  should take two arguments - the status code and the error condition.\n     *\n     *  The status code will be one of the values in the Strophe.Status\n     *  constants.  The error condition will be one of the conditions\n     *  defined in RFC 3920 or the condition 'strophe-parsererror'.\n     *\n     *  Please see XEP 77 for a more detailed explanation of the optional\n     *  parameters below.\n     *\n     *  Parameters:\n     *    (String) domain - The xmpp server's Domain.  This will be the server,\n     *      which will be contacted to register a new JID.\n     *      The server has to provide and allow In-Band Registration (XEP-0077).\n     *    (Function) callback The connect callback function.\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n     *      time the server will wait before returning an empty result for\n     *      a request.  The default setting of 60 seconds is recommended.\n     *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n     *      number of connections the server will hold at one time.  This\n     *      should almost always be set to 1 (the default).\n     */\n    connect: function(domain, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(domain);\n        this.instructions = \"\";\n        this.fields = {};\n        this.registered = false;\n\n        this._registering = true;\n\n        conn.connect(this.domain, \"\", callback, wait, hold, route);\n    },\n\n\n    connect_check_user: function(domain, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(domain);\n        this.instructions = \"\";\n        this.fields = {};\n        this.registered = false;\n\n        this._registering = true;\n        this._check_user = true;\n\n        conn.connect(this.domain, \"\", callback, wait, hold, route);\n    },\n\n    connect_change_password: function(jid, password, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(jid);\n        this.instructions = \"\";\n        this.fields = {};\n        conn.registerSASLMechanisms([Strophe.SASLAnonymous,\n            Strophe.SASLExternal,\n            Strophe.SASLMD5,\n            Strophe.SASLPlain,\n            Strophe.SASLSHA1]);\n\n        conn.connect(jid, password, callback, wait, hold, route);\n    },\n\n    /** PrivateFunction: _register_cb\n     *  _Private_ handler for initial registration request.\n     *\n     *  This handler is used to process the initial registration request\n     *  response from the BOSH server. It is used to set up a bosh session\n     *  and requesting registration fields from host.\n     *\n     *  Parameters:\n     *    (Strophe.Request) req - The current request.\n     */\n    _register_cb: function (req, _callback, raw) {\n        var conn = this._connection;\n\n        Strophe.info(\"_register_cb was called\");\n        conn.connected = true;\n\n        var bodyWrap = conn._proto._reqToData(req);\n        if (!bodyWrap) { return; }\n\n        if (conn.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (bodyWrap.nodeName === conn._proto.strip && bodyWrap.childNodes.length) {\n                conn.xmlInput(bodyWrap.childNodes[0]);\n            } else {\n                conn.xmlInput(bodyWrap);\n            }\n        }\n        if (conn.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                conn.rawInput(raw);\n            } else {\n                conn.rawInput(Strophe.serialize(bodyWrap));\n            }\n        }\n\n        var conncheck = conn._proto._connect_cb(bodyWrap);\n        if (conncheck === Strophe.Status.CONNFAIL) {\n            return false;\n        }\n\n        // Check for the stream:features tag\n        var register = bodyWrap.getElementsByTagName(\"register\");\n        var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n        if (register.length === 0 && mechanisms.length === 0) {\n            conn._proto._no_auth_received(_callback);\n            return false;\n        }\n\n        if (register.length === 0) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, null);\n            return true;\n        }\n\n        // send a get request for registration, to get all required data fields\n        conn._addSysHandler(this._get_register_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send($iq({type: \"get\", id: uuid(), to: this.domain }).c(\"query\",\n            {xmlns: Strophe.NS.REGISTER}).tree());\n\n        return true;\n    },\n    _register_cb_check_user: function (req, _callback, raw) {\n        var conn = this._connection;\n\n        Strophe.info(\"_register_cb was called\");\n        conn.connected = true;\n\n        var bodyWrap = conn._proto._reqToData(req);\n        if (!bodyWrap) { return; }\n\n        if (conn.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (bodyWrap.nodeName === conn._proto.strip && bodyWrap.childNodes.length) {\n                conn.xmlInput(bodyWrap.childNodes[0]);\n            } else {\n                conn.xmlInput(bodyWrap);\n            }\n        }\n        if (conn.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                conn.rawInput(raw);\n            } else {\n                conn.rawInput(Strophe.serialize(bodyWrap));\n            }\n        }\n\n        var conncheck = conn._proto._connect_cb(bodyWrap);\n        if (conncheck === Strophe.Status.CONNFAIL) {\n            return false;\n        }\n\n        // Check for the stream:features tag\n        var register = bodyWrap.getElementsByTagName(\"register\");\n        var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n        if (register.length === 0 && mechanisms.length === 0) {\n            conn._proto._no_auth_received(_callback);\n            return false;\n        }\n\n        if (register.length === 0) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, null);\n            return true;\n        }\n        conn._changeConnectStatus(Strophe.Status.REGISTER, null);\n\n        return true;\n    },\n\n    /** PrivateFunction: _get_register_cb\n     *  _Private_ handler for Registration Fields Request.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The query stanza.\n     *\n     *  Returns:\n     *    false to remove SHOULD contain the registration information currentlSHOULD contain the registration information currentlSHOULD contain the registration information currentlthe handler.\n     */\n    _get_register_cb: function (stanza) {\n        var i, query, field, conn = this._connection;\n        query = stanza.getElementsByTagName(\"query\");\n\n        if (query.length !== 1) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n            return false;\n        }\n        query = query[0];\n        // get required fields\n        for (i = 0; i < query.childNodes.length; i++) {\n            field = query.childNodes[i];\n            if (field.tagName.toLowerCase() === 'instructions') {\n                // this is a special element\n                // it provides info about given data fields in a textual way.\n                conn.register.instructions = Strophe.getText(field);\n                continue;\n            } else if (field.tagName.toLowerCase() === 'x') {\n                // ignore x for now\n                continue;\n            }\n            conn.register.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n        }\n        conn._changeConnectStatus(Strophe.Status.REGISTER, null);\n        return false;\n    },\n\n    /** Function: submit\n     *  Submits Registration data.\n     *\n     *  As the registration process proceeds, the user supplied callback will\n     *  be triggered with status code Strophe.Status.REGISTER. At this point\n     *  the user should fill all required fields in connection.register.fields\n     *  and invoke this function to procceed in the registration process.\n     */\n    submit: function () {\n        var lang = xabber.settings.language;\n        (lang === 'default') && (lang = xabber.get('default_language'));\n        var i, name, query, fields, conn = this._connection;\n        query = $iq({type: \"set\", 'xml:lang': lang, id: uuid()}).c(\"query\", {xmlns:Strophe.NS.REGISTER});\n\n        // set required fields\n        fields = Object.keys(this.fields);\n        for (i = 0; i < fields.length; i++) {\n            name = fields[i];\n            query.c(name).t(this.fields[name]).up();\n        }\n\n        // providing required information\n        conn._addSysHandler(this._submit_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send(query);\n    },\n\n    /** PrivateFunction: _submit_cb\n     *  _Private_ handler for submitted registration information.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The query stanza.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    _submit_cb: function (stanza) {\n        var i, query, field, error = null, conn = this._connection;\n\n        query = stanza.getElementsByTagName(\"query\");\n        if (query.length > 0) {\n            query = query[0];\n            // update fields\n            for (i = 0; i < query.childNodes.length; i++) {\n                field = query.childNodes[i];\n                if (field.tagName.toLowerCase() === 'instructions') {\n                    // this is a special element\n                    // it provides info about given data fields in a textual way\n                    this.instructions = Strophe.getText(field);\n                    continue;\n                }\n                this.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n            }\n        }\n\n        if (stanza.getAttribute(\"type\") === \"error\") {\n            error = stanza.getElementsByTagName(\"error\");\n            let error_text = stanza.getElementsByTagName(\"text\");\n            if (error_text.length > 0)\n                error_text = error_text[0].innerHTML;\n            if (error.length !== 1) {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n                return false;\n            }\n\n            Strophe.info(\"Registration failed.\");\n\n            // this is either 'conflict' or 'not-acceptable'\n            error = error[0].firstChild.tagName.toLowerCase();\n            if (error === 'conflict') {\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, error, error_text);\n            } else if (error === 'not-acceptable') {\n                conn._changeConnectStatus(Strophe.Status.NOTACCEPTABLE, error, error_text);\n            } else {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, error, error_text);\n            }\n        } else {\n            Strophe.info(\"Registration successful.\");\n\n            conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n\n        return false;\n    },\n\n    submit_unregister: function () {\n        var lang = xabber.settings.language;\n        (lang === 'default') && (lang = xabber.get('default_language'));\n        var i, name, query, fields, conn = this._connection;\n        query = $iq({type: \"set\", 'xml:lang': lang, id: uuid()}).c(\"query\", {xmlns:Strophe.NS.REGISTER}).c('remove');\n\n        conn._addSysHandler(this._submit_unregister_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send(query);\n    },\n\n    _submit_unregister_cb: function (stanza) {\n        var i, error = null, conn = this._connection;\n\n        if (stanza.getAttribute(\"type\") === \"error\") {\n            error = stanza.getElementsByTagName(\"error\");\n            let error_text = stanza.getElementsByTagName(\"text\");\n            if (error_text.length > 0)\n                error_text = error_text[0].innerHTML;\n            if (error.length !== 1) {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n                return false;\n            }\n\n            Strophe.info(\"Unregistration failed.\");\n\n            // this is either 'conflict' or 'not-acceptable'\n            error = error[0].firstChild.tagName.toLowerCase();\n            if (error === 'conflict') {\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, error, error_text);\n            } else if (error === 'not-acceptable') {\n                conn._changeConnectStatus(Strophe.Status.NOTACCEPTABLE, error, error_text);\n            } else {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, error, error_text);\n            }\n        } else {\n            Strophe.info(\"Unregistration successful.\");\n\n            conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n\n        return false;\n    }\n});\n\n\nlet utf16to8 = function (str) {\n    let i, c;\n    let out = \"\";\n    let len = str.length;\n    for (i = 0; i < len; i++) {\n        c = str.charCodeAt(i);\n        if ((c >= 0x0000) && (c <= 0x007F)) {\n            out += str.charAt(i);\n        } else if (c > 0x07FF) {\n            out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));\n            out += String.fromCharCode(0x80 | ((c >>  6) & 0x3F));\n            out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n        } else {\n            out += String.fromCharCode(0xC0 | ((c >>  6) & 0x1F));\n            out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n        }\n    }\n    return out;\n};\n\nStrophe.SASLHOTP = function() {};\nStrophe.SASLHOTP.prototype = new Strophe.SASLMechanism(\"HOTP\", true, 100);\n\nStrophe.SASLHOTP.prototype.test = function (connection) {\n    return true;\n};\n\nStrophe.SASLHOTP.prototype.onChallenge = function (connection) {\n    let auth_str = String.fromCharCode(0) + connection.authcid +\n        String.fromCharCode(0) + connection.hotp_pass;\n    return utf16to8(auth_str);\n};\n\nStrophe.ConnectionManager = function (CONNECTION_URL, options) {\n    options = options || {};\n    this.connection = new Strophe.Connection(CONNECTION_URL, options);\n};\n\nStrophe.ConnectionManager.prototype = {\n    connect: function (auth_type, jid, password, callback) {\n        this.connection.mechanisms = {};\n        this.auth_type = auth_type || 'password';\n        if (this.auth_type === 'password') {\n            this.connection.registerSASLMechanisms([Strophe.SASLAnonymous,\n                Strophe.SASLExternal,\n                Strophe.SASLMD5,\n                Strophe.SASLPlain,\n                Strophe.SASLSHA1]);\n        } else if (this.auth_type === 'x-token') {\n            this.connection.registerSASLMechanism(Strophe.SASLHOTP);\n            delete this.connection._sasl_data[\"server-signature\"];\n            utils.generateHOTP(utils.fromBase64toArrayBuffer(password), this.connection.counter).then((pass) => {\n                this.connection.hotp_pass = pass;\n            }).then(() => {\n                this.connection.connect(jid, password, callback)\n            });\n            return;\n        } else {\n            this.connection.registerSASLMechanisms([Strophe.SASLXOAuth2]);\n            delete this.connection._sasl_data[\"server-signature\"];\n        }\n        this.connection.connect(jid, password, callback);\n    },\n\n    reconnect: function (callback) {\n        if (this.auth_type === 'x-token') {\n            if (!this.connection.mechanisms[\"HOTP\"]) {\n                this.connection.registerSASLMechanism(Strophe.SASLHOTP);\n                delete this.connection._sasl_data[\"server-signature\"];\n            }\n            if (this.connection.account && this.connection.account.get('hotp_counter'))\n                this.connection.counter = this.connection.account.get('hotp_counter');\n            utils.generateHOTP(utils.fromBase64toArrayBuffer(this.connection.pass), this.connection.counter).then((pass) => {\n                this.connection.hotp_pass = pass;\n            }).then(() => {\n                this.connection.connect(this.connection.jid, this.connection.pass, callback)\n            });\n            return;\n        }\n        this.connection.connect(this.connection.jid, this.connection.pass, callback);\n    }\n};\n\n_.extend(Strophe.Connection.prototype, {\n\n    _attemptSASLAuth: function (mechanisms) {\n        mechanisms = this.sortMechanismsByPriority(mechanisms || []);\n        var i = 0, mechanism_found = false;\n        for (i = 0; i < mechanisms.length; ++i) {\n            if (!mechanisms[i].prototype.test(this)) {\n                continue;\n            }\n            this._sasl_success_handler = this._addSysHandler(\n                this._sasl_success_cb.bind(this), null,\n                \"success\", null, null);\n            this._sasl_failure_handler = this._addSysHandler(\n                this._sasl_failure_cb.bind(this), null,\n                \"failure\", null, null);\n            this._sasl_challenge_handler = this._addSysHandler(\n                this._sasl_challenge_cb.bind(this), null,\n                \"challenge\", null, null);\n\n            this._sasl_mechanism = new mechanisms[i]();\n            this._sasl_mechanism.onStart(this);\n\n            var request_auth_exchange = $build(\"auth\", {\n                xmlns: Strophe.NS.SASL,\n                mechanism: this._sasl_mechanism.name\n            });\n            if (this._sasl_mechanism.isClientFirst) {\n                var response = this._sasl_mechanism.onChallenge(this, null);\n                request_auth_exchange.t(btoa(response));\n            }\n            this.send(request_auth_exchange.tree());\n            mechanism_found = true;\n            if (this.account && this.counter && this.account.get('x_token') && this._sasl_mechanism.name === \"HOTP\") {\n                this.counter++;\n                this.account.save({\n                    hotp_counter: this.counter,\n                });\n            }\n            break;\n        }\n        return mechanism_found;\n    },\n\n    _sasl_auth1_cb: function (elem) {\n        this.features = elem;\n        let i, child;\n        for (i = 0; i < elem.childNodes.length; i++) {\n            child = elem.childNodes[i];\n            if (child.nodeName === 'bind') {\n                this.do_bind = true;\n            }\n\n            if (child.nodeName === 'session') {\n                this.do_session = true;\n            }\n\n            if ((child.nodeName === 'devices') && child.namespaceURI === Strophe.NS.AUTH_DEVICES && this.options['x-token']) {\n                this.x_token_auth = true;\n            }\n\n            if ((child.nodeName === 'synchronization') && (child.namespaceURI === Strophe.NS.SYNCHRONIZATION)) {\n                this.account.server_features.create({\n                    'var': child.namespaceURI,\n                    from: this.domain\n                });\n                this.do_synchronization = true;\n            }\n\n            if ((child.nodeName === 'sub') && (child.namespaceURI === Strophe.NS.SUBSCRIPTION_PREAPPROVAL)) {\n                this.account.server_features.create({\n                    'var': child.namespaceURI,\n                    from: this.domain\n                });\n            }\n        }\n\n        if (!this.do_bind) {\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\n            return false;\n        } else {\n            if (this.x_token_auth && (!this.x_token || (parseInt(this.x_token.expire)*1000 < env.moment.now()))) {\n                this.getXToken((success) => {\n                    let token = $(success).find('secret').text(),\n                        expires_at = $(success).find('expire').text(),\n                        token_uid = $(success).find('device').attr('id');\n                    this.x_token = {token: token, expire: expires_at, token_uid: token_uid,};\n                    this.counter = 1;\n                    this.pass = token;\n                    this._send_auth_bind();\n                    if (this.account) {\n                        this.account.save({\n                            hotp_counter: this.counter,\n                            password: null,\n                        });\n                    }\n                }, () => {\n                    this._send_auth_bind();\n                });\n            }\n            else {\n                this._send_auth_bind();\n            }\n        }\n        return false;\n    },\n\n    _send_auth_bind() {\n        this._addSysHandler(this._sasl_bind_cb.bind(this), null, null,\n            null, \"_bind_auth_2\");\n\n        let resource = Strophe.getResourceFromJid(this.jid);\n        if (resource) {\n            this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                .c('bind', {xmlns: Strophe.NS.BIND})\n                .c('resource', {}).t(resource).tree());\n        } else {\n            this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                .c('bind', {xmlns: Strophe.NS.BIND})\n                .tree());\n        }\n    },\n\n    getXToken: function (callback, errback) {\n        let uniq_id = uuid(), old_token,\n            iq = $iq({\n            type: 'set',\n            to: this.domain,\n            id: uniq_id\n        }).c('register', { xmlns: Strophe.NS.AUTH_DEVICES});\n        this.account && (old_token = this.account.get('old_device_token'));\n        let client_name = uuid();\n        if (xabber.settings.device_metadata === 'contacts'){\n            client_name = constants.CLIENT_NAME;\n        }\n        if (old_token && old_token.token && old_token.token_uid){\n            iq.c('device', { xmlns: Strophe.NS.AUTH_DEVICES, id: old_token.token_uid})\n                .c('client').t(client_name).up()\n                .c('secret').t(old_token.token).up();\n            if (xabber.settings.device_metadata === 'contacts'){\n                iq.c('info').t(`PC, ${utils.getOS()}, ${env.utils.getBrowser()}`);\n            }\n            this.account.save('old_device_token', null);\n        } else {\n            iq.c('device', { xmlns: Strophe.NS.AUTH_DEVICES})\n                .c('client').t(client_name).up();\n            if (xabber.settings.device_metadata === 'contacts'){\n                iq.c('info').t(`PC, ${utils.getOS()}, ${env.utils.getBrowser()}`);\n            }\n        }\n        let handler = function (stanza) {\n            let iqtype = stanza.getAttribute('type');\n            if (iqtype == 'result') {\n                if (callback) {\n                    callback(stanza);\n                }\n            } else if (iqtype == 'error') {\n                if (errback) {\n                    errback(stanza);\n                }\n            } else {\n                throw {\n                    name: \"StropheError\",\n                    message: \"Got bad IQ type of \" + iqtype\n                };\n            }\n        };\n\n        this._addSysHandler(handler.bind(this), Strophe.NS.AUTH_DEVICES, 'iq', 'result' , uniq_id);\n\n        this.send(iq.tree());\n    }\n});\n\n_.extend(Strophe.Websocket.prototype, {\n\n    _onIdle: function () {\n        var data = this._conn._data;\n        if (data.length > 0 && !this._conn.paused) {\n            for (var i = 0; i < data.length; i++) {\n                if (data[i] !== null) {\n                    var stanza, rawStanza;\n                    if (data[i] === \"restart\") {\n                        stanza = this._buildStream().tree();\n                    } else {\n                        stanza = data[i];\n                    }\n                    rawStanza = Strophe.serialize(stanza);\n                    this._conn.xmlOutput(stanza);\n                    this._conn.rawOutput(rawStanza);\n                    if (this.socket && this.socket.readyState === 1){\n                        this.socket.send(rawStanza);\n                    } else {\n                        console.log('data went to pending');\n                        console.log(this._conn._data.slice(i));\n                        this._conn.account._pending_stanzas.push(this._conn._data.slice(i))\n                        this._conn._data = [];\n                        return;\n                    }\n                }\n            }\n            this._conn._data = [];\n        }\n    },\n\n    _onOpen: function() {\n        Strophe.info(\"Websocket open\");\n        var start = this._buildStream();\n        this._conn.xmlOutput(start.tree());\n\n        var startString = Strophe.serialize(start);\n        this._conn.rawOutput(startString);\n        this.socket.send(startString);\n        this._conn.openCheckTimeout = setTimeout(() => { // check of that open was sent but was not received from server\n            if (this._conn.open_received) {\n                return;\n            } else {\n                console.log('disconnected on open not being received')\n                this._conn.disconnect();\n                return;\n            }\n        }, 5000)\n    },\n\n    _handleStreamStart: function(message) {\n        var error = false;\n\n        // Check for errors in the <open /> tag\n        var ns = message.getAttribute(\"xmlns\");\n        if (typeof ns !== \"string\") {\n            error = \"Missing xmlns in <open />\";\n        } else if (ns !== Strophe.NS.FRAMING) {\n            error = \"Wrong xmlns in <open />: \" + ns;\n        }\n\n        var ver = message.getAttribute(\"version\");\n        if (typeof ver !== \"string\") {\n            error = \"Missing version in <open />\";\n        } else if (ver !== \"1.0\") {\n            error = \"Wrong version in <open />: \" + ver;\n        }\n\n        if (error) {\n            this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, error);\n            this._conn._doDisconnect();\n            return false;\n        }\n        clearTimeout(this._conn.openCheckTimeout);\n        return true;\n    },\n});\n\nStrophe.xmlunescape = function (text) {\n    let reg_exp = {\n        '&amp;': '&',\n        '&lt;': '<',\n        '&gt;': '>',\n        '&quot;': '\"',\n        '&apos;': \"'\"\n    };\n    let escaper = function(match) {\n        return reg_exp[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    let source = '(?:' + _.keys(reg_exp).join('|') + ')',\n        testRegexp = RegExp(source),\n        replaceRegexp = RegExp(source, 'g');\n    text = text == null ? '' : '' + text;\n    return testRegexp.test(text) ? text.replace(replaceRegexp, escaper) : text;\n};\n\nStrophe.addNamespace('ATTENTION', 'urn:xmpp:attention:0');\nStrophe.addNamespace('CARBONS', 'urn:xmpp:carbons:2');\nStrophe.addNamespace('FORWARD', 'urn:xmpp:forward:0');\nStrophe.addNamespace('HASH', 'urn:xmpp:hashes:2');\nStrophe.addNamespace('HINTS', 'urn:xmpp:hints');\nStrophe.addNamespace('SCE', 'urn:xmpp:sce:1');\nStrophe.addNamespace('RECEIPTS', 'urn:xmpp:receipts');\nStrophe.addNamespace('JINGLE', 'urn:xmpp:jingle:1');\nStrophe.addNamespace('JINGLE_SECURITY_STUB', 'urn:xmpp:jingle:security:stub:0');\nStrophe.addNamespace('JINGLE_MSG', 'urn:xmpp:jingle-message:0');\nStrophe.addNamespace('JINGLE_RTP', 'urn:xmpp:jingle:apps:rtp:1');\nStrophe.addNamespace('JINGLE_TRANSPORTS_ICE', 'urn:xmpp:jingle:transports:ice-udp:1');\nStrophe.addNamespace('ADDRESS', 'http://jabber.org/protocol/address');\nStrophe.addNamespace('CHATSTATES', 'http://jabber.org/protocol/chatstates');\nStrophe.addNamespace('EXTENDED_CHATSTATES', 'https://xabber.com/protocol/extended-chatstates');\nStrophe.addNamespace('HTTP_AUTH', 'http://jabber.org/protocol/http-auth');\nStrophe.addNamespace('AUTH_TOKENS', 'https://xabber.com/protocol/auth-tokens');\nStrophe.addNamespace('AUTH_DEVICES', 'https://xabber.com/protocol/devices');\nStrophe.addNamespace('SYNCHRONIZATION', 'https://xabber.com/protocol/synchronization');\nStrophe.addNamespace('SYNCHRONIZATION_REGULAR_CHAT', 'urn:xabber:chat');\nStrophe.addNamespace('SYNCHRONIZATION_CHANNEL', 'https://xabber.com/protocol/channels');\nStrophe.addNamespace('SYNCHRONIZATION_OLD_OMEMO', 'urn:xmpp:omemo:1');\nStrophe.addNamespace('SYNCHRONIZATION_OMEMO', 'urn:xmpp:omemo:2');\nStrophe.addNamespace('XABBER_CHAT', 'urn:xabber:chat');\nStrophe.addNamespace('EXPLICIT_MESSAGE_ENCRYPTION', 'urn:xmpp:eme:0');\nStrophe.addNamespace('DELIVERY', 'https://xabber.com/protocol/delivery');\nStrophe.addNamespace('ARCHIVE', 'https://xabber.com/protocol/archive');\nStrophe.addNamespace('MAM', 'urn:xmpp:mam:2');\nStrophe.addNamespace('RSM', 'http://jabber.org/protocol/rsm');\nStrophe.addNamespace('DATAFORM', 'jabber:x:data');\nStrophe.addNamespace('CHAT_MARKERS', 'urn:xmpp:chat-markers:0');\nStrophe.addNamespace('VCARD_UPDATE', 'vcard-temp:x:update');\nStrophe.addNamespace('HTTP_UPLOAD', 'urn:xmpp:http:upload');\nStrophe.addNamespace('BLOCKING', 'urn:xmpp:blocking');\nStrophe.addNamespace('SEARCH', 'jabber:iq:search');\nStrophe.addNamespace('PRIVATE_STORAGE', 'jabber:iq:private');\nStrophe.addNamespace('MEDIA', 'urn:xmpp:media-element');\nStrophe.addNamespace('LAST', 'jabber:iq:last');\nStrophe.addNamespace('GROUP_CHAT', 'https://xabber.com/protocol/groups');\nStrophe.addNamespace('GROUP_CHAT_INVITE', 'https://xabber.com/protocol/groups#invite');\nStrophe.addNamespace('GROUP_CHAT_INVITE_HTTP', 'http://xabber.com/protocol/groups#invite');\nStrophe.addNamespace('WEBCHAT', 'https://xabber.com/protocol/webchat');\nStrophe.addNamespace('INDEX', 'https://xabber.com/protocol/index');\nStrophe.addNamespace('PUBSUB', 'http://jabber.org/protocol/pubsub');\nStrophe.addNamespace('PUBSUB_AVATAR_DATA', 'urn:xmpp:avatar:data');\nStrophe.addNamespace('PUBSUB_AVATAR_METADATA', 'urn:xmpp:avatar:metadata');\nStrophe.addNamespace('PUBSUB_AVATAR_METADATA_THUMBNAIL', 'urn:xmpp:thumbs:1');\nStrophe.addNamespace('REWRITE', 'https://xabber.com/protocol/rewrite');\nStrophe.addNamespace('REFERENCE', 'https://xabber.com/protocol/references');\nStrophe.addNamespace('GEOLOC', 'http://jabber.org/protocol/geoloc');\nStrophe.addNamespace('MARKUP', 'https://xabber.com/protocol/markup');\nStrophe.addNamespace('VOICE_MESSAGE', 'https://xabber.com/protocol/voice-messages');\nStrophe.addNamespace('FILES', 'https://xabber.com/protocol/files');\nStrophe.addNamespace('SUBSCRIPTION_PREAPPROVAL', 'urn:xmpp:features:pre-approval');\nStrophe.addNamespace('OGP', 'https://xabber.com/protocol/ogp');\nStrophe.addNamespace('URLDISCO', 'urn:xabber:http:url');\nStrophe.addNamespace('MEDIAGALLERY', 'urn:xabber:http:url:mediagallery');\nStrophe.addNamespace('EPHEMERAL', 'urn:xmpp:ephemeral:0');\nStrophe.addNamespace('XABBER_FAVORITES', 'urn:xabber:favorites');\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.vcard,\n    $ = env.$,\n    _ = env._,\n    moment = env.moment,\n    Strophe = env.Strophe,\n    $iq = env.$iq,\n    $build = env.$build,\n    utils = env.utils;\n\nlet xmlToObject = function ($vcard) {\n    let vcard = {\n        nickname: $vcard.find('NICKNAME').text().trim(),\n        fullname: $vcard.find('FN').text().trim(),\n        first_name: $vcard.find('N GIVEN').text().trim(),\n        middle_name: $vcard.find('N MIDDLE').text().trim(),\n        last_name: $vcard.find('N FAMILY').text().trim(),\n        birthday: $vcard.find('BDAY').text().trim(),\n        job_title: $vcard.find('TITLE').text().trim(),\n        role: $vcard.find('ROLE').text().trim(),\n        url: $vcard.find('URL').text().trim(),\n        description: $vcard.find('DESC').text().trim(),\n        jabber_id: $vcard.find('JABBERID').text().trim(),\n        org: {},\n        photo: {},\n        phone: {},\n        address: {},\n        email: {}\n    };\n\n    if ($vcard.find('X-PRIVACY').length || $vcard.find('X-MEMBERSHIP').length || $vcard.find('X-INDEX').length) {\n        vcard.group_info = {\n            jid: vcard.jabber_id,\n            description: vcard.description,\n            name: vcard.nickname,\n            anonymous: $vcard.find('X-PRIVACY').text().trim(),\n            searchable: $vcard.find('X-INDEX').text().trim(),\n            model: $vcard.find('X-MEMBERSHIP').text().trim(),\n            status_msg: $vcard.find('X-STATUS').text().trim(),\n            members_num: $vcard.find('X-MEMBERS').text().trim()\n        };\n    }\n\n    let $org = $vcard.find('ORG');\n    if ($org.length) {\n        vcard.org.name = $org.find('ORGNAME').text().trim();\n        vcard.org.unit = $org.find('ORGUNIT').text().trim();\n    }\n\n    let $photo = $vcard.find('PHOTO');\n    if ($photo.length) {\n        vcard.photo.image = $photo.find('BINVAL').text().trim();\n        vcard.photo.type = $photo.find('TYPE').text().trim();\n    }\n\n    $vcard.find('TEL').each(function () {\n        let $this = $(this),\n            number = $this.find('NUMBER').text().trim();\n        if (!number) {\n            return;\n        }\n        if ($this.find('WORK').length) {\n            vcard.phone.work = number;\n        } else if ($this.find('HOME').length) {\n            vcard.phone.home = number;\n        } else if ($this.find('MOBILE').length) {\n            vcard.phone.mobile = number;\n        } else {\n            vcard.phone.default = number;\n        }\n    });\n\n    $vcard.find('EMAIL').each(function () {\n        let $this = $(this);\n        let email = $this.find('USERID').text().trim();\n        if (!email) {\n            return;\n        }\n        if ($this.find('WORK').length) {\n            vcard.email.work = email;\n        } else if ($this.find('HOME').length) {\n            vcard.email.home = email;\n        } else {\n            vcard.email.default = email;\n        }\n    });\n\n    $vcard.find('ADR').each(function () {\n        let $this = $(this);\n        let address = {\n            pobox: $this.find('POBOX').text().trim(),\n            extadd: $this.find('EXTADR').text().trim(),\n            street: $this.find('STREET').text().trim(),\n            locality: $this.find('LOCALITY').text().trim(),\n            region: $this.find('REGION').text().trim(),\n            pcode: $this.find('PCODE').text().trim(),\n            country: $this.find('CTRY').text().trim()\n        };\n        if ($this.find('WORK').length) {\n            vcard.address.work = address;\n        } else if ($this.find('HOME').length) {\n            vcard.address.home = address;\n        } else {\n            vcard.address.default = address;\n        }\n    });\n\n    return vcard;\n};\n\nlet objectToXml = function (vcard) {\n    let $vcard = $build(\"vCard\", {xmlns: Strophe.NS.VCARD});\n    vcard.nickname && $vcard.c(\"NICKNAME\").t(vcard.nickname).up();\n    vcard.fullname && $vcard.c(\"FN\").t(vcard.fullname).up();\n    if (vcard.first_name || vcard.last_name || vcard.middle_name) {\n        $vcard.c(\"N\");\n        vcard.first_name && $vcard.c(\"GIVEN\").t(vcard.first_name).up();\n        vcard.last_name && $vcard.c(\"FAMILY\").t(vcard.last_name).up();\n        vcard.middle_name && $vcard.c(\"MIDDLE\").t(vcard.middle_name).up();\n        $vcard.up();\n    }\n    vcard.birthday && $vcard.c(\"BDAY\").t(vcard.birthday).up();\n    vcard.job_title && $vcard.c(\"TITLE\").t(vcard.job_title).up();\n    vcard.role && $vcard.c(\"ROLE\").t(vcard.role).up();\n    if (vcard.org.name || vcard.org.unit) {\n        $vcard.c(\"ORG\");\n        vcard.org.name && $vcard.c(\"ORGNAME\").t(vcard.org.name).up();\n        vcard.org.unit && $vcard.c(\"ORGUNIT\").t(vcard.org.unit).up();\n        $vcard.up();\n    }\n    vcard.url && $vcard.c(\"URL\").t(vcard.url).up();\n    if (vcard.photo.image) {\n        $vcard.c(\"PHOTO\").c(\"BINVAL\").t(vcard.photo.image).up();\n        $vcard.c(\"TYPE\").t(vcard.photo.type || 'image/jpeg').up();\n        $vcard.up();\n    }\n    vcard.description && $vcard.c(\"DESC\").t(vcard.description).up();\n    vcard.jabber_id && $vcard.c(\"JABBERID\").t(vcard.jabber_id).up();\n\n    _.each(vcard.phone, function (phone, type) {\n        $vcard.c(\"TEL\").c(\"NUMBER\").t(phone).up();\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        $vcard.up();\n    });\n\n    _.each(vcard.email, function (email, type) {\n        $vcard.c(\"EMAIL\").c(\"USERID\").t(email).up();\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        $vcard.up();\n    });\n\n    _.each(vcard.address, function (address, type) {\n        $vcard.c(\"ADR\");\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        address.pobox && $vcard.c(\"POBOX\").t(address.pobox).up();\n        address.extadd && $vcard.c(\"EXTADR\").t(address.extadd).up();\n        address.street && $vcard.c(\"STREET\").t(address.street).up();\n        address.locality && $vcard.c(\"LOCALITY\").t(address.locality).up();\n        address.region && $vcard.c(\"REGION\").t(address.region).up();\n        address.pcode && $vcard.c(\"PCODE\").t(address.pcode).up();\n        address.country && $vcard.c(\"CTRY\").t(address.country).up();\n        $vcard.up();\n    });\n\n    return $vcard.tree();\n};\n\nStrophe.addConnectionPlugin('vcard', {\n    _connection: null,\n\n    init: function(conn) {\n        this._connection = conn;\n        return Strophe.addNamespace('VCARD', 'vcard-temp');\n    },\n\n    get: function(jid, callback, errback) {\n        let iq = $iq({type: 'get', to: jid}).c('vCard', {xmlns: Strophe.NS.VCARD});\n        this._connection.sendIQ(iq, function (res) {\n            if (!callback) { return; }\n            let vcard = xmlToObject($(res).find('vCard[xmlns='+Strophe.NS.VCARD+']'));\n            vcard.jabber_id || (vcard.jabber_id = jid);\n            return callback(vcard);\n        }, errback);\n    },\n\n    set: function(jid, vcard, callback, errback) {\n        vcard.jabber_id || (vcard.jabber_id = jid);\n        let iq = $iq({type: 'set', to: jid}).cnode(objectToXml(vcard));\n        this._connection.sendIQ(iq, callback, errback);\n    }\n});\n\nutils.vcard = {\n    getBlank: function (jid) {\n        let vcard = xmlToObject($('<div/>'));\n        vcard.jabber_id = jid;\n        return vcard;\n    }\n};\n\nxabber.VCardView = xabber.BasicView.extend({\n    template: templates.vcard,\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.model.on(\"change:vcard_updated\", this.update, this);\n        this.data.on(\"change:refresh\", this.updateRefreshButton, this);\n    },\n\n    render: function () {\n        this.$('.block-header .block-name').text(this.model.get('group_chat') ? 'Group chat details' : xabber.getString(\"vcard_screen__header\"));\n        this.data.set('refresh', false);\n        this.model.getVCard(() => {\n            this.update();\n        });\n    },\n\n    update: function () {\n        let $info, vcard = this.model.get('vcard');\n\n        $info = this.$('.jid-info-wrap');\n        $info.find('.jabber-id').showIf(vcard.jabber_id).find('.value').text(vcard.jabber_id);\n        $info.showIf(vcard.jabber_id);\n\n        $info = this.$('.personal-info-wrap');\n        $info.find('.fullname').showIf(vcard.fullname).find('.value').text(vcard.fullname);\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.middle-name').showIf(vcard.middle_name).find('.value').text(vcard.middle_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.fullname || vcard.first_name || vcard.middle_name || vcard.last_name);\n\n        $info = this.$('.nickname-info-wrap');\n        $info.find('.nickname').showIf(vcard.nickname).find('.value').text(vcard.nickname);\n        $info.showIf(vcard.nickname);\n\n        $info = this.$('.birthday-info-wrap');\n        $info.find('.birthday').showIf(vcard.birthday).find('.value').text(vcard.birthday);\n        $info.showIf(vcard.birthday);\n\n        $info = this.$('.job-info-wrap');\n        $info.find('.role').showIf(vcard.role).find('.value').text(vcard.role);\n        $info.find('.job-title').showIf(vcard.job_title).find('.value').text(vcard.job_title);\n        $info.find('.org-name').showIf(vcard.org.name).find('.value').text(vcard.org.name);\n        $info.find('.org-unit').showIf(vcard.org.unit).find('.value').text(vcard.org.unit);\n        $info.showIf(vcard.role || vcard.job_title || vcard.org.name || vcard.org.unit);\n\n        $info = this.$('.site-info-wrap');\n        $info.find('.url').showIf(vcard.url).find('.value').text(vcard.url).hyperlinkify();\n        $info.showIf(vcard.url);\n\n        $info = this.$('.description-info-wrap');\n        $info.find('.description').showIf(vcard.description).find('.value').text(vcard.description);\n        $info.showIf(vcard.description);\n\n        let $addr_info = this.$('.address-info-wrap'),\n            address = _.clone(vcard.address),\n            show_addr_block = false;\n        $addr_info.find('.info').addClass('hidden');\n        _.each(address, function (addr, type) {\n            $info = $addr_info.find('.address-'+type);\n            $info.find('.pobox').showIf(addr.pobox).text(addr.pobox);\n            $info.find('.extadd').showIf(addr.extadd).text(addr.extadd);\n            $info.find('.street').showIf(addr.street).text(addr.street);\n            $info.find('.locality').showIf(addr.locality).text(addr.locality);\n            $info.find('.region').showIf(addr.region).text(addr.region);\n            $info.find('.pcode').showIf(addr.pcode).text(addr.pcode);\n            $info.find('.country').showIf(addr.country).text(addr.country);\n            let show = (addr.pobox || addr.extadd || addr.street || addr.locality ||\n                         addr.region || addr.pcode || addr.country);\n            show && (show_addr_block = true);\n            $info.showIf(show);\n        });\n        $addr_info.showIf(show_addr_block);\n\n        $info = this.$('.phone-info-wrap');\n        let phone = vcard.phone;\n        if (phone) {\n            $info.find('.phone-work').showIf(phone.work).find('.value').text(phone.work);\n            $info.find('.phone-home').showIf(phone.home).find('.value').text(phone.home);\n            $info.find('.phone-mobile').showIf(phone.mobile).find('.value').text(phone.mobile);\n            $info.find('.phone-default').showIf(phone.default).find('.value').text(phone.default);\n        }\n        $info.showIf(phone && (phone.work || phone.home || phone.mobile || phone.default));\n\n        $info = this.$('.email-info-wrap');\n        let email = vcard.email;\n        if (email) {\n            $info.find('.email-work').showIf(email.work).find('.value').text(email.work);\n            $info.find('.email-home').showIf(email.home).find('.value').text(email.home);\n            $info.find('.email-default').showIf(email.default).find('.value').text(email.default);\n        }\n        $info.showIf(email && (email.work || email.home || email.default));\n\n        this.parent.updateScrollBar();\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target).closest('.info-wrap'),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n    updateRefreshButton: function () {\n        this.$('.btn-vcard-refresh .button').hideIf(this.data.get('refresh'));\n        this.$('.btn-vcard-refresh .preloader-wrapper').showIf(this.data.get('refresh'));\n    },\n\n    refresh: function () {\n        if (!this.data.get('refresh')) {\n            this.data.set('refresh', true);\n            this.model.getVCard(() => {\n                this.data.set('refresh', false);\n            });\n        }\n    }\n});\n\nxabber.VCardRightView = xabber.VCardView.extend({\n    template: templates.vcard_right,\n\n    __initialize: function (ev) {\n        this.ps_container = this.$('.full-vcard-content');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.set('vcard_hidden', true)\n    },\n\n    render: function () {\n        this.data.set('refresh', false);\n        this.update();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        if (this.parent.ps_container.length) {\n            if(!this.model.get('vcard_hidden'))\n                this.parent.ps_container.perfectScrollbar('destroy')\n            else\n                this.parent.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n        }\n        this.model.updateName();\n        this.model.updateAvatar();\n        this.model.getVCard(() => {\n            this.update();\n        });\n    },\n\n    update: function () {\n        let $info, vcard = this.model.get('vcard');\n\n        $info = this.$('.jid-info-wrap');\n        $info.find('.jabber-id').showIf(vcard.jabber_id).find('.value').text(vcard.jabber_id);\n        $info.showIf(vcard.jabber_id);\n\n        $info = this.$('.vcard-wrap .personal-info-wrap');\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.first_name || vcard.last_name);\n\n        $info = this.$('.full-vcard-wrap .personal-info-wrap');\n        $info.find('.fullname').showIf(vcard.fullname).find('.value').text(vcard.fullname);\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.middle-name').showIf(vcard.middle_name).find('.value').text(vcard.middle_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.fullname || vcard.first_name || vcard.middle_name || vcard.last_name);\n\n        $info = this.$('.nickname-info-wrap');\n        $info.find('.nickname').showIf(vcard.nickname).find('.value').text(vcard.nickname);\n        $info.showIf(vcard.nickname);\n\n        $info = this.$('.birthday-info-wrap');\n        $info.find('.birthday').showIf(vcard.birthday).find('.value').text(vcard.birthday);\n        $info.showIf(vcard.birthday);\n\n        $info = this.$('.job-info-wrap');\n        $info.find('.role').showIf(vcard.role).find('.value').text(vcard.role);\n        $info.find('.job-title').showIf(vcard.job_title).find('.value').text(vcard.job_title);\n        $info.find('.org-name').showIf(vcard.org.name).find('.value').text(vcard.org.name);\n        $info.find('.org-unit').showIf(vcard.org.unit).find('.value').text(vcard.org.unit);\n        $info.showIf(vcard.role || vcard.job_title || vcard.org.name || vcard.org.unit);\n\n        $info = this.$('.site-info-wrap');\n        $info.find('.url').showIf(vcard.url).find('.value').text(vcard.url).hyperlinkify();\n        $info.showIf(vcard.url);\n\n        $info = this.$('.description-info-wrap');\n        $info.find('.description').showIf(vcard.description).find('.value').text(vcard.description);\n        $info.showIf(vcard.description);\n\n        let $addr_info = this.$('.address-info-wrap'),\n            address = _.clone(vcard.address),\n            show_addr_block = false;\n        $addr_info.find('.info').addClass('hidden');\n        _.each(address, function (addr, type) {\n            $info = $addr_info.find('.address-'+type);\n            $info.find('.pobox').showIf(addr.pobox).text(addr.pobox);\n            $info.find('.extadd').showIf(addr.extadd).text(addr.extadd);\n            $info.find('.street').showIf(addr.street).text(addr.street);\n            $info.find('.locality').showIf(addr.locality).text(addr.locality);\n            $info.find('.region').showIf(addr.region).text(addr.region);\n            $info.find('.pcode').showIf(addr.pcode).text(addr.pcode);\n            $info.find('.country').showIf(addr.country).text(addr.country);\n            let show = (addr.pobox || addr.extadd || addr.street || addr.locality ||\n                addr.region || addr.pcode || addr.country);\n            show && (show_addr_block = true);\n            $info.showIf(show);\n        });\n        $addr_info.showIf(show_addr_block);\n\n        $info = this.$('.phone-info-wrap');\n        let phone = vcard.phone;\n        if (phone) {\n            $info.find('.phone-work').showIf(phone.work).find('.value').text(phone.work);\n            $info.find('.phone-home').showIf(phone.home).find('.value').text(phone.home);\n            $info.find('.phone-mobile').showIf(phone.mobile).find('.value').text(phone.mobile);\n            $info.find('.phone-default').showIf(phone.default).find('.value').text(phone.default);\n        }\n        $info.showIf(phone && (phone.work || phone.home || phone.mobile || phone.default));\n\n        $info = this.$('.email-info-wrap');\n        let email = vcard.email;\n        if (email) {\n            $info.find('.email-work').showIf(email.work).find('.value').text(email.work);\n            $info.find('.email-home').showIf(email.home).find('.value').text(email.home);\n            $info.find('.email-default').showIf(email.default).find('.value').text(email.default);\n        }\n        $info.showIf(email && (email.work || email.home || email.default));\n\n        this.parent.updateScrollBar();\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.vcard-header-title').addClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n        }\n        else {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        }\n\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n});\n\nxabber.VCardEditModalView = xabber.BasicView.extend({\n    className: 'account-vcard-edit-modal-wrap account-vcard-edit-wrap',\n    template: templates.vcard_edit_modal,\n    ps_selector: '.panel-content',\n\n    events: {\n        \"keyup input\": \"keyUp\",\n        \"keyup textarea\": \"keyUp\",\n        \"input .first-name input\": \"changePlaceholder\",\n        \"input .middle-name input\": \"changePlaceholder\",\n        \"input .last-name input\": \"changePlaceholder\",\n        \"click .btn-vcard-save\": \"save\",\n    },\n\n    _initialize: function () {\n        let self = this,\n            $input = this.$('.datepicker').pickadate({\n            selectMonths: true,\n            selectYears: 100,\n            autoOk: false,\n            // min = 100 years ago\n            min: new Date(moment.now() - 3153600000000),\n            max: new Date(moment.now() - 86400000),\n            format: 'dd.mm.yyyy',\n            allowKeyboardControl: false,\n            today: '',\n            onClose: function(){\n                $(document.activeElement).blur();\n                self.$('.btn-vcard-back').removeClass('hidden');\n                self.$('.btn-vcard-save').removeClass('hidden');\n            },\n            klass: {\n                weekday_display: 'picker__weekday-display ground-color-700',\n                date_display: 'picker__date-display ground-color-500',\n                navPrev: 'picker__nav--prev hover-ground-color-100',\n                navNext: 'picker__nav--next hover-ground-color-100',\n                selected: 'picker__day--selected ground-color-500',\n                now: 'picker__day--today text-color-700',\n                buttonClear: 'btn-flat btn-main btn-dark',\n                buttonClose: 'btn-flat btn-main text-color-700'\n            }\n        });\n        $input.on('mousedown', function cancelEvent(evt) {\n            evt.preventDefault();\n        });\n        this.data.on(\"change:saving\", this.updateSaveButton, this);\n    },\n\n    render: function (options) {\n        options.$el.html('');\n        options.$el.append(this.$el);\n        this.data.set('saving', false);\n        this.setData();\n        Materialize.updateTextFields();\n        this.changePlaceholder();\n        this.updateScrollBar();\n        this.$('.btn-vcard-save').addClass('hidden');\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    changePlaceholder: function () {\n        let nickname_placeholder = ((this.$('.first-name input').val() + \" \" + this.$('.middle-name input').val()).trim() + \" \" + this.$('.last-name input').val()).trim() || this.model.get('jid');\n        this.$('.nickname input').attr('placeholder', nickname_placeholder);\n    },\n\n    setData: function () {\n        let vcard = this.model.get('vcard');\n\n        this.$('.nickname input').val(vcard.nickname);\n        this.$('.fullname input').val(vcard.fullname);\n        this.$('.first-name input').val(vcard.first_name);\n        this.$('.last-name input').val(vcard.last_name);\n        this.$('.middle-name input').val(vcard.middle_name);\n\n        this.$('.birthday input').val(vcard.birthday);\n\n        this.$('.role input').val(vcard.role);\n        this.$('.job-title input').val(vcard.job_title);\n        this.$('.org-name input').val(vcard.org.name);\n        this.$('.org-unit input').val(vcard.org.unit);\n\n        this.$('.url input').val(vcard.url);\n\n        this.$('.description textarea').val(vcard.description);\n\n        this.$('.phone-work input').val(vcard.phone.work);\n        this.$('.phone-home input').val(vcard.phone.home);\n        this.$('.phone-mobile input').val(vcard.phone.mobile);\n\n        this.$('.email-work input').val(vcard.email.work);\n        this.$('.email-home input').val(vcard.email.home);\n\n        let addr = vcard.address.work || {},\n            $info = this.$('.address-work-wrap');\n        $info.find('.pobox input').val(addr.pobox);\n        $info.find('.extadd input').val(addr.extadd);\n        $info.find('.street input').val(addr.street);\n        $info.find('.locality input').val(addr.locality);\n        $info.find('.region input').val(addr.region);\n        $info.find('.pcode input').val(addr.pcode);\n        $info.find('.country input').val(addr.country);\n\n        addr = vcard.address.home || {};\n        $info = this.$('.address-home-wrap');\n        $info.find('.pobox input').val(addr.pobox);\n        $info.find('.extadd input').val(addr.extadd);\n        $info.find('.street input').val(addr.street);\n        $info.find('.locality input').val(addr.locality);\n        $info.find('.region input').val(addr.region);\n        $info.find('.pcode input').val(addr.pcode);\n        $info.find('.country input').val(addr.country);\n    },\n\n    getData: function () {\n        let vcard = utils.vcard.getBlank(this.model.get('jid'));\n\n        vcard.nickname = this.$('.nickname input').val();\n        vcard.fullname = this.$('.fullname input').val();\n        vcard.first_name = this.$('.first-name input').val();\n        vcard.last_name = this.$('.last-name input').val();\n        vcard.middle_name = this.$('.middle-name input').val();\n\n        vcard.birthday = this.$('.birthday input').val();\n\n        vcard.role = this.$('.role input').val();\n        vcard.job_title = this.$('.job-title input').val();\n        vcard.org.name = this.$('.org-name input').val();\n        vcard.org.unit = this.$('.org-unit input').val();\n\n        vcard.url = this.$('.url input').val();\n\n        vcard.description = this.$('.description textarea').val();\n\n        vcard.phone.work = this.$('.phone-work input').val();\n        vcard.phone.home = this.$('.phone-home input').val();\n        vcard.phone.mobile = this.$('.phone-mobile input').val();\n\n        vcard.email.work = this.$('.email-work input').val();\n        vcard.email.home = this.$('.email-home input').val();\n\n        vcard.address.work = {};\n        let addr = vcard.address.work,\n            $info = this.$('.address-work-wrap');\n        addr.pobox = $info.find('.pobox input').val();\n        addr.extadd = $info.find('.extadd input').val();\n        addr.street = $info.find('.street input').val();\n        addr.locality = $info.find('.locality input').val();\n        addr.region = $info.find('.region input').val();\n        addr.pcode = $info.find('.pcode input').val();\n        addr.country = $info.find('.country input').val();\n\n        vcard.address.home = {};\n        addr = vcard.address.home;\n        $info = this.$('.address-home-wrap');\n        addr.pobox = $info.find('.pobox input').val();\n        addr.extadd = $info.find('.extadd input').val();\n        addr.street = $info.find('.street input').val();\n        addr.locality = $info.find('.locality input').val();\n        addr.region = $info.find('.region input').val();\n        addr.pcode = $info.find('.pcode input').val();\n        addr.country = $info.find('.country input').val();\n        return vcard;\n    },\n\n    updateSaveButton: function () {\n        this.$('.btn-vcard-save').text(this.data.get('saving') ? xabber.getString(\"saving\") : xabber.getString(\"vcard_edit__button_save\"));\n    },\n\n    save: function () {\n        if (this.data.get('saving')) {\n            return;\n        }\n        this.data.set('saving', true);\n        this.model.setVCard(this.getData(),\n            () => {\n                this.model.getVCard();\n                this.data.set('saving', false);\n                this.$('.btn-vcard-back').addClass('hidden');\n                this.$('.btn-vcard-save').addClass('hidden');\n            },\n            function () {\n                utils.dialogs.error(xabber.getString(\"account_user_info_save_fail\"));\n                this.data.set('saving', false);\n            }\n        );\n    },\n\n    keyUp: function () {\n        this.$('.btn-vcard-back').removeClass('hidden');\n        this.$('.btn-vcard-save').removeClass('hidden');\n    },\n});\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.accounts,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $pres = env.$pres,\n    uuid = env.uuid,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    Images = utils.images,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')},\n    pretty_datetime_date = (timestamp) => { return utils.pretty_datetime(timestamp, 'MMM DD, YYYY')};\n\n\nxabber.Account = Backbone.Model.extend({\n        idAttribute: 'jid',\n\n        defaults: () => {\n            return {\n                enabled: true,\n                auth_type: \"password\",\n                status: \"online\",\n                status_message: \"\",\n                priority: 67,\n                auto_login_xa: false,\n                account_unique_id: uuid().substring(0, 8),\n                groupchat_servers_list: []\n            }\n        },\n\n        initialize: function (_attrs, options) {\n            this.retraction_version = null;\n            options || (options = {});\n            if (_attrs.is_new && !options.auth_view) {\n                this.is_invalid = true;\n                this.on(\"destroy\", this.onDestroy, this);\n                return;\n            }\n            this.last_msg_timestamp = 0;\n            this.settings = xabber.account_settings_list.get(_attrs.jid);\n            if (!this.settings) {\n                this.settings = xabber.account_settings_list.create({\n                    jid: _attrs.jid,\n                    timestamp: utils.now(),\n                });\n            }\n            let settings = _.clone(this.settings.attributes);\n            settings.color || (settings.color = this.collection.getDefaultColor());\n            settings.order || (settings.order = this.collection.getLastOrder() + 1);\n            this.settings.save(settings);\n            this.settings.on(\"delete_account\", this.deleteAccount, this);\n            let attrs = _.clone(_attrs);\n            attrs.name || (attrs.name = attrs.jid);\n            attrs.image || (attrs.image = Images.getDefaultAvatar(attrs.name));\n            this.cached_image = Images.getCachedImage(attrs.image);\n            attrs.vcard = utils.vcard.getBlank(attrs.jid);\n            attrs.photo_hash = '';\n            this.save(attrs);\n            this.auth_view = options.auth_view || null;\n            this.session = new Backbone.Model({\n                connected: false,\n                reconnected: false,\n                ready_to_send: false,\n                conn_retries: 0,\n                conn_feedback: xabber.getString(\"connection__error__text_disconnected\")\n            });\n            this._waiting_code = false;\n            this.code_requests = [];\n            this.gallery_code_requests = [];\n            this.xabber_auth = {};\n            this.session.on(\"change:connected\", this.onChangedConnected, this);\n            this.CONNECTION_URL = _attrs.websocket_connection_url || constants.CONNECTION_URL;\n            this.conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL, {'x-token': true});\n            this.connection = this.conn_manager.connection;\n            this.get('x_token') && (this.connection.x_token = this.get('x_token'));\n            if (this.connection.x_token && this.connection.x_token.counter && !this.get('hotp_counter'))\n                this.save({\n                    hotp_counter: this.connection.x_token.counter,\n                });\n            this.get('hotp_counter') && (this.connection.counter = this.get('hotp_counter'));\n            this.on(\"destroy\", this.onDestroy, this);\n            this._added_pres_handlers = [];\n            this._pending_stanzas = [];\n            this._pending_messages = [];\n            this.dfd_presence = new $.Deferred();\n            this.resources = new xabber.AccountResources(null, {account: this});\n            this.password_view = new xabber.ChangePasswordView({model: this});\n            this.updateColorScheme();\n            this.settings.on(\"change:color\", this.updateColorScheme, this);\n            this.on(\"change:photo_hash\", this.getVCard, this);\n            _.each(this._init_plugins, (plugin) => {\n                plugin.call(this);\n            });\n            this.connection.xmlInput = function (xml) {\n                xabber.info('input main connection');\n                xabber.info(xml);\n            };\n            this.connection.xmlOutput = function (xml) {\n                xabber.info('output main connection');\n                xabber.info(xml);\n            };\n            this.once(\"start\", this.start, this);\n            xabber.on(\"start_accounts\", () => {\n                this.trigger('start');\n            }, this);\n        },\n\n        start: function () {\n            this.get('enabled') && this.isOnline() && this.connect();\n        },\n\n        _init_plugins: [],\n\n        getPassword: function () {\n            try {\n                return utils.atou(this.get('password'));\n            } catch (e) {\n                return '';\n            }\n        },\n\n        isConnected: function () {\n            return this.session && this.session.get('connected');\n        },\n\n        isReconnecting: function () {\n            return this.session && this.session.get('reconnecting');\n        },\n\n        isOnline: function () {\n            return this.get('status') !== 'offline';\n        },\n\n        sendMsg: function (stanza, callback) {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.session.get('ready_to_send') && this.get('status') !== 'offline';\n            if (res) {\n                this.connection.send(stanza);\n            }\n            callback && callback();\n            return res;\n        },\n\n        sendMsgPending: function (stanza) {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline';\n            if (res) {\n                this.connection.send(stanza);\n            }\n            return res;\n        },\n\n        sendMsgFast: function (stanza, callback) {\n            return this.sendMsg(stanza, callback);\n        },\n\n        getConnectionForIQ: function () {\n            let res = this.fast_connection && !this.fast_connection.disconnecting && this.fast_connection.authenticated && this.fast_connection.connected && this.get('status') !== 'offline';\n            if (res) {\n                return this.fast_connection;\n            } else\n                return this.connection;\n        },\n\n        sendIQFast: function () {\n            let res = this.fast_connection && !this.fast_connection.disconnecting && this.fast_connection.authenticated && this.fast_connection.connected && this.get('status') !== 'offline';\n            if (res) {\n                this.fast_connection.sendIQ.apply(this.fast_connection, arguments);\n                return res;\n            } else\n                return this.sendIQ.apply(this, arguments);\n        },\n\n        sendFast: function (stanza, callback, errback) {\n            if ($(stanza.nodeTree).first().is('message')) {\n                this.sendMsgFast(stanza, callback);\n            } else {\n                this.sendIQFast(stanza, callback, errback);\n            }\n        },\n\n        pubAvatar: function (image, callback, errback) {\n            if (!image) {\n                this.removeAvatar(callback, errback);\n                return;\n            }\n            let dfd = new $.Deferred();\n\n            dfd.done((data, http_avatar) => {\n                if (http_avatar) {\n                    let avatar_hash = data.hash || image.hash || sha1(image.base64),\n                        iq_pub_metadata = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('item', {id: avatar_hash})\n                            .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('info', {bytes: data.size, id: avatar_hash, type: data.type, url: data.file});\n                    data.thumbnails && data.thumbnails.forEach((thumbnail) => {\n                        iq_pub_metadata.c('thumbnail', {\n                            xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA_THUMBNAIL,\n                            url: thumbnail.url,\n                            width: thumbnail.width,\n                            height: thumbnail.height,\n                        }).up()\n                    })\n                    this.sendIQFast(iq_pub_metadata, () => {\n                            callback && callback(avatar_hash);\n                        },\n                        function (data_error) {\n                            errback && errback(data_error);\n                        });\n                }\n                else {\n                    let avatar_hash = image.hash || sha1(image.base64),\n                        iq_pub_data = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_DATA})\n                            .c('item', {id: avatar_hash})\n                            .c('data', {xmlns: Strophe.NS.PUBSUB_AVATAR_DATA}).t(data),\n                        iq_pub_metadata = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('item', {id: avatar_hash})\n                            .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('info', {bytes: image.size, id: avatar_hash, type: image.type});\n                    this.sendIQFast(iq_pub_data, () => {\n                            this.sendIQFast(iq_pub_metadata, () => {\n                                    callback && callback(avatar_hash);\n                                },\n                                function (data_error) {\n                                    errback && errback(data_error);\n                                });\n                        },\n                        (data_error) => {\n                            errback && errback(data_error);\n                        });\n                }\n            });\n            if (image.uploaded){\n                dfd.resolve(image, true)\n            }\n            else if (this.get('gallery_token') && this.get('gallery_url') && !image.generated && !image.uploaded){\n                let file = image.name ? image : image.file;\n                this.uploadAvatar(file, (res) => {\n                    if (res.thumbnails && res.thumbnails.length || res.file){\n                        res.type = file.type;\n                        dfd.resolve(res, true)\n                    } else\n                        dfd.resolve(image.base64)\n                }, (res) => {\n                    dfd.resolve(image.base64)\n                });\n            } else\n                dfd.resolve(image.base64)\n        },\n\n        removeAvatar: function (callback, errback) {\n            let iq_pub_metadata = $iq({type: 'set'})\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                .c('item')\n                .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA});\n            this.sendIQFast(iq_pub_metadata, () => {\n                    callback && callback();\n                },\n                function () {\n                    errback && errback();\n                });\n        },\n\n        getAvatar: function (avatar, callback, errback) {\n            let iq_request_avatar = $iq({type: 'get', to: this.get('jid')})\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('items', {node: Strophe.NS.PUBSUB_AVATAR_DATA})\n                .c('item', {id: avatar});\n            this.sendIQFast(iq_request_avatar, (iq) => {\n                let pubsub_avatar = $(iq).find('data').text();\n                if (pubsub_avatar == \"\")\n                    errback && errback(xabber.getString(\"pubsub__error__text_empty_node\"));\n                else\n                    callback && callback(pubsub_avatar);\n            });\n        },\n\n        sendIQ: function () {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline';\n            if (res) {\n                let elem = arguments[0];\n                if (typeof(elem.tree) === \"function\" && elem.tree().getAttribute('type') == 'get') {\n                    let lang = xabber.settings.language;\n                    (lang == 'default') && (lang = xabber.get('default_language'));\n                    elem.tree().setAttribute('xml:lang', lang);\n                }\n                this.connection.sendIQ.apply(this.connection, arguments);\n            } else {\n                if (!(arguments[0] && $(arguments[0].nodeTree).find('query[xmlns=\"' + Strophe.NS.MAM + '\"]').length)) {\n                    this._pending_stanzas.push({stanza: arguments, is_iq: true});\n                }\n            }\n            return res;\n        },\n\n        parseDataForm: function ($dataform, options) {\n            options = options || {};\n            let type = $dataform.attr('type'),\n                title = $dataform.children('title').text(),\n                instructions = $dataform.children('instructions').text(),\n                fields = [],\n                data_form = {};\n            $dataform.children('field').each((idx, field) => {\n                let $field = $(field),\n                    attrs = {},\n                    field_var = $field.attr('var'),\n                    field_type = $field.attr('type'),\n                    field_label = $field.attr('label'),\n                    field_value = [], field_options = [];\n                $field.children('value').each((i, value) => {\n                    field_value.push($(value).text());\n                });\n                $field.children('option').each((i, option) => {\n                    let $option = $(option),\n                        val = $option.children('value').text(),\n                        lbl = $option.attr('label');\n                    field_options.push({value: val, label: lbl});\n                });\n                field_var && (attrs.var = field_var);\n                field_type && (attrs.type = field_type);\n                field_label && (attrs.label = field_label);\n                field_value.length && (attrs.values = field_value);\n                field_options.length && (attrs.options = field_options);\n                fields.push(attrs);\n            });\n            type && (data_form.type = type);\n            title && (data_form.title = title);\n            instructions && (data_form.instructions = instructions);\n            fields.length && (data_form.fields = fields);\n            return data_form;\n        },\n\n        addDataFormToStanza: function ($stanza, data_form) {\n            $stanza.c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'});\n            data_form.title && $stanza.c('title').t(data_form.title).up();\n            data_form.instructions && $stanza.c('instructions').t(data_form.instructions).up();\n            data_form.fields.forEach((field) => {\n                let field_attrs = _.clone(field);\n                delete field_attrs.values;\n                delete field_attrs.options;\n                $stanza.c('field', field_attrs);\n                field.values && field.values.forEach((value) => {\n                    $stanza.c('value').t(value).up();\n                });\n                $stanza.up();\n            });\n            return $stanza;\n        },\n\n        sendPres: function (stanza) {\n            if (this.connection.authenticated && this.session.get('connected')) {\n                this.connection.send(stanza);\n            } else {\n                this._pending_stanzas.push({stanza: stanza});\n            }\n            return this.connection.authenticated;\n        },\n\n        createFastConnection: function () {\n            let jid = this.get('jid'),\n                auth_type = this.conn_manager.auth_type,\n                password;\n            if (auth_type === 'token') {\n                password = this.settings.get('token');\n            } else if (auth_type === 'x-token') {\n                if (this.get('x_token') && (Number(this.get('x_token').expire)*1000 > moment.now() || !this.get('x_token').expire))\n                    password = this.get('x_token').token;\n                else\n                    password = undefined;\n            } else {\n                password = this.getPassword();\n            }\n            if (!password) {\n                let attrs = {login: true};\n                options.token_invalidated && (attrs.token_invalidated = true);\n                this.password_view.show(attrs);\n                return;\n            }\n            if (!this.fast_conn_manager) {\n                this.fast_conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL);\n                this.fast_connection = this.fast_conn_manager.connection;\n                this.fast_connection.account = this;\n                this.fast_connection.xmlInput = function (xml) {\n                    xabber.info('input fast connection');\n                    xabber.info(xml);\n                };\n                this.fast_connection.xmlOutput = function (xml) {\n                    xabber.info('output fast connection');\n                    xabber.info(xml);\n                };\n            } else{\n                this.fast_connection.disconnect();\n                return this.createFastConnection();\n            }\n            if (auth_type === 'x-token' && this.fast_connection) {\n                this.fast_connection.x_token = this.get('x_token');\n                this.fast_connection.counter = this.get('hotp_counter');\n                this.fast_connection.x_token_auth = true;\n            }\n            this.fast_conn_manager.connect(auth_type, jid, password, this.onFastConnected.bind(this));\n        },\n\n        connect: function (options) {\n            options = options || {};\n            let jid = this.get('jid'),\n                auth_type = this.get('auth_type'),\n                password;\n            if (xabber.settings.device_metadata === 'contacts'){\n                jid += '/' + constants.CLIENT_RESOURCE + '-' + xabber.get('client_id');\n            }\n            this.connection.x_token = this.get('x_token');\n            this.connection.counter = this.get('hotp_counter');\n            this.connection.account = this;\n            if (this.connection.x_token && !this.connection.counter)\n                this.connection.counter = 0;\n            if (auth_type === 'token') {\n                password = this.settings.get('token');\n            } else if (auth_type === 'x-token') {\n                if (this.get('x_token') && (Number(this.get('x_token').expire)*1000 > moment.now() || !this.get('x_token').expire))\n                    password = this.get('x_token').token;\n                else\n                    password = undefined;\n            } else {\n                password = this.getPassword();\n            }\n            if (!password) {\n                let attrs = {login: true};\n                options.token_invalidated && (attrs.token_invalidated = true);\n                this.password_view.show(attrs);\n                return;\n            }\n            this.session.set({\n                connected: false,\n                reconnected: false,\n                reconnecting: false,\n                ready_to_send: false,\n                conn_retries: 0,\n                conn_feedback: xabber.getString(\"application_state_connecting\"),\n                auth_failed: false\n            });\n            this.restoreStatus();\n            this.conn_manager.connect(auth_type, jid, password, this.connectionCallback.bind(this));\n        },\n\n        reconnect: function (is_fast) {\n            let conn_retries = this.session.get('conn_retries'),\n                timeout = conn_retries < 3 ? constants.RECONNECTION_TIMEOUTS[conn_retries] : 20000;\n            is_fast && (timeout = 1500);\n            this.session.set({\n                connected: false,\n                reconnected: false,\n                ready_to_send: false,\n                reconnecting: true,\n                conn_retries: ++conn_retries,\n                conn_feedback:  xabber.getString(\"application_state_reconnect_after_some_seconds\", [timeout/1000]),\n                auth_failed: false\n            });\n            if (this.get('x_token'))\n                this.connection.x_token = this.get('x_token');\n            this.connection.account = this;\n            setTimeout(() => {\n                this.connFeedback(xabber.getString(\"application_state_connecting\"));\n                this.restoreStatus();\n                this.connection.reset();\n                console.log('started reconnecting');\n                xabber._settings.get('reconnection_logs') && utils.callback_popup_message('started reconnecting', 3000);\n                this.conn_manager.reconnect(this.reconnectionCallback.bind(this));\n            }, timeout);\n        },\n\n        connectionCallback: function (status, condition, elem) {\n            if (this.session.get('reconnecting')) {\n                xabber.info('ignore connection callback for status: '+constants.CONN_STATUSES[status]);\n                return;\n            }\n            this.auth_view && this.loginCallback(status, condition);\n            this.session.set({conn_status: status, conn_condition: condition});\n            if ((status === Strophe.Status.ERROR) && (condition === 'conflict') && !this.session.get('delete')) {\n                this.onConnectionConflict();\n            } else if (status === Strophe.Status.ERROR && (condition === 'policy-violation')) {\n                this.onAuthFailed(condition);\n            } else if (status === Strophe.Status.CONNECTED) {\n                this.session.set('on_token_revoked', false);\n                if (this._revoke_on_connect){\n                    this.session.set({connected: true, reconnected: false});\n                    this._revoke_on_connect.resolve();\n                    return;\n                }\n                if (this.connection.x_token) {\n                    this.save({\n                        auth_type: 'x-token',\n                        x_token: this.connection.x_token,\n                        hotp_counter: this.connection.counter,\n                    });\n                    this.conn_manager.auth_type = 'x-token';\n                }\n\n                if (this.get('registration_nickname')){\n                    let vcard = utils.vcard.getBlank(this.get('jid'));\n                    vcard.nickname = this.get('registration_nickname');\n                    this.setVCard(vcard,\n                        () => {\n                            this.getVCard();\n                            this.set('registration_nickname', null)\n                        },\n                        function () {\n                            utils.dialogs.error(xabber.getString(\"account_user_info_save_fail\"));\n                            this.set('registration_nickname', null)\n                        }\n                    );\n                }\n                this.createFastConnection();\n                this.session.set({connected: true, reconnected: false});\n            } else if (status === Strophe.Status.AUTHFAIL || ((status === Strophe.Status.ERROR) && (condition === 'not-authorized'))) {\n                if ((this.get('auth_type') === 'x-token' || this.connection.x_token)){\n                    if (this.session.get('conn_retries') <= 3 && $(elem).find('credentials-expired').length === 0)\n                        this.reconnect(true);\n                    else\n                        this.onTokenRevoked();\n                }\n                else\n                    this.onAuthFailed();\n            } else if (status === Strophe.Status.DISCONNECTED) {\n                this.connection && clearTimeout(this.connection.openCheckTimeout);\n                if (this.session.get('on_token_revoked'))\n                    return;\n                this.connection.flush();\n                if (this._main_interval_worker)\n                    this._main_interval_worker.terminate();\n                this.session.set({\n                    connected: false,\n                    ready_to_send: false,\n                });\n            }\n        },\n\n        reconnectionCallback: function (status, condition, elem) {\n            if (!this.session.get('reconnecting')) {\n                xabber.info('ignore reconnection callback for status: '+constants.CONN_STATUSES[status]);\n                return;\n            }\n            this.session.set({conn_status: status, conn_condition: condition});\n            if (status === Strophe.Status.CONNECTED) {\n                console.log('reconnected main connection');\n                xabber._settings.get('reconnection_logs') && utils.callback_popup_message(`reconnected main connection , conn_retries: ${this.session.get('conn_retries')}`, 5000);\n                this.session.set('on_token_revoked', false);\n                if (this.connection.x_token) {\n                    this.save({\n                        auth_type: 'x-token',\n                        x_token: this.connection.x_token,\n                        hotp_counter: this.connection.counter,\n                    });\n                }\n                this.createFastConnection();\n                this.connection.connect_callback = this.connectionCallback.bind(this);\n                this.session.set({\n                    connected: true,\n                    reconnected: true,\n                    reconnecting: false,\n                    conn_retries: 0\n                });\n            } else if (status === Strophe.Status.ERROR && (condition === 'policy-violation')) {\n                this.onAuthFailed(condition);\n            } else if (status === Strophe.Status.AUTHFAIL || ((status === Strophe.Status.ERROR) && (condition === 'not-authorized'))) {\n                if ((this.get('auth_type') === 'x-token' || this.connection.x_token)) {\n                    if ($(elem).find('credentials-expired').length > 0)\n                        this.onTokenRevoked();\n                    else if (this.session.get('conn_retries') > 2 )\n                        this.onAuthFailed();\n                    else\n                        this.reconnect(true);\n                }\n                else\n                    this.onAuthFailed();\n            } else if (status === Strophe.Status.DISCONNECTED) {\n                this.connection && clearTimeout(this.connection.openCheckTimeout);\n                if (this.session.get('on_token_revoked'))\n                    return;\n                this.connection.flush();\n                if (this._main_interval_worker)\n                    this._main_interval_worker.terminate();\n                let max_retries = xabber.settings.max_connection_retries;\n                if (max_retries === -1 || this.session.get('conn_retries') < max_retries) {\n                    console.log(`started another reconnecting, conn_retries: ${this.session.get('conn_retries')},status: ${status} ,condition: ${condition} `);\n                    xabber._settings.get('reconnection_logs') && utils.callback_popup_message(`started another reconnecting, conn_retries: ${this.session.get('conn_retries')},status: ${status} ,condition: ${condition} `, 3000);\n                    this.reconnect();\n                } else {\n                    this.connFeedback(xabber.getString(\"connection__error__connection_lost\"));\n                }\n            }\n        },\n\n        registerCallback: function (status, condition, error_text) {\n            if (status === Strophe.Status.REGISTER) {\n                this.connection.register.fields.username = Strophe.getNodeFromJid(this.get('jid'));\n                this.connection.register.fields.password = this.getPassword();\n                if (xabber.url_params && xabber.url_params.rkey) {\n                    this.connection.register.fields.key = xabber.url_params.rkey;\n                }\n                this.connection.register.submit();\n            } else if (status === Strophe.Status.REGISTERED) {\n                let nickname = this.auth_view.$nickname_input.val()\n                this.auth_view.data.set('step',6);\n                if(nickname){\n                    this.set('registration_nickname', nickname)\n                }\n            } else if (status === Strophe.Status.CONFLICT) {\n                this.auth_view.errorRegistrationFeedback({jid: xabber.getString(\"label_xmpp_id\")});\n                this.auth_view.data.set('step', 3)\n            } else if (status === Strophe.Status.NOTACCEPTABLE) {\n                if (error_text)\n                    this.auth_view.errorRegistrationFeedback({password: error_text});\n                else {\n                    condition = condition ? ': ' + condition : '';\n                    this.auth_view.errorRegistrationFeedback({password: xabber.getString(\"xmpp_login__registration_not_filled\") + condition});\n                }\n                this.auth_view.data.set('step', 4)\n            } else if (status === Strophe.Status.REGIFAIL) {\n                if (error_text)\n                    this.auth_view.errorRegistrationFeedback({password: error_text});\n                else {\n                    condition = condition ? ': ' + condition : '';\n                    this.auth_view.errorRegistrationFeedback({password: xabber.getString(\"xmpp_login__registration_failed\") + condition});\n                }\n                this.auth_view.data.set('step', 4)\n            }\n        },\n\n        changePasswordCallback: function (status, condition) {\n            if (this.change_password_view){\n                if (status === Strophe.Status.REGISTERED) {\n                    this.change_password_view.successFeedback();\n                } else if (status === Strophe.Status.CONFLICT\n                    || status === Strophe.Status.NOTACCEPTABLE\n                    || status === Strophe.Status.REGIFAIL) {\n                    condition = condition ? ': ' + condition : '';\n                    this.change_password_view.errorFeedback({password: xabber.getString(\"password_changed_fail\") + condition});\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    this.change_password_view.errorFeedback({old_password: xabber.getString(\"AUTHENTICATION_FAILED\")});\n                } else if (status === Strophe.Status.CONNECTED) {\n                    this.change_password_connection.register.fields.username = Strophe.getNodeFromJid(this.get('jid'));\n                    this.change_password_connection.register.fields.password = this.change_password_view.$password_input.val().trim();\n                    this.change_password_connection.register.submit();\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    this.change_password_connection && clearTimeout(this.change_password_connection.openCheckTimeout);\n                    this.change_password_connection_manager = undefined;\n                    this.change_password_connection = undefined;\n                }\n            }\n        },\n\n        unregisterAccountCallback: function (status, condition) {\n            if (this.unregister_account_view){\n                if (status === Strophe.Status.REGISTERED) {\n                    this.unregister_account_view.close();\n                    this.trigger('deactivate', this);\n                    this.deleteAccount();\n                    xabber.settings_modal_view.closeSettings();\n                } else if (status === Strophe.Status.CONFLICT\n                    || status === Strophe.Status.NOTACCEPTABLE\n                    || status === Strophe.Status.REGIFAIL) {\n                    condition = condition ? ': ' + condition : '';\n                    this.unregister_account_view.errorFeedback({password: xabber.getString(\"account_unregister_failed\") + condition});\n                    this.unregister_account_view.data.set('step', 0);\n                    this.unregister_account_connection && this.unregister_account_connection.disconnect();\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    this.unregister_account_view.errorFeedback({password: xabber.getString(\"wrong_password\")});\n                    this.unregister_account_view.data.set('step', 0);\n                    this.unregister_account_connection && this.unregister_account_connection.disconnect();\n                } else if (status === Strophe.Status.CONNECTED) {\n                    this.unregister_account_view.data.set('step', 1);\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    this.unregister_account_connection && clearTimeout(this.unregister_account_connection.openCheckTimeout);\n                    this.unregister_account_connection_manager = undefined;\n                    this.unregister_account_connection = undefined;\n                }\n            }\n        },\n\n        loginCallback: function (status, condition) {\n            if (status === Strophe.Status.CONNECTING) {\n                if (this.auth_view.stepped_auth){\n                    this.auth_view.resetAuthStepper()\n                }\n            } else if (status === Strophe.Status.CONNECTED) {\n                this.save('is_new', undefined);\n                if (this.auth_view.stepped_auth && !this.auth_view.data.get('registration'))\n                    this.auth_view.authStepperStart();\n                else{\n                    this.auth_view.endAuth();\n                }\n\n            } else if (_.contains(constants.BAD_CONN_STATUSES, status)) {\n                let stepper_auth_error = false;\n                if (status === Strophe.Status.ERROR) {\n                    status = xabber.getString(\"CONNECTION_FAILED\");\n                } else if (status === Strophe.Status.CONNFAIL) {\n                    status = xabber.getString(\"CONNECTION_FAILED\");\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    status = xabber.getString(\"AUTHENTICATION_FAILED\");\n                    stepper_auth_error = true;\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    status = xabber.getString(\"connection__error__text_disconnected\");\n                } else if (status === Strophe.Status.CONNTIMEOUT) {\n                    status = xabber.getString(\"connection__error__text_timeout_expired\");\n                }\n                condition = condition ? ': ' + condition : '';\n                if (this.auth_view.stepped_auth)\n                    this.auth_view.authStepperError(stepper_auth_error, {password: status + condition});\n                else\n                    this.auth_view.errorFeedback({password: status + condition});\n                this.get('is_new') && this.destroy();\n            }\n        },\n\n        onAuthFailed: function (text) {\n            if (!this.auth_view && !text){\n                utils.dialogs.error(xabber.getString(\"connection__error__text_authentication_failed\", [this.get('jid')]));\n                this.password_view.show();\n            } else if (text){\n                if (this.auth_view)\n                    return;\n                this.session.set({\n                    connected: false,\n                    ready_to_send: false,\n                    no_reconnect: true\n                });\n                let dialog_text = xabber.getString(\"XMPP_EXCEPTION\") + \": \" + text;\n                utils.dialogs.ask_extended(xabber.getString(\"error\"), xabber.getString(\"modal_policy_violation_text\"),\n                    {modal_class: 'modal-policy-violation', no_dialog_options: true, quoted_text: text, cancel_button_main: true},\n                    {\n                        ok_button_text: xabber.getString(\"disable_account\"),\n                        cancel_button_text: xabber.getString(\"account_settings\"),\n                        optional_button: 'account-reconnect',\n                        optional_button_text: xabber.getString(\"account_reconnect\")\n                    }).done((res) => {\n                    if (res){\n                        if (res === 'account-reconnect')\n                            this.reconnect();\n                        else {\n                            this.save('enabled', false);\n                            this.deactivate()\n                        }\n                    } else {\n                        this.showSettingsModal();\n                    }\n                });\n                return;\n            }\n            this.session.set({\n                auth_failed: true,\n                connected: false,\n                ready_to_send: false,\n                no_reconnect: true\n            });\n            this.save({old_device_token: this.get('x_token'), auth_type: 'password', password: null, x_token: null});\n            this.connection.pass = \"\";\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_authentication_failed_short\"));\n        },\n\n        onConnectionConflict: function () {\n            utils.dialogs.error(xabber.getString(\"connection__error__text_connection_conflict\", [this.get('jid')]));\n            this.session.set({\n                auth_failed: true,\n                no_reconnect: true\n            });\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_connection_conflict_short\"));\n        },\n\n        getAllXTokens: function (callback) {\n            let tokens_list = [],\n                iq = $iq({\n                    type: 'get',\n                    to: this.connection.domain\n                }).c('query', {xmlns: `${Strophe.NS.AUTH_DEVICES}#items`});\n            this.sendIQFast(iq, (tokens) => {\n                $(tokens).find('device').each((idx, token) => {\n                    let $token = $(token),\n                        client = $token.find('client').text(),\n                        device = $token.find('info').text(),\n                        description = $token.find('public-label').text(),\n                        omemo_id = $token.find('omemo-id').text(),\n                        token_uid = $token.attr('id'),\n                        expire = Number($token.find('expire').text())*1000,\n                        last_auth = Number($token.find('last-auth').text())*1000,\n                        ip_address = $token.find('ip').text();\n                    tokens_list.push({client: client, device: device, description: description, token_uid: token_uid, last_auth: last_auth, expire: expire, ip: ip_address, omemo_id: omemo_id});\n                });\n                this.x_tokens_list = tokens_list;\n                callback && callback();\n            });\n        },\n\n        onTokenRevoked: function () {\n            if (!this.auth_view) {\n                utils.dialogs.error(xabber.getString(\"connection__error__text_token_invalidated\", [this.get('jid')]));\n            }\n            this.session.set({\n                on_token_revoked: true,\n                auth_failed: true,\n                connected: false,\n                no_reconnect: true\n            });\n            this.save({auth_type: 'password', password: null, x_token: null});\n            this.connection.pass = \"\";\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_token_invalidated_short\"));\n            this.deleteAccount()\n        },\n\n        onChangedConnected: function () {\n            if (this.isConnected()) {\n                this.session.get('reconnected') ? this.onReconnected() : this.onConnected();\n            } else {\n                this.onDisconnected();\n            }\n        },\n\n        onConnected: function () {\n            this.connFeedback(xabber.getString(\"account_state_connected\"));\n            this.jid = this.connection.jid;\n            this.resource = Strophe.getResourceFromJid(this.jid);\n            this.domain = Strophe.getDomainFromJid(this.jid);\n            this.trigger('activate', this);\n            this.session.get('no_reconnect') && this.session.set('no_reconnect', false);\n            this.dfd_presence = new $.Deferred();\n            this.afterConnected();\n            _.each(this._after_connected_plugins, (plugin) => {\n                plugin.call(this);\n            });\n        },\n\n        onFastConnected: function (status) {\n            if (status === Strophe.Status.CONNECTED) {\n                if (this.fast_connection.x_token) {\n                    this.save({\n                        x_token: this.fast_connection.x_token,\n                        hotp_counter: this.fast_connection.counter,\n                    });\n                    this.fast_conn_manager.auth_type = 'x-token';\n                    this.fast_connection.x_token_auth = true;\n                    if (this.connection && this.connection.pass)\n                        this.fast_connection.pass = this.connection.pass;\n                }\n                _.each(this._after_fast_connected_plugins, (plugin) => {\n                    plugin.call(this);\n                });\n            } else if (status === Strophe.Status.AUTHFAIL || status === Strophe.Status.DISCONNECTED) {\n                this.fast_connection && clearTimeout(this.fast_connection.openCheckTimeout);\n                if (this._fast_interval_worker)\n                    this._fast_interval_worker.terminate();\n                this.fast_conn_manager = undefined;\n                this.fast_connection = undefined;\n                if (this.connection && !this.connection.disconnecting\n                    && this.connection.authenticated && this.connection.connected){\n                    this.getVCard();\n                    if (!(this.auth_view && this.auth_view.data.get('authentication')))\n                        this.trigger('ready_to_get_roster');\n                }\n            }\n        },\n\n        onReconnected: function () {\n            this.connFeedback(xabber.getString(\"account_state_connected\"));\n            this.dfd_presence = new $.Deferred();\n            this.afterConnected();\n            _.each(this._after_reconnected_plugins, (plugin) => {\n                plugin.call(this);\n            });\n        },\n\n        afterConnected: function () {\n            this.dfd_presence.done(() => {\n                this.sendPendingStanzas();\n                this.sendPendingMessages();\n                this.session.set({\n                    ready_to_send: true\n                })\n            });\n            this.registerPresenceHandler();\n            this.enableCarbons();\n        },\n\n        getAllMessageRetractions: function (callback) {\n            let query_options = {xmlns: Strophe.NS.REWRITE, version: this.retraction_version};\n            let retractions_query = $iq({type: 'get'})\n                .c('query', query_options);\n            this.sendIQ(retractions_query, callback);\n        },\n\n        sendPendingStanzas: function () {\n            console.log('pending stanzas');\n            console.log(this._pending_stanzas);\n            _.each(this._pending_stanzas, (item) => {\n                console.log(item);\n                if ((item.stanza instanceof Strophe.Builder) || item.is_msg) {\n                    this.connection.send(item.stanza);\n                    item.callback && item.callback();\n                } else if (item && item.stanza && item.is_iq){\n                    this.connection.sendIQ.apply(this.connection, item.stanza);\n                }\n            });\n            this._pending_stanzas = [];\n        },\n\n        sendPendingMessages: function () {\n            console.log('pending messages');\n            console.log(this._pending_messages);\n            this._pending_messages.sort((a,b) => (a.timestamp > b.timestamp) ? 1 : ((b.timestamp > a.timestamp) ? -1 : 0));\n            _.each(this._pending_messages, (item) => {\n                console.log(item)\n                let msg = this.messages.get(item.unique_id), msg_iq;\n                msg && (msg_iq = msg.get('xml'));\n                if (msg && msg.collection && msg.collection.chat && msg.collection.chat.get('group_chat'))\n                    $(msg_iq).append(\"<retry to='\" + msg.collection.chat.get('jid') + \"' xmlns='\" + Strophe.NS.DELIVERY + \"'/>\");\n                else\n                    $(msg_iq).append(\"<retry xmlns='\" + Strophe.NS.DELIVERY + \"'/>\");\n                msg_iq && this.sendMsgPending(msg_iq);\n            });\n            this.trigger('send_pending_messages');\n        },\n\n        _after_connected_plugins: [],\n        _after_reconnected_plugins: [],\n        _after_fast_connected_plugins: [],\n\n        onDisconnected: function () {\n            this.disconnected_timestamp = this.last_stanza_timestamp;\n            if (this.session.get('delete')) {\n                this.destroy();\n                return;\n            }\n            let deactivate = this.session.get('deactivate');\n            if (deactivate) {\n                this.connFeedback(xabber.getString(\"settings_account__label_state_disconnected\"));\n                this.session.set('deactivate', null);\n                if (deactivate === 'set_off') {\n                    this.trigger('deactivate', this);\n                }\n            } else {\n                if (this.session.get('no_reconnect')) {\n                    this.session.set('no_reconnect', false);\n                } else {\n                    this.fast_connection && this.fast_connection.connected && this.fast_connection.disconnect();\n                    this.reconnect();\n                }\n            }\n        },\n\n        connFeedback: function (message) {\n            this.session.set(\"conn_feedback\", message);\n        },\n\n        enableCarbons: function () {\n            let iq = $iq({type: 'set'}).c('enable', {xmlns: Strophe.NS.CARBONS});\n            this.sendIQFast(iq);\n        },\n\n        getVCard: function (callback) {\n            let jid = this.get('jid'),\n                is_callback = _.isFunction(callback);\n            if (this.connection && this.connection.connected) {\n                this.getConnectionForIQ().vcard.get(jid,\n                    (vcard) => {\n                        let attrs = {\n                            vcard: vcard,\n                            vcard_updated: moment.now()\n                        };\n                        attrs.name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || jid;\n                        if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n                            if (vcard.photo.image) {\n                                attrs.avatar_priority = constants.AVATAR_PRIORITIES.VCARD_AVATAR;\n                                attrs.image = vcard.photo.image;\n                            }\n                            else\n                                attrs.image = Images.getDefaultAvatar(attrs.name);\n                            this.cached_image = Images.getCachedImage(attrs.image);\n                        }\n                        this.save(attrs);\n                        is_callback && callback(vcard);\n                    },\n                    function () {\n                        is_callback && callback(null);\n                    }\n                );\n            }\n        },\n\n        setVCard: function (data, callback, errback) {\n            let vcard = _.extend(_.clone(this.get('vcard')), data);\n            this.connection.vcard.set(this.get('jid'), vcard, () => {\n                this.vcardPhotoUpdated(vcard.photo.image);\n                callback && callback();\n            }, errback);\n        },\n\n        getStatusMessage: function () {\n            return this.get('status_message') || xabber.getString([this.get('status')]);\n        },\n\n        setStatus: function (status, message) {\n            let attrs = { status_updated: moment.now() };\n            status !== null && (attrs.status = status);\n            message !== null && (attrs.status_message = message || '');\n            if (status === 'offline' && this.get('status') !== 'offline')\n                attrs.status_prev = this.get('status');\n            this.save(attrs);\n            if (!this.get('enabled'))\n                return;\n            if (status === 'offline') {\n                this.deactivate('set_offline');\n            } else if (!this.isConnected()) {\n                this.activate();\n            } else {\n                this.sendPresence();\n            }\n        },\n\n        restoreStatus: function () {\n            if (this.get('status') === 'offline') {\n                this.save({\n                    status_updated: moment.now(),\n                    status: this.get('status_prev') || 'online',\n                    status_prev: undefined\n                });\n            }\n        },\n\n        getAvatarHash: function (avatar) {\n            let from_avatar = avatar || this.get('vcard').photo.image;\n            if (from_avatar) {\n                let decoded_raw = atob(from_avatar),\n                    bin = Uint8Array.from(Array.prototype.map.call(decoded_raw,function(x) {\n                        return x.charCodeAt(0);\n                    }));\n                return sha1(bin);\n            }\n            else\n                return \"\";\n        },\n\n        vcardPhotoUpdated: function (photo) {\n            let stanza = $pres().c('x', {xmlns: Strophe.NS.VCARD_UPDATE}).c('photo').t(this.getAvatarHash(photo)).up().up();\n            return this.sendPres(stanza);\n        },\n\n        sendPresence: function (type, message) {\n            type = type || this.get('status');\n            let status_message = message || this.get('status_message'), stanza = $pres();\n            if (type === 'offline') {\n                stanza.attrs({'type': 'unavailable'});\n            } else {\n                if (type !== 'online') {\n                    stanza.c('show').t(type).up();\n                }\n                stanza.c('status').t(status_message).up();\n                stanza.c('priority').t(this.get('priority')).up();\n                if(this.get('x_token'))\n                    stanza.c('device', {xmlns: Strophe.NS.AUTH_DEVICES, id: this.get('x_token').token_uid}).up();\n            }\n            stanza.cnode(this.connection.caps.createCapsNode({\n                node: 'https://www.xabber.com/clients/xabber/web'\n            }).tree());\n            return this.sendPres(stanza);\n        },\n\n        showSettings: function (right, block_name) {\n            this.showSettingsModal(block_name);\n        },\n\n        showSettingsModal: function (block_name) {\n            if (xabber.accounts.length === 1){\n                xabber.body.setScreen('settings-modal', {account_block_name: block_name});\n                xabber.trigger('update_placeholder');\n                return;\n            }\n            let has_modal_settings = !_.isUndefined(this.settings_account_modal);\n            if (!has_modal_settings)\n                this.settings_account_modal = new xabber.AccountSettingsModalView({model: this});\n            this.updateColorScheme();\n            xabber.body.setScreen('account_settings_modal', {\n                account: this, block_name: block_name\n            });\n            this.trigger('open_settings');\n            if (!has_modal_settings) {\n                this.trigger('render_settings');\n                this.settings_account_modal.addChild('blocklist', xabber.BlockListView, {\n                    account: this,\n                    el: this.settings_account_modal.$('.block-list-view-wrap')[0]\n                });\n            }\n            this.settings_account_modal.updateHeight();\n        },\n\n        updateColorScheme: function () {\n            let color = this.settings.get('color');\n            this.settings_account_modal && this.settings_account_modal.$el.attr('data-color', color);\n        },\n\n        revokeXToken: function (token_uid, callback) {\n            let iq = $iq({\n                type: 'set',\n                to: this.connection.domain\n            }).c('revoke', {xmlns:Strophe.NS.AUTH_DEVICES});\n            for (let token_num = 0; token_num < token_uid.length; token_num++)\n                iq.c('device', {id: token_uid[token_num]}).up();\n            this.sendIQFast(iq, () => {\n                callback && callback();\n            });\n        },\n\n        revokeAllXTokens: function (callback, errback) {\n            let iq = $iq({\n                type: 'set',\n                to: this.connection.domain\n            }).c('revoke-all', {xmlns:Strophe.NS.AUTH_DEVICES});\n            this.sendIQFast(iq, (success) => {\n                    callback & callback(success);\n                },\n                function (error) {\n                    errback && errback(error);\n                });\n        },\n\n        deleteAccount: function (show_settings, dont_change_screen) {\n            this.show_settings_after_delete = show_settings;\n            this.dont_change_screen_after_delete = dont_change_screen;\n            let screen = xabber.body.screen;\n            if (screen.get('account') && screen.get('account') === this && screen.get('name') === 'account_settings_modal')\n                this.show_settings_after_delete = true;\n            if (this.get('x_token'))\n                this.revokeXToken([this.get('x_token').token_uid]);\n            this.session.set('delete', true);\n            this.deactivate();\n        },\n\n        activate: function () {\n            if (!this.isConnected())\n                this.connect();\n        },\n\n        deactivate: function (type) {\n            type || (type = 'set_off');\n            this.session.set('deactivate', type);\n            if (this.isConnected()) {\n                this.connFeedback(xabber.getString(\"settings_account__label_state_disconnecting\"));\n                this.sendPresence('offline');\n                this.connection.disconnect();\n                if (this.fast_conn_manager) this.fast_connection.disconnect();\n            } else {\n                this.onDisconnected();\n            }\n        },\n\n        onDestroy: function () {\n            if (this.connection && !this.connection.register._registering)\n                this.connection.connect_callback = null;\n            if (this.omemo){\n                this.omemo.destroy();\n                this.omemo = undefined;\n            }\n            this.groups_settings\n            if (this.groups_settings){\n                this.groups_settings.clearStorage();\n            }\n            if (this.groupchat_settings){\n                this.groupchat_settings.destroy();\n                this.groupchat_settings = undefined;\n            }\n            if (this.chat_settings){\n                this.chat_settings.destroy();\n                this.chat_settings = undefined;\n            }\n            if (this.settings)\n                this.settings.destroy();\n            if (this.isConnected()) {\n                this.connection.disconnect();\n                if (this.fast_conn_manager) this.fast_connection.disconnect();\n            }\n            this.cached_sync_conversations && this.cached_sync_conversations.deleteDataBase();\n            this.cached_roster && this.cached_roster.deleteDataBase();\n            this.cached_server_features && this.cached_server_features.deleteDataBase();\n            this.trigger('remove_saved_chat');\n        },\n\n        registerIQHandler: function () {\n            this.connection.deleteHandler(this._stanza_handler);\n            this._stanza_handler = this.connection.addHandler((iq) => {\n                    this.onGetIQ(iq);\n                    return true;\n                }, null, 'iq', \"get\");\n        },\n\n\n        registerSyncedIQHandler: function () {\n            this.connection.deleteHandler(this._synced_stanza_handler);\n            this._synced_stanza_handler = this.connection.addHandler(\n                this.onSyncedIQ.bind(this),\n                Strophe.NS.SYNCHRONIZATION, 'iq', \"set\");\n        },\n\n        registerPresenceHandler: function () {\n            this.connection.deleteHandler(this._pres_handler);\n            this._pres_handler = this.connection.addHandler(\n                (presence) => {\n                    this.onPresence(presence);\n                    return true;\n                }, null, 'presence', null);\n        },\n\n        onSetIQResult: function (iq) {\n            let to = $(iq).attr('to');\n            if (this.fast_connection && this.fast_connection.jid === to\n                && !this.fast_connection.disconnecting && this.fast_connection.authenticated\n                && this.fast_connection.connected && this.get('status') !== 'offline'){\n                this.sendIQFast($iq({\n                    type: 'result', id: iq.getAttribute('id'),\n                }));\n            } else if (this.connection && this.connection.jid === to && this.connection.authenticated\n                && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline') {\n                this.sendIQ($iq({\n                    type: 'result', id: iq.getAttribute('id'),\n                }));\n            }\n        },\n\n        onSyncedIQ: function (iq) {\n            this.onSetIQResult(iq);\n            this.roster.syncConversations(iq);\n            return true;\n        },\n\n        onGetIQ: function (iq) {\n            let $incoming_iq = $(iq),\n                $confirm = $incoming_iq.find(`confirm[xmlns=\"${Strophe.NS.HTTP_AUTH}\"]`),\n                $session_availability = $incoming_iq.find(`query[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n                request_code,\n                from_jid = $incoming_iq.attr('from');\n            if ($confirm.length) {\n                request_code = $confirm.attr('id');\n                if (this.get('gallery_auth_request_code')) {\n                    this.onAuthCode(request_code)\n                }\n                else {\n                    this.gallery_code_requests.push({\n                        id: $incoming_iq.attr('id'),\n                        code: request_code\n                    });\n                }\n            }\n            if ($session_availability.length) {\n                let session_id = $session_availability.children('session').attr('id'), $session_availability_response;\n                if (session_id && xabber.current_voip_call && session_id === xabber.current_voip_call.get('session_id') && !xabber.current_voip_call.get('state')) {\n                    $session_availability_response = $iq({to: from_jid, type: 'result', id: $incoming_iq.attr('id')})\n                        .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n                        .c('session', {id: session_id});\n                    xabber.current_voip_call.updateStatus(xabber.getString(\"dialog_jingle_message__status_calling\"));\n                }\n                else {\n                    $session_availability_response = $iq({to: from_jid, type: 'error', id: $incoming_iq.attr('id')})\n                        .c('error', {xmlns: Strophe.NS.JINGLE_MSG});\n\n                }\n                this.sendIQFast($session_availability_response);\n            }\n        },\n\n        testGalleryTokenExpire: function(callback, errback) {\n            let currentTime = new Date(),\n                tokenExpireTime = new Date(this.get('gallery_token_expires'));\n            if (this.get('gallery_auth')){\n                this.once('gallery_token_authenticated', callback)\n            }\n            else if (currentTime < tokenExpireTime){\n                callback && callback();\n            }\n            else if (this.server_features.get('media-gallery')){\n                this.initGalleryAuth(this.server_features.get('media-gallery'), errback)\n                this.once('gallery_token_authenticated', callback)\n            }\n            else if (!this.server_features.get('media-gallery')){\n                this.set('gallery_url', undefined);\n                this.set('gallery_token', undefined);\n                this.set('gallery_token_expires', undefined);\n                callback && callback();\n            }\n        },\n\n        testGalleryFileSlot: function(file, callback) {\n            if (this.get('gallery_token') && this.get('gallery_url')){\n                let reader = new FileReader();\n                reader.onloadend = () => {\n                    let b64 = reader.result.split('base64,'),\n                        binary_file = atob(b64[1]),\n                        bytes = new Uint8Array(binary_file.length);\n                    for (let i = 0; i < binary_file.length; i++)\n                        bytes[i] = binary_file.charCodeAt(i);\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/slot/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: {size: file.size, name: file.name, hash: sha1(bytes)},\n                        success: (response) => {\n                            console.log(response);\n                            callback && callback(response);\n                        },\n                        error: (response) => {\n                            console.log(response);\n                            callback && callback(response.responseJSON);\n                        }\n                    });\n                }\n                reader.onerror = (e) => {\n                    console.log(reader.error);\n                    callback && callback(false)\n                };\n                reader.readAsDataURL(file);\n            }\n        },\n\n        initGalleryAuth: function(gallery_feature, errback) {\n            this.set('gallery_url', gallery_feature.get('from'));\n            if (this.get('gallery_url') && !this.get('gallery_auth')) {\n                this.set('gallery_token', undefined);\n                this.set('gallery_token_expires', undefined);\n                this.set('gallery_auth', true)\n                this.gallery_iq_answered = false;\n                $.ajax({\n                    type: 'POST',\n                    url: this.get('gallery_url') + 'v1/account/xmpp_code_request/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({jid: this.jid, type: \"iq\"}),\n                    success: (response) => {\n                        if (response.request_id){\n                            this.set('gallery_auth_request_code', response.request_id)\n                            this.gallery_auth_errback = errback;\n                            if (this.gallery_code_requests.length){\n                                let verifying_code = this.gallery_code_requests.find(verifying_mess => (verifying_mess.id === this.get('gallery_auth_request_code')));\n                                if (verifying_code && verifying_code.code)\n                                    this.onAuthCode(verifying_code.code)\n                            }\n                            setTimeout(() => {\n                                if (!this.gallery_iq_answered)\n                                    this.handleCommonGalleryErrors({status: 500}, errback)\n                            }, 5000)\n                        }\n                    },\n                    error: (response) => {\n                        this.handleCommonGalleryErrors(response, errback)\n                        this.set('gallery_auth', false)\n                        this.gallery_code_requests = [];\n                        console.log(response)\n                    }\n                });\n            }\n        },\n\n        onAuthCode: function (confirm_code) {\n            this.gallery_code_requests = [];\n            this.set('gallery_auth_request_code', undefined);\n            if (confirm_code) {\n                this.gallery_iq_answered = true;\n                $.ajax({\n                    type: 'POST',\n                    url: this.get('gallery_url') + 'v1/account/xmpp_auth/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({jid: this.id, code: confirm_code}),\n                    success: (response) => {\n                        if (response.token)\n                            this.set('gallery_token', response.token);\n                        if (response.expires)\n                            this.set('gallery_token_expires', response.expires);\n                        this.trigger('gallery_token_authenticated')\n                        this.set('gallery_auth', false)\n                    },\n                    error: (response) => {\n                        this.set('gallery_auth', false)\n                        this.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n            }\n        },\n\n        prepareFiles: function (files, callback) {\n            files.forEach((file) => {\n                let reader = new FileReader();\n                reader.onloadend = () => {\n                    let b64 = reader.result.split('base64,'),\n                        binary_file = atob(b64[1]),\n                        bytes = new Uint8Array(binary_file.length);\n                    for (let i = 0; i < binary_file.length; i++)\n                        bytes[i] = binary_file.charCodeAt(i);\n                    this.testFile({size: file.size, name: file.name, hash: sha1(bytes)}, file, callback)\n                }\n                reader.readAsDataURL(file);\n            })\n        },\n\n        handleCommonGalleryErrors: function (response, errback) {\n            !errback && (errback = this.gallery_auth_errback);\n            this.gallery_auth_errback = undefined;\n            let err_text;\n            response && response.responseJSON && response.responseJSON.error && (err_text = response.responseJSON.error);\n            if (response.status === 401){\n                if (this.server_features.get('media-gallery')){\n                    this.initGalleryAuth(this.server_features.get('media-gallery'), errback)\n                } else {\n                    this.set('gallery_url', null);\n                    this.set('gallery_token', null);\n                    errback && errback('No Media Gallery server feature');\n                }\n            } else if (response.status === 500) {\n                this.set('gallery_url', null);\n                this.set('gallery_token', null);\n                errback && errback(xabber.getString(\"media_gallery_server_error\"));\n            } else {\n                errback && errback('Media Gallery error - ' + (err_text || response.status));\n            }\n        },\n\n        getStorageStats: function (params, callback) {\n            this.testGalleryTokenExpire(() => {\n                params && (params = {});\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/stats/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: params,\n                        success: (response) => {\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                        }\n                    });\n            });\n        },\n\n        testFile: function (params, file, callback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/slot/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: params,\n                        success: (response) => {\n                            this.uploadFile(file , callback)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                        }\n                    });\n\n            });\n        },\n\n        uploadFile: function (file, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url')) {\n                    let formData = new FormData(),\n                        metadata = {};\n                    file.duration && (metadata.duration = file.duration);\n                    formData.append('file', file, file.name);\n                    formData.append('metadata', JSON.stringify(metadata));\n                    if (file.size)\n                        formData.append('size', file.size);\n                    if (file.voice){\n                        formData.append('media_type', file.type + '+voice');\n                        formData.append('context', 'voice');\n                    }\n                    else\n                        formData.append('media_type', file.type);\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/upload/',\n                        data: formData,\n                        contentType: false,\n                        processData: false,\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        uploadAvatar: function (file, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url')) {\n                    if (!file)\n                        errback && errback('no file')\n                    let formData = new FormData();\n                    formData.append('file', file, file.name);\n                    formData.append('media_type', file.type);\n                    formData.append('context', 'avatar');\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/upload/',\n                        data: formData,\n                        contentType: false,\n                        processData: false,\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        deleteFile: function (file_id, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url') && file_id){\n                    let options = {id: file_id, contexts: ['file', 'voice']};\n                    $.ajax({\n                        type: 'DELETE',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: JSON.stringify(options),\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        deleteFileByUrl: function (file_url, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url') && file_url){\n                    let options = {file: file_url, contexts: ['file', 'voice']};\n                    $.ajax({\n                        type: 'DELETE',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: JSON.stringify(options),\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        getOpenGraphData: function (url, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token'), \"Content-Type\": \"application/json\"},\n                        url: this.get('gallery_url') + 'v1/opengraph/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: JSON.stringify({url: url}),\n                        success: (response) => {\n                            response.site = $(response.ogp).closest('meta[property=\"og:site_name\"]').attr('content')\n                            response.type = $(response.ogp).closest('meta[property=\"og:type\"]').attr('content')\n                            response.url = $(response.ogp).closest('meta[property=\"og:url\"]').attr('content')\n                            response.description = $(response.ogp).closest('meta[property=\"og:description\"]').attr('content')\n                            response.title = $(response.ogp).closest('meta[property=\"og:title\"]').attr('content')\n                            response.image = $(response.ogp).closest('meta[property=\"og:image\"]').attr('content')\n                            response.image_height = $(response.ogp).closest('meta[property=\"og:image:height\"]').attr('content')\n                            response.image_width = $(response.ogp).closest('meta[property=\"og:image:width\"]').attr('content')\n                            response.video_url = $(response.ogp).closest('meta[property=\"og:video:url\"]').attr('content')\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            errback && errback(response)\n                            console.log(response)\n                        }\n                    });\n            });\n        },\n\n        createMessageFromIQ: function (attrs) {\n            let contact = this.contacts.mergeContact(attrs.from_jid),\n                chat = this.chats.getChat(contact);\n            chat.messages.create(attrs);\n        },\n\n        onPresence: function (presence) {\n            let $presence = $(presence),\n                type = presence.getAttribute('type');\n            if (type === 'error') { return; }\n            let jid = presence.getAttribute('from'),\n                bare_jid = Strophe.getBareJidFromJid(jid);\n            if (bare_jid !== this.get('jid')) {\n                _.each(this._added_pres_handlers, function (handler) {\n                    handler(presence, bare_jid);\n                });\n                return;\n            };\n            let resource = Strophe.getResourceFromJid(jid),\n                priority = Number($presence.find('priority').text()),\n                status = $presence.find('show').text() || 'online',\n                status_message = $presence.find('status').text();\n            _.isNaN(priority) && (priority = 0);\n            let $vcard_update = $presence.find(`x[xmlns=\"${Strophe.NS.VCAD_UPDATE}\"]`);\n            if ($vcard_update.length && this.get('avatar_priority') && this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR)\n                this.save('photo_hash', $vcard_update.find('photo').text());\n            if (resource) {\n                let resource_obj = this.resources.get(resource);\n                if (type === 'unavailable') {\n                    if (resource_obj) { resource_obj.destroy(); }\n                } else {\n                    let attrs = {\n                        resource: resource,\n                        priority: priority,\n                        status: status,\n                        status_message: status_message\n                    };\n                    let $device = $presence.find(`device[xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`);\n                    if ($device && this.x_tokens_list && $device.attr('id')) {\n                        attrs.token_uid = $device.attr('id')\n                    }\n                    if (!resource_obj)\n                        resource_obj = this.resources.create(attrs);\n                    else\n                        resource_obj.set(attrs);\n                }\n            }\n        }\n    },\n    {\n        addInitPlugin: function (func) {\n            this.prototype._init_plugins.push(func);\n        },\n\n        addConnPlugin: function (func, conn, reconn) {\n            conn && this.prototype._after_connected_plugins.push(func);\n            reconn && this.prototype._after_reconnected_plugins.push(func);\n        },\n\n        addFastConnPlugin: function (func, conn, reconn) {\n            conn && this.prototype._after_fast_connected_plugins.push(func);\n        }\n    });\n\nxabber.Accounts = Backbone.CollectionWithStorage.extend({\n    model: xabber.Account,\n    comparator: function (acc1, acc2) {\n        return acc1.settings.get('order') < acc2.settings.get('order') ? -1 : 1;\n    },\n\n    _initialize: function (models, options) {\n        this.settings_list = xabber.account_settings_list;\n        this.getEnabledList();\n        this.getConnectedList();\n        this.on(\"add\", this.onAdd, this);\n        this.on(\"destroy\", this.onDestroy, this);\n        this.on(\"change:enabled\", this.getEnabledList, this);\n        this.on(\"change:omemo_enabled\", this.onOmemoChanged, this);\n        this.on(\"update_order\", this.onUpdatedOrder, this);\n        this.on(\"add destroy activate deactivate\", this.onListChanged, this);\n        this.on(\"destroy deactivate\", this.onAccountDisconnected, this);\n        xabber.on(\"quit\", this.onQuit, this);\n        xabber.on(\"quit_accounts\", this.onQuitAccounts, this);\n        this.settings_list.on(\"add_settings\", this.onSettingsAdded, this);\n    },\n\n    onQuit: function () {\n        _.each(_.clone(this.models), function (account) {\n            account.deleteAccount(true);\n            account.password_view.closeModal();\n            utils.modals.clear_queue();\n        });\n        !this.models.length && xabber.body.setScreen('login', {chat_item: null});\n    },\n\n    onQuitAccounts: function () {\n        _.each(_.clone(this.models), function (account) {\n            if (account.settings.get('to_sync')) {\n                account.deleteAccount();\n                account.password_view.closeModal();\n                utils.modals.clear_queue();\n            }\n        });\n        !this.models.length && xabber.body.setScreen('login');\n    },\n\n    getEnabledList: function () {\n        this.enabled = this.filter(account => account.get('enabled'));\n    },\n\n    getConnectedList: function () {\n        this.connected = this.filter(account => account.isConnected());\n    },\n\n    onListChanged: function () {\n        this.getEnabledList();\n        this.getConnectedList();\n        this.trigger('list_changed', this);\n    },\n\n    onOmemoChanged: function (account) {\n        this.trigger('omemo_changed', account);\n    },\n\n    onAdd: function (account) {\n        if (account.is_invalid)\n            account.destroy();\n    },\n\n    onDestroy: function (account) {\n        if (!account.get('is_new')) {\n            let no_accounts = !(this.length);\n            if (no_accounts) {\n                xabber.body.setScreen('login');\n            } else if (account.show_settings_after_delete) {\n                xabber.body.setScreen('settings-modal', {account_block_name: null});\n            } else if (account.dont_change_screen_after_delete) {\n                return;\n            } else {\n            }\n        }\n    },\n\n    onAccountDisconnected: function () {\n        xabber.toolbar_view.recountAllMessageCounter();\n        xabber.recountAllMessageCounter();\n    },\n\n    onSettingsAdded: function (settings) {\n        let jid = settings.get('jid');\n        if (!this.get(jid))\n            this.create({jid: jid});\n    },\n\n    onUpdatedOrder: function () {\n        this.sort();\n        this.getEnabledList();\n        this.getConnectedList();\n    },\n\n    getLastOrder: function () {\n        return this.length ? this.last().settings.get('order') : 0;\n    },\n\n    getDefaultColor: function () {\n        let used_colors = {}, colors = constants.MATERIAL_COLORS;\n        this.each(function (account) {\n            used_colors[account.settings.get('color')] = true;\n        });\n        for (let idx = 0; idx < colors.length; idx++) {\n            if (!used_colors[colors[idx]])\n                return colors[idx];\n        }\n        return 'red';\n    },\n\n    moveBefore: function (acc1, acc2) {\n        let index2 = this.indexOf(acc2),\n            prev_order = index2 > 0 ? this.at(index2-1).settings.get('order') : 0;\n        acc1.settings.save('order', (acc2.settings.get('order') + prev_order)/2);\n        this._updateOrder();\n    },\n\n    moveToBottom: function (acc) {\n        acc.settings.save('order', this.getLastOrder() + 1);\n        this._updateOrder();\n    },\n\n    _updateOrder: function () {\n        this.sort();\n        this.each(function (acc, index) {\n            acc.settings.save({order: index + 1});\n        });\n        this.trigger('update_order');\n    }\n});\n\nxabber.AccountToolbarItemView = xabber.BasicView.extend({\n    className: 'toolbar-item account-item',\n    template: templates.toolbar_item,\n    avatar_size: constants.AVATAR_SIZES.TOOLBAR_ACCOUNT_ITEM,\n\n    events: {\n        'click .filter-chats': 'filterChats',\n        'click .account-item-avatar-wrap': 'showSettings'\n    },\n\n    _initialize: function () {\n        this.updateConnected();\n        this.updateAuthState();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.$el.attr('data-jid', this.model.get('jid'));\n        this.model.session.on(\"change:auth_failed\", this.updateAuthState, this);\n        this.model.session.on(\"change:connected\", this.updateConnected, this);\n        this.model.on(\"change:status\", this.updateStatus, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"open_settings\", this.setActive, this);\n    },\n\n    updateConnected: function () {\n        this.$el.switchClass('disconnected', !this.model.isConnected());\n        xabber.updateFaviconConnected();\n    },\n\n    updateAuthState: function () {\n        let auth_failed = this.model.session.get('auth_failed');\n        xabber.updateFaviconConnected();\n        this.$('.status').hideIf(auth_failed);\n        this.$('.auth-failed').showIf(auth_failed);\n    },\n\n    updateStatus: function () {\n        this.$('.status').attr('data-status', this.model.get('status'));\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    filterChats: function (ev) {\n        ev.stopPropagation();\n        let is_single = $(ev.target).closest('.single-item').length;\n        if (is_single){\n            xabber.body.setScreen('settings-modal', {account_block_name: null});\n            xabber.trigger('update_placeholder');\n            return;\n        }\n        xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        if (xabber.toolbar_view.data.get('account_filtering') != this.model.get('jid'))\n            this.$el.addClass('active');\n        xabber.toolbar_view.showChatsByAccount(this.model);\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    },\n});\n\nxabber.ToolbarAccountsBlockView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.updateList();\n        this.model.on(\"add change:enabled\", this.updateOneInList, this);\n        this.model.on(\"update_order\", this.updateList, this);\n        this.model.on(\"destroy\", this.onAccountRemoved, this);\n    },\n\n    updateList: function (account) {\n        this.$el.find('.single-item').removeClass('single-item');\n        _.each(this.children, function (view) { view.detach(); });\n        _.each(this.model.enabled, (account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            !view && (view = this.addChild(jid, xabber.AccountToolbarItemView, {model: account}));\n            this.$el.append(view.$el);\n            if (this.model.enabled.length === 1)\n                this.$el.find('.toolbar-item.account-item').addClass('single-item');\n        });\n        this.$el.find('.toolbar-item.settings-modal').switchClass('hidden', this.model.enabled.length != 0);\n        this.parent.updateScrollBar();\n    },\n\n    updateOneInList: function (account) {\n        let jid = account.get('jid');\n        if (account.get('enabled')) {\n            let view = this.child(jid);\n            if (view) {\n                view.$el.detach();\n            } else {\n                view = this.addChild(jid, xabber.AccountToolbarItemView,\n                    {model: account});\n            }\n            let index = this.model.enabled.indexOf(account);\n            if (index === 0) {\n                this.$el.prepend(view.$el);\n            } else {\n                this.$('.account-item').eq(index - 1).after(view.$el);\n            }\n        } else {\n            account.last_msg_timestamp = 0;\n            this.removeChild(jid);\n        }\n        this.$el.find('.single-item').removeClass('single-item');\n        if (this.model.enabled.length === 1)\n            this.$el.find('.toolbar-item.account-item').addClass('single-item');\n        this.$el.find('.toolbar-item.settings-modal').switchClass('hidden', this.model.enabled.length != 0);\n        this.parent.updateScrollBar();\n    },\n\n    onAccountRemoved: function (account) {\n        this.removeChild(account.get('jid'));\n        this.parent.updateScrollBar();\n        if (this.model.enabled.length === 1)\n            this.$el.find('.toolbar-item.account-item').addClass('single-item');\n        this.$el.find('.toolbar-item.settings-modal').switchClass('hidden', this.model.enabled.length != 0);\n    }\n});\n\nxabber.Resource = Backbone.Model.extend({\n    idAttribute: 'resource',\n    defaults: {\n        priority: 0\n    }\n});\n\nxabber.ResourceView = xabber.BasicView.extend({\n    className: 'resource-wrap',\n    template: templates.resource,\n\n    _initialize: function (options) {\n        this.update();\n        this.model.on(\"change\", this.update, this);\n    },\n\n    update: function () {\n        let attrs = this.model.attributes;\n        this.$('.status').attr('data-status', attrs.status);\n        this.$('.status-message').text(attrs.status_message || xabber.getString(attrs.status));\n        this.$('.client').text(attrs.client || xabber.getString(\"please_wait\"));\n        this.$('.resource').text(attrs.resource);\n        this.$('.priority').text(attrs.priority);\n        return this;\n    }\n});\n\nxabber.ResourceRightView = xabber.BasicView.extend({\n    className: 'resource-wrap',\n    template: templates.resource_right,\n\n    _initialize: function (options) {\n        this.update();\n        this.model.on(\"change\", this.update, this);\n    },\n\n    update: function () {\n        let attrs = this.model.attributes;\n        this.$('.status').attr('data-status', attrs.status);\n        this.$('.status-message').text(attrs.status_message || xabber.getString(attrs.status));\n        this.$('.client').text(attrs.client || xabber.getString(\"please_wait\"));\n        this.$('.resource').text(attrs.resource);\n        this.$('.priority').text(attrs.priority);\n        return this;\n    }\n});\n\nxabber.Resources = Backbone.Collection.extend({\n    model: xabber.Resource,\n    comparator: function (r1, r2) {\n        let p1 = r1.get('priority'), p2 = r2.get('priority');\n        return p1 > p2 ? -1 : (p1 < p2 ? 1 : 0);\n    },\n\n    requestInfo: function (resource, callback) {\n        let jid = this.jid + '/' + resource.get('resource');\n        if (this.connection && this.connection.connected) {\n            this.connection.disco.info(jid, null, (iq) => {\n                let $identity = $(iq).find('identity[category=client]');\n                if ($identity.length)\n                    resource.set('client', $identity.attr('name'));\n                this.attention_supported = this.isFeatureSupported(iq, Strophe.NS.ATTENTION);\n                callback && callback();\n            });\n        }\n    },\n\n    isFeatureSupported: function (stanza, ns) {\n        let $stanza = $(stanza), is_supported = false;\n        $stanza.find('feature').each(function () {\n            let namespace = $(this).attr('var');\n            if (namespace === ns)\n                is_supported = true;\n        });\n        return is_supported;\n    },\n});\n\nxabber.ResourcesView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.renderByInit();\n        this.model.on(\"add\", this.onResourceAdded, this);\n        this.model.on(\"remove\", this.onResourceRemoved, this);\n        this.model.on(\"reset\", this.onReset, this);\n        this.model.on(\"change:priority\", this.onPriorityChanged, this);\n    },\n\n    renderByInit: function () {\n        this.model.each((resource) => {\n            this.onResourceAdded(resource);\n        });\n    },\n\n    onResourceAdded: function (resource) {\n        this.model.requestInfo(resource);\n        this.addChild(resource.get('resource'),\n            xabber.ResourceView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    onPriorityChanged: function (resource) {\n        this.model.sort();\n        this.updatePosition(resource);\n    }\n});\n\nxabber.AccountResources = xabber.Resources.extend({\n    initialize: function (models, options) {\n        this.jid = options.account.get('jid');\n        this.connection = options.account.connection;\n    }\n});\n\nxabber.AccountResourcesView = xabber.ResourcesView.extend({\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.parent.updateScrollBar();\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.parent.updateScrollBar();\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.main-resource').after(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.AccountVCardModalView = xabber.VCardView.extend({\n    template: env.templates.vcard.vcard_modal,\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .btn-vcard-edit\": \"showEditView\",\n        \"click .details-icon\": \"onClickIcon\"\n    },\n\n    __initialize: function () {\n        this.updateButtons();\n        this.model.on(\"activate deactivate\", this.updateButtons, this);\n    },\n\n    updateButtons: function () {\n        let connected = this.model.isConnected();\n        this.$('.btn-vcard-edit').showIf(connected);\n        this.$('.btn-vcard-refresh').showIf(connected);\n    },\n\n    showEditView: function ($el) {\n        this.vcard_edit_modal = new xabber.VCardEditModalView({model: this.model});\n        this.vcard_edit_modal.show({$el: $el});\n    }\n});\n\nxabber.AccountMediaGalleryView = xabber.BasicView.extend({\n    template: templates.media_gallery_account,\n    events: {\n        \"change input.gallery-upload\": \"onFileInputChanged\",\n        \"click .gallery-file:not(.gallery-avatar) .btn-delete\": \"deleteFile\",\n        \"click .gallery-file.gallery-avatar .btn-delete\": \"deleteAvatar\",\n        \"click .gallery-file .checkbox-field\": \"selectFile\",\n        \"click .btn-delete-selection\": \"deleteSelectedFiles\",\n        \"click .settings-tab:not(.settings-deletion-button)\": \"onTabClick\",\n        \"click .show-deletion\": \"showDeleteFilesView\",\n        \"click .btn-back-gallery\": \"backToMain\",\n        \"click .gallery-file\": \"onClickFile\",\n        \"click .btn-close-selection\": \"disableFilesSelect\",\n    },\n\n    _initialize: function () {\n        this.account = this.model;\n        this.$el.html(this.template());\n        this.parent.ps_container.on(\"ps-scroll-y\", this.onScroll.bind(this));\n        this.account.on(\"update_avatar_list\", this.onUpdateAvatars.bind(this));\n    },\n\n    render: function () {\n        this.updateStorage();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n    },\n\n    onScroll: function () {\n        if (this.$el.hasClass('hidden'))\n            return;\n        let scrollTop = this.parent.ps_container[0].scrollTop,\n            scrollHeight = this.parent.ps_container[0].scrollHeight,\n            offsetHeight = this.parent.ps_container[0].offsetHeight,\n            persentScrolled = scrollTop / (scrollHeight - offsetHeight);\n        if (persentScrolled > 0.8 && !this.loading_files && (this.current_page < this.total_pages)){\n            this.current_page++;\n            this.current_options.page = this.current_page;\n            if (this.current_options.type === 'avatars'){\n                this.getAvatars(this.current_options)\n            } else {\n                this.getFiles(this.current_options)\n            }\n        }\n    },\n\n    updateStorage: function (after_deletion, after_avatar_update) {\n        this.account.getStorageStats(null,(response) => {\n            let used_storage = utils.pretty_size(response.total.used) || '0';\n            this.$('.btn-delete-files-dropdown').hideIf(!(response.total && response.total.used))\n            this.$('.gallery-manage-storage').hideIf(!(response.total && response.total.used))\n            this.$('.storage-usage').html(used_storage + xabber.getString(\"of\") + utils.pretty_size(response.quota))\n            this.$('.storage-usage-images').hideIf(!(response.images && response.images.used))\n            this.$('.storage-label-images').hideIf(!(response.images && response.images.used))\n            response.images && !_.isUndefined(response.images.used) && this.$('.storage-usage-images .storage-usage-amount').html(utils.pretty_size(response.images.used))\n            this.$('.storage-label-videos').hideIf(!(response.videos && response.videos.used))\n            this.$('.storage-usage-videos').hideIf(!(response.videos && response.videos.used))\n            response.videos && !_.isUndefined(response.videos.used) && this.$('.storage-usage-videos .storage-usage-amount').html(utils.pretty_size(response.videos.used))\n            this.$('.storage-label-voices').hideIf(!(response.voices && response.voices.used))\n            this.$('.storage-usage-voices').hideIf(!(response.voices && response.voices.used))\n            response.voices && !_.isUndefined(response.voices.used) && this.$('.storage-usage-voices .storage-usage-amount').html(utils.pretty_size(response.voices.used))\n            this.$('.storage-label-files').hideIf(!(response.files && response.files.used))\n            this.$('.storage-usage-files').hideIf(!(response.files && response.files.used))\n            response.files && !_.isUndefined(response.files.used) && this.$('.storage-usage-files .storage-usage-amount').html(utils.pretty_size(response.files.used))\n            this.$('.storage-label-avatars').hideIf(!(response.avatars && response.avatars.used))\n            response.avatars && !_.isUndefined(response.avatars.used) && this.$('.storage-usage-avatars .storage-usage-amount').html(utils.pretty_size(response.avatars.used))\n\n            if (response.images){\n                this.$('.storage-progress-images').css('width', ((response.images.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.videos){\n                this.$('.storage-progress-videos').css('width', ((response.videos.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.voices){\n                this.$('.storage-progress-voices').css('width', ((response.voices.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.files){\n                this.$('.storage-progress-files').css('width', ((response.files.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.avatars){\n                this.$('.storage-progress-avatars').css('width', ((response.avatars.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (this.parent){\n                this.parent.$('.settings-tab[data-block-name=\"media-gallery\"] .settings-block-label')\n                    .text(xabber.getString(\"settings_account__storage_label\", [utils.pretty_size(response.total.used), utils.pretty_size(response.quota)]));\n                this.parent.updateHeight();\n            }\n            if (xabber.settings_modal_view.$('.settings-tab[data-block-name=\"media-gallery\"] .settings-block-label').length){\n                xabber.settings_modal_view.$('.settings-tab[data-block-name=\"media-gallery\"] .settings-block-label')\n                    .text(xabber.getString(\"settings_account__storage_label\", [utils.pretty_size(response.total.used), utils.pretty_size(response.quota)]));\n                xabber.settings_modal_view.updateHeight();\n            }\n        });\n    },\n\n    filterType: function (file_type, sorting) {\n        this.$('.gallery-files').html('')\n        if (file_type === 'image' || file_type === 'video' || file_type === 'avatars') {\n            this.$('.gallery-files').removeClass('voice');\n            this.$('.gallery-files').removeClass('file');\n            this.$('.gallery-files').addClass('grid');\n        } else if (file_type === 'voice') {\n            this.$('.gallery-files').addClass('voice')\n            this.$('.gallery-files').removeClass('file');\n            this.$('.gallery-files').removeClass('grid')\n        } else {\n            this.$('.gallery-files').removeClass('voice')\n            this.$('.gallery-files').addClass('file');\n            this.$('.gallery-files').removeClass('grid')\n        }\n        let options = {type: file_type}\n        sorting && (options.order_by = sorting)\n        this.current_options = options\n        if (file_type === 'avatars')\n            this.getAvatars(options)\n        else\n            this.getFiles(options)\n    },\n\n    onTabClick: function (ev) {\n        let $target = $(ev.target).closest('.settings-tab'),\n            file_type = $target.attr('data-media-type'),\n            tab_header = $target.attr('data-header-text');\n        this.current_page = 1;\n        this.total_pages = 0;\n        this.parent.$('.btn-back-settings').addClass('hidden');\n        this.parent.$('.settings-panel-head-title').text(tab_header);\n        this.parent.$('.btn-select-files').removeClass('hidden');\n        this.parent.$('.btn-sorting').removeClass('hidden');\n        this.parent.$('.btn-more.media-gallery-button').removeClass('hidden');\n        this.$('.gallery-wrap').addClass('hidden');\n        this.$('.media-gallery-items-wrap').removeClass('hidden');\n        this.$('.media-gallery-items-wrap').attr('data-value', file_type);\n        this.$('.gallery-files').html('')\n        this.filterType(file_type);\n        if (this.parent){\n            this.parent.updateHeight();\n        }\n        if (xabber.settings_modal_view){\n            xabber.settings_modal_view.updateHeight();\n        }\n    },\n\n    backToMain: function (ev) {\n        this.parent.$('.btn-back-settings').removeClass('hidden');\n        this.parent.$('.btn-select-files').addClass('hidden');\n        this.parent.$('.btn-sorting').addClass('hidden');\n        this.parent.$('.settings-panel-head-title').text(xabber.getString(\"account_cloud_storage\"));\n        this.parent.$('.btn-more.media-gallery-button').addClass('hidden');\n        this.$('.gallery-wrap').removeClass('hidden');\n        this.$('.media-gallery-items-wrap').addClass('hidden');\n        this.updateStorage();\n        if (this.parent){\n            this.parent.updateHeight();\n        }\n        if (xabber.settings_modal_view){\n            xabber.settings_modal_view.updateHeight();\n        }\n    },\n\n    onUpdateAvatars: function (ev) {\n        this.updateStorage(false, true);\n        if (this.$('.media-gallery-items-wrap').attr('data-value') === 'avatars'){\n            this.current_page = 1;\n            this.total_pages = 0;\n            this.$('.gallery-files').html('');\n            this.filterType('avatars');\n        }\n    },\n\n    showDeleteFilesView: function (ev) {\n        xabber.trigger('show_delete_files', {model: this.account, gallery_view: this});\n    },\n\n    sortFiles: function (ev) {\n        let $target = $(ev.target).closest('.btn-gallery-sorting'),\n            file_type = this.$('.media-gallery-items-wrap').attr('data-value'),\n            sort_type = $target.attr('data-value');\n        this.current_page = 1;\n        this.total_pages = 0;\n        this.$('.gallery-files').html('')\n        this.filterType(file_type, sort_type);\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('uploaded-video')) {\n            let $file = $elem.closest('.gallery-file'),\n                f_url = $file.attr('data-file');\n\n            utils.dialogs.common('', '<video class=\"gallery-video-frame\" controls autoplay=1 width=\"420\" height=\"315\" src=\"' + f_url +'\"></video>', null, null, null, 'gallery-video-modal')\n            return;\n        }\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n\n        if ($elem.hasClass('mdi-play')) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n\n        if ($elem.hasClass('mdi-pause')) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.gallery-file');\n        $elem.addClass('voice-message-rendering').html($(templates.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, unique_id);\n\n        aud.on('ready', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('no-uploaded');\n            $msg_element.find('.gallery-file-placeholder-background').removeClass('gallery-audio-file-not-uploaded');\n            let duration = Math.round(aud.getDuration());\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n            aud.play();\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').addClass('mdi-pause').removeClass('mdi-play');\n            $msg_element.addClass('playing');\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n        });\n\n        aud.on('finish', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createAudio: function(file_url, unique_id) {\n        let audio = WaveSurfer.create({\n            container: \"#\" + unique_id,\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n\n    getFiles: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            options = Object.assign({obj_per_page: 50, order_by: '-id'}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                if (this.loading_files && this.current_rendered_type === options.type && !options.page)\n                    return;\n                this.current_rendered_type = options.type;\n                if (options.type === 'voice'){\n                    options.contexts = 'voice';\n                    delete options.type;\n                }\n                this.loading_files = true\n                $(env.templates.contacts.preloader()).appendTo(this.$('.gallery-files'))\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        if (options.type)\n                            response.type = options.type;\n                        else if (options.contexts)\n                            response.type = options.contexts;\n                        this.renderFiles(response)\n                        this.loading_files = false\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        this.current_rendered_type = undefined;\n                        console.log(response)\n                        this.loading_files = false\n                        this.$('.gallery-files .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    getAvatars: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            options = Object.assign({obj_per_page: 50, order_by: '-id', type: \"avatars\", contexts: \"avatar\"}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                if (this.loading_files && this.current_rendered_type === options.type && !options.page)\n                    return;\n                this.current_rendered_type = options.type;\n                this.loading_files = true\n                delete options.type;\n                $(env.templates.contacts.preloader()).appendTo(this.$('.gallery-files'))\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        response.type = 'avatars';\n                        this.renderFiles(response)\n                        this.loading_files = false\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        this.current_rendered_type = undefined\n                        console.log(response)\n                        this.loading_files = false\n                        this.$('.gallery-files .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    renderFiles: function (response) {\n        if (response.type != this.$('.media-gallery-items-wrap').attr('data-value'))\n            return;\n        this.total_pages = response.total_pages;\n        this.$('.gallery-files .preloader-wrapper').remove();\n        if (response.items && response.items.length){\n            response.items.forEach((item) => {\n                item.thumbnail && item.thumbnail.url && (item.thumbnail = item.thumbnail.url);\n                let duration;\n                item.metadata && item.metadata.duration && (duration = utils.pretty_duration(item.metadata.duration));\n                let $gallery_file = $(templates.media_gallery_account_file({\n                    file: item,\n                    svg_icon: utils.file_type_icon_svg(item.media_type),\n                    filesize: utils.pretty_size(item.size),\n                    created_at: utils.pretty_date(item.created_at),\n                    duration: duration,\n                    download_only: false,\n                }));\n                (response.type === 'avatars') && $gallery_file.addClass('gallery-avatar');\n                $gallery_file.appendTo(this.$('.gallery-files'));\n                $gallery_file.find('.uploaded-img').length && $gallery_file.find('.uploaded-img').magnificPopup({\n                    type: 'image',\n                    closeOnContentClick: true,\n                    fixedContentPos: true,\n                    mainClass: 'mfp-no-margins mfp-with-zoom',\n                    image: {\n                        verticalFit: true,\n                        titleSrc: function(item) {\n                            return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                        }\n                    },\n                    zoom: {\n                        enabled: true,\n                        duration: 300\n                    }\n                });\n            });\n        }\n        else {\n            this.$('.gallery-files').html(`<div class=\"no-files\">${xabber.getString(\"no_files\")}</div>`)\n        }\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings)\n        if (this.parent && this.parent.updateHeight)\n            this.parent.updateHeight();\n    },\n\n    deleteFile: function (ev) {\n        let $target = $(ev.target).closest('.gallery-file'),\n            file_id = $target.attr('data-id');\n        this.account.deleteFile(file_id,(response) => {\n            $target.detach();\n        }, (err) => {\n        })\n    },\n\n    deleteAvatar: function (ev) {\n        this.account.testGalleryTokenExpire(() => {\n            let $target = $(ev.target).closest('.gallery-file'),\n                file_id = $target.attr('data-id');\n            if (this.account.get('gallery_token') && this.account.get('gallery_url') && file_id)\n                $.ajax({\n                    type: 'DELETE',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({id: file_id, contexts: ['avatar']}),\n                    success: (response) => {\n                        $target.detach();\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n        });\n    },\n\n    enableFilesSelect: function (ev) {\n        this.$('.media-gallery-items-wrap').addClass('select-items-state');\n        this.parent.$('.settings-panel-head-title').addClass('hidden');\n        this.parent.$('.btn-more.media-gallery-button').addClass('hidden');\n        this.parent.$('.btn-back-settings').addClass('hidden');\n        this.onSelectFile();\n    },\n\n    disableFilesSelect: function (ev) {\n        this.$('.media-gallery-items-wrap').removeClass('select-items-state');\n        this.parent.$('.settings-panel-head-title').removeClass('hidden');\n        this.parent.$('.btn-more.media-gallery-button').removeClass('hidden');\n        this.parent.$('.btn-back-settings').removeClass('hidden');\n        this.$('.gallery-file .checkbox-field input:checked').prop('checked', false);\n    },\n\n    selectFile: function (ev) {\n        let $target_input = $(ev.target).closest('.checkbox-field').find('input');\n        $target_input.prop('checked', !$target_input.prop('checked'));\n        this.onSelectFile();\n    },\n\n    onSelectFile: function () {\n        if (!this.$('.media-gallery-items-wrap').attr('data-value'))\n            return;\n        let selected_count = this.$('.gallery-file .checkbox-field input:checked').length,\n            selected_header;\n        selected_header = xabber.getQuantityString(`media_gallery_selected_${this.$('.media-gallery-items-wrap').attr('data-value')}_header`, selected_count);\n        this.$('.gallery-selection-head').text(selected_header);\n\n        this.$('.gallery-file .checkbox-field input:checked').closest('.gallery-file').addClass('selected-gallery-file');\n        this.$('.gallery-file .checkbox-field input:not(:checked)').closest('.gallery-file').removeClass('selected-gallery-file');\n    },\n\n    deleteSelectedFiles: function () {\n        this.$('.gallery-file .checkbox-field input:checked').each((idx, item) => {\n            let file_id = $(item).closest('.gallery-file').attr('data-id');\n            if (file_id){\n                if (this.$('.media-gallery-items-wrap').attr('data-value') === 'avatars'){\n                    this.deleteAvatar({target: item});\n                } else {\n                    this.deleteFile({target: item});\n                }\n            }\n        })\n        this.disableFilesSelect();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target,\n            files = [];\n        for (let i = 0; i < target.files.length; i++) {\n            files.push(target.files[i]);\n        }\n\n        if (files) {\n            this.account.prepareFiles(files, this.openStoragePanel.bind(this));\n            $(target).val('')\n        }\n    },\n});\n\nxabber.DeleteFilesFromGalleryView = xabber.BasicView.extend({\n    className: 'modal main-modal delete-files-modal',\n    ps_selector: '.modal-content',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    template: templates.delete_files_media_gallery,\n    events: {\n        \"click .btn-confirm\": \"deleteFilesFiltered\",\n        \"click .btn-delete-files-percent\": \"deletePercent\",\n        \"click .btn-cancel\": \"close\",\n        \"click .gallery-file\": \"onClickFile\",\n        \"change #delete_avatars\": \"onChangeCheckbox\",\n    },\n\n    render: function (options) {\n        this.account = options.model;\n        this.gallery_view = options.gallery_view;\n        this.delete_percent = null;\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function (options) {\n        this.$el.removeClass('wide-deletion');\n        this.$('.media-gallery-delete-items-wrap').addClass('hidden');\n        this.$('.deletion-variants').removeClass('hidden');\n        this.$('.modal-footer').addClass('hidden');\n        this.$('.gallery-files').addClass('hidden');\n        this.$('.list-variant.tab').addClass('hidden');\n        this.$('.delete-files-preview-container').addClass('hidden');\n        this.$('.setting-name').addClass('hidden');\n        this.$('.delete-files-preview-wrap .gallery-files').html('');\n        this.$('.media-gallery-delete-items-wrap .no-files').addClass('hidden');\n        this.$('.modal-header').text(xabber.getString(\"media_gallery_delete_files\"));\n        this.$('.delete-avatars-checkbox input').prop('checked', false);\n        this.$('.btn-confirm').prop('disabled', false);\n        this.$('.delete-avatars-checkbox').addClass('hidden');\n        this.$('.delete-avatars-checkbox').addClass('hidden2');\n        this.updateScrollBar();\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target),\n            gallery;\n\n        if ($elem.hasClass('uploaded-video')) {\n            let $file = $elem.closest('.gallery-file'),\n                f_url = $file.attr('data-file');\n\n            utils.dialogs.common('', '<video class=\"gallery-video-frame\" controls autoplay=1 width=\"420\" height=\"315\" src=\"' + f_url +'\"></video>', null, null, null, 'gallery-video-modal')\n            return;\n        }\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.gallery_view.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n\n        if ($elem.hasClass('mdi-play')) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n\n        if ($elem.hasClass('mdi-pause')) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n    },\n\n    onChangeCheckbox: function (ev) {\n        let $elem = $(ev.target);\n        this.delete_avatars = $elem.prop('checked');\n        this.$('.delete-files-avatars').switchClass('hidden', !$elem.prop('checked'));\n        if (!this.has_files) {\n            this.$('.media-gallery-delete-items-wrap .no-files').switchClass('hidden', $elem.prop('checked'));\n            this.$('.delete-files-text').switchClass('hidden', !$elem.prop('checked'));\n            this.$('.btn-confirm').prop('disabled', !$elem.prop('checked'));\n        }\n    },\n\n    deletePercent: function (ev) {\n        let $target = $(ev.target).closest('.btn-delete-files-percent'),\n            percent = $target.attr('data-value');\n        this.$el.addClass('wide-deletion');\n        this.$('.deletion-variants').addClass('hidden');\n        this.$('.modal-header').text(xabber.getString(\"media_gallery_delete_files_header\"));\n        this.updateScrollBar();\n        this.delete_avatars = false;\n        this.delete_percent = percent;\n        this.has_files = false;\n        this.current_page_preview = 1\n        $(env.templates.contacts.preloader()).appendTo(this.$('.modal-content'))\n        this.getFilesForDeletion();\n    },\n\n    getFilesForDeletion: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            !options && (options = {});\n            options = Object.assign({obj_per_page: 50}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                let url;\n                if (this.delete_percent === '100'){\n                    url = this.account.get('gallery_url') + 'v1/files/';\n                    options.contexts = ['file', 'avatar', 'voice'];\n                } else {\n                    url = this.account.get('gallery_url') + 'v1/files/percent/' + this.delete_percent + '/';\n                }\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: url,\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    traditional: true,\n                    success: (response) => {\n                        console.log(response)\n                        let current_page = this.current_page_preview;\n                        if (current_page < response.total_pages){\n                            this.current_page_preview++;\n                            options.page = this.current_page_preview;\n                            this.getFilesForDeletion(options)\n                        } else {\n                            this.$('.preloader-wrapper').remove();\n                            this.$('.modal-footer').removeClass('hidden');\n                            this.$('.media-gallery-delete-items-wrap').removeClass('hidden');\n                            if (this.delete_percent === '100'){\n                                this.$('.delete-avatars-checkbox').removeClass('hidden');\n                            }\n                            this.updateScrollBar();\n                        }\n                        this.renderForDeletion(response);\n                        if (current_page === 1 && response.items && response.items.length){\n                            if (!this.has_files) {\n                                this.$('.media-gallery-delete-items-wrap .no-files').removeClass('hidden');\n                                this.$('.delete-files-text').addClass('hidden');\n                                this.$('.btn-confirm').prop('disabled', true);\n                            }\n                        } else if (current_page === 1 && response.items) {\n                            this.$('.media-gallery-delete-items-wrap .no-files').removeClass('hidden');\n                            this.$('.delete-files-text').addClass('hidden');\n                            this.$('.btn-confirm').prop('disabled', true);\n                        }\n                    },\n                    error: (response) => {\n                        console.log(response)\n                        this.$('.preloader-wrapper').remove();\n                        this.$('.media-gallery-delete-items-wrap .no-files').removeClass('hidden');\n                        this.$('.delete-files-text').addClass('hidden');\n                        this.$('.btn-confirm').prop('disabled', true);\n                        this.updateScrollBar();\n                    }\n                });\n            }\n        });\n    },\n\n    renderForDeletion: function (response) {\n        if (response.items && response.items.length){\n            response.items.forEach((item) => {\n                item.thumbnail && item.thumbnail.url && (item.thumbnail = item.thumbnail.url);\n                item.is_avatar = Boolean(item.context === 'avatar');\n                let duration;\n                item.metadata && item.metadata.duration && (duration = utils.pretty_duration(item.metadata.duration));\n                let $gallery_file = $(templates.media_gallery_account_file({\n                    file: item,\n                    svg_icon: utils.file_type_icon_svg(item.media_type),\n                    filesize: utils.pretty_size(item.size),\n                    created_at: utils.pretty_date(item.created_at),\n                    duration: duration,\n                    download_only: true,\n                }));\n                if (!item.is_avatar){\n                    this.has_files = true;\n                }\n                if (item.is_avatar) {\n                    $gallery_file.appendTo(this.$('.gallery-files.delete-files-avatars'));\n                    if (this.delete_percent !== '100')\n                        this.$('.delete-files-avatars').removeClass('hidden');\n                    else {\n                        this.$('.delete-avatars-checkbox').removeClass('hidden2');// сделать чтобы рисовало no files если при 100% есть только аватары и скрывалось появлялось на нажатие чекбокса,\n\n                    }\n                } else if (item.media_type && item.media_type.includes('image')){\n                    $gallery_file.appendTo(this.$('.gallery-files.delete-files-images'));\n                    this.$('.delete-files-images').removeClass('hidden');\n                } else if (item.media_type && item.media_type.includes('video')){\n                    $gallery_file.appendTo(this.$('.gallery-files.delete-files-videos'));\n                    this.$('.delete-files-videos').removeClass('hidden');\n                } else if (item.media_type && item.context === 'voice'){\n                    $gallery_file.appendTo(this.$('.gallery-files.delete-files-voices'));\n                    this.$('.delete-files-voices').removeClass('hidden');\n                } else {\n                    $gallery_file.appendTo(this.$('.gallery-files.delete-files-files'));\n                    this.$('.delete-files-files').removeClass('hidden');\n                }\n                $gallery_file.find('.uploaded-img').length && $gallery_file.find('.uploaded-img').magnificPopup({\n                    type: 'image',\n                    closeOnContentClick: true,\n                    fixedContentPos: true,\n                    mainClass: 'mfp-no-margins mfp-with-zoom',\n                    image: {\n                        verticalFit: true,\n                        titleSrc: function(item) {\n                            return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                        }\n                    },\n                    zoom: {\n                        enabled: true,\n                        duration: 300\n                    }\n                });\n            });\n            let dropdown_settings = {\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'right'\n            };\n            this.$('.dropdown-button').dropdown(dropdown_settings)\n            this.$('.list-variant.tab:not(.hidden)').length && this.$('.list-variant.tab:not(.hidden)').first().click();\n            this.updateScrollBar();\n        }\n    },\n\n    deleteFilesFiltered: function (ev) {\n        if (!this.delete_percent)\n            return\n\n        utils.dialogs.ask(xabber.getString(\"media_gallery_delete_files_confirm_delete_header\"), xabber.getString(\"media_gallery_delete_files_confirm_delete_text\"),\n            null, { ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n            if (!res)\n                return;\n            $(env.templates.contacts.preloader()).appendTo(this.$('.modal-footer'))\n            this.account.testGalleryTokenExpire(() => {\n                if (this.account.get('gallery_token') && this.account.get('gallery_url')){\n                    let options = {}, url;\n                    if (this.delete_percent === '100'){\n                        url = this.account.get('gallery_url') + 'v1/files/';\n                        if (this.delete_avatars)\n                            options.contexts = ['file', 'avatar', 'voice'];\n                        else\n                            options.contexts = ['file', 'voice'];\n                    } else {\n                        url = this.account.get('gallery_url') + 'v1/files/percent/' + this.delete_percent + '/';\n                    }\n                    $.ajax({\n                        type: 'DELETE',\n                        headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                        url: url ,\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: JSON.stringify(options),\n                        success: (response) => {\n                            console.log(response);\n                            this.close();\n                        },\n                        error: (response) => {\n                            this.account.handleCommonGalleryErrors(response)\n                            this.close();\n                            console.log(response)\n                        }\n                    });\n                }\n            });\n        });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n        this.gallery_view.updateStorage();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.AccountSettingsModalView = xabber.BasicView.extend({\n    className: 'settings-panel-wrap',\n    template: templates.account_settings_modal,\n    ps_selector: '.settings-panel',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    avatar_size: constants.AVATAR_SIZES.ACCOUNT_SETTINGS_LEFT,\n\n    events: {\n        \"click .background-overlay\": \"closeSettings\",\n        \"change .main-info-wrap .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-back\": \"showSettings\",\n        \"click .btn-back-settings\": \"backToMenu\",\n        \"click .btn-back-subsettings-account\": \"backToSubMenu\",\n        \"click .btn-emoji-panel\": \"openEmojiPanel\",\n        \"click .btn-selfie\": \"openWebcamPanel\",\n        \"click .settings-tab[data-block-name='status']\": \"openChangeStatus\",\n        \"click .settings-tabs-wrap .settings-tab:not(.delete-account):not(.settings-non-tab)\": \"jumpToBlock\",\n        \"click .tokens-wrap .settings-tab.token-wrap\": \"jumpToBlock\",\n        \"click .settings-tab.delete-account\": \"deleteAccount\",\n        \"click .settings-tab.unregister-account\": \"unregisterAccount\",\n\n        \"change .enabled-state input\": \"setEnabled\",\n        \"change .setting-send-chat-states input\": \"setTypingNotification\",\n        \"change .setting-use-omemo input\": \"setEnabledOmemo\",\n        \"click .btn-change-password\": \"showPasswordView\",\n        \"click .btn-reconnect\": \"reconnect\",\n        \"click\": \"hideResources\",\n        \"change .sync-account\": \"changeSyncSetting\",\n        \"click .btn-delete-settings\": \"deleteSettings\",\n        \"click .color-picker-button\": \"changeColor\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-revoke-token\": \"revokeXToken\",\n        \"click .devices-wrap .btn-revoke-all-tokens\": \"revokeAllXTokens\",\n        \"click .btn-manage-devices\": \"openDevicesWindow\",\n        \"click .btn-block\": \"openBlockWindow\",\n        \"click .blocked-contact input\": \"selectUnblock\",\n        \"click .btn-unblock-selected\": \"unblockSelected\",\n        \"click .btn-deselect-blocked\": \"deselectBlocked\",\n        \"click .btn-gallery-sorting\": \"sortFiles\",\n        \"click .btn-select-files\": \"enableFilesSelect\",\n        \"click .all-sessions .device-encryption.active\": \"openFingerprint\",\n        \"click .device-information-trust\": \"openFingerprintDevice\",\n        \"click .btn-purge-keys\": \"purgeKeys\"\n    },\n\n    _initialize: function (options) {\n        if (options.forced_ps_container){\n            this.ps_container = options.forced_ps_container;\n        }\n        this.status_field = new xabber.StatusMessageModalWidget({\n            el: this.$('.status-wrap')[0],\n            model: this.model\n        });\n        this.updateName();\n        this.updateAvatar();\n        this.updateBlocks();\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.on(\"change:gallery_token\", this.updateGallery, this);\n        this.model.on(\"activate deactivate\", this.updateBlocks, this);\n        this.model.on(\"destroy\", this.remove, this);\n\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n\n        this.vcard_view = this.addChild('vcard', xabber.AccountVCardModalView,\n            {model: this.model,});\n        this.gallery_view = this.addChild('media-gallery', xabber.AccountMediaGalleryView,\n            {model: this.model, el: this.$('.media-gallery')[0]});\n        this.$('.account-name .value').text(this.model.get('jid'));\n        this.updateStatus();\n        this.updateView();\n        this.showConnectionStatus();\n        this.updateSynchronizationBlock();\n\n        this.model.resources.on(\"change\", this.updateXTokens, this);\n        this.model.resources.on(\"add\", this.updateXTokens, this);\n        this.model.resources.on(\"destroy\", this.updateXTokens, this);\n        this.model.groups.on(\"change\", this.updateGroupsLabel, this);\n        this.model.groups.on(\"add\", this.updateGroupsLabel, this);\n        this.model.groups.on(\"destroy\", this.updateGroupsLabel, this);\n        this.model.session.on(\"change:reconnecting\", this.updateReconnectButton, this);\n        this.model.session.on(\"change:conn_feedback\", this.showConnectionStatus, this);\n        this.model.settings.on(\"change:to_sync\", this.updateSyncOption, this);\n        this.model.settings.on(\"change:deleted\", this.updateDelSettingsButton, this);\n        this.model.settings.on(\"change:to_sync change:synced\", this.updateSyncState, this);\n        this.model.on(\"change:enabled\", this.updateEnabled, this);\n        this.model.on(\"update_omemo_devices\", this.updateOmemoDevices, this);\n        this.model.on('trusting_updated', this.updateOmemoDevices, this);\n        this.model.on('trusting_updated', this.updateXTokens, this);\n        this.model.settings.on(\"change:omemo\", this.updateEnabledOmemo, this);\n        this.model.settings.on(\"change:encrypted_chatstates\", this.updateEncryptedChatstates, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"activate deactivate\", this.updateView, this);\n        this.model.on(\"change:auth_type\", this.updateView, this);\n        this.model.on(\"destroy\", this.remove, this);\n        if (options && !options.single_account_modal) {\n            $(document).on(\"keyup.account_settings_modal\", (ev) => {\n                if (ev.keyCode === constants.KEY_ESCAPE && this.data.get('visible') && !options.single_account_modal) {\n                    this.closeSettings();\n                }\n            });\n        }\n    },\n\n    render: function (options) {\n        this.$('.circle-avatar.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        this.updateCSS();\n\n        this.updateEnabledOmemo();\n        this.updateEncryptedChatstates();\n        this.updateEnabled();\n        this.updateXTokens();\n        this.updateGroupsLabel();\n        this.updateView();\n        this.$('.main-resource .client').text(constants.CLIENT_NAME);\n        this.$('.main-resource .resource').text(this.model.resource);\n        this.$('.main-resource .priority').text(this.model.get('priority'));\n        this.$(`.color-scheme input[type=radio][name=account_color][value=\"${this.model.settings.get('color')}\"]`)\n            .prop('checked', true);\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n        this.$('.panel-content-wrap').removeClass('hidden');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.updateOmemoDevices;\n        this.$('.left-column').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.$('.btn-back-settings').removeClass('hidden');\n        this.$('.btn-back-subsettings-account').addClass('hidden');\n        this.$('.btn-sorting').addClass('hidden');\n        this.$('.settings-panel-head-title').removeClass('hidden');\n        this.$('.media-gallery-button.btn-more').addClass('hidden');\n        this.updateHeight();\n        this.updateBlockedLabel();\n        if (options && options.block_name) {\n            let $elem = this.$(`.settings-tab[data-block-name=\"${options.block_name}\"]`);\n            if ($elem.length)\n                this.jumpToBlock({target: $elem[0]});\n        }\n        return this;\n    },\n\n    updateHeight: function () {\n        let height;\n        if (!this.$('.left-column').hasClass('hidden'))\n            height = this.$('.left-column').height();\n        if (!this.$('.right-column').hasClass('hidden'))\n            height = this.$('.right-column').height();\n        this.ps_container.css('height', height + 'px');\n        this.updateScrollBar();\n    },\n\n    updateBlockedLabel: function () {\n        if (!(this.model.blocklist && this.model.blocklist.list))\n            return;\n\n        let blocked_count = Object.keys(this.model.blocklist.list).length,\n            label_text = blocked_count === 0 ? xabber.getString(\"no_entries\") : xabber.getQuantityString(\"entry_count\", blocked_count);\n        this.$('.settings-tab[data-block-name=\"blocklist\"] .settings-block-label').text(label_text);\n    },\n\n    onScrollY: function () {\n        if (this.getScrollTop() === 0)\n            this.$('.settings-panel-head').removeClass('lined-head');\n        else\n            this.$('.settings-panel-head').addClass('lined-head');\n        if (this.getScrollTop() >= 180)\n            this.$('.settings-account-head').addClass('head-scrolled');\n        else\n            this.$('.settings-account-head').removeClass('head-scrolled');\n    },\n\n    jumpToBlock: function (ev) {\n        this.jumpToBlockHandler(ev);\n    },\n\n    jumpToBlockHandler: function (ev) {\n        if ($(ev.target).closest('.device-encryption').length || $(ev.target).closest('.btn-revoke-token').length)\n            return;\n\n        let $tab = $(ev.target).closest('.settings-tab'),\n            $elem = this.$('.settings-block-wrap.' + $tab.attr('data-block-name')),\n            block_name = $tab.attr('data-block-name');\n        if (block_name){\n            this.$('.device-more-button.btn-more').hideIf(block_name != 'encryption');\n            if (block_name != 'media-gallery'){\n                this.$('.media-gallery-button.btn-more').addClass('hidden');\n            }\n        }\n        if (block_name === 'password'){\n            xabber.trigger('change_account_password', this.model);\n            return;\n        }\n        this.$('.settings-block-wrap').addClass('hidden');\n        this.$('.left-column').addClass('hidden');\n        this.$('.right-column').removeClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span.settings-panel-head-title').text($elem.attr('data-header'));\n        if (block_name === 'media-gallery'){\n            this.gallery_view.$('.media-gallery-items-wrap:not(.delete-files-preview-wrap)').removeClass('select-items-state');\n            this.gallery_view.disableFilesSelect();\n            this.gallery_view.backToMain();\n        }\n        if (block_name === 'blocklist'){\n            this.$('.blocklist-tabs-wrap .tabs .indicator').remove();\n            this.$('.blocklist-tabs-wrap .tabs').tabs();\n            this.$('.blocklist-tabs-wrap .indicator').addClass('ground-color-500');\n        }\n        if (block_name === 'vcard-tab'){\n            this.vcard_view.showEditView(this.$('.vcard'));\n        }\n        if (block_name === 'device-information'){\n            $elem.attr('data-token-uid', $tab.attr('data-token-uid'));\n            this.updateDeviceInformation($tab.attr('data-token-uid'));\n        }\n        this.$('.btn-back-subsettings-account').attr('data-subblock-parent-name', '');\n        if ($tab.closest('.right-column') && $tab.attr('data-subblock-parent-name')) {\n            this.$('.btn-back-settings').addClass('hidden');\n            this.$('.btn-back-subsettings-account').removeClass('hidden');\n            this.$('.btn-back-subsettings-account').attr('data-subblock-parent-name', $tab.attr('data-subblock-parent-name'));\n        }\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    backToMenu: function (ev) {\n        this.backToMenuHandler(ev);\n    },\n\n    backToMenuHandler: function (ev) {\n        this.$('.left-column').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    backToSubMenu: function (ev) {\n        this.backToSubMenuHandler(ev);\n    },\n\n    backToSubMenuHandler: function (ev) {\n        let $tab = $(ev.target).closest('.btn-back-subsettings-account'),\n            block_name = $tab.attr('data-subblock-parent-name');\n        if (!block_name){\n            this.backToMenu(ev);\n            return;\n        }\n        let $elem = this.$('.settings-block-wrap.' + block_name),\n            elem_parent = $elem.attr('data-parent-block');\n        if (block_name){\n            this.$('.device-more-button.btn-more').hideIf(block_name != 'encryption');\n        }\n        this.$('.settings-block-wrap').addClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span.settings-panel-head-title').text($elem.attr('data-header'));\n        if (elem_parent) {\n            $tab.attr('data-subblock-parent-name', elem_parent);\n            this.deselectBlocked();\n        } else {\n            this.$('.btn-back-settings').removeClass('hidden');\n            this.$('.btn-back-subsettings-account').addClass('hidden');\n        }\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.model.get('name'));\n        this.$('.jid').text(this.model.get('jid'));\n        this.updateNameCSS();\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateBlocks: function () {\n        let connected = this.model.isConnected();\n        this.$('.main-info-wrap').switchClass('disconnected', !connected);\n        this.$('.settings-tab[data-block-name=\"profile\"]').showIf(connected);\n        this.$('.settings-tab[data-block-name=\"encryption\"]').showIf(connected);\n        this.$('.profile-image-dropdown').showIf(connected);\n        this.$('.set-groupchat-avatar').showIf(connected);\n        this.updateGallery();\n        this.updateScrollBar();\n    },\n\n    updateGallery: function () {\n        let connected = this.model.isConnected();\n        this.$('.settings-tab[data-block-name=\"media-gallery\"]').showIf(connected && this.model.get('gallery_token'));\n    },\n\n    updateNameCSS: function () {\n        if (!this.isVisible())\n            return;\n        let $name = this.$('.name');\n        $name.removeAttr('style');\n        let wrap_width = this.$('.name-wrap').width(),\n            width = $name.width(),\n            font_size = 22;\n        while (width > wrap_width && font_size > 12) {\n            $name.css({'font-size': font_size});\n            width = $name.width();\n            font_size -= 2;\n        }\n        $name.css({'margin-left': (wrap_width - width) / 2});\n    },\n\n    chooseAvatar: function () {\n        if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n            let avatar_view = new xabber.SetAvatarView();\n            avatar_view.render({model: this.model});\n        } else\n            this.$('.main-info-wrap .circle-avatar input').click();\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    },\n\n    closeSettings: function (ev) {\n        xabber.settings_modal_view.closeSettings();\n    },\n\n    openEmojiPanel: function () {\n        let emoji_panel_view = new xabber.EmojiProfileImageView();\n        emoji_panel_view.open({model: this.model});\n    },\n\n    openWebcamPanel: function () {\n        let webcam_panel_view = new xabber.WebcamProfileImageView();\n        webcam_panel_view.open({model: this.model});\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE && !(this.model.get('gallery_token') && this.model.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        this.$('.circle-avatar').find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image, hash, size) => {\n            if (image) {\n                this.model.pubAvatar({base64: image, hash: hash, size: size, type: file.type, file: file}, () => {\n                    this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                    this.$('.circle-avatar').find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                }, () => {\n                    this.$('.circle-avatar').find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            } else\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n        });\n    },\n\n    updateCSS: function () {\n        this.updateNameCSS();\n    },\n\n    openChangeStatus: function () {\n        !xabber.change_status_view && (xabber.change_status_view = new xabber.ChangeStatusView());\n        xabber.change_status_view.open(this.model);\n    },\n\n    deleteAccount: function () {\n        utils.dialogs.ask(xabber.getString(\"settings_account__button_quit_account\"), xabber.getString(\"dialog_quit_account__confirm\"),\n            [], { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            if (!res)\n                return;\n            this.model.deleteAccount(true);\n        });\n    },\n\n    unregisterAccount: function () {\n        xabber.trigger('unregister_account', this.model);\n    },\n\n\n\n\n\n    updateStatus: function () {\n        let account = this.model,\n            status = account.get('status');\n        this.$('.settings-block-wrap.status .settings-subblock-wrap .status').attr('data-status', status);\n\n        this.$('.settings-tab[data-block-name=\"status\"] .settings-block-label').text(this.model.getStatusMessage());\n    },\n\n    updateOmemoDevices: function () {\n        if (this.model.omemo && this.model.omemo.store){\n            let identity_key = this.model.omemo.store.get('identityKey');\n            if (identity_key){\n                this.$('.btn-manage-devices').removeClass('hidden2');\n            } else {\n                this.model.omemo.store.once('change:identityKey', () => {\n                    this.$('.btn-manage-devices').removeClass('hidden2');\n                }, this);\n            }\n        }\n        else\n            this.$('.btn-manage-devices').addClass('hidden2');\n    },\n\n    updateView: function () {\n        let connected = this.model.isConnected();\n        this.$('.connection-wrap .buttons-wrap .btn-change-password').hideIf(this.model.get('auth_type') === 'x-token');\n        this.$('.connection-wrap .buttons-wrap .btn-reconnect').hideIf(this.model.get('auth_type') === 'x-token');\n        this.updateScrollBar();\n    },\n\n    updateSynchronizationBlock: function () {\n        this.updateSyncState();\n        this.updateSyncOption();\n        this.updateDelSettingsButton();\n    },\n\n    showResources: function (ev) {\n        this.$(`.token-resource-wrap`).hideIf(true)\n        let resource_id = $(ev.target).attr('data-resource-id');\n        this.$(`.token-resource-wrap[data-resource-id=\"${resource_id}\"]`).hideIf(false)\n    },\n\n    hideResources: function (ev) {\n        if (!($(ev.target).hasClass('last-auth') && $(ev.target).hasClass('resource') || $(ev.target).closest(\".token-resource-wrap\").length > 0))\n            this.$(`.token-resource-wrap`).hideIf(true)\n    },\n\n    renderAllXTokens: function () {\n        this.$('.sessions-wrap').html(\"\");\n        this.$('.orphaned-fingerprints-wrap').html(\"\");\n        this.$('.device-encryption-warning').attr('data-not-trusted-count', 0);\n        this.$('.settings-tab[data-block-name=\"devices\"] .settings-block-label').text(xabber.getQuantityString(\"settings_account__devices_subheader_label\", this.model.x_tokens_list.length));\n        let devices_count = this.model.x_tokens_list.length, handled_devices = 0;\n        $(_.sortBy(this.model.x_tokens_list, '-last_auth')).each((idx, token) => {\n            let pretty_token = {\n                resource_obj: undefined,\n                client: token.client,\n                device: token.device || xabber.getString('unknown'),\n                token_uid: token.token_uid,\n                ip: token.ip,\n                last_auth: pretty_datetime_date(token.last_auth),\n                expire: pretty_datetime(token.expire)\n            };\n            let resource_obj = this.model.resources.findWhere({ token_uid: token.token_uid });\n            if (resource_obj)\n                pretty_token.resource_obj = resource_obj.toJSON();\n            if (this.model.get('x_token')) {\n                if (this.model.get('x_token').token_uid == token.token_uid) {\n                    pretty_token.is_omemo = this.model.omemo ? true : false\n                    let $cur_token_html = $(templates.current_token_item_modal(pretty_token));\n                    this.$('.current-session').append($cur_token_html);\n                    handled_devices++;\n                    if (handled_devices === devices_count){\n                        if (!_.isUndefined(this.$('.device-encryption-warning').attr('data-not-trusted-count')))\n                            this.$('.device-encryption-warning').switchClass('hidden', this.$('.device-encryption-warning').attr('data-not-trusted-count') == '0');\n                    }\n                    return;\n                }\n            }\n            let $token_html = $(templates.token_item_modal(pretty_token));\n            this.$('.all-sessions').append($token_html);\n            if (this.model.omemo) {\n                !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n                let omemo_device_id = token.omemo_id ? token.omemo_id : Number(pretty_token.token_uid.slice(0,8));\n                this.omemo_own_devices.updateTrustDevice(Number(omemo_device_id), $token_html, this, () => {\n                    if (this.$(`.settings-block-wrap.device-information[data-token-uid=\"${pretty_token.token_uid}\"]`).length\n                        && !this.$(`.settings-block-wrap.device-information[data-token-uid=\"${pretty_token.token_uid}\"]`).hasClass('hidden')){\n                        this.updateDeviceInformation(pretty_token.token_uid);\n                    }\n                    handled_devices++;\n                    if (handled_devices === devices_count){\n                        if (!_.isUndefined(this.$('.device-encryption-warning').attr('data-not-trusted-count')))\n                            this.$('.device-encryption-warning').switchClass('hidden', this.$('.device-encryption-warning').attr('data-not-trusted-count') == '0');\n                    }\n                }, () => {\n                    handled_devices++;\n                    if (handled_devices === devices_count){\n                        if (!_.isUndefined(this.$('.device-encryption-warning').attr('data-not-trusted-count')))\n                            this.$('.device-encryption-warning').switchClass('hidden', this.$('.device-encryption-warning').attr('data-not-trusted-count') == '0');\n                    }\n                });\n            } else {\n                if (token.omemo_id){\n                    $token_html.find('.device-encryption span').text(xabber.getString(\"settings_account__unverified_device\"));\n                    $token_html.find('.device-encryption .mdi-lock').removeClass('hidden');\n                }\n                handled_devices++;\n                if (handled_devices === devices_count){\n                    if (!_.isUndefined(this.$('.device-encryption-warning').attr('data-not-trusted-count')))\n                        this.$('.device-encryption-warning').switchClass('hidden', this.$('.device-encryption-warning').attr('data-not-trusted-count') == '0');\n                }\n            }\n        });\n        if (this.$('.all-sessions').children().length){\n            this.$('.all-sessions-wrap').removeClass('hidden');\n            this.$('.active-sessions-label').removeClass('hidden');\n            this.$('.btn-revoke-all-tokens').removeClass('hidden');\n        }\n        else {\n            this.$('.all-sessions-wrap').addClass('hidden');\n            this.$('.active-sessions-label').addClass('hidden');\n            this.$('.btn-revoke-all-tokens').addClass('hidden');\n        }\n        this.$('.devices-wrap').removeClass('hidden')\n        !this._single_account  && this.$('.token-wrap').attr('data-subblock-parent-name', '');\n        this.updateHeight();\n    },\n\n    updateDeviceInformation: function (token_uid) {\n        let token = this.model.x_tokens_list.find(item => (item.token_uid === token_uid));\n        this.$('.device-information-last-seen').showIf(pretty_datetime(token.last_auth)).find('.device-information-text').text(pretty_datetime(token.last_auth));\n        this.$('.device-information-device').showIf(token.device).find('.device-information-text').text(token.device);\n        this.$('.device-information-client').showIf(token.client).find('.device-information-text').text(token.client);\n        this.$('.device-information-ip').showIf(token.ip).find('.device-information-text').text(token.ip);\n        this.$('.device-information-expires').showIf(pretty_datetime(token.expire)).find('.device-information-text').text(pretty_datetime(token.expire));\n        this.$('.device-information-device-id').showIf(token.omemo_id).find('.device-information-text').text(token.omemo_id);\n        this.$('.device-information-security-label').showIf(token.omemo_id);\n        let resource_obj = this.model.resources.findWhere({ token_uid: token_uid }),\n            status_text;\n        if (resource_obj){\n            status_text = resource_obj.get('status_message') || resource_obj.get('status') && xabber.getString(resource_obj.get('status')) || xabber.getString(\"account_state_connected\");\n        } else if (this.model.get('x_token').token_uid == token.token_uid){\n            status_text = this.model.get('status_message') || this.model.get('status') && xabber.getString(this.model.get('status')) || xabber.getString(\"account_state_connected\")\n        } else\n            status_text = xabber.getString(\"offline\");\n\n        this.$('.device-information-status .device-information-text').text(status_text);\n\n        if (this.model.get('x_token')) {\n            this.$('.btn-revoke-token').hideIf(this.model.get('x_token').token_uid == token.token_uid);\n            this.$('.device-information-trust')\n                .switchClass('hidden', this.model.get('x_token').token_uid == token.token_uid)\n        }\n        if (token.omemo_id && this.model.omemo){\n            let dfd = new $.Deferred(),\n                device = this.model.omemo.own_devices[token.omemo_id];\n            dfd.done((fing) => {\n                if (fing.match(/.{1,8}/g))\n                    fing = fing.match(/.{1,8}/g).join(\" \");\n                this.$('.device-information-fingerprint').showIf(fing).find('.device-information-text').text(fing);\n\n                let $this_device = this.$(`.token-wrap[data-token-uid=\"${token_uid}\"]`)\n\n                this.$('.device-information-trust').removeClass('hidden');\n                this.$('.device-information-trust-text').text($this_device.attr('data-trust-text'));\n                this.$('.device-information-trust').attr('data-trust', $this_device.attr('data-trust'));\n                this.$('.device-information-trust-text').attr('data-trust', $this_device.attr('data-trust'));\n                if (this.model.get('x_token') && this.model.get('x_token').token_uid == token.token_uid){\n                    this.$('.device-information-trust-text').text(xabber.getString(\"settings_account__omemo_enabled\"));\n                    this.$('.device-information-trust').addClass('hidden');\n                    this.$('.device-information-trust').attr('data-trust', 'trust');\n                    this.$('.device-information-trust-text').attr('data-trust', 'trust');\n                }\n            })\n            if (device.get('fingerprint')) {\n                dfd.resolve(device.get('fingerprint'));\n            } else if (device.get('ik')) {\n                device.set('fingerprint', device.generateFingerprint());\n                dfd.resolve(device.get('fingerprint'));\n            } else {\n                device.getBundle().then(({pk, spk, ik}) => {\n                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                    let fingerprint = device.generateFingerprint();\n                    if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                        device.set('fingerprint', fingerprint);\n                    dfd.resolve(device.get('fingerprint'));\n                });\n            }\n        } else {\n            this.$('.device-information-fingerprint').addClass('hidden');\n            this.$('.device-information-trust').addClass('hidden');\n            this.$('.device-information-trust-text').text('');\n            this.$('.device-information-trust').attr('data-trust', '');\n            this.$('.device-information-trust-text').attr('data-trust', '');\n        }\n        this.$('.settings-panel-head span.settings-panel-head-title').text(token.device);\n    },\n\n    openFingerprint: function (ev) {\n        if (this.model.omemo){\n            let $target = $(ev.target).closest('.device-encryption'),\n                is_own = $target.hasClass('is-own');\n            !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n            let token = this.model.x_tokens_list.find(item => (item.token_uid === $target.closest('.token-wrap').attr('data-token-uid'))),\n                omemo_device_id = token && token.omemo_id ? token.omemo_id : Number($target.closest('.token-wrap').attr('data-token-uid').slice(0,8));\n            this.omemo_own_devices.open(Number(omemo_device_id), is_own);\n        }\n    },\n\n    openFingerprintDevice: function (ev) {\n        if (this.model.omemo){\n            if ($(ev.target).closest('.device-information-trust.device-information-trust-own').length)\n                return;\n            let $target = $(ev.target).closest('.device-information');\n            !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n            let token = this.model.x_tokens_list.find(item => (item.token_uid === $target.attr('data-token-uid'))),\n                omemo_device_id = token && token.omemo_id ? token.omemo_id : Number($target.attr('data-token-uid').slice(0,8));\n            this.omemo_own_devices.open(Number(omemo_device_id), false);\n        }\n    },\n\n    updateXTokens: function () {\n        if (this.data.get('removed'))\n            return;\n        if (this.model.get('auth_type') !== 'x-token') {\n            this.$('.tokens').addClass('hidden');\n            this.$('.sessions-wrap').children().html(\"\");\n            return;\n        }\n        this.model.getAllXTokens(() => {\n            this.$('.sessions-wrap').html(\"\");\n            if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                this.renderAllXTokens();\n            }\n        });\n    },\n\n    updateGroupsLabel: function () {\n        let groups_count = this.model.groups.length,\n            label_text = groups_count === 0 ? xabber.getString(\"contact_circles_empty\") : xabber.getQuantityString(\"settings_account__section_header_circles\", groups_count);\n\n        this.$('.settings-tab[data-block-name=\"circles-groups\"] .settings-block-label').text(label_text);\n    },\n\n    revokeXToken: function (ev) {\n        utils.dialogs.ask(xabber.getString(\"terminate_session_title\"), xabber.getString(\"terminate_session_text\"),\n            {}, { ok_button_text: xabber.getString(\"button_terminate\")}).done((res) => {\n            if (!res)\n                return;\n            let $target = $(ev.target).closest('.settings-block-wrap.device-information'),\n                token_uid = $target.attr('data-token-uid');\n            this.model.revokeXToken([token_uid], () => {\n                if (this.model.get('x_token')){\n                    if (this.model.get('x_token').token_uid === token_uid) {\n                        this.model.deleteAccount(true);\n                        return;\n                    }\n                    this.model.getAllXTokens(() => {\n                        this.$('.sessions-wrap').html(\"\");\n                        this.$('.btn-back-subsettings-account').length && this.backToSubMenu({target: this.$('.btn-back-subsettings-account')[0]})\n                        if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                            this.renderAllXTokens();\n                        }\n                    });\n                }\n            });\n        });\n    },\n\n    revokeAllXTokens: function () {\n        utils.dialogs.ask(xabber.getString(\"settings_account__dialog_terminate_sessions__header\"), xabber.getString(\"terminate_all_sessions_title\"), null, { ok_button_text: xabber.getString(\"button_terminate\")}).done((result) => {\n            if (result && this.model.x_tokens_list)\n                this.model.revokeAllXTokens(() => {\n                    this.model.getAllXTokens(() => {\n                        this.$('.sessions-wrap').html(\"\");\n                        if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                            this.renderAllXTokens();\n                        }\n                    });\n                });\n        });\n    },\n\n    updateSyncState: function () {\n        let state;\n        if (!this.model.settings.get('to_sync'))\n            state = 'off';\n        else\n            state = this.model.settings.get('synced') ? 'yes' : 'no';\n        this.$('.sync-status').text(xabber.getString(constants.SYNCED_STATUS_DATA[state].tip));\n        let mdiclass = constants.SYNCED_STATUS_DATA[state].icon,\n            $sync_icon = this.$('.sync-status-icon');\n        $sync_icon.removeClass($sync_icon.attr('data-mdiclass'))\n            .attr('data-mdiclass', mdiclass).addClass(mdiclass);\n    },\n\n    updateSyncOption: function () {\n        this.$('.sync-account').prop('checked', this.model.settings.get('to_sync'));\n    },\n\n    updateDelSettingsButton: function () {\n        this.$('.btn-delete-settings').hideIf(this.model.settings.get('deleted'));\n    },\n\n    updateEnabled: function () {\n        let enabled = this.model.get('enabled');\n        this.$('.enabled-state input[type=checkbox]').prop('checked', enabled);\n    },\n\n    updateEnabledOmemo: function () {\n        let enabled = this.model.settings.get('omemo'), has_keys = false;\n        if (_.isUndefined(enabled))\n            enabled = false;\n        if (enabled && this.model.omemo_enable_view)\n            this.model.omemo_enable_view.close();\n        this.$('.setting-use-omemo input[type=checkbox]').prop('checked', enabled);\n        this.$('.omemo-settings-wrap .setting-wrap:not(.omemo-enable)').switchClass('hidden', !enabled);\n        this.$('.device-more-button').switchClass('hidden', !enabled);\n        this.$('.label-encryption-enabled').switchClass('hidden', !enabled);\n        this.$('.label-encryption-disabled').switchClass('hidden', enabled);\n        if (!this.model.omemo){\n            this.$('.btn-manage-devices').addClass('hidden2');\n        }\n        this.updateHeight();\n    },\n\n    updateEncryptedChatstates: function () {\n        let enabled = this.model.settings.get('encrypted_chatstates');\n        this.$('.setting-send-chat-states input[type=checkbox]').prop('checked', enabled);\n    },\n\n    updateReconnectButton: function () {\n        this.$('.btn-reconnect').switchClass('disabled', this.model.session.get('reconnecting'));\n    },\n\n    setEnabled: function (ev) {\n        let enabled = this.$('.enabled-state input').prop('checked');\n        this.model.save('enabled', enabled);\n        enabled ? this.model.activate() : this.model.deactivate();\n        if (xabber.accounts.length !== 1){\n            this.showSettings();\n        }\n    },\n\n    setEnabledOmemo: function () {\n        let enabled = this.$('.setting-use-omemo input').prop('checked');\n        this.model.settings.save('omemo', enabled);\n        this.$('.omemo-settings-wrap .setting-wrap:not(.omemo-enable)').switchClass('hidden', !enabled);\n        if (enabled)\n            this.initOmemo();\n        else\n            this.destroyOmemo();\n    },\n\n    setTypingNotification: function () {\n        let enabled = this.$('.setting-send-chat-states input').prop('checked');\n        this.model.settings.save('encrypted_chatstates', enabled);\n    },\n\n    initOmemo: function () {\n        this.model.omemo = new xabber.Omemo({id: 'omemo'}, {\n            account: this.model,\n            storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n            fetch: 'before'\n        });\n        setTimeout(() => {\n            this.model.omemo.onConnected();\n            this.updateXTokens();\n        }, 1000);\n    },\n\n    destroyOmemo: function () {\n        this.model.omemo.destroy();\n        this.model.omemo = undefined;\n        this.updateXTokens();\n    },\n\n    openDevicesWindow: function () {\n        if (this.model.omemo) {\n            !this.omemo_devices && (this.omemo_devices = new xabber.Fingerprints({model: this.model.omemo}));\n            this.omemo_devices.open();\n        }\n        else\n            utils.dialogs.error(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\"));\n    },\n\n    purgeKeys: function () {\n        utils.dialogs.ask(xabber.getString('omemo__dialog_purge_keys__header'), xabber.getString('omemo__dialog_purge_keys__text'),\n            null, { ok_button_text: xabber.getString('omemo__dialog_purge_keys__button_purge_keys')}).done((result) => {\n            if (result) {\n                if (this.model.omemo) {\n                    let device_id = this.model.omemo.get('device_id');\n                    this.model.omemo.save('prekeys', {});\n                    this.model.omemo.bundle && (this.model.omemo.bundle.preKeys = []);\n                    if (this.model.omemo.own_devices[device_id]) {\n                        this.model.omemo.own_devices[device_id].preKeys = [];\n                        this.model.omemo.own_devices[device_id].set({ik: null, fingerprint: null});\n                    }\n                    this.model.getConnectionForIQ().omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                } else {\n                    let omemo = new xabber.Omemo({id: 'omemo'}, {\n                        account: this.model,\n                        storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n                        fetch: 'before'\n                    });\n                    omemo.save('prekeys', {});\n                    this.model.getConnectionForIQ().omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, omemo.get('device_id'));\n                    omemo.destroy();\n                }\n            }\n        });\n    },\n\n    showConnectionStatus: function () {\n        this.$('.conn-status').text(this.model.session.get('conn_feedback'));\n    },\n\n    showPasswordView: function () {\n        this.model.password_view.show();\n    },\n\n    reconnect: function () {\n        if (this.model.session.get('reconnecting'))\n            return;\n        this.model.save('enabled', true);\n        if (this.model.connection.connected)\n            this.model.connection.disconnect();\n        else\n            this.model.connect();\n    },\n\n    changeSyncSetting: function (ev) {\n        let to_sync = $(ev.target).prop('checked'),\n            settings = this.model.settings;\n        settings.save('to_sync', to_sync);\n        if (to_sync) {\n            settings.update_timestamp();\n        }\n    },\n\n    deleteSettings: function () {\n        utils.dialogs.ask(xabber.getString(\"progress_title_delete_settings\"), xabber.getString(\"delete_settings_summary\"),\n            [{name: 'delete_account', checked: this.model.settings.get('to_sync'),\n                text: xabber.getString(\"delete_settings__optional_button__delete_synced_account\")}],{ ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n            if (res) {\n                if (!res.delete_account) {\n                    this.model.settings.save('to_sync', false);\n                } else if (!this.model.settings.get('to_sync')) {\n                    this.model.deleteAccount(true);\n                }\n            }\n        });\n    },\n\n    changeColor: function (ev) {\n        let value = $(ev.target).closest('.color-picker-button').attr('data-color-value');\n        this.model.settings.update_settings({color: value});\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    openBlockWindow: function () {\n        utils.dialogs.ask_enter_value(xabber.getString(\"dialog_block_xmpp_address__text\"), null, {modal_class: 'account-add-blocked', input_placeholder_value: xabber.getString(\"dialog_block_xmpp_address__hint_address\")}, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done((result) => {\n            if (result) {\n                let contact = this.model.contacts.get(result);\n                if (contact)\n                    contact.block();\n                else {\n                    this.model.contacts.blockContact(result);\n                }\n            }\n        });\n    },\n\n    selectUnblock: function (ev) {\n        if (this.children && this.children.blocklist){\n            this.children.blocklist.selectUnblock();\n        }\n    },\n\n    unblockSelected: function () {\n        if (this.children && this.children.blocklist){\n            this.children.blocklist.unblockSelected();\n        }\n    },\n\n    deselectBlocked: function () {\n        if (this.children && this.children.blocklist)\n            this.children.blocklist.deselectBlocked();\n    },\n\n    sortFiles: function (ev) {\n        if (this.gallery_view)\n            this.gallery_view.sortFiles(ev);\n    },\n\n    enableFilesSelect: function () {\n        if (this.gallery_view)\n            this.gallery_view.enableFilesSelect();\n    },\n});\n\nxabber.AccountSettingsSingleModalView = xabber.AccountSettingsModalView.extend({\n    className: 'single-account-settings-panel-wrap',\n    template: templates.single_account_settings_modal,\n    // ps_selector: '.right-column',\n    // ps_settings: {\n    //     wheelPropagation: true\n    // },\n\n    render: function (view, options, args) {\n        if (!_.isNull(view))\n            return;\n        this.$el.detach();\n        this.parent.$('.single-account-info-wrap').append(this.$el);\n        this.ps_container = this.parent.ps_container;\n        this.gallery_view.render();\n        this._single_account = true;\n\n        this.$el.attr('data-color', this.model.settings.get('color'));\n        this.$('.circle-avatar.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        this.updateCSS();\n\n        this.updateEnabledOmemo();\n        this.updateEncryptedChatstates();\n        this.updateEnabled();\n        this.updateXTokens();\n        this.updateGroupsLabel();\n        this.updateView();\n        this.$('.main-resource .client').text(constants.CLIENT_NAME);\n        this.$('.main-resource .resource').text(this.model.resource);\n        this.$('.main-resource .priority').text(this.model.get('priority'));\n        this.$(`.color-scheme input[type=radio][name=account_color][value=\"${this.model.settings.get('color')}\"]`)\n            .prop('checked', true);\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n        this.$('.panel-content-wrap').removeClass('hidden');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.updateOmemoDevices;\n        this.$('.left-column').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.$('.btn-back-settings').removeClass('hidden');\n        this.$('.btn-back-subsettings-account').addClass('hidden');\n        this.updateHeight();\n        this.updateBlockedLabel();\n        if (options && options.account_block_name) {\n            let $elem = this.$(`.settings-tab[data-block-name=\"${options.account_block_name}\"]`);\n            if ($elem.length)\n                this.jumpToBlock({target: $elem[0]});\n        }\n\n        this.parent.single_account_has_rendered = true;\n        return this;\n    },\n\n    jumpToBlock: function (ev) {\n        this.parent.$('.left-column .settings-tabs-wrap.global-settings-tabs').addClass('hidden');\n        this.jumpToBlockHandler(ev);\n    },\n\n    backToMenu: function (ev) {\n        this.parent.$('.left-column .settings-tabs-wrap.global-settings-tabs').removeClass('hidden');\n        this.backToMenuHandler(ev);\n    },\n\n    backToSubMenu: function (ev) {\n        this.parent.$('.left-column .settings-tabs-wrap.global-settings-tabs').addClass('hidden');\n        this.backToSubMenuHandler(ev);\n    },\n\n    updateHeight: function () {\n        this.parent.updateHeight();\n    },\n});\n\nxabber.StatusMessageWidget = xabber.InputWidget.extend({\n    field_name: 'status-message',\n    placeholder: 'Set custom status',\n\n    bindModelEvents: function () {\n        this.model.on(\"change:status_updated\", this.updateValue, this);\n    },\n\n    getValue: function () {\n        return this.model.getStatusMessage();\n    },\n\n    setValue: function (value) {\n        this.model.setStatus(null, value);\n    }\n});\n\nxabber.StatusMessageModalWidget = xabber.InputWidget.extend({\n    field_name: 'status-message',\n    placeholder: 'Set custom status',\n    template: templates.status_message_input_widget,\n\n    showInput: function () {\n        if (this.$input.prop('disabled'))\n            return;\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    bindModelEvents: function () {\n        this.model.on(\"change:status_updated\", this.updateValue, this);\n    },\n\n    getValue: function () {\n        return this.model.getStatusMessage();\n    },\n\n    setValue: function (value) {\n        this.model.setStatus(null, value);\n    }\n});\n\nxabber.AccountSettingsItemModalView = xabber.BasicView.extend({\n    className: 'xmpp-account draggable droppable',\n    template: templates.global_settings_item_modal,\n    avatar_size: constants.AVATAR_SIZES.SETTINGS_ACCOUNT_ITEM,\n\n    events: {\n        \"click .account-info-wrap\": \"showSettings\",\n        \"change .enabled-state input\": \"setEnabled\",\n    },\n\n    _initialize: function () {\n        this.updateEnabled();\n        this.updateNickname();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.updateSyncState();\n        this.showConnectionStatus();\n        this.model.on(\"change:enabled\", this.updateEnabled, this);\n        this.model.on(\"change:vcard\", this.updateNickname, this);\n        this.model.settings.on(\"change:omemo\", this.updateEnabledOmemo, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.session.on(\"change:conn_feedback\", this.showConnectionStatus, this);\n        this.$el.on('drag_to', this.onDragTo.bind(this));\n        this.$('.move-account-to-this')\n            .on('move_xmpp_account', this.onMoveAccount.bind(this));\n        this.model.settings.on(\"change:to_sync\", this.updateSyncState, this);\n    },\n\n    updateNickname: function () {\n        let nickname;\n        if (this.model.get('vcard')) {\n            if (this.model.get('vcard').nickname)\n                nickname = this.model.get('vcard').nickname;\n            else if (this.model.get('vcard').fullname)\n                nickname = this.model.get('vcard').fullname;\n            else if (this.model.get('vcard').first_name || this.model.get('vcard').last_name)\n                nickname = this.model.get('vcard').first_name + ' ' + this.model.get('vcard').last_name;\n        }\n        if (nickname){\n            this.$('.nickname').text(nickname);\n            this.$('.jid').text(this.model.get('jid'));\n            this.$('.nickname-wrap').removeClass('single-row');\n            this.$('.jid-wrap').removeClass('hidden');\n        } else {\n            this.$('.nickname').text(this.model.get('jid'));\n            this.$('.nickname-wrap').addClass('single-row');\n            this.$('.jid-wrap').addClass('hidden');\n        }\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    showConnectionStatus: function () {\n        // this.$('.status').attr('data-status', this.model.get('status'));\n        // this.$('.conn-status').text(this.model.session.get('conn_feedback'));\n    },\n\n    updateEnabled: function () {\n        let enabled = this.model.get('enabled');\n        this.$el.switchClass('disabled', !enabled);\n        this.$('.enabled-state input[type=checkbox]').prop('checked', enabled);\n    },\n\n    setEnabled: function (ev) {\n        let enabled = this.$('.enabled-state input').prop('checked');\n        this.model.save('enabled', enabled);\n        enabled ? this.model.activate() : this.model.deactivate();\n    },\n\n    onDragTo: function (ev, drop_elem) {\n        drop_elem && $(drop_elem).trigger('move_xmpp_account', this.model);\n    },\n\n    onMoveAccount: function (ev, account) {\n        this.model.collection.moveBefore(account, this.model);\n    },\n\n    updateSyncState: function () {\n    },\n\n    showSettings: function () {\n        if (this.model.get('enabled'))\n            this.model.showSettingsModal();\n        else {\n            utils.dialogs.ask_extended(xabber.getString(\"settings_account__enable_account_label\"), xabber.getString(\"settings_account__enable_account_text\", [this.model.get('jid')]),\n                {modal_class: 'modal-offline-account', no_dialog_options: true},\n                {\n                    ok_button_text: xabber.getString(\"button_enable\"),\n                    optional_button: 'delete-account',\n                    optional_button_text: xabber.getString(\"settings_account__button_quit_account\")\n                }).done((res) => {\n                    if (res){\n                        if (res === 'delete-account'){\n                            this.model._revoke_on_connect = $.Deferred();\n                            let revoke_timeout = setTimeout(() => {\n                                this.model._revoke_on_connect.resolve();\n                            }, 5000);\n                            this.model._revoke_on_connect.done(() => {\n                                clearTimeout(revoke_timeout);\n                                this.model._revoke_on_connect = undefined;\n                                this.model.deleteAccount(null, true);\n                            })\n                            this.model.save('enabled', true);\n                            this.model.activate();\n                        }\n                        else {\n                            this.model.save('enabled', true);\n                            this.model.activate();\n                        }\n                    }\n            });\n        }\n    }\n});\n\nxabber.SettingsAccountsModalBlockView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.updateList();\n        this.updateSyncState();\n        this.model.on(\"add\", this.updateOneInList, this);\n        this.model.on(\"update_order\", this.updateList, this);\n        this.model.on(\"destroy\", this.onAccountRemoved, this);\n        this.model.on(\"add\", this.parent.updateAccounts, this.parent);\n        this.model.on(\"update_order\", this.parent.updateAccounts, this.parent);\n        this.model.on(\"destroy\", this.parent.updateAccounts, this.parent);\n        this.$('.move-account-to-bottom')\n            .on('move_xmpp_account', this.onMoveAccountToBottom.bind(this));\n    },\n\n    updateList: function () {\n        _.each(this.children, function (view) { view.detach(); });\n        this.model.each((account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            if (!view) {\n                view = this.addChild(jid, xabber.AccountSettingsItemModalView, {model: account});\n            }\n            this.$('.no-accounts-tip').before(view.$el);\n        });\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    updateOneInList: function (account) {\n        let jid = account.get('jid'),\n            view = this.child(jid);\n        if (view)\n            view.$el.detach();\n        else\n            view = this.addChild(jid, xabber.AccountSettingsItemModalView, {model: account});\n        let index = this.model.indexOf(account);\n        if (index === 0)\n            this.$('.no-accounts-tip').after(view.$el);\n        else\n            this.$('.xmpp-account').eq(index - 1).after(view.$el);\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    onAccountRemoved: function (account) {\n        this.removeChild(account.get('jid'));\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    render: function () {\n        this.updateHtml();\n        _.each(this.children, function (view) {\n            view.updateEnabled();\n        });\n    },\n\n    updateHtml: function () {\n        this.$('.no-accounts-tip').hideIf(this.model.length);\n    },\n\n    updateSyncState: function () {\n    },\n\n    onMoveAccountToBottom: function (ev, account) {\n        this.model.moveToBottom(account);\n    }\n});\n\nxabber.ChangeStatusView = xabber.BasicView.extend({\n    className: 'modal main-modal change-status-modal',\n    template: templates.change_status,\n\n    events: {\n        \"click .status-values li\": \"changeStatus\",\n        \"click .status-message-wrap .clear-input\": \"clearStatusMessageInput\",\n        \"keyup .status-message\": \"keyUp\",\n        \"change .apply-to-all\": \"changeApplyToAll\"\n    },\n\n    open: function (account) {\n        this.account = account;\n        this.highlightStatus(account.get('status'));\n        this.restoreStatusMessageInput();\n        this.show();\n    },\n\n    highlightStatus: function (status) {\n        this.$('.status-values li[data-value=\"'+status+'\"]').addClass('active')\n            .siblings().removeClass('active');\n    },\n\n    changeStatus: function (ev) {\n        let status = $(ev.target).closest('li').data('value');\n        this.highlightStatus(status);\n        this.do_change();\n        this.closeModal();\n    },\n\n    restoreStatusMessageInput: function () {\n        let status_message = this.account.get('status_message');\n        this.$('.status-message').val(status_message)\n            .switchClass('filled', status_message);\n        if (!status_message) {\n            this.$('.status-message').attr('placeholder', this.account.getStatusMessage());\n        }\n    },\n\n    clearStatusMessageInput: function () {\n        let verbose_status = xabber.getString(this.account.get('status'));\n        this.$('.status-message').val('').attr('placeholder', verbose_status)\n            .removeClass('filled');\n    },\n\n    keyUp: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            this.do_change();\n            this.closeModal();\n        } else {\n            let value = this.$('.status-message').val();\n            this.$('.status-message').switchClass('filled', value);\n        }\n    },\n\n    do_change: function () {\n        let status = this.$('.status-values li.active').data('value'),\n            status_message = this.$('.status-message').val();\n        if (this.apply_to_all) {\n            xabber.accounts.each(function (account) {\n                account.setStatus(status, status_message);\n            });\n        } else {\n            this.account.setStatus(status, status_message);\n        }\n    },\n\n    changeApplyToAll: function (ev) {\n        this.apply_to_all = $(ev.target).prop('checked');\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        Materialize.updateTextFields();\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        let value = this.$('.status-message').val();\n        if (!value)\n            this.do_change();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.SetAvatarView = xabber.BasicView.extend({\n    className: 'modal main-modal avatar-picker background-panel',\n    template: templates.avatars_gallery,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .menu-btn\": \"updateActiveMenu\",\n        \"click .library-wrap .image-item\": \"setActiveImage\",\n        'change input[type=\"file\"]': \"onFileInputChanged\",\n        'keyup input.url': \"onInputChanged\",\n        \"click .btn-add\": \"addAvatarSelecter\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n    },\n\n    render: function (options) {\n        this.model = options.model;\n        this.contact = options.contact;\n        this.participant = options.participant;\n        this.parent = options.parent;\n        this.createLibrary();\n        this.$('.menu-btn').removeClass('active');\n        this.$('.menu-btn[data-screen-name=\"library\"]').addClass('active');\n        this.$('.modal-header span').text(xabber.getString(\"account_set_avatar_header\"));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n        let draggable = this.$('.upload-wrap');\n        draggable[0].ondragenter = function (ev) {\n            ev.preventDefault();\n            draggable.addClass('file-drop');\n        };\n        draggable[0].ondragover = function (ev) {\n            ev.preventDefault();\n        };\n        draggable[0].ondragleave = function (ev) {\n            if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                return;\n            ev.preventDefault();\n            draggable.removeClass('file-drop');\n        };\n        draggable[0].ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            draggable.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [], file;\n            for (let i = 0; i < files.length; i++) {\n                if (utils.isImageType(files[i].type)) {\n                    file = files[i];\n                    break;\n                }\n            }\n            file && this.addFile(file);\n        };\n    },\n\n    onPaste: function (ev) {\n        let url = ev.clipboardData.getData('text').trim();\n        this.$('.image-preview img')[0].onload = () => {\n            this.$('.image-preview img').removeClass('hidden');\n            this.updateActiveButton();\n        };\n        this.$('.image-preview img').addClass('hidden')[0].src = url;\n        this.updateActiveButton();\n    },\n\n    updateActiveMenu: function (ev) {\n        let screen_name = ev.target.getAttribute('data-screen-name');\n        this.$('.menu-btn').removeClass('active');\n        this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n        this.updateScreen(screen_name);\n    },\n\n    updateScreen: function (name) {\n        this.$('.screen-wrap').addClass('hidden');\n        this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n        this.scrollToTop();\n        this.updateActiveButton();\n    },\n\n    updateActiveButton: function () {\n        let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            non_active = true;\n        if ($active_screen.attr('data-screen') == 'library') {\n            $active_screen.find('div.active').length && (non_active = false);\n        } else {\n            $active_screen.find('img:not(.hidden)').length && (non_active = false);\n        }\n        this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n    },\n\n    renderFiles: function (response) {\n        this.$('.library-wrap .preloader-wrapper').remove()\n        if (response.items.length){\n            this.current_items = response.items\n            response.items.forEach((item, idx) => {\n                let img = $(`<div class=\"image-item\"/>`);\n                img.css('background-image', `url(\"${item.thumbnail.url}\")`);\n                img.attr('data-src', item.file);\n                img.attr('data-id', idx);\n                this.$('.library-wrap').append(img);\n            });\n        }\n    },\n\n    createLibrary: function () {\n        this.model.testGalleryTokenExpire(() => {\n            let options = {order_by: '-id', contexts: 'avatar'};\n            if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n                this.$('.library-wrap').html(env.templates.contacts.preloader())\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                    url: this.model.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        console.log(response)\n                        this.renderFiles(response)\n                    },\n                    error: (response) => {\n                        this.model.handleCommonGalleryErrors(response)\n                        console.log(response)\n                        this.$('.library-wrap .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    setActiveImage: function (ev) {\n        let $target = $(ev.target);\n        if ($target.hasClass('active'))\n            $target.removeClass('active');\n        else {\n            this.$('.library-wrap>div').removeClass('active');\n            $target.addClass('active');\n        }\n        this.updateActiveButton();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target, file;\n        for (let i = 0; i < target.files.length; i++) {\n            if (utils.isImageType(target.files[i].type)) {\n                file = target.files[i];\n                break;\n            }\n        }\n        file && this.addFile(file);\n        $(target).val('');\n    },\n\n    addFile: function (file) {\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            let image_prev = new Image(),\n                src = e.target.result;\n            image_prev.src = src;\n            this.$('.screen-wrap[data-screen=\"upload\"] img').detach();\n            this.$('.screen-wrap[data-screen=\"upload\"]').prepend(image_prev);\n            this.current_file = file;\n            this.updateActiveButton();\n        };\n        reader.readAsDataURL(file);\n    },\n\n    onInputChanged: function (ev) {\n        if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n            return;\n        if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n            let url = ev.target.value.trim();\n            this.$('.image-preview img')[0].onload = () => {\n                this.$('.image-preview img').removeClass('hidden');\n                this.updateActiveButton();\n            };\n            this.$('.image-preview img').addClass('hidden')[0].src = url;\n            this.updateActiveButton();\n        } else {\n            this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n            this.updateActiveButton();\n        }\n    },\n\n    addAvatarSelecter: function () {\n        if (this.contact){\n            this.addNotOwnAvatar();\n        } else {\n            this.addAvatar();\n        }\n    },\n\n    addAvatar: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n        dfd.done((img, img_from_gallery) => {\n            if (img_from_gallery){\n                image.type = image.media_type;\n                this.model.pubAvatar(image, () => {\n                    this.current_items = [];\n                    this.close();\n                    this.model.trigger('update_avatar_list');\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            } else {\n                utils.images.getAvatarFromFile(img).done((image, hash, size) => {\n                    if (image) {\n                        this.model.pubAvatar({base64: image, hash: hash, size: size, type: img.type, file: img}, () => {\n                            this.close();\n                            this.model.trigger('update_avatar_list');\n                        }, () => {\n                            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                        });\n                    } else\n                        utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        });\n        this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n        this.$('.btn-add').addClass('hidden-disabled');\n\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = this.current_items[$active_screen.find('div.active').attr('data-id')]\n            image.uploaded = true;\n            dfd.resolve(image, true);\n        }\n        else if ($active_screen.attr('data-screen') == 'web-address') {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            this.createFileFromURL(image).then((file) => {\n                dfd.resolve(file);\n            }, (e) => {\n                this.$('.preloader-wrapper').remove();\n                this.$('.btn-add').removeClass('hidden-disabled');\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            })\n        } else\n            dfd.resolve(this.current_file);\n    },\n\n    addNotOwnAvatar: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            participant_node = '';\n        if (this.participant && this.participant.get('id')){\n            participant_node = '#' + this.participant.get('id');\n        }\n        dfd.done((img, img_from_gallery) => {\n            if (img_from_gallery){\n                image.type = image.media_type;\n                this.contact.pubAvatar(image, participant_node, () => {\n                    this.current_items = [];\n                    this.close();\n                    if (this.parent && this.participant) {\n                        this.parent.updateMemberAvatar(this.participant, true);\n                    }\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            } else {\n                utils.images.getAvatarFromFile(img).done((image, hash, size) => {\n                    if (image) {\n                        this.contact.pubAvatar({base64: image, hash: hash, size: size, type: img.type, file: img}, participant_node, () => {\n                            this.close();\n                            if (this.parent && this.participant) {\n                                this.parent.updateMemberAvatar(this.participant, true);\n                            }\n                        }, () => {\n                            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                        });\n                    } else\n                        utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        });\n        this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n        this.$('.btn-add').addClass('hidden-disabled');\n\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = this.current_items[$active_screen.find('div.active').attr('data-id')]\n            image.uploaded = true;\n            dfd.resolve(image, true);\n        }\n        else if ($active_screen.attr('data-screen') == 'web-address') {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            this.createFileFromURL(image).then((file) => {\n                dfd.resolve(file);\n            }, (e) => {\n                this.$('.preloader-wrapper').remove();\n                this.$('.btn-add').removeClass('hidden-disabled');\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            })\n        } else\n            dfd.resolve(this.current_file);\n    },\n\n    createFileFromURL: async function (url) {\n        let response = await fetch(url);\n        let data = await response.blob();\n        let metadata = {\n            type: 'image/png'\n        };\n        let file = new File([data], \"avatar.png\", metadata);\n        return file\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n});\n\nxabber.WebcamProfileImageView = xabber.BasicView.extend({\n    className: 'modal main-modal webcam-panel',\n    template: templates.webcam_panel,\n\n    events: {\n        \"click .btn-save\": \"addAvatarSelecter\",\n        \"click .btn-cancel\": \"close\",\n    },\n\n    open: function (options) {\n        this.account = options.model;\n        this.contact = options.contact;\n        this.participant = options.participant;\n        this.parent = options.parent;\n        this.registration = options.registration;\n        this.registration_view = options.registration_view;\n\n        this.width = 171;\n        this.height = 128;\n        this.streaming = false;\n        this.video = null;\n        this.canvas = null;\n        this.photo = null;\n        this.startbutton = null;\n\n        this.show();\n        this.startupStream();\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    onHide: function () {\n        if (this.video && this.video.srcObject && this.video.srcObject.getTracks()){\n            let tracks = this.video.srcObject.getTracks()\n            tracks.forEach(function(track) {\n                track.stop();\n            });\n            this.video.srcObject = null\n        }\n        this.$el.detach();\n\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    startupStream: function (ev) {\n        this.video = this.$('.webcam-video')[0];\n        this.canvas = this.$('#canvas')[0];\n        this.photo = this.$('.webcam-photo')[0];\n        this.startbutton = this.$('.btn-take-photo')[0];\n        navigator.mediaDevices.getUserMedia({video: true, audio: false})\n            .then((stream) => {\n                this.video.srcObject = stream;\n                this.video.play();\n            })\n            .catch((err) => {\n                console.log(\"An error occurred: \" + err);\n            });\n\n        this.video.addEventListener('canplay', (ev) => {\n            if (!this.streaming) {\n                if (isNaN(this.height)) {\n                    this.height = this.width / (4/3);\n                }\n                this.video.setAttribute('width', this.width);\n                this.video.setAttribute('height', this.height);\n                this.canvas.setAttribute('width', this.width);\n                this.canvas.setAttribute('height', this.height);\n                this.streaming = true;\n            }\n        }, false);\n\n        this.startbutton.addEventListener('click', (ev) =>{\n            this.takePicture();\n            ev.preventDefault();\n        }, false);\n\n        this.$('.circle-icon')[0].addEventListener('click', (ev) =>{\n            if ($(ev.target).closest('.circle-icon').hasClass('disabled'))\n                return;\n            this.clearPhoto();\n            ev.preventDefault();\n        }, false);\n\n        this.clearPhoto();\n\n    },\n\n\n    clearPhoto: function (ev) {\n        let context = this.canvas.getContext('2d');\n        context.fillStyle = \"#AAA\";\n        context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n        let data = this.canvas.toDataURL('image/png');\n        this.photo.setAttribute('src', data);\n        this.$('.btn-take-photo').hideIf(false)\n        this.$('.btn-save').hideIf(true)\n        this.$('.output').hideIf(true)\n    },\n\n\n    takePicture: function (ev) {\n        let context = this.canvas.getContext('2d');\n        this.$('.btn-take-photo').hideIf(true)\n        this.$('.btn-save').hideIf(false)\n        this.$('.output').hideIf(false)\n        if (this.width && this.height) {\n            this.canvas.width = this.width;\n            this.canvas.height = this.height;\n            context.drawImage(this.video, 0, 0, this.width, this.height);\n            context.globalCompositeOperation='destination-in';\n            context.beginPath();\n            context.arc(this.width/2,this.height/2,this.height/2,0,Math.PI*2);\n            context.closePath();\n            context.fill();\n\n            let data = this.canvas.toDataURL('image/png');\n            this.photo.setAttribute('src', data);\n        } else {\n            this.clearPhoto();\n        }\n    },\n\n    addAvatarSelecter: function (ev) {\n        if (this.contact){\n            this.saveNotOwnAvatar();\n        } else {\n            this.saveAvatar();\n        }\n    },\n\n\n    saveAvatar: function () {\n        let blob = Images.getBlobImage(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')),\n            file = new File([blob], \"avatar.png\", {\n                type: \"image/png\",\n            });\n        file.base64 = this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n        if (file && file.base64) {\n            if (this.registration && this.registration_view){\n                this.registration_view.avatar = file;\n                this.registration_view.$('.btn-next').prop('disabled', false);\n                this.registration_view.$('.circle-avatar').addClass('changed');\n                this.registration_view.$('.circle-avatar').setAvatar(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, ''), this.member_details_avatar_size);\n                this.close();\n            } else {\n                this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n                this.$('.btn-save').addClass('hidden-disabled');\n                this.$('.circle-icon').addClass('disabled');\n                this.account.pubAvatar(file, () => {\n                    this.close();\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        }\n    },\n\n    saveNotOwnAvatar: function () {\n        let blob = Images.getBlobImage(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')),\n            file = new File([blob], \"avatar.png\", {\n                type: \"image/png\",\n            }),\n            participant_node = '';\n        if (this.participant && this.participant.get('id')){\n            participant_node = '#' + this.participant.get('id');\n        }\n        file.base64 = this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n        if (file && file.base64) {\n            this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n            this.$('.btn-save').addClass('hidden-disabled');\n            this.$('.circle-icon').addClass('disabled');\n            this.contact.pubAvatar(file, participant_node, () => {\n                this.close();\n                if (this.parent && this.participant) {\n                    this.parent.updateMemberAvatar(this.participant, true);\n                }\n            }, () => {\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            });\n        }\n    },\n});\n\nxabber.EmojiProfileImageView = xabber.BasicView.extend({\n    className: 'modal main-modal emoji-panel',\n    template: templates.emoji_panel,\n\n    events: {\n        \"click .profile-image-background-color\": \"changeColor\",\n        \"click .avatar-wrap\": \"openEmojiPicker\",\n        \"click .close-modal\": \"close\",\n        \"click .btn-save\": \"addAvatarSelecter\",\n        \"click .btn-cancel\": \"close\",\n    },\n\n    open: function (options) {\n        this.account = options.model;\n        this.contact = options.contact;\n        this.participant = options.participant;\n        this.parent = options.parent;\n        this.registration = options.registration;\n        this.registration_view = options.registration_view;\n        this.emoji_panel_view = this.addChild('emoji_picker_panel', xabber.EmojiPickerView,{})\n        this.show();\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    openEmojiPicker: function () {\n        this.emoji_panel_view.open(this);\n    },\n\n    changeColor: function (ev) {\n        let color = $(ev.target).data('value');\n        this.$('.profile-image-background-color').removeClass('chosen-background-color');\n        $(ev.target).addClass('chosen-background-color');\n        this.$('.circle-avatar').attr('class', 'circle-avatar');\n        this.$('.circle-avatar').attr('data-value', color);\n        this.$('.circle-avatar').addClass('ground-color-' + color + '-100');\n    },\n\n    addAvatarSelecter: function (ev) {\n        if (this.contact){\n            this.saveNotOwnAvatar();\n        } else {\n            this.saveAvatar();\n        }\n    },\n\n    saveAvatar: function (ev) {\n        let b64Image = Images.getDefaultAvatar(this.$('.chosen-emoji').data('value') ,this.$('.circle-avatar').css( \"background-color\" ), \"96px EmojiFont\", 176, 176),\n            blob = Images.getBlobImage(b64Image),\n            file = new File([blob], \"avatar.png\", {\n                type: \"image/png\",\n            });\n        file.base64 = blob;\n        if (this.registration && this.registration_view){\n            if (file && file.base64) {\n                this.registration_view.avatar = file;\n                this.registration_view.$('.btn-next').prop('disabled', false);\n                this.registration_view.$('.circle-avatar').addClass('changed');\n                this.registration_view.$('.circle-avatar').setAvatar(b64Image, this.member_details_avatar_size);\n                xabber._settings.save('main_color', this.$('.circle-avatar').attr('data-value'));\n                xabber.trigger('update_main_color');\n                this.close();\n            }\n        } else {\n            if (file && file.base64) {\n                this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n                this.$('.btn-save').addClass('hidden-disabled');\n                this.account.pubAvatar(file, () => {\n                    this.close();\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        }\n    },\n\n    saveNotOwnAvatar: function (ev) {\n        let blob = Images.getBlobImage(Images.getDefaultAvatar(this.$('.chosen-emoji').data('value') ,this.$('.circle-avatar').css( \"background-color\" ), \"96px EmojiFont\", 176, 176)),\n            file = new File([blob], \"avatar.png\", {\n                type: \"image/png\",\n            }),\n            participant_node = '';\n        if (this.participant && this.participant.get('id')){\n            participant_node = '#' + this.participant.get('id');\n        }\n        file.base64 = blob;\n        if (file && file.base64) {\n            this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n            this.$('.btn-save').addClass('hidden-disabled');\n            this.contact.pubAvatar(file, participant_node, () => {\n                this.close();\n                if (this.parent && this.participant) {\n                    if (this.participant.get('jid') === this.account.get('jid'))\n                        this.parent.updateMemberAvatar(this.participant, true);\n                }\n            }, () => {\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            });\n        }\n    },\n});\n\nxabber.EmojiPickerView = xabber.BasicView.extend({\n    className: 'modal main-modal emoji-panel emoji-picker',\n    template: templates.emoji_picker,\n\n    events: {\n        \"click .emojis-bottom-tab-selector\": \"pickEmojiTab\",\n        \"click .emoji-picker-emoji\": \"pickEmoji\",\n        \"click .close-modal\": \"close\",\n    },\n\n    open: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n        this.readEmojisJSON()\n        this.show();\n    },\n\n    readEmojisJSON: function () {\n        this.emojis = templates.emojis;\n\n        if (this.emojis.length) {\n            this.$('.emoji-picker-wrap').html(templates.emoji_picker_tabs({\n                emojis: this.emojis\n            }));\n            this.ps_container = this.$('.emojis-tab');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n    },\n\n    render: function () {\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    scrollTo: function (offset) {\n        this.ps_container.each((index) => {\n            this.ps_container[index].scrollTop = offset;\n        });\n        this.ps_container.perfectScrollbar('update');\n    },\n\n    scrollToTop: function () {\n        this.scrollTo(0);\n    },\n\n    pickEmojiTab: function (ev) {\n        let tab = $(ev.target).data('value');\n        this.$('.emojis-bottom-tab-selector').removeClass('chosen-emoji-selector');\n        $(ev.target).addClass('chosen-emoji-selector');\n        this.$('.emojis-tab').removeClass('chosen-emoji-tab').addClass('hidden');\n        this.$(`.emojis-tab[data-value=\"${tab}\"]`).removeClass('hidden').addClass('chosen-emoji-tab');\n        this.scrollToTop();\n    },\n\n    pickEmoji: function (ev) {\n        let emoji = $(ev.target).closest('.emoji-picker-emoji').data('value');\n        this.parent.$('.chosen-emoji').attr('data-value', emoji).text(emoji);\n        this.close();\n    },\n});\n\nxabber.ChangePasswordView = xabber.BasicView.extend({\n    className: 'modal main-modal change-password-modal',\n    template: templates.change_password,\n\n    events: {\n        \"click .btn-change\": \"submit\",\n        \"click .btn-cancel\": \"close\",\n        \"keyup input[name=password]\": \"keyUp\"\n    },\n\n    _initialize: function () {\n        this.$('input[name=jid]').val(this.model.get('jid'));\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.updateButtons, this);\n        xabber.on(\"quit\", this.onQuit, this);\n        return this;\n    },\n\n    render: function (options) {\n        options || (options = {});\n        this.is_login = options.login;\n        this.token_invalidated = options.token_invalidated;\n        this.$('.modal-header span').text(this.is_login ? xabber.getString(\"xabber_account__social_links__button_log_in\") : xabber.getString(\"button_set_pass\"));\n        this.$('.btn-cancel').text(this.is_login ? xabber.getString(\"skip\") : xabber.getString(\"cancel\"));\n        this.$('.btn-change').text(this.is_login ? xabber.getString(\"xabber_account__social_links__button_log_in\") : xabber.getString(\"set\"));\n        this.$el.openModal({\n            use_queue: true,\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        Materialize.updateTextFields();\n        this.authFeedback({});\n        this.$password_input.val('').focus();\n    },\n\n    getActionName: function () {\n        return this.is_login ? xabber.getString(\"login\") : xabber.getString(\"set\")\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let jid = this.model.get('jid'),\n            password = this.$password_input.val();\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        password = password.trim();\n        this.authFeedback({password: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\")});\n        if (this.model.connection.connected) {\n            this.model.once('deactivate', () => {\n                this.setPassword(password);\n            });\n            this.model.deactivate();\n        } else {\n            this.setPassword(password);\n        }\n    },\n\n    setPassword: function (password) {\n        this.model.last_msg_timestamp = 0;\n        this.model.save({\n            auth_type: 'password',\n            password: utils.utoa(password),\n            enabled: true\n        });\n        this.model.auth_view = this;\n        this.model.connect();\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-change').text(authentication ? xabber.getString(\"stop\") : this.getActionName());\n    },\n\n    authFeedback: function (options) {\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    successFeedback: function () {\n        this.data.set('authentication', false);\n        this.closeModal();\n    },\n\n    endAuth: function (account) {\n        this.model.save('is_new', undefined);\n        this.successFeedback(this.model)\n        this.model.auth_view = null;\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    onQuit: function () {\n        this.closeModal();\n    },\n\n    close: function () {\n        if (this.is_login)\n            this.model.save('enabled', false);\n        if (this.token_invalidated)\n            this.model.deleteAccount();\n        this.cancel();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.model.auth_view = null;\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.ChangeAccountPasswordView = xabber.BasicView.extend({\n    className: 'modal main-modal change-account-password-modal',\n    template: templates.change_account_password,\n    events: {\n        \"click .btn-change\": \"submit\",\n        \"click .btn-cancel\": \"close\",\n        \"keyup input\": \"keyUp\",\n    },\n\n    render: function (options) {\n        this.account = options.model;\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function (options) {\n        this.$('.original-state').removeClass('hidden');\n        this.$('.success-state').addClass('hidden');\n        this.$old_password_input = this.$('input[name=old_password]');\n        this.$password_input = this.$('input[name=password]');\n        this.$password_confirm_input = this.$('input[name=password_confirm]');\n        this.authFeedback({});\n        this.$password_input.val('');\n        this.$password_confirm_input.val('');\n        this.$old_password_input.val('').focus();\n        this.keyUp();\n    },\n\n    keyUp: function (ev) {\n        ev && ev.keyCode === constants.KEY_ENTER && this.submit();\n        if (this.$old_password_input.val() && this.$password_input.val() && this.$password_confirm_input.val()){\n            this.$('.btn-change').prop('disabled', false);\n        } else {\n            this.$('.btn-change').prop('disabled', true);\n        }\n        this.authFeedback({});\n    },\n\n    submit: function () {\n        this.authFeedback({});\n        let jid = this.account.get('jid'),\n            old_password = this.$old_password_input.val(),\n            password = this.$password_input.val(),\n            password_confirm = this.$password_confirm_input.val();\n        if (!old_password)\n            return this.errorFeedback({old_password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        if (password != password_confirm)\n            return this.errorFeedback({password_confirm: xabber.getString(\"settings_account__alert_passwords_do_not_match\")});\n        old_password = old_password.trim();\n        this.authFeedback({password_confirm: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\"), password_not_error: true});\n        if (!this.account.change_password_connection_manager) {\n            this.account.change_password_view = this;\n            this.account.change_password_connection_manager = new Strophe.ConnectionManager(this.account.CONNECTION_URL);\n            this.account.change_password_connection = this.account.change_password_connection_manager.connection;\n            this.account.change_password_connection.account = this.account;\n            this.account.change_password_connection.register.connect_change_password(jid, old_password, this.account.changePasswordCallback.bind(this.account))\n        }\n    },\n\n    authFeedback: function (options) {\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n        this.$old_password_input.switchClass('invalid', options.old_password)\n            .siblings('span.errors').text(options.old_password || '');\n        this.$password_confirm_input.switchClass('invalid', options.password_confirm && !options.password_not_error)\n            .siblings('span.errors').switchClass('non-error', options.password_not_error).text(options.password_confirm || '');\n        this.parent && this.parent.updateHeight();\n    },\n\n    errorFeedback: function (options) {\n        if (this.account.change_password_connection)\n            this.account.change_password_connection.disconnect()\n        this.authFeedback(options);\n    },\n\n    successFeedback: function () {\n        if (this.account.change_password_connection)\n            this.account.change_password_connection.disconnect()\n        this.$('.original-state').addClass('hidden');\n        this.$('.success-state').removeClass('hidden');\n    },\n\n    onHide: function () {\n        this.$el.detach();\n        if (this.account && this.account.unregister_account_connection_manager && this.account.unregister_account_connection) {\n            this.account.unregister_account_connection.disconnect();\n        }\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.AuthView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.updateButtons, this);\n        return this;\n    },\n\n    render: function () {\n        this.onRender();\n    },\n\n    onRender: function () {\n        this.account = null;\n        this.authFeedback({});\n        Materialize.updateTextFields();\n        this.$jid_input.val('').focus();\n        this.$password_input.val('');\n        this.updateButtons();\n        this.updateOptions && this.updateOptions();\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let jid = this.$jid_input.val(),\n            password = this.$password_input.val();\n        if (this.data.get('registration')){\n            let domain = this.$('#new_account_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-xmpp-server .property-value').text();\n            if (!constants.REGISTRATION_CUSTOM_DOMAIN && !(constants.REGISTRATION_DOMAINS.indexOf(domain) > -1))\n                return this.errorRegistrationFeedback({domain: xabber.getString(\"account_auth__error__registration_custom_domain\")});\n            jid = jid + '@' + domain\n        }\n        else if(\n            (this.$('.input-field-jid .xmpp-server-dropdown-wrap').length && !this.$('.input-field-jid .xmpp-server-dropdown-wrap').hasClass('hidden')) &&\n            (this.$('#sign_in_domain') && this.$('#sign_in_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-auth-xmpp-server .property-value').text())\n        ){\n            let domain = this.$('#sign_in_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-auth-xmpp-server .property-value').text();\n            jid = jid + '@' + domain\n        }\n        if (!jid) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n            }\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n        }\n        jid = jid.trim();\n        if (!password)  {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n            }\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        }\n        if (!this.data.get('registration') && !constants.LOGIN_CUSTOM_DOMAIN && !(constants.LOGIN_DOMAINS.indexOf(Strophe.getDomainFromJid(jid)) > -1))\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__login_custom_domain\")});\n        password = password.trim();\n        let at_idx = jid.indexOf('@');\n        if (at_idx <= 0 || at_idx === jid.length - 1) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"account_auth__error__text_wrong_username\")});\n            }\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__text_wrong_username\")});\n        }\n        jid = Strophe.getBareJidFromJid(jid).toLowerCase();\n        let account = xabber.accounts.get(jid);\n        if (account) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"settings_account__alert_account_exists\")});\n            }\n            this.errorFeedback({jid: xabber.getString(\"settings_account__alert_account_exists\")});\n        } else {\n            if (this.data.get('registration'))\n                this.registerFeedback({registration_success: true, password: xabber.getString(\"account_registration__feedback__text_registration\")});\n            else\n                this.authStepperShow();\n            this.getWebsocketURL(jid, (response) => {\n                this.account = xabber.accounts.create({\n                    jid: jid,\n                    websocket_connection_url: response || constants.CONNECTION_URL,\n                    password: utils.utoa(password),\n                    is_new: true\n                }, {auth_view: this});\n\n                if (this.data.get('registration')) {\n                    this.account.connection.register.connect(jid, this.account.registerCallback.bind(this.account))\n                }\n                else\n                    this.account.trigger('start');\n            });\n        }\n    },\n\n    getWebsocketURL: function (jid, callback) {\n        if (!constants.DISABLE_LOOKUP_WS) {\n            let domain = Strophe.getDomainFromJid(jid),\n                request = {\n                    type: 'GET',\n                    url: window.location.protocol + '//' + domain + '/.well-known/host-meta',\n                    dataType: 'xml',\n                    success: (success) => {\n                        let socket_url = $(success).find('Link').attr('href');\n                        if (socket_url)\n                            callback && callback(socket_url);\n                        else\n                            callback && callback(null);\n                    },\n                    error: () => {\n                        callback && callback(null);\n                    },\n                    timeout: 5000\n                };\n            $.ajax(request);\n        }\n        else\n            callback && callback(null);\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n        this.onRender();\n        if (this.account) {\n            this.account.destroy();\n            this.account = null;\n        }\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid)\n            .siblings('span.errors').text(options.jid || '');\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    authStepperShow: function (){\n        this.authFeedback({password: xabber.getString(\"account_auth__feedback__text_authentication\")});\n    },\n\n    endAuth: function (account) {\n        this.account.save('is_new', undefined);\n        this.successFeedback(this.account)\n        this.account.auth_view = null;\n    },\n\n    socialAuth: function (ev) {\n        let origin = window.location.href,\n            provider = $(ev.target).closest('.btn-social').data('provider');\n        if (provider == 'email')\n            xabber.body.setScreen('login', {'login_screen': 'xabber'});\n        else\n            window.location.href = constants.XABBER_ACCOUNT_URL + '/social/login/' + provider + '/?origin=' + origin + '&source=Xabber Web';\n    }\n});\n\nxabber.XmppLoginPanel = xabber.AuthView.extend({\n    className: 'login-panel',\n    template: templates.xmpp_login,\n\n    events: {\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-sign-up-instead\": \"logoutAndRegister\",\n        \"click .btn-register-form\": \"openRegisterForm\",\n        \"click .btn-login-form\": \"openLoginForm\",\n        \"click .btn-register\": \"register\",\n        \"click .btn-cancel\": \"cancel\",\n        \"click .btn-go-back-menu\": \"openButtonsMenu\",\n        \"click .btn-go-back\": \"openPreviousStep\",\n        \"click .btn-next\": \"openNextStep\",\n        \"click .btn-skip\": \"registerWithoutAvatar\",\n        \"click .btn-finish-log-in\": \"endAuth\",\n        \"keyup input[name=register_nickname]\": \"keyUpNickname\",\n        \"keyup input[name=register_jid]\": \"keyUpJid\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"keyup input[name=register_domain]\": \"keyUpDomain\",\n        \"focusout input[name=register_domain]\": \"focusoutDomain\",\n        \"keyup input[name=register_password]\": \"keyUpPassword\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"change .device-metadata input[type=radio][name=device_metadata]\": \"setDeviceMetadata\",\n        \"click .auth-settings\": \"openLoginSettings\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-emoji-panel\": \"openEmojiPanel\",\n        \"click .btn-selfie\": \"openWebcamPanel\",\n        \"click #select-xmpp-server .property-variant\": \"changePropertyValueRegistration\",\n        \"click #select-auth-xmpp-server .property-variant\": \"changePropertyValueAuth\",\n    },\n\n    __initialize: function () {\n        this.$nickname_input = this.$('input[name=register_nickname]');\n        this.$domain_input = this.$('input[name=register_domain]');\n        this.data.on(\"change:step\", this.handleRegistrationStep, this);\n        return this;\n    },\n\n    onRender: function () {\n        this.data.set('step', 1)\n        this.account = null;\n        this.stepped_auth = true;\n        this.stepped_auth_complete = false;\n        this.authFeedback({});\n        this.registerFeedback({});\n        this.$('.btn-go-back').hideIf(false);\n        this.$('.btn-skip').hideIf(true)\n        this.$nickname_input.val('');\n        this.$jid_input.val('');\n        this.$password_input.val('');\n        this.$('.circle-avatar').css({'background-image': ''});\n        this.$('.circle-avatar').css({'background-color': ''});\n        this.updateButtons();\n        this.updateDomains();\n        this.updateAuthDomains();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.property-field .select-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.avatar-wrap.dropdown-button').dropdown(dropdown_settings);\n        this.$('.btn-register-form').hideIf(!constants.REGISTRATION_BUTTON);\n        this.$('.btn-login-form').hideIf(!constants.LOGIN_CUSTOM_DOMAIN && !constants.LOGIN_DOMAINS.length);\n        this.$('.register-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.REGISTRATION_CUSTOM_DOMAIN);\n        this.$('.login-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.LOGIN_CUSTOM_DOMAIN);\n        this.updateOptions && this.updateOptions();\n        this.$('#select-xmpp-server').hideIf(xabber.url_params.rkey)\n        this.$('.select-xmpp-server .caret').hideIf(xabber.url_params.rkey)\n        this.$(`.device-metadata input[type=radio][name=device_metadata][value=${xabber.settings.device_metadata}]`)\n            .prop('checked', true);\n        this.$(`.device-metadata-description`).text(xabber.getString(`settings__section_privacy__${xabber.settings.device_metadata}_metadata_description`));\n        if (xabber.url_params.anchor == 'signup' || xabber.url_params.rkey)\n            this.data.set('step', 2)\n        else if (xabber.url_params.anchor == 'signin')\n            this.data.set('step', 0)\n        Materialize.updateTextFields();\n    },\n\n    openButtonsMenu: function () {\n        this.data.set('step', 1);\n        this.$('.settings-block-wrap.privacy').addClass('hidden');\n    },\n\n    register: function () {\n        if (this.data.get('registration')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('registration', true);\n        this.$jid_input.prop('disabled', true);\n        this.$password_input.prop('disabled', true);\n        this.submit();\n    },\n\n    login: function () {\n        this.submit();\n    },\n\n    keyUpNickname: function (ev) {\n        if(this.$nickname_input.val()){\n            this.$('.btn-next').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-next').prop('disabled', true);\n        }\n        if (this.$nickname_input.val() && ev)\n            ev.keyCode === constants.KEY_ENTER && this.openNextStep();\n    },\n\n    keyUpJid: function (ev) {\n        clearTimeout(this._check_user_timeout);\n        if (!this.$('.btn-next').prop('disabled') && ev && ev.keyCode === constants.KEY_ENTER) {\n            this.openNextStep();\n            return;\n        }\n        if (this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.REGISTRATION_CUSTOM_DOMAIN){\n            this.setCustomDomainRegistration(this.$('.register-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'))\n            this.$domain_input.val(this.$jid_input.val().split('@')[1]);\n            this.$jid_input.val(this.$jid_input.val().split('@')[0]);\n            this.$domain_input.focus();\n            return;\n        }\n        this.$('.btn-next').prop('disabled', true);\n        if(this.$jid_input.val()){\n            let regexp_local_part = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))$/,\n                regexp_domain = /^((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                domain = this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text();\n            if (!regexp_local_part.test(this.$jid_input.val()))\n                return this.registerFeedback({jid: xabber.getString(\"account_add__alert_localpart_invalid\")});\n            else if (!(regexp_domain.test(domain)))\n                return this.registerFeedback({domain: xabber.getString(\"account_add__alert_invalid_domain\")});\n            else\n                this.registerFeedback({});\n            if (!constants.REGISTRATION_CUSTOM_DOMAIN && !(constants.REGISTRATION_DOMAINS.indexOf(domain) > -1))\n                return this.registerFeedback({domain: xabber.getString(\"account_auth__error__registration_custom_domain\")});\n            this._check_user_timeout = setTimeout(() => {\n                domain = this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text();\n                this.$('.btn-next').prop('disabled', true);\n                this._registration_username = this.$jid_input.val()\n                this._registration_domain = domain\n                if (domain) {\n                    if (this.auth_connection && this.auth_connection.domain != domain)\n                        this.auth_connection.disconnect()\n                    if (!this.auth_connection) {\n                        this.getWebsocketURL(domain, (response) => {\n                            this.CONNECTION_URL = response || constants.CONNECTION_URL;\n                            this.auth_conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL);\n                            this.auth_connection = this.auth_conn_manager.connection;\n                            this.auth_connection.register.connect_check_user(domain, this.checkUserCallback.bind(this))\n                        });\n                    }\n                    else if(this.auth_connection && this.auth_connection.connected) {\n                        this.auth_connection.register._connection._addSysHandler(this.handleRegisterStanza.bind(this.auth_connection.register),\n                            null, \"iq\", null, null);\n                        this.auth_connection.register._connection.send($iq({type: \"get\", id: uuid(), to: this.auth_connection.register.domain }).c(\"query\",\n                            {xmlns: Strophe.NS.REGISTER}).c(\"username\").t(this._registration_username.trim()).tree());\n                    }\n                }\n                else {\n                    this.registerFeedback({jid: xabber.getString(\"account_add__alert_invalid_domain\")});\n                }\n            }, 1000);\n        }\n        else\n            this.registerFeedback({});\n    },\n\n    keyUpPassword: function (ev) {\n        if(this.$password_input.val()){\n            this.$('.btn-next').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-next').prop('disabled', true);\n        }\n        if (this.$password_input.val() && ev)\n            ev.keyCode === constants.KEY_ENTER && this.openNextStep();\n    },\n\n    keyUpDomain: function () {\n    },\n\n    keyUpLogin: function (ev) {\n        if(this.$jid_input.val() && this.$password_input.val()){\n            this.$('.btn-log-in').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-log-in').prop('disabled', true);\n        }\n        this.$('.login-step-wrap').hideIf(true);\n        this.authFeedback({});\n        this.$('.input-field-jid .xmpp-server-dropdown-wrap').hideIf(this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.LOGIN_CUSTOM_DOMAIN)\n        if (this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.LOGIN_CUSTOM_DOMAIN){\n            this.$('.input-field-jid').addClass('input-field-jid-borders')\n        }else {\n            this.$('.input-field-jid').removeClass('input-field-jid-borders')\n        }\n        if (ev && this.$jid_input.val() && this.$password_input.val())\n            ev.keyCode === constants.KEY_ENTER && this.login();\n    },\n\n    focusoutDomain: function () {\n        if(this.$jid_input.val() && (this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text()))\n            this.keyUpJid();\n    },\n\n    handleRegisterStanza: function (stanza) {\n        let i, query, field, username_taken, conn = this._connection;\n        query = stanza.getElementsByTagName(\"query\");\n        if (query.length !== 1) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n            return false;\n        }\n        query = query[0];\n        for (i = 0; i < query.childNodes.length; i++) {\n            field = query.childNodes[i];\n            if (field.tagName.toLowerCase() === 'instructions') {\n                conn.register.instructions = Strophe.getText(field);\n                continue;\n            } else if (field.tagName.toLowerCase() === 'username') {\n                if (Strophe.getText(field))\n                    this._supports_check_user = true\n                continue;\n            } else if (field.tagName.toLowerCase() === 'registered') {\n                username_taken = true\n                continue;\n            } else if (field.tagName.toLowerCase() === 'x') {\n                continue;\n            }\n            conn.register.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n        }\n        if (this._supports_check_user){\n            if (username_taken)\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, null);\n            else\n                conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n        else\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"not-supported\");\n\n        return false;\n    },\n\n    checkUserCallback: function (status, condition) {\n        if (status === Strophe.Status.REGISTER || status === Strophe.Status.REGIFAIL) {\n            if (!this.$('.select-xmpp-server .property-variant[data-value=\"' + this.auth_connection.register.domain + '\"]').length && constants.REGISTRATION_CUSTOM_DOMAIN) {\n                $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                    .text(this.auth_connection.register.domain)\n                    .attr('data-value', this.auth_connection.register.domain)\n                    .insertBefore(this.$('.register-form-jid .dropdown-content .set-custom-domain'));\n            }\n            this.$('.select-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#new_account_domain').val(\"\");\n            this.$('.select-xmpp-server .xmpp-server-item-wrap .property-value').text(this.auth_connection.register.domain)\n                .removeClass('hidden').attr('data-value', this.auth_connection.register.domain);\n        }\n        if (status === Strophe.Status.REGISTER) {\n            if (this.auth_connection && this.auth_connection.connected) {\n                this.auth_connection.register._connection._addSysHandler(this.handleRegisterStanza.bind(this.auth_connection.register),\n                    null, \"iq\", null, null);\n                this.auth_connection.register._connection.send($iq({type: \"get\", id: uuid(), to: this.auth_connection.register.domain }).c(\"query\",\n                    {xmlns: Strophe.NS.REGISTER}).c(\"username\").t(this._registration_username.trim()).tree());\n            }\n        } else if (status === Strophe.Status.REGISTERED) {\n            this.registerFeedback({user_success: true, jid: xabber.getString(\"xmpp_login__registration_jid_available\")});\n            this.$('.btn-next').prop('disabled', false);\n        } else if (status === Strophe.Status.CONFLICT) {\n            this.registerFeedback({jid: xabber.getString(\"xmpp_login__registration_jid_occupied\")});\n            this.$('.btn-next').prop('disabled', true);\n        } else if (status === Strophe.Status.CONNFAIL) {\n            this.registerFeedback({jid: xabber.getString(\"CONNECTION_FAILED\") + ': ' + condition});\n            this.$('.btn-next').prop('disabled', true);\n        } else if (status === Strophe.Status.REGIFAIL) {\n            if (condition === 'not-supported'){\n                this.registerFeedback({});\n                this.$('.btn-next').prop('disabled', false);\n            }\n            else {\n                this.registerFeedback({jid: xabber.getString(\"xmpp_login__registration_jid_not_supported\")});\n                this.$('.btn-next').prop('disabled', true);\n            }\n            this.auth_connection.disconnect()\n        } else if (status === Strophe.Status.CONNECTING) {\n            clearTimeout(this._check_user_connection_timeout);\n                this._check_user_connection_timeout = setTimeout(() => {\n                    if(this.auth_connection && !this.auth_connection.connected){\n                        this.auth_connection._no_response = true\n                        this.auth_connection.disconnect()\n                    }\n                }, 10000);\n        } else if (status === Strophe.Status.DISCONNECTED) {\n            this.auth_connection && clearTimeout(this.auth_connection.openCheckTimeout);\n            if (this.auth_connection && this.auth_connection._no_response) {\n                this.registerFeedback({jid: xabber.getString(\"account_add__alert_invalid_domain\")});\n                this.$('.btn-next').prop('disabled', true);\n            }\n            this.auth_conn_manager = undefined;\n            this.auth_connection = undefined;\n        }\n    },\n\n    openPreviousStep: function () {\n        let step = this.data.get('step')\n        if(typeof step === 'number') {\n            step--;\n            this.data.set('step', step)\n        }\n    },\n\n    openNextStep: function () {\n        let step = this.data.get('step')\n        if(typeof step === 'number') {\n            step++;\n            this.data.set('step', step)\n        }\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step')\n        if (step === -1){\n            this.$(`.server-feature .preloader-wrapper`).addClass('active').addClass('visible');\n            this.$(`.server-feature .mdi`).hideIf(true);\n            this.$(`.server-feature`).removeClass('active-feature')\n            this.$(`.server-feature .mdi`).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n            this.$('.login-form-header').text(xabber.getString(\"signin_server_features\"));\n            this.$('.login-form-server-features .register-form-step-header').text(xabber.getString(\"signin_checking_features_message\", [this.account.domain]));\n            this.$('.btn-go-back-menu').hideIf(true);\n            this.$('.login-form-jid').hideIf(true);\n            this.$('.login-form-server-features').hideIf(false);\n            this.$('.btn-log-in').hideIf(true);\n            this.checkFeaturesStepper();\n        }\n        if (step === 0){\n            this.$jid_input = this.$('input[name=jid]');\n            this.$password_input = this.$('input[name=password]');\n            this.$domain_input = this.$('input[name=sign_in_domain]');\n            this.$domain_input.val('')\n            this.$jid_input.val('')\n            this.$password_input.val('')\n            this.keyUpLogin();\n            this.$('.login-step-wrap').hideIf(true);\n            this.authFeedback({});\n            this.resetAuthStepper();\n            this.$('.login-panel-form.xmpp-login-form .buttons-wrap').removeClass('server-features-additional-button')\n            this.$('.login-form-header').text(xabber.getString(\"title_login_xabber_account\"));\n            this.$('.btn-go-back-menu').hideIf(false);\n            this.$('.login-panel-intro').hideIf(true);\n            this.$('.register-form').hideIf(true);\n            this.$('.xmpp-login-form').hideIf(false);\n            this.$('.login-form-jid').hideIf(false);\n            this.$('.login-form-server-features').hideIf(true);\n            this.$('.btn-log-in').hideIf(false);\n            this.$('.btn-finish-log-in').hideIf(true);\n            this.$('.btn-sign-up-instead').hideIf(true);\n            this.$jid_input.focus();\n        }\n        else if (step === 1){\n            this.$('.login-panel-intro').hideIf(false);\n            this.$('.register-form').hideIf(true);\n            this.$('.xmpp-login-form').hideIf(true);\n        }\n        else if (step === 2){\n            this.$jid_input = this.$('input[name=register_jid]');\n            this.$password_input = this.$('input[name=register_password]');\n            this.$domain_input = this.$('input[name=register_domain]');\n            this.keyUpNickname();\n            this.$('.login-form-header').text(xabber.getString(\"title_register_xabber_account\"));\n            this.$('.login-form-url').hideIf(false);\n            this.$('.login-panel-intro').hideIf(true);\n            this.$('.register-form').hideIf(false);\n            this.$('.xmpp-login-form').hideIf(true);\n            this.$('.register-form-nickname').hideIf(false);\n            this.$('.register-form-jid').hideIf(true);\n            this.$('.register-form-password').hideIf(true);\n            this.$('.register-form-picture').hideIf(true);\n            this.$nickname_input.focus();\n        }\n        else if (step === 3){\n            if (this.$nickname_input.val()) {\n                this.$('.login-form-header').text(xabber.getString(\"hint_username\"));\n                this.$('.register-form-nickname').hideIf(true);\n                this.$('.register-form-jid').hideIf(false);\n                this.$('.register-form-password').hideIf(true);\n                this.$('.register-form-picture').hideIf(true);\n                this.keyUpJid();\n                this.$jid_input.focus();\n                this.$password_input.val('');\n            }\n            else {\n                this.registerFeedback({nickname: xabber.getString(\"dialog_add_circle__error__text_input_name\")});\n                return this.data.set('step', 2);\n            }\n\n        }\n        else if (step === 4){\n            if (this.$jid_input.val()) {\n                this.$('.login-form-header').text(xabber.getString(\"hint_pass\"));\n                this.$('.register-form-nickname').hideIf(true);\n                this.$('.register-form-jid').hideIf(true);\n                this.$('.register-form-password').hideIf(false);\n                this.$('.register-form-picture').hideIf(true);\n                this.keyUpPassword();\n                this.$password_input.focus();\n            }\n            else {\n                this.registerFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n                return this.data.set('step', 3);\n            }\n\n        }\n        else if (step === 5){\n            if (this.$password_input.val()) {\n                this.register();\n            }\n            else {\n                this.registerFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n                return this.data.set('step', 4);\n            }\n        }\n        else if (step === 6){\n            this.$('.login-form-header').text(xabber.getString(\"xmpp_login__registration_header_avatar\"));\n            this.$('.login-form-url').hideIf(true);\n            this.$('.btn-go-back').hideIf(true);\n            this.$('.btn-skip').hideIf(false)\n            this.$('.register-form-nickname').hideIf(true);\n            this.$('.register-form-jid').hideIf(true);\n            this.$('.register-form-password').hideIf(true);\n            this.$('.register-form-picture').hideIf(false);\n            this.$('.btn-next').prop('disabled', true);\n            if (this.auth_connection)\n                this.auth_connection.disconnect();\n            if (this.account.connection && this.account.connection.register && this.account.connection.register._connection)\n                this.account.connection.register._connection.disconnect();\n            this.account.set('deferred_auth', true);\n            setTimeout(() => {\n                this.account.trigger('start');\n            }, 1000)\n        }\n        else if (step >= 7){\n            if(this.avatar)\n                this.account.pubAvatar(this.avatar, () => {\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            this.successRegistrationFeedback();\n        }\n    },\n\n    registerWithoutAvatar: function () {\n        this.successRegistrationFeedback();\n    },\n\n    logoutAndRegister: function () {\n        this.account.session.set('delete', true);\n        this.account.deactivate();\n        this.openRegisterForm()\n    },\n\n    openRegisterForm: function () {\n        this.data.set('step', 2)\n    },\n\n    openLoginForm: function () {\n        this.data.set('step', 0)\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-log-in').prop('disabled', authentication);\n    },\n\n    updateDomains: function () {\n        let all_servers = constants.REGISTRATION_DOMAINS;\n        if (xabber.url_params.rkey && all_servers.length){\n            for (let i = all_servers.length - 1; i >= 0; i--) {\n                if (!sha1(all_servers[i]).substr(0, 10).includes(xabber.url_params.rkey.substr(0, 10))){\n                    all_servers.splice(i, 1)\n                }\n            }\n        }\n        this.$('.register-form-jid .field-jid.property-variant').remove()\n        if (all_servers.length)\n            this.$('.register-form-jid .xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n        else\n            this.setCustomDomainRegistration(this.$('.register-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.register-form-jid .modal-content .jid-field .set-default-domain').remove();\n\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                .text(all_servers[i])\n                .attr('data-value', all_servers[i])\n                .insertBefore(this.$('.register-form-jid .dropdown-content .set-custom-domain'));\n        }\n    },\n\n    updateAuthDomains: function () {\n        let all_servers = constants.LOGIN_DOMAINS;\n\n        this.$('.login-form-jid .field-jid.property-variant').remove()\n        if (all_servers.length)\n            this.$('.login-form-jid .xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n        else\n            this.setCustomDomainAuth(this.$('.login-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.login-form-jid .modal-content .jid-field .set-default-domain').remove();\n\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                .text(all_servers[i])\n                .attr('data-value', all_servers[i])\n                .insertBefore(this.$('.login-form-jid .dropdown-content .set-custom-domain'));\n        }\n    },\n\n    setCustomDomainRegistration: function ($property_value) {\n        this.$('#new_account_domain').val(\"\");\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.select-xmpp-server .caret').addClass('hidden');\n        this.$('.select-xmpp-server .input-group-chat-domain').removeClass('hidden');\n    },\n\n    setCustomDomainAuth: function ($property_value) {\n        this.$('#sign_in_domain').val(\"\");\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.select-auth-xmpp-server .caret').addClass('hidden');\n        this.$('.select-auth-xmpp-server .input-group-chat-domain').removeClass('hidden');\n    },\n\n    changePropertyValueRegistration: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomainRegistration($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.select-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#new_account_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-xmpp-server .caret').removeClass('hidden');\n        if(this.$jid_input.val() && (this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text()))\n            this.keyUpJid();\n    },\n\n    changePropertyValueAuth: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomainAuth($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.select-auth-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#sign_in_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-auth-xmpp-server .caret').removeClass('hidden');\n    },\n\n    chooseAvatar: function () {\n        this.$('.circle-avatar input').click();\n    },\n\n    openEmojiPanel: function () {\n        let emoji_panel_view = new xabber.EmojiProfileImageView();\n        emoji_panel_view.open({model: this.account, registration: true, registration_view: this});\n    },\n\n    openWebcamPanel: function () {\n        let webcam_panel_view = new xabber.WebcamProfileImageView();\n        webcam_panel_view.open({model: this.account, registration: true, registration_view: this});\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.avatar = file;\n                this.$('.btn-next').prop('disabled', false);\n                this.$('.circle-avatar').addClass('changed');\n                this.$('.circle-avatar').setAvatar(image, this.member_details_avatar_size);\n            }\n        });\n    },\n\n    openLoginSettings: function (ev) {\n        this.$('.settings-block-wrap.privacy').removeClass('hidden');\n    },\n\n    setDeviceMetadata: function (ev) {\n        xabber._settings.save('device_metadata', ev.target.value);\n        this.$(`.device-metadata-description`).text(xabber.getString(`settings__section_privacy__${xabber._settings.get('device_metadata')}_metadata_description`));\n    },\n\n    successFeedback: function () {\n        this.data.set('step', -1)\n    },\n\n    checkFeaturesStepper: function () {\n        this.$('.server-features-error').text('');\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            if (this.account.server_features.get(Strophe.NS.MAM)){\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"]`).addClass('active-feature');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n            }\n            else\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n            setTimeout(() => {\n                if (this.account.server_features.get(Strophe.NS.SYNCHRONIZATION)){\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).addClass('active-feature');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                }\n                else\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                setTimeout(() => {\n                    if (this.account.server_features.get(Strophe.NS.REWRITE)){\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"]`).addClass('active-feature');\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                    }\n                    else\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                    setTimeout(() => {\n                        if (this.account.server_features.get(Strophe.NS.AUTH_DEVICES)) {\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`).addClass('active-feature');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                        }\n                        else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');;\n                        setTimeout(() => {\n                            if (this.account.server_features.get(Strophe.NS.PUBSUB)){\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"]`).addClass('active-feature');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                            }\n                            else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                            setTimeout(() => {\n                                if (this.account.server_features.get(Strophe.NS.HTTP_UPLOAD)){\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`).addClass('active-feature');\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                }\n                                else\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                                setTimeout(() => {\n                                    if (constants.RECOMMENDED_DOMAIN && (this.$('.server-feature.active-feature').length != 6)){\n                                        this.$('.server-features-error').text(xabber.getString('signin_not_all_features', [constants.RECOMMENDED_DOMAIN]));\n                                        this.$('.login-panel-form.xmpp-login-form .buttons-wrap').addClass('server-features-additional-button');\n                                        this.$('.btn-sign-up-instead').hideIf(false);\n                                    }\n                                    if (this.$('.server-feature.active-feature').length != 6) {\n                                        this.$('.btn-finish-log-in').text(xabber.getString('signin_proceed_anyway'))\n                                        this.$('.btn-finish-log-in').addClass('btn-main').removeClass('btn-main-filled')\n                                    }\n                                    else {\n                                        this.$('.btn-finish-log-in').text(xabber.getString('xaccount_next'))\n                                        this.$('.btn-finish-log-in').removeClass('btn-main').addClass('btn-main-filled')\n                                    }\n                                    this.$('.btn-finish-log-in').hideIf(false);\n                                }, timeout_timer);\n                            }, timeout_timer);\n                        }, timeout_timer);\n                    }, timeout_timer);\n                }, timeout_timer);\n            }, timeout_timer);\n        }, timeout_timer);\n    },\n\n    endAuth: function (account) {\n        this.account.save('is_new', undefined);\n        this.data.set('registration', false);\n        this.data.set('authentication', false);\n        !this.account.get('deferred_auth') && xabber.body.setScreen('all-chats', {right: null});\n        this.account.trigger('ready_to_get_roster');\n        this.account.auth_view = null;\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid);\n        this.$('.login-form-jid .login-jid-error').text(options.jid || '').showIf(options.jid);\n        this.$password_input.switchClass('invalid', options.password);\n        this.$('.login-form-jid .login-password-error').text(options.password || '').showIf(options.password);\n        this.$('.login-form-jid .register-form-step-description').hideIf(options.password || options.jid);\n    },\n\n    resetAuthStepper: function (){\n        this.$(`.login-step .preloader-wrapper`).addClass('active').addClass('visible');\n        this.$(`.login-step .mdi`).hideIf(true);\n        this.$(`.login-step`).removeClass('active-feature')\n        this.$(`.login-step .mdi`).addClass('mdi-alert-circle').removeClass('mdi-checkbox-marked-circle')\n    },\n\n    authStepperShow: function (){\n        this.$('.login-step-wrap').hideIf(false);\n        this.$(`.login-step`).hideIf(true);\n    },\n\n    authStepperStart: function (){\n        this.$(`.login-step.connecting-step`).hideIf(false);\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            this.$(`.login-step.connecting-step`).addClass('active-feature');\n            this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n            this.$(`.login-step.connecting-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n            this.$(`.login-step.credentials-step`).hideIf(false);\n            setTimeout(() => {\n                this.$(`.login-step.credentials-step`).addClass('active-feature');\n                this.$(`.login-step.credentials-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.credentials-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n                setTimeout(() => {\n                    if (this.account && this.account.connection){\n                        if (constants.TRUSTED_DOMAINS.indexOf(this.account.connection.domain) > -1){\n                            this.endAuth();\n                        } else {\n                            this.stepped_auth_complete = true\n                            if (this.first_features_received)\n                                this.successFeedback();\n                        }\n                    }\n                },timeout_timer)\n            },timeout_timer)\n        },timeout_timer)\n    },\n\n    authStepperError: function (auth_error, options){\n        let timeout_timer = 1000;\n        this.$('.login-step-wrap').hideIf(false);\n        this.$(`.login-step.connecting-step`).hideIf(false);\n        setTimeout(() => {\n            if (auth_error){\n                this.$(`.login-step.connecting-step`).addClass('active-feature');\n                this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.connecting-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n                this.$(`.login-step.credentials-step`).hideIf(false);\n            }\n            else {\n                this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.connecting-step .mdi`).hideIf(false);\n                this.errorFeedback(options);\n                return;\n            }\n            setTimeout(() => {\n                this.$(`.login-step.credentials-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.credentials-step .mdi`).hideIf(false);\n                this.errorFeedback(options);\n            },timeout_timer)\n        },timeout_timer)\n    },\n\n    registerFeedback: function (options) {\n        if(options.user_success) {\n            this.$('.register-form-jid .register-form-step-error').addClass('available').text(options.jid || '').showIf(options.jid);\n            this.$jid_input.removeClass('invalid');\n            this.$('.register-form-jid .register-form-step-description').hideIf(options.jid);\n        }\n        else if(options.registration_success) {\n            this.$('.register-form-password .register-form-step-error').addClass('available').text(options.password || '').showIf(options.password);\n            this.$password_input.removeClass('invalid');\n            this.$('.register-form-password .register-form-step-description').hideIf(options.password);\n        }\n        else {\n            this.$nickname_input.switchClass('invalid', options.nickname);\n            this.$('.register-form-nickname.register-form-step-error').text(options.nickname || '').showIf(options.nickname);\n            this.$('.register-form-nickname .register-form-step-description').hideIf(options.nickname);\n            this.$jid_input.switchClass('invalid', options.jid);\n            this.$domain_input.switchClass('invalid', options.domain);\n            this.$('.register-form-jid .register-form-step-error').removeClass('available').text(options.jid || options.domain || '').showIf(options.jid || options.domain);\n            this.$('.register-form-jid .register-form-step-description').hideIf(options.jid || options.domain);\n            this.$password_input.switchClass('invalid', options.password);\n            this.$('.register-form-password .register-form-step-error').removeClass('available').text(options.password || '').showIf(options.password);\n            this.$('.register-form-password .register-form-step-description').hideIf(options.password);\n        }\n    },\n\n    errorRegistrationFeedback: function (options) {\n        this.registerFeedback(options);\n        this.data.set('registration', false);\n        this.data.set('authentication', false);\n        this.$jid_input.prop('disabled', false);\n        this.$password_input.prop('disabled', false);\n        if(this.account)\n            this.account.destroy();\n    },\n\n    successRegistrationFeedback: function () {\n        this.$jid_input.prop('disabled', false);\n        this.$password_input.prop('disabled', false);\n        this.account.set('deferred_auth', false);\n        xabber.toolbar_view.showAllChats()\n    },\n});\n\n\nxabber.AddAccountView = xabber.XmppLoginPanel.extend({\n    className: 'modal main-modal add-account-modal',\n    template: templates.add_account,\n\n    events: {\n        \"click .login-type\": \"changeLoginType\",\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-cancel\": \"logout\",\n        \"click .btn-go-back-menu\": \"close\",\n        \"click .btn-finish-log-in\": \"endAuth\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"click .property-variant\": \"changePropertyValueAuth\"\n    },\n\n    render: function (options) {\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        this.data.set('step', 0)\n        this.account = null;\n        this.stepped_auth = true;\n        this.stepped_auth_complete = false;\n        this.authFeedback({});\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.$domain_input = this.$('input[name=sign_in_domain]');\n        this.$jid_input.val('')\n        this.$password_input.val('')\n        this.keyUpLogin();\n        this.updateAuthDomains();\n        this.$('.login-step-wrap').hideIf(true);\n        this.resetAuthStepper();\n        this.$('.login-panel-form.xmpp-login-form .buttons-wrap').removeClass('server-features-additional-button')\n        this.$('.modal-header').text(xabber.getString(\"account_add\"));\n        this.$('.login-form-jid').hideIf(false);\n        this.$('.login-form-server-features').hideIf(true);\n        this.$('.btn-log-in').hideIf(false);\n        this.$('.btn-cancel').hideIf(true);\n        this.$('.btn-finish-log-in').hideIf(true);\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.property-field .select-auth-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.login-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.LOGIN_CUSTOM_DOMAIN);\n        Materialize.updateTextFields();\n        this.updateButtons();\n        this.updateOptions && this.updateOptions();\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step')\n        if (step === -1){\n            this.$(`.server-feature .preloader-wrapper`).addClass('active').addClass('visible');\n            this.$(`.server-feature .mdi`).hideIf(true);\n            this.$(`.server-feature`).removeClass('active-feature')\n            this.$(`.server-feature .mdi`).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n            this.$('.modal-header').text(xabber.getString(\"signin_server_features\"));\n            this.$('.login-form-jid').hideIf(true);\n            this.$('.login-form-server-features').hideIf(false);\n            this.$('.btn-log-in').hideIf(true);\n            this.checkFeaturesStepper();\n        }\n    },\n\n    logout: function () {\n        this.account.session.set('delete', true);\n        this.account.deactivate();\n        this.closeModal();\n    },\n\n    endAuth: function () {\n        this.account.save('is_new', undefined);\n        this.data.set('authentication', false);\n        this.account.trigger('ready_to_get_roster');\n        this.account.auth_view = null;\n        this.closeModal();\n    },\n\n    checkFeaturesStepper: function () {\n        this.$('.server-features-error').text('');\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            if (this.account.server_features.get(Strophe.NS.MAM)){\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"]`).addClass('active-feature');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n            }\n            else\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n            setTimeout(() => {\n                if (this.account.server_features.get(Strophe.NS.SYNCHRONIZATION)){\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).addClass('active-feature');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                }\n                else\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                setTimeout(() => {\n                    if (this.account.server_features.get(Strophe.NS.REWRITE)){\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"]`).addClass('active-feature');\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                    }\n                    else\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                    setTimeout(() => {\n                        if (this.account.server_features.get(Strophe.NS.AUTH_DEVICES)) {\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`).addClass('active-feature');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                        }\n                        else\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');;\n                        setTimeout(() => {\n                            if (this.account.server_features.get(Strophe.NS.PUBSUB)){\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"]`).addClass('active-feature');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                            }\n                            else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                            setTimeout(() => {\n                                if (this.account.server_features.get(Strophe.NS.HTTP_UPLOAD)){\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`).addClass('active-feature');\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                }\n                                else\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                                setTimeout(() => {\n                                    if (constants.RECOMMENDED_DOMAIN && (this.$('.server-feature.active-feature').length != 6)){\n                                        this.$('.server-features-error').text(xabber.getString('signin_not_all_features', [constants.RECOMMENDED_DOMAIN]));\n                                    }\n                                    if (this.$('.server-feature.active-feature').length != 6)\n                                        this.$('.btn-finish-log-in').text(xabber.getString('signin_proceed_anyway'))\n                                    else\n                                        this.$('.btn-finish-log-in').text(xabber.getString('xaccount_next'))\n                                    this.$('.btn-finish-log-in').hideIf(false);\n                                    this.$('.btn-cancel').hideIf(false);\n                                }, timeout_timer);\n                            }, timeout_timer);\n                        }, timeout_timer);\n                    }, timeout_timer);\n                }, timeout_timer);\n            }, timeout_timer);\n        }, timeout_timer);\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.cancel();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\n\nxabber.UnregisterAccountView = xabber.XmppLoginPanel.extend({\n    className: 'modal main-modal unregister-account-modal',\n    template: templates.unregister_account,\n\n    events: {\n        \"click .login-type\": \"changeLoginType\",\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-submit-unregister\": \"submitUnregister\",\n        \"click .btn-cancel\": \"close\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"change input[type=checkbox]\": \"keyUpLogin\",\n        \"click .property-variant\": \"changePropertyValueAuth\"\n    },\n\n    render: function (options) {\n        this.account = options.model;\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function (options) {\n        this.authFeedback({});\n        this.data.set('step', 0);\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.$('input[type=checkbox]').prop('checked', false);\n        this.$jid_input.val('')\n        this.$password_input.val('')\n        this.keyUpLogin();\n        Materialize.updateTextFields();\n    },\n\n    keyUpLogin: function (ev) {\n        let checked_count = this.$('input[type=checkbox]:checked').length;\n        if(this.$password_input.val() && checked_count === 2){\n            this.$('.btn-log-in').prop('disabled', false);\n        } else {\n            this.$('.btn-log-in').prop('disabled', true);\n        }\n        if(this.$jid_input.val() && this.$jid_input.val() === `delete ${this.account.get('jid')} account`){\n            this.$('.btn-submit-unregister').prop('disabled', false);\n        } else {\n            this.$('.btn-submit-unregister').prop('disabled', true);\n        }\n        this.authFeedback({});\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid);\n        this.$('.login-form-jid .login-jid-error').text(options.jid || '').showIf(options.jid);\n        this.$password_input.switchClass('invalid', options.password && !options.password_not_error);\n        this.$('.login-form-jid .login-password-error').switchClass('non-error', options.password_not_error).text(options.password || '');\n    },\n\n    unregisterAccount: function (callback, errback) {\n        let iq = $iq({\n            type: 'set',\n            to: this.connection.domain,\n            from: this.get('jid')\n        }).c('query', {xmlns:Strophe.NS.REGISTER}).c('remove');\n        this.sendIQFast(iq, (success) => {\n                callback & callback(success);\n            },\n            function (error) {\n                errback && errback(error);\n            });\n    },\n\n    login: function (callback, errback) {\n        this.submit()\n    },\n\n    submit: function () {\n        this.authFeedback({});\n        let password = this.$password_input.val();\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        this.authFeedback({password: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\"), password_not_error: true});\n        if (!this.account.unregister_account_connection_manager) {\n            this.account.unregister_account_view = this;\n            this.account.unregister_account_connection_manager = new Strophe.ConnectionManager(this.account.CONNECTION_URL);\n            this.account.unregister_account_connection = this.account.unregister_account_connection_manager.connection;\n            this.account.unregister_account_connection.account = this.account;\n            this.account.unregister_account_connection.register.connect_change_password(this.account.get('jid'), password, this.account.unregisterAccountCallback.bind(this.account))\n        }\n    },\n\n    submitUnregister: function () {\n        this.authFeedback({});\n        if (this.$jid_input.val() !== `delete ${this.account.get('jid')} account`)\n            return this.errorFeedback({jid: xabber.getString(\"settings_account__unregister_jid_mismatch\")});\n        if (this.account && this.account.unregister_account_connection_manager && this.account.unregister_account_connection) {\n            this.account.unregister_account_connection.register.submit_unregister();\n        } else {\n            this.data.set('step', 0);\n            return this.errorFeedback({password: xabber.getString(\"settings_account__connection_broken\")});\n        }\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step');\n        if (step === 0){\n            this.$('.login-form-step-wrap').removeClass('hidden');\n            this.$('.btn-log-in').removeClass('hidden');\n            this.$('.btn-submit-unregister').addClass('hidden');\n            this.$('.login-confirm-form-step-wrap').addClass('hidden');\n            this.$('.modal-header span').text(xabber.getString('settings_account__delete_account_modal_title'));\n            this.$('.modal-description-text').text(xabber.getString('settings_account__delete_account_modal_text'));\n        } else if (step === 1) {\n            this.$('.login-form-step-wrap').addClass('hidden');\n            this.$('.btn-log-in').addClass('hidden');\n            this.$('.btn-submit-unregister').removeClass('hidden');\n            this.$('.login-confirm-form-step-wrap').removeClass('hidden');\n            this.$('.modal-header span').text(xabber.getString('settings_account__confirm_delete_account_modal_title'));\n            this.$('.modal-description-text').html(xabber.getString('settings_account__confirm_delete_account_modal_text', [`<nobr>delete ${this.account.get('jid')} account</nobr>`]));\n        }\n    },\n\n    endAuth: function () {\n    },\n\n    checkFeaturesStepper: function () {\n    },\n\n    onHide: function () {\n        this.$el.detach();\n        if (this.account && this.account.unregister_account_connection_manager && this.account.unregister_account_connection) {\n            this.account.unregister_account_connection.disconnect();\n        }\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.xmpp_login_panel = xabber.login_page.addChild('xmpp_login', this.XmppLoginPanel);\n    this.account_settings_modal = xabber.main_overlay_panel.addChild('account_settings_modal',\n        this.Container, {classlist: 'account-settings-panel'});\n\n    this.accounts = new this.Accounts(null, {\n        storage_name: this.getStorageName() + '-accounts'\n    });\n    this.accounts.fetch();\n\n    this.trigger('accounts_ready');\n\n    this.toolbar_view.addChild('accounts', this.ToolbarAccountsBlockView,\n        {model: this.accounts, el: this.toolbar_view.$('.accounts')[0]});\n    this.settings_modal_view.addChild('accounts_modal', this.SettingsAccountsModalBlockView,\n        {model: this.accounts, el: this.settings_modal_view.$('.accounts-info-wrap')[0]});\n\n\n    this.on(\"add_account\", function () {\n        if (!this.add_account_view)\n            this.add_account_view = new this.AddAccountView();\n        this.add_account_view.show();\n    }, this);\n\n    this.on(\"unregister_account\", function (account) {\n        if (!this.unregister_account_view)\n            this.unregister_account_view = new this.UnregisterAccountView();\n        this.unregister_account_view.show({model: account});\n    }, this);\n\n    this.on(\"change_account_password\", function (account) {\n        if (!this.change_account_password_view)\n            this.change_account_password_view = new this.ChangeAccountPasswordView();\n        this.change_account_password_view.show({model: account});\n    }, this);\n\n    this.on(\"show_delete_files\", function (options) {\n        if (!this.delete_files_view)\n            this.delete_files_view = new this.DeleteFilesFromGalleryView();\n        this.delete_files_view.show(options);\n    }, this);\n\n    this.on(\"show_export_messages\", function (options) {\n        if (!this.export_history_view)\n            this.export_history_view = new this.ExportChatHistoryView();\n        this.export_history_view.show(options);\n    }, this);\n\n    $(window).bind('beforeunload',function(){\n        xabber.current_voip_call && xabber.current_voip_call.reject();\n        return;\n    });\n\n    window.onbeforeunload = () => {\n        _.each(this.accounts.connected, function (account) {\n            account.sendPresence('offline');\n        });\n    };\n\n    this.login_page.patchTree = function (tree, options) {\n        let login_screen = options.login_screen || constants.DEFAULT_LOGIN_SCREEN;\n        return login_screen === 'xmpp' ? { xmpp_login: null } : { xabber_login: null };\n    };\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    $ = env.$,\n    _ = env._,\n    moment = env.moment,\n    Strophe = env.Strophe,\n    $iq = env.$iq;\n\nxabber.ClientFeature = Backbone.Model.extend({\n    idAttribute: 'namespace'\n});\n\nxabber.FeatureView = xabber.BasicView.extend({\n    className: 'client-feature',\n    template: function () {\n        this.$el.append('<div class=\"feature-check-icon mdi mdi-24px\"/>')\n                .append('<div class=\"feature-name one-line\"/>');\n        this.$('.feature-check-icon').append(env.templates.svg['check-circle']());\n    },\n\n    _initialize: function (options, attrs) {\n        this.render();\n        this.model.collection.account.settings_account_modal && this.$el.appendTo(this.model.collection.account.settings_account_modal.$('.capabilities'));\n        if (options.single_account && options.single_account.$('.capabilities').length){\n            this.$el.appendTo(options.single_account.$('.capabilities'));\n        }\n        this.model.on(\"change\", this.render, this);\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    render: function () {\n        let name = this.model.get('verbose_name'),\n            supports = this.model.get('supports');\n        this.$('.feature-name').text(name);\n        this.$('.feature-check-icon').showIf(supports);\n    }\n});\n\nxabber.ClientFeatures = Backbone.Collection.extend({\n    model: xabber.ClientFeature,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on('render_settings', this.render, this);\n        this.account.on('render_single_settings', this.renderSingleAccount, this);\n        this.connection = this.account.connection;\n        let client_name = uuid();\n        if (xabber.settings.device_metadata === 'contacts' || xabber.settings.device_metadata === 'server'){\n            client_name = constants.CLIENT_NAME;\n        }\n        this.connection.disco.addIdentity(\n            'client',\n            'web',\n            client_name,\n            'en'\n        );\n        this.addFeature(Strophe.NS.LAST, 'XEP-0012: Last Activity');\n        this.addFeature(Strophe.NS.VCARD, 'XEP-0054: vCard-temp');\n        this.addFeature(Strophe.NS.RSM, 'XEP-0059: Result Set Management');\n        this.addFeature(Strophe.NS.PUBSUB, 'XEP-0060: Publish-Subscribe');\n        this.addFeature(Strophe.NS.REGISTER, 'XEP-0077: In-Band Registration');\n        this.connection.disco.addFeature(Strophe.NS.CHATSTATES);\n        this.addFeature(Strophe.NS.BLOCKING, 'XEP-0191: Blocking Command');\n        this.addFeature(Strophe.NS.PING, 'XEP-0199: XMPP Ping');\n        this.connection.disco.addFeature(Strophe.NS.ATTENTION, 'XEP-0244: Attention');\n        this.addFeature(Strophe.NS.CARBONS, 'XEP-0280: Message carbons');\n        this.addFeature(Strophe.NS.MAM, 'XEP-0313: Message archive management');\n        this.connection.disco.addFeature(Strophe.NS.CHAT_MARKERS);\n        this.connection.disco.addFeature(Strophe.NS.PUBSUB_AVATAR_METADATA + '+notify');\n        this.addFeature(Strophe.NS.HTTP_UPLOAD, 'XEP-0363: HTTP File Upload');\n        this.addFeature(Strophe.NS.SYNCHRONIZATION, 'XEP-SYNC: Client Synchronization');\n        this.addFeature(Strophe.NS.AUTH_DEVICES, 'XEP-DEVICES: HOTP and Device Management');\n        this.addFeature(Strophe.NS.ARCHIVE, 'XEP-ARCHIVED: Archived Chats');\n        this.addFeature(Strophe.NS.DELIVERY, 'XEP-DELIVERY: Reliable message delivery');\n        this.addFeature(Strophe.NS.GROUP_CHAT, 'XEP-GROUPS: Groups');\n        this.addFeature(Strophe.NS.REWRITE, 'XEP-RETRACT: Message Delete and Rewrite');\n    },\n\n    addFeature: function (namespace, verbose_name) {\n        let feature = this.create({\n            namespace: namespace,\n            verbose_name: verbose_name\n        });\n        this.connection.disco.addFeature(namespace);\n    },\n\n    render: function () {\n        this.models.forEach((feature) => {\n            let view = new xabber.FeatureView({model: feature});\n        });\n    },\n\n    renderSingleAccount: function (single_account) {\n        single_account.$('.capabilities').html('');\n        this.models.forEach((feature) => {\n            let view = new xabber.FeatureView({model: feature, single_account: single_account});\n        });\n    },\n});\n\nxabber.ServerFeature = Backbone.Model.extend({\n    idAttribute: 'var'\n});\n\nxabber.ServerFeatures = Backbone.Collection.extend({\n    model: xabber.ServerFeature,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.connection = this.account.connection;\n        this.on(\"add\", this.onFeatureAdded, this);\n    },\n\n    request: function () {\n        this.account.cached_server_features.getAllFromCachedFeatures((res) => {\n            if (res && res.length){\n                res.forEach((item) => {\n                    this.create({\n                        'var': item.var,\n                        from: item.from\n                    });\n                });\n                this.is_cached = true;\n            } else {\n                this.connection.disco.info(this.account.domain, null, this.onInfo.bind(this));\n            }\n            this.connection.disco.items(this.account.domain, null, this.onItems.bind(this));\n        });\n    },\n\n    onItems: function (stanza) {\n        let groupchat_servers_list = [];\n        $(stanza).find('query item').each((idx, item) => {\n            let jid = $(item).attr('jid'),\n                name = $(item).attr('name'),\n                node = $(item).attr('node');\n            if (node === Strophe.NS.GROUP_CHAT) {\n                groupchat_servers_list.push(jid);\n                this.account.set('groupchat_servers_list', groupchat_servers_list);\n            }\n            this.connection.disco.addItem(jid, name, node, () => {});\n            (!this.is_cached) && this.connection.disco.info(\n                jid,\n                null,\n                this.onInfo.bind(this));\n        });\n    },\n\n    onInfo: function (stanza) {\n        let $stanza = $(stanza),\n            from = $stanza.attr('from'),\n            self = this;\n        $stanza.find('feature').each(function () {\n            let namespace = $(this).attr('var');\n            self.create({\n                'var': namespace,\n                from: from\n            });\n        });\n        $stanza.find('x').each(function () {\n            let form_type_val = $(this).find('field[var=\"FORM_TYPE\"] value');\n            if (form_type_val.length && form_type_val.text() === Strophe.NS.URLDISCO && self.account.domain === from){\n                let media_gallery_url = $(this).find('field[var=\"' + Strophe.NS.MEDIAGALLERY + '\"] value');\n                if (media_gallery_url.length && media_gallery_url.text()){\n                    self.create({\n                        'var': 'media-gallery',\n                        from: media_gallery_url.text()\n                    });\n                }\n            }\n        });\n        if (this.account.auth_view && !(constants.TRUSTED_DOMAINS.indexOf(this.account.connection.domain) > -1)){\n            this.account.auth_view.first_features_received = true\n            if (this.account.auth_view.stepped_auth_complete)\n                this.account.auth_view.successFeedback();\n        }\n    },\n\n    onFeatureAdded: function (feature) {\n        let _var = feature.get('var'),\n            client_feature = this.account.client_features.get(_var);\n        client_feature && client_feature.set('supports', true);\n        (_var != Strophe.NS.SUBSCRIPTION_PREAPPROVAL && _var != Strophe.NS.SYNCHRONIZATION) && this.account.cached_server_features.putInCachedFeatures({\n            var: _var,\n            from: feature.get('from'),\n        });\n        if (_var === 'media-gallery') {\n            this.account.set('gallery_auth', false)\n            if (!(this.account.get('gallery_token') && this.account.get('gallery_url')) || (this.account.get('gallery_url') != feature.get('from')))\n                this.account.initGalleryAuth(feature);\n        }\n    },\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.client_features = new xabber.ClientFeatures(null, {account: this});\n    this.server_features = new xabber.ServerFeatures(null, {account: this});\n});\n\nxabber.Account.addConnPlugin(function () {\n    this.last_stanza_timestamp = moment.now();\n\n    this.connection.deleteHandler(this._last_stanza_handler);\n    this._last_stanza_handler = this.connection.addHandler(() => {\n        this.last_stanza_timestamp = moment.now();\n        return true;\n    });\n\n    this.connection.deleteHandler(this._pong_handler);\n    this._pong_handler = this.connection.ping.addPingHandler((ping) => {\n        this.last_stanza_timestamp = moment.now();\n        this.connection.ping.pong(ping);\n        return true;\n    });\n\n    if (this._main_interval_worker)\n        this._main_interval_worker.terminate();\n\n    this._main_interval_worker = new Worker(new URL('./worker.js', import.meta.url));\n\n    this._main_interval_worker.onmessage = () => {\n        let downtime = (moment.now() - this.last_stanza_timestamp) / 1000;\n        if (!navigator.onLine || downtime > (constants.DOWNTIME_RECONNECTION_TIMEOUT || 15)) {\n            if (!navigator.onLine){\n                console.log('navigator: ' + navigator.onLine)\n                console.log('this.connection.connected: ' + this.connection.connected)\n                xabber._settings.get('reconnection_logs') && utils.callback_popup_message('this.connection.connected: ' + this.connection.connected, 2000);\n            }\n            console.log('downtime main to disconnect: ' + downtime);\n            xabber._settings.get('reconnection_logs') && utils.callback_popup_message('downtime main to disconnect: ' + downtime, 2000);\n            console.log(this.connection.connected);\n            if (this.connection.connected)\n                this.connection.disconnect();\n            else\n                this.connect();\n            this._main_interval_worker.terminate();\n        }\n        if (downtime > (constants.PING_SENDING_INTERVAL || 10)) {\n            console.log('downtime main to ping: ' + downtime);\n            this.connection && this.connection.ping.ping(this.get('domain'));\n        }\n    };\n\n    this._main_interval_worker.postMessage({});\n\n    this.server_features.request();\n}, true, true);\n\nxabber.Account.addFastConnPlugin(function () {\n    this.last_fast_stanza_timestamp = moment.now();\n\n    this.fast_connection.deleteHandler(this._last_fast_stanza_handler);\n    this._last_fast_stanza_handler = this.fast_connection.addHandler(() => {\n        this.last_fast_stanza_timestamp = moment.now();\n        return true;\n    });\n\n    this.fast_connection.deleteHandler(this._fast_pong_handler);\n    this._fast_pong_handler = this.fast_connection.ping.addPingHandler((ping) => {\n        this.last_fast_stanza_timestamp = moment.now();\n        this.fast_connection.ping.pong(ping);\n        return true;\n    });\n\n    if (this._fast_interval_worker)\n        this._fast_interval_worker.terminate();\n\n    this._fast_interval_worker = new Worker(new URL('./worker.js', import.meta.url));\n\n    this._fast_interval_worker.onmessage = () => {\n        let downtime = (moment.now() - this.last_fast_stanza_timestamp) / 1000;\n        if (!navigator.onLine || downtime > (constants.DOWNTIME_RECONNECTION_TIMEOUT || 15)) {\n            if (!navigator.onLine){\n                console.log('navigator: ' + navigator.onLine)\n                console.log('this.connection.connected: ' + this.fast_connection.connected)\n                xabber._settings.get('reconnection_logs') && utils.callback_popup_message('this.connection.connected: ' + this.fast_connection.connected, 2000);\n            }\n            console.log('downtime fast to disconnect: ' + downtime);\n            xabber._settings.get('reconnection_logs') && utils.callback_popup_message('downtime fast to disconnect: ' + downtime, 2000);\n            console.log(this.fast_connection.connected);\n            if (this.fast_connection.connected)\n                this.fast_connection.disconnect();\n            else\n                this.fast_connection.connect('password', this.fast_connection.jid, this.fast_connection.pass);\n            this._fast_interval_worker.terminate();\n        }\n        if (downtime > (constants.PING_SENDING_INTERVAL || 10)) {\n            console.log('downtime fast to ping: ' + downtime);\n            this.fast_connection && this.fast_connection.ping.ping(this.get('domain'));\n        }\n    };\n    this._fast_interval_worker.postMessage({});\n}, true, true);\n\nxabber.Account.addConnPlugin(function () {\n    let disco = this.connection.disco;\n    this.connection.addHandler(disco._onDiscoInfo.bind(disco),\n            Strophe.NS.DISCO_INFO, 'iq', 'get', null, null);\n    this.connection.addHandler(disco._onDiscoItems.bind(disco),\n            Strophe.NS.DISCO_ITEMS, 'iq', 'get', null, null);\n}, false, true);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.contacts,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $pres = env.$pres,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    VanillaQR = env.VanillaQR,\n    uuid = env.uuid,\n    Images = utils.images,\n    Emoji = utils.emoji,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\nxabber.Contact = Backbone.Model.extend({\n    idAttribute: 'jid',\n    defaults: {\n        status: \"offline\",\n        status_message: \"\",\n        subscription: undefined,\n        subscription_request_in: false,\n        subscription_request_out: false,\n        groups: [],\n        group_chat: false\n    },\n\n    initialize: function (_attrs, options) {\n        this.on(\"change:group_chat\", this.onChangedGroupchat, this);\n        this.account = options.account;\n        if (_attrs.avatar) {\n            _attrs.image = _attrs.avatar;\n            delete _attrs.avatar;\n        }\n        let attrs = _.clone(_attrs);\n        if (attrs.resource) {\n            attrs.full_jid = attrs.jid + '/' + attrs.resource;\n        } else if (attrs.group_chat) {\n            attrs.full_jid = attrs.jid + '/Group';\n        }\n        (this.account && this.account.domain === attrs.jid) && _.extend(attrs, {server: true, status: 'online'});\n        attrs.name = attrs.roster_name || attrs.name || attrs.jid;\n        if (!attrs.image) {\n            attrs.photo_hash = \"\";\n            attrs.image = Images.getDefaultAvatar(attrs.name);\n        }\n        if (this.account.blocklist.isBlocked(attrs.jid))\n            attrs.blocked = true;\n        this.cached_image = Images.getCachedImage(attrs.image);\n        attrs.vcard = utils.vcard.getBlank(attrs.jid);\n        this.set(attrs);\n        this.onChangedGroupchat();\n        this.domain = Strophe.getDomainFromJid(this.get('jid'));\n        !this.get('group_chat') && this.account && this.account.chat_settings && this.set('group_chat', _.contains(this.account.chat_settings.get('group_chat'), this.get('jid')));\n        this.hash_id = env.b64_sha1(this.account.get('jid') + '-' + attrs.jid);\n        this.resources = new xabber.ContactResources(null, {contact: this});\n        this.on(\"update_avatar\", this.updateAvatar, this);\n        this.on(\"change:full_jid\", this.updateCachedInfo, this);\n        this.on(\"change:name\", this.updateCachedInfo, this);\n        this.on(\"change:roster_name\", this.updateName, this);\n        this.on(\"destroy\", this.onDestroy, this);\n        this.account.dfd_presence.done(() => {\n            if (!this.get('blocked') && !this.get('vcard_updated') && !attrs.is_deleted)\n                this.getVCard();\n        });\n    },\n\n    getStatusMessage: function () {\n        let subscription = this.get('subscription'),\n            in_request = this.get('subscription_request_in'),\n            out_request = this.get('subscription_request_out'),\n            status_text = \"\";\n        if (this.get('blocked'))\n            status_text = xabber.getString(\"action_contact_blocked\");\n        else if (this.get('group_chat')) {\n            if (this.get('group_info')) {\n                if (this.get('group_info').members_num)\n                    status_text += xabber.getQuantityString(\"contact_groupchat_status_member\", this.get('group_info').members_num);\n                if (this.get('group_info').online_members_num > 0)\n                    status_text += xabber.getString(\"contact_groupchat_status_online\", [this.get('group_info').online_members_num || 0]);\n            } else if (!subscription)\n                status_text = xabber.getString(\"contact_state_no_subscriptions\");\n            else\n                status_text = this.get('status_message') || xabber.getString(this.get('status'));\n        } else {\n            if (subscription === 'from') {\n                if (out_request)\n                    status_text = xabber.getString(\"contact_state_outgoing_request\");\n                else\n                    status_text = xabber.getString(\"chat_receives_presence_updates\");\n            } else if (subscription === 'none') {\n                if (out_request)\n                    status_text = xabber.getString(\"contact_state_outgoing_request\");\n                else if (in_request)\n                    status_text = xabber.getString(\"contact_state_in_contact_list\");\n                else\n                    status_text = xabber.getString(\"contact_state_in_contact_list\");\n            }\n            else if (!subscription)\n                status_text = xabber.getString(\"contact_state_not_in_contact_list\");\n            else\n                status_text = this.get('status_message') || xabber.getString(this.get('status'));\n        }\n        return status_text;\n    },\n\n    getSubscriptionStatuses: function () {\n        let subscription = this.get('subscription'),\n            subscription_preapproved = this.get('subscription_preapproved'),\n            in_request = this.get('subscription_request_in'),\n            out_request = this.get('subscription_request_out'),\n            status_description = \"\",\n            status_out_color = \"\",\n            status_in_color = \"\",\n            status_out_text = \"\",\n            status_in_text = \"\";\n        if (this.get('blocked'))\n            status_out_text = xabber.getString(\"action_contact_blocked\");\n        if (subscription === 'both') {\n            status_out_text = xabber.getString(\"subscription_status_out_to\");\n            status_in_text = xabber.getString(\"subscription_status_in_from\");\n            status_description = xabber.getString(\"subscription_status_description_both\");\n        }\n        else if (subscription === 'from') {\n            if (out_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_from\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_from\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_from\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_from\");\n            }\n        }\n        else if (subscription === 'to') {\n            if (in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_to\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_to_in_request_incoming\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_to\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_to_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_to_in_allowed\");\n                }\n            }\n        } else if (subscription === 'none') {\n            if (out_request && in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_request_incoming\");\n            }\n            else if (out_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_request_in_allowed\");\n                }\n            }\n            else if (in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_request_incoming\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_none_in_allowed\");\n                }\n            }\n        }\n        else if (!subscription)\n            status_out_text = xabber.getString(\"contact_add\");\n\n        if (out_request)\n            status_out_color = \"request\";\n        if (in_request)\n            status_in_color = \"request\";\n        if (subscription === 'to')\n            status_out_color = \"subbed\";\n        if (subscription === 'from')\n            status_in_color = \"subbed\";\n        if (subscription === 'both') {\n            status_out_color = \"subbed\";\n            status_in_color = \"subbed\";\n        }\n        return {\n            status_out: status_out_text,\n            status_in: status_in_text,\n            status_out_color: status_out_color,\n            status_in_color: status_in_color,\n            status_description: status_description,\n        };\n    },\n\n    getIcon: function () {\n        if (this.get('blocked'))\n            return 'blocked';\n        if (this.get('invitation'))\n            return 'group-invite';\n        if (this.get('group_chat')) {\n            if (this.get('jid').includes('redmine_issue_'))\n                return 'task';\n            if (this.get('private_chat'))\n                return 'group-private';\n            if (this.get('incognito_chat'))\n                return 'group-incognito';\n            return 'group-public';\n        }\n        if (this.get('server'))\n            return 'server';\n        if (this.get('bot'))\n            return 'bot';\n        return;\n    },\n\n    updateAvatar: function () {\n        this.account.cached_roster.getFromRoster(this.get('jid'), (cached_info) => {\n            if (cached_info && this.get('photo_hash') === cached_info.photo_hash)\n                return;\n            this.getVCard();\n        });\n    },\n\n    getVCard: function (callback) {\n        let jid = this.get('jid'),\n            is_callback = _.isFunction(callback);\n        this.account.getConnectionForIQ().vcard.get(jid,\n             (vcard) => {\n                if (vcard.group_info) {\n                    let group_info = this.get('group_info') || {};\n                    group_info = _.extend(group_info, vcard.group_info);\n                    this.set({group_info});\n                    delete vcard.group_info;\n                }\n                let attrs = {\n                    vcard: vcard,\n                    vcard_updated: moment.now(),\n                    name: this.get('roster_name')\n                };\n                if (!attrs.name) {\n                    if (this.get('group_chat'))\n                        attrs.name = vcard.nickname || this.get('name');\n                    else\n                        attrs.name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || jid;\n                }\n                if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n                    if (vcard.photo.image) {\n                        attrs.avatar_priority = constants.AVATAR_PRIORITIES.VCARD_AVATAR;\n                        attrs.image = vcard.photo.image;\n                    }\n                    else\n                        attrs.image = Images.getDefaultAvatar(attrs.name);\n                    this.cached_image = Images.getCachedImage(attrs.image);\n                }\n                this.set(attrs);\n                is_callback && callback(vcard);\n            },\n            function () {\n                is_callback && callback(null);\n            }\n        );\n    },\n\n    updateCachedInfo: function () {\n        this.account.cached_roster.getFromRoster(this.get('jid'), (cached_info) => {\n            cached_info = cached_info || {};\n            let roster_info = {\n                jid: this.get('jid'),\n                in_roster: !_.isUndefined(this.get('in_roster')) ? this.get('in_roster') : cached_info.in_roster,\n                groups: this.get('groups'),\n                subscription: !_.isUndefined(this.get('subscription')) ? this.get('subscription') : cached_info.subscription,\n                roster_name: !_.isUndefined(this.get('roster_name')) ? this.get('roster_name') : cached_info.roster_name,\n                subscription_request_out: this.get('subscription_request_out'),\n                subscription_request_in: this.get('subscription_request_in'),\n                name: this.get('name'),\n                vcard_updated: this.get('vcard_updated')\n            }, full_jid = this.get('full_jid');\n            if (this.get('photo_hash') || this.get('image'))\n                _.extend(roster_info, {\n                    photo_hash: (this.get('photo_hash') || this.account.getAvatarHash(this.get('image'))),\n                    avatar_priority: this.get('avatar_priority'),\n                    avatar: this.get('image')\n                });\n            if (full_jid)\n                roster_info.resource = Strophe.getResourceFromJid(full_jid);\n            this.account.cached_roster.putInRoster(roster_info);\n        });\n    },\n\n    onChangedGroupchat: function () {\n        if (this.get('group_chat') && this.get('removed')) {\n            xabber.error(\"removed contact became groupchat\")\n        }\n        if (this.get('group_chat')) {\n            this.set('full_jid', this.get('jid') + '/Group');\n            this.updateCounters();\n            this.participants = new xabber.Participants(null, {contact: this});\n        }\n    },\n\n    onDestroy: function () {\n        if (this.account && this.account.groupchat_settings && this.participants) {\n            this.participants.reset();\n            this.account.groupchat_settings.resetParticipantsList(this.get('jid'));\n        }\n    },\n\n    getBlockedParticipants: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.get('full_jid') || this.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#block'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    updateCounters: function () {\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    getLastSeen: function() {\n        if (this.get('status') == 'offline') {\n            if (!Strophe.getNodeFromJid(this.get('jid'))) {\n                this.set({status_message: 'Server'});\n                return;\n            }\n            let iq = $iq({type: 'get', to: this.get('jid') }).c('query', {xmlns: Strophe.NS.LAST});\n            this.account.sendIQFast(iq, (iq) => {\n                let last_seen = this.getLastSeenStatus(iq);\n                if (this.get('status') == 'offline')\n                    this.set({status_message: last_seen});\n                return this;\n            });\n        }\n    },\n\n    getMyInfo: function (callback) {\n        this.participants.participantsRequest({id: '', properties: true}, (response) => {\n            let $item = $($(response).find('query user')),\n                cached_avatar = this.account.chat_settings.getAvatarInfoById($item.find('id').text());\n            $item.length && this.participants && this.participants.createFromStanza($item, {my_info: true});\n            cached_avatar && (cached_avatar.avatar_hash == this.my_info.get('avatar')) && this.my_info.set('b64_avatar', cached_avatar.avatar_b64);\n            this.trigger('update_my_info');\n            this.participants.participantsRequest({id: ''}, (response) => {\n                let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                this.my_rights = data_form;\n                this.trigger('permissions_changed');\n                callback && callback();\n            });\n        });\n    },\n\n    getAvatar: function (avatar, node, callback, errback) {\n        let jid = this.get('jid'),\n            iq_request_avatar = $iq({type: 'get', to: jid})\n            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n            .c('items', {node: node})\n            .c('item', {id: avatar});\n        this.account.sendIQFast(iq_request_avatar, (iq) => {\n            let pubsub_avatar = $(iq).find('data').text();\n            if (pubsub_avatar == \"\")\n                errback && errback(xabber.getString(\"pubsub__error__text_empty_node\"));\n            else\n                callback && callback(pubsub_avatar);\n        });\n    },\n\n    pubAvatar: function (image, node, callback, errback) {\n        let dfd = new $.Deferred();\n\n        dfd.done((data, http_avatar) => {\n            if (http_avatar) {\n                let avatar_hash = data.hash || image.hash || sha1(image.base64),\n                    iq_pub_metadata = $iq({type: 'set', to: this.get('jid') })\n                        .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                        .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA + node})\n                        .c('item', {id: avatar_hash})\n                        .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                        .c('info', {bytes: data.size, id: avatar_hash, type: data.type, url: data.file});\n                data.thumbnails && data.thumbnails.forEach((thumbnail) => {\n                    iq_pub_metadata.c('thumbnail', {\n                        xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA_THUMBNAIL,\n                        url: thumbnail.url,\n                        width: thumbnail.width,\n                        height: thumbnail.height,\n                    }).up()\n                })\n                this.account.sendIQFast(iq_pub_metadata, () => {\n                        callback && callback(avatar_hash);\n                    },\n                    function (data_error) {\n                        errback && errback(data_error);\n                    });\n            }\n            else {\n                let avatar_hash = image.hash || sha1(image.base64),\n                    iq_pub_data = $iq({type: 'set', to: this.get('jid') })\n                        .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                        .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_DATA + node})\n                        .c('item', {id: avatar_hash})\n                        .c('data', {xmlns: Strophe.NS.PUBSUB_AVATAR_DATA}).t(data),\n                    iq_pub_metadata = $iq({type: 'set', to: this.get('jid') })\n                        .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                        .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA + node})\n                        .c('item', {id: avatar_hash})\n                        .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                        .c('info', {bytes: image.size, id: avatar_hash, type: image.type});\n                this.account.sendIQFast(iq_pub_data, () => {\n                        this.account.sendIQFast(iq_pub_metadata, () => {\n                                callback && callback(avatar_hash);\n                            },\n                            function (data_error) {\n                                errback && errback(data_error);\n                            });\n                    },\n                    (data_error) => {\n                        errback && errback(data_error);\n                    });\n            }\n        });\n        if (image.uploaded){\n            dfd.resolve(image, true)\n        }\n        else if (this.account.get('gallery_token') && this.account.get('gallery_url') && !image.generated && !image.uploaded){\n            let file = image.name ? image : image.file;\n            this.account.uploadAvatar(file, (res) => {\n                if (res.thumbnails && res.thumbnails.length || res.file){\n                    res.type = file.type;\n                    dfd.resolve(res, true)\n                } else\n                    dfd.resolve(image.base64)\n            }, (res) => {\n                dfd.resolve(image.base64)\n            });\n        } else\n            dfd.resolve(image.base64)\n    },\n\n    getLastSeenStatus: function(iq) {\n        let seconds = $(iq).children('query').attr('seconds'),\n            message_time = moment.now() - 1000*seconds;\n        this.set({ last_seen: message_time });\n        return xabber.pretty_last_seen(seconds);\n    },\n\n    pres: function (type) {\n        let pres = $pres({to: this.get('jid'), type: type});\n        this.account.sendPres(pres);\n        return this;\n    },\n\n    pushInRoster: function (attrs, callback, errback) {\n        attrs || (attrs = {});\n        let name = attrs.name || this.get('roster_name'),\n            groups = attrs.groups || this.get('groups');\n        let iq = $iq({type: 'set'})\n            .c('query', {xmlns: Strophe.NS.ROSTER})\n            .c('item', {jid: this.get('jid'), name: name});\n        _.each(groups, function (group) {\n            iq.c('group').t(group).up();\n        });\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('known', true);\n        this.set('removed', false);\n        return this;\n    },\n\n    removeFromRoster: function (callback, errback) {\n        if (!this.get('removed')){\n            let iq = $iq({type: 'set'})\n                .c('query', {xmlns: Strophe.NS.ROSTER})\n                .c('item', {jid: this.get('jid'), subscription: \"remove\"});\n            this.account.cached_roster.removeFromRoster(this.get('jid'));\n            this.account.sendIQFast(iq, callback, errback);\n            this.set('known', false);\n            this.set('removed', true);\n            if (this.get('group_chat')){\n                this.set('group_chat', false);\n                this.participants.reset();\n                this.account.groupchat_settings.resetParticipantsList(this.get('jid'));\n            }\n        }\n        return this;\n    },\n\n    acceptRequest: function (callback) {\n        this.pres('subscribed');\n        callback && callback();\n    },\n\n    askRequest: function (callback) {\n        this.pres('subscribe');\n        callback && callback();\n    },\n\n    blockRequest: function (callback) {\n        this.block(callback);\n    },\n\n    declineRequest: function (callback) {\n        this.pres('unsubscribed');\n        this.removeFromRoster(callback);\n    },\n\n    declineSubscription: function () {\n        this.pres('unsubscribe');\n        this.set('subscription_request_out', false);\n    },\n\n    declineSubscribe: function () {\n        this.pres('unsubscribed');\n        !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && this.set('subscription_preapproved', false)\n    },\n\n    deleteWithDialog: function () {\n        let is_group = this.get('group_chat'),\n            header = is_group ? xabber.getString(\"group_remove\") : xabber.getString(\"remove_contact\"),\n            msg_text = is_group ? xabber.getString(\"group_remove_confirm\", [this.get('name').bold()]) : xabber.getString(\"contact_delete_confirm_short\", [this.get('name').bold()]),\n            optional_buttons = is_group ? null : [{ name: 'delete_history', checked: false, text: xabber.getString(\"delete_contact__label_delete_history\")}];\n        utils.dialogs.ask(header, msg_text, optional_buttons, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (is_group) {\n                    let domain = this.domain,\n                        localpart = Strophe.getNodeFromJid(this.get('jid')),\n                        iq = $iq({to: domain, type: 'set'})\n                            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#delete`}).t(localpart);\n                    this.account.sendIQFast(iq, () => {\n                        this.declineSubscription();\n                        let chat = this.account.chats.getChat(this);\n                        this.removeFromRoster();\n                        chat.trigger(\"close_chat\");\n                        xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n                    });\n                } else {\n                    let chat = this.account.chats.getChat(this);\n                    this.removeFromRoster();\n                    if (result.delete_history) {\n                        chat.retractAllMessages(false);\n                        chat.deleteFromSynchronization();\n                        xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n                    }\n                    xabber.trigger(\"clear_search\");\n                }\n            }\n        });\n    },\n\n    blockWithDialog: function () {\n        let is_group = this.get('group_chat'),\n            contact = this,\n            header = is_group ? xabber.getString(\"block_group__header\") : xabber.getString(\"contact_block\"),\n            buttons = { ok_button_text: xabber.getString(\"contact_bar_block\")},\n            msg_text = xabber.getString(\"block_contact_confirm_short\", [this.get('name').bold()]);\n        if (!is_group) {\n            buttons.optional_button = xabber.getString(\"contact_block_and_delete\");\n            msg_text += `\\n${xabber.getString(\"block_contact_warning\", [this.get('jid')])}`;\n        }\n        utils.dialogs.ask(header, msg_text, null, buttons).done(function (result) {\n            if (result) {\n               if (!is_group) {\n                    let chat = contact.account.chats.getChat(contact);\n                    if (result === 'block & delete') {\n                        contact.removeFromRoster();\n                        chat.retractAllMessages(false);\n                        chat.deleteFromSynchronization();\n                        chat.set('active', false);\n                    }\n                }\n                contact.blockRequest();\n                xabber.trigger(\"clear_search\");\n                if (!is_group)\n                    xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n            }\n        });\n    },\n\n    unblockWithDialog: function () {\n        let contact = this;\n        utils.dialogs.ask(xabber.getString(\"chat_settings__button_unblock_contact\"), xabber.getString(\"unblock_contact_confirm_short\", [this.get('name')]), null, { ok_button_text: xabber.getString(\"contact_bar_unblock\")}).done(function (result) {\n            if (result) {\n                contact.unblock();\n                xabber.trigger(\"clear_search\");\n            }\n        });\n    },\n\n    block: function (callback, errback) {\n        let iq = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.get('jid')});\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('blocked', true);\n        this.set('known', false);\n    },\n\n    unblock: function (callback, errback) {\n        let iq = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.get('jid')});\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('blocked', false);\n    },\n\n    setActiveStateSendInterval: function () {\n        let stanza = $msg({to: this.get('jid'), type: 'chat'}).c('active', {xmlns: Strophe.NS.CHATSTATES});\n        clearTimeout(this._sending_active_chatstate_timeout);\n        clearInterval(this._sending_active_chatstate_interval);\n        this._sending_active_chatstate_timeout = setTimeout(() => {\n            this._sending_active_chatstate_interval = setInterval(() => {\n                this.account.sendMsg(stanza);\n            }, constants.PRESENT_INTERVAL);\n        }, constants.PRESENT_INTERVAL)\n    },\n\n    handlePresence: function (presence) {\n        let $presence = $(presence),\n            type = presence.getAttribute('type'),\n            $vcard_update = $presence.find(`x[xmlns=\"${Strophe.NS.VCARD_UPDATE}\"]`);\n        if ($vcard_update.length && this.get('avatar_priority') && this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n            this.set('photo_hash', $vcard_update.find('photo').text());\n            this.trigger('update_avatar');\n        }\n        let $group_chat_info = $(presence).find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`);\n        if ($group_chat_info.length > 0 && $group_chat_info.children().length) {\n            this.set('full_jid', $presence.attr('from'));\n            if (!this.get('group_chat')) {\n                this.set('group_chat', true);\n                this.account.chat_settings.updateGroupChatsList(this.get('jid'), this.get('group_chat'));\n            }\n            let group_chat_info = this.parseGroupInfo($(presence)),\n                prev_group_info = this.get('group_info') || {};\n            _.extend(prev_group_info, group_chat_info);\n            this.set('group_info', prev_group_info);\n            if (!this.get('roster_name') && (prev_group_info.name !== this.get('name')))\n                this.set('name', prev_group_info.name);\n            this.set({status: prev_group_info.status, status_updated: moment.now(), status_message: (prev_group_info.members_num + ' members' + xabber.getString(\"contact_groupchat_status_online\", [prev_group_info.online_members_num || 0]))});\n        }\n        if (type === 'subscribe') {\n            this.set('subscription_request_in', true);\n            if (this.get('subscription_preapproved')) {\n                this.pres('subscribed');\n            } else {\n                this.trigger('presence', this, 'subscribe');\n            }\n        } else if (type === 'subscribed') {\n            if (this.get('group_chat') && (this.get('subscription_request_out') || this.get('subscription') === 'to')) {\n\n            }\n            if (this.get('subscription') === 'to') {\n                // this.pres('subscribed');\n            }\n            this.trigger('presence', this, 'subscribed');\n        } else if (type === 'unsubscribe') {\n            this.set('subscription_request_in', false);\n            if (this.get('group_chat')) {\n                let chat = this.account.chats.getChat(this),\n                    sync_deleted = this.get('sync_deleted');\n                this.removeFromRoster();\n                if (!sync_deleted){\n                    chat.deleteFromSynchronization(() => {\n                        chat.trigger(\"close_chat\");\n                    }, () => {\n                        chat.trigger(\"close_chat\");\n                    });\n                } else {\n                    chat.trigger(\"close_chat\");\n                }\n            }\n        } else if (type === 'unsubscribed') {\n            this.set('subscription_request_out', false);\n            // this.trigger('presence', this, 'unsubscribed');\n        } else {\n            let jid = presence.getAttribute('from'),\n                resource = Strophe.getResourceFromJid(jid),\n                priority = Number($presence.find('priority').text()),\n                status = $presence.find('show').text() || 'online',\n                $status_message = $presence.find('status'),\n                status_message = $status_message.text();\n            _.isNaN(priority) && (priority = 0);\n            clearTimeout(this._reset_status_timeout);\n            let resource_obj = this.resources.get(resource);\n            if (type === 'unavailable') {\n                this.set({ last_seen: moment.now() });\n                resource_obj && resource_obj.destroy();\n            } else {\n                this.set({ last_seen: undefined });\n                let attrs = {\n                    resource: resource,\n                    priority: priority,\n                    status: status\n                };\n                $status_message.length && (attrs.status_message = status_message);\n                if (!resource_obj) {\n                    resource_obj = this.resources.create(attrs);\n                } else {\n                    resource_obj.set(attrs);\n                }\n            }\n        }\n    },\n\n    parseGroupInfo: function ($presence) {\n        let jid = this.get('jid'),\n            $group_chat = $presence.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`),\n            name = $group_chat.find('name').text(),\n            $model = $group_chat.find('membership'),\n            status = $presence.children('show').text() || (($presence.attr('type') === 'unavailable') ? 'unavailable' : 'online'),\n            status_msg = $presence.children('status').text(),\n            privacy = $group_chat.find('privacy').text(),\n            $index = $group_chat.find('index'),\n            $description = $group_chat.find('description'),\n            pinned_message = Number($group_chat.find('pinned-message').text()),\n            prev_pinned_message = this.get('pinned_message') ? this.get('pinned_message').get('stanza_id') : 0,\n            private_chat = $group_chat.find('parent-chat').text() || false,\n            members_num = Number($group_chat.find('members').text()),\n            $online_members_num = $group_chat.find('present'),\n            info = {jid, name, status_msg, privacy, status, members_num};\n        $index.length && (info.searchable = $index.text());\n        $model.length && (info.model = $model.text());\n        $description.length && (info.description = $description.text());\n        $online_members_num.length && (info.online_members_num = Number($online_members_num.text()));\n        private_chat && this.set('private_chat', private_chat);\n        privacy === 'incognito' && this.set('incognito_chat', true);\n        let chat = this.account.chats.get(this.hash_id), pinned_msg_elem;\n        if ($group_chat.find('pinned-message').length) {\n            if (prev_pinned_message != pinned_message) {\n                if (chat) {\n                    if (chat.item_view && !chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    pinned_msg_elem = chat.item_view.content.$pinned_message;\n                }\n                if (pinned_msg_elem) {\n                    if (pinned_message) {\n                        this.getMessageByStanzaId(pinned_message, ($message) => {\n                            this.parsePinnedMessage($message, pinned_msg_elem);\n                        });\n                    }\n                    else {\n                        this.set('pinned_message', undefined);\n                        this.parsePinnedMessage(undefined, pinned_msg_elem);\n                    }\n                }\n            }\n        }\n        return info;\n    },\n\n    getAllRights: function (callback) {\n        let iq_get_rights = $iq({type: 'get', to: this.get('full_jid') || this.get('jid') })\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#rights` });\n        this.account.sendIQFast(iq_get_rights, (iq_all_rights) => {\n            let all_permissions = $(iq_all_rights).find('permission'),\n                all_restrictions = $(iq_all_rights).find('restriction');\n            this.all_rights = {permissions: all_permissions, restrictions: all_restrictions};\n            callback && callback();\n        });\n    },\n\n    getMessageByStanzaId: function (stanza_id, callback, options) {\n        options = options || {};\n        let queryid = uuid(),\n            account = this.account,\n            is_fast = account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n            conn = is_fast ? account.fast_connection : account.connection,\n            chat = account.chats.getChat(this, options.encrypted && 'encrypted'),\n            receiver = this.get('group_chat') ? this.get('full_jid') || this.get('jid') : this.account.get('jid'),\n            iq = $iq({type: 'set', to: receiver})\n                .c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                .c('value').t(Strophe.NS.MAM).up().up()\n                .c('field', {'var': 'ids'})\n                .c('value').t(stanza_id).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE))    {\n            iq.c('field', {'var': `conversation-type`});\n            let sync_type = chat.get('sync_type') ? chat.get('sync_type') : chat.getConversationType(chat);\n            iq.c('value').t(sync_type).up().up();\n        }\n        let handler = conn.addHandler((message) => {\n            let $msg = $(message);\n            if ($msg.find('result').attr('queryid') === queryid)\n                callback && callback($msg);\n            return true;\n        }, Strophe.NS.MAM);\n        this.account.sendIQFast(iq, () => {\n                conn.deleteHandler(handler);\n            }, () => {\n                conn.deleteHandler(handler);\n            }\n        );\n    },\n\n    MAMRequest: function (options, callback, errback) {\n        let account = this.account,\n            is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n            conn = is_fast ? account.fast_connection : account.connection,\n            contact = this,\n            chat = account.chats.getChat(contact, options.encrypted && 'encrypted'),\n            messages = [], queryid = uuid(),\n            is_groupchat = contact && contact.get('group_chat'), success = true, iq;\n        delete options.fast;\n        if (is_groupchat)\n            iq = $iq({type: 'set', to: contact.get('full_jid') || contact.get('jid')});\n        else\n            iq = $iq({type: 'set'});\n        iq.c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n            .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n            .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n            .c('value').t(Strophe.NS.MAM).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE))    {\n            iq.c('field', {'var': `conversation-type`});\n            let sync_type = chat.get('sync_type') ? chat.get('sync_type') : chat.getConversationType(chat);\n            iq.c('value').t(sync_type).up().up();\n            iq.c('field', {'var': `with-tags`});\n            if (options.filter_image)\n                iq.c('value').t('image').up();\n            if (options.filter_video)\n                iq.c('value').t('video').up();\n            if (options.filter_voice)\n                iq.c('value').t('voice').up();\n            if (options.filter_files)\n                iq.c('value').t('document').up();\n            iq.up();\n        }\n        if (!is_groupchat)\n            iq.c('field', {'var': 'with'})\n                .c('value').t(this.get('jid')).up().up();\n        if (options.var)\n            options.var.forEach((opt_var) => {\n                iq.c('field', {'var': opt_var.var})\n                    .c('value').t(opt_var.value).up().up();\n            });\n        iq.up().cnode(new Strophe.RSM(options).toXML());\n        let deferred = new $.Deferred();\n        account.chats.onStartedMAMRequest(deferred);\n        deferred.done(function () {\n            let handler = conn.addHandler(function (message) {\n                if ((contact && is_groupchat == contact.get('group_chat'))) {\n                    let $msg = $(message);\n                    if ($msg.find('result').attr('queryid') === queryid) {\n                        messages.push(message);\n                    }\n                }\n                else {\n                    messages = [];\n                    success = false;\n                }\n                return true;\n            }, Strophe.NS.MAM);\n            let callb = function (res) {\n                    conn.deleteHandler(handler);\n                    account.chats.onCompletedMAMRequest(deferred);\n                    let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                    if ($fin.length && $fin.attr('queryid') === queryid) {\n                        let rsm = new Strophe.RSM({xml: $fin.find('set')[0]});\n                        rsm.complete = ($fin.attr('complete') === 'true') ? true : false;\n                        callback && callback(success, messages, rsm);\n                    }\n                },\n                errb = function (err) {\n                    conn.deleteHandler(handler);\n                    xabber.error(\"MAM error\");\n                    xabber.error(err);\n                    account.chats.onCompletedMAMRequest(deferred);\n                    errback && errback(err);\n                };\n            if (is_fast)\n                account.sendFast(iq, callb, errb);\n            else\n                account.sendIQ(iq, callb, errb);\n        });\n    },\n\n    getFilesFromStanza: function ($message, options) {\n        $message = options && options.cached_message? $message.find('content') : $message.find('message')\n        let references = $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n            $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`) :\n            $message.children('envelope').children('content').children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`),\n            items = [], cached_stanza_id;\n        options && options.cached_stanza_id && (cached_stanza_id = options.cached_stanza_id);\n\n        references.each((idx, reference) => {\n            let $reference = $(reference),\n                type = $reference.attr('type');\n            if (type === 'mutable') {\n                let $file_sharing = $reference.find(`file-sharing[xmlns=\"${Strophe.NS.FILES}\"]`).first();\n                if ($file_sharing.length) {\n                    let type = $file_sharing.parent(`voice-message[xmlns=\"${Strophe.NS.VOICE_MESSAGE}\"]`).length ? 'voice' : 'file',\n                        $file = $file_sharing.children('file'), file_attrs = {}, sources = [];\n                    $file_sharing.children('sources').children('uri').each((i, uri) => {sources.push($(uri).text());});\n                    file_attrs = {\n                        name: $file.children('name').text(),\n                        hash: $file.children(`hash[xmlns=\"${Strophe.NS.HASH}\"]`).text(),\n                        size: $file.children('size').text(),\n                        uniqueid: $message.attr('id') || cached_stanza_id ,\n                        created_at: $file.children('created').text(),\n                        thumbnail: $file.children(`thumbnail[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA_THUMBNAIL}\"]`).attr('uri'),\n                        media_type: $file.children('media-type').text(),\n                        duration: $file.children('duration').text(),\n                        description: $file.children('desc').text(),\n                        height: $file.children('height').text(),\n                        width: $file.children('width').text(),\n                        voice: type === 'voice',\n                        sources: sources\n                    };\n                    if (sources[0].indexOf('aescbc') == 0) {\n                        let uri = sources[0].replace(/^aescbc/, 'https'),\n                            key = utils.fromBase64toArrayBuffer(uri.slice(uri.length - 64));\n                        uri = uri.slice(0, uri.length - 64 - 1);\n                        _.extend(file_attrs, {sources: [uri], key: key});\n                        file_attrs.has_encrypted_files = true;\n                    }\n                    items.push(file_attrs);\n                }\n            }\n        });\n        return items\n    },\n\n    parsePinnedMessage: function ($message, pinned_msg_elem) {\n        if (!$message) {\n            this.renderPinnedMessage(null, pinned_msg_elem);\n        }\n        else {\n            let $msg = $message.find('result message').first();\n            if (this.get('pinned_message'))\n                if (this.get('pinned_message').stanza_id === $msg.find('stanza-id').attr('id'))\n                    return;\n            let message = this.account.chats.receiveChatMessage($message, {pinned_message: true});\n            this.set('pinned_message', message);\n            this.renderPinnedMessage(message, pinned_msg_elem);\n        }\n    },\n\n    renderPinnedMessage: function (message, pinned_msg_elem) {\n        if (!message) {\n            pinned_msg_elem.html(\"\");\n            pinned_msg_elem.siblings('.chat-content').css({'height':'100%'});\n        }\n        else {\n            let images = message.get('images') || [],\n                files = message.get('files') || [],\n                locations = message.get('locations'),\n                fwd_message = message.get('forwarded_message'),\n                fwd_msg_author = null,\n                msg_text = _.escape(message.get('message'));\n            message.get('videos') && message.get('videos').length && (files = files.concat(message.get('videos')));\n            if (fwd_message) {\n                let user_info = fwd_message[0].get('user_info') || {};\n                if (msg_text) {\n                } else if (fwd_message.length > 1)\n                    msg_text = xabber.getQuantityString(\"forwarded_messages_count\", fwd_message.length);\n                else {\n                    msg_text = fwd_message[0].get('message') || fwd_message[0].get('forwarded_message') && xabber.getString(\"forwarded_messages_count_plural_0\", [fwd_message[0].get('forwarded_message').length]);\n                    fwd_msg_author = user_info.nickname || fwd_message[0].get('from_jid') || user_info.id;\n                }\n            }\n            if ((images && images.length) && (files && files.length))\n                msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__attachments\", [images.length + files.length])}</span>`;\n            else {\n                if (images && images.length) {\n                    if (images.length == 1)\n                        msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__images_plural_0\")}: </span>` + images[0].name;\n                    if (images.length > 1)\n                        msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__images\", images.length)}</span>`;\n                }\n                if (files && files.length) {\n                    if (files.length == 1)\n                        msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__files_plural_0\")}: </span>` + files[0].name + ' (' + files[0].size + ')';\n                    if (files.length > 1)\n                        msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__files\", files.length)}</span>`;\n                }\n            }\n            if (locations && locations.length) {\n                if (locations.length == 1)\n                    msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__locations_plural_0\")}</span>`;\n                if (locations.length > 1)\n                    msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__locations\", locations.length)}</span>`;\n            }\n            let participant_info = this.participants.get(message.get('user_info')),\n                participant_nickname = participant_info && participant_info.get('nickname') ? participant_info.get('nickname') : null;\n            let user_info = message.get('user_info') || {},\n                msg_author = participant_nickname || user_info.nickname || message.get('from_jid') || user_info.id,\n                pinned_msg = {\n                    author: msg_author,\n                    time: pretty_datetime(message.get('time')),\n                    message: msg_text,\n                    fwd_author: fwd_msg_author\n                },\n                pinned_msg_html = $(templates.group_chats.pinned_message(pinned_msg));\n            let chat_content = this.account.chats.get(this.hash_id);\n            if (chat_content && chat_content.item_view && chat_content.item_view.content){\n                chat_content = chat_content.item_view.content;\n                let is_scrolled = chat_content.isScrolledToBottom();\n                if (is_scrolled)\n                    chat_content.scrollToBottom();\n            }\n            pinned_msg_elem.html(pinned_msg_html).emojify('.chat-msg-content', {emoji_size: 18});\n            let height_pinned_msg = pinned_msg_elem.height();\n            pinned_msg_elem.siblings('.chat-content').css({\n                'height': 'calc(100% - ' + height_pinned_msg + 'px)'\n            });\n            pinned_msg_elem.attr('data-uniqueid', message.get('unique_id'));\n        }\n    },\n\n    resetStatus: function (timeout) {\n        clearTimeout(this._reset_status_timeout);\n        this._reset_status_timeout = setTimeout(() => {\n            this.set({\n                status_updated: moment.now(),\n                status: 'offline',\n                status_message: ''\n            });\n        }, timeout || 5000);\n    },\n\n    searchByParticipants: function (query, callback) {\n        if (!this.participants.version) {\n            this.participants.participantsRequest({}, () => {\n                let participants_list = this.participants.search(query);\n                callback && callback(participants_list);\n            });\n        } else {\n            let participants_list = this.participants.search(query);\n            callback && callback(participants_list);\n        }\n    },\n\n    updateName: function () {\n        if (this.get('roster_name') && this.get('name') !== this.get('roster_name'))\n            this.set('name', this.get('roster_name'));\n    },\n\n    showDetails: function (screen) {\n        if (!this.details_view)\n            this.details_view = (this.get('group_chat')) ? new xabber.GroupChatDetailsView({model: this}) : new xabber.ContactDetailsView({model: this});\n        screen || (screen = 'contacts');\n        xabber.body.setScreen(screen, {right: 'contact_details', contact: this});\n    },\n\n    showDetailsRight: function (screen, options) {\n        let chat = this.account.chats.getChat(this),\n             scrolled_top_chats_view, scrolled_top_chat;\n        if (chat)\n            if (!chat.item_view.content)\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n            scrolled_top_chat = chat.item_view.content.getScrollTop()\n        if (xabber.chats_view)\n            scrolled_top_chats_view = xabber.chats_view.getScrollTop();\n        options = options || {};\n        if (!this.details_view_right && !options.encrypted)\n            this.details_view_right = (this.get('group_chat')) ? new xabber.GroupChatDetailsViewRight({model: this}) : new xabber.ContactDetailsViewRight({model: this});\n        if (!this.details_view_right_encrypted && options.encrypted)\n            this.details_view_right_encrypted = new xabber.ContactDetailsViewRight({model: this, encrypted: true});\n        screen || (screen = 'contacts');\n        if (xabber.body.screen.get('right_contact') && options.type != 'search' && options.type != 'members' && options.type != 'participant' && !options.right_saved) {\n            this.set('search_hidden', true)\n            xabber.body.setScreen(screen, {right_contact: '', contact: this});\n        }\n        else {\n            if (options.encrypted)\n                xabber.body.setScreen(screen, {right_contact: 'contact_details_encrypted', contact: this});\n            else\n                xabber.body.setScreen(screen, {right_contact: 'contact_details', contact: this});\n            if (this.details_view_right && this.details_view_right.contact_searched_messages_view){\n                this.details_view_right.contact_searched_messages_view.hideSearch();\n                if (options.type === 'search') {\n                    this.details_view_right.contact_searched_messages_view.clearSearch();\n                    this.details_view_right.showSearchMessages();\n                }\n                if (options.type === 'members') {\n                    this.details_view_right.$('.tabs:not(.participant-tabs) .list-variant[data-value=\"participants\"]').click()\n                }\n                this.details_view_right.onScroll()\n            }\n        }\n        if (scrolled_top_chat)\n            chat.item_view.content.scrollTo(scrolled_top_chat);\n        if (scrolled_top_chats_view)\n            xabber.chats_view.scrollTo(scrolled_top_chats_view);\n    },\n});\n\nxabber.SetGroupchatStatusView = xabber.BasicView.extend({\n    className: 'modal main-modal change-status-modal',\n    template: templates.group_chats.set_status,\n\n    events: {\n        \"click .status-values li\": \"changeStatus\"\n    },\n\n    open: function (contact) {\n        this.contact = contact;\n        this.account = this.contact.account;\n        this.show();\n        this.getStatuses();\n    },\n\n    updateIcons: function () {\n        let ic_name = this.contact.getIcon();\n        this.$('.status-bulb').addClass('hidden');\n        ic_name && this.$('.status-bulb').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    highlightStatus: function (status) {\n        this.$(`.status-values li[data-value=\"${status}\"]`).addClass('active')\n            .siblings().removeClass('active');\n        this.updateIcons();\n    },\n\n    getStatuses: function () {\n        let iq_get_properties = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'get'})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#status`});\n        this.account.sendFast(iq_get_properties, (properties) => {\n            this.data_form = this.account.parseDataForm($(properties).find('x[xmlns=\"' + Strophe.NS.DATAFORM + '\"]'));\n            let status_field = this.data_form.fields.find(field => field.var == 'status'),\n                options = (this.data_form.fields.find(field => field.var == 'status') || []).options || [];\n            if (!options.length || status_field.type == 'fixed') {\n                this.closeModal();\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                return;\n            }\n            this.renderStatuses(options);\n        }, () => {\n            this.closeModal();\n            utils.dialogs.error(xabber.getString(\"set_group_status__error__service_unavailable\"));\n            return;\n        });\n    },\n\n    renderStatuses: function (options) {\n        this.$('.status-values').html(\"\");\n        options.forEach((option) => {\n            let status = option,\n                status_field = this.data_form.fields.find(f => f.var == status.value);\n            if (status_field)\n                status.show = status_field.values[0];\n            else\n                status.show = status.value;\n            let $status_item = $(templates.group_chats.status_item({status}));\n            this.$('.status-values').append($status_item);\n        });\n        this.highlightStatus(this.contact.get('status'));\n    },\n\n    changeStatus: function (ev) {\n        let status = $(ev.target).closest('li').data('value');\n        this.highlightStatus(status);\n        this.do_change();\n        this.closeModal();\n    },\n\n    do_change: function () {\n        let status = this.$('.status-values li.active').data('value');\n        this.setStatus(status);\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    setStatus: function (status) {\n        if (!this.data_form || this.contact.get('group_info').status === status)\n            return;\n        let iq_set_status = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#status`}),\n            status_field = this.data_form.fields.find(field => field.var === 'status'),\n            idx = this.data_form.fields.indexOf(status_field);\n        status_field.values = [status];\n        this.data_form.fields[idx] = status_field;\n        iq_set_status = this.account.addDataFormToStanza(iq_set_status, this.data_form);\n        this.account.sendFast(iq_set_status);\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        let value = this.$('.status-message').val();\n        if (!value)\n            this.do_change();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.ContactItemView = xabber.BasicView.extend({\n    className: 'roster-contact list-item',\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.$el.attr({'data-id': uuid(), 'data-jid': this.model.get('jid')});\n        this.$('.jid').text(this.model.get('jid'));\n        this.interval_last;\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.selectView();\n        this.updateGroupChat();\n        this.updateIcon();\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"change:subscription\", this.updateStatus, this);\n        this.model.on(\"change:subscription_preapproved\", this.updateStatus, this);\n        this.model.on(\"change:subscription_request_in\", this.updateStatus, this);\n        this.model.on(\"change:subscription_request_out\", this.updateStatus, this);\n        this.model.on(\"change:private_chat\", this.updateIcon, this);\n        this.model.on(\"change:incognito_chat\", this.updateIcon, this);\n        this.model.on(\"change:bot\", this.updateIcon, this);\n        this.model.on(\"change:blocked\", this.onBlocked, this);\n        this.model.on(\"change:status_message\", this.updateStatusMsg, this);\n        this.model.on(\"change:last_seen\", this.lastSeenUpdated, this);\n        this.model.on(\"change:group_chat\", this.updateGroupChat, this);\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.model.get('name'));\n    },\n\n    updateAvatar: function () {\n        this.$('.circle-avatar').setAvatar(this.model.cached_image, this.avatar_size);\n    },\n\n    updateStatus: function () {\n        this.$('.status').attr('data-status', this.model.get('status'));\n        this.$('.chat-icon').attr('data-status', this.model.get('status'));\n        this.$('.status-message').text(this.model.getStatusMessage());\n        if (this.model.get('status') == 'offline') {\n            if (!Strophe.getNodeFromJid(this.model.get('jid'))) {\n                this.model.set({status_message: 'Server'});\n                return;\n            }\n            if (this.model.get('last_seen')) {\n            let seconds = (moment.now() - this.model.get('last_seen'))/1000,\n                new_status = xabber.pretty_last_seen(seconds);\n            this.model.set({ status_message: new_status });\n            }\n        }\n    },\n\n    onBlocked: function () {\n        this.updateIcon();\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n\n    selectView: function () {\n        if (this.model.get('group_chat')) {\n            this.$('.private-chat').addClass('hidden');\n            this.$('.group_chat').removeClass('hidden');\n        }\n    },\n\n    lastSeenUpdated: function () {\n        if (this.model.get('status') == 'offline' && this.model.get('last_seen') && _.isUndefined(this.interval_last)) {\n            this.interval_last = setInterval(() => {\n                let seconds = (moment.now() - this.model.get('last_seen'))/1000,\n                    new_status = xabber.pretty_last_seen(seconds);\n                this.model.set({ status_message: new_status });\n            }, 60000);\n        }\n        else\n        {\n            clearInterval(this.interval_last);\n        }\n    },\n\n    updateGroupChat: function () {\n        let is_group_chat = this.model.get('group_chat');\n        this.$('.status').hideIf(is_group_chat);\n        this.updateIcon();\n    },\n\n    updateIcon: function () {\n        let ic_name = this.model.getIcon();\n        this.$('.chat-icon').addClass('hidden');\n        if (this.model.get('invitation'))\n            return;\n        ic_name && this.$('.chat-icon').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    updateStatusMsg: function() {\n        this.$('.status-message').text(this.model.getStatusMessage());\n    }\n});\n\nxabber.ContactItemRightView = xabber.ContactItemView.extend({\n    template: templates.contact_right_item,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_RIGHT_ITEM,\n\n    events: {\n        \"click\": \"clickOnItem\",\n        \"mouseover\": \"showJid\",\n        \"mouseleave\": \"hideJid\",\n    },\n\n    showJid: function () {\n        if (this.$('.name').text() !== this.model.get('jid')) {\n            this.$('.status-message').addClass('hidden');\n            this.$('.jid').removeClass('hidden');\n        }\n    },\n\n    hideJid: function () {\n        this.$('.jid').addClass('hidden');\n        this.$('.status-message').removeClass('hidden');\n    },\n\n    clickOnItem: function () {\n        this.model.trigger(\"open_chat\", this.model);\n    }\n});\n\nxabber.ContactItemLeftView = xabber.ContactItemView.extend({\n    template: templates.contact_left_item,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_LEFT_ITEM,\n\n    events: {\n        \"click\": \"clickOnItem\"\n    },\n\n    __initialize: function () {\n        this.updateDisplayStatus();\n        this.updateBlockedState();\n        this.updateMutedState();\n        this.updateGroupChat();\n        this.model.on(\"change:display\", this.updateDisplayStatus, this);\n        this.model.on(\"change:blocked\", this.updateBlockedState, this);\n        this.model.on(\"change:group_chat\", this.updateGroupChat, this);\n    },\n\n    updateDisplayStatus: function () {\n        this.$el.switchClass('active', this.model.get('display'));\n    },\n\n    updateBlockedState: function () {\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n    updateMutedState: function () {\n        this.$('.muted-icon').hide();\n    },\n\n    clickOnItem: function () {\n        let options = {};\n        (xabber.chats_view.active_chat && xabber.chats_view.active_chat.model.get('jid') === this.model.get('jid') && xabber.chats_view.active_chat.model.get('encrypted')) && (options.encrypted = true);\n        this.model.trigger(\"open_chat\", this.model, options);\n    }\n});\n\nxabber.ContactResources = xabber.Resources.extend({\n    initialize: function (models, options) {\n        this.contact = options.contact;\n        this.jid = options.contact.get('jid');\n        this.connection = options.contact.account.connection;\n        this.on(\"add change\", this.onResourceUpdated, this);\n        this.on(\"remove\", this.onResourceRemoved, this);\n    },\n\n    onResourceUpdated: function (resource) {\n        if (resource === this.first()) {\n            this.contact.set({\n                status_updated: moment.now(),\n                status: resource.get('status'),\n                status_message: resource.get('status_message')\n            });\n        }\n    },\n\n    onResourceRemoved: function () {\n        let attrs = {status_updated: moment.now()};\n        if (this.length) {\n            attrs.status = this.first().get('status');\n            attrs.status_message = this.first().get('status_message');\n        } else {\n            attrs.status = 'offline';\n            attrs.status_message = '';\n        }\n        this.contact.set(attrs);\n    }\n});\n\nxabber.ContactResourcesView = xabber.ResourcesView.extend({\n    onResourceAdded: function (resource) {\n        this.addChild(resource.get('resource'),\n            xabber.ResourceView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.$el.showIf(this.model.length);\n        this.parent.updateScrollBar();\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.$el.addClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.resources-wrap').prepend(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.ContactResourcesRightView = xabber.ResourcesView.extend({\n    className: 'modal main-modal resource-modal',\n\n    _initialize: function () {\n        this.model.on(\"remove\", this.onResourceRemoved, this);\n        this.model.on(\"reset\", this.onReset, this);\n        this.model.on(\"change:priority\", this.onPriorityChanged, this);\n    },\n\n    renderByInit: function () {\n        this.model.each((resource) => {\n            this.onResourceAdded(resource);\n        });\n    },\n\n    open: function () {\n        if (this.model.length) {\n            this.$el.openModal({\n                ready: () => {\n                    this.$el.html('<svg class=\"details-icon mdi mdi-24px \"></svg><div class=\"resources-wrap\"></div>')\n                    this.$el.find('.details-icon').html(env.templates.svg['ic-jabber']())\n                    this.renderByInit();\n                },\n                // complete: () => {\n                //     this.$el.detach();\n                //     this.data.set('visible', false);\n                // }\n            });\n        }\n    },\n\n    onResourceAdded: function (resource) {\n        this.model.requestInfo(resource);\n        this.addChild(resource.get('resource'),\n            xabber.ResourceRightView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n    },\n\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.$el.showIf(this.model.length);\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.$el.addClass('hidden');\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.resources-wrap').prepend(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.ContactVCardView = xabber.VCardView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .details-icon\": \"onClickIcon\"\n    }\n});\n\nxabber.ContactRightVCardView = xabber.VCardRightView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .info-wrap.more\": \"showVCard\",\n        \"click .btn-back\": \"hideVCard\"\n    },\n\n\n    showVCard: function (ev) {\n        this.model.set('vcard_hidden', false);\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n        });\n        this.parent.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.vcard-header').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideVCard: function (ev) {\n        this.model.set('vcard_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.scrollToTop();\n        this.onScroll();\n        this.parent.onScroll();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n});\n\nxabber.ContactDetailsViewRight = xabber.BasicView.extend({\n    className: 'details-panel-right contact-details-panel',\n    template: templates.contact_details_right,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-escape:not(.btn-top)\": \"openChat\",\n        \"click .btn-escape.btn-top\": \"scrollToTopSmooth\",\n        \"click .btn-edit\": \"showEdit\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .panel-background-clickable\": \"openChat\",\n        \"click .btn-search\": \"showSearchMessages\",\n        \"click .btn-voice-call\": \"voiceCall\",\n        \"click .btn-add\": \"addContact\",\n        \"click .btn-delete\": \"deleteContact\",\n        \"click .btn-block\": \"blockContact\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-unblock\": \"unblockContact\",\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-mute.muted\": \"unmuteChat\",\n        \"click .list-variant\": \"changeList\",\n        \"click .btn-auth-request\": \"requestAuthorization\",\n    },\n\n    _initialize: function (options) {\n        this.encrypted = options.encrypted;\n        this.ps_container = this.$('.panel-content-wrap');\n        this.account = this.model.account;\n        this.chat = this.account.chats.getChat(this.model, options.encrypted && 'encrypted');\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.name_field.$('.contact-name-input').prop('disabled', true)\n        if (!this.encrypted){\n            this.contact_edit_view = this.addChild('edit', xabber.ContactEditView,\n                {model: this.model, el: this.$('.edit-block-wrap')[0]});\n        }\n        this.contact_searched_messages_view = this.addChild('search', xabber.ContactSearchedMessagesView,\n            {model: this.account.chats.getChat(this.model), query_text: '1', el: this.$('.search-messages-block-wrap')[0]});\n        this.vcard_view = this.addChild('vcard', xabber.ContactRightVCardView,\n            {model: this.model, el: this.$('.vcard')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateButtons();\n        this.updateColorScheme();\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScroll.bind(this));\n        this.model.on(\"change\", this.update, this);\n        this.chat.on(\"change:muted\", this.updateNotifications, this);\n        xabber.on(\"change:video\", this.updateJingleButtons, this);\n        xabber.on(\"change:audio\", this.updateJingleButtons, this);\n    },\n\n    render: function (options) {\n        if (!this.model.get('vcard_updated')) {\n            this.vcard_view.refresh();\n        }\n        if (!this.model.get('saved_search_panel')) {\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        else {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.$('.btn-mute').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        if (this.encrypted){\n            this.$('.btn-search-messages').remove()\n            this.$('.btn-edit').remove()\n            this.$('.btn-qr-code').remove()\n        }\n        this.updateChilds();\n        this.updateSubscriptions();\n        this.updateJingleButtons();\n        this.updateStatusMsg();\n        this.updateName();\n        this.updateNotifications();\n        this.setButtonsWidth();\n        this.updateList('image');\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        this.onScroll();\n        this.model.resources.models.forEach((resource) => {this.model.resources.requestInfo(resource)});\n        $(window).bind(\"keydown.contact_panel\", this.keydownHandler.bind(this));\n    },\n\n    updateChilds: function () {\n        if (this.vcard_view && !this.model.get('vcard_hidden'))\n            this.vcard_view.hideVCard();\n        if (this.contact_edit_view && !this.model.get('edit_hidden'))\n            this.contact_edit_view.hideEdit();\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n\n    keydownHandler: function (ev) {\n        if (!xabber.body.$el.siblings('.mfp-ready').length && !$.magnificPopup.instance.isOpen && ev.keyCode === constants.KEY_ESCAPE && !xabber.body.$el.siblings('#modals').children('.open').length) {\n            this.model.showDetailsRight('all-chats');\n            $(window).unbind(\"keydown.contact_panel\");\n        }\n    },\n\n    openChat: function (ev) {\n        this.model.showDetailsRight('all-chats');\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.header-buttons .block-name').addClass('fade-out');\n        this.$('.btn-escape').removeClass('btn-top');\n        this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    onChangedVisibility: function () {\n        this.model.set('display', this.isVisible());\n    },\n\n    updateJingleButtons: function () {\n        this.$('.btn-voice-call').switchClass('non-active', !xabber.get('audio'));\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        if (_.has(changed, 'status_updated')) this.updateStatus();\n        if (_.has(changed, 'subscription')) this.updateSubscriptions();\n        if (_.has(changed, 'subscription_request_in')) this.updateSubscriptions();\n        if (_.has(changed, 'blocked')) this.updateStatusMsg();\n        if (_.has(changed, 'status_message')) this.updateStatusMsg();\n        if (_.has(changed, 'in_roster') || _.has(changed, 'blocked') ||\n            _.has(changed, 'subscription')) {\n            this.updateButtons();\n        }\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('roster_name') && this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n\n    onScroll: function () {\n        if (this.model.get('saved_search_panel') && !this.model.get('search_hidden')){\n            this.ps_container.perfectScrollbar('destroy');\n            return true;\n        }\n        let bottom_block_scroll;\n        if (this.$('.bottom-block:not(.edit-bottom-block)'))\n            bottom_block_scroll = this.$('.bottom-block:not(.edit-bottom-block)').get(0).getBoundingClientRect().top;\n\n        if(this.ps_container[0].scrollTop >= 250) {\n            this.$('.header-buttons').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.main-info').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n            this.$('.header-buttons .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.header-buttons').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        else{\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        if (!_.isUndefined(bottom_block_scroll) && bottom_block_scroll <= 160){\n            this.$('.btn-escape').addClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.header-buttons .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').text(this.$('.list-variant .active').text())\n        }\n        else {\n            this.$('.btn-escape').removeClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status').attr('data-status', this.model.get('status'));\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateStatusMsg: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateButtons: function () {\n        let in_roster = this.model.get('in_roster'),\n            is_blocked = this.model.get('blocked'),\n            is_server = this.model.get('server'),\n            subscription = this.model.get('subscription');\n        this.$('.btn-add').hideIf(in_roster);\n        this.$('.btn-block-wrap .contact-btn').switchClass('btn-block', !is_blocked).switchClass('btn-unblock', is_blocked);\n        this.$('.btn-block-wrap .btn-name').text(is_blocked ? xabber.getString(\"contact_bar_unblock\") : xabber.getString(\"contact_bar_block\"));\n        this.$('.buttons-wrap .button-wrap:not(.btn-block-wrap):not(.btn-search-messages)').switchClass('non-active', is_blocked);\n        this.$('.contact-mute-dropdown').hideIf(is_blocked);\n        this.$('.btn-auth-request').showIf(!is_server && in_roster && !is_blocked &&\n            subscription !== 'both' && subscription !== 'to');\n    },\n\n    updateNotifications: function () {\n        if (this.chat.isMuted()) {\n            if (this.chat.isMuted() > 4800000000)\n                this.$('.btn-mute').html(env.templates.svg['bell-off']());\n            else\n                this.$('.btn-mute').html(env.templates.svg['bell-sleep']());\n            this.$('.btn-mute').addClass('muted').addClass('active')\n        }\n        else {\n            this.$('.btn-mute').html(env.templates.svg['bell']());\n            this.$('.btn-mute').removeClass('muted')\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.chat.isMuted());\n        this.$('.btn-unmute-dropdown').hideIf(!this.chat.isMuted());\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    updateSubscriptions: function () {\n        let subscription = this.model.get('subscription'),\n            in_request = this.model.get('subscription_request_in'),\n            out_request = this.model.get('subscription_request_out'),\n            $label_outcoming = this.$('label[for=\"outcoming-subscription\"]'),\n            $label_incoming = this.$('label[for=\"incoming-subscription\"]');\n        if (subscription === 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        } else if (subscription === 'from') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        } else if (subscription === 'to') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        }\n        else if (!subscription || subscription === 'none') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        }\n        if (in_request && subscription !== 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', false);\n        }\n        if (out_request) {\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', true);\n        }\n    },\n\n    showEdit: function (ev) {\n        this.contact_edit_view.showEdit();\n    },\n\n    voiceCall: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return;\n        if (xabber.get('audio'))\n            this.initCall(ev);\n    },\n\n    initCall: function () {\n        if (xabber.current_voip_call) {\n            utils.callback_popup_message(xabber.getString(\"jingle__error__call_in_progress\"), 1000);\n            return;\n        }\n        let chat = this.account.chats.getChat(this.model);\n        if (!chat.item_view.content)\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        chat.item_view.content.initJingleMessage();\n    },\n\n    deleteContact: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    muteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n            muted_seconds;\n        if (mute_type === 'minutes15')\n            muted_seconds = 900\n        if (mute_type === 'hours1')\n            muted_seconds = 3600\n        if (mute_type === 'hours2')\n            muted_seconds = 7200\n        if (mute_type === 'day')\n            muted_seconds = 86400\n        if (mute_type === 'forever')\n            muted_seconds = 0\n        this.chat.muteChat(muted_seconds);\n    },\n\n    unmuteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        this.chat.muteChat('');\n    },\n\n    showSearchMessages: function (ev) {\n        this.scrollToTop();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.model.set('search_hidden', false);\n        this.$('.search-wrap').hideIf(this.model.get('search_hidden'));\n        this.contact_searched_messages_view.$search_form.find('input').focus();\n    },\n\n    addContact: function () {\n        xabber.add_contact_view.show({account: this.account, jid: this.model.get('jid')});\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.$('.tabs').animate({scrollLeft: $target.position().left}, 400);\n        this.ps_container.animate(\n            {scrollTop: this.$('.bottom-block:not(.edit-bottom-block)').position().top + this.ps_container.scrollTop() - 120},\n            200,\n            () => {\n                this.onScroll();\n        });\n        this.$('.header-buttons .block-name.second-text').text($target.text())\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, encrypted: this.encrypted, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    requestAuthorization: function () {\n        this.model.pres('subscribe');\n        this.model.trigger('presence', this.model, 'subscribe_from');\n        this.openChat();\n    }\n});\n\nxabber.GroupChatDetailsViewRight = xabber.BasicView.extend({\n    className: 'details-panel-right groupchat-details-panel',\n    template: templates.group_chats.group_chat_details_right,\n    ps_selector: '.panel-content-wrap',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-mute.muted\": \"unmuteChat\",\n        \"click .btn-edit\": \"showEdit\",\n        \"click .btn-search\": \"showSearchMessages\",\n        \"click .btn-clear-history-chat\": \"clearHistory\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-leave\": \"leaveGroupChat\",\n        \"click .btn-invite\": \"inviteUser\",\n        \"click .btn-delete-group\": \"deleteGroup\",\n        \"click .btn-edit-settings\": \"editProperties\",\n        \"click .btn-default-restrictions\": \"showRestrictions\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .panel-background-clickable\": \"openChat\",\n        \"click .btn-escape:not(.btn-top)\": \"openChat\",\n        \"click .btn-escape.btn-top\": \"scrollToTopSmooth\",\n        \"click .btn-clear-history\": \"retractAllMessages\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .description-edit-wrap .btn-choose-image\": \"chooseAvatar\",\n        \"click .description-edit-wrap .btn-selfie\": \"makeSelfie\",\n        \"click .description-edit-wrap .btn-emoji-panel\": \"makeEmojiAvatar\",\n        \"click .tabs:not(.participant-tabs) .list-variant\": \"changeList\",\n        \"click .edit-pictured-buttons .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.chat = this.account.chats.getChat(this.model);\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.name_field.$('.contact-name-input').prop('disabled', true)\n        this.participants = this.addChild('participants', xabber.ParticipantsViewRight, {model: this.model, el: this.$('.participants-wrap')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.contact_edit_view = this.addChild('edit', xabber.GroupEditView,\n            {model: this.model, el: this.$('.edit-block-wrap')[0]});\n        this.group_chat_properties = this.addChild('properties_view', xabber.GroupChatPropertiesViewRight, {model:this.model, el: this.$('.group-chat-properties-wrap')[0]});\n        this.group_chat_status = this.addChild('status_view', xabber.GroupChatStatusViewRight, {model:this.model, el: this.$('.status-block-wrap')[0]});\n        this.contact_searched_messages_view = this.addChild('search', xabber.ContactSearchedMessagesView,\n            {model: this.account.chats.getChat(this.model), query_text: '1', el: this.$('.search-messages-block-wrap')[0]});\n        this.group_chat_properties_edit = new xabber.GroupChatPropertiesEditView({model: this.model});\n        this.default_restrictions_edit_right = this.addChild('restrictions',\n            xabber.DefaultRestrictionsRightView,\n            {model: this.model, el: this.$('.restrictions-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.ps_container.on(\"ps-scroll-y\", this.onScroll.bind(this));\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"change\", this.update, this);\n        this.chat.on(\"change:muted\", this.updateNotifications, this);\n        this.model.on(\"permissions_changed\", this.updateButtons, this);\n        this.model.on(\"change:subscription\", this.updateButtons, this);\n    },\n\n    render: function () {\n        this.updateName();\n        this.updateButtons();\n        if (!this.model.my_rights)\n            this.model.getMyInfo(() => {\n                this.updateButtons();\n            });\n        if (!this.model.get('saved_search_panel')) {\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        else {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.$('.btn-mute').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.btn-delete').showIf(this.model.get('subscription') === \"both\");\n        this.$('.btn-join').showIf(this.model.get('subscription') !== \"both\");\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.select-users-list-wrap .dropdown-button').dropdown(dropdown_settings);\n        this.$('.circle-avatar.dropdown-button').dropdown(dropdown_settings);\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n        this.onScroll();\n        this.updateChilds();\n        this.updateNotifications();\n        this.updateList('participants');\n        this.setButtonsWidth();\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        $(window).bind(\"keydown.contact_panel\", this.keydownHandler.bind(this));\n        return this;\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs.not-edit .indicator').remove();\n        this.$('.tabs.not-edit').tabs();\n        this.$('.tabs.not-edit .indicator').addClass('ground-color-500');\n    },\n\n    updateChilds: function () {\n        if (!this.model.get('vcard_hidden'))\n            this.group_chat_properties.hideVCard();\n        if (!this.model.get('edit_hidden'))\n            this.contact_edit_view.hideEdit();\n        if (!this.model.get('restrictions_hidden'))\n            this.default_restrictions_edit_right.hideRestrictions();\n        this.model.set('participant_hidden', true);\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'))\n    },\n\n    showEdit: function (ev) {\n        this.contact_edit_view.showEdit();\n    },\n\n    showRestrictions: function (ev) {\n        this.default_restrictions_edit_right.showRestrictions();\n    },\n\n    hideRestrictions: function (ev) {\n        this.model.set('restrictions_hidden', true);\n        this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'));\n        this.showEdit();\n    },\n\n\n    keydownHandler: function (ev) {\n        if (!xabber.body.$el.siblings('.mfp-ready').length && !$.magnificPopup.instance.isOpen && ev.keyCode === constants.KEY_ESCAPE && !xabber.body.$el.siblings('#modals').children('.open').length) {\n            this.model.showDetailsRight('all-chats');\n            $(window).unbind(\"keydown.contact_panel\");\n        }\n    },\n\n    updateNotifications: function () {\n        if (this.chat.isMuted()) {\n            if (this.chat.isMuted() > 4800000000)\n                this.$('.btn-mute').html(env.templates.svg['bell-off']());\n            else\n                this.$('.btn-mute').html(env.templates.svg['bell-sleep']());\n            this.$('.btn-mute').addClass('muted').addClass('active')\n        }\n        else {\n            this.$('.btn-mute').html(env.templates.svg['bell']());\n            this.$('.btn-mute').removeClass('muted')\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.chat.isMuted());\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        // if (_.has(changed, 'muted')) this.updateNotifications();\n        if (_.has(changed, 'status_updated') || _.has(changed, 'status_message')) this.updateStatus();\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    updateButtons: function () {\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values),\n            change_group = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'change-group' && permission.values),\n            is_blocked = this.model.get('blocked');\n        this.$('.btn-settings-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-edit-settings').switchClass('hidden', !(is_owner || change_group));\n        this.$('.btn-invite-wrap').switchClass('non-active', this.model.get('private_chat') || this.model.get('subscription') != 'both');\n        this.$('.btn-default-restrictions-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-block').hideIf(is_blocked);\n        this.$('.btn-unblock').showIf(is_blocked);\n    },\n\n    updateName: function () {\n        this.$('.main-info .contact-name').text(this.model.get('name'));\n    },\n\n    muteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n            muted_seconds;\n        if (mute_type === 'minutes15')\n            muted_seconds = 900\n        if (mute_type === 'hours1')\n            muted_seconds = 3600\n        if (mute_type === 'hours2')\n            muted_seconds = 7200\n        if (mute_type === 'day')\n            muted_seconds = 86400\n        if (mute_type === 'forever')\n            muted_seconds = 0\n        this.chat.muteChat(muted_seconds);\n    },\n\n    unmuteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        this.chat.muteChat('');\n    },\n\n    showSearchMessages: function (ev) {\n        this.scrollToTop();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.model.set('search_hidden', false);\n        this.$('.search-wrap').hideIf(this.model.get('search_hidden'));\n        this.contact_searched_messages_view.$search_form.find('input').focus();\n    },\n\n    onScroll: function () {\n        if (this.model.get('saved_search_panel') && !this.model.get('search_hidden')){\n            this.ps_container.perfectScrollbar('destroy');\n            return true;\n        }\n        let bottom_block_scroll;\n        if (this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)'))\n            bottom_block_scroll = this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').get(0).getBoundingClientRect().top;\n\n        if(this.ps_container[0].scrollTop >= 250) {\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.main-info').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n            this.$('.header-buttons .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        else{\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        if (!_.isUndefined(bottom_block_scroll) && bottom_block_scroll <= 160) {\n            this.$('.btn-escape').addClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.header-buttons .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').text(this.$('.tabs:not(.participant-tabs) .list-variant .active').text())\n        }\n        else {\n            this.$('.btn-escape').removeClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    clearHistory: function () {\n        if (this.chat && this.chat.item_view && this.chat.item_view.content && this.chat.item_view.content.head){\n            this.chat.item_view.content.head.clearHistory()\n        }\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    editProperties: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n                let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n                    .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n                this.account.sendIQFast(iq_get_properties, (properties) => {\n                    let data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                    this.group_chat_properties_edit.open(data_form);\n                }, () => {\n                    utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n                });\n        }\n    },\n\n    leaveGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"groupchat_leave_full\"), xabber.getString(\"groupchat_leave_confirm\", [contact.get('name')]), null, { ok_button_text: xabber.getString(\"groupchat_leave\")}).done((result) => {\n            if (result) {\n                contact.declineSubscription();\n                let chat = this.account.chats.getChat(contact);\n                contact.removeFromRoster();\n                chat.deleteFromSynchronization(() => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                }, () => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                });\n            }\n        });\n    },\n\n    inviteUser: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            if (!xabber.invite_panel)\n                xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n            xabber.invite_panel.open(this.account, this.model);\n        }\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.header-buttons .block-name').addClass('fade-out');\n        this.$('.btn-escape').removeClass('btn-top');\n        this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        if (list_name != 'blocked' && list_name != 'invitations') {\n            this.$('.tabs').animate({scrollLeft: $target.position().left - 80}, 400);\n            this.ps_container.animate(\n                {scrollTop: this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').position().top + this.ps_container.scrollTop() - 120},\n                400,\n                () => {\n                    this.onScroll();\n                });\n            this.$('.header-buttons .block-name.second-text').text($target.text())\n        }\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            if (name === 'invitations' || name === 'blocked'){\n                this.$('.edit-wrap .tabs .list-variant a').removeClass('active');\n                this.$('.edit-wrap .tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            }\n            else {\n                this.$('.tabs.not-edit .list-variant a').removeClass('active');\n                this.$('.tabs.not-edit .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            }\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func, edit_view;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n            case 'blocked':\n                constructor_func = xabber.BlockedView;\n                edit_view = true;\n                break;\n            case 'invitations':\n                constructor_func = xabber.InvitationsView;\n                edit_view = true;\n                break;\n        };\n        if (constructor_func && edit_view)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-edit-wrap')[0]});\n        else if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    getInvitations: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.model.get('full_jid') || this.model.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#invite'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    deleteGroup: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    openChat: function (ev) {\n        this.model.showDetailsRight('all-chats');\n    },\n\n    chooseAvatar: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let avatar_view = new xabber.SetAvatarView();\n            avatar_view.render({model: this.account, contact: this.model, parent: this});\n        } else\n            this.$('.circle-avatar input').click();\n    },\n\n    makeSelfie: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let webcam_panel_view = new xabber.WebcamProfileImageView();\n            webcam_panel_view.open({model: this.account, contact: this.model, parent: this});\n        } else\n            this.$('.circle-avatar input').click();\n    },\n\n    makeEmojiAvatar: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let emoji_panel_view = new xabber.EmojiProfileImageView();\n            emoji_panel_view.open({model: this.account, contact: this.model, parent: this});\n        } else\n            this.$('.circle-avatar input').click();\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length) {\n            return;\n        }\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        $(field).siblings('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.model.pubAvatar(file, \"\", function () {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                }, function (error) {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                    let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                    utils.dialogs.error(error_text);\n                });\n            }\n        });\n    },\n\n    retractAllMessages: function () {\n        let group_chat = this.account.chats.getChat(this.model);\n        utils.dialogs.ask(xabber.getString(\"delete_messages__header\"), xabber.getString(\"delete_messages__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                group_chat.retractAllMessages(true);\n            }\n        });\n    }\n});\n\nxabber.GroupChatStatusView = xabber.BasicView.extend({\n    template: templates.group_chats.group_status,\n    events: {\n        \"click .status-wrap\": \"setStatus\",\n        \"click .btn-edit-status\": \"setStatus\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.render();\n        this.model.on(\"change:status\", this.render, this);\n        this.model.on(\"change:group_info\", this.render, this);\n    },\n\n    render: function () {\n        let group_info = this.model.get('group_info');\n        if (!group_info)\n            return;\n        this.$('.status').attr('data-status', group_info.status || this.model.get('status'));\n        this.$('.status-message').text(group_info.status_msg);\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.model);\n    }\n});\n\nxabber.GroupChatStatusViewRight = xabber.BasicView.extend({\n    template: templates.group_chats.group_status_right,\n    events: {\n        \"click .group-chat-status-wrap\": \"setStatus\",\n        \"click .btn-edit-status\": \"setStatus\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.render();\n        this.model.on(\"change:status\", this.render, this);\n        this.model.on(\"change:group_info\", this.render, this);\n    },\n\n    render: function () {\n        let group_info = this.model.get('group_info');\n        if (!group_info)\n            return;\n        this.updateIcon()\n        this.$('.status').attr('data-status', group_info.status || this.model.get('status'));\n        this.$('.status-message').text(group_info.status_msg);\n    },\n\n    updateIcon: function () {\n        let ic_name = this.model.getIcon();\n        this.$('.status-bulb').addClass('hidden');\n        if (this.model.get('invitation'))\n            return;\n        ic_name && this.$('.status-bulb').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.model);\n    }\n});\n\nxabber.GroupChatPropertiesView = xabber.BasicView.extend({\n    template: templates.group_chats.group_chat_properties,\n\n    events: {\n        \"click .group-chat-properties .details-icon\": \"onClickIcon\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.contact = this.model;\n        this.account = this.model.account;\n        this.model.on(\"change:group_info\", this.update, this);\n        this.model.on(\"change:vcard_updated\", this.update, this);\n    },\n\n    render: function () {\n        if (!this.model.get('vcard_updated'))\n            this.model.vcard && this.model.vcard.refresh();\n        this.update();\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {};\n        this.$('.block-name').text(this.model.get('incognito_group') ? xabber.getString(\"incognito_group_settings__header\") : xabber.getString(\"public_group_settings__header\"));\n        this.$('.jabber-id .value').text(info.jid);\n        this.$('.name .value').text(info.name);\n        this.$('.description .value').text(info.description);\n        this.$('.model .value').text(utils.pretty_name(info.model));\n        this.$('.status .value').text(utils.pretty_name(info.status));\n        this.$('.searchable .value').text((info.searchable === 'none') ? xabber.getString(\"groupchat_index_type_none\") : utils.pretty_name(info.searchable));\n        this.$('.name-info-wrap').switchClass('hidden', !info.name);\n        this.$('.description-info-wrap').switchClass('hidden', !info.description);\n        this.$('.model-info-wrap').switchClass('hidden', !info.model);\n        this.$('.status-info-wrap').switchClass('hidden', !info.status);\n        this.$('.searchable-info-wrap').switchClass('hidden', !info.searchable);\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target).closest('.info-wrap'),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            if ($target_info.hasClass('searchable-info-wrap')) {\n                let label_name = $target_info.find('.label').first().text();\n                if (value_text === xabber.getString(\"groupchat_index_type_none\"))\n                    value_text += ' ' + label_name.toLowerCase();\n            }\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    }\n});\n\nxabber.GroupChatPropertiesViewRight = xabber.BasicView.extend({\n    template: templates.group_chats.group_chat_properties_right,\n\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .btn-back\": \"hideVCard\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.contact = this.model;\n        this.account = this.model.account;\n        this.model.on(\"change:group_info\", this.update, this);\n        this.model.on(\"change:vcard_updated\", this.update, this);\n        this.ps_container = this.$('.full-vcard-content');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.set('vcard_hidden', true)\n    },\n\n    render: function () {\n        if (!this.model.get('vcard_updated'))\n            this.model.vcard && this.model.vcard.refresh();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        if (this.parent.ps_container.length) {\n            if(!this.model.get('vcard_hidden'))\n                this.parent.ps_container.perfectScrollbar('destroy')\n            else\n                this.parent.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n        }\n        this.model.updateName();\n        this.model.updateAvatar();\n        this.hideMoreDescription();\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.update();\n        });\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.vcard-header-title').addClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n        }\n        else {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        }\n\n    },\n\n    hideMoreDescription: function (ev) {\n        if (!this.$('.vcard-wrap .info.description').hasClass('short')) {\n            this.$('.vcard-wrap .info.description').addClass('short');\n            this.$('.show-vcard').hideIf(false);\n        }\n    },\n\n\n    showVCard: function (ev) {\n        this.model.set('vcard_hidden', false);\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n        });\n        this.parent.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.vcard-header').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideVCard: function (ev) {\n        this.model.set('vcard_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.scrollToTop();\n        this.onScroll();\n        this.parent.onScroll();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {};\n        this.$('.block-name').text(this.model.get('incognito_group') ? xabber.getString(\"incognito_group_settings__header\") : xabber.getString(\"public_group_settings__header\"));\n        this.$('.jabber-id .value').text(info.jid);\n        this.$('.name .value').text(info.name);\n        this.$('.description .value').text(info.description);\n        this.$('.model .value').text(utils.pretty_name(info.model));\n        this.$('.status .value').text(utils.pretty_name(info.status));\n        this.$('.searchable .value').text((info.searchable === 'none') ? xabber.getString(\"groupchat_index_type_none\") : utils.pretty_name(info.searchable));\n        this.$('.name-info-wrap').switchClass('hidden', !info.name);\n        this.$('.description-info-wrap').switchClass('hidden', !info.description);\n        this.$('.model-info-wrap').switchClass('hidden', !info.model);\n        this.$('.status-info-wrap').switchClass('hidden', !info.status);\n        this.$('.searchable-info-wrap').switchClass('hidden', !info.searchable);\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    }\n});\n\nxabber.GroupChatPropertiesEditView = xabber.BasicView.extend({\n    className: 'modal dialog-modal group-chat-properties-edit',\n\n    events: {\n        \"click .btn-save\": \"saveChanges\",\n        \"click .btn-cancel\": \"close\",\n        \"change input\": \"updateSaveButton\",\n        \"keyup .property-wrap .text-field\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model;\n        this.model.on(\"change:name\", this.updateName, this);\n    },\n\n    open: function (data_form) {\n        this.data_form = data_form;\n        let all_fixed = this.data_form.fields.filter(f => f.type == 'fixed' || f.type == 'hidden').length == this.data_form.fields.length;\n        this.$el.html(templates.group_chats.group_chat_properties_edit({all_fixed: all_fixed, fields: data_form.fields, privacy: this.contact.get('incognito_group'), jid: this.model.get('jid')}));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('height', this.$el.height() - 115).perfectScrollbar({theme: 'item-list'});\n                this.updateScrollBar();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.$('.modal-content').css('height', '100%');\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.$el.detach();\n                this.$('.modal-content').css('height', '100%');\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateName: function () {\n        this.$('.name-info-wrap').find('.name').find('.value').text(this.model.get('name'));\n    },\n\n    saveChanges: function() {\n        if (this.$('.btn-save').hasClass('non-active'))\n            return;\n\n        let has_changes = false,\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null,\n                checked_inp = this.$('.' + field.var + '-field input:checked'),\n                text_inp = this.$('.' + field.var + '-field input[type=\"text\"]'),\n                textarea = this.$('.' + field.var + '-field textarea'),\n                new_value = \"\";\n            checked_inp.length && (new_value = checked_inp[0].id);\n            text_inp.length && (new_value = text_inp.val());\n            textarea.length && (new_value = textarea.val());\n            if (value !== new_value) {\n                let field_idx = this.data_form.fields.indexOf(field);\n                field.values = [new_value];\n                this.data_form.fields[field_idx] = field;\n                has_changes = true;\n            }\n        });\n\n        if (has_changes) {\n            iq = this.account.addDataFormToStanza(iq, this.data_form);\n            this.account.sendIQFast(iq, (result) => {\n                let $result  = $(result),\n                    group_info = _.clone(this.contact.get('group_info')),\n                    attrs = {\n                        name: $result.find('field[var=\"name\"] value').text(),\n                        searchable: $result.find('field[var=\"index\"]').children('value').text(),\n                        model: $result.find('field[var=\"membership\"]').children('value').text(),\n                        description: $result.find('field[var=\"description\"] value').text(),\n                        status: $result.find('field[var=\"status\"]').children('value').text()\n                };\n                this.$('button').addClass('non-active');\n                this.close();\n                _.extend(group_info, attrs);\n                this.model.set('group_info', group_info);\n            }, (error) => {\n                this.$('button').addClass('non-active');\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        } else\n            this.$('button').removeClass('non-active');\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null,\n                checked_inp = this.$('.' + field.var + '-field input:checked'),\n                text_inp = this.$('.' + field.var + '-field input[type=\"text\"]'),\n                textarea = this.$('.' + field.var + '-field textarea'),\n                new_value = \"\";\n            checked_inp.length && (new_value = checked_inp[0].id);\n            text_inp.length && (new_value = text_inp.val());\n            textarea.length && (new_value = textarea.val());\n            (value !== new_value) && (has_changes = true);\n        });\n        this.$('.btn-save').switchClass('non-active', !has_changes);\n    }\n\n});\n\nxabber.InvitationsView = xabber.BasicView.extend({\n    events: {\n    },\n    status: 'invitations',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.contact.participants.on(\"participants_updated\", this._render, this);\n        this.contact.on(\"invitations_send\", this._render, this);\n        this.account = this.contact.account;\n        this.$error = $('<p class=\"errors\"/>');\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-edit-wrap')\n        this.$el.html($(templates.preloader()));\n        this.updateInvitations();\n    },\n\n    updateInvitations: function () {\n        this.parent.$('.block-name-panel:not(.second-text)').html(xabber.getString(\"groupchat_invitations\"))\n        this.parent.getInvitations((response) => {\n            this.$el.html(\"\");\n            $(response).find('query').find('user').each((idx, item) => {\n                let user = {jid: $(item).attr('jid'), status: this.status},\n                    $item_view = $(templates.group_chats.invited_member_item(user)),\n                    avatar = Images.getDefaultAvatar(user.jid);\n                this.$el.append($item_view);\n                $item_view.find('.circle-avatar').setAvatar(avatar, this.member_avatar_size);\n            });\n            if (!$(response).find('query').find('user').length)\n                this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.showInviteButton();\n        }, (err) => {\n\n            this.$el.html(this.$error.text($(err).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\")));\n        });\n    },\n\n    revokeInvitation: function (ev) {\n        let $member_item = $(ev.target).closest('.invitations-user'),\n            member_jid = $member_item.data('jid'),\n            iq = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('revoke', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(member_jid);\n        this.account.sendIQFast(iq, () => {\n            $member_item.remove();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.updateRemoveParticipantButton();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n        });\n    },\n\n    revokeInvitationByElement: function ($member_item) {\n        let member_jid = $member_item.data('jid'),\n            iq = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('revoke', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(member_jid);\n        this.account.sendIQFast(iq, () => {\n            $member_item.remove();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n        });\n    }\n});\n\nxabber.MediaBaseView = xabber.BasicView.extend({\n    status: 'base',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.participant = options.participant;\n        this.encrypted = options.encrypted;\n        this.account = this.contact.account;\n        this.chat = this.account.chats.getChat(this.contact, this.encrypted && 'encrypted');\n        this.temporary_items = []\n        this.parent.ps_container.on(\"ps-scroll-up.mediagallery ps-scroll-down.mediagallery\", this.onScroll.bind(this));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        xabber.on(\"update_layout\", this.onUpdatedScreen, this);\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.all_messages_loaded = false;\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({}, () => {\n                this.$el.html(\"<div class='gallery-files'></div>\");\n                this.updateMedia();\n            });\n        }\n    },\n\n    onScroll: function () {\n        if (!this.active)\n            return\n        let scrollTop = this.parent.ps_container[0].scrollTop,\n            scrollHeight = this.parent.ps_container[0].scrollHeight,\n            offsetHeight = this.parent.ps_container[0].offsetHeight,\n            persentScrolled = scrollTop / (scrollHeight - offsetHeight);\n        if (persentScrolled > 0.8 && this.last_rsm_message && !this.all_messages_loaded && !this.loading_messages){\n            this.loadMoreFiles();\n        }\n    },\n\n    onUpdatedScreen: function () {\n        let block_height = xabber.body.$el.height() - 320;\n        this.$el.css('min-height', `${block_height}px`);\n    },\n\n    updateForParticipant: function () {\n        this.delegateEvents({})\n        this.parent.ps_container.off('ps-scroll-up.mediagallery').off('ps-scroll-down.mediagallery').on(\"ps-scroll-up.mediagallery ps-scroll-down.mediagallery\", this.onScroll.bind(this));\n        this.$('.gallery-file').on('click', (ev) => {\n            this.onClickFile(ev);\n        });\n    },\n\n    getMediaFromDecryptedMessages: function () {\n\n        let dfd = new $.Deferred();\n\n        dfd.done(() => {\n            if (this.filter_type === 'filter_image')\n                this.$el.html(\"<div class='gallery-files images grid'></div>\");\n            else if (this.filter_type === 'filter_video')\n                this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n            else if (this.filter_type === 'filter_voice')\n                this.$el.html(\"<div class='gallery-files voice'></div>\");\n            else if (this.filter_type === 'filter_files')\n                this.$el.html(\"<div class='gallery-files files'></div>\");\n            else\n                this.$el.html(\"<div class='gallery-files'></div>\");\n            this.updateMedia();\n        }).fail(() => {\n            this.temporary_items = [];\n            this.$el.html(\"<div class='gallery-files'></div>\");\n            this.updateMedia()\n        });\n\n        if (this.account.omemo && this.account.omemo.cached_messages){\n\n            let cached_messages = this.account.omemo.cached_messages.getMessages(this.contact);\n\n            for (let [key, value] of Object.entries(cached_messages)) {\n                let msg_items = this.contact.getFilesFromStanza($(value.envelope), {cached_message: true, cached_stanza_id: key});\n                if (msg_items.length)\n                    this.temporary_items = this.temporary_items.concat(msg_items);\n            }\n\n            if (this.temporary_items.length){\n\n                let filtered_items = [],\n                    items_count = 0;\n\n                this.temporary_items.forEach((item, idx) => {\n                    if (this.filter_type === 'filter_image' && constants.MIME_TYPES.image.includes(item.media_type) ||\n                        this.filter_type === 'filter_video' && constants.MIME_TYPES.video.includes(item.media_type) ||\n                        this.filter_type === 'filter_voice' && constants.MIME_TYPES.audio.includes(item.media_type) ||\n                        this.filter_type === 'filter_files' &&\n                        !(\n                            constants.MIME_TYPES.image.includes(item.media_type) ||\n                            constants.MIME_TYPES.video.includes(item.media_type) ||\n                            constants.MIME_TYPES.audio.includes(item.media_type)\n                        )){\n                        if (this.filter_type === 'filter_image' && item.sources && item.sources[0]){\n                            this.chat.messages.decryptFile(item.sources[0], item.key).then((result) => {\n                                item.sources[0] = result;\n                                item.thumbnail = null;\n                                filtered_items = filtered_items.concat([item]);\n                                items_count++;\n                                if (items_count === this.temporary_items.length){\n                                    this.temporary_items = filtered_items;\n                                    dfd.resolve();\n                                }\n                            });\n\n                        } else {\n                            filtered_items = filtered_items.concat([item]);\n                            items_count++;\n                        }\n                    } else\n                        items_count++;\n                    if (items_count === this.temporary_items.length){\n                        this.temporary_items = filtered_items;\n                        dfd.resolve();\n                    }\n                });\n            } else {\n                dfd.reject();\n            }\n        } else {\n            dfd.reject();\n        }\n\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.updateMedia(true);\n        });\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items;\n    },\n\n    encryptedFilesHandler: function () {\n        let files_count = 0;\n        this.temporary_items = this.filterEncryptedFiles();\n\n        if (this.temporary_items.length)\n            this.temporary_items.forEach((item, idx) => {\n                let source = item.sources[0];\n                if (!item.key){\n                    files_count++;\n                    return;\n                }\n                this.chat.messages.decryptFile(source, item.key).then((result) => {\n                    if (!this.active)\n                        return\n                    item.sources[0] = result\n                    files_count++;\n                    if (files_count === this.temporary_items.length) {\n                        this.updateEncryptedMedia()\n                        this.loading_messages = false;\n                    }\n                });\n            });\n        else {\n            this.updateEncryptedMedia()\n            this.loading_messages = false;\n            if (!this.all_messages_loaded){\n                this.loadMoreFiles();\n            }\n        }\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files').length && this.$el.html(\"<div class='gallery-files'></div>\");\n        this.updateMedia();\n    },\n\n    updateMedia: function (is_loaded) {\n        if (!this.active)\n            return;\n        if (this.temporary_items.length){\n            this.temporary_items.reverse();\n            this.temporary_items.forEach((item) => {\n                if (this.filter_type === 'filter_voice')\n                    item.true_voice = true;\n                let $gallery_file = $(templates.media_item({file: item, is_encrypted: this.encrypted, svg_icon: utils.file_type_icon_svg(item.media_type), filesize: utils.pretty_size(item.size), duration: utils.pretty_duration(item.duration)}));\n                $gallery_file.appendTo(this.$('.gallery-files'));\n            });\n        }\n        this.temporary_items = [];\n        this.$('.gallery-files .gallery-empty').remove();\n        $(templates.media_items_empty()).appendTo(this.$('.gallery-files'));\n        if (this.filter_type === 'filter_image')\n            this.$('.gallery-files .gallery-empty-text').html(`${xabber.getString(\"no_images\")}`);\n        else if (this.filter_type === 'filter_video')\n            this.$('.gallery-files .gallery-empty-text').html(`${xabber.getString(\"no_videos\")}`);\n        else if (this.filter_type === 'filter_voice')\n            this.$('.gallery-files .gallery-empty-text').html(`${xabber.getString(\"no_voice_messages\")}`);\n        this.$('.gallery-files .preloader-wrapper').remove();\n    },\n\n    messagesFileRequest: function (query, callback) {\n        if (!this.active || this.loading_messages)\n            return;\n        let options = query || {},\n            queryid = uuid();\n        this.loading_messages = true;\n        !options.max && (options.max = xabber.settings.mam_messages_limit);\n        !options.after && !options.before && (options.before = '');\n        this.encrypted && (options.encrypted = this.encrypted);\n        this.parent.participant && (options.var = [{var: 'with', value: this.parent.participant.id}]);\n        this.contact.MAMRequest(options, (success, messages, rsm) => {\n            let messages_count = 0;\n            if (this.encrypted) {\n                if (messages.length)\n                    $(templates.preloader()).appendTo(this.$('.gallery-files'));\n                else {\n                    this.loading_messages = false;\n                    callback && callback();\n                    return;\n                }\n            }\n            $(messages).each((idx, message) => {\n                let $message = $(message),\n                    msg_items = [];\n                if (this.encrypted) {\n                    let deferred = new $.Deferred();\n                    deferred.done(($msg) => {\n                        msg_items = this.contact.getFilesFromStanza($msg);\n                        if (msg_items.length)\n                            this.temporary_items = this.temporary_items.concat(msg_items)\n                        messages_count++;\n                        if (messages_count === messages.length){\n                            this.last_rsm_message = rsm.first;\n                            this.encryptedFilesHandler();\n                        }\n                    }).fail(() => {\n                        messages_count++;\n                        if (messages_count === messages.length){\n                            this.last_rsm_message = rsm.first;\n                            this.all_messages_loaded = true;\n                            this.encryptedFilesHandler();\n                        }\n                    });\n                    this.account.omemo.receiveChatMessage($message, {\n                        searched_message: true,\n                        gallery: true,\n                        query: query\n                    }, deferred);\n                } else{\n                    msg_items = this.contact.getFilesFromStanza($message);\n                    this.account.chats.receiveChatMessage($message, {\n                        searched_message: true,\n                        query: query\n                    });\n                    if (msg_items.length)\n                        this.temporary_items = this.temporary_items.concat(msg_items)\n                }\n            });\n            if (!this.encrypted){\n                this.last_rsm_message = rsm.first;\n                if (!messages.length)\n                    this.all_messages_loaded = true;\n                this.loading_messages = false;\n                (this.filter_type === 'filter_files') && (this.temporary_items = this.temporary_items.filter(file => !(file.media_type && (file.media_type.includes('image') || (file.media_type.includes('video') && !file.has_encrypted_files)))));\n                if (!(this.temporary_items.length >= xabber.settings.mam_messages_limit) && this.filter_type === 'filter_files' && !this.all_messages_loaded) {\n                    this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, callback);\n                }else\n                    callback && callback();\n            }\n        }, () => {\n\n        });\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n        else if ($elem.hasClass('mdi-play') || $elem.children('.mdi-play').length) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n        else if ($elem.hasClass('mdi-pause') || $elem.children('.mdi-pause').length) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n        else if (!$elem.parents('.gallery-file-audio-container').length || $elem.closest('.audio-control-time').length) {\n            let $file = $elem.closest('.gallery-file');\n            this.parent.saveScrollBarOffset()\n            xabber.body.data.set('contact_details_view', this.parent)\n            this.chat.getMessageContext($file.data('uniqueid'), {searched_messages: true, encrypted: this.encrypted});\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.gallery-file');\n        $elem.addClass('voice-message-rendering').html($(templates.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, unique_id);\n\n        aud.on('ready', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('no-uploaded');\n            $msg_element.find('.gallery-file-placeholder-background').removeClass('gallery-audio-file-not-uploaded');\n            let duration = Math.round(aud.getDuration());\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n            aud.play();\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').length && $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').addClass('mdi-pause').removeClass('mdi-play');\n            $msg_element.addClass('playing');\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n        });\n\n        aud.on('finish', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createAudio: function(file_url, unique_id) {\n        let audio = WaveSurfer.create({\n            container: \"#\" + unique_id,\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n});\n\nxabber.MediaImagesView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.images .gallery-file\": \"onClickFile\",\n    },\n    status: 'image',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_image';\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image')\n                this.$el.html(\"<div class='gallery-files images grid'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image');\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.images.grid').length && this.$el.html(\"<div class='gallery-files images grid'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image')\n            this.updateMedia(true);\n        });\n    },\n\n});\n\nxabber.MediaVideosView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.videos .gallery-file\": \"onClickFile\",\n    },\n    status: 'video',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_video';\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video')\n                this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video');\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.videos.grid').length && this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video')\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.MediaFilesView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.files .gallery-file\": \"onClickFile\",\n    },\n    status: 'files',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_files';\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'))\n                this.$el.html(\"<div class='gallery-files files'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'));\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.files').length && this.$el.html(\"<div class='gallery-files files'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'))\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.MediaVoiceView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.voice .gallery-file\": \"onClickFile\",\n    },\n    status: 'files',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_voice'\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => item.voice)\n                this.$el.html(\"<div class='gallery-files voice'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => item.voice);\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.voice').length && this.$el.html(\"<div class='gallery-files voice'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => item.voice)\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.BlockedView = xabber.BasicView.extend({\n    status: 'blocked',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.account = this.contact.account;\n        this.$error = $('<p class=\"errors\"/>');\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-edit-wrap')\n        this.$el.html($(templates.preloader()));\n        this.updateBlockedParticipants();\n    },\n\n    updateBlockedParticipants: function () {\n        this.parent.$('.block-name-panel:not(.second-text)').html(xabber.getString(\"group_settings__block_list__header\"))\n        this.contact.getBlockedParticipants((response) => {\n            this.$el.html(\"\");\n            $(response).find('query').children().each((idx, item) => {\n                let jid = $(item).attr('jid') ? $(item).attr('jid') : $(item).text(),\n                    user = {jid: jid, status: this.status},\n                    $item_view = $(templates.group_chats.invited_member_item(user)),\n                    avatar = Images.getDefaultAvatar(user.jid);\n                this.$el.append($item_view);\n                $item_view.find('.circle-avatar').setAvatar(avatar, this.member_avatar_size);\n            });\n            if (!$(response).find('query').children.length)\n                this.$el.append(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.showBlockButton();\n        }, (err) => {\n\n            this.$el.html(this.$error.text($(err).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\")));\n        });\n    },\n\n    unblockUser: function (ev) {\n        let $member_item = $(ev.target).closest('.blocked-user'),\n            member_jid = $member_item.data('jid'),\n            tag = member_jid.toString().includes('@') ? 'jid' : 'domain',\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('unblock', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c(tag).t(member_jid);\n        this.account.sendFast(iq, () => {\n            $member_item.remove();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.updateRemoveParticipantButton();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n        });\n    },\n\n    unblockUserByElement: function ($member_item) {\n        let member_jid = $member_item.data('jid'),\n            tag = member_jid.toString().includes('@') ? 'jid' : 'domain',\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('unblock', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c(tag).t(member_jid);\n        this.account.sendFast(iq, () => {\n            $member_item.remove();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n        });\n    },\n\n    blockId: function () {\n        utils.dialogs.ask_enter_value(xabber.getString(\"contact_bar_block\"), xabber.getString(\"groupchat_dialog_block__text\"), {input_placeholder_value: xabber.getString(\"groupchat_dialog_block__input_placeholder\")}, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done((result) => {\n            if (result) {\n                let tag = result.includes('@') ? 'jid' : 'domain',\n                    iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                        .c('block', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                        .c(tag).t(result);\n                this.account.sendIQFast(iq, () => {\n                    this.updateBlockedParticipants()\n                }, function (err) {\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n            }\n        });\n    },\n});\n\nxabber.ParticipantsView = xabber.BasicView.extend({\n    className: 'overflow-visible',\n    ps_selector: '.members-list-wrap',\n    ps_settings: {theme: 'item-list'},\n    template: templates.group_chats.participants,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .participant-wrap\": \"showParticipantProperties\",\n        \"keyup .participants-search-form\" : \"keyUpSearch\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .btn-block\": \"blockParticipant\",\n        \"click .btn-kick\": \"kickParticipant\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.participants = this.model.participants;\n        this.participants.on(\"participants_updated\", this.onParticipantsUpdated, this);\n        this.model.on(\"change:status_updated\", this.updateParticipantsList, this);\n        this.$(this.ps_selector).perfectScrollbar(this.ps_settings);\n    },\n\n    _render: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.participant_properties_panel = new xabber.ParticipantPropertiesView({model: this.model});\n        this.updateParticipants();\n        this.$('.members-list-wrap').perfectScrollbar({theme: 'item-list'});\n        return this;\n    },\n\n    updateParticipants: function () {\n        this.model.participants.participantsRequest({version: this.participants.version }, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            if (this.participants.version > version)\n                return;\n            version && this.account.groupchat_settings.setParticipantsListVersion(this.model.get('jid'), version);\n            (this.participants.version < version) && this.participants.updateVersion();\n            this.renderParticipants();\n        }, () => {\n            this.$el.removeClass('request-waiting');\n        });\n    },\n\n    updateParticipantsList: function () {\n        this.$el.find('.members-list-wrap tbody').html('');\n        this.updateParticipants();\n    },\n\n    onParticipantsUpdated: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.renderParticipants();\n    },\n\n    renderParticipants: function () {\n        this.participants.each((participant) => {\n            this.renderMemberItem(participant);\n        });\n        this.$el.removeClass('request-waiting');\n    },\n\n    blockParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.kick(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    renderMemberItem: function (participant) {\n        if (!participant || !participant.attributes || !participant.attributes.id){\n            participant && participant.destroy();\n            participant && participant.attributes && this.account.groupchat_settings.removeParticipantFromList(this.model.get('jid'), participant.attributes.id);\n            return;\n        }\n        let attrs = _.clone(participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_me = attrs.jid == this.account.get('jid');\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        let $item_view = $(templates.group_chats.group_member_item(attrs)),\n            view = this.$('tr[data-id=\"' + attrs.id + '\"]');\n        $item_view.emojify('.badge', {emoji_size: 16});\n        if (view.length) {\n            view.hasClass('active') && $item_view.addClass('active');\n            $item_view.insertBefore(view);\n            view.detach();\n        }\n        else {\n            if (attrs.is_me) {\n                $item_view.prependTo(this.$('.members-list-wrap tbody'));\n            }\n            else\n                $item_view.appendTo(this.$('.members-list-wrap tbody'));\n        }\n        this.updateMemberAvatar(attrs);\n    },\n\n    updateMemberAvatar: function (member) {\n        let image = Images.getDefaultAvatar(member.nickname || member.jid || member.id),\n            $avatar = (member.id) ? this.$('tr[data-id=\"'+ member.id +'\"] .circle-avatar') : this.$('.list-item[data-jid=\"'+ member.jid +'\"] .circle-avatar');\n        $avatar.setAvatar(image, this.member_avatar_size);\n        if (member.avatar) {\n            let cached_avatar = this.account.chat_settings.getB64Avatar(member.id);\n            if (this.account.chat_settings.getHashAvatar(member.id) == member.avatar && cached_avatar)\n                $avatar.setAvatar(cached_avatar, this.member_avatar_size);\n            else {\n                if (member.avatar_url){\n                    this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, member.avatar_url);\n                    this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(member.avatar_url, this.member_avatar_size);\n                    if (this.account.get('jid') === member.jid) {\n                        this.model.my_info.set({avatar: member.avatar, 'b64_avatar': member.avatar_url});\n                        this.model.trigger('update_my_info');\n                    }\n                }\n                else {\n                    let node = `${Strophe.NS.PUBSUB_AVATAR_DATA}#${member.id}`;\n                    this.model.getAvatar(member.avatar, node, (avatar) => {\n                        this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, avatar);\n                        this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(avatar, this.member_avatar_size);\n                        if (this.account.get('jid') === member.jid) {\n                            this.model.my_info.set('b64_avatar', avatar);\n                            this.model.trigger('update_my_info');\n                        }\n                    });\n                }\n            }\n        }\n    },\n\n    showParticipantProperties: function (ev) {\n        let $target = $(ev.target);\n        if ($target.closest('.buttons-wrap').length)\n            return;\n        let participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    keyUpSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact'))\n            this.clearSearch(ev);\n        else\n            this.searchParticipant();\n    },\n\n    searchParticipant: function () {\n        let query = this.$('.participants-search-form input').val().toLowerCase();\n        this.$('.members-list-wrap .participant-wrap').each((idx, item) => {\n            let $this = $(item),\n                participant_id = $this.data('id'),\n                participant = this.model.participants.find(participant => participant.get('id') === participant_id),\n                jid = participant.get('jid').toLowerCase(),\n                name = participant.get('nickname').toLowerCase();\n            $this.hideIf(name.indexOf(query) < 0 && jid.indexOf(query) < 0);\n        });\n        if (query)\n            this.$('.close-search-icon').show();\n        else\n            this.$('.close-search-icon').hide();\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.searchParticipant();\n    }\n});\n\nxabber.ParticipantsViewRight = xabber.BasicView.extend({\n    className: 'overflow-visible',\n    ps_settings: {theme: 'item-list'},\n    template: templates.group_chats.participants_right_panel,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .participant-wrap\": \"showParticipantProperties\",\n        \"keyup .participants-search-form\" : \"keyUpSearch\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .btn-kick\": \"kickParticipantDialog\",\n        \"click .btn-edit-member\": \"showParticipantPropertiesEdit\",\n        \"click .btn-mute\": \"kickParticipantDialog\",\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.participants = this.model.participants;\n        this.participants.on(\"change\", this.onParticipantsChanged, this);\n        this.participants.on(\"participants_updated\", this.onParticipantsUpdated, this);\n        this.model.on(\"change:status_updated\", this.updateParticipantsList, this);\n        this.participant_properties_panel = this.addChild('participant_properties_panel', xabber.ParticipantPropertiesViewRight, {model: this.model, el: this.parent.$('.participant-view-wrap')[0], parent: this.parent});\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        xabber.on(\"update_layout\", this.onUpdatedScreen, this);\n    },\n\n    _render: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.updateParticipants();\n        return this;\n    },\n\n    onUpdatedScreen: function () {\n        let block_height = xabber.body.$el.height() - 320;\n        this.$el.css('min-height', `${block_height}px`);\n    },\n\n    updateParticipants: function () {\n        this.model.participants.participantsRequest({version: this.participants.version }, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            if (this.participants.version > version)\n                return;\n            version && this.account.groupchat_settings.setParticipantsListVersion(this.model.get('jid'), version);\n            (this.participants.version < version) && this.participants.updateVersion();\n            this.renderParticipants();\n        }, () => {\n            this.$el.removeClass('request-waiting');\n        });\n    },\n\n    updateParticipantsList: function () {\n        this.updateParticipants();\n    },\n\n    onParticipantsUpdated: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.renderParticipants();\n    },\n\n    onParticipantsChanged: function () {\n        this.updateParticipants();\n    },\n\n    renderParticipants: function () {\n        this.participants.each((participant) => {\n            this.renderMemberItem(participant);\n        });\n        if (this.$('.participants-search-form input').val())\n            this.searchParticipant();\n        this.$el.removeClass('request-waiting');\n    },\n\n    blockParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.kick(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipantDialog: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask_extended(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]), null, { ok_button_text: xabber.getString(\"groupchat_kick\"), optional_button: 'block', optional_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                if (result === 'block'){\n                    let participant = this.participants.get($target.attr('data-id'));\n                    if (participant)\n                        participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                }\n                else{\n                    let participant = this.participants.get($target.attr('data-id'));\n                    participant.kick(() => {\n                        $target.remove();\n                        this.parent.updateScrollBar();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n                }\n            }\n        });\n    },\n\n    renderMemberItem: function (participant) {\n        if (!participant || !participant.attributes || !participant.attributes.id){\n            participant && participant.destroy();\n            participant && participant.attributes && this.account.groupchat_settings.removeParticipantFromList(this.model.get('jid'), participant.attributes.id);\n            return;\n        }\n        let attrs = _.clone(participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_me = attrs.jid == this.account.get('jid');\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        let $item_view = $(templates.group_chats.group_member_item_right(attrs)),\n            view = this.$('tr[data-id=\"' + attrs.id + '\"]');\n        if (view.length) {\n            view.hasClass('active') && $item_view.addClass('active');\n            $item_view.insertBefore(view);\n            view.detach();\n        }\n        else {\n            if (attrs.is_me) {\n                $item_view.prependTo(this.$('.members-list-wrap tbody'));\n            }\n            else\n                $item_view.appendTo(this.$('.members-list-wrap tbody'));\n        }\n        this.updateMemberAvatar(attrs);\n    },\n\n    updateMemberAvatar: function (member) {\n        let image = Images.getDefaultAvatar(member.nickname || member.jid || member.id),\n            $avatar = (member.id) ? this.$('tr[data-id=\"'+ member.id +'\"] .circle-avatar') : this.$('.list-item[data-jid=\"'+ member.jid +'\"] .circle-avatar');\n        $avatar.setAvatar(image, this.member_avatar_size);\n        if (member.avatar) {\n            let cached_avatar = this.account.chat_settings.getB64Avatar(member.id);\n            if (this.account.chat_settings.getHashAvatar(member.id) == member.avatar && cached_avatar)\n                $avatar.setAvatar(cached_avatar, this.member_avatar_size);\n            else {\n                if (member.avatar_url){\n                    this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, member.avatar_url);\n                    this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(member.avatar_url, this.member_avatar_size);\n                    if (this.account.get('jid') === member.jid) {\n                        this.model.my_info.set({avatar: member.avatar, 'b64_avatar': member.avatar_url});\n                        this.model.trigger('update_my_info');\n                    }\n                }\n                else {\n                    let node = `${Strophe.NS.PUBSUB_AVATAR_DATA}#${member.id}`;\n                    this.model.getAvatar(member.avatar, node, (avatar) => {\n                        this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, avatar);\n                        this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(avatar, this.member_avatar_size);\n                        if (this.account.get('jid') === member.jid) {\n                            this.model.my_info.set('b64_avatar', avatar);\n                            this.model.trigger('update_my_info');\n                        }\n                    });\n                }\n            }\n        }\n    },\n\n    showParticipantProperties: function (ev) {\n        let $target = $(ev.target);\n        if ($target.closest('.buttons-wrap').length)\n            return;\n        let participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    showParticipantPropertiesEdit: function (ev) {\n        let $target = $(ev.target),\n            participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n            this.participant_properties_panel.showNamePanel();\n            this.participant_properties_panel.changeBackButton();\n        });\n    },\n\n    keyUpSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact'))\n            this.clearSearch(ev);\n        else\n            this.searchParticipant();\n    },\n\n    searchParticipant: function () {\n        let query = this.$('.participants-search-form input').val().toLowerCase();\n        this.$('.members-list-wrap .participant-wrap').each((idx, item) => {\n            let $this = $(item),\n                participant_id = $this.data('id'),\n                participant = this.model.participants.find(participant => participant.get('id') === participant_id),\n                jid = participant.get('jid').toLowerCase(),\n                name = participant.get('nickname').toLowerCase();\n            $this.hideIf(name.indexOf(query) < 0 && jid.indexOf(query) < 0);\n        });\n        if (query)\n            this.$('.close-search-icon').show();\n        else\n            this.$('.close-search-icon').hide();\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.searchParticipant();\n    }\n});\n\nxabber.ParticipantPropertiesView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-rights',\n    template: templates.group_chats.participant_rights,\n    member_details_avatar_size: constants.AVATAR_SIZES.PARTICIPANT_DETAILS_ITEM,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .btn-cancel-changes\": \"close\",\n        \"change .clickable-field input\": \"changeRights\",\n        \"click .btn-save-user-rights\": \"saveRights\",\n        \"click .participant-details-item:not(.unsubscribed) .nickname\": \"editNickname\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-block-participant\": \"block\",\n        \"click .btn-kick-participant\": \"kick\",\n        \"click .btn-set-badge\": \"editBadge\",\n        \"click .btn-participant-messages\": \"getMessages\",\n        \"click .btn-chat\": \"getPrivateChat\",\n        \"click .property-variant\": \"changeTimerValue\",\n        \"keydown .rich-textarea\": \"checkKeydown\",\n        \"keyup .rich-textarea\": \"checkKeyup\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.model.account;\n    },\n\n    open: function (participant, data_form) {\n        if (!participant) return;\n        this.participant = participant;\n        this.participant.on(\"change:badge\", this.onBadgeUpdated, this);\n        this.data_form = data_form;\n        this.render();\n        this.$el.openModal({\n            ready: () => {\n                this.$el.css('height', \"\");\n                if (($(window).height() * 0.1 + this.$el.height()) > $(window).height())\n                    this.$el.css('height', $(window).height() * 0.9);\n                this.$('.modal-content').css('max-height', 'calc(100% - ' + (64 + this.$('.header').height()) + 'px)');\n                this.scrollToTop();\n                this.updateSaveButton();\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                };\n                this.$('.select-timer .dropdown-button').dropdown(dropdown_settings);\n                this.$('.participant-details-item .dropdown-button').dropdown(_.extend(dropdown_settings, {alignment: 'right'}));\n            },\n            complete: () => {\n                this.render();\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.render();\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    render: function () {\n        this.new_avatar = \"\";\n        let attrs = _.clone(this.participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.blocked = attrs.blocked;\n        attrs.subscription = attrs.subscription === null ? null : 'both';\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_myself = attrs.jid === this.account.get('jid');\n        attrs.is_blocked_contact = this.account.blocklist.isBlocked(attrs.jid);\n        attrs.incognito_chat = (this.contact.get('group_info') && this.contact.get('group_info').privacy === 'incognito') ? true : false;\n        let $member_info_view;\n        if (this.contact.get('private_chat')) {\n            this.$el.addClass('edit-rights-private');\n            $member_info_view = $(templates.group_chats.private_participant_details(attrs));\n        }\n        else\n            $member_info_view = $(templates.group_chats.participant_details_item(attrs));\n        this.$('.header').html($member_info_view);\n        this.$('.buttons-wrap .button-wrap:not(.btn-chat-wrap):not(.btn-participant-messages-wrap)').switchClass('non-active', attrs.subscription === null);\n        this.$('.btn-chat-wrap').switchClass('non-active', this.participant.get('jid') === this.account.get('jid'));\n        this.updateMemberAvatar(this.participant);\n        this.participant_messages = [];\n        this.actual_rights = [];\n        if (!this.contact.get('private_chat'))\n            this.setActualRights();\n        else {\n            this.$('.modal-content').addClass('hidden');\n            this.$('.modal-footer').switchClass('hidden', this.participant.get('jid') !== this.account.get('jid'));\n        }\n        this.updateScrollBar();\n        this.$('.participant-info #edit-nickname').on(\"focusout\", () => {\n            let new_nickname = this.$('#edit-nickname').getTextFromRichTextarea().trim();\n            if (new_nickname === \"\")\n                new_nickname = this.participant.get('nickname');\n            this.$('.participant-info #edit-nickname').hide();\n            this.$('.participant-info .nickname').show();\n            this.updateNickname(new_nickname);\n        });\n        this.$('.content').perfectScrollbar({theme: 'item-list'});\n    },\n\n    updateMemberAvatar: function (member) {\n        let participant_id = member.get('id'),\n            $avatar = this.$(`.participant-details-item[data-id=\"${participant_id}\"] .circle-avatar`);\n        member.image = Images.getDefaultAvatar(member.get('nickname') || member.get('jid') || participant_id);\n        $avatar.setAvatar(member.image, this.member_details_avatar_size);\n        this.$('.participant-details-item[data-id=\"'+ member.id +'\"]').emojify('.badge', {emoji_size: 18});\n        if (member.get('avatar')) {\n            if (this.account.chat_settings.getHashAvatar(participant_id) == member.get('avatar') && (this.account.chat_settings.getB64Avatar(participant_id)))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n            else {\n                if (member.get('avatar_url')){\n                    $avatar.setAvatar(member.get('avatar_url'), this.member_details_avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + participant_id;\n                    this.contact.getAvatar(member.get('avatar'), node, (avatar) => {\n                        this.$(`.circle-avatar`).setAvatar(avatar, this.member_details_avatar_size);\n                    });\n                }\n            }\n        }\n        else {\n            if (this.account.chat_settings.getHashAvatar(participant_id))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n        }\n    },\n\n    updateRightsView: function (ev) {\n        !$(ev.target).hasClass('non-active') && this.render(this.participant);\n    },\n\n    getMessages: function (options) {\n        let chat = this.account.chats.getChat(this.contact);\n        chat.messages_view = new xabber.ParticipantMessagesView({ model: chat, contact: this.contact, participant: this.participant.attributes });\n        chat.messages_view.messagesRequest(options, () => {\n            this.close();\n            xabber.body.setScreen('all-chats', {right: 'participant_messages', model: chat});\n        });\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.new_avatar = file;\n                this.$('.circle-avatar').addClass('changed').setAvatar(image, this.member_details_avatar_size);\n                this.updateSaveButton();\n            }\n        });\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        if ($property_item.attr('data-value') !== $property_value.attr('data-value')) {\n            $property_item.closest('.right-item').addClass('changed-timer changed');\n            this.updateSaveButton();\n        }\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') === '0') {\n            $property_value.addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked')) {\n            $input_item.click();\n        }\n    },\n\n    onBadgeUpdated: function (participant) {\n        let badge = _.escape(participant.get('badge'));\n        this.updateBadge(badge);\n    },\n\n    updateBadge: function (badge) {\n        this.$('.badge').html(badge).switchClass('hidden', !badge);\n        this.$('.participant-info').emojify('.badge');\n    },\n\n    updateButtons: function (has_changes) {\n        this.$('.btn-save-user-rights').switchClass('non-active', !has_changes);\n    },\n\n    updateSaveButton: function () {\n        let has_changes = this.$('.changed').length;\n        this.updateButtons(has_changes);\n    },\n\n    updateNickname: function (nickname) {\n        let $member_item = this.$('.participant-details-item[data-id=\"' + this.participant.get('id') + '\"]'),\n            $member_item_nickname = $member_item.find('.nickname');\n        $member_item_nickname.html(Strophe.xmlescape(nickname));\n        $member_item.emojify('.nickname');\n        if (nickname !== this.participant.get('nickname'))\n            $member_item_nickname.addClass('changed');\n        else\n            $member_item_nickname.removeClass('changed');\n        this.updateSaveButton();\n    },\n\n    editNickname: function () {\n        if (this.contact.get('private_chat') && this.account.get('jid') !== this.participant.get('jid'))\n            return;\n        this.$('.participant-info .nickname').hide();\n        this.$('.participant-info #edit-nickname').text(this.$('.participant-info .nickname').text()).show().placeCaretAtEnd();\n    },\n\n    editBadge: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        this.edit_badge_panel = new xabber.EditBadgeView({model: this});\n    },\n\n    checkKeydown: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            $(document.activeElement).blur();\n        }\n    },\n\n    checkKeyup: function (ev) {\n        let $richtextarea = $(ev.target),\n            new_value = $richtextarea.getTextFromRichTextarea().trim();\n        if (ev.target.id === 'edit-nickname') {\n            let has_changes = (new_value !== this.participant.get('nickname'));\n            this.updateButtons(has_changes);\n        }\n    },\n\n    retractUserMessages: function () {\n        utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__header\", [this.participant.get('nickname') || this.participant.get('jid') || this.participant.get('id')]), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (this.participant.get('id')) {\n                    let group_chat = this.account.chats.getChat(this.contact);\n                    group_chat.retractMessagesByUser(this.participant.get('id'));\n                }\n            }\n        });\n    },\n\n    block: function () {\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                this.participant.block(() => {this.close();},\n                    function (error) {\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kick: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                this.participant.kick(() => {\n                        this.close();\n                    }, (error) => {\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    setActualRights: function () {\n        this.$('.rights-wrap').html(\"\");\n        this.data_form.fields && this.data_form.fields.forEach((field) => {\n            field = _.clone(field);\n            if (field.type  === 'list-single' || field.type  === 'fixed' && (!field.values || field.values[0] == 0)) {\n                !field.values && (field.values = []);\n                let attrs = {\n                        pretty_name: field.label,\n                        name: field.var,\n                        expires: field.values ? field.values[0] : undefined\n                    },\n                    restriction_item = $(templates.group_chats.restriction_item({name: attrs.name, pretty_name: attrs.pretty_name, type: field.type})),\n                    restriction_expire;\n                if (field.options) {\n                    restriction_expire = $(templates.group_chats.right_expire_variants({\n                        right_name: ('default-' + attrs.name),\n                        expire_options: field.options\n                    }));\n                    restriction_item.append(restriction_expire);\n                }\n                this.$('.rights-wrap').append(restriction_item);\n                if (attrs.expires) {\n                    this.actual_rights.push({name: attrs.name, expires: attrs.expires});\n                    this.$('.right-item #' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                    if (attrs.expires != 0) {\n                        let $current_restriction = this.$('.right-item.restriction-' + attrs.name);\n                        $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                            .removeClass('default-value')\n                            .text(moment(Number(attrs.expires)*1000).fromNow());\n                    }\n                }\n            } else if (field.type  === 'fixed')\n                field.values && this.$('.rights-wrap').append($('<div class=\"rights-header\"/>').text(field.values[0]));\n        });\n    },\n\n    getPrivateChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let participant_jid = this.participant.get('jid'),\n            participant_in_roster = this.account.contacts.get(participant_jid);\n        if (!participant_jid || this.contact.get('incognito_chat')) {\n            let iq = $iq({to: this.contact.domain, type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#create`})\n                .c('peer-to-peer', { jid: this.contact.get('jid'),  id: this.participant.get('id')});\n            this.account.sendIQFast(iq, (iq_response) => {\n                let group_jid = $(iq_response).find('query localpart').text() + '@' + this.contact.domain,\n                    contact = this.account.contacts.mergeContact(group_jid);\n                contact.set('group_chat', true);\n                contact.set('subscription_preapproved', true);\n                contact.pres('subscribed');\n                contact.set('known', true);\n                contact.set('removed', false);\n                setTimeout(() => {\n                    contact.pres('subscribe');\n                }, 500);\n                this.close();\n                this.account.chats.openChat(contact);\n                let chat = this.account.chats.getChat(contact);\n                chat.messages.createSystemMessage({\n                    from_jid: group_jid,\n                    message: xabber.getString(\"groupchat__private_chat__text_message_init\", [this.participant.get('nickname'), this.contact.get('jid')])\n                });\n            }, (error) => {\n                let $error = $(error),\n                    private_chat_jid = $error.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"] jid`).text();\n                if (private_chat_jid) {\n                    let contact = this.account.contacts.mergeContact(private_chat_jid),\n                        chat = this.account.chats.getChat(contact);\n                    this.close();\n                    chat && chat.trigger('open');\n                    return;\n                }\n                let err_text = $(error).find('text[lang=\"en\"]').text() || $(error).find('text').first().text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        }\n        else {\n            if (participant_in_roster)\n                if (participant_in_roster.get('in_roster')) {\n                    this.close();\n                    participant_in_roster.trigger('open_chat', participant_in_roster);\n                    return;\n                }\n            this.close();\n            xabber.add_contact_view.show({\n                account: this.account,\n                jid: participant_jid\n            });\n        }\n    },\n\n    changeRights: function (ev) {\n        let $target = $(ev.target),\n            $right_item = $target.closest('.right-item'),\n            right_name = $target.prop('id');\n        if ($target.prop('checked')) {\n            if (!this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.addClass('changed');\n                else\n                    $right_item.removeClass('changed');\n        }\n        else {\n            if (this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else {\n                $right_item.removeClass('changed');\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.find('.timer-item-wrap .property-value').addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\")).attr('data-value', \"\");\n            }\n        }\n        this.updateSaveButton();\n    },\n\n    saveRights: function (ev) {\n        if ($(ev.target).hasClass('non-active'))\n            return;\n        let $btn = $(ev.target),\n            jid = this.account.get('jid'),\n            member_id = this.participant.get('id'),\n            $participant_avatar = this.$('.participant-details-item .circle-avatar'),\n            nickname_value = this.$('.participant-info .nickname').text(),\n            changed_avatar = this.new_avatar,\n            rights_changed = false,\n            has_changes = false,\n            iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + \"#members\"})\n                .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: member_id});\n        this.$('.buttons-wrap .btn-save-user-rights').addClass('non-active');\n        changed_avatar && $participant_avatar.find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        if (nickname_value != this.participant.get('nickname')) {\n            has_changes = true;\n            iq_changes.c('nickname').t(nickname_value).up();\n        }\n        this.$('.right-item').each((idx, right_item) => {\n            if ($(right_item).hasClass('changed')) {\n                let $right_item = $(right_item),\n                    right_name = $right_item.find('.field input')[0].id;\n                if ($right_item.find('.field input:checked').val()) {\n                    let right_expire = $right_item.find('.select-timer .timer-item-wrap .property-value').attr('data-value'),\n                        field = this.data_form.fields.find(f => f.var === right_name),\n                        field_idx = this.data_form.fields.indexOf(field);\n                    field.values = [right_expire];\n                    this.data_form.fields[field_idx] = field;\n                    rights_changed = true;\n                }\n                else {\n                    let field = this.data_form.fields.find(f => f.var === right_name);\n                    if (field.values.length) {\n                        let field_idx = this.data_form.fields.indexOf(field);\n                        field.values = [];\n                        this.data_form.fields[field_idx] = field;\n                        rights_changed = true;\n                    }\n                }\n            }\n        });\n        if (changed_avatar)\n            this.contact.pubAvatar(changed_avatar, ('#' + member_id), () => {\n                this.$('.buttons-wrap button').removeClass('non-active');\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.$(`.participant-details-item[data-id=\"${member_id}\"] .circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.close();\n            }, function (error) {\n                this.$('.buttons-wrap button').removeClass('non-active');\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                !has_changes && utils.dialogs.error(error_text);\n            });\n        if (has_changes)\n            this.account.sendIQFast(iq_changes,\n                () => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.participant.set('nickname', nickname_value);\n                    this.close();\n                },\n                (error) => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.close();\n\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        if (rights_changed) {\n            let iq_rights_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#rights'});\n            iq_rights_changes = this.account.addDataFormToStanza(iq_rights_changes, this.data_form);\n            this.account.sendIQFast(iq_rights_changes, () => {\n                    this.close();\n                },\n                (error) => {\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        }\n        $btn.blur();\n    }\n});\n\nxabber.ParticipantPropertiesViewRight = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-rights',\n    template: templates.group_chats.participant_details_right,\n    member_details_avatar_size: constants.AVATAR_SIZES.PARTICIPANT_DETAILS_ITEM,\n\n    events: {\n        \"click .btn-back:not(.btn-top)\": \"close\",\n        \"click .btn-back.btn-top\": \"scrollToTopSmooth\",\n        'click .btn-edit-participant': 'showNamePanel',\n        'click .btn-back-name': 'hidePanel',\n        \"change .clickable-field input\": \"changeRights\",\n        \"click .btn-reset\": \"render\",\n        \"click .btn-reset-name\": \"resetPanel\",\n        \"click .btn-save-user-rights\": \"saveRights\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-kick-participant\": \"kickParticipantDialog\",\n        \"click .btn-set-visibility-wrap\": \"setVisibility\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .btn-set-badge\": \"editBadge\",\n        \"click .btn-participant-messages\": \"getMessages\",\n        \"click .btn-chat-participant\": \"getPrivateChat\",\n        \"click .property-variant\": \"changeTimerValue\",\n        \"click .set-groupchat-avatar-text\": \"clickAvatarInput\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-selfie\": \"makeSelfie\",\n        \"click .btn-emoji-panel\": \"makeEmojiAvatar\",\n        \"keydown .rich-textarea\": \"checkKeydown\",\n        \"keyup .rich-textarea\": \"checkKeyup\",\n        \"click .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.model.account;\n    },\n\n    open: function (participant, data_form) {\n        this.model.set('participant_hidden', false);\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'))\n        if (!participant) return;\n        this.participant = participant;\n        this.participant.on(\"change:badge\", this.onBadgeUpdated, this);\n        this.participant.on(\"change:avatar_url\", this.updateMemberAvatar, this);\n        this.data_form = data_form;\n        this.render();\n        this.updateSaveButton();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.select-timer .dropdown-button').dropdown(dropdown_settings);\n        this.$('.circle-avatar.dropdown-button').dropdown(dropdown_settings);\n        this.$('.participant-details-item .dropdown-button').dropdown(_.extend(dropdown_settings, {alignment: 'right'}));\n    },\n\n    close: function () {\n        this.model.set('participant_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n            this.parent.onScroll();\n        };\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'));\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.new_avatar = \"\";\n        let attrs = _.clone(this.participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.blocked = attrs.blocked;\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        attrs.subscription = attrs.subscription === null ? null : 'both';\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_myself = attrs.jid === this.account.get('jid');\n        attrs.is_blocked_contact = this.account.blocklist.isBlocked(attrs.jid);\n        attrs.incognito_chat = (this.contact.get('group_info') && this.contact.get('group_info').privacy === 'incognito') ? true : false;\n        let $member_info_view;\n        if (this.contact.get('private_chat')) {\n            this.$el.addClass('edit-rights-private');\n            $member_info_view = $(templates.group_chats.private_participant_details_item_right(attrs));\n        }\n        else\n            $member_info_view = $(templates.group_chats.participant_details_item_right(attrs));\n        this.$('.participant-details-info-wrap').html($member_info_view);\n        this.$('.buttons-wrap .button-wrap:not(.btn-chat-wrap):not(.btn-participant-messages-wrap)').switchClass('non-active', attrs.subscription === null);\n        this.$('.btn-chat-wrap').switchClass('non-active', this.participant.get('jid') === this.account.get('jid'));\n        this.updateMemberAvatar(this.participant);\n        this.participant_messages = [];\n        this.actual_rights = [];\n        if (!this.contact.get('private_chat'))\n            this.setActualRights();\n        else {\n            this.$('.modal-content').addClass('hidden');\n            this.$('.modal-footer').switchClass('hidden', this.participant.get('jid') !== this.account.get('jid'));\n        }\n        this.updateScrollBar();\n        this.$('.participant-info #edit-nickname').on(\"focusout\", () => {\n            let new_nickname = this.$('#edit-nickname').getTextFromRichTextarea().trim();\n            if (new_nickname === \"\")\n                new_nickname = this.participant.get('nickname');\n            this.$('.participant-info #edit-nickname').hide();\n            this.$('.participant-info .nickname').show();\n            this.updateNickname(new_nickname);\n        });\n        this.ps_container = this.$('.participant-details-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-y\", this.onScroll.bind(this));\n        this.onScroll();\n        this.participant_name_field = new xabber.ParticipantNameRightWidget({\n            el: this.$('.edit-participant-name-wrap')[0],\n            model: this.participant,\n            parent: this,\n        });\n        this.participant_badge_field = new xabber.ParticipantBadgeRightWidget({\n            el: this.$('.edit-participant-badge-wrap')[0],\n            model: this.participant,\n            parent: this,\n        });\n        this.updateList('image');\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        this.updateIndicator()\n        this.$('.participant-details-edit-wrap').hideIf(true);\n        this.$('.block-name:not(.second-text)').hideIf(true);\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n    showNamePanel: function () {\n        this.$('.participant-details-edit-wrap').hideIf(false)\n        this.$('.btn-edit-participant').hideIf(true)\n        this.$('.parent-btn').hideIf(true)\n        this.$('.child-btn').hideIf(false)\n        this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.block-name.second-text').text('');\n        this.$('.block-name:not(.second-text)').text(xabber.getString(\"groupchat_member_edit\"));\n        this.$('.block-name:not(.second-text)').hideIf(false);\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.ps_container = this.$('.participant-details-edit-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    changeBackButton: function () {\n        this.$('.parent-btn').hideIf(false)\n        this.$('.child-btn').hideIf(true)\n    },\n\n    hidePanel: function () {\n        this.$('.participant-details-edit-wrap').hideIf(true)\n        this.$('.btn-edit-participant').hideIf(false)\n        this.$('.parent-btn').hideIf(false)\n        this.$('.child-btn').hideIf(true)\n        this.$('.block-name:not(.second-text)').hideIf(true);\n        this.ps_container = this.$('.participant-details-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.onScroll();\n    },\n\n    resetPanel: function () {\n        this.participant_name_field.updateValue(true);\n        this.participant_badge_field.updateValue(true);\n        this.new_avatar = \"\";\n        this.updateMemberAvatar(this.participant);\n        this.updateSaveButton()\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.$('.tabs').animate({scrollLeft: $target.position().left}, 400);\n        this.ps_container.animate(\n            {scrollTop: this.$('.bottom-block').position().top + this.ps_container.scrollTop() - 120},\n            400,\n            () => {\n                this.onScroll();\n            });\n        this.$('.block-header .block-name.second-text').text($target.text())\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, participant: true, el: this.$('.participants-details-media-wrap')[0]});\n        else\n            return;\n    },\n\n    changeName: function (value) {\n        this.updateSaveButton()\n    },\n\n    changeBadge: function (value) {\n        this.updateSaveButton()\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.block-name.second-text').text('');\n        this.$('.block-name.second-text').addClass('fade-out');\n        this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        this.$('.btn-back').removeClass('btn-top');\n        this.$('.btn-back i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 220) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.block-name.second-text').text(this.participant.get('nickname'));\n            this.$('.block-name.second-text').removeClass('fade-out');\n            this.$('.block-name:not(.second-text)').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 1) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        else {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.block-name.second-text').text('');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        let bottom_block_scroll\n        if (this.$('.bottom-block'))\n            bottom_block_scroll = this.$('.bottom-block').get(0).getBoundingClientRect().top;\n        if (!_.isUndefined(bottom_block_scroll) && bottom_block_scroll <= 170) {\n            this.$('.btn-back').addClass('btn-top');\n            this.$('.participant-details-item .buttons-wrap').addClass('hidden2');\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.btn-edit-participant').hideIf(true);\n            this.$('.block-header .block-name.second-text').text(this.$('.tabs .list-variant .active').text())\n        }\n        else {\n            this.$('.btn-back').removeClass('btn-top');\n            this.$('.participant-details-item .buttons-wrap').removeClass('hidden2');\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n            this.$('.participant-details-edit-wrap').hasClass('hidden') && this.$('.btn-edit-participant').hideIf(false);\n        }\n    },\n\n    clickAvatarInput: function (ev) {\n        this.$('.circle-avatar input').click();\n    },\n\n    updateMemberAvatar: function (member, url_forced) {\n        let participant_id = member.get('id'),\n            $avatar = this.$(`.circle-avatar`);\n        member.image = Images.getDefaultAvatar(member.get('nickname') || member.get('jid') || participant_id);\n        $avatar.setAvatar(member.image, this.member_details_avatar_size);\n        $avatar.removeClass('changed');\n        if (member.get('avatar')) {\n            if (this.account.chat_settings.getHashAvatar(participant_id) == member.get('avatar') && (this.account.chat_settings.getB64Avatar(participant_id)) && !url_forced)\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n            else {\n                if (member.get('avatar_url')){\n                    $avatar.setAvatar(member.get('avatar_url'), this.member_details_avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + participant_id;\n                    this.contact.getAvatar(member.get('avatar'), node, (avatar) => {\n                        this.$(`.circle-avatar`).setAvatar(avatar, this.member_details_avatar_size);\n                    });\n                }\n            }\n        }\n        else {\n            if (this.account.chat_settings.getHashAvatar(participant_id))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n        }\n    },\n\n    updateRightsView: function (ev) {\n        !$(ev.target).hasClass('non-active') && this.render(this.participant);\n    },\n\n    getMessages: function (options) {\n        let chat = this.account.chats.getChat(this.contact);\n        chat.messages_view = new xabber.ParticipantMessagesView({ model: chat, contact: this.contact, participant: this.participant.attributes });\n        chat.messages_view.messagesRequest(options, () => {\n            xabber.body.setScreen('all-chats', {right: 'participant_messages', model: chat});\n            this.open(this.participant, this.data_form);\n        });\n    },\n\n    chooseAvatar: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let avatar_view = new xabber.SetAvatarView();\n            avatar_view.render({model: this.account, contact: this.contact, participant: this.participant, parent: this});\n        } else\n            this.clickAvatarInput();\n    },\n\n    makeSelfie: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let webcam_panel_view = new xabber.WebcamProfileImageView();\n            webcam_panel_view.open({model: this.account, contact: this.contact, participant: this.participant, parent: this});\n        } else\n            this.clickAvatarInput();\n    },\n\n    makeEmojiAvatar: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let emoji_panel_view = new xabber.EmojiProfileImageView();\n            emoji_panel_view.open({model: this.account, contact: this.contact, participant: this.participant, parent: this});\n        } else\n            this.clickAvatarInput();\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.new_avatar = file;\n                this.$('.participant-details-edit-wrap .circle-avatar').addClass('changed');\n                this.$('.circle-avatar').setAvatar(image, this.member_details_avatar_size);\n                this.updateSaveButton();\n            }\n        });\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        if ($property_item.attr('data-value') !== $property_value.attr('data-value')) {\n            $property_item.closest('.right-item').addClass('changed-timer changed');\n            this.updateSaveButton();\n        }\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') === '0') {\n            $property_value.addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked')) {\n            $input_item.click();\n        }\n    },\n\n    onBadgeUpdated: function (participant) {\n        let badge = _.escape(participant.get('badge'));\n        this.updateBadge(badge);\n    },\n\n    updateBadge: function (badge) {\n        this.$('.badge').html(badge).switchClass('hidden', !badge);\n        this.$('.participant-info').emojify('.badge');\n        this.$('.participant-info').emojify('.participant-edit-badge');\n    },\n\n    updateButtons: function (has_changes) {\n        this.$('.btn-save-user-rights').switchClass('non-active', !has_changes);\n        this.$('.btn-save-user-rights').switchClass('fade-out', !has_changes);\n        this.$('.btn-edit-participant').switchClass('fade-out', has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.block-header .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.block-header .details-icon.parent-btn').removeClass('btn-back').addClass('btn-reset')\n            this.$('.block-header .details-icon.child-btn').removeClass('btn-back-name').addClass('btn-reset-name')\n            this.$('.block-header .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.block-header .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.block-header .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.block-header .details-icon.parent-btn').addClass('btn-back').removeClass('btn-reset')\n            this.$('.block-header .details-icon.child-btn').addClass('btn-back-name').removeClass('btn-reset-name')\n            this.$('.block-header .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.block-header .block-name.second-text').addClass('fade-out');\n        }\n    },\n\n    updateSaveButton: function () {\n        let has_changes = this.$('.changed').length;\n        this.updateButtons(has_changes);\n    },\n\n    updateNickname: function (nickname) {\n        let $member_item = this.$('.participant-details-item[data-id=\"' + this.participant.get('id') + '\"]'),\n            $member_item_nickname = $member_item.find('.nickname');\n        $member_item_nickname.html(Strophe.xmlescape(nickname));\n        $member_item.emojify('.nickname');\n        if (nickname !== this.participant.get('nickname'))\n            $member_item_nickname.addClass('changed');\n        else\n            $member_item_nickname.removeClass('changed');\n        this.updateSaveButton();\n    },\n\n    editNickname: function () {\n        if (this.contact.get('private_chat') && this.account.get('jid') !== this.participant.get('jid'))\n            return;\n        this.$('.participant-info .nickname').hide();\n        this.$('.participant-info #edit-nickname').text(this.$('.participant-info .nickname').text()).show().placeCaretAtEnd();\n    },\n\n    editBadge: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        this.edit_badge_panel = new xabber.EditBadgeView({model: this});\n    },\n\n    checkKeydown: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            $(document.activeElement).blur();\n        }\n    },\n\n    checkKeyup: function (ev) {\n        let $richtextarea = $(ev.target),\n            new_value = $richtextarea.getTextFromRichTextarea().trim();\n        if (ev.target.id === 'edit-nickname') {\n            let has_changes = (new_value !== this.participant.get('nickname'));\n            this.updateButtons(has_changes);\n        }\n    },\n\n    retractUserMessages: function () {\n        utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__header\", [this.participant.get('nickname') || this.participant.get('jid') || this.participant.get('id')]), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (this.participant.get('id')) {\n                    let group_chat = this.account.chats.getChat(this.contact);\n                    group_chat.retractMessagesByUser(this.participant.get('id'));\n                }\n            }\n        });\n    },\n\n    block: function () {\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                this.participant.block(() => {this.close();},\n                    function (error) {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kick: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                this.participant.kick(() => {\n                        this.close();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kickParticipantDialog: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask_extended(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]), null, { ok_button_text: xabber.getString(\"groupchat_kick\"), optional_button: 'block', optional_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                if (result === 'block'){\n                    this.participant.block(() => {\n                            this.close();\n                            this.parent.participants._render();\n                        },\n                        (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                }\n                else{\n                    this.participant.kick(() => {\n                        this.close();\n                        this.parent.participants._render();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n                }\n            }\n        });\n    },\n\n    setVisibility: function (ev) {\n            utils.dialogs.error('Feature not yet implemented')\n    },\n\n    setActualRights: function () {\n        this.$('.rights-wrap').html(\"\");\n        this.data_form.fields && this.data_form.fields.forEach((field) => {\n            field = _.clone(field);\n            if (field.type  === 'list-single' || field.type  === 'fixed' && (!field.values || field.values[0] == 0 || field.values && field.label)) {\n                !field.values && (field.values = []);\n                let attrs = {\n                        pretty_name: field.label,\n                        name: field.var,\n                        expires: field.values ? field.values[0] : undefined\n                    },\n                    restriction_item = $(templates.group_chats.restriction_item({name: attrs.name, pretty_name: attrs.pretty_name, type: field.type})),\n                    restriction_expire;\n                if (field.options) {\n                    restriction_expire = $(templates.group_chats.right_expire_variants({\n                        right_name: ('default-' + attrs.name),\n                        expire_options: field.options\n                    }));\n                    restriction_item.append(restriction_expire);\n                }\n                this.$('.rights-wrap').append(restriction_item);\n                if (attrs.expires) {\n                    this.actual_rights.push({name: attrs.name, expires: attrs.expires});\n                    this.$('.right-item #' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                    if (attrs.expires != 0) {\n                        let $current_restriction = this.$('.right-item.restriction-' + attrs.name);\n                        if ($current_restriction.find('.select-timer .property-value').length)\n                            $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                                .removeClass('default-value')\n                                .text(moment(Number(attrs.expires)*1000).fromNow());\n                        else{\n                            $current_restriction.append($('<div class=\"select-timer\"/>'));\n                            $current_restriction.find('.select-timer').attr('data-value', attrs.expires)\n                                .text(moment(Number(attrs.expires)*1000).fromNow())\n                        }\n                    }\n                }\n            } else if (field.type  === 'fixed')\n                field.values && this.$('.rights-wrap').append($('<div class=\"rights-header\"/>').text(field.values[0]));\n        });\n    },\n\n    getPrivateChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let participant_jid = this.participant.get('jid'),\n            participant_in_roster = this.account.contacts.get(participant_jid);\n        if (!participant_jid || this.contact.get('incognito_chat')) {\n            let iq = $iq({to: this.contact.domain, type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#create`})\n                .c('peer-to-peer', { jid: this.contact.get('jid'),  id: this.participant.get('id')});\n            this.account.sendIQFast(iq, (iq_response) => {\n                let group_jid = $(iq_response).find('query localpart').text() + '@' + this.contact.domain,\n                    contact = this.account.contacts.mergeContact(group_jid);\n                contact.set('group_chat', true);\n                contact.set('subscription_preapproved', true);\n                contact.pres('subscribed');\n                contact.set('known', true);\n                contact.set('removed', false);\n                setTimeout(() => {\n                    contact.pres('subscribe');\n                }, 500);\n                this.close();\n                contact.set('in_roster', true);\n                contact.trigger(\"open_chat\", contact);\n                contact.trigger('remove_invite', contact);\n                let chat = this.account.chats.getChat(contact);\n                chat.messages.createSystemMessage({\n                    from_jid: group_jid,\n                    message: xabber.getString(\"groupchat__private_chat__text_message_init\", [this.participant.get('nickname'), this.contact.get('jid')])\n                });\n            }, (error) => {\n                let $error = $(error),\n                    private_chat_jid = $error.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"] jid`).text();\n                if (private_chat_jid) {\n                    let contact = this.account.contacts.mergeContact(private_chat_jid),\n                        chat = this.account.chats.getChat(contact);\n                    this.close();\n                    chat && chat.trigger('open');\n                    return;\n                }\n                let err_text = $(error).find('text[lang=\"en\"]').text() || $(error).find('text').first().text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        }\n        else {\n            if (participant_in_roster)\n                if (participant_in_roster.get('in_roster')) {\n                    this.close();\n                    participant_in_roster.trigger('open_chat', participant_in_roster);\n                    return;\n                }\n            this.close();\n            xabber.add_contact_view.show({\n                account: this.account,\n                jid: participant_jid\n            });\n        }\n    },\n\n    changeRights: function (ev) {\n        let $target = $(ev.target),\n            $right_item = $target.closest('.right-item'),\n            right_name = $target.prop('id');\n        if ($target.prop('checked')) {\n            if (this.actual_rights && !this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.addClass('changed');\n                else\n                    $right_item.removeClass('changed');\n        }\n        else {\n            if (this.actual_rights && this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else {\n                $right_item.removeClass('changed');\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.find('.timer-item-wrap .property-value').addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\")).attr('data-value', \"\");\n            }\n        }\n        this.updateSaveButton();\n    },\n\n    saveRights: function (ev) {\n        if ($(ev.target).hasClass('non-active'))\n            return;\n        let $btn = $(ev.target),\n            jid = this.account.get('jid'),\n            member_id = this.participant.get('id'),\n            $participant_avatar = this.$('.participant-details-item .circle-avatar'),\n            nickname_value = this.$('.participant-name-input').val(),\n            new_badge = this.$('.participant-badge-input').val(),\n            changed_avatar = this.new_avatar,\n            rights_changed = false,\n            has_changes = false,\n            iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + \"#members\"})\n                .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: member_id});\n        this.$('.buttons-wrap .btn-save-user-rights').addClass('non-active');\n        changed_avatar && $participant_avatar.find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        if (nickname_value != this.participant.get('nickname')) {\n            has_changes = true;\n            iq_changes.c('nickname').t(nickname_value).up();\n        }\n        if (Array.from(new_badge).length > 32)\n            utils.dialogs.error(xabber.getString(\"groupchat__set_badge__error_length\"));\n        else {\n            if (new_badge != this.participant.get('badge')) {\n                has_changes = true;\n                iq_changes.c('badge').t(new_badge).up();\n            }\n        }\n        this.$('.right-item').each((idx, right_item) => {\n            if ($(right_item).hasClass('changed')) {\n                let $right_item = $(right_item),\n                    right_name = $right_item.find('.field input')[0].id;\n                if ($right_item.find('.field input:checked').val()) {\n                    let right_expire = $right_item.find('.select-timer .timer-item-wrap .property-value').attr('data-value'),\n                        field = this.data_form.fields.find(f => f.var === right_name),\n                        field_idx = this.data_form.fields.indexOf(field);\n                    field.values = [right_expire];\n                    this.data_form.fields[field_idx] = field;\n                    rights_changed = true;\n                }\n                else {\n                    let field = this.data_form.fields.find(f => f.var === right_name);\n                    if (field.values.length) {\n                        let field_idx = this.data_form.fields.indexOf(field);\n                        field.values = [];\n                        this.data_form.fields[field_idx] = field;\n                        rights_changed = true;\n                    }\n                }\n            }\n        });\n        if (changed_avatar)\n            this.contact.pubAvatar(changed_avatar, ('#' + member_id), () => {\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                // this.$(`.participant-details-item[data-id=\"${member_id}\"] .circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.$(`.circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.close();\n            }, function (error) {\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                !has_changes && utils.dialogs.error(error_text);\n                this.close();\n            });\n        if (has_changes)\n            this.account.sendIQFast(iq_changes,\n                () => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.participant.set('nickname', nickname_value);\n                    this.close();\n                },\n                (error) => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        if (rights_changed) {\n            let iq_rights_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#rights'});\n            iq_rights_changes = this.account.addDataFormToStanza(iq_rights_changes, this.data_form);\n            this.account.sendIQFast(iq_rights_changes, () => {\n                    this.close();\n                },\n                (error) => {\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        }\n        $btn.blur();\n    }\n});\n\nxabber.EditBadgeView = xabber.BasicView.extend({\n    className: 'modal edit-badge',\n    template: templates.group_chats.badge_edit_view,\n\n    events: {\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-save\": \"saveNewBadge\",\n        \"keydown .badge-text\": \"checkKey\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.participant = this.model.participant;\n        this.$el.openModal({\n            ready: () => {\n                if (this.participant.get('badge'))\n                    this.typeEmoticon(this.participant.get('badge'));\n                else\n                    this.$('.badge-text').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            $target.length && this.typeEmoticon($target.data('emoji'));\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n        }});\n    },\n\n    saveNewBadge: function () {\n        let new_badge = this.$('.badge-text').getTextFromRichTextarea();\n        if (Array.from(new_badge).length > 32)\n            this.$('.modal-content .error').text(xabber.getString(\"groupchat__set_badge__error_length\"));\n        else {\n            if (new_badge != this.participant.get('badge')) {\n                let iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                    .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`})\n                    .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: this.participant.get('id')})\n                    .c('badge').t(new_badge);\n                this.account.sendIQFast(iq_changes, () => {\n                    this.model.updateBadge(new_badge);\n                    this.close();\n                }, () => {\n                    this.$('.modal-content .error').text(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                })\n            }\n        }\n    },\n\n    typeEmoticon: function (emoji) {\n        let emoji_node = emoji.emojify({tag_name: 'span'}),\n            $textarea = this.$('.badge-text');\n        $textarea.focus().pasteHtmlAtCaret(emoji_node);\n    },\n\n    checkKey: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            this.saveNewBadge();\n        }\n    }\n\n});\n\nxabber.DefaultRestrictionsView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-default-restrictions',\n    template: templates.group_chats.default_restrictions,\n    events: {\n        \"click .btn-default-restrictions-save\": \"saveChanges\",\n        \"click .btn-default-restrictions-cancel\": \"close\",\n        \"change #default_restriction_expires\": \"changeExpiresTime\",\n        \"click .group-info-editor .property-variant\": \"changePropertyValue\",\n        \"click .select-timer .property-variant\": \"changeTimerValue\",\n        \"click .clickable-field input\": \"changeRestriction\",\n        \"keyup .clickable-field input\": \"keyUpInput\",\n        \"change .clickable-field input\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.contact.account;\n    },\n\n    open: function () {\n        this.update(() => {\n            this.$el.openModal({\n                ready: () => {\n                    this.$('.select-timer .dropdown-button').dropdown({\n                        inDuration: 100,\n                        outDuration: 100,\n                        constrainWidth: false,\n                        hover: false,\n                        alignment: 'left'\n                    });\n                    this.updateScrollBar();\n                },\n                complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.hide.bind(this);\n            }\n        });\n    },\n\n    update: function (callback) {\n        this.$('.btn-default-restrictions-save').addClass('non-active');\n        this.default_restrictions = [];\n        this.actual_default_restrictions = [];\n        this.$('button').blur();\n        let iq_get_rights = $iq({type: 'get', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n        this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n            this.showDefaultRestrictions(iq_all_rights);\n            callback && callback();\n        }, () => {\n            utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n        });\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked'))\n                    has_changes = true;\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name))\n                    has_changes = true;\n            }\n        });\n        this.$('.btn-default-restrictions-save').switchClass('non-active', !has_changes);\n    },\n\n    changeRestriction: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.prop('checked')) {\n            $target.closest('.right-item').find('.select-timer .property-value').attr('data-value', \"\").addClass('default-value')\n                .text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        }\n    },\n\n    keyUpInput: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER)\n            $(ev.target).click();\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') == 0) {\n            $property_value.addClass('default-value');\n            $property_value.text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked'))\n            $input_item.prop('checked', true);\n        this.updateSaveButton();\n    },\n\n    showDefaultRestrictions: function (iq_all_rights) {\n        let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n        data_form && (this.default_restrictions = _.clone(data_form));\n        data_form.fields.forEach((field) => {\n            if (field.type === 'fixed' || field.type === 'hidden')\n                return;\n            let attrs = {\n                    pretty_name: field.label,\n                    name: field.var,\n                    expires: field.values ? field.values[0] : undefined\n                },\n                view = this.$('.default-restrictions-list-wrap .right-item.restriction-default-' + attrs.name),\n                restriction_item = $(templates.group_chats.restriction_item({name: ('default-' + attrs.name), pretty_name: attrs.pretty_name, type: field.type})),\n                restriction_expire = $(templates.group_chats.right_expire_variants({right_name: ('default-' + attrs.name), expire_options: field.options}));\n            if (view.length)\n                view.detach();\n            restriction_item.append(restriction_expire);\n            this.$('.default-restrictions-list-wrap').append(restriction_item);\n            if (attrs.expires) {\n                this.actual_default_restrictions.push({name: attrs.name, expires: attrs.expires});\n                this.$('.right-item #default-' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                if (attrs.expires != 0) {\n                    let $current_restriction = this.$('.right-item.restriction-default-' + attrs.name);\n                    $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                        .removeClass('default-value')\n                        .text(field.options.find(x => x.value === attrs.expires).label);\n                }\n            }\n        });\n    },\n\n    saveChanges: function () {\n        if (this.$('.btn-default-restrictions-save').hasClass('non-active'))\n            return;\n        this.$('button').blur();\n        let iq_change_default_rights = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`}),\n            has_new_default_restrictions = false,\n            data_form = _.clone(this.default_restrictions);\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked')) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [restriction_expires];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name)) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [\"\"];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n            }\n        });\n\n        if (has_new_default_restrictions) {\n            this.account.addDataFormToStanza(iq_change_default_rights, data_form);\n            this.account.sendIQFast(iq_change_default_rights, () => {\n                this.close();\n            }, (error) => {\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                utils.dialogs.error(err_text);\n                this.close();\n            });\n        }\n    },\n\n    changeExpiresTime: function (ev) {\n        let expire_time_item = $(ev.target),\n            new_expire_time = expire_time_item.val(),\n            $restriction_item = expire_time_item.prev();\n        if (expire_time_item.val() == '0')\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__indefinitely\"));\n        else\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__text_expire\", [Number(new_expire_time)]));\n        $restriction_item .find('input').removeClass().addClass(new_expire_time);\n        expire_time_item.remove();\n    }\n});\n\nxabber.DefaultRestrictionsRightView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-default-restrictions',\n    template: templates.group_chats.default_restrictions_right,\n    events: {\n        \"click .btn-default-restrictions-save\": \"saveChanges\",\n        \"click .btn-default-restrictions-cancel\": \"hideRestrictions\",\n        \"click .btn-back\": \"hideRestrictions\",\n        \"click .btn-reset\": \"showRestrictions\",\n        \"change #default_restriction_expires\": \"changeExpiresTime\",\n        \"click .group-info-editor .property-variant\": \"changePropertyValue\",\n        \"click .select-timer .property-variant\": \"changeTimerValue\",\n        \"click .clickable-field input\": \"changeRestriction\",\n        \"keyup .clickable-field input\": \"keyUpInput\",\n        \"change .clickable-field input\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.contact.account;\n        this.model.set('restrictions_hidden', true)\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'))\n    },\n\n    showRestrictions: function (ev) {\n        this.model.set('restrictions_hidden', false);\n        this.update(() => {\n            this.$('.select-timer .dropdown-button').dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'left'\n            });\n            this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'))\n            this.updateSaveButton()\n        });\n    },\n\n    hideRestrictions: function (ev) {\n        this.parent.hideRestrictions();\n    },\n\n    open: function () {\n        this.update(() => {\n            this.$el.openModal({\n                ready: () => {\n                    this.$('.select-timer .dropdown-button').dropdown({\n                        inDuration: 100,\n                        outDuration: 100,\n                        constrainWidth: false,\n                        hover: false,\n                        alignment: 'left'\n                    });\n                    this.updateScrollBar();\n                },\n                complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n        });\n    },\n\n    update: function (callback) {\n        this.$('.btn-default-restrictions-save').addClass('fade-out');\n        this.default_restrictions = [];\n        this.actual_default_restrictions = [];\n        this.$('button').blur();\n        let iq_get_rights = $iq({type: 'get', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n        this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n            this.showDefaultRestrictions(iq_all_rights);\n            callback && callback();\n        }, () => {\n\n            utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n        });\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked'))\n                    has_changes = true;\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name))\n                    has_changes = true;\n            }\n        });\n        this.$('.btn-default-restrictions-save').switchClass('fade-out', !has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.restrictions-header .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.restrictions-header .details-icon').removeClass('btn-back').addClass('btn-reset')\n            this.$('.restrictions-header .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.restrictions-header .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.restrictions-header .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.restrictions-header .details-icon').addClass('btn-back').removeClass('btn-reset')\n            this.$('.restrictions-header .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.restrictions-header .block-name.second-text').addClass('fade-out');\n        }\n    },\n\n    changeRestriction: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.prop('checked')) {\n            $target.closest('.right-item').find('.select-timer .property-value').attr('data-value', \"\").addClass('default-value')\n                .text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        }\n    },\n\n    keyUpInput: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER)\n            $(ev.target).click();\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') == 0) {\n            $property_value.addClass('default-value');\n            $property_value.text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked'))\n            $input_item.prop('checked', true);\n        this.updateSaveButton();\n    },\n\n    showDefaultRestrictions: function (iq_all_rights) {\n        let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n        data_form && (this.default_restrictions = _.clone(data_form));\n        data_form.fields.forEach((field) => {\n            if (field.type === 'fixed' || field.type === 'hidden')\n                return;\n            let attrs = {\n                    pretty_name: field.label,\n                    name: field.var,\n                    expires: field.values ? field.values[0] : undefined\n                },\n                view = this.$('.default-restrictions-list-wrap .right-item.restriction-default-' + attrs.name),\n                restriction_item = $(templates.group_chats.restriction_item({name: ('default-' + attrs.name), pretty_name: attrs.pretty_name, type: field.type})),\n                restriction_expire = $(templates.group_chats.right_expire_variants({right_name: ('default-' + attrs.name), expire_options: field.options}));\n            if (view.length)\n                view.detach();\n            restriction_item.append(restriction_expire);\n            this.$('.default-restrictions-list-wrap').append(restriction_item);\n            if (attrs.expires) {\n                this.actual_default_restrictions.push({name: attrs.name, expires: attrs.expires});\n                this.$('.right-item #default-' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                if (attrs.expires != 0) {\n                    let $current_restriction = this.$('.right-item.restriction-default-' + attrs.name);\n                    $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                        .removeClass('default-value')\n                        .text(field.options.find(x => x.value === attrs.expires).label);\n                }\n            }\n        });\n    },\n\n    saveChanges: function () {\n        if (this.$('.btn-default-restrictions-save').hasClass('fade-out'))\n            return;\n        this.$('.btn-default-restrictions-save').addClass('fade-out')\n        this.$('.edit-save-preloader.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        this.$('button').blur();\n        let iq_change_default_rights = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`}),\n            has_new_default_restrictions = false,\n            data_form = _.clone(this.default_restrictions);\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked')) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [restriction_expires];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name)) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [\"\"];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n            }\n        });\n\n        if (has_new_default_restrictions) {\n            this.account.addDataFormToStanza(iq_change_default_rights, data_form);\n            this.account.sendIQFast(iq_change_default_rights, () => {\n                this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.hideRestrictions();\n            }, (error) => {\n\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                utils.dialogs.error(err_text);\n                this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.hideRestrictions();\n            });\n        }\n    },\n\n    changeExpiresTime: function (ev) {\n        let expire_time_item = $(ev.target),\n            new_expire_time = expire_time_item.val(),\n            $restriction_item = expire_time_item.prev();\n        if (expire_time_item.val() == '0')\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__indefinitely\"));\n        else\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__text_expire\", [Number(new_expire_time)]));\n        $restriction_item .find('input').removeClass().addClass(new_expire_time);\n        expire_time_item.remove();\n    }\n});\n\nxabber.Participant = Backbone.Model.extend({\n    idAttribute: 'id',\n\n    initialize: function (_attrs, options) {\n        let attrs = _.clone(_attrs);\n        this.model = options.model;\n        this.contact = options.contact ? options.contact : this.model.contact;\n        this.account = this.contact.account;\n        this.on(\"change:avatar\", this.getBase64Avatar, this);\n        this.set(attrs);\n        this.getBase64Avatar();\n    },\n\n    getBase64Avatar: function () {\n        if (!this.get('id'))\n            return;\n        if (this.get('avatar')) {\n            let cached_info = this.account.chat_settings.getAvatarInfoById(this.get('id'));\n            if (cached_info) {\n                if (cached_info.avatar_hash == this.get('avatar')) {\n                    this.set('b64_avatar', cached_info.avatar_b64);\n                    (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n                    return;\n                }\n            }\n            if (this.get('avatar_url')){\n                this.account.chat_settings.updateCachedAvatars(this.get('id'), this.get('avatar'), this.get('avatar_url'));\n                this.set('b64_avatar', this.get('avatar_url'));\n                (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n\n            } else {\n                let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + this.get('id');\n                this.contact.getAvatar(this.get('avatar'), node, (avatar) => {\n                    this.account.chat_settings.updateCachedAvatars(this.get('id'), this.get('avatar'), avatar);\n                    this.set('b64_avatar', avatar);\n                    (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n                });\n\n            }\n        }\n    },\n\n    kick: function (callback, errback) {\n        let id = this.get('id'),\n            jid = this.get('jid'),\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('kick', {xmlns: Strophe.NS.GROUP_CHAT});\n        if (jid)\n            iq.c('jid').t(jid);\n        else\n            iq.c('id').t(id);\n        this.account.sendIQFast(iq, () => {\n            callback && callback();\n        }, (err) => {\n            errback && errback(err);\n        });\n    },\n\n    block: function (callback, errback) {\n        let id = this.get('id'),\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('block', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c('id').t(id);\n        this.account.sendIQFast(iq, () => {\n            callback && callback();\n        }, function (err) {\n            errback && errback(err);\n        });\n    }\n});\n\nxabber.Participants = Backbone.Collection.extend({\n    model: xabber.Participant,\n    comparator: 'nickname',\n\n    initialize: function (models, options) {\n        this.contact = options.contact;\n        this.account = this.contact.account;\n        this.account.groupchat_settings && (this.version = this.account.groupchat_settings.getParticipantsListVersion(this.contact.get('jid')));\n        this.getCachedParticipants();\n        this.contact.on(\"update_participants\", this.updateParticipants, this);\n        this.on(\"change:nickname\", this.sort, this);\n    },\n\n    updateVersion: function () {\n        this.version = this.account.groupchat_settings.getParticipantsListVersion(this.contact.get('jid')) || this.version;\n    },\n\n    getCachedParticipants: function () {\n        this.account.groupchat_settings && this.account.groupchat_settings.getParticipantsList(this.contact.get('jid')).forEach((participant) => {\n            this.mergeParticipant(participant);\n        });\n    },\n\n    mergeParticipant: function (attrs) {\n        if (typeof attrs !== \"object\")\n            attrs = {id: attrs};\n        let participant = this.get(attrs.id);\n        if (participant)\n            participant.set(attrs);\n        else {\n            participant = this.create(attrs, {model: this});\n        }\n        return participant;\n    },\n\n    resetParticipants: function () {\n        this.version = 0;\n        _.each(_.clone(this.models), function (participant) {\n            participant.destroy();\n        });\n    },\n\n    getRights: function (rights) {\n        let pretty_rights = [];\n        $(rights).each((idx, permission) => {\n            let name = $(permission).attr('name'),\n                pretty_name = $(permission).attr('translation'),\n                issued_time = $(permission).attr('issued-at'),\n                expires_time = $(permission).attr('expires');\n            pretty_rights.push({\n                name: name,\n                pretty_name: pretty_name,\n                issued_time: issued_time,\n                expires_time: expires_time\n            });\n        });\n        return pretty_rights;\n    },\n\n        updateParticipants: function () {\n            this.participantsRequest({version: this.version}, () => {\n                this.trigger(\"participants_updated\");\n                let chat = this.account.chats.getChat(this.contact);\n                if (chat.item_view) {\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.updatePinnedMessage()\n                }\n            });\n        },\n\n    participantsRequest: function (options, callback, errback) {\n        options = options || {};\n        let participant_id = options.id,\n            version = options.version || 0,\n            iq = $iq({to: this.contact.get('full_jid'), type: 'get'});\n        if (participant_id != undefined) {\n            if (options.properties)\n                iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`, id: participant_id});\n            else\n                iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#rights`}).c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: participant_id});\n        }\n        else\n            iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`, version: version});\n        this.account.sendFast(iq, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            version && (this.version = Number(version));\n            $response.find(`query user`).each((idx, item) => {\n                let $item = $(item),\n                    subscription = $item.find('subscription').text(),\n                    id = $item.attr('id');\n                if (subscription === 'none') {\n                    this.get(id) && this.get(id).destroy();\n                    this.account.groupchat_settings.removeParticipantFromList(this.contact.get('jid'), id);\n                    this.trigger(\"participants_updated\");\n                }\n                else\n                    this.createFromStanza($item);\n            });\n            callback && callback(response);\n        }, (error) => {\n            errback && errback(error);\n        });\n    },\n\n    search: function (query) {\n        let list = [];\n        this.models.forEach((participant) => {\n            let jid = participant.get('jid');\n            if (query) {\n                query = query.toLowerCase();\n                let nickname = participant.get('nickname');\n                if (jid && jid.toLowerCase().indexOf(query) > -1 || nickname && nickname.toLowerCase().indexOf(query) > -1)\n                    list.push(participant);\n            } else\n                list.push(participant);\n        });\n        return list;\n    },\n\n    createFromStanza: function ($item, options) {\n        let jid = $item.find('jid').text(),\n            nickname = $item.find('nickname').text(),\n            id = $item.attr('id'),\n            badge = $item.find('badge').text(),\n            present = $item.find('present').text(),\n            photo = $item.find(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).find('info').attr('id'),\n            photo_url = $item.find(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).find('info').attr('url'),\n            role = $item.find('role').text();\n        !nickname.trim().length && (nickname = jid || id);\n\n        let attrs = {\n            jid: jid,\n            id: id,\n            avatar: photo,\n            avatar_url: photo_url,\n            nickname: nickname,\n            badge: badge,\n            present: present,\n            role: role\n        };\n        (this.contact.get('incognito_chat') && options && options.my_info === true) && (attrs.jid = this.account.get('jid'));\n\n        let participant = this.mergeParticipant(attrs);\n        (this.account.get('jid') === participant.get('jid')) && (this.contact.my_info = participant) && this.contact.trigger('update_my_info');\n        this.account.groupchat_settings.updateParticipant(this.contact.get('jid'), attrs);\n        return participant;\n    }\n});\n\nxabber.GroupChatSettings = Backbone.ModelWithStorage.extend({\n    defaults: {\n        participants_lists: []\n    },\n\n    getParticipantsListVersion: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            result = all_participants_lists.find(list => list.jid === jid);\n        if (result)\n            return result.version;\n        else\n            return 0;\n    },\n\n    setParticipantsListVersion: function (jid, version) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list = all_participants_lists.find(list => list.jid === jid),\n            participants_list_idx = all_participants_lists.indexOf(participants_list);\n        if (participants_list_idx != -1) {\n            all_participants_lists.splice(participants_list_idx, 1);\n        }\n        if (!participants_list) {\n            participants_list = {jid: jid, participants_list: [], version: 0};\n        }\n        else\n            participants_list.version = version;\n        all_participants_lists.push(participants_list);\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    getParticipantsList: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            result = all_participants_lists.find(list => list.jid === jid);\n        if (result && result.participants_list)\n            return result.participants_list;\n        else\n            return [];\n    },\n\n    updateParticipant: function (jid, participant_info) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            chat_participants = all_participants_lists.find(list => list.jid === jid),\n            version = chat_participants && chat_participants.version || 0,\n            participants_list = chat_participants && chat_participants.participants_list || [],\n            participants_list_idx = all_participants_lists.indexOf(chat_participants);\n        if (participants_list.length) {\n            let participant = participants_list.find(participant_item => participant_item.id === participant_info.id),\n                participant_idx = participants_list.indexOf(participant);\n            if (participant_idx != -1)\n                participants_list[participant_idx] = participant_info;\n            else\n                participants_list.push(participant_info);\n        }\n        else\n            participants_list.push(participant_info);\n        if (participants_list_idx != -1) {\n            all_participants_lists.splice(participants_list_idx, 1);\n        }\n        all_participants_lists.push({jid: jid, participants_list: participants_list, version: version});\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    setParticipantsList: function (jid, updated_participants_list) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list = all_participants_lists.find(list => list.jid === jid) || [],\n            participants_list_idx = all_participants_lists.indexOf(participants_list);\n        if (participants_list_idx != -1)\n            all_participants_lists.splice(participants_list_idx, 1);\n        all_participants_lists.push({jid: jid, participants_list: updated_participants_list, version: participants_list.version});\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    removeParticipantFromList: function (jid, participant_id) {\n        let participants_list = this.getParticipantsList(jid);\n        if (participants_list.length) {\n            let participant_idx = participants_list.indexOf(participants_list.find(participant => participant.id === participant_id));\n            if (participant_idx != -1)\n                participants_list.splice(participant_idx, 1);\n            this.setParticipantsList(jid, participants_list);\n        }\n    },\n\n    resetParticipantsList: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list_idx = all_participants_lists.indexOf(all_participants_lists.find(list => list.jid === jid));\n        if (participants_list_idx != -1)\n            all_participants_lists.splice(participants_list_idx, 1);\n        all_participants_lists.push({jid: jid, participants_list: [], version: 0});\n        this.save('participants_lists', all_participants_lists);\n    }\n});\n\nxabber.GroupchatInvitationView = xabber.BasicView.extend({\n    className: 'details-panel invitation-view',\n    template: templates.group_chats.invitation,\n    ps_selector: '.panel-content',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-join\": \"join\",\n        \"click .btn-decline\": \"reject\",\n        \"click .btn-block\": \"blockContact\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.$('.msg-text').text(options.message && options.message.get('message') ? options.message.get('message') : xabber.getString(\"groupchat__public_group__text_invitation\", [this.account.get('jid')]));\n        this.message = options.message;\n        this.model.on(\"change\", this.update, this);\n    },\n\n    render: function () {\n        this.model.set('visible', true);\n        this.updateAvatar();\n        this.updateName();\n    },\n\n    hide: function () {\n        this.trigger('before_hide', this);\n        this.data.set('visible', false);\n        this.model.set('visible', false);\n        this.onHide.apply(this, arguments);\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n    },\n\n    openChat: function () {\n        this.model.set('in_roster', true);\n        this.model.trigger(\"open_chat\", this.model);\n    },\n\n    closeChat: function () {\n        let chat = this.account.chats.getChat(this.model);\n        chat.set({'opened': false, 'display': false, 'active': false, 'is_accepted': undefined});\n        xabber.body.setScreen('all-chats', { right: undefined });\n        chat.item_view.content.readMessages();\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateName: function () {\n        this.$('.main-info  .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name-wrap') == this.model.get('jid')) {\n            this.$('.main-info .name-wrap').addClass('name-is-jid');\n            this.$('.main-info  .jid').text('');\n        }\n        else {\n            this.$('.main-info .name-wrap').removeClass('name-is-jid');\n            this.$('.main-info  .jid').text(this.model.get('jid'));\n        }\n    },\n\n    blockInvitation: function () {\n        if (this.account.connection && this.account.connection.do_synchronization)\n            return;\n        let contact_jid = this.model.get('jid'),\n            iq_get_blocking = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING}),\n            iq_unblocking = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING}),\n            iq_set_blocking = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.model.get('jid') + '/' + moment.now()});\n        this.account.sendIQFast(iq_get_blocking, (iq_blocking_items) => {\n            let items = $(iq_blocking_items).find('item');\n            if (items.length > 0) {\n                items.each(function (idx, item) {\n                    let item_jid = $(item).attr('jid');\n                    if (item_jid.indexOf(contact_jid) > -1)\n                        iq_unblocking.c('item', {jid: item_jid}).up();\n                });\n            }\n            if ($(iq_unblocking.nodeTree).find('item').length)\n                this.account.sendIQFast(iq_unblocking, () => {\n                    this.account.sendIQFast(iq_set_blocking);\n                });\n            else\n                this.account.sendIQFast(iq_set_blocking);\n        });\n    },\n\n    join: function () {\n        let contact = this.model;\n        contact.set('subscription_preapproved', true);\n        contact.pres('subscribed');\n        contact.set('known', true);\n        contact.set('removed', false);\n        setTimeout(() => {\n            contact.pres('subscribe');\n        }, 500);\n        this.blockInvitation();\n        contact.getMyInfo();\n        this.openChat();\n        contact.trigger('remove_invite', contact);\n        let chat = this.account.chats.getChat(this.model);\n    },\n\n    reject: function () {\n        let contact = this.model;\n        this.closeChat();\n        let iq = $iq({to: contact.get('full_jid') || contact.get('jid'), type: 'set'})\n            .c('decline', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`});\n        this.account.sendFast(iq, () => {}, () => {\n            contact.declineRequest();\n            this.blockInvitation();\n        });\n        contact.trigger('remove_invite', contact);\n    },\n\n    blockContact: function () {\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"contact_block\"), xabber.getString(\"block_contact_confirm\", [contact.get('name'), this.account.get('jid')]), null, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done(function (result) {\n            if (result) {\n                contact.trigger('remove_invite', contact);\n                contact.block();\n                xabber.trigger(\"clear_search\");\n            }\n        });\n        this.blockInvitation();\n        this.closeChat();\n        contact.trigger('remove_invite', contact);\n    }\n});\n\nxabber.ContactNameWidget = xabber.InputWidget.extend({\n    field_name: 'contact-name',\n    placeholder: \"\",\n    model_field: 'name',\n\n    setValue: function (value) {\n        if (name === \"\") {\n            this.model.set('roster_name', null);\n            let name = this.getDefaultName();\n            this.model.set('name', name);\n        }\n        this.model.pushInRoster({name: value});\n    },\n\n    showInput: function () {\n        if (this.$input.prop('disabled'))\n            return;\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info'))\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        else {\n            let vcard = this.model.get('vcard');\n            name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || this.model.get('jid');\n        }\n        return name;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n    }\n});\n\nxabber.ContactNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'contact-name',\n    placeholder: \"\",\n    model_field: 'name',\n    template: templates.group_chats.group_name_input_widget,\n\n    setValue: function (value) {\n        if (name === \"\") {\n            this.model.set('roster_name', null);\n            let name = this.getDefaultName();\n            this.model.set('name', name);\n        }\n        this.model.pushInRoster({name: value});\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info'))\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        else {\n            let vcard = this.model.get('vcard');\n            name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || this.model.get('jid');\n        }\n        return name;\n    },\n\n    updateValue: function () {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val()) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('roster_name'))\n                this.$input.val(this.model.get('roster_name'))\n        }\n        if (!this.model.get('roster_name'))\n            this.$value.addClass('name-is-default');\n        else\n            this.$value.removeClass('name-is-default');\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n    },\n});\n\nxabber.GroupNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'group-name',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        if (this.$input.val())\n            this.parent.changeName(value);\n        else\n            this.parent.changeName(this.getDefaultName());\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info') && this.model.get('group_info').name)\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('group_info') && this.model.get('group_info').name)\n                this.$input.val(this.model.get('group_info').name)\n            if (force_reset)\n                this.changeValue();\n        }\n    },\n\n    getValue: function () {\n        if (this.model.get('group_info'))\n            return this.model.get('group_info').name;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n        else\n            this.changeValue();\n\n    },\n});\n\nxabber.ParticipantNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'participant-name',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.updateValue();\n        if (this.$input.val())\n            this.parent.changeName(value);\n        else\n            this.parent.changeName(this.getDefaultName());\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('nickname'))\n            name = this.model.get('nickname');\n        else\n            name = this.model.get('jid');\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('nickname'))\n                this.$input.val(this.model.get('nickname'))\n            if (force_reset)\n                this.changeValue();\n        }\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        if (this.model.get('nickname'))\n            return this.model.get('nickname');\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n        else\n            this.changeValue();\n\n    },\n});\n\nxabber.ParticipantBadgeRightWidget = xabber.InputWidget.extend({\n    field_name: 'participant-badge',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue(true);\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.updateValue();\n        this.parent.changeBadge(value);\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_member_badge\"));\n        if (force_reset) {\n            this.$input.val(value);\n            this.changeValue();\n        }\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        let badge = _.escape(this.model.get('badge'));\n        return badge;\n    },\n\n    keyUp: function () {\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_member_badge\"));\n        this.changeValue();\n    },\n});\n\nxabber.GroupDescriptionRightWidget = xabber.InputWidget.extend({\n    field_name: 'group-description',\n    template: templates.group_chats.description_input_widget,\n    placeholder: \"\",\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.parent.changeDescription(value);\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info') && this.model.get('group_info').description)\n                name = this.model.get('group_info').description;\n        }\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_example_description\"));\n            if (force_reset && this.model.get('group_info'))\n                this.$input.val(this.model.get('group_info').description)\n            if (force_reset)\n                this.changeValue();\n        }\n    },\n\n    keyDown: function (ev) {\n        ev.stopPropagation();\n        let value = this.getValue();\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.$input.removeClass('changed').val(value);\n            this.data.set('input_mode', false);\n        }\n    },\n\n    getValue: function () {\n        if (this.model.get('group_info'))\n            return this.model.get('group_info').description;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_example_description\"));\n        this.changeValue();\n    },\n});\n\nxabber.ContactEditGroupsView = xabber.BasicView.extend({\n    template: templates.groups,\n    events: {\n        'click .group': 'removeGroup',\n        'click .existing-group-field': 'editGroup',\n        'change .new-group-name input': 'checkNewGroup',\n        'keyup .new-group-name input': 'checkNewGroup',\n        'click .new-group-checkbox': 'addNewGroup',\n        \"keyup #new-group-name\": \"keyupAddNewGroup\",\n        \"focusin #new-group-name\": \"focusinAddNewGroup\",\n        \"focusout #new-group-name\": \"focusoutAddNewGroup\",\n        \"keydown #new-group-name\": \"keydownAddNewGroup\",\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('groups_hidden', true)\n        this.model.on(\"change:in_roster update_groups\", this.onUpdate, this);\n    },\n\n    render: function (view, args) {\n        this.$el.html(this.template());\n        if (this.model.get('in_roster')) {\n            let groups = _.clone(this.model.get('groups')),\n                all_groups = _.map(this.account.groups.notSpecial(), function (group) {\n                    let name = group.get('name');\n                    return {name: name, checked: _.contains(groups, name), id: uuid()};\n                }),\n                all_groups_unchecked = all_groups.filter(function(group) {\n                    if (group.checked)\n                        return false;\n                    return true;\n                }).length;\n            if (all_groups_unchecked)\n                this.$('.groups-wrap').removeClass('empty-groups-wrap')\n            else\n                this.$('.groups-wrap').addClass('empty-groups-wrap')\n\n            this.$('.checkbox-list').html(templates.groups_checkbox_list({\n                groups: all_groups\n            })).appendTo(this.$('.groups-wrap'));\n            this.ps_container = this.$('.checkbox-list');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.scrollToTop();\n            if (groups.length)\n                this.$('.groups').html(templates.groups_list({\n                    groups: all_groups\n                })).appendTo(this.$('.groups-wrap-list'));\n            else\n                this.$('.groups').html('<div class=\"empty-groups\">'+ xabber.getString(\"contact_circles_empty\") + '</div>')\n            this.$('.groups').append(templates.groups_new_group());\n\n        }\n        this.$el.showIf(this.model.get('in_roster'));\n        if (args && args.on_add) {\n            this.$('.groups-wrap').hideIf(false)\n            this.$('.input-field input').focus();\n        }\n        else\n            this.$('.groups-wrap').hideIf(true)\n        this._update_template = false;\n        this.parent.updateScrollBar();\n    },\n\n    onUpdate: function (ev) {\n        if (this._update_template){\n            this.render(this, {on_add: true});\n            this.$('.new-group-name input').focus();\n        }\n        else{\n            this.render();\n        }\n\n    },\n\n    removeGroup: function (ev) {\n        let $target = $(ev.target).closest('.group'),\n            group_name = $target.attr('data-groupname'),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(group_name);\n        if (idx >= 0) {\n            groups.splice(idx, 1);\n        }\n        this._update_template = false\n        this.model.pushInRoster({groups: groups});\n    },\n\n    removeLastGroup: function (ev) {\n        let groups = _.clone(this.model.get('groups'));\n        if (groups.length) {\n            groups.pop();\n            this._update_template = true\n            this.model.pushInRoster({groups: groups});\n        }\n    },\n\n    editGroup: function (ev) {\n        clearTimeout(this._hide_timeout)\n        let $target = $(ev.target).closest('.input-field'),\n            $input = $target.find('input'),\n            checked = !$input.prop('checked'),\n            group_name = $input.attr('data-groupname'),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(group_name);\n        $input.prop('checked', checked);\n        if (checked) {\n            groups.push(group_name);\n        } else if (idx >= 0) {\n            groups.splice(idx, 1);\n        }\n        this._update_template = true\n        this.model.pushInRoster({groups: groups});\n    },\n\n    checkNewGroup: function (ev) {\n        let name = $(ev.target).val(),\n            $checkbox = this.$('.new-group-checkbox');\n        $checkbox.showIf(name && !this.account.groups.get(name));\n    },\n\n    keyupAddNewGroup: function (ev) {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val();\n        if (ev.keyCode === constants.KEY_ENTER && name) {\n            this.addNewGroup();\n        }\n    },\n\n    keydownAddNewGroup: function (ev) {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val();\n        if (ev.keyCode === constants.KEY_BACKSPACE && !name) {\n            this.removeLastGroup();\n        }\n    },\n\n    focusinAddNewGroup: function (ev) {\n        clearTimeout(this._hide_timeout)\n        this.$('.groups-wrap').hideIf(false)\n        this.$('.empty-groups').hideIf(true)\n    },\n\n    focusoutAddNewGroup: function (ev) {\n        this.$('.empty-groups').hideIf(false)\n        if (this.$('.new-group-name input').val())\n            this.addNewGroup();\n        this._hide_timeout = setTimeout(() => {\n            this.$('.groups-wrap').hideIf(true)\n            this.$('.new-group-name input').val('')\n        }, 100)\n    },\n\n    addNewGroup: function () {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val(),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(name);\n        if (idx < 0) {\n            groups.push(name);\n        }\n        this.model.pushInRoster({groups: groups});\n        this._update_template = true\n    }\n});\n\nxabber.ContactEditView = xabber.BasicView.extend({\n    template: templates.edit_contact,\n    events: {\n        'click .btn-back': 'hideEdit',\n        'click .btn-request': 'requestSubscription',\n        'click .btn-allow': 'allowSubscription',\n        'click .btn-cancel-request': 'cancelSubscriptionRequest',\n        'click .btn-allow-request': 'handleSubscriptionRequest',\n        'click .btn-disallow-request': 'cancelSubscriptionIn',\n        'click .btn-disallow-preapproved': 'cancelSubscriptionIn',\n        'click .btn-cancel-subscription-out': 'cancelSubscriptionOut',\n        'click .btn-cancel-subscription-in': 'cancelSubscriptionIn',\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('edit_hidden', true)\n        this.model.on(\"change:status_updated\", this.updateStatuses, this);\n        this.model.on(\"change:subscription\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_preapproved\", this.updateStatuses, this);\n        this.model.on(\"change:blocked\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_request_in\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_request_out\", this.updateStatuses, this);\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n        this.name_field = new xabber.ContactNameRightWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.$('.status-out.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.status-in.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.updateStatuses();\n    },\n\n    showEdit: function () {\n        this.model.set('edit_hidden', false);\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n    },\n\n    updateStatuses: function () {\n        let statuses = this.model.getSubscriptionStatuses(),\n            subscription_preapproved = this.model.get('subscription_preapproved');\n        if (statuses){\n            this.$('.status-out').addClass(statuses.status_out_class)\n            this.$('.status-out .value').text(statuses.status_out)\n            this.$('.status-out').showIf(statuses.status_out)\n            this.$('.status-in').addClass(statuses.status_in_class)\n            this.$('.status-in  .value').text(statuses.status_in)\n            this.$('.status-in').showIf(statuses.status_in)\n            this.$('.status-description .value').html(statuses.status_description)\n            this.$('.status-description').showIf(statuses.status_description)\n            this.$('.btn-delete').hideIf(!this.model.get('in_roster'));\n            if (statuses.status_out_color === 'request') {\n                this.$('.status-out').addClass('text-color-500').addClass('request').removeClass('subbed')\n                this.$('.status-out').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === 'request') {\n                this.$('.status-in').addClass('text-color-500').addClass('request').removeClass('subbed')\n                this.$('.status-in').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_out_color === 'subbed') {\n                this.$('.status-out').addClass('text-color-500').addClass('subbed').removeClass('request')\n                this.$('.status-out').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === 'subbed') {\n                this.$('.status-in').addClass('text-color-500').addClass('subbed').removeClass('request')\n                this.$('.status-in').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_out_color === '') {\n                this.$('.status-out').removeClass('text-color-500').removeClass('request').removeClass('subbed')\n                this.$('.status-out').removeClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === '') {\n                this.$('.status-in').removeClass('text-color-500').removeClass('request').removeClass('subbed')\n                this.$('.status-in').removeClass('text-decoration-color-300')\n            }\n            this.$('.btn-request').hideIf(!(statuses.status_out_color === ''))\n            this.$('.btn-allow').hideIf(!(statuses.status_in_color === '' && !subscription_preapproved))\n            this.$('.btn-disallow-preapproved').hideIf(!(statuses.status_in_color === '' && subscription_preapproved))\n            this.$('.btn-cancel-request').hideIf(!(statuses.status_out_color === 'request'))\n            this.$('.btn-allow-request').hideIf(!(statuses.status_in_color === 'request'))\n            this.$('.btn-disallow-request').hideIf(!(statuses.status_in_color === 'request'))\n            this.$('.btn-cancel-subscription-out').hideIf(!(statuses.status_out_color === 'subbed'))\n            this.$('.btn-cancel-subscription-in').hideIf(!(statuses.status_in_color === 'subbed'))\n        }\n    },\n\n    requestSubscription: function () {\n        this.model.askRequest();\n    },\n\n    allowSubscription: function () {\n        this.model.acceptRequest();\n        !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && this.set('subscription_preapproved', true)\n    },\n\n    cancelSubscriptionRequest: function () {\n        this.model.declineSubscription();\n    },\n\n    handleSubscriptionRequest: function () {\n        this.model.acceptRequest();\n    },\n\n    cancelSubscriptionOut: function () {\n        this.model.declineSubscription();\n    },\n\n    cancelSubscriptionIn: function () {\n        this.model.declineSubscribe();\n        this.model.set('subscription_request_in', false);\n    },\n\n    hideEdit: function (ev) {\n        this.model.set('edit_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        };\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'));\n    },\n});\n\nxabber.GroupEditView = xabber.BasicView.extend({\n    template: templates.edit_group,\n    events: {\n        \"click .btn-save\": \"saveChanges\",\n        'click .edit-header:not(.property-header) .btn-back': 'hideEdit',\n        'click .btn-reset': 'resetPanel',\n        'click .btn-edit': 'showDescriptionProperty',\n        'click .btn-back-panel': 'hidePanel',\n        'click .membership-field .property-radio input': 'changeMembership',\n        'click .index-field .property-radio input ': 'changeIndex',\n        'click .index-property:not(.property-disabled)': 'showIndexProperty',\n        'click .membership-property:not(.property-disabled)': 'showMembershipProperty',\n        'click .btn-back.btn-property-back': 'hideProperty',\n        \"click .list-variant\": \"showPanel\",\n        \"click .revoke-invitation\": \"revokeInvitation\",\n        \"click .btn-reset-panel\": \"deselectParticipants\",\n        \"click .btn-remove-selected\": \"actionSelectedParticipants\",\n        \"click .participants-edit-wrap .list-item\": \"selectParticipant\",\n        \"click .unblock-user\": \"unblockUser\",\n        \"click .set-groupchat-avatar-text\": \"clickAvatarInput\",\n        \"click .btn-add-block\": \"blockId\",\n        \"keydown .field-input\": \"keyDownName\",\n        \"keyup .field-input\": \"keyUp\",\n        \"focusout .field-input\": \"changeValue\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('edit_hidden', true)\n        this.model.on('change:group_info', this.update, this)\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n        this.$('.index-property-edit-wrap').hideIf(true)\n        this.$('.membership-property-edit-wrap').hideIf(true)\n        this.$('.description-edit-wrap').hideIf(true)\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.property-dropdown').dropdown(dropdown_settings);\n        this.$('.circle-avatar.dropdown-button').dropdown(dropdown_settings);\n        // this.name_field = new xabber.ContactNameRightWidget({\n        //     el: this.$('.name-wrap')[0],\n        //     model: this.model\n        // });\n        this.group_name_field = new xabber.GroupNameRightWidget({\n            el: this.$('.edit-group-name-wrap')[0],\n            model: this.model,\n            parent: this,\n        });\n        this.group_description_field = new xabber.GroupDescriptionRightWidget({\n            el: this.$('.edit-group-description-wrap')[0],\n            model: this.model,\n            parent: this,\n        });\n        this.update();\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {},\n            model, searchable, privacy;\n        if (info){\n            if (info.privacy === 'public')\n                privacy = xabber.getString(\"groupchat_public_group\");\n            if (info.privacy === 'incognito')\n                privacy = xabber.getString(\"groupchat_incognito_group\");\n            if (info.searchable === 'none') {\n                searchable = xabber.getString(\"groupchat_index_type_none\");\n                this.$('.property-wrap #none').prop(\"checked\", true);\n            }\n            if (info.searchable === 'local') {\n                searchable = xabber.getString(\"groupchat_index_type_local\");\n                this.$('.property-wrap #local').prop(\"checked\", true);\n            }\n            if (info.searchable === 'global') {\n                searchable = xabber.getString(\"groupchat_index_type_global\");\n                this.$('.property-wrap #global').prop(\"checked\", true);\n            }\n            if (info.model === 'open') {\n                model = xabber.getString(\"groupchat_membership_type_open\");\n                this.$('.property-wrap #open').prop(\"checked\", true);\n            }\n            if (info.model === 'member-only') {\n                model = xabber.getString(\"groupchat_membership_type_members_only\");\n                this.$('.property-wrap #member-only').prop(\"checked\", true);\n            }\n        }\n        this.$('.main-edit-header .block-name:not(.second-text)').text(privacy);\n        this.$('.membership-property span').text(model);\n        this.$('.index-property span').text(searchable);\n        this.$('.edit-group-name').text(info.name);\n        this.$('.edit-group-description').text(info.description);\n        this.group_name_field && this.group_name_field.updateValue(true);\n        this.group_description_field && this.group_description_field.updateValue(true);\n        this.$('.btn-save').switchClass('fade-out', true);\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values);\n        if (is_owner){\n            let iq_get_rights = $iq({type: 'get', to: this.model.get('full_jid') || this.model.get('jid')})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n            this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n                let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`)),\n                    restrictions_count = 0;\n                data_form.fields.forEach((field) => {\n                    if (field.type === 'fixed' || field.type === 'hidden')\n                        return;\n                    let expires = field.values ? field.values[0] : undefined;\n                    if (expires) {\n                        restrictions_count++;\n                    }\n                });\n                if (restrictions_count === 0)\n                    restrictions_count = '';\n                this.$('.btn-default-restrictions .edit-button-value').text(restrictions_count);\n            }, () => {\n                utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n            });\n        }\n        this.updateAvatar();\n\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    showMembershipProperty: function () {\n        this.$('.membership-property-edit-wrap').hideIf(false)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    showIndexProperty: function () {\n        this.$('.index-property-edit-wrap').hideIf(false)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    showDescriptionProperty: function () {\n        this.$('.description-edit-wrap').hideIf(false)\n        this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideProperty: function () {\n        this.$('.index-property-edit-wrap').hideIf(true)\n        this.$('.description-edit-wrap').hideIf(true)\n        this.$('.membership-property-edit-wrap').hideIf(true)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    revokeInvitation: function (ev) {\n        let $member_item = $(ev.target).closest('.invitations-user');\n        if (this.parent.children && this.parent.children.invitations)\n            this.parent.children.invitations.revokeInvitation(ev)\n    },\n\n    showBlockButton: function (ev) {\n        this.$('.edit-bottom-block .btn-add-block').hideIf(false);\n    },\n\n    showInviteButton: function (ev) {\n        this.$('.edit-bottom-block .btn-invite').hideIf(false);\n    },\n\n    unblockUser: function (ev) {\n        if (this.parent.children && this.parent.children.blocked)\n            this.parent.children.blocked.unblockUser(ev)\n    },\n\n    actionSelectedParticipants: function (ev) {\n        let selected = this.$('.list-item.selected');\n        selected.each((index, item) => {\n            if ($(item).hasClass('invitations-user') && this.parent.children && this.parent.children.invitations)\n                this.parent.children.invitations.revokeInvitationByElement($(item))\n            if ($(item).hasClass('blocked-user') && this.parent.children && this.parent.children.blocked)\n                this.parent.children.blocked.unblockUserByElement($(item))\n            if ($(item).hasClass('blocked-user') || $(item).hasClass('invitations-user'))\n                $(item).removeClass('selected')\n        });\n        this.updateRemoveParticipantButton();\n    },\n\n    blockId: function () {\n        if (this.parent.children && this.parent.children.blocked)\n            this.parent.children.blocked.blockId()\n    },\n\n    deselectParticipants: function (ev) {\n        this.$('.list-item.selected').removeClass('selected')\n        this.updateRemoveParticipantButton();\n    },\n\n    selectParticipant: function (ev) {\n        if ($(ev.target).parent().hasClass('revoke-invitation') || $(ev.target).parent().hasClass('unblock-user') ||\n            $(ev.target).hasClass('revoke-invitation') || $(ev.target).hasClass('unblock-user'))\n            return;\n        let $member_item = $(ev.target).closest('.list-item'),\n            is_selected = $member_item.hasClass('selected');\n        $member_item.switchClass('selected', !is_selected)\n        this.updateRemoveParticipantButton();\n    },\n\n    updateRemoveParticipantButton: function () {\n        let has_changes = this.$('.list-item.selected').length;\n        this.$('.block-name-panel.second-text span').html(has_changes)\n        if (has_changes) {\n            this.$('.participants-edit-back').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.participants-edit-back').removeClass('btn-back-panel').addClass('btn-reset-panel')\n            this.$('.block-name-panel:not(.second-text)').addClass('fade-out');\n            this.$('.edit-bottom-block .btn-invite').addClass('fade-out');\n            this.$('.edit-bottom-block .btn-add-block').addClass('fade-out');\n            this.$('.block-name-panel.second-text').removeClass('fade-out');\n            this.$('.btn-remove-selected').removeClass('fade-out');\n        }\n        else{\n            this.$('.participants-edit-back').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.participants-edit-back').addClass('btn-back-panel').removeClass('btn-reset-panel')\n            this.$('.block-name-panel:not(.second-text)').removeClass('fade-out');\n            this.$('.edit-bottom-block .btn-invite').removeClass('fade-out');\n            this.$('.edit-bottom-block .btn-add-block').removeClass('fade-out');\n            this.$('.block-name-panel.second-text').addClass('fade-out');\n            this.$('.btn-remove-selected').addClass('fade-out');\n        }\n    },\n\n    clickAvatarInput: function (ev) {\n        this.$('.circle-avatar input').click();\n    },\n\n    hidePanel: function () {\n        this.parent.getInvitations((response) => {\n            let inv_count = $(response).find('query').find('user').length;\n            if (inv_count === 0)\n                inv_count = '';\n            this.$('.invitations-variant .counted').html(inv_count);\n        });\n        this.model.getBlockedParticipants((response) => {\n            let blocked_count = $(response).find('query').children().length;\n            if (blocked_count === 0)\n                blocked_count = '';\n            this.$('.blocked-variant .counted').html(blocked_count);\n        });\n        this.$('.btn-back-panel').hideIf(true)\n        this.$('.block-name-panel').hideIf(true)\n        this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n        this.$('.edit-bottom-block .btn-invite').hideIf(true)\n        this.$('.btn-remove-selected').hideIf(true)\n        this.$('.participants-edit-wrap').hideIf(true)\n        // if (this.ps_container.length) {\n        //     this.ps_container.perfectScrollbar('destroy')\n        // }\n        // this.ps_container = this.$('.edit-wrap');\n        // if (this.ps_container.length) {\n        //     this.ps_container.perfectScrollbar(\n        //         _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n        //     );\n        // }\n        // this.hideEdit();\n    },\n\n    showPanel: function () {\n        this.$('.btn-back-panel').hideIf(false)\n        this.$('.block-name-panel').hideIf(false)\n        this.$('.btn-remove-selected').hideIf(false)\n        this.$('.participants-edit-wrap').hideIf(false)\n        this.updateRemoveParticipantButton();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.ps_container = this.$('.participants-edit-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    resetPanel: function () {\n        this.updateSaveButton()\n        this.showEdit()\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null;\n            if ((field.var in this.original_data_form_values) && this.original_data_form_values[field.var] != value) {\n                has_changes = true;\n            }\n        });\n        this.$('.btn-save').switchClass('fade-out', !has_changes);\n        this.$('.btn-qr-code').hideIf(has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.edit-header:not(.main-edit-header) .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.edit-header:not(.main-edit-header) .details-icon').removeClass('btn-back').addClass('btn-reset')\n            this.$('.edit-header:not(.main-edit-header) .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.edit-header:not(.main-edit-header) .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.edit-header:not(.main-edit-header) .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.edit-header:not(.main-edit-header) .details-icon').addClass('btn-back').removeClass('btn-reset')\n            this.$('.edit-header:not(.main-edit-header) .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.edit-header:not(.main-edit-header) .block-name.second-text').addClass('fade-out');\n        }\n        let info = this.model.get('group_info') || {};\n        if (info){\n            if (info.privacy === 'public')\n                this.$('.main-edit-header .block-name:not(.second-text)').html(xabber.getString(\"groupchat_public_group\"));\n            if (info.privacy === 'incognito')\n                this.$('.main-edit-header .block-name:not(.second-text)').html(xabber.getString(\"groupchat_incognito_group\"));\n        }\n    },\n\n    changeName: function (value) {\n        if (this.data_form && value){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'name')\n            if (!this.original_data_form_values.name)\n                this.original_data_form_values.name = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [value]\n            this.updateSaveButton()\n        }\n    },\n\n    changeDescription: function (value) {\n        if (this.data_form){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'description')\n            if (!this.original_data_form_values.description)\n                this.original_data_form_values.description = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [value]\n            this.updateSaveButton()\n        }\n    },\n\n    changeMembership: function (ev) {\n        let membership = $(ev.target).attr('id'),\n            membership_text;\n        if (this.data_form && membership){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'membership')\n            if (!this.original_data_form_values.membership)\n                this.original_data_form_values.membership = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [membership]\n            if (membership === 'open')\n                membership_text = xabber.getString(\"groupchat_membership_type_open\");\n            if (membership === 'member-only')\n                membership_text = xabber.getString(\"groupchat_membership_type_members_only\");\n            this.$('.membership-property span').text(membership_text);\n            this.updateSaveButton()\n        }\n    },\n\n    changeIndex: function (ev) {\n        let index = $(ev.target).attr('id'),\n            index_text;\n        if (this.data_form && index){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'index')\n            if (!this.original_data_form_values.index)\n                this.original_data_form_values.index = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [index]\n            if (index === 'none')\n                index_text = xabber.getString(\"groupchat_index_type_none\");\n            if (index === 'local')\n                index_text = xabber.getString(\"groupchat_index_type_local\");\n            if (index === 'global')\n                index_text = xabber.getString(\"groupchat_index_type_global\");\n            this.$('.index-property span').text(index_text);\n            this.updateSaveButton()\n        }\n    },\n\n\n    saveChanges: function() {\n        if (this.$('.btn-save').hasClass('fade-out'))\n            return;\n        this.$('.btn-save').addClass('fade-out')\n        this.group_name_field.$input.prop('disabled', true);\n        this.group_description_field.$input.prop('disabled', true);\n        this.$('.edit-save-preloader.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        let iq = $iq({type: 'set', to: this.model.get('full_jid') || this.model.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        iq = this.account.addDataFormToStanza(iq, this.data_form);\n        this.account.sendIQFast(iq, (result) => {\n            let $result  = $(result),\n                group_info = _.clone(this.model.get('group_info')),\n                attrs = {\n                    name: $result.find('field[var=\"name\"] value').text(),\n                    searchable: $result.find('field[var=\"index\"]').children('value').text(),\n                    model: $result.find('field[var=\"membership\"]').children('value').text(),\n                    description: $result.find('field[var=\"description\"] value').text(),\n                    status: $result.find('field[var=\"status\"]').children('value').text()\n                };\n            _.extend(group_info, attrs);\n            this.model.set('group_info', group_info);\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.hideProperty()\n            this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n            this.resetPanel()\n        }, (error) => {\n\n            let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n            utils.dialogs.error(err_text);\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.hideProperty()\n            this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n        });\n    },\n\n    showEdit: function (ev) {\n        let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        this.parent.$('.group-edit-preloader').html(env.templates.contacts.preloader())\n        this.account.sendIQFast(iq_get_properties, (properties) => {\n            this.data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.original_data_form_values = {}\n            this.model.set('edit_hidden', false);\n            this.parent.scrollToTop();\n            if (this.parent.ps_container.length) {\n                this.parent.ps_container.perfectScrollbar('destroy')\n            }\n            this.ps_container = this.$('.edit-wrap');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.update()\n            this.$('.group-property:not(.privacy-property)').removeClass('disabled')\n            this.group_name_field.$input.hideIf(false)\n            this.group_description_field.$input.hideIf(false)\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.$('.circle-avatar input').prop('disabled', false);\n            this.$('.set-groupchat-avatar-text').hideIf(false);\n            this.$('.group-property').removeClass('property-disabled');\n            this.$('.membership-property .details-icon-right').hideIf(false);\n            this.$('.index-property .details-icon-right').hideIf(false);\n            this.$('.circle-avatar .set-groupchat-avatar').hideIf(false);\n            this.$('.btn-edit').hideIf(false)\n            this.$('.edit-bottom-block').hideIf(false)\n            this.$('.btn-default-restrictions').hideIf(false)\n            this.$('.btn-delete-group').hideIf(false)\n            this.$('.btn-clear-history-chat').hideIf(false)\n            this.$('.btn-back-panel').hideIf(true)\n            this.$('.block-name-panel').hideIf(true)\n            this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n            this.$('.edit-bottom-block .btn-invite').hideIf(true)\n            this.$('.btn-remove-selected').hideIf(true)\n            this.$('.participants-edit-wrap').hideIf(true)\n            this.parent.getInvitations((response) => {\n                let inv_count = $(response).find('query').find('user').length;\n                if (inv_count === 0)\n                    inv_count = '';\n                this.$('.invitations-variant .counted').html(inv_count);\n            });\n            this.model.getBlockedParticipants((response) => {\n                let blocked_count = $(response).find('query').children().length;\n                if (blocked_count === 0)\n                    blocked_count = '';\n                this.$('.blocked-variant .counted').html(blocked_count);\n            });\n            this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n            this.parent.$('.group-edit-preloader').html('')\n            this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n            this.$('.tabs .indicator').remove();\n        }, () => {\n            this.model.set('edit_hidden', false);\n            this.parent.scrollToTop();\n            if (this.parent.ps_container.length) {\n                this.parent.ps_container.perfectScrollbar('destroy')\n            }\n            this.ps_container = this.$('.edit-wrap');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.update()\n            this.group_name_field.$input.prop('disabled', true);\n            this.group_description_field.$input.prop('disabled', true);\n            if (!this.group_description_field.$input.val())\n                this.group_description_field.$input.hideIf(true)\n            this.$('.circle-avatar input').prop('disabled', true);\n            this.$('.set-groupchat-avatar-text').hideIf(true);\n            this.$('.group-property').addClass('property-disabled');\n            this.$('.membership-property .details-icon-right').hideIf(true);\n            this.$('.index-property .details-icon-right').hideIf(true);\n            this.$('.circle-avatar .set-groupchat-avatar').hideIf(true);\n            this.$('.group-property:not(.privacy-property)').addClass('disabled')\n            this.$('.btn-edit').hideIf(true)\n            this.$('.edit-bottom-block').hideIf(true)\n            this.$('.btn-default-restrictions').hideIf(true)\n            this.$('.btn-delete-group').hideIf(true)\n            this.$('.btn-clear-history-chat').hideIf(true)\n            this.$('.btn-back-panel').hideIf(true)\n            this.$('.block-name-panel').hideIf(true)\n            this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n            this.$('.edit-bottom-block .btn-invite').hideIf(true)\n            this.$('.btn-remove-selected').hideIf(true)\n            this.$('.participants-edit-wrap').hideIf(true)\n            let info = this.model.get('group_info') || {};\n            this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n            this.parent.$('.group-edit-preloader').html('')\n            this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n            this.$('.tabs .indicator').remove();\n        });\n    },\n\n    hideEdit: function (ev) {\n        this.model.set('edit_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        };\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'));\n    },\n});\n\nxabber.ContactsBase = Backbone.Collection.extend({\n    model: xabber.Contact\n});\n\nxabber.GroupContacts = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.group = options.group;\n        this.on(\"change\", this.onContactChanged, this);\n    },\n\n    comparator: function (contact1, contact2) {\n        if (xabber.settings.roster.sorting === 'online-first') {\n            let s1 = contact1.get('status'),\n                s2 = contact2.get('status'),\n                sw1 = constants.STATUS_WEIGHTS[s1],\n                sw2 = constants.STATUS_WEIGHTS[s2],\n                sw1_offline = sw1 >= constants.STATUS_WEIGHTS.offline,\n                sw2_offline = sw2 >= constants.STATUS_WEIGHTS.offline;\n            if (sw1_offline ^ sw2_offline) {\n                return sw1_offline ? 1 : -1;\n            }\n        }\n        let name1, name2;\n        name1 = contact1.get('name').toLowerCase();\n        name2 = contact2.get('name').toLowerCase();\n        return name1 < name2 ? -1 : (name1 > name2 ? 1 : 0);\n    },\n\n    onContactChanged: function (contact) {\n        let changed = contact.changed;\n        if (_.has(changed, 'name') || _.has(changed, 'status_updated')) {\n            this.sort();\n            this.trigger('update_contact_item', contact);\n        }\n    }\n});\n\nxabber.Group = Backbone.Model.extend({\n    defaults: {\n        counter: {all: 0, online: 0}\n    },\n\n    initialize: function (attrs, options) {\n        this.account = options.account;\n        attrs.name || (attrs.name = attrs.id);\n        this.set(attrs);\n        this._settings = this.account.groups_settings.get(attrs.name);\n        if (!this._settings)\n            this._settings = this.account.groups_settings.create({name: attrs.name});\n        this.settings = this._settings.attributes;\n        this.contacts = new xabber.GroupContacts(null, {group: this});\n        this.settings_view = new xabber.GroupSettingsView({model: this});\n        this.contacts.on(\"add update_contact_item\", this.updateCounter, this);\n        this.contacts.on(\"destroy\", this.onContactRemoved, this);\n        xabber._roster_settings.on(\"change\", this.onChangedRosterSettings, this);\n    },\n\n    isSpecial: function () {\n        return _.isNumber(this.get('id'));\n    },\n\n    updateCounter: function () {\n        let all = this.contacts.length,\n            online = all - this.contacts.where({status: 'offline'}).length;\n        this.set('counter', {all: all, online: online});\n    },\n\n    renameGroup: function (new_name) {\n        let name = this.get('name'),\n            attrs = _.clone(this.settings);\n        attrs.name = new_name;\n        this._settings.destroy();\n        this._settings = this.account.groups_settings.create(attrs);\n        this.settings = this._settings.attributes;\n        this.set({id: new_name, name: new_name});\n        this.trigger('rename', this, name);\n        _.each(_.clone(this.contacts.models), function (contact) {\n            let groups = _.clone(contact.get('groups')),\n                index = groups.indexOf(name);\n            if (index >= 0) {\n                groups.splice(index, 1);\n            }\n            index = groups.indexOf(new_name);\n            if (index < 0) {\n                groups.push(new_name);\n            }\n            contact.pushInRoster({groups: groups});\n        });\n    },\n\n    deleteGroup: function () {\n        let name = this.get('name');\n        this._settings.destroy();\n        _.each(_.clone(this.contacts.models), function (contact) {\n            let groups = _.clone(contact.get('groups')),\n                index = groups.indexOf(name);\n            if (index >= 0) {\n                groups.splice(index, 1);\n            }\n            contact.pushInRoster({groups: groups});\n        });\n    },\n\n    removeContact: function (contact) {\n        if (this.contacts.get(contact)) {\n            this.contacts.remove(contact);\n            this.onContactRemoved(contact);\n        }\n    },\n\n    onContactRemoved: function (contact) {\n        this.updateCounter();\n        this.trigger('remove_contact', contact);\n        this.contacts.length || this.destroy();\n    },\n\n    onChangedRosterSettings: function () {\n        let changed = xabber._roster_settings.changed;\n        if (_.has(changed, 'show_offline')) {\n            this._settings.trigger('change:show_offline');\n        }\n        if (_.has(changed, 'sorting')) {\n            this.contacts.sort();\n            this._settings.trigger('change:sorting');\n        }\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    }\n});\n\nxabber.GroupView = xabber.BasicView.extend({\n    className: 'roster-group',\n    events: {\n        \"click .group-head\": \"toggle\",\n        \"click .group-head .group-icon\": \"showGroupSettings\",\n        \"mouseover .group-head\": \"showSettingsIcon\",\n        \"mouseleave .group-head\": \"updateGroupIcon\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.updateName();\n        this.updateGroupIcon();\n        this.updateMembersCounter();\n        this.model.contacts.on(\"add\", this.onContactAdded, this);\n        this.model.on(\"remove_contact\", this.onContactRemoved, this);\n        this.model.contacts.on(\"update_contact_item\", this.updateContactItem, this);\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:counter\", this.updateMembersCounter, this);\n        this.model._settings.on(\"change:show_offline\", this.onChangedOfflineSetting, this);\n        this.model._settings.on(\"change:sorting\", this.onChangedSortingSetting, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$el.switchClass('shrank', !expanded);\n        this.$('.arrow').switchClass('mdi-chevron-down', expanded);\n        this.$('.arrow').switchClass('mdi-chevron-right', !expanded);\n        this.$('.roster-contact').showIf(expanded);\n        this.parent.parent.onListChanged();\n    },\n\n    updateGroupIcon: function () {\n        let mdi_icon, show_offline = this.model.settings.show_offline;\n        if (show_offline === 'default') {\n            mdi_icon = 'settings';\n        } else if (show_offline === 'yes') {\n            mdi_icon = 'group-filled';\n        } else if (show_offline === 'no') {\n            mdi_icon = 'group-outline';\n        }\n        this.$('.group-icon').attr('data-mdi', mdi_icon).hideIf(mdi_icon === 'settings');\n    },\n\n    updateName: function () {\n        this.$('.group-name').text(this.model.get('name'));\n    },\n\n    updateMembersCounter: function () {\n        let counter = this.model.get('counter');\n        this.$('.participant-counter').text('('+counter.online+'/'+counter.all+')');\n    },\n\n    onContactAdded: function (contact) {\n        let view = this.addChild(contact.get('jid'), this.item_view, {model: contact});\n        this.updateContactItem(contact);\n    },\n\n    onContactRemoved: function (contact) {\n        this.removeChild(contact.get('jid'));\n        this.parent.parent.onListChanged();\n    },\n\n    updateContactItem: function (contact) {\n        let view = this.child(contact.get('jid'));\n        if (!view) return;\n        let roster_settings = xabber.settings.roster,\n            group_settings = this.model.settings,\n            is_default_show_offline = group_settings.show_offline === 'default',\n            show_offline = group_settings.show_offline === 'yes' ||\n                (is_default_show_offline && roster_settings.show_offline === 'yes'),\n            is_offline = constants.STATUS_WEIGHTS[contact.get('status')] >= 6;\n\n        view.$el.switchClass('invisible', is_offline && !show_offline).detach();\n        let index = this.model.contacts.indexOf(contact);\n        if (index === 0) {\n            this.$('.group-head').after(view.$el);\n        } else {\n            this.$('.roster-contact').eq(index - 1).after(view.$el);\n        }\n        view.$el.showIf(this.data.get('expanded'));\n        this.parent.parent.onListChanged();\n        return view;\n    },\n\n    showSettingsIcon: function () {\n        this.$('.group-icon').attr('data-mdi', 'settings').removeClass('hidden');\n    },\n\n    showGroupSettings: function (ev) {\n        ev.stopPropagation();\n        this.model.showSettings();\n    },\n\n    onChangedOfflineSetting: function () {\n        this.updateGroupIcon();\n        let roster_settings = xabber.settings.roster,\n            group_settings = this.model.settings,\n            is_default_show_offline = group_settings.show_offline === 'default',\n            show_offline = group_settings.show_offline === 'yes' ||\n                (is_default_show_offline && roster_settings.show_offline === 'yes');\n        _.each(this.children, function (view) {\n            let is_offline = constants.STATUS_WEIGHTS[view.model.get('status')] >= 6;\n            view.$el.switchClass('invisible', is_offline && !show_offline);\n        });\n        this.parent.parent.onListChanged();\n    },\n\n    onChangedSortingSetting: function () {\n        _.each(this.children, function (view) { view.$el.detach(); });\n        this.model.contacts.each((c) => { this.updateContactItem(c); });\n        this.parent.parent.onListChanged();\n    }\n});\n\nxabber.GroupRightView = xabber.GroupView.extend({\n    template: templates.group_right,\n    item_view: xabber.ContactItemRightView,\n\n    __initialize: function () {\n        this.data.set('expanded', this.model.settings.expanded);\n    },\n\n    toggle: function () {\n        let expanded = !this.data.get('expanded');\n        this.data.set('expanded', expanded);\n        this.model._settings.save('expanded', expanded);\n    }\n});\n\nxabber.GroupLeftView = xabber.GroupView.extend({\n    template: templates.group_left,\n    item_view: xabber.ContactItemLeftView,\n\n    __initialize: function () {\n        this.data.set('expanded', true);\n    },\n\n    toggle: function (ev) {\n        ev.stopPropagation();\n        this.data.set('expanded', !this.data.get('expanded'));\n    }\n});\n\nxabber.GroupSettingsView = xabber.BasicView.extend({\n    className: 'modal main-modal group-settings',\n    template: templates.group_settings,\n    ps_selector: '.modal-content',\n    avatar_size: constants.AVATAR_SIZES.GROUP_SETTINGS,\n\n    events: {\n        \"change .offline input[type=radio][name=offline]\": \"setOffline\",\n        \"click .btn-apply\": \"applySettings\",\n        \"click .btn-delete\": \"deleteGroup\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this._settings = this.model._settings;\n        let name = this.model.get('name');\n        if (this.model.isSpecial()) {\n            this.$('.group-name input').attr('readonly', true);\n            this.$('.btn-delete').addClass('hidden');\n        }\n        this.model.on(\"destroy\", this.onDestroy, this);\n    },\n\n    render: function () {\n        this.$('.group-name input').val(this.model.get('name'));\n        this.$('.group-name .errors').addClass('hidden');\n        this.$('.offline input[type=radio][name=offline][value='+\n            (this.model.settings.show_offline)+']').prop('checked', true);\n        this.$el.openModal({\n            ready: function () {\n                Materialize.updateTextFields();\n            },\n            complete: this.hide.bind(this)\n        });\n    },\n\n    setOffline: function (ev) {\n        this.model._settings.save('show_offline', ev.target.value);\n    },\n\n    validateName: function (name) {\n        if (!name) {\n            return xabber.getString(\"dialog_add_circle__error__text_input_name\");\n        }\n        if (this.model.collection.get(name)) {\n            return xabber.getString(\"dialog_add_circle__error__text_wrong_name\");\n        }\n    },\n\n    applySettings: function () {\n        let new_name = this.$('.group-name input').val();\n        if (new_name !== this.model.get('name')) {\n            let name_error = this.validateName(new_name);\n            if (name_error) {\n                this.$('.group-name .errors').text(name_error).removeClass('hidden');\n                return;\n            } else {\n                this.model.renameGroup(new_name);\n            }\n        }\n        this.close();\n    },\n\n    deleteGroup: function () {\n        let name = this.model.get('name');\n        utils.dialogs.ask(xabber.getString(\"circle_remove\"), xabber.getString(\"circle_remove_confirm\", [name]), null, { ok_button_text: xabber.getString(\"remove\")})\n            .done((result) => {\n                result && this.model.deleteGroup();\n            });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    onDestroy: function () {\n        this.$el.closeModal({ complete: this.remove.bind(this) });\n    }\n});\n\nxabber.Groups = Backbone.Collection.extend({\n    model: xabber.Group,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.on(\"change:id\", this.sort, this);\n        this.account.on('render_settings', this.render, this);\n        this.account.on('render_single_settings', this.renderSingleAccount, this);\n    },\n\n    comparator: function (a, b) {\n        if (a.isSpecial() === b.isSpecial()) {\n            return a.get('id') < b.get('id') ? -1 : 1;\n        }\n        return a.isSpecial() ? 1 : -1;\n    },\n\n    notSpecial: function () {\n        return this.filter(function (group) { return !group.isSpecial(); });\n    },\n\n    onGroupAdded: function (group) {\n        group.acc_view = new xabber.AccountGroupView({model: group});\n    },\n\n    onGroupAddedSingleAccount: function (group) {\n        group.acc_view = new xabber.AccountGroupView({model: group, single_account: this.single_account});\n    },\n\n    render: function () {\n        this.on(\"add\", this.onGroupAdded, this);\n        this.models.forEach((group) => {\n            group.acc_view = new xabber.AccountGroupView({model: group});\n        });\n    },\n\n    renderSingleAccount: function (single_account) {\n        single_account.$('.groups').html('');\n        !this.rendered_once && this.on(\"add\", this.onGroupAddedSingleAccount, this);\n        this.single_account = single_account\n        this.rendered_once = true\n        this.models.forEach((group) => {\n            group.acc_view = new xabber.AccountGroupView({model: group, single_account: single_account});\n        });\n    }\n});\n\nxabber.Contacts = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on(\"deactivate destroy\", this.removeAllContacts, this);\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    },\n\n    mergeContact: function (attrs) {\n        if (typeof attrs !== \"object\") {\n            attrs = {jid: attrs};\n        }\n        let contact = this.get(attrs.jid);\n        if (contact) {\n            if (attrs.avatar) {\n                attrs.image = attrs.avatar;\n                delete attrs.avatar;\n                contact.cached_image = Images.getCachedImage(attrs.image);\n            }\n            if (attrs.group_chat && attrs.is_deleted) {\n                delete attrs.group_chat;\n            }\n            contact.set(attrs);\n        } else {\n            contact = this.create(attrs, {account: this.account});\n        }\n        return contact;\n    },\n\n    blockContact: function (jid, callback, errback) {\n        let iq = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: jid});\n        this.account.sendIQFast(iq, callback, errback);\n    },\n\n    unblockContact: function (jid, callback, errback) {\n        let iq = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: jid});\n        this.account.sendIQFast(iq, callback, errback);\n    },\n\n    removeAllContacts: function () {\n        _.each(_.clone(this.models), function (contact) {\n            contact.destroy();\n        });\n        this.account.trigger('remove_saved_chat');\n    },\n\n    handlePresence: function (presence, jid) {\n        let contact = this.mergeContact(jid);\n        contact.handlePresence(presence);\n    }\n});\n\nxabber.BlockList = Backbone.Model.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.list = {};\n        this.contacts = this.account.contacts;\n        this.contacts.on(\"add_to_blocklist\", this.onContactAdded, this);\n        this.contacts.on(\"remove_from_blocklist\", this.onContactRemoved, this);\n    },\n\n    length: function () {\n        return Object.keys(this.list).length;\n    },\n\n    isBlocked: function (jid) {\n        return this.list.hasOwnProperty(jid);\n    },\n\n    onContactRemoved: function (jid) {\n        delete this.list[jid];\n    },\n\n    onContactAdded: function (attrs) {\n        this.list[attrs.jid] = attrs;\n    },\n\n    registerHandler: function () {\n        this.account.connection.deleteHandler(this._stanza_handler);\n        this._stanza_handler = this.account.connection.addHandler(\n            this.onBlockingIQ.bind(this),\n            Strophe.NS.BLOCKING, 'iq', \"set\", null, this.account.get('jid')\n        );\n    },\n\n    getFromServer: function () {\n        let iq = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING});\n        this.account.sendIQFast(iq, this.onBlockingIQ.bind(this));\n    },\n\n    onBlockingIQ: function (iq) {\n        let $elem = $(iq).find(`[xmlns=\"${Strophe.NS.BLOCKING}\"]`),\n            tag = $elem[0].tagName.toLowerCase(),\n            blocked = tag.startsWith('block');\n        $elem.find('item').each((idx, item) => {\n            let jid = item.getAttribute('jid'),\n                resource = Strophe.getResourceFromJid(jid),\n                domain = Strophe.getDomainFromJid(jid),\n                attrs = {jid},\n                contact = this.contacts.get(jid);\n            resource && (attrs.resource = true);\n            (domain === jid) && (attrs.domain = true);\n            if (blocked)\n                this.contacts.trigger(\"add_to_blocklist\", attrs);\n            else {\n                this.contacts.trigger(\"remove_from_blocklist\", jid);\n                contact && contact.trigger(\"remove_from_blocklist\", contact);\n            }\n            contact && contact.set('blocked', blocked);\n        });\n        return true;\n    }\n});\n\nxabber.Roster = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.roster_version = options.roster_version || 0;\n        this.groups = this.account.groups;\n        this.contacts = this.account.contacts;\n        this.contacts.on(\"add_to_roster\", this.onContactAdded, this);\n        this.contacts.on(\"change_in_roster\", this.onContactChanged, this);\n        this.contacts.on(\"remove_from_roster\", this.onContactRemoved, this);\n    },\n\n    update: function (contact, event) {\n        let contains = contact.get('in_roster') || contact.get('known');\n        if (contains) {\n            if (!this.get(contact)) {\n                this.add(contact);\n                contact.trigger(\"add_to_roster\", contact);\n            } else if (event === 'change') {\n                contact.trigger(\"change_in_roster\", contact);\n            }\n        } else if (this.get(contact)) {\n            this.remove(contact);\n            contact.trigger(\"remove_from_roster\", contact);\n        }\n    },\n\n    onContactAdded: function (contact) {\n        if (!contact.get('in_roster'))\n            return;\n        let groups = contact.get('groups');\n        if (!groups.length) {\n            this.addContactToGroup(contact, constants.GENERAL_GROUP_ID);\n        } else {\n            _.each(groups, _.bind(this.addContactToGroup, this, contact));\n        }\n    },\n\n    onContactChanged: function (contact) {\n        let changed = contact.changed,\n            known_changed = _.has(changed, 'known'),\n            in_roster_changed = _.has(changed, 'in_roster'),\n            groups_changed = _.has(changed, 'groups');\n        if (in_roster_changed || known_changed || groups_changed) {\n            let groups;\n            if (contact.get('in_roster')) {\n                groups = _.clone(contact.get('groups'));\n                if (!groups.length) {\n                    groups.push(constants.GENERAL_GROUP_ID);\n                }\n            } else if (contact.get('known')) {\n                groups = [];\n            }\n            // TODO: optimize\n            let groups_to_remove = this.groups.filter(function (group) {\n                return !_.contains(groups, group.get('id'));\n            });\n            _.each(groups_to_remove, function (group) {\n                group.removeContact(contact);\n            });\n            _.each(groups, _.bind(this.addContactToGroup, this, contact));\n            contact.trigger('update_groups');\n        }\n    },\n\n    onContactRemoved: function (contact) {\n        _.each(this.groups.filter(), function (group) {\n            group.removeContact(contact);\n        });\n    },\n\n    getGroup: function (name) {\n        let group = this.groups.get(name);\n        if (group)\n            return group;\n        let attrs = {id: name};\n        if (name === constants.GENERAL_GROUP_ID) {\n            attrs.name = xabber.settings.roster.general_group_name;\n        } else if (name === constants.NON_ROSTER_GROUP_ID) {\n            attrs.name = xabber.settings.roster.non_roster_group_name;\n        }\n        return this.groups.create(attrs, {account: this.account});\n    },\n\n    addContactToGroup: function (contact, name) {\n        let group = this.getGroup(name);\n        group.contacts.add(contact);\n    },\n\n    registerHandler: function () {\n        this.account.connection.deleteHandler(this._stanza_handler);\n        this._stanza_handler = this.account.connection.addHandler(\n            this.onRosterIQ.bind(this),\n            Strophe.NS.ROSTER, 'iq', \"set\", null, this.account.get('jid')\n        );\n    },\n\n    syncFromServer: function (options, synchronization_with_stamp, is_first_sync) {\n        options = options || {};\n        let request_attrs = {xmlns: Strophe.NS.SYNCHRONIZATION},\n            cached_conversations_exclude = options.cached_conversations_exclude || [];\n        if (options.stamp)\n            request_attrs.stamp = options.stamp;\n        delete(options.stamp);\n        delete(options.cached_conversations_exclude);\n        let iq = $iq({type: 'get'}).c('query', request_attrs).cnode(new Strophe.RSM(options).toXML());\n        this.account.sendFast(iq, (response) => {\n            this.onSyncIQ(response, request_attrs.stamp, synchronization_with_stamp, is_first_sync, options.last_version_sync, cached_conversations_exclude).then(() => {\n            });\n        });\n    },\n\n    syncCachedConversations: function (iq, request_with_stamp, is_first_sync, cached_conversations) {\n        $(cached_conversations).each((idx, item) => {\n            this.syncConversation(null, null, item.conversation, is_first_sync);\n        });\n    },\n\n    syncConversations: function (iq, request_with_stamp, is_first_sync, cached_conversations) {\n        $(iq).find('conversation').each((idx, item) => {\n            this.syncConversation(iq, request_with_stamp, item, is_first_sync, cached_conversations);\n        });\n    },\n\n    syncConversation: function (iq, request_with_stamp, item, is_first_sync, cached_conversations) {\n        if (!$(item).length || !this.account || this.account.session.get('delete')){\n            return;\n        }\n        if (!iq)\n            item = $($.parseXML(item)).find('conversation')[0];\n        let $item = $(item),\n            jid = $item.attr('jid'), saved = false;\n        if (cached_conversations){\n            $(cached_conversations).each((idx, conv) => {\n                if (!(conv.account_conversation_type && conv.account_conversation_type.split))\n                    return;\n                let cached_conv_type_jid = conv.account_conversation_type.split('/')[0];\n                if ((cached_conv_type_jid === jid) && (conv.account_conversation_type !== ($(item).attr('jid') +  '/' + $(item).attr('type')))){\n                    if ($item.attr('type') === Strophe.NS.GROUP_CHAT || conv.account_conversation_type.includes(Strophe.NS.GROUP_CHAT)){\n                        this.account.cached_sync_conversations.removeFromCachedConversations(conv.account_conversation_type);\n                    }\n                };\n            });\n        }\n        if (this.account.server_features.get(Strophe.NS.XABBER_FAVORITES) && this.account.server_features.get(Strophe.NS.XABBER_FAVORITES).get('from') && jid === this.account.server_features.get(Strophe.NS.XABBER_FAVORITES).get('from'))\n            saved = true;\n        if ($item.attr('type') === Strophe.NS.SYNCHRONIZATION_OLD_OMEMO)\n            return true;\n        let $sync_metadata = $item.children('metadata[node=\"' + Strophe.NS.SYNCHRONIZATION + '\"]'),\n            type = $item.attr('type'),\n            presence = $item.children('presence'),\n            $group_metadata = $item.children('metadata[node=\"' + Strophe.NS.GROUP_CHAT + '\"]'),\n            is_incognito =  type === Strophe.NS.GROUP_CHAT && $group_metadata.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').children('privacy').text() === 'incognito',\n            is_private = is_incognito && $group_metadata.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').children('parent').text(),\n            is_group_chat =  type === Strophe.NS.GROUP_CHAT || is_private || is_incognito,\n            encrypted = type === Strophe.NS.SYNCHRONIZATION_OMEMO,\n            contact = !saved && this.contacts.mergeContact({jid: jid, group_chat: is_group_chat, private_chat: is_private, incognito_chat: is_incognito, is_deleted: $item.attr('status') === 'deleted'}),\n            chat = saved ? this.account.chats.getSavedChat() : this.account.chats.getChat(contact, encrypted && 'encrypted', true),\n            message = $sync_metadata.children('last-message').children('message'),\n            current_call = $item.children('metadata[node=\"' + Strophe.NS.JINGLE_MSG + '\"]').children('call'),\n            $unread_messages = $sync_metadata.children('unread'),\n            chat_timestamp = Math.trunc(Number($item.attr('stamp'))/1000),\n            last_read_msg = $unread_messages.attr('after'),\n            last_delivered_msg = $sync_metadata.children('delivered').attr('id'),\n            last_displayed_msg = $sync_metadata.children('displayed').attr('id'),\n            unread_msgs_count = Number($unread_messages.attr('count')) || 0,\n            is_invite =  message.find('invite').length,\n            msg_retraction_version = $item.children('metadata[node=\"' + Strophe.NS.REWRITE + '\"]').children('retract').attr('version'),\n            msg, options = {synced_msg: true,},\n            current_chat_timestamp = chat.get('last_sync_timestamp');\n        if (current_chat_timestamp && current_chat_timestamp > chat_timestamp){\n            console.log('old_sync_conv');\n            console.log(item);\n            return;\n        }\n        chat.set('last_sync_timestamp', chat_timestamp);\n        if (message.children('stanza-id').length\n            && message.children('stanza-id').attr('id')\n            && chat.retracted_msg_id_list.includes(message.children('stanza-id').attr('id'))){\n            return;\n        };\n        chat.set('sync_type', type);\n        (iq && !($item.attr('status') === 'deleted')) && this.account.cached_sync_conversations.putInCachedConversations({\n            account_conversation_type: $(item).attr('jid') +  '/' + $(item).attr('type'),\n            conversation: item.outerHTML,\n        });\n        if (!chat.item_view.content && (is_invite || encrypted && this.account.omemo)) {\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        }\n        if ($item.attr('pinned') || $item.attr('pinned') === '0'){\n            chat.set('pinned', $item.attr('pinned'));\n        }\n        if (encrypted && this.account.omemo) {\n            chat.set('timestamp', chat_timestamp);\n            chat.set('opened', true);\n            if (!(chat.last_message && chat.last_message.get('message')))\n                chat.item_view.updateEncryptedChat();\n        }\n        if (!saved) {\n            if ($item.attr('mute') || $item.attr('mute') === '0') {\n                if ($item.attr('mute') < (Date.now() / 1000))\n                    chat.set('muted', false);\n                else\n                    chat.set('muted', $item.attr('mute'));\n                this.account.chat_settings && this.account.chat_settings.updateMutedList(contact.get('jid'), $item.attr('mute'));\n                if (contact.details_view_right)\n                    contact.details_view_right.updateNotifications();\n            } else {\n                chat.set('muted', false);\n            }\n        }\n        if ($item.attr('status') === 'archived')\n            chat.set('archived', true);\n        else if ($item.attr('status') === 'active' && !saved)\n            chat.set('archived', false);\n        if ($item.attr('status') === 'deleted') {\n            chat.get('display') && xabber.body.setScreen(xabber.body.screen.get('name'), {right_contact: '', right: undefined});\n            chat.set('opened', false);\n            chat.set('const_unread', 0);\n            this.account.cached_sync_conversations.removeFromCachedConversations($(item).attr('jid') +  '/' + $(item).attr('type'));\n            this.account.chat_settings.updateGroupChatsList(contact.get('jid'), false);\n            xabber.toolbar_view.recountAllMessageCounter();\n            xabber.chats_view.clearSearch();\n            contact && contact.set('sync_deleted', true);\n            if (is_group_chat) {\n                contact && contact.set('in_roster', false);\n                contact && contact.set('known', false);\n                contact && contact.set('removed', true);\n                this.account.cached_roster.removeFromRoster(jid);\n                contact.participants && contact.participants.reset();\n                this.account.groupchat_settings.resetParticipantsList(contact.get('jid'));\n            }\n        }\n        else{\n            contact && contact.set('sync_deleted', false);\n        }\n        if (current_call.length) {\n            let $jingle_message = current_call.children('message'),\n                full_jid = $jingle_message.attr('from'),\n                session_id = $jingle_message.children('propose').attr('id');\n            chat.getCallingAvailability(full_jid, session_id, () => {\n                if (xabber.current_voip_call) {\n                    let reason = Strophe.getBareJidFromJid(full_jid) === Strophe.getBareJidFromJid(xabber.current_voip_call.get('contact_full_jid')) ? 'device_busy' : 'busy';\n                    chat.sendReject({session_id: session_id, reason: reason});\n                    chat.messages.createSystemMessage({\n                        from_jid: this.account.get('jid'),\n                        message: xabber.getString(\"jingle__system_message__cancelled_call\")\n                    });\n                } else {\n                    chat.initIncomingCall(full_jid, session_id);\n                }\n            });\n        }\n        chat.set('last_delivered_id', last_delivered_msg);\n        chat.set('last_displayed_id', last_displayed_msg);\n        chat.set('last_read_msg', last_read_msg);\n        chat.trigger('update_last_read_msg', {sync_update: true});\n        if (!message.length) {\n            chat.set('timestamp', chat_timestamp);\n            if (!(Number(last_delivered_msg) || Number(last_displayed_msg) || Number(last_read_msg))\n                && !chat.item_view.content && !chat.get('group_chat')){\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n            }\n            !chat.messages.length && chat.item_view.updateEmptyChat();\n        }\n        if (request_with_stamp && chat.retraction_version !== 0 && chat.retraction_version < msg_retraction_version)\n            chat.trigger(\"get_retractions_list\");\n        msg_retraction_version && (chat.retraction_version = msg_retraction_version);\n        if (request_with_stamp && chat.item_view && chat.item_view.content && !is_invite) {\n            chat.trigger('get_missed_history', request_with_stamp/1000);\n        }\n        unread_msgs_count && (options.is_unread = true);\n        options.delay = message.children('time');\n        (unread_msgs_count == 0) && (options.sync_timestamp = chat_timestamp);\n        message.length && (msg = this.account.chats.receiveChatMessage(message, options));\n        if (msg) {\n            if (!msg.get('is_unread') && $unread_messages.attr('count') > 0 && !msg.isSenderMe() && !(msg.get('type') === 'system') && ($unread_messages.attr('after') < msg.get('stanza_id') || $unread_messages.attr('after') < msg.get('contact_stanza_id')))//TODO: change to timestamp checking\n                msg.set('is_unread', true);\n            if(!(is_invite || encrypted && this.account.omemo)) {\n                if (msg.isSenderMe() && ((msg.get('stanza_id') == last_displayed_msg) || saved))\n                    msg.set('state', constants.MSG_DISPLAYED);\n                else if (msg.isSenderMe())\n                    msg.set('state', constants.MSG_DELIVERED);\n                this.account.messages.add(msg);\n                if ((chat.last_message && (msg.get('timestamp') > chat.last_message.get('timestamp'))) || !chat.last_message){\n                    chat.last_message = msg;\n                    chat.item_view.updateLastMessage(msg);\n                    msg.get('stanza_id') && chat.set('synced_msg', msg);\n                }\n            }\n            chat.set('first_archive_id', msg.get('stanza_id'));\n        } else if (message.length && !msg){\n            if (!(chat.messages && chat.messages.length)){\n                chat.set('timestamp', chat_timestamp);\n                if (!(Number(last_delivered_msg) || Number(last_displayed_msg) || Number(last_read_msg))\n                    && !chat.item_view.content && !chat.get('group_chat')){\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                }\n                chat.item_view.updateEmptyChat();\n            }\n        }\n        if (!(encrypted && !this.account.omemo)){\n            let last_read_msg_item = chat.messages.get(last_read_msg);\n            if (last_read_msg_item && unread_msgs_count){\n                let unread_msgs = chat.messages.filter(m => m.get('timestamp') > last_read_msg_item.get('timestamp') && !m.isSenderMe());\n                unread_msgs.forEach(message => message.set('is_unread', true));\n                let readen_unread_msgs = chat.messages.filter(m => m.get('timestamp') > last_read_msg_item.get('timestamp') && !m.isSenderMe() && m.get('was_readen')),\n                    last_readen_unread_msg = readen_unread_msgs[readen_unread_msgs.length - 1];\n                readen_unread_msgs.forEach((message) => {\n                    message.set('is_unread', false);\n                });\n                unread_msgs_count = unread_msgs_count - readen_unread_msgs.length;\n                (unread_msgs_count < 0) && (unread_msgs_count = 0);\n                if (last_readen_unread_msg){\n                    chat.sendMarker(last_readen_unread_msg.get('msgid'), 'displayed', last_readen_unread_msg.get('stanza_id'), last_readen_unread_msg.get('contact_stanza_id'), last_readen_unread_msg.get('encrypted') && last_readen_unread_msg.get('ephemeral_timer'), true)\n                }\n            }\n            chat.messages_unread.reset();\n            chat.set('unread', 0);\n            chat.set('const_unread', unread_msgs_count);\n        }\n        if (presence.length)\n            contact && contact.handlePresence(presence[0]);\n        else {\n            contact && contact.set('subscription_request_in', false)\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    onSyncIQ: async function (iq, request_with_stamp, synchronization_with_stamp, is_first_sync, is_last_sync, cached_conversations_exclude) {\n        let sync_timestamp = Number($(iq).children(`query[xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).attr('stamp')),\n            sync_rsm_after = $(iq).find(`query set[xmlns=\"${Strophe.NS.RSM}\"]`).children('last').text();\n        this.account.last_msg_timestamp = Math.round(sync_timestamp/1000);\n        let last_chat_msg_id = $(iq).find('set last');\n        if (!request_with_stamp)\n            last_chat_msg_id.length ? (this.last_chat_msg_id = last_chat_msg_id.text()) : (this.conversations_loaded = true);\n        this.account.set('last_sync', sync_timestamp);\n        this.account.settings.update_settings({last_sync_timestamp: sync_timestamp});\n        xabber.chats_view.hideChatsFeedback();\n        if (!request_with_stamp && this.account.server_features.get(Strophe.NS.XABBER_FAVORITES))\n            this.account.chats.getSavedChat();\n        if (is_first_sync)\n            this.account.set('first_sync', sync_timestamp);\n        if (!$(iq).find('conversation').length || $(iq).find('conversation').length < constants.SYNCHRONIZATION_RSM_MAX ){\n            this.account.cached_sync_conversations.getAllFromCachedConversations((res) => {\n                if (!is_last_sync){\n                    cached_conversations_exclude = cached_conversations_exclude.concat($(iq).find('conversation').map(function () {\n                        return $(this).attr('jid') +  '/' + $(this).attr('type');\n                    }).toArray());\n                    res = res.filter(item => !cached_conversations_exclude.includes(item.account_conversation_type));\n                    if (!this.account.session.get('reconnected'))\n                        this.syncCachedConversations(null, request_with_stamp, is_first_sync, res);\n                }\n                this.syncConversations(iq, request_with_stamp, is_first_sync, res);\n                this.account.cached_sync_conversations.putInCachedConversations({\n                    account_conversation_type: 'last_sync_timestamp',\n                    timestamp: sync_timestamp,\n                });\n                if (!is_last_sync){\n                    if (this.account.server_features.get(Strophe.NS.XABBER_FAVORITES)){\n                        let saved_chat = this.account.chats.getSavedChat();\n                        saved_chat.set('opened', true);\n                        saved_chat.item_view.updateLastMessage();\n                    }\n                    this.account.getAllMessageRetractions((result) => {\n                        let retract_version = $(result).find(`query[xmlns=\"${Strophe.NS.REWRITE}\"]`).attr('version');\n                        if (retract_version > this.account.retraction_version)\n                            this.account.retraction_version = retract_version;\n                    })\n                    this.account.sendPresence();\n                    this.account.dfd_presence.resolve();\n                    this.account.get('first_sync') && this.syncFromServer({stamp: this.account.get('first_sync'), max: constants.SYNCHRONIZATION_RSM_MAX, last_version_sync: true}, true);\n                }\n            });\n        }\n        else if ($(iq).find('conversation').length) {\n            this.account.cached_sync_conversations.getAllFromCachedConversations((res) => {\n                cached_conversations_exclude = cached_conversations_exclude.concat($(iq).find('conversation').map(function () {\n                    return $(this).attr('jid') +  '/' + $(this).attr('type');\n                }).toArray());\n                this.syncConversations(iq, request_with_stamp, is_first_sync, res);\n                let sync_options = {max: constants.SYNCHRONIZATION_RSM_MAX, after: sync_rsm_after};\n                if (request_with_stamp)\n                    sync_options.stamp = request_with_stamp;\n                if (is_last_sync)\n                    sync_options.last_version_sync = true;\n                if (cached_conversations_exclude && cached_conversations_exclude.length)\n                    sync_options.cached_conversations_exclude = cached_conversations_exclude;\n                this.syncFromServer(sync_options);\n            });\n        }\n    },\n\n    getRoster: function () {\n        let request_ver = this.roster_version;\n        this.account.cached_roster.getAllFromRoster((roster_items) => {\n            // $(roster_items).each((idx, roster_item) => {\n            //     this.contacts.mergeContact(roster_item);\n            // });\n            if (!roster_items.length && request_ver != 0) {\n                this.roster_version = 0;\n            }\n            this.getFromServer();\n        });\n    },\n\n    getFromServer: function () {\n        let iq = $iq({type: 'get'}).c('query', {xmlns: Strophe.NS.ROSTER, ver: this.roster_version});\n        this.account.sendIQFast(iq, (iq) => {\n            this.onRosterIQ(iq);\n        });\n    },\n\n    onRosterIQ: function (iq) {\n        let new_roster_version = $(iq).children('query').attr('ver'),\n            iq_type = $(iq).attr('type');\n        $(iq).children('query').find('item').each((idx, item) => {\n            this.onRosterItem(item, iq_type);\n        });\n        if (iq.getAttribute('type') === 'set') {\n            this.account.onSetIQResult(iq);\n        }\n        else {\n            if (iq.getAttribute('type') === 'result') {\n                new_roster_version && (this.roster_version = new_roster_version);\n                this.account.cached_roster.putInRoster({\n                    jid: 'roster_version',\n                    is_version: true,\n                    version: this.roster_version\n                });\n            }\n        }\n        return true;\n    },\n\n    onRosterItem: function (item, iq_type) {\n        let jid = item.getAttribute('jid'), to_send_available;\n        if (jid === this.account.get('jid'))\n            return;\n        let contact = this.contacts.mergeContact(jid),\n            subscription = item.getAttribute(\"subscription\"),\n            subscription_preapproved = item.getAttribute(\"approved\"),\n            ask = item.getAttribute(\"ask\");\n        if (contact.get('invitation') && (subscription === 'both' || subscription === 'to')) {\n            contact.set('invitation', false);\n            contact.trigger('remove_invite');\n        }\n        if (subscription === 'remove') {\n            contact.set({\n                in_roster: false,\n                known: false,\n                name: contact.get('jid'),\n                subscription: undefined,\n                subscription_request_out: false\n            });\n            contact.set('subscription_preapproved', false)\n            this.account.cached_roster.removeFromRoster(jid);\n            return;\n        }\n        let groups = [];\n        $(item).find('group').each(function () {\n            let group = $(this).text();\n            groups.indexOf(group) < 0 && groups.push(group);\n        });\n        let attrs = {\n            subscription: subscription || 'none',\n            in_roster: true,\n            roster_name: item.getAttribute(\"name\"),\n            groups: groups\n        };\n        if (subscription === 'both') {\n            attrs.subscription_request_out = false;\n            attrs.subscription_request_in = false;\n            if (iq_type === 'set')\n                to_send_available = true;\n        }\n        if (subscription === 'from') {\n            attrs.subscription_request_in = false;\n            if (iq_type === 'set')\n                to_send_available = true;\n        }\n        if (subscription === 'to')\n            attrs.subscription_request_out = false;\n        if (ask === 'subscribe')\n            attrs.subscription_request_out = true;\n        else\n            attrs.subscription_request_out = false;\n        attrs.roster_name && (attrs.name = attrs.roster_name);\n        this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && (attrs.subscription_preapproved = subscription_preapproved ? true : subscription_preapproved);\n        contact.set(attrs);\n        contact.updateCachedInfo();\n        if (to_send_available){\n            this.account.sendPresence();\n        }\n    }\n});\n\nxabber.AccountRosterView = xabber.BasicView.extend({\n    className: 'account-roster-wrap',\n\n    events: {\n        \"click .roster-account-info-wrap .status-button\": \"openChangeStatus\",\n        \"click .roster-account-info\": \"toggle\"\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.groups = this.account.groups;\n        this.roster = this.account.roster;\n        this.contacts = this.account.contacts;\n        this.$el.attr('data-jid', this.account.get('jid'));\n        this.$el.appendTo(this.parent.$('.contact-list'));\n        this.$info = this.$('.roster-account-info-wrap');\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.account.on(\"change:name\", this.updateName, this);\n        this.account.on(\"change:image\", this.updateAvatar, this);\n        this.account.on(\"change:status_updated\", this.updateStatus, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.groups.on(\"add\", this.onGroupAdded, this);\n        this.groups.on(\"rename\", this.onGroupRenamed, this);\n        this.groups.on(\"destroy\", this.onGroupRemoved, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n        this.data.set('expanded', true);\n    },\n\n    updateName: function () {\n        this.$info.find('.name').text(this.account.get('name'));\n    },\n\n    updateStatus: function () {\n        this.$info.find('.status').attr('data-status', this.account.get('status'));\n        this.$info.find('.status-message').text(this.account.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.account.cached_image;\n        this.$info.find('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$el.switchClass('shrank', !expanded);\n        this.parent.updateScrollBar();\n    },\n\n    updateGroupPosition: function (view) {\n        view.$el.detach();\n        let index = this.groups.indexOf(view.model);\n        if (index === 0) {\n            this.$info.after(view.$el);\n        } else {\n            this.$('.roster-group').eq(index - 1).after(view.$el);\n        }\n        this.parent.updateScrollBar();\n    },\n\n    onGroupAdded: function (group) {\n        let view = this.addChild(group.get('id'), this.group_view, {model: group});\n        this.updateGroupPosition(view);\n    },\n\n    onGroupRenamed: function (group, old_name) {\n        let view = this.child(old_name);\n        delete this.children[old_name];\n        this.children[group.get('name')] = view;\n        view && this.updateGroupPosition(view);\n    },\n\n    onGroupRemoved: function (group) {\n        this.removeChild(group.get('id'));\n    },\n\n    toggle: function (ev) {\n        this.data.set('expanded', !this.data.get('expanded'));\n    },\n\n    openChangeStatus: function (ev) {\n        if (!xabber.change_status_view)\n            xabber.change_status_view = new xabber.ChangeStatusView();\n        xabber.change_status_view.open(this.account);\n    }\n});\n\nxabber.AccountRosterRightView = xabber.AccountRosterView.extend({\n    template: templates.account_roster_right,\n    group_view: xabber.GroupRightView,\n    avatar_size: constants.AVATAR_SIZES.ROSTER_RIGHT_ACCOUNT_ITEM,\n\n    __initialize: function () {\n        this.contacts.on(\"add_to_roster change_in_roster remove_from_roster\",\n            this.updateCounter, this);\n        this.contacts.on(\"add_to_roster remove_from_roster\",\n            this.updateGlobalCounter, this);\n    },\n\n    updateCounter: function () {\n        if (!this.roster)\n            this.roster = this.account.roster;\n        let all = this.roster.length,\n            online = all - this.roster.where({status: 'offline'}).length;\n        this.$info.find('.counter').text(online + '/' + all);\n    },\n\n    updateGlobalCounter: function () {\n        this.parent.updateCounter();\n    }\n});\n\nxabber.AccountRosterLeftView = xabber.AccountRosterView.extend({\n    template: templates.account_roster_left,\n    group_view: xabber.GroupLeftView,\n    avatar_size: constants.AVATAR_SIZES.ROSTER_LEFT_ACCOUNT_ITEM,\n\n    __initialize: function () {\n        this.$info.find('.jid').text(this.account.get('jid'));\n    },\n\n    search: function (query) {\n        this.$el.removeClass('shrank');\n        this.$('.group-head').addClass('hidden');\n        let count = 0, hashes = {};\n        this.$('.roster-contact').each((idx, item) => {\n            let $item = $(item),\n                jid = $item.data('jid'),\n                contact = this.roster.get(jid);\n            if (!contact) return;\n            if (hashes[contact.hash_id]) {\n                $item.addClass('hidden');\n                return;\n            }\n            hashes[contact.hash_id] = true;\n            let name = contact.get('name').toLowerCase(),\n                hide = name.indexOf(query) < 0 && jid.indexOf(query) < 0;\n            $item.hideIf(hide);\n            hide || count++;\n        });\n        this.$('.roster-account-info-wrap').showIf(count);\n    },\n\n    searchAll: function () {\n        this.$el.switchClass('shrank', !this.data.get('expanded'));\n        this.$('.roster-account-info-wrap').removeClass('hidden');\n        this.$('.group-head').removeClass('hidden');\n        this.$('.list-item').removeClass('hidden');\n    }\n});\n\nxabber.BlockListView = xabber.BasicView.extend({\n    avatar_size: constants.AVATAR_SIZES.CONTACT_BLOCKED_ITEM,\n    events: {\n        \"click .btn-reset-panel\": \"deselectParticipants\",\n        \"click .btn-remove-selected\": \"actionSelectedParticipants\",\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        for (let jid in this.account.blocklist.list) {\n            this.onContactAdded(this.account.blocklist.list[jid], false);\n        };\n        this.updateTabsLabel();\n        this.account.contacts.on(\"add_to_blocklist\", this.onContactAdded, this);\n        this.account.contacts.on(\"remove_from_blocklist\", this.onContactRemoved, this);\n    },\n\n    render: function (options) {\n        this.deselectBlocked();\n    },\n\n    selectUnblock: function (ev) {\n        this.updateUnblockButton();\n    },\n\n    deselectBlocked: function (ev) {\n        this.parent.$('.blocked-contact input').prop('checked', false)\n        this.updateUnblockButton();\n    },\n\n    updateUnblockButton: function () {\n        let has_changes = this.parent.$('.blocked-contact input:checked').length;\n        this.parent.$('.btn-unblock-selected').hideIf(!has_changes);\n        this.parent.$('.btn-deselect-blocked').hideIf(!has_changes);\n        this.parent.$('.btn-block').hideIf(has_changes);\n    },\n\n    unblockSelected: function (ev) {\n        let selected = this.parent.$('.blocked-contact input:checked').closest('.blocked-contact');\n        selected.each((index, item) => {\n            this.unblockContactByJid($(item).attr('data-jid'))\n        });\n    },\n\n    unblockContactByJid: function (jid) {\n        let contact = this.account.contacts.get(jid);\n        if (contact)\n            contact.unblock();\n        else {\n            this.account.contacts.unblockContact(jid);\n        }\n    },\n\n    hideEmptyContainers: function () {\n        let tabs = this.$('.blocked-list:empty');\n        tabs.each((idx, item) => {\n            let $tab = $(item).closest('.settings-block-wrap');\n            $tab.find('.placeholder').removeClass('hidden');\n        });\n        this.updateUnblockButton();\n    },\n\n    onContactAdded: function (attrs) {\n        let rendered;\n        this.$('.blocked-contact').each((idx, item) => { //this construction avoids being destroyed by stupid domain and jid names in blocklist\n            ($(item).attr('data-jid') === attrs.jid) && (rendered = true);\n        });\n        this.$('.blocked-domains').each((idx, item) => { //this construction avoids being destroyed by stupid domain and jid names in blocklist\n            ($(item).attr('data-jid') === attrs.jid) && (rendered = true);\n        });\n        this.parent.$('.blocked-invitations').each((idx, item) => { //this construction avoids being destroyed by stupid domain and jid names in blocklist\n            ($(item).attr('data-jid') === attrs.jid) && (rendered = true);\n        });\n        if (rendered)\n            return;\n        let tmp = templates.contact_blocked_item({jid: attrs.jid});\n        if (attrs.resource) {\n            this.parent.$('.blocked-invitations').append(tmp);\n            this.parent.$('.settings-tab[data-block-name=\"blocklist-invitations\"]').removeClass('hidden');\n            this.parent.$('.blocked-invitations-placeholder').addClass('hidden');\n        }\n        else if (attrs.domain) {\n            this.$('.blocked-domains').append(tmp);\n            this.$('.blocked-domains-placeholder').addClass('hidden');\n        }\n        else {\n            this.$('.blocked-contacts').append(tmp);\n            this.$('.blocked-contacts-placeholder').addClass('hidden');\n        }\n        if (this.parent && this.parent.updateHeight){\n            this.parent.updateBlockedLabel();\n            this.parent.updateHeight();\n            setTimeout(() => {\n                this.parent.updateScrollBar();\n            }, 250)\n        }\n        this.updateTabsLabel();\n    },\n\n    onContactRemoved: function (jid) {\n        let $elem = this.parent.$(`.blocked-contact[data-jid=\"${jid}\"]`);\n        $elem.detach();\n\n        if (this.parent && this.parent.updateHeight){\n            this.parent.updateBlockedLabel();\n            this.parent.updateHeight();\n            setTimeout(() => {\n                this.parent.updateScrollBar();\n            }, 250)\n        }\n        this.updateTabsLabel();\n        this.hideEmptyContainers();\n    },\n\n    updateTabsLabel: function () {\n        if (!(this.account.blocklist && this.account.blocklist.list))\n            return;\n        let contacts, domains, invitations;\n        contacts = domains = invitations = 0;\n\n        for (let jid in this.account.blocklist.list) {\n            let item = this.account.blocklist.list[jid];\n            if (item.resource)\n                invitations++;\n            else if (item.domain)\n                domains++;\n            else\n                contacts++;\n        }\n\n        let contact_label_text = contacts === 0 ? xabber.getString(\"blocked_contacts_empty\") : xabber.getQuantityString(\"blocked_contacts_number_tab_label\", contacts),\n            domains_label_text = domains === 0 ? xabber.getString(\"blocked_domains_empty\") : xabber.getQuantityString(\"blocked_domains_number\", domains),\n            invitations_label_text = invitations === 0 ? xabber.getString(\"blocked_invitations_empty\") : xabber.getQuantityString(\"blocked_invitations_number\", invitations);\n        this.$('.settings-tab[data-block-name=\"blocklist-contacts\"] .settings-block-label').text(contact_label_text);\n        this.$('.settings-tab[data-block-name=\"blocklist-domains\"] .settings-block-label').text(domains_label_text);\n        this.$('.settings-tab[data-block-name=\"blocklist-invitations\"] .settings-block-label').text(invitations_label_text);\n    },\n});\n\nxabber.RosterView = xabber.SearchPanelView.extend({\n    ps_selector: '.contact-list-wrap',\n\n    _initialize: function () {\n        this._settings = xabber._roster_settings;\n        this.model.on(\"activate\", this.updateOneRosterView, this);\n        this.model.on(\"update_order\", this.updateRosterViews, this);\n        this.model.on(\"deactivate destroy\", this.removeRosterView, this);\n        this.on(\"before_hide\", this.saveScrollBarOffset, this);\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    updateOneRosterView: function (account) {\n        let jid = account.get('jid'),\n            view = this.child(jid);\n        if (view) {\n            view.$el.detach();\n        } else if (account.isConnected()) {\n            view = this.addChild(jid, this.account_roster_view, {account: account});\n        } else {\n            return;\n        }\n        let index = this.model.connected.indexOf(account);\n        if (index === 0) {\n            this.$('.contact-list').prepend(view.$el);\n        } else {\n            this.$('.contact-list').children().eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    },\n\n    updateRosterViews: function () {\n        _.each(this.children, function (view) { view.detach(); });\n        this.model.each((account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            view && this.$('.contact-list').append(view.$el);\n        });\n        this.updateScrollBar();\n    },\n\n    removeRosterView: function (account) {\n        this.removeChild(account.get('jid'));\n        this.updateScrollBar();\n    }\n});\n\n\nxabber.RosterLeftView = xabber.RosterView.extend({\n    className: 'roster-left-container container',\n    template: templates.roster_left,\n    ps_settings: {theme: 'item-list'},\n    main_container: '.contact-list',\n    account_roster_view: xabber.AccountRosterLeftView,\n\n    __initialize: function () {\n        this.model.on(\"list_changed\", this.updateLeftIndicator, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n    },\n\n    updateLeftIndicator: function () {\n        this.$el.attr('data-indicator', this.model.connected.length > 1);\n    },\n\n    getContactForItem: function (item) {\n        let $item = $(item),\n            account_jid = $item.parent().parent().data('jid'),\n            jid = $item.data('jid'),\n            roster_view = this.child(account_jid);\n        return roster_view && roster_view.roster.get(jid);\n    },\n\n    render: function (options) {\n        (options.right !== 'chat' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search && options.right === 'chat') && this.clearSearch();\n    },\n\n    searchAll: function () {\n        _.each(this.children, function (view) {\n            view.searchAll();\n        });\n    },\n\n    selectItem: function (id, arrow) {\n        if (!id) {\n            (arrow === 'up') && (this.ps_container[0].scrollTop = 0);\n            return;\n        }\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            this.ps_container[0].scrollTop = 0;\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        if ($selection.length && arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop\n        || $selection[0].clientHeight + $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop < this.ps_container[0].scrollTop))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop;\n        if ($selection.length && arrow === 'up' && ($selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop <= this.ps_container[0].scrollTop\n        || $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop;\n        $selection.addClass('selected');\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = xabber.chats_view.child(selection.data('id'));\n                view && view.open({screen: xabber.body.screen.get('name'), clear_search: false});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.get(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')).hash_id);\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n        }\n    },\n\n    onListChanged: function () {\n        this.updateSearch();\n    }\n});\n\nxabber.RosterSettingsView = xabber.BasicView.extend({\n    className: 'roster-settings-wrap',\n    template: templates.roster_settings,\n\n    events: {\n        \"change .offline-contacts input\": \"setOfflineSetting\",\n        \"change .sorting-contacts input\": \"setSortingSetting\"\n    },\n\n    _initialize: function () {\n        this.$el.appendTo(this.parent.$('.settings-subblock-wrap.contact-list'));\n    },\n\n    render: function () {\n        this.$('.offline-contacts input[type=radio][name=offline-contacts][value='+\n            (this.model.get('show_offline'))+']').prop('checked', true);\n        this.$('.sorting-contacts input[type=radio][name=sorting-contacts][value='+\n            (this.model.get('sorting'))+']').prop('checked', true);\n    },\n\n    setOfflineSetting: function () {\n        this.model.save('show_offline',\n            this.$('.offline-contacts input[type=radio][name=offline-contacts]:checked').val());\n    },\n\n    setSortingSetting: function () {\n        this.model.save('sorting',\n            this.$('.sorting-contacts input[type=radio][name=sorting-contacts]:checked').val());\n    }\n});\n\nxabber.AccountGroupView = xabber.BasicView.extend({\n    className: 'group',\n    template: function () {\n        this.$el.append('<div class=\"group-name one-line\"/><span class=\"group-members-count\"/>');\n    },\n\n    events: {\n        \"click\": \"showGroupSettings\"\n    },\n\n    _initialize: function (options, attrs) {\n        this.$('.group-name').text(this.model.get('name'));\n        this.$('.group-members-count').text(this.model.get('counter').all);\n        let index = this.model.collection.indexOf(this.model),\n            $parent_el;\n        if (options.single_account && options.single_account.model.get('jid') != this.model.account.get('jid'))\n            return;\n        if (options.single_account)\n            $parent_el = options.single_account.$('.groups');\n        else\n            $parent_el = this.model.account.settings_account_modal.$('.groups');\n        if (index === 0) {\n            $parent_el.prepend(this.$el);\n        } else {\n            $parent_el.children().eq(index - 1).after(this.$el);\n        }\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    showGroupSettings: function () {\n        this.model.showSettings();\n    }\n});\n\nxabber.ContactPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap contact-placeholder-wrap noselect',\n    template: templates.contact_placeholder,\n\n    _initialize: function (options) {\n        xabber.on('update_placeholder',this.onPlaceholderUpdate, this);\n    },\n\n    onPlaceholderUpdate: function () {\n        if (xabber.toolbar_view.$('.toolbar-item.jingle-calls.active').length || xabber.toolbar_view.$('.toolbar-item.geolocation-chats.active').length){\n            this.$('.text').text(xabber.getString(\"message_manager_error_not_implemented\"));\n        } else {\n            this.$('.text').text(xabber.getString(\"contact_list__placeholder\"));\n        }\n    },\n});\n\nxabber.AddContactView = xabber.BasicView.extend({\n    className: 'modal main-modal add-contact-modal',\n    template: templates.add_contact,\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .dropdown-content#select-account-for-add-contact\": \"selectAccount\",\n        \"click .existing-group-field label\": \"editGroup\",\n        \"change .new-group-name input\": \"checkNewGroup\",\n        \"keyup .new-group-name input\": \"checkNewGroup\",\n        \"keyup .name-field #new_contact_username\": \"checkJid\",\n        \"focusout .name-field #new_contact_username\": \"focusoutInputField\",\n        \"focusout .new-group-name #new-group-name\": \"addNewGroup\",\n        \"click .btn-add\": \"stepForward\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.group_data = new Backbone.Model;\n        this.group_data.on(\"change\", this.updateGroups, this);\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        let accounts = options.account ? [options.account] : xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('input[name=\"username\"]').val(jid).attr('readonly', !!jid)\n            .removeClass('invalid');\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.dropdown-content#select-account-for-add-contact').empty();\n        _.each(accounts, (account) => {\n            this.$('.dropdown-content#select-account-for-add-contact').append(\n                this.renderAccountItem(account));\n        });\n        this.$('.account-dropdown-wrap').hideIf(accounts.length < 2)\n        this.bindAccount(accounts[0]);\n        this.$('span.errors').text('');\n        this.$el.openModal({\n            ready: () => {\n                Materialize.updateTextFields();\n                this.$('.account-dropdown-wrap').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                });\n                this.$('input[name=\"username\"]').focus();\n            },\n            complete: this.close.bind(this)\n        });\n        return this;\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.account-dropdown-wrap .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n        this.renderGroupsForAccount(account);\n    },\n\n    stepForward: function () {\n        if (this.account.connection && this.account.connection.connected) {\n            let jid = this.$('input[name=username]').val().trim();\n            this.$el.append($(templates.preloader()))\n            this.$('.btn-add').addClass('hidden-disabled');\n            let timeout = setTimeout(() => {\n                this.$('.preloader-wrapper').remove();\n                this.$('.btn-add').removeClass('hidden-disabled');\n                this.addContact()\n            }, 4000);\n\n            this.account.getConnectionForIQ().vcard.get(jid, (vcard) => {\n                    clearTimeout(timeout);\n                    let username = vcard.username ? vcard.username : vcard.fullname ? vcard.fullname : ''\n                    username && this.$('input[name=contact_name]').val(username);\n                    this.$('.preloader-wrapper').remove();\n                    this.$('.btn-add').removeClass('hidden-disabled');\n                    this.addContact()\n                },\n                (err) => {\n                    clearTimeout(timeout);\n                    this.$('.preloader-wrapper').remove();\n                    this.$('.btn-add').removeClass('hidden-disabled');\n                    this.$('input[name=username]').addClass('invalid')\n                        .siblings('.errors').text($(err).find('error text').text());\n                });\n        } else {\n            this.$('.preloader-wrapper').remove();\n            this.$('.btn-add').removeClass('hidden-disabled');\n            this.$('input[name=username]').addClass('invalid')\n                .siblings('.errors').text(xabber.getString(\"NOT_CONNECTED\"));\n        }\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.add_contact_account_item({jid: account.get('jid'), name: account.get('name')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    renderGroupsForAccount: function (account) {\n        this.group_data.set({\n            selected: [],\n            groups: _.map(account.groups.notSpecial(), function (group) {\n                return group.get('name');\n            })\n        }, {silent: true});\n        this.updateGroups();\n    },\n\n    updateGroups: function () {\n        let selected = this.group_data.get('selected');\n        this.$('.groups').html(templates.groups_checkbox_list_contact({\n            groups: _.map(this.group_data.get('groups'), function (name) {\n                return { name: name, id: uuid(), checked: _.contains(selected, name) };\n            })\n        }));\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    editGroup: function (ev) {\n        ev.preventDefault();\n        let $target = $(ev.target),\n            $input = $target.siblings('input'),\n            checked = !$input.prop('checked'),\n            group_name = $input.attr('data-groupname'),\n            selected = _.clone(this.group_data.get('selected')),\n            idx = selected.indexOf(group_name);\n        $input.prop('checked', checked);\n        if (checked) {\n            idx < 0 && selected.push(group_name);\n        } else if (idx >= 0) {\n            selected.splice(idx, 1);\n        }\n        this.group_data.set('selected', selected);\n    },\n\n    checkNewGroup: function (ev) {\n        let name = $(ev.target).val(),\n            $checkbox = this.$('.new-group-checkbox #new_group_checkbox');\n        $checkbox.prop('disabled', !(name && !_.contains(this.group_data.get('groups'), name)));\n        if (ev.keyCode === constants.KEY_ENTER)\n            this.addNewGroup();\n    },\n\n    addNewGroup: function (ev) {\n        ev && ev.preventDefault();\n        if (this.$('.new-group-checkbox #new_group_checkbox').prop('disabled'))\n            return;\n        let $input = this.$('.new-group-name input'),\n            name = $input.val(),\n            groups = _.clone(this.group_data.get('groups')),\n            idx = groups.indexOf(name);\n        if (idx < 0) {\n            let selected = _.clone(this.group_data.get('selected'));\n            selected.push(name);\n            groups.push(name);\n            this.group_data.set({groups: groups, selected: selected});\n        }\n    },\n\n    focusoutInputField: function () {\n        if (!this.$('input[name=username]').val().trim()) {\n            this.$('input[name=username]').removeClass('invalid');\n            this.$('span.errors').text('').addClass('hidden');\n        }\n    },\n\n    checkJid: function (ev) {\n        let jid = this.$('input[name=username]').val().trim(),\n            error_text,\n            regexp_full_jid = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))|(([0-9]{1,3}\\.){3}[0-9]{1,3})|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!regexp_full_jid.test(jid) && jid) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_invalid_jid\");\n        }\n        if (error_text) {\n            this.$('input[name=username]').addClass('invalid')\n                .siblings('.errors').text(error_text);\n        }\n        else {\n            this.$('input[name=username]').removeClass('invalid');\n            this.$('span.errors').text('').addClass('hidden');\n            if (ev.keyCode === constants.KEY_ENTER)\n                this.stepForward();\n        }\n    },\n\n    addContact: function () {\n        this.$('span.errors').text('').addClass('hidden');\n        let jid = this.$('input[name=username]').removeClass('invalid').val().trim(),\n            name = this.$('input[name=contact_name]').removeClass('invalid').val(),\n            groups = this.group_data.get('selected'),\n            contact, error_text,\n            regexp = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (jid)\n            jid = jid.toLowerCase()\n        jid = Strophe.getBareJidFromJid(jid);\n        if (!jid) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_input_username\");\n        } else if (jid === this.account.get('jid')) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_can_not_add_youself\");\n        } else if (!regexp.test(jid)) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_invalid_jid\");\n        }\n        else {\n            contact = this.account.contacts.mergeContact(jid);\n            if (contact.get('in_roster')) {\n                error_text = xabber.getString(\"dialog_add_contact__error__text_already_in_roster\");\n            }\n        }\n        if (error_text) {\n            this.$('input[name=username]').addClass('invalid')\n                .siblings('.errors').text(error_text);\n        } else {\n            !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && contact.set('subscription_preapproved', true);\n            contact.pres('subscribed');\n            contact.set('known', true);\n            contact.set('removed', false);\n            setTimeout(() => {\n                contact.pres('subscribe');\n            }, 500);\n            contact.trigger('presence', contact, 'subscribe_from');\n            contact.trigger(\"open_chat\", contact, {right_force_close: true, force_opened_state: true});\n            this.close();\n        }\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.GroupSettings = Backbone.Model.extend({\n    idAttribute: 'name',\n    defaults: {\n        expanded: true,\n        show_offline: 'default',\n        sorting: 'default',\n        custom_notifications: false,\n        notifications: false,\n        message_preview: false\n    }\n});\n\nxabber.GroupsSettings = Backbone.CollectionWithStorage.extend({\n    model: xabber.GroupSettings,\n\n    _initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on(\"destroy\", this.clearStorage, this);\n        this.fetch();\n    }\n});\n\nxabber.RosterSettings = Backbone.ModelWithStorage.extend({\n\n    defaults: function () {\n        let general_group_name = xabber.getString(\"circles__name_general_circle\"),\n            non_roster_group_name = xabber.getString(\"circles__name_non_roster_circle\");\n        return {\n            pinned: false,\n            show_offline: 'yes',\n            sorting: 'online-first',\n            general_group_name,\n            non_roster_group_name\n        };\n    }\n});\n\nxabber.CachedRoster = Backbone.ModelWithDataBase.extend({\n    putInRoster: function (value, callback) {\n        this.database.put('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromRoster: function (value, callback) {\n        this.database.get('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromRoster: function (callback) {\n        this.database.get_all('roster_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromRoster: function (value, callback) {\n        this.database.remove('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('roster_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('roster_items');\n    }\n});\n\nxabber.CachedSyncСonversations = Backbone.ModelWithDataBase.extend({\n    putInCachedConversations: function (value, callback) {\n        this.database.put('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromCachedConversations: function (value, callback) {\n        this.database.get('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromCachedConversations: function (callback) {\n        this.database.get_all('conversation_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromCachedConversations: function (value, callback) {\n        this.database.remove('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('conversation_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('conversation_items');\n    }\n});\n\nxabber.CachedServerFeatures = Backbone.ModelWithDataBase.extend({\n    putInCachedFeatures: function (value, callback) {\n        this.database.put('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromCachedFeatures: function (value, callback) {\n        this.database.get('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromCachedFeatures: function (callback) {\n        this.database.get_all('server_features_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromCachedFeatures: function (value, callback) {\n        this.database.remove('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('server_features_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('server_features_items');\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.groups_settings = new xabber.GroupsSettings(null, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-groups-settings-' + this.get('jid')\n    });\n    this.cached_roster = new xabber.CachedRoster(null, {\n        name:'cached-roster-list-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'roster_items',\n        primKey: 'jid'\n    });\n    this.cached_sync_conversations = new xabber.CachedSyncСonversations(null, {\n        name:'cached-conversation-list-v108-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'conversation_items',\n        primKey: 'account_conversation_type'\n    });\n    this.cached_server_features = new xabber.CachedServerFeatures(null, {\n        name:'cached-features-list-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'server_features_items',\n        primKey: 'var'\n    });\n\n    this.groupchat_settings = new xabber.GroupChatSettings({id: 'group-chat-settings'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-group-chat-settings-' + this.get('jid'),\n        fetch: 'after'\n    });\n    this.groups = new xabber.Groups(null, {account: this});\n    this.contacts = new xabber.Contacts(null, {account: this});\n\n    this.cached_roster.on(\"database_open_failed\", () => {\n        this.contacts.addCollection(this.roster = new xabber.Roster(null, {account: this, roster_version: 0}));\n        this.trigger('roster_created');\n    });\n\n    this.cached_roster.on(\"database_opened\", () => {\n        this.cached_roster.getFromRoster('roster_version', (res) => {\n            let roster_version = res && res.version ? res.version : 0;\n            this.contacts.addCollection(this.roster = new xabber.Roster(null, {account: this, roster_version: roster_version}));\n            this.trigger('roster_created');\n        });\n    });\n\n    this.blocklist = new xabber.BlockList(null, {account: this});\n\n    this._added_pres_handlers.push(this.contacts.handlePresence.bind(this.contacts));\n\n    this.on(\"ready_to_get_roster\", function () {\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            this.resources.reset();\n            this.contacts.each(function (contact) {\n                contact.resources.reset();\n                contact.resetStatus();\n            });\n            this.cached_roster.getAllFromRoster((roster_items) => {\n                $(roster_items).each((idx, roster_item) => {\n                    if (roster_item.jid === 'roster_version'){\n                        return;\n                    }\n                    this.contacts.mergeContact(roster_item);\n                });\n                if (this.connection && this.connection.do_synchronization && xabber.chats_view) {\n                    let options = {};\n                    this.cached_sync_conversations.getFromCachedConversations('last_sync_timestamp', (res) => {\n                        let last_sync_timestamp = res && res.timestamp ? res.timestamp : null;\n                        !this.roster.last_chat_msg_id && (options.max = constants.SYNCHRONIZATION_RSM_MAX);\n                        last_sync_timestamp && (options.stamp = last_sync_timestamp);\n                        this.roster.syncFromServer(options, Boolean(last_sync_timestamp), true);\n                        this.roster.getRoster();\n                    });\n                }\n                else {\n                    this.roster.getRoster();\n                    this.sendPresence();\n                    this.dfd_presence.resolve();\n                }\n                this.blocklist.getFromServer();\n            });\n        });\n        console.log(this.roster);\n        if (this.roster) {\n            dfd.resolve();\n        } else {\n            this.once('roster_created', () => {\n                dfd.resolve();\n            });\n        }\n    }, this);\n});\n\nxabber.Account.addConnPlugin(function () {\n    this.registerIQHandler();\n    this.registerSyncedIQHandler();\n    if (this.roster) {\n        this.roster.registerHandler();\n    } else {\n        this.once('roster_created', () => {\n            this.roster.registerHandler();\n        });\n    }\n    this.blocklist.registerHandler();\n}, true, true);\n\nxabber.once(\"start\", function () {\n    this._roster_settings = new this.RosterSettings({id: 'roster-settings'},\n        {storage_name: this.getStorageName(), fetch: 'after'});\n    this.settings.roster = this._roster_settings.attributes;\n    this.contacts_view = this.left_panel.addChild('contacts', this.RosterLeftView,\n        {model: this.accounts});\n    this.contact_container = this.right_panel.addChild('details', this.Container);\n    this.details_container = this.right_contact_panel.addChild('details', this.Container);\n    this.contact_placeholder = this.right_panel.addChild('contact_placeholder',\n        this.ContactPlaceholderView);\n    this.add_contact_view = new this.AddContactView();\n    this.on(\"add_contact\", function () {\n        this.add_contact_view.show();\n    }, this);\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.chats,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $msg = env.$msg,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    uuid = env.uuid,\n    Images = utils.images,\n    Emoji = utils.emoji,\n    pretty_date = (timestamp) => { return utils.pretty_date(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'dddd, D MMMM YYYY')},\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\nxabber.Message = Backbone.Model.extend({\n    idAttribute: 'unique_id',\n\n    defaults: function () {\n        let msgid = uuid();\n        return {\n            msgid: msgid,\n            unique_id: msgid,\n            type: 'main',\n            state: constants.MSG_PENDING\n        };\n    },\n\n    initialize: function () {\n        let time = this.get('time'), attrs = {};\n        if (time) {\n            attrs.timestamp = Number(moment(time));\n        } else {\n            attrs.timestamp = moment.now();\n            attrs.time = moment(attrs.timestamp).format();\n        }\n        if (!this.get('origin_id'))\n            (this.isSenderMe() && !this.get('synced_from_server') && !this.get('carbon_copied') && !this.get('is_archived')) && this.set('origin_id', this.get('msgid'));\n        this.updateUniqueId();\n        this.set(attrs);\n        this.on(\"change:origin_id change:stanza_id change:archived_id\", this.updateUniqueId, this);\n    },\n\n    updateUniqueId: function () {\n        this.set('unique_id',  this.get('stanza_id') || this.get('archived_id') || this.get('origin_id') || this.get('msgid'));\n    },\n\n    destroyOnEcho: function () {\n        this.set('state', constants.MSG_DELIVERED);\n        if (this.collection && this.collection.chat && this.collection.chat.item_view && this.collection.chat.item_view.content)\n            this.collection.chat.item_view.content.removeMessage(this);\n        else\n            this.destroy();\n    },\n\n    getText: function () {\n        let forwarded_message = this.get('forwarded_message');\n        if (forwarded_message && forwarded_message.length) {\n            return forwarded_message[0].get('message');\n        }\n        return this.get('message');\n    },\n\n    getState: function () {\n        return constants.MSG_STATE[this.get('state')];\n    },\n\n    getVerboseState: function () {\n        let state = xabber.getString(constants.MSG_VERBOSE_STATE[this.get('state')]);\n        if (this.account) {\n            if (!this.account.isOnline())\n                state = xabber.getString(\"account_is_offline\");\n        }\n        else if (!this.collection.account.isOnline())\n            state = xabber.getString(\"account_is_offline\");\n        return state;\n    },\n\n    isSenderMe: function () {\n        if (this.account)\n            return this.account.get('jid') === this.get('from_jid');\n        else if (this.collection && this.collection.account)\n            return this.collection.account.get('jid') === this.get('from_jid');\n        else\n            false;\n    },\n\n    handleEphemeralMessage: function () {\n        if (this.collection.account.omemo){\n            this.collection.account.omemo.cached_messages.putMessage(this.collection.chat.contact, this.get('stanza_id'), {ephemeral_removed: true});\n        }\n        if (!this.collection.chat.item_view.content)\n            this.collection.chat.item_view.content = new xabber.ChatContentView({chat_item: this.collection.chat.item_view});\n        this.collection.chat.item_view.content.removeMessage(this);\n    },\n\n    checkEphemeralTimer: function () {\n        if (this.get('ethemeral_removed') || !this.get('displayed_time'))\n            return;\n\n        let date = this.get('displayed_time');\n\n        let msgDate = new Date(date),\n            currentDate = new Date(),\n            seconds = (currentDate.getTime() - msgDate.getTime()) / 1000;\n\n        let time_difference = this.get('ephemeral_timer') - seconds;\n        clearTimeout(this.ephemeral_timeout);\n        if (time_difference <= 0){\n            this.handleEphemeralMessage();\n        } else {\n            this.ephemeral_timeout = setTimeout(() => {\n                this.handleEphemeralMessage();\n            }, (time_difference * 1000))\n        }\n    },\n});\n\nxabber.MessagesBase = Backbone.Collection.extend({\n    model: xabber.Message,\n});\n\n  xabber.SearchedMessages = xabber.MessagesBase.extend({\n      comparator: 'timestamp',\n\n      initialize: function () {\n          this.collections = [];\n          this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n          this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n      },\n\n      addCollection: function (collection) {\n          this.collections.push(collection);\n      },\n\n      updateInCollections: function (event, contact) {\n          _.each(this.collections, function (collection) {\n              collection.update(contact, event);\n          });\n      }\n  });\n\n  xabber.Messages = Backbone.Collection.extend({\n    model: xabber.Message,\n    comparator: 'timestamp',\n\n    initialize: function (models, options) {\n        this.chat = options.chat;\n        this.account = options.account;\n    },\n\n    checkEphemeralTimers: function (models, options) {\n        let displayed_time,\n            ephemeral_msgs = this.filter(msg => msg.get('ephemeral_timer'));\n        ephemeral_msgs.reverse().forEach((msg) => {\n            if (msg.get('is_unread') || (msg.isSenderMe() && msg.get('state') === constants.MSG_DELIVERED))\n                return;\n            if (msg.get('displayed_time') && !msg.get('dynamic_displayed_time'))\n                displayed_time = msg.get('displayed_time');\n            else if (displayed_time){\n                msg.set('dynamic_displayed_time', true)\n                msg.set('displayed_time', displayed_time);\n            }\n            msg.checkEphemeralTimer();\n        });\n    },\n\n    createInvitationFromStanza: function ($message, options) {\n        options = options || {};\n        let $invite_item = $message.find('invite'),\n            full_jid = $invite_item.attr('jid') || $message.attr('from'),\n            $delay = options.delay || $message.children('delay'),\n            from_jid = Strophe.getBareJidFromJid(full_jid),\n            body = $message.children('body').text(),\n            markable = $message.find('markable').length > 0,\n            msgid = $message.attr('id'),\n            archive_id = $message.children('archived').attr('id'),\n            origin_id = $message.children('origin-id').attr('id'),\n            unique_id = options.stanza_id || archive_id || origin_id || msgid,\n            message = unique_id && this.get(unique_id),\n            $group_info = $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]'),\n            is_private_invitation,\n            group_info_attributes = {};\n\n\n        if (!message && unique_id){\n            unique_id = origin_id || options.stanza_id || archive_id || msgid;\n            message = this.get(unique_id);\n        }\n\n        if (message)\n            return message;\n\n        if (!from_jid)\n            return;\n\n        let attrs = {\n            xml: options.xml || $message[0],\n            carbon_copied: options.carbon_copied && !options.is_archived,\n            markable: markable,\n            msgid: msgid,\n            is_forwarded: options.is_forwarded,\n            forwarded_message: options.forwarded_message || null,\n            from_jid: from_jid,\n            origin_id: origin_id,\n            stanza_id: options.stanza_id,\n            archive_id: archive_id,\n            contact_stanza_id: options.contact_stanza_id,\n            is_archived: options.is_archived\n        };\n\n        $delay.length && (attrs.time = $delay.attr('stamp'));\n        options.synced_msg && (attrs.synced_invitation_from_server = true);\n        body && (attrs.message = body);\n\n        let contact = this.account.contacts.mergeContact({jid: Strophe.getBareJidFromJid(from_jid), group_chat: true}),\n            chat = this.account.chats.getChat(contact);\n\n        !chat.item_view.content && (chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view}));\n\n        contact.set('in_roster', false);\n        if ($group_info.length) {\n            let name = $group_info.find('name').text(),\n                model = $group_info.find('membership').text(),\n                privacy = $group_info.find('privacy').text(),\n                searchable = $group_info.find('index').text(),\n                parent_chat = $group_info.find('parent-chat').text(),\n                description = $group_info.find('description').text();\n            name && (group_info_attributes.name = name);\n            model && (group_info_attributes.model = name);\n            privacy && (group_info_attributes.privacy = privacy);\n            searchable && (group_info_attributes.searchable = searchable);\n            description && (group_info_attributes.description = description);\n            parent_chat.length && (is_private_invitation = true);\n            is_private_invitation && contact.set('private_chat', true);\n            privacy === 'incognito' && contact.set('incognito_chat', true);\n            let prev_group_info = contact.get('group_info') || {};\n            _.extend(prev_group_info, group_info_attributes);\n            contact.set('group_info', prev_group_info);\n        }\n\n        let invite_msg = chat.messages.createSystemMessage(_.extend(attrs, {\n            from_jid: from_jid,\n            auth_request: true,\n            invite: true,\n            private_invite: is_private_invitation || false,\n            is_accepted: false,\n            silent: false,\n            message: $message.find('reason').text()\n        }));\n        return invite_msg;\n    },\n\n    createFromStanza: function ($message, options) {\n        options || (options = {});\n        let $delay = options.delay || $message.children('delay'),\n            full_jid = $message.attr('from') || options.from_jid,\n            from_jid = Strophe.getBareJidFromJid(full_jid),\n            body = $message.children('body').length ? $message.children('body').text() : $message.children('envelope').children('content').children('body').text(),\n            markable = $message.find('markable').length > 0,\n            archive_id = $message.children('archived').attr('id'),\n            origin_id = $message.children('origin-id').attr('id'),\n            msgid = $message.attr('id'),\n            unique_id = options.stanza_id || archive_id || origin_id || msgid,\n            message = unique_id && this.get(unique_id);\n\n        if (!message && unique_id){\n            unique_id = origin_id || options.stanza_id || archive_id || msgid;\n            message = this.get(unique_id);\n        }\n        if (!message && this.chat && (this.chat.get('saved') || this.chat.get('group_chat'))){\n            message = this.findWhere({'origin_id': origin_id});\n        }\n        if (options.replaced) {\n            let conversation = $message.children('replace').attr('conversation');\n            if ($message.children('replace').children('message').children(`encrypted[xmlns=\"${Strophe.NS.SYNCHRONIZATION_OLD_OMEMO}\"]`).length)\n                return;\n            if ($message.children('replace').children('message').children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length && this.account.omemo && !options.forwarded) {\n                this.account.omemo.receiveChatMessage($message, _.extend(options, {from_jid: conversation, conversation: conversation}));\n                return;\n            }\n            $message = $message.children('replace').children('message');\n            body = $message.children('body').length ? $message.children('body').text() : $message.children('envelope').children('content').children('body').text();\n            let sid = $message.children('stanza-id').first().attr('id');\n            message = this.find(m => m.get('stanza_id') === sid || m.get('contact_stanza_id') === sid);\n            if (!message)\n                return;\n            from_jid = message.get('from_jid');\n            msgid = message.get('msgid');\n            let xml = message.get('xml');\n            xml.innerHTML = $message[0].innerHTML;\n            options.xml = xml;\n            options.forwarded_message = message.get('forwarded_message');\n        }\n\n        if (message && !options.replaced && !options.context_message && !options.is_unread_archived && !options.searched_message && !options.pinned_message && !options.participant_message && !options.echo_msg && !options.is_searched) {\n            if ($message.find('[xmlns=\"' + Strophe.NS.EPHEMERAL + '\"]').length && !$message.find('[xmlns=\"' + Strophe.NS.EPHEMERAL + '\"]').closest('system-message').length && options.encrypted){\n                message.set('ephemeral_timer', $message.find('[xmlns=\"' + Strophe.NS.EPHEMERAL + '\"]').attr('timer'));\n                options.sync_timestamp && message.set('displayed_time', options.sync_timestamp)\n                if (this.chat.contact){\n                    let cached_msg = this.account.omemo.cached_messages.getMessage(this.chat.contact, $message.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'));\n                    if (cached_msg && cached_msg.envelope && cached_msg.displayed_time){\n                        message.set('displayed_time', cached_msg.displayed_time)\n                    }\n                }\n                message.collection.checkEphemeralTimers();\n            }\n            return message;\n        }\n\n        let attrs = {\n                xml: options.xml || $message[0],\n                original_message: body,\n                carbon_copied: options.carbon_copied && !options.is_archived,\n                markable: markable,\n                msgid: msgid,\n                is_forwarded: options.is_forwarded,\n                forwarded_message: options.forwarded_message || null,\n                from_jid: from_jid,\n                contact_stanza_id: options.contact_stanza_id,\n                is_archived: options.is_archived,\n                is_unread_archived: options.is_unread_archived,\n                is_between_anchors: options.is_between_anchors,\n                not_encrypted: options.not_encrypted || null,\n                not_verified_device: options.not_verified_device || null,\n                not_verified_device_no_device: options.not_verified_device_no_device || null,\n                device_id: options.device_id || null,\n            },\n            mentions = [], blockquotes = [], markups = [], mutable_content = [], files = [], images = [], videos = [], locations = [], link_references = [];\n\n        options.encrypted && _.extend(attrs, {encrypted: true});\n        options.hasOwnProperty('is_trusted') && _.extend(attrs, {is_trusted: options.is_trusted});\n        let references = $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n            $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`) :\n            $message.children('envelope').children('content').children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`);\n\n        references.each((idx, reference) => {\n            let $reference = $(reference),\n                type = $reference.attr('type'),\n                begin = parseInt($reference.attr('begin')),\n                end = parseInt($reference.attr('end'));\n            if (type === 'decoration') {\n                if ($reference.children(`mention[xmlns=\"${Strophe.NS.MARKUP}\"]`).length) {\n                    let $mention = $reference.children(`mention[xmlns=\"${Strophe.NS.MARKUP}\"]`),\n                        target = $mention.text(),\n                        is_gc = $mention.attr('node') === Strophe.NS.GROUP_CHAT ? true : false;\n                    mentions.push({start: begin, end: end, target: target, is_gc: is_gc});\n                } else {\n                    let markup = [];\n                    $reference.children().each((i, child_ref) => {\n                        if (constants.MARKUP_TAGS.indexOf(child_ref.tagName) > -1 && $(child_ref).attr('xmlns') === Strophe.NS.MARKUP) {\n                            if (child_ref.tagName === 'link')\n                                markup.push({type: child_ref.tagName, uri: $(child_ref).text()});\n                            else if (child_ref.tagName === 'quote') {\n                                blockquotes.push({start: begin, end: end});\n                            } else\n                                markup.push(child_ref.tagName);\n                        }\n                    });\n                    markup.length && markups.push({start: begin, end: end, markup: markup});\n                }\n            } else if (type === 'mutable') {\n                let $geolocation = $reference.children(`geoloc[xmlns=\"${Strophe.NS.GEOLOC}\"]`).first(),\n                    loc_attrs = {};\n                if ($geolocation.children('lat').text() && $geolocation.children('lon').text()){\n                    loc_attrs = {\n                        lat: $geolocation.children('lat').text(),\n                        lon: $geolocation.children('lon').text()\n                    }\n                    locations.push(loc_attrs);\n                    mutable_content.push({ start: begin, end: end, type: 'geolocation'});\n                };\n                if ($reference.children(`ogp[xmlns=\"${Strophe.NS.OGP}\"]`).length) {\n                    let $ogp = $reference.children(`ogp[xmlns=\"${Strophe.NS.OGP}\"]`).first(),\n                        link_reference_attrs = {};\n                    if ($ogp.length) {\n                        link_reference_attrs = {\n                            site: $ogp.children('meta[property=\"og:site_name\"]').attr('content'),\n                            type: $ogp.children('meta[property=\"og:type\"]').attr('content'),\n                            url: $ogp.children('meta[property=\"og:url\"]').attr('content'),\n                            description: $ogp.children('meta[property=\"og:description\"]').attr('content'),\n                            title: $ogp.children('meta[property=\"og:title\"]').attr('content'),\n                            image: $ogp.children('meta[property=\"og:image\"]').attr('content'),\n                            image_width: $ogp.children('meta[property=\"og:image:width\"]').attr('content'),\n                            image_height: $ogp.children('meta[property=\"og:image:height\"]').attr('content'),\n                            video_url: $ogp.children('meta[property=\"og:video:url\"]').attr('content'),\n                            original_text: $ogp.attr('url'),\n                            start: begin,\n                            end: end,\n                        }\n                        link_references.push(link_reference_attrs);\n                        mutable_content.push({start: begin, end: end, type: 'link_reference'});\n                    };\n                }\n                let $file_sharing = $reference.find(`file-sharing[xmlns=\"${Strophe.NS.FILES}\"]`).first();\n                if ($reference.children('forwarded').length)\n                    mutable_content.push({ start: begin, end: end, type: 'forward'});\n                else if ($file_sharing.length) {\n                    let type = $file_sharing.parent(`voice-message[xmlns=\"${Strophe.NS.VOICE_MESSAGE}\"]`).length ? 'voice' : 'file',\n                        $file = $file_sharing.children('file'), file_attrs = {}, sources = [];\n                    mutable_content.push({ start: begin, end: end, type: type});\n                    $file_sharing.children('sources').children('uri').each((i, uri) => {sources.push($(uri).text());});\n                    file_attrs = {\n                        name: $file.children('name').text(),\n                        hash: $file.children(`hash[xmlns=\"${Strophe.NS.HASH}\"]`).text(),\n                        size: $file.children('size').text(),\n                        type: $file.children('media-type').text(),\n                        duration: $file.children('duration').text(),\n                        description: $file.children('desc').text(),\n                        height: $file.children('height').text(),\n                        width: $file.children('width').text(),\n                        thumbnail: $file.children(`thumbnail[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA_THUMBNAIL}\"]`).attr('uri'),\n                        voice: type === 'voice',\n                        sources: sources\n                    };\n                    if (sources[0].indexOf('aescbc') == 0) {\n                        let uri = sources[0].replace(/^aescbc/, 'https'),\n                            key = utils.fromBase64toArrayBuffer(uri.slice(uri.length - 64));\n                        uri = uri.slice(0, uri.length - 64 - 1);\n                        _.extend(file_attrs, {sources: [uri], key: key});\n                        attrs.has_encrypted_files = true;\n                    }\n                    if (this.getFileType($file.children('media-type').text()) === 'image')\n                        images.push(file_attrs);\n                    else if (this.getFileType($file.children('media-type').text()) === 'video')\n                        videos.push(file_attrs);\n                    else\n                        files.push(file_attrs);\n                }\n            } else if (type === 'data') {}\n        });\n\n        $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').each((idx, x_elem) => {\n            let $reference = $(x_elem).children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`),\n                $user = $reference.children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).first();\n                if ($reference.length) {\n                    let begin = parseInt($reference.attr('begin')),\n                        end = parseInt($reference.attr('end'));\n                    mutable_content.push({start: begin, end: end, type: 'groupchat'});\n                    let user_id = $user.attr('id'),\n                        user_jid = $user.children('jid').text();\n                    _.extend(attrs, {\n                        user_info: {\n                            id: user_id,\n                            jid: user_jid,\n                            nickname: $user.children('nickname').text() || user_jid || user_id,\n                            role: $user.children('role').text(),\n                            avatar: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('id'),\n                            avatar_url: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('url'),\n                            badge: $user.children('badge').text()\n                        },\n                        from_jid: user_jid || user_id,\n                        groupchat_jid: Strophe.getBareJidFromJid(options.is_sender ? $message.attr('to') : $message.attr('from'))\n                    });\n                }\n        });\n\n        blockquotes.length && (attrs.blockquotes = blockquotes);\n        mentions.length && (attrs.mentions = mentions);\n        markups.length && (attrs.markups = markups);\n        images.length && (attrs.images = images);\n        videos.length && (attrs.videos = videos);\n        files.length && (attrs.files = files);\n        locations.length && (attrs.locations = locations);\n        link_references.length && (attrs.link_references = link_references);\n        attrs.mutable_content = mutable_content;\n        if (!attrs.mutable_content.length)\n            attrs.forwarded_message = null;\n\n        options.stanza_id && (attrs.stanza_id = options.stanza_id);\n        origin_id && (attrs.origin_id = origin_id);\n        archive_id && (attrs.archive_id = archive_id);\n\n        (options.replaced || mentions.length) && (attrs.mentions = mentions);\n        (options.replaced || markups.length) && (attrs.markups = markups);\n        (options.replaced || files.length) && (attrs.files = files);\n        (options.replaced || images.length) && (attrs.images = images);\n        (options.replaced || videos.length) && (attrs.videos = videos);\n        (options.replaced || link_references.length) && (attrs.link_references = link_references);\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            attrs.type = 'system';\n            attrs.participants_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n        }\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`).length &&\n            $message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`).find('field[var=\"FORM_TYPE\"][type=\"hidden\"] value').text() === Strophe.NS.WEBCHAT) {\n            let addresses = [];\n            $message.children(`addresses[xmlns=\"${Strophe.NS.ADDRESS}\"]`).children('address').each((idx, address) => {\n                let $address = $(address);\n                addresses.push({type: $address.attr('type'), jid: $address.attr('jid')});\n            });\n            attrs.data_form = _.extend(this.account.parseDataForm($message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`)), {addresses: addresses});\n        }\n\n        body && (body = utils.slice_pretty_body(body, mutable_content));\n\n        if (!attrs.forwarded_message && body.removeEmoji() === \"\")\n            attrs.only_emoji = Array.from(body).length;\n\n        attrs.message = body;\n\n        options.echo_msg && ($delay = $message.children('time'));\n        $delay.length && (attrs.time = $delay.attr('stamp'));\n        (attrs.carbon_copied || from_jid == this.account.get('jid') && (options.is_archived || options.synced_msg)) && (attrs.state = constants.MSG_SENT);\n        options.synced_msg && (attrs.synced_from_server = true);\n        options.missed_history && (attrs.missed_msg = true);\n        if (options.is_unread_archived && (attrs.type !== 'system')){\n            let last_read_msg = this.find(m => this.chat.get('last_read_msg') && (m.get('stanza_id') === this.chat.get('last_read_msg') || m.get('contact_stanza_id') === this.chat.get('last_read_msg')));\n            if (last_read_msg){\n                if (Number(moment(attrs.time)) > last_read_msg.get('timestamp'))\n                    attrs.is_unread = true\n            } else {\n                attrs.is_unread = true\n            }\n        }\n        if (options.echo_msg) {\n            attrs.state = constants.MSG_DELIVERED;\n            attrs.timestamp = Number(moment(attrs.time));\n            attrs.from_jid = this.account.get('jid');\n        }\n        (options.context_message || options.participant_message || options.searched_message || options.is_searched) && (attrs.state = constants.MSG_ARCHIVED);\n\n        if (options.carbon_copied && options.encrypted && this.chat && this.chat.item_view && !this.chat.item_view.content)\n            this.chat.item_view.content = new xabber.ChatContentView({chat_item: this.chat.item_view});\n\n        if (options.pinned_message)\n            return this.account.pinned_messages.create(attrs);\n\n        if (options.participant_message)\n            return this.account.participant_messages.create(attrs);\n\n        if (options.searched_message) {\n            options.query && (attrs.query = options.query);\n            options.searched_in_contact_messages && (attrs.searched_in_contact_messages = options.searched_in_contact_messages)\n            return this.account.searched_messages.create(attrs);\n        }\n\n        if (options.context_message)\n            return this.account.context_messages.create(attrs);\n\n        if (options.echo_msg && message) {\n            message.destroyOnEcho();\n        }\n        if ((options.replaced || options.encrypted && options.is_unread_archived) && message) {\n            message.set(attrs);\n            return;\n        }\n\n        if (options.is_searched) {\n            let msg_contact = Strophe.getBareJidFromJid($message.attr('from'));\n            (msg_contact === this.account.get('jid')) && (msg_contact = Strophe.getBareJidFromJid($message.attr('to')));\n            message = xabber.all_searched_messages.create(attrs);\n            message.contact = this.account.contacts.mergeContact(msg_contact);\n            message.account = this.account;\n            return message;\n        }\n\n        if ($message.find('[xmlns=\"' + Strophe.NS.EPHEMERAL + '\"]').length && !$message.find('[xmlns=\"' + Strophe.NS.EPHEMERAL + '\"]').closest('system-message').length && options.encrypted) {\n            attrs.ephemeral_timer = $message.find('[xmlns=\"' + Strophe.NS.EPHEMERAL + '\"]').attr('timer');\n            options.sync_timestamp && (attrs.displayed_time = options.sync_timestamp);\n            if (this.chat.contact){\n                let cached_msg = this.account.omemo.cached_messages.getMessage(this.chat.contact, $message.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'));\n                if (cached_msg && cached_msg.envelope && cached_msg.displayed_time){\n                    attrs.displayed_time = cached_msg.displayed_time;\n                }\n            }\n        }\n\n        if (!options.synced_msg && this.chat && this.chat.item_view && !this.chat.item_view.content){\n            this.chat.item_view.content = new xabber.ChatContentView({chat_item: this.chat.item_view});\n        }\n        message = this.create(attrs);\n\n        (options.encrypted && options.is_unread) && message.set('is_unread', true);\n\n        if ($message.find('[xmlns=\"' + Strophe.NS.EPHEMERAL + '\"]').length && !$message.find('[xmlns=\"' + Strophe.NS.EPHEMERAL + '\"]').closest('system-message').length && options.encrypted){\n            message.collection.checkEphemeralTimers();\n        }\n        return message;\n    },\n\n      decryptFile: async function (uri, key) {\n          return new Promise((resolve, reject) => {\n              fetch(uri).then((r) => {\n                  r.blob().then((blob) => {\n                      let filereader = new FileReader();\n                      filereader.onloadend = () => {\n                          let arrayBuffer = filereader.result,\n                              exportedMasterKey = key.slice(0, 32),\n                              HMACData = key.slice(32);\n                          utils.AES.decrypt(exportedMasterKey, HMACData, arrayBuffer).then((enc_file) => {\n                              resolve(enc_file);\n                          });\n                      };\n                      filereader.readAsArrayBuffer(blob);\n                  });\n              }).catch(() => {\n                  resolve(null)\n              });\n          });\n      },\n\n    getFilename: function (url_media) {\n        let idx = url_media.lastIndexOf(\"/\");\n        return url_media.substr(idx + 1, url_media.length - 1);\n    },\n\n    getFileType: function(full_type) {\n        let end_idx = (full_type.indexOf(\"/\") > -1) ? full_type.indexOf(\"/\") : full_type.length,\n            type = full_type.slice(0, end_idx);\n        return type;\n    },\n\n    createSystemMessage: function (attrs) {\n        return this.create(_.extend({\n            type: 'system',\n            silent: true,\n            state: constants.MSG_DISPLAYED\n        }, attrs));\n    }\n});\n\n\nxabber.EphemeralTimerSelector = xabber.BasicView.extend({\n    className: 'modal main-modal change-ephemeral-timer-modal',\n    ps_selector: '.modal-content',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    template: templates.ephemeral_timer_selector,\n\n    events: {\n        \"click .btn-set-ephemeral-timer\": \"changeTimer\",\n    },\n\n    render: function (options) {\n        this.model = options.model;\n        this.account = options.account;\n        this.updateColorScheme();\n        this.updateScrollBar();\n        if (this.model.get('chat_ephemeral_timer')){\n            this.updateSelectedTimer();\n        }\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    onRender: function (options) {\n        if (this.model.get('chat_ephemeral_timer')){\n            this.scrollToChildPlus(this.$(`.btn-set-ephemeral-timer.selected`), -45);\n        }\n\n    },\n\n    updateSelectedTimer: function () {\n        let $el = this.$(`.btn-set-ephemeral-timer[data-value=\"${this.model.get('chat_ephemeral_timer')}\"`);\n        this.$(`.btn-set-ephemeral-timer`).removeClass('selected');\n        $el.addClass('selected');\n    },\n\n    changeTimer: function (ev) {\n        let $el = $(ev.target).closest('.btn-set-ephemeral-timer');\n        this.$(`.btn-set-ephemeral-timer`).removeClass('selected');\n        $el.addClass('selected')\n        this.model.set('chat_ephemeral_timer', $el.attr('data-value'));\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\n  xabber.JingleMessage = Backbone.Model.extend({\n      defaults: {\n          duration: 0,\n          contact_full_jid: \"\",\n          session_id: 0,\n          audio: true,\n          volume_on: true,\n          video_in: false,\n          video_screen: false,\n          state: 0\n      },\n\n      initialize: function (attrs, options) {\n          attrs = attrs || {};\n          attrs.video_live = attrs.video_live || false;\n          attrs.video = attrs.video_live;\n          this.contact = options.contact;\n          this.account = this.contact.account;\n          this.registerIqHandler();\n          this.audio_notifiation = xabber.playAudio(attrs.call_initiator ? xabber.settings.sound_on_call : xabber.settings.sound_on_dialtone, true);\n          this.modal_view = new xabber.JingleMessageView({model: this});\n          this.conn = new RTCPeerConnection({\n              iceServers: [\n                  {\n                      urls: \"stun:stun.l.google.com:19302\"\n                  },\n                  {\n                      urls: \"stun:stun01.pool-01.xabber.org:3478\"\n                  },\n              ].concat(constants.TURN_SERVERS_LIST),\n              sdpSemantics: 'unified-plan'\n          });\n          this.$remote_video_el = $('<video autoplay class=\"webrtc-remote-video\"/>');\n          this.$remote_audio_el = $('<audio autoplay class=\"webrtc-remote-audio hidden\"/>');\n          this.$local_video = this.modal_view.$el.find('.webrtc-local-video');\n          this.current_timer = 0;\n          this.conn.onconnectionstatechange = this.onChangeConnectionState.bind(this);\n          this.set(attrs);\n          this.get('in') && this.updateStatus(xabber.getString(\"dialog_jingle_message__status_calling\"));\n          this.onChangedMediaType();\n          this.conn.ontrack = (ev) => {\n              this.remote_stream = ev.streams[0];\n              this.modal_view.$el.find('.webrtc-remote-audio')[0].srcObject = ev.streams[0];\n          };\n          this._waiting_timeout = setTimeout(() => {\n              (!this.get('state') && this.get('status') === 'calling' && this.get('call_initiator') === this.account.get('jid')) && this.reject();\n          }, constants.JINGLE_WAITING_TIME * 1000);\n          this.conn.onicecandidate = this.onIceCandidate.bind(this);\n          this.conn.oniceconnectionstatechange = this.onChangeIceConnectionState.bind(this);\n          this.on('change:audio', this.setEnabledAudioTrack, this);\n          this.on('change:video', this.onChangedVideoValue, this);\n          this.on('change:video_live', this.setEnabledVideoTrack, this);\n          this.on('change:video_screen', this.setEnabledScreenShareVideoTrack, this);\n          this.on('change:video_in', this.onChangedRemoteVideo, this);\n          this.on('change:volume_on', this.onChangedVolume, this);\n          this.on('destroy', this.onDestroy, this);\n      },\n\n      registerIqHandler: function () {\n          this.account.connection.deleteHandler(this.iq_handler);\n          this.iq_handler = this.account.connection.addHandler((iq) => {\n                  this.onIQ(iq);\n                  return true;\n              }, null, 'iq', 'set');\n\n      },\n\n      updateStatus: function (status) {\n          this.modal_view.updateStatusText(status);\n      },\n\n      updateTimer: function () {\n          this.updateStatus(utils.pretty_duration(++this.current_timer));\n      },\n\n      startTimer: function () {\n          this.updateTimer();\n          clearInterval(this.call_timer);\n          this.call_timer = setInterval(() => {\n              this.updateTimer();\n          }, 1000);\n      },\n\n      onConnected: function () {\n          this.get('video_live') && this.onChangedVideoValue();\n          xabber.stopAudio(this.audio_notifiation);\n          setTimeout(() => {\n              this.set('status', 'connected');\n              xabber.trigger('update_jingle_button');\n              this.updateStatus();\n              this.startTimer();\n          }, 1000);\n      },\n\n      onChangeConnectionState: function (ev) {\n          let peer_conn = ev.target,\n              conn_state = peer_conn.connectionState;\n          if (conn_state === 'connected') {\n              this.onConnected();\n          } else {\n              this.updateStatus(utils.pretty_name(conn_state) + '...');\n              if (conn_state === \"failed\") {\n                  clearTimeout(this._timeout_failed);\n                  this._timeout_failed = setTimeout(() => {\n                      if (peer_conn.connectionState === 'failed' || peer_conn.connectionState === 'disconnected') {\n                          this.set('status', conn_state);\n                          xabber.trigger('update_jingle_button');\n                          this.reject();\n                          this.destroy();\n                          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_network_error\"));\n                          xabber.current_voip_call = null;\n                      }\n                  }, 40000);\n                  peer_conn.restartIce();\n              }\n              if (conn_state === 'disconnected') {\n                  this.set('status', conn_state);\n                  xabber.trigger('update_jingle_button');\n                  this.destroy();\n                  xabber.current_voip_call = null;\n              }\n          }\n      },\n\n      onIceCandidate: function (ice) {\n          if (!ice || !ice.candidate || !ice.candidate.candidate)\n              return;\n          this.sendCandidate(ice.candidate);\n      },\n\n      onChangeIceConnectionState: function (ev) {\n          let peer_conn = ev.target,\n              conn_state = peer_conn.iceConnectionState;\n          if (conn_state === \"failed\") {\n              clearTimeout(this._timeout_failed);\n              this._timeout_failed = setTimeout(() => {\n                  if (peer_conn.iceConnectionState === 'failed' || peer_conn.connectionState === 'disconnected') {\n                      this.set('status', conn_state);\n                      xabber.trigger('update_jingle_button');\n                      this.reject();\n                      this.destroy();\n                      this.updateStatus(xabber.getString(\"dialog_jingle_message__status_network_error\"));\n                      xabber.current_voip_call = null;\n                  }\n              }, 40000);\n              peer_conn.restartIce();\n          }\n          if (conn_state === \"connected\")\n              !this.conn.connectionState && this.onConnected();\n      },\n\n      onChangedMediaType: function () {\n          this.$local_video.switchClass('hidden', !this.get('video'));\n      },\n\n      onChangedRemoteVideo: function () {\n          let incoming_video = this.get('video_in');\n          if (incoming_video) {\n              this.$remote_video_el[0].srcObject = this.remote_stream;\n              this.modal_view.$el.find('.webrtc-remote-audio').replaceWith(this.$remote_video_el);\n              this.modal_view.$el.switchClass('multiple-videos', this.get('video') && this.get('video_in'));\n          }\n          else {\n              this.$remote_audio_el[0].srcObject = this.remote_stream;\n              this.modal_view.$el.find('.webrtc-remote-video').replaceWith(this.$remote_audio_el);\n          }\n          this.modal_view.$el.find('.default-screen').switchClass('hidden', incoming_video);\n          this.onChangedVolume();\n      },\n\n      onChangedVolume: function () {\n          if (this.get('volume_on')) {\n              this.modal_view.$el.find('.webrtc-remote-audio')[0] && (this.modal_view.$el.find('.webrtc-remote-audio')[0].muted = false);\n              this.modal_view.$el.find('.webrtc-remote-video')[0] && (this.modal_view.$el.find('.webrtc-remote-video')[0].muted = false);\n          }\n          else {\n              this.modal_view.$el.find('.webrtc-remote-audio')[0] && (this.modal_view.$el.find('.webrtc-remote-audio')[0].muted = true);\n              this.modal_view.$el.find('.webrtc-remote-video')[0] && (this.modal_view.$el.find('.webrtc-remote-video')[0].muted = true);\n          }\n      },\n\n      setEnabledAudioTrack: function () {\n          this.local_stream.getAudioTracks()[0].enabled = this.get('audio');\n      },\n\n      setEnabledVideoTrack: function () {\n          let value = this.get('video_live'),\n              default_video = this.conn.getSenders().find(sender => sender.track && (sender.track.default || sender.track.screen));\n          value && this.set('video_screen', false);\n          (default_video && value) && this.createVideoStream();\n          (!default_video && this.local_stream) && (this.local_stream.getVideoTracks()[0].enabled = value);\n          this.set('video', value || this.get('video_screen'));\n      },\n\n      onDestroy: function () {\n          clearTimeout(this._waiting_timeout);\n          clearInterval(this.call_timer);\n          clearTimeout(this._timeout_failed);\n          xabber.stopAudio(this.audio_notifiation);\n          this.account.connection.deleteHandler(this.iq_handler);\n          this.stopTracks();\n          this.conn.close();\n      },\n\n      setEnabledScreenShareVideoTrack:  function () {\n          let value = this.get('video_screen'),\n              default_video = this.conn.getSenders().find(sender => sender.track && !sender.track.screen);\n          value && this.set('video_live', false);\n          (default_video && value) && this.createScreenShareVideoStream();\n          (!default_video && this.local_stream) && (this.local_stream.getVideoTracks()[0].enabled = value);\n          this.set('video', value || this.get('video_live'));\n      },\n\n      onChangedVideoValue: function () {\n          let video_state = this.get('video') ? 'enable' : 'disable';\n          this.sendVideoStreamState(video_state);\n          this.onChangedMediaType();\n      },\n\n      createScreenShareVideoStream: function () {\n          navigator.mediaDevices.getDisplayMedia({video: true}).then((media_stream) => {\n              this.$local_video[0].srcObject = media_stream;\n              media_stream.getVideoTracks().forEach((track) => {\n                  _.extend(track, {screen: true});\n                  this.local_stream.addTrack(track);\n                  this.conn.addTrack(track, this.local_stream);\n                  this.conn.getSenders().find(sender => !sender.track || sender.track && sender.track.kind === 'video').replaceTrack(track);\n              });\n          });\n      },\n\n      sendVideoStreamState: function (state) {\n          let $iq_video = $iq({to: this.get('contact_full_jid'), type: 'set'})\n              .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n              .c('video', {state: state, id: this.get('session_id')});\n          this.account.sendIQFast($iq_video);\n      },\n\n      onIQ: function (iq) {\n          let $incoming_iq = $(iq),\n              $jingle_initiate = $incoming_iq.find('jingle[action=\"session-initiate\"]'),\n              $jingle_accept = $incoming_iq.find('jingle[action=\"session-accept\"]'),\n              $jingle_info = $incoming_iq.find('jingle[action=\"session-info\"]'),\n              $jingle_video = $incoming_iq.find(`query[xmlns=\"${Strophe.NS.JINGLE_MSG}\"] video`),\n              from_jid = $incoming_iq.attr('from'),\n              $result_iq = $iq({to: from_jid, type: 'result', id: $incoming_iq.attr('id')});\n          if ($jingle_initiate.length) {\n              if ($jingle_initiate.attr('sid') !== this.get('session_id'))\n                  return;\n              let offer_sdp = $jingle_initiate.find(`description[xmlns=\"${Strophe.NS.JINGLE_RTP}\"]`).text();\n              offer_sdp && this.conn.setRemoteDescription(new RTCSessionDescription({type: 'offer', sdp: offer_sdp}));\n              this.acceptSession(offer_sdp);\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_accept.length) {\n              if ($jingle_accept.attr('sid') !== this.get('session_id'))\n                  return;\n              let answer_sdp = $jingle_accept.find(`description[xmlns=\"${Strophe.NS.JINGLE_RTP}\"]`).text();\n              answer_sdp && this.conn.setRemoteDescription(new RTCSessionDescription({type: 'answer', sdp: answer_sdp}));\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_info.length) {\n              if ($jingle_info.attr('sid') !== this.get('session_id'))\n                  return;\n              let candidate = $jingle_info.find('candidate');\n              candidate.length && this.conn.addIceCandidate(new RTCIceCandidate({candidate: candidate.text(), sdpMLineIndex: candidate.attr('sdpMLineIndex'), sdpMid: candidate.attr('sdpMid')}));\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_video.length) {\n              let session_id = $jingle_video.attr('id');\n              if (session_id === this.get('session_id')) {\n                  let video_state = $jingle_video.attr('state');\n                  if (video_state === 'enable')\n                      this.set('video_in', true);\n                  if (video_state === 'disable')\n                      this.set('video_in', false);\n              }\n              this.account.sendIQFast($result_iq);\n          }\n      },\n\n      startCall: function () {\n          this.set('call_initiator', this.account.get('jid'));\n          this.createAudioStream();\n          this.get('video_live') && this.createVideoStream();\n          this.propose();\n      },\n\n      createAudioStream: function () {\n          try {\n              navigator.mediaDevices.getUserMedia({audio: true}).then((media_stream) => {\n                  this.local_stream = media_stream;\n                  this.$local_video[0].srcObject = media_stream;\n                  let video_track = this.initVideoTrack();\n                  this.local_stream.addTrack(video_track);\n                  this.conn.addTrack(video_track, this.local_stream);\n                  media_stream.getAudioTracks().forEach(track => this.conn.addTrack(track, this.local_stream));\n              });\n          } catch (e) {\n              utils.dialogs.error(e);\n          }\n      },\n\n      createVideoStream: function () {\n          try {\n              navigator.mediaDevices.getUserMedia({video: true}).then((media_stream) => {\n                  this.$local_video[0].srcObject = media_stream;\n                  media_stream.getVideoTracks().forEach((track) => {\n                      this.local_stream.addTrack(track);\n                      this.conn.addTrack(track, this.local_stream);\n                      this.conn.getSenders().find(sender => !sender.track || sender.track && sender.track.kind === 'video').replaceTrack(track);\n                  });\n              });\n          } catch (e) {\n                  utils.dialogs.error(e);\n              }\n          },\n\n      stopTracks: function () {\n          this.local_stream && this.local_stream.getTracks().forEach((track) => {\n              track.stop();\n              this.local_stream.removeTrack(track);\n          });\n      },\n\n      propose: function () {\n          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_search\"));\n          let $propose_msg = $msg({type: 'chat', to: this.contact.get('jid')})\n              .c('propose', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')})\n              .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'}).up().up()\n              .c('no-store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('body').t(xabber.getString(\"jingle__text_body_message\")).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.account.sendMsg($propose_msg);\n      },\n\n      accept: function () {\n          let $accept_msg = $msg({type: 'chat', to: this.get('contact_full_jid') || this.contact.get('jid')})\n              .c('accept', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')}).up()\n              .c('no-store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.set('jingle_start', moment.now());\n          this.account.sendMsg($accept_msg);\n          xabber.stopAudio(this.audio_notifiation);\n          this.set('status', 'connecting');\n          xabber.trigger('update_jingle_button');\n          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_connecting\"));\n          this.audio_notifiation = xabber.playAudio(xabber.settings.sound_on_connection, true);\n      },\n\n      reject: function (reason) {\n          if (this.get('status') === 'disconnected' || this.get('status') === 'disconnecting')\n              return;\n          let $reject_msg = $msg({type: 'chat', to: this.get('contact_full_jid') || this.contact.get('jid')})\n              .c('reject', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')});\n          if (this.get('jingle_start')) {\n              let end = moment.now(),\n                  duration = Math.round((end - this.get('jingle_start'))/1000),\n                  call_attrs = {initiator: this.get('call_initiator')};\n              if (this.call_timer)\n                  _.extend(call_attrs, {start: moment(this.get('jingle_start')).format(), end: moment(end).format(), duration: duration});\n              reason && (call_attrs.reason = reason);\n              $reject_msg.c('call', call_attrs).up();\n          }\n          $reject_msg.up().c('store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.account.sendMsg($reject_msg);\n          this.createSystemMessage($reject_msg);\n          this.set('status', 'disconnected');\n          xabber.trigger('update_jingle_button');\n          this.destroy();\n          xabber.current_voip_call = null;\n      },\n\n      createSystemMessage: function (message) {\n          let $message = $(message.nodeTree),\n              chat = this.account.chats.getChat(this.contact),\n              time = $message.find('call').attr('end');\n          if (time) {\n              let duration = $message.find('call').attr('duration'),\n                  initiator = $message.find('call').attr('initiator');\n              chat.messages.createSystemMessage({\n                  from_jid: this.account.get('jid'),\n                  session_id: $message.find('reject').attr('id'),\n                  message: xabber.getString(((initiator && initiator === this.account.get('jid')) ? \"jingle__system_message__outgoing_call\" : \"jingle__system_message__incoming_call\"), [utils.pretty_duration(duration)])\n              });\n          }\n          else {\n              chat.messages.createSystemMessage({\n                  from_jid: this.account.get('jid'),\n                  session_id: $message.find('reject').attr('id'),\n                  message: xabber.getString(\"jingle__system_message__cancelled_call\")\n              });\n          }\n      },\n\n      initVideoTrack: function () {\n          let canvas = Object.assign(document.createElement(\"canvas\"), {width: 320, height: 240});\n          let ctx = canvas.getContext('2d');\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\n          let p = ctx.getImageData(0, 0, canvas.width, canvas.height);\n          requestAnimationFrame(function draw(){\n              for (let i = 0; i < p.data.length; i++)\n                  p.data[i++] = p.data[i++] = p.data[i++] = 1;\n              ctx.putImageData(p, 0, 0);\n              requestAnimationFrame(draw);\n          });\n          return _.extend(canvas.captureStream(60).getTracks()[0], {default: true});\n      },\n\n      initSession: function () {\n          navigator.mediaDevices.getUserMedia({audio: true}).then((media_stream) => {\n              this.local_stream = media_stream;\n              this.$local_video[0].srcObject = media_stream;\n              let video_track = this.initVideoTrack();\n              this.local_stream.addTrack(video_track);\n              this.conn.addTrack(video_track, this.local_stream);\n              media_stream.getAudioTracks().forEach(track => this.conn.addTrack(track, this.local_stream));\n              return this.conn.createOffer({offerToReceiveAudio:true, offerToReceiveVideo: true});\n          }).then((offer) => {\n                  this.set('session_initiator', this.account.get('jid'));\n                  this.conn.setLocalDescription(offer).then(() => {\n                      let offer_sdp = offer.sdp,\n                          $iq_offer_sdp = $iq({to: this.get('contact_full_jid'), type: 'set'})\n                          .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-initiate', initiator: this.account.get('jid'), sid: this.get('session_id')})\n                          .c('content', {creator: 'initiator', name: 'voice'})\n                          .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'})\n                          .c('sdp').t(offer_sdp).up().up()\n                          .c('security', {xmlns: Strophe.NS.JINGLE_SECURITY_STUB});\n                      this.account.sendIQFast($iq_offer_sdp);\n                  });\n          });\n      },\n\n      sendCandidate: function (candidate) {\n          let $iq_candidate = $iq({to: this.get('contact_full_jid'), type: 'set'})\n              .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-info', initiator: this.get('session_initiator'), sid: this.get('session_id')})\n              .c('content', {creator: 'initiator', name: 'voice'})\n              .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'}).up()\n              .c('transport', {xmlns: Strophe.NS.JINGLE_TRANSPORTS_ICE})\n              .c('candidate', {sdpMLineIndex: candidate.sdpMLineIndex, sdpMid: candidate.sdpMid }).t(candidate.candidate);\n          this.account.sendIQFast($iq_candidate);\n      },\n\n      acceptSession: async function () {\n          this.set('session_initiator', this.contact.get('jid'));\n          this.conn.createAnswer().then((answer) => {\n              this.conn.setLocalDescription(answer).then(() => {\n                  let answer_sdp = answer.sdp,\n                      $iq_answer_sdp = $iq({to: this.get('contact_full_jid'), type: 'set'})\n                          .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-accept', initiator: this.contact.get('jid'), sid: this.get('session_id')})\n                          .c('content', {creator: 'initiator', name: 'voice'})\n                          .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'})\n                          .c('sdp').t(answer_sdp).up().up()\n                          .c('security', {xmlns: Strophe.NS.JINGLE_SECURITY_STUB});\n                  this.account.sendIQFast($iq_answer_sdp);\n              });\n          });\n      }\n  });\n\n  xabber.Chat = Backbone.Model.extend({\n    defaults: {\n        opened: true,\n        active: false,\n        display: false,\n        displayed_sent: false,\n        last_displayed_id: 0,\n        last_delivered_id: 0,\n        unread: 0,\n        timestamp: 0,\n        const_unread: 0,\n        encrypted: false\n    },\n\n    initialize: function (attrs, options) {\n        this.contact = options.contact;\n        this.sync_created = options.sync_created;\n        this.account = this.contact ? this.contact.account : options.account;\n        let jid = this.contact ? this.contact.get('jid') : attrs.jid;\n        this.set({\n            id: attrs && attrs.id || this.contact.hash_id,\n            jid: jid\n        });\n        (attrs && attrs.type === 'encrypted') && this.set('encrypted', true);\n        if (attrs && attrs.type === 'saved') {\n            this.set('saved', true);\n            this.account.on('remove_saved_chat', this.onContactDestroyed, this);\n        }\n        this.retraction_version = 0;\n        if (this.contact) {\n            this.set('group_chat', this.contact.get('group_chat'));\n            this.contact.on(\"destroy\", this.onContactDestroyed, this);\n            this.contact.on(\"change:group_chat\", this.onChangedContact, this);\n        } else {\n            this.set({'group_chat': false, 'name': attrs.name});\n        }\n        this.messages = new xabber.Messages(null, {account: this.account, chat: this});\n        this.messages_unread = new xabber.Messages(null, {account: this.account});\n        this.item_view = new xabber.ChatItemView({model: this});\n        this.plyr_players = [];\n        this.retracted_msg_id_list = [];\n        this.on(\"get_retractions_list\", this.getAllMessageRetractions, this);\n        this.on(\"change:timestamp\", this.onChangedTimestamp, this);\n        this.on(\"update_last_read_msg\", this.onChangedLastReadMsg, this);\n    },\n\n    onChangedTimestamp: function () {\n    },\n\n    onChangedLastReadMsg: function (options) {\n        if (this.get('prev_last_read_msg') && this.get('last_read_msg') && this.get('prev_last_read_msg') !== this.get('last_read_msg')){\n            if (this.item_view && !this.item_view.content){\n                this.item_view.content = new xabber.ChatContentView({chat_item: this.item_view});\n            }\n            this.item_view.content._no_scrolling_event = true;\n            let query = {\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                is_first: true,\n                sync_update: options && options.sync_update ? true : false,\n                var: [\n                    {var: 'after-id', value: this.get('prev_last_read_msg')},\n                    {var: 'before-id', value: this.get('last_read_msg')},\n                ]\n            };\n            this.requestHistoryBetweenAnchors(query);\n\n        }\n        this.set('prev_last_read_msg', this.get('last_read_msg'));\n    },\n\n    requestHistoryBetweenAnchors: function (query) {\n        this.item_view.content.MAMRequest(query, (success, messages, rsm) => {\n            if (rsm.complete)\n                this.set('last_sync_unread_id', this.get('last_read_msg'));\n            if (query.is_first && !query.sync_update) {\n                let read_count = Number(rsm.count) + 1;\n                read_count = this.get('const_unread') - read_count;\n                (read_count < 0) && (read_count = 0);\n                this.set('unread', 0);\n                this.set('const_unread', read_count);\n            }\n            if (!rsm.complete && (rsm.count > messages.length)){\n                query.after = rsm.last;\n                query.is_first = false;\n                this.requestHistoryBetweenAnchors(query);\n            }\n            _.each(messages, (message) => {\n                let message_item = this.account.chats.receiveChatMessage(message,\n                        {\n                            is_archived: true,\n                            is_between_anchors: true,\n                        }\n                    );\n                message_item && message_item.set('is_unread', false)\n            });\n            if (rsm.complete && this.get('last_read_msg')){\n                let last_read_msg = this.messages.find(m => this.get('last_read_msg') && (m.get('stanza_id') === this.get('last_read_msg') || m.get('contact_stanza_id') === this.get('last_read_msg'))),\n                    deferred = new $.Deferred();\n                deferred.done(() => {\n                    last_read_msg && last_read_msg.set('is_unread', false);\n                    if (this.item_view.content.isVisible()){\n                        this.item_view.content._long_reading_timeout = true;\n                        this.item_view.content.scrollToUnread();\n                    } else {\n                        this.set('show_new_unread', true);\n                    }\n                    this.item_view.content._no_scrolling_event = false;\n                });\n                if (!last_read_msg){\n                    this.contact.getMessageByStanzaId(this.get('last_read_msg'), ($message) => {\n                        last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                        deferred.resolve()\n                    });\n                } else {\n                    deferred.resolve()\n                }\n            }\n        }, (err) => {\n            xabber.error('error');\n        });\n    },\n\n\n    isMuted: function () {\n          if (this.get('muted') && (this.get('muted') < (Date.now() / 1000)))\n              this.set('muted', false)\n          return this.get('muted')\n    },\n\n      onChangedContact: function () {\n          let changed = this.contact.changed;\n          if (_.has(changed, 'group_chat'))\n              this.set('group_chat', this.contact.get('group_chat'));\n          if (_.has(changed, 'blocked'))\n              this.set('blocked', this.contact.get('blocked'));\n      },\n\n    recountUnread: function () {\n        this.set('unread', this.messages_unread.length);\n        if (this.contact && this.get('archived') && this.isMuted()) {\n        }\n        else {\n            xabber.toolbar_view.recountAllMessageCounter();\n        }\n    },\n\n      setEphemeralTimer: function (ev) {\n          if (!this.get('encrypted'))\n              return;\n          this.set('chat_ephemeral_timer', $(ev.target).closest('.btn-set-ephemeral-timer').attr('data-value'))\n      },\n\n    onContactDestroyed: function () {\n        this.resetUnread();\n        this.destroy();\n    },\n\n    resetUnread: function () {\n        let unread = this.get('unread');\n        if (unread > 0) {\n            this.messages_unread && this.messages_unread.reset();\n            this.set('unread', 0);\n            xabber.recountAllMessageCounter(unread);\n            xabber.toolbar_view.recountAllMessageCounter(unread);\n        }\n    },\n\n    searchMessages: function (query, callback) {\n        this.messages_view = new xabber.SearchedMessagesView({\n            query_text: query,\n            model: this\n        });\n        this.messages_view.messagesRequest({}, () => {\n            xabber.body.setScreen('all-chats', {\n                right: 'searched_messages',\n                model: this\n            });\n        });\n    },\n\n    sendDataForm: function (message, variable) {\n        let data_form = message.get('data_form');\n        if (!data_form)\n            return;\n        let msg = $msg({type: 'chat'});\n        data_form.fields.forEach((field) => {\n            if (field.type  === 'boolean') {\n                if (field.var === variable)\n                    field.values = [true];\n                else\n                    field.values = [false];\n            }\n        });\n        msg = this.account.addDataFormToStanza(msg, data_form);\n        data_form.addresses.forEach((address) => {\n            if (address.type === 'replyto')\n                $(msg.nodeTree).attr('to', address.jid);\n            this.account.sendMsg(msg);\n        });\n    },\n\n    setStanzaId: function (unique_id, stanza_id) {\n        let message = this.messages.get(unique_id),\n            origin_id = message.get('origin_id');\n        if (this.item_view && this.item_view.content && stanza_id)\n            this.item_view.content.$(`.chat-message[data-uniqueid=\"${unique_id}\"]`).data('uniqueid', stanza_id)[0].setAttribute('data-uniqueid', stanza_id);\n        message.set('stanza_id', stanza_id);\n        if (this.get('encrypted'))\n            this.account.omemo && this.account.omemo.updateMessage({stanza_id, origin_id}, this.contact);\n    },\n\n    getCallingAvailability: function (to, session_id, callback) {\n        let iq = $iq({to: to, type: 'get'})\n            .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n            .c('session', {id: session_id});\n        this.account.sendIQFast(iq, callback);\n    },\n\n    sendReject: function (options) {\n        !options && (options = {});\n        let msg_to = options.to || this.contact.get('jid'),\n            $reject_msg = $msg({\n                type: 'chat',\n                to: msg_to\n            })\n                .c('reject', {xmlns: Strophe.NS.JINGLE_MSG, id: options.session_id})\n                .c('call', {reason: options.reason}).up().up()\n                .c('store', {xmlns: Strophe.NS.HINTS}).up()\n                .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n                .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n        this.account.sendMsg($reject_msg);\n    },\n\n    initIncomingCall: function (full_jid, session_id) {\n        if (!xabber.get('audio') || !xabber.settings.jingle_calls) {\n            return;\n        }\n        xabber.current_voip_call = new xabber.JingleMessage({contact_full_jid: full_jid, session_id: session_id, call_initiator: this.contact.get('jid')}, {contact: this.contact, });\n        xabber.current_voip_call.modal_view.show({status: 'in'});\n        xabber.trigger('update_jingle_button');\n        if (xabber.body.screen.get('name') === 'all-chats' && !xabber.body.screen.get('right') && this.item_view)\n            this.item_view.open();\n    },\n\n    showEphemeralTimerSelector: function (full_jid, session_id) {\n        this.ephemeral_timer_selector = new xabber.EphemeralTimerSelector();\n        this.ephemeral_timer_selector.show({model: this, account: this.account});\n    },\n\n    endCall: function (status) {\n        status && xabber.current_voip_call.set('status', status);\n        xabber.trigger('update_jingle_button');\n        xabber.current_voip_call.destroy(status);\n        xabber.current_voip_call = null;\n        xabber.trigger('update_jingle_button');\n    },\n\n    getAllMessageRetractions: function () {\n        if (!this.contact.get('group_chat'))\n            return;\n        let jid = this.contact.get('full_jid') || this.contact.get('jid');\n        let retractions_query = $iq({type: 'get', to: jid})\n            .c('query', {xmlns: Strophe.NS.REWRITE, version: this.retraction_version});\n        this.account.sendIQ(retractions_query);\n    },\n\n    receiveMessage: function ($message, options) {\n        let from_bare_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            carbon_copied = options.carbon_copied;\n        // searching chat marker message\n        let $marker = $message.children(`[xmlns=\"${Strophe.NS.CHAT_MARKERS}\"]`),\n            $receipt_request = $message.children(`request[xmlns=\"${Strophe.NS.RECEIPTS}\"]`),\n            $receipt_response = $message.children(`received[xmlns=\"${Strophe.NS.RECEIPTS}\"]`),\n            $jingle_msg_propose = $message.children(`propose[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n            $jingle_msg_accept = $message.children(`accept[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n            $jingle_msg_reject = $message.children(`reject[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`);\n        if ($jingle_msg_propose.length && !options.searched_message) {\n            if (carbon_copied && (from_bare_jid == this.account.get('jid'))) {\n                return;\n            }\n            if (options.synced_msg){\n                if (this.get('saved'))\n                    return;\n                let view = xabber.chats_view.child(this.contact.hash_id);\n                $message.find('time').attr('stamp') && this.set('timestamp', $message.find('time').attr('stamp'));\n                if (!view.content)\n                    view.content = new xabber.ChatContentView({chat_item: view});\n                if (view && view.content)\n                    view.content.receiveNoTextMessage($message, carbon_copied);\n                return;\n            }\n            if (options.is_archived)\n                return;\n            else {\n                let session_id = $jingle_msg_propose.attr('id'),\n                    iq_to = $message.attr('from');\n                this.getCallingAvailability(iq_to, session_id, () => {\n                    if (xabber.current_voip_call) {\n                        let reason = from_bare_jid === Strophe.getBareJidFromJid(xabber.current_voip_call.get('contact_full_jid')) ? 'device_busy' : 'busy';\n                        this.sendReject({session_id: session_id, reason: reason});\n                        this.messages.createSystemMessage({\n                            from_jid: this.account.get('jid'),\n                            message: xabber.getString(\"jingle__system_message__cancelled_call\")\n                        });\n                        return;\n                    }\n                    this.initIncomingCall(iq_to, session_id);\n                });\n            }\n        }\n        if ($jingle_msg_accept.length) {\n            if (options.is_archived || options.synced_msg)\n                return;\n            if (xabber.current_voip_call && xabber.current_voip_call.get('session_id') === $jingle_msg_accept.attr('id')) {\n                if (carbon_copied)\n                    this.endCall('accepted_another_device');\n                else {\n                    !xabber.current_voip_call.get('state') && xabber.current_voip_call.set('state', constants.JINGLE_MSG_ACCEPT);\n                    xabber.trigger('update_jingle_button');\n                    let jingle_start = $jingle_msg_accept.find('time').attr('stamp');\n                    jingle_start = jingle_start ? Number(moment(jingle_start)) : moment.now();\n                    xabber.current_voip_call.set('jingle_start', jingle_start);\n                    !xabber.current_voip_call.get('contact_full_jid') && xabber.current_voip_call.set('contact_full_jid', $message.attr('from'));\n                    xabber.stopAudio(xabber.current_voip_call.audio_notifiation);\n                    xabber.current_voip_call.set('status', 'connecting');\n                    xabber.trigger('update_jingle_button');\n                    xabber.current_voip_call.updateStatus(xabber.getString(\"dialog_jingle_message__status_connecting\"));\n                    xabber.current_voip_call.audio_notifiation = xabber.playAudio(xabber.settings.sound_on_connection);\n                }\n            }\n        }\n        if ($jingle_msg_reject.length) {\n            if (this.messages.filter(m => m.get('session_id') === $jingle_msg_reject.attr('id')).length)\n                return;\n            let time = options.delay && options.delay.attr('stamp') || $message.find('delay').attr('stamp') || $message.find('time').attr('stamp'), message, msg_text = \"\";\n            if ($jingle_msg_reject.children('call').length) {\n                let duration = $jingle_msg_reject.children('call').attr('duration'),\n                    initiator = $jingle_msg_reject.children('call').attr('initiator');\n                if (duration && initiator)\n                    msg_text =xabber.getString(((initiator && initiator === this.account.get('jid')) ? \"jingle__system_message__outgoing_call\" : \"jingle__system_message__incoming_call\"), [utils.pretty_duration(duration)]);\n                else\n                    msg_text =  xabber.getString(\"jingle__system_message__cancelled_call\");\n            }\n            else\n                msg_text =  xabber.getString(\"jingle__system_message__cancelled_call\");\n            options.is_unread && (options.reject_contact_stanza_id = options.contact_stanza_id);\n            message = this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                time: time,\n                session_id: $jingle_msg_reject.attr('id'),\n                stanza_id: options.stanza_id,\n                contact_stanza_id: options.reject_contact_stanza_id,\n                is_unread: options.is_unread,\n                message: msg_text\n            });\n            if (options.is_archived || options.synced_msg)\n                return message;\n            if (xabber.current_voip_call && xabber.current_voip_call.get('session_id') === $jingle_msg_reject.attr('id')) {\n                xabber.stopAudio(xabber.current_voip_call.audio_notifiation);\n                let busy_audio = xabber.playAudio(xabber.settings.sound_on_call_busy);\n                setTimeout(() => {\n                    xabber.stopAudio(busy_audio);\n                }, 1500);\n                this.endCall($jingle_msg_reject.children('call').attr('reason') == 'device_busy' ? 'device_busy' : $jingle_msg_reject.children('call').attr('reason') == 'busy' ? 'busy' : 'disconnected');\n            }\n            return message;\n        }\n        if (!options.is_archived) {\n            let $stanza_id, $contact_stanza_id;\n            $message.children('stanza-id').each((idx, stanza_id) => {\n                stanza_id = $(stanza_id);\n                if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length) {\n                    if (stanza_id.attr('by') === from_bare_jid) {\n                        !$stanza_id && ($stanza_id = stanza_id);\n                        $contact_stanza_id = stanza_id;\n                    }\n                    else\n                        $stanza_id = stanza_id;\n                }\n                else {\n                    if (stanza_id.attr('by') === from_bare_jid)\n                        $contact_stanza_id = stanza_id;\n                    else\n                        $stanza_id = stanza_id;\n                }\n            });\n            (!options.stanza_id && $stanza_id) && (options.stanza_id = $stanza_id.attr('id'));\n            (!options.contact_stanza_id && $contact_stanza_id) && (options.contact_stanza_id = $contact_stanza_id.attr('id'));\n        }\n        if ($marker.length) {\n            let marker_tag = $marker[0].tagName.toLowerCase();\n            if ((marker_tag === 'markable') && !options.is_mam && !options.is_archived && !carbon_copied && (!options.synced_msg || options.synced_msg && options.is_unread)) {\n                this.sendMarker($message.attr('id'), 'received', options.stanza_id, options.contact_stanza_id);\n                this.get('saved') && this.sendMarker($message.attr('id'), 'displayed', options.stanza_id, options.contact_stanza_id);\n            }\n            if ((marker_tag !== 'markable') && !carbon_copied) {\n                this.receiveMarker($message, marker_tag, carbon_copied);\n                return;\n            }\n            if ((marker_tag === 'displayed') && carbon_copied)\n                this.receiveCarbonsMarker($marker);\n        }\n\n        if ($receipt_request.length && !options.is_mam && !options.is_archived && !carbon_copied && (!options.synced_msg || options.synced_msg && options.is_unread))\n            this.sendDeliveryReceipt($message);\n\n        if ($receipt_response.length)\n            this.receiveDeliveryReceipt($message);\n\n        if (!$message.find('body').length || $jingle_msg_propose.length || $jingle_msg_accept.length || $jingle_msg_reject.length) {\n            if (this.get('saved'))\n                return;\n            let view = xabber.chats_view.child(this.contact.hash_id);\n            if (!view.content)\n                view.content = new xabber.ChatContentView({chat_item: view});\n            if (view && view.content)\n                view.content.receiveNoTextMessage($message, carbon_copied);\n            return;\n        }\n\n        if ($message.find('invite').length) {\n            if (from_bare_jid === this.account.get('jid'))\n                return;\n            let group_jid = $message.find('invite').attr('jid') || $message.find('message').attr('from'),\n                contact = this.account.contacts.get(group_jid), chat;\n            if (contact)\n                if (contact.get('subscription') == 'both')\n                    return;\n            if (this.account.connection && this.account.connection.do_synchronization) {\n                if (options.synced_msg || !options.synced_msg && !options.is_archived)\n                    return this.messages.createInvitationFromStanza($message, options);\n            } else {\n                let iq = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING});\n                this.account.sendIQFast(iq, (iq) => {\n                        let items = $(iq).find('item'),\n                            current_timestamp = Number(moment($message.find('delay').attr('stamp') || $message.find('time').attr('stamp') || (options.delay) && Number(moment(options.delay.attr('stamp'))) || moment.now())),\n                            last_blocking_timestamp,\n                            has_blocking = false;\n                        if (items.length > 0) {\n                            items.each((idx, item) => {\n                                let $item = $(item),\n                                    item_jid = $item.attr('jid'), blocking_timestamp = \"\";\n                                if (item_jid.indexOf(group_jid) > -1) {\n                                    has_blocking = true;\n                                    blocking_timestamp = item_jid.substr(item_jid.lastIndexOf(\"/\") + 1, item_jid.length - group_jid.length);\n                                    if (!blocking_timestamp) {\n                                        last_blocking_timestamp = \"\";\n                                        return false;\n                                    } else if (!last_blocking_timestamp || last_blocking_timestamp < blocking_timestamp)\n                                        last_blocking_timestamp = blocking_timestamp;\n                                }\n                            });\n                        }\n                        if (_.isUndefined(last_blocking_timestamp) || last_blocking_timestamp && last_blocking_timestamp < current_timestamp)\n                            return this.messages.createInvitationFromStanza($message, options);\n                    }, () => {\n                        return this.messages.createInvitationFromStanza($message, options);\n                    });\n            }\n        }\n        else{\n            return this.messages.createFromStanza($message, options);\n        }\n    },\n\n    getMessageContext: function (unique_id, options) {\n        options = options || {};\n        let messages = options.mention && this.account.messages || options.searched_messages && !options.encrypted && this.account.searched_messages || options.message && xabber.all_searched_messages || this.account.messages,\n            message = messages.get(unique_id),\n            dfd = new $.Deferred;\n\n        dfd.done(() => {\n            if (message) {\n                if (options.searched_messages)\n                    message.set('searched_message', false);\n                let stanza_id = message.get('stanza_id');\n                this.messages_view = new xabber.MessageContextView({\n                    contact: this.contact,\n                    mention_context: options.mention,\n                    model: this,\n                    stanza_id_context: stanza_id,\n                    encrypted: options.encrypted\n                });\n                this.account.context_messages.add(message);\n                this.messages_view.messagesRequest({after: stanza_id}, () => {\n                    let screen = 'all-chats';\n                    if (options.mention)\n                        screen = 'mentions';\n                    else if (options.message)\n                        screen = xabber.body.screen.get('name');\n                    xabber.body.setScreen(screen, {\n                        right: 'message_context',\n                        model: this,\n                    }, {\n                        right_contact_save: true\n                    });\n                });\n            }\n\n        })\n        if (!message) {\n            message = messages.models.find(item => {\n                return item.get('origin_id') === unique_id;\n            })\n            if (!message) {\n                this.contact.getMessageByStanzaId(unique_id, ($message) => {\n                    if (options.encrypted && this.account.omemo) {\n                        let omemo_dfd = new $.Deferred;\n                        omemo_dfd.done(($msg, msg_options) => {\n                            msg_options = msg_options || {};\n                            msg_options.searched_message = true;\n                            message = this.account.chats.receiveChatMessage($msg[0], msg_options);\n                            dfd.resolve();\n                        }).fail(() => {\n                            dfd.resolve();\n                        });\n                        message = this.account.omemo.receiveChatMessage($message, {\n                            searched_message: true,\n                            gallery: true,\n                        }, omemo_dfd);\n\n                    } else {\n                        message = this.account.chats.receiveChatMessage($message, {\n                            searched_message: true,\n                        });\n                        dfd.resolve();\n                    }\n                }, {encrypted: options.encrypted});\n\n            } else {\n                dfd.resolve()\n            }\n        } else {\n            dfd.resolve()\n        }\n    },\n\n    sendDeliveryReceipt: function ($message) {\n        let $delivery_msg = $msg({\n            to: this.contact.get('jid'),\n            type: 'chat',\n            id: uuid()})\n            .c('received', { xmlns: Strophe.NS.RECEIPTS, id: $message.attr('id')});\n        this.account.sendMsg($delivery_msg);\n    },\n\n    sendMarker: function (msg_id, status, stanza_id, contact_stanza_id, is_ephemeral, send_pending) {\n        status || (status = 'displayed');\n        let stanza = $msg({\n            to: this.get('jid'),\n            type: 'chat',\n            id: uuid()\n        }).c(status).attrs({\n            xmlns: Strophe.NS.CHAT_MARKERS,\n            id: msg_id || stanza_id || contact_stanza_id || \"\"\n        });\n        stanza_id && stanza.c('stanza-id', {xmlns: 'urn:xmpp:sid:0', id: stanza_id, by: this.account.get('jid')}).up();\n        (!this.get('saved') && contact_stanza_id) && stanza.c('stanza-id', {xmlns: 'urn:xmpp:sid:0', id: contact_stanza_id, by: this.contact.get('jid')}).up();\n        is_ephemeral && stanza.up().c('store', {xmlns: Strophe.NS.HINTS});\n        is_ephemeral && stanza.up().c('encryption', {xmlns: Strophe.NS.EXPLICIT_MESSAGE_ENCRYPTION, namespace: Strophe.NS.OMEMO});\n        is_ephemeral && stanza.up().c('conversation', {xmlns: Strophe.NS.SYNCHRONIZATION, type: Strophe.NS.OMEMO, jid: this.contact.get('jid')});\n        send_pending && this.account._pending_stanzas.push({stanza: stanza});\n        this.account.sendMsg(stanza);\n    },\n\n    receiveMarker: function ($message, tag, carbon_copied) {\n        let $displayed = $message.find('displayed'),\n            $received = $message.find('received'),\n            error = $message.attr('type') === 'error';\n        if (error || !$displayed.length && !$received.length)\n            return;\n        let marked_msg_id = $displayed.attr('id') || $received.attr('id'),\n            marked_stanza_id = $displayed.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id') || $received.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg = this.account.messages.find(m => marked_stanza_id && (m.get('stanza_id') === marked_stanza_id || m.get('contact_stanza_id') === marked_stanza_id) || m.get('msgid') === marked_msg_id);\n        if (!msg) {\n            let enc_chat =  this.account.chats.get(`${this.id}:encrypted`),\n                enc_msg = enc_chat && enc_chat.messages.find(m => marked_stanza_id && (m.get('stanza_id') === marked_stanza_id || m.get('contact_stanza_id') === marked_stanza_id) || m.get('msgid') === marked_msg_id);\n            if (!enc_msg && this.account.omemo){\n                let cached_msg = this.account.omemo.cached_messages.getMessage(this.contact, marked_stanza_id);\n                if (cached_msg && cached_msg.envelope && !cached_msg.displayed_time){\n                    cached_msg.displayed_time = $message.find('time').attr('stamp');\n                    cached_msg && this.account.omemo.cached_messages.putMessage(this.contact, marked_stanza_id, cached_msg);\n                }\n            }\n            if (enc_msg)\n                enc_chat.receiveMarker($message, tag, carbon_copied);\n            return;\n        }\n        if (msg.isSenderMe()) {\n            if ($received.length) {\n                let msg_state = msg.get('state');\n                if (msg_state === constants.MSG_ERROR){\n                    msg.set('state', constants.MSG_DELIVERED)\n                    return;\n                }\n                if (msg_state !== constants.MSG_DISPLAYED) {\n                    let delivered_time = $received.children('time').attr('stamp');\n                    if (delivered_time) {\n                        msg.set('time', pretty_datetime(delivered_time));\n                        msg.set('timestamp', Number(delivered_time));\n                    }\n                }\n                if (this.get('saved')){\n                    this.setMessagesDisplayed(msg.get('timestamp'));\n                } else {\n                    this.setMessagesDelivered(msg.get('timestamp'));\n                }\n            } else {\n                let msg_state = msg.get('state');\n                if (msg_state === constants.MSG_ERROR){\n                    msg.set('state', constants.MSG_DISPLAYED)\n                    return;\n                }\n                this.setMessagesDisplayed(msg.get('timestamp'));\n            }\n        } else {\n            msg.set('is_unread', false);\n            if ($message.find('time').length && msg.get('ephemeral_timer')) {\n                msg.set('displayed_time', $message.find('time').attr('stamp'));\n                msg.collection.checkEphemeralTimers();\n            }\n        }\n    },\n\n    setMessagesDelivered: function (timestamp) {\n        !timestamp && (timestamp = moment.now());\n        let undelivered_messages = this.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DELIVERED));\n        if (!undelivered_messages.length) {\n            let chat =  this.account.chats.get(this.id + ':encrypted');\n            chat && (undelivered_messages = chat.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DELIVERED)));\n        }\n        undelivered_messages.forEach(message => message.set('state', constants.MSG_DELIVERED));\n    },\n\n    setMessagesDisplayed: function (timestamp) {\n        !timestamp && (timestamp = moment.now());\n        let undelivered_messages = this.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DISPLAYED));\n        if (!undelivered_messages.length) {\n            let chat =  this.account.chats.get(this.id + ':encrypted');\n            chat && (undelivered_messages = chat.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DISPLAYED)));\n        }\n        undelivered_messages.forEach(message => {\n            message.set('state', constants.MSG_DISPLAYED);\n            if (message.get('ephemeral_timer')){\n                message.set('displayed_time', Date.now());\n                message.collection.checkEphemeralTimers();\n            }\n        });\n    },\n\n    receiveCarbonsMarker: function ($marker) {\n        let stanza_id = $marker.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg_id = $marker.attr('id'),\n            msg = this.messages.find(m => stanza_id && (m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id) || m.get('msgid') === msg_id), msg_idx;\n        msg && (msg_idx = this.messages.indexOf(msg));\n        if (!msg) {\n            let enc_chat =  this.account.chats.get(this.id + ':encrypted'),\n                enc_msg = enc_chat && enc_chat.messages.find(m => stanza_id && (m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id) || m.get('msgid') === msg_id);\n            if (enc_msg){\n                enc_chat.receiveCarbonsMarker($marker);\n                return;\n            }\n        }\n        if (this.get('const_unread') && this.get('last_read_msg')){\n            let last_read_msg_id = this.get('last_read_msg'),\n                last_read_msg = this.messages.find(m => stanza_id && (m.get('stanza_id') === last_read_msg_id || m.get('contact_stanza_id') === last_read_msg_id)),\n                deferred = new $.Deferred(),\n                second_deferred = new $.Deferred(),\n                new_last_read_msg = msg;\n            second_deferred.done(() => {\n                if (last_read_msg.get('timestamp') < new_last_read_msg.get('timestamp')){\n                    this.set('last_read_msg', new_last_read_msg.get('stanza_id'))\n                    this.trigger('update_last_read_msg');\n                }\n            });\n            deferred.done(() => {\n                if (!new_last_read_msg){\n                    this.contact.getMessageByStanzaId(stanza_id, ($message) => {\n                        new_last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                        second_deferred.resolve()\n                    });\n                } else {\n                    second_deferred.resolve()\n                }\n            });\n            if (!last_read_msg){\n                this.contact.getMessageByStanzaId(last_read_msg_id, ($message) => {\n                    last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                    deferred.resolve()\n                });\n            } else {\n                deferred.resolve()\n            }\n        }\n        if (msg_idx > -1) {\n            for (let i = msg_idx; i >= 0; i--) {\n                let message = this.messages.models[i];\n                message.set('is_unread', false);\n            }\n        }\n        else {\n            let unread_msg = this.messages_unread.find(m => m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id || m.get('msgid') === msg_id);\n            unread_msg && unread_msg.set('is_unread', false);\n        }\n    },\n\n    receiveDeliveryReceipt: function ($message) {\n        let $received = $message.find('received'),\n            delivered_origin_id = $received.attr('id'),\n            delivered_stanza_id = $received.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg = this.account.messages.get(delivered_origin_id || delivered_stanza_id);\n        if (!msg)\n            return;\n        msg.isSenderMe() && msg.set('state', constants.MSG_DELIVERED);\n    },\n\n    onPresence: function (type) {\n        let jid = this.get('jid');\n        if (!this.contact.get('group_chat') && !this.contact.get('in_roster')) {\n            if (type === 'subscribe') {\n                this.messages.createSystemMessage({\n                    from_jid: jid,\n                    auth_request: true,\n                    message: xabber.getString(\"action_subscription_received\")\n                });\n            }\n        }\n    },\n\n    onRosterPush: function (type) {\n        let jid = this.get('jid');\n        // not used\n        if (type === 'remove')\n            this.messages.createSystemMessage({\n                from_jid: jid,\n                silent: false,\n                message: xabber.getString(\"action_contact_deleted\")\n            });\n\n    },\n\n    retractMessages: function (msgs, group_chat, symmetric) {\n        let msgs_responses = 0, count = msgs.length, dfd = new $.Deferred();\n        dfd.done((num) => {\n            if (num === 0) {\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            }\n            else if (num !== msgs.length) {\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            }\n        });\n        $(msgs).each((idx, item) => {\n            let stanza_id = item.get('stanza_id'),\n                contact_stanza_id = item.get('contact_stanza_id');\n            if (stanza_id || contact_stanza_id) {\n                let iq_retraction = $iq({type: 'set', to: group_chat ? (this.contact.get('full_jid') || this.contact.get('jid')) : this.account.get('jid')})\n                    .c('retract-message', {\n                        id: (this.get('group_chat') && contact_stanza_id || stanza_id),\n                        xmlns: Strophe.NS.REWRITE,\n                        conversation: this.contact.get('jid'),\n                        symmetric: symmetric,\n                        type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this),\n                        by: this.account.get('jid')\n                    });\n                this.account.sendIQFast(iq_retraction, (success) => {\n                        this.item_view.content.removeMessage(item);\n                        msgs_responses++;\n                        (msgs_responses === msgs.length) && dfd.resolve(count);\n                    }, (error) => {\n                        msgs_responses++;\n                        if ($(error).find('not-allowed').length)\n                            count--;\n                        (msgs_responses === msgs.length) && dfd.resolve(count);\n                    });\n            }\n        });\n    },\n\n    retractMessagesByUser: function (user_id, callback, errback) {\n        let iq_retraction = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('retract-user', {\n                id: user_id,\n                xmlns: Strophe.NS.REWRITE,\n                type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this),\n                symmetric: true\n            });\n        this.account.sendIQFast(iq_retraction, (success) => {\n            let user_msgs = this.messages.filter(msg => msg.get('user_info') && (msg.get('user_info').id == user_id));\n            $(user_msgs).each((idx, msg) => {\n                this.item_view.content.removeMessage(msg);\n            });\n            callback && callback();\n        }, (error) => {\n            if ($(error).find('not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            errback && errback();\n        });\n    },\n\n    retractAllMessages: function (symmetric, callback, errback) {\n        let is_group_chat = this.get('group_chat'),\n            iq_retraction = $iq({type: 'set', to: is_group_chat ? (this.contact.get('full_jid') || this.contact.get('jid')) : this.account.get('jid')}),\n            retract_attrs = {\n                xmlns: Strophe.NS.REWRITE,\n                type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this),\n                symmetric: symmetric\n        };\n        retract_attrs.conversation = this.get('jid');\n        iq_retraction.c('retract-all', retract_attrs);\n        this.account.sendIQFast(iq_retraction, (iq_response) => {\n            let all_messages = this.messages.models;\n            $(all_messages).each((idx, msg) => {\n                this.item_view.content.removeMessage(msg);\n            });\n            callback && callback();\n        }, (error) => {\n            if ($(error).find('not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            errback && errback();\n        });\n    },\n\n    showBlockedRequestMessage: function () {\n        if (this.messages.length)\n            this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                message: xabber.getString(\"action_contact_blocked\"),\n                time: this.messages.last().get('time')\n            });\n    },\n\n    muteChat: function (muted_seconds) {\n        let muted = this.isMuted(),\n            is_muted = muted && muted !== '0' ? true : false,\n            muted_value = is_muted ? '' : '0';\n        if (muted_seconds || muted_seconds === '')\n            muted_value = muted_seconds;\n        let conversation_options = {\n            jid: this.contact.get('jid'),\n            mute: muted_value,\n            type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this)\n        },\n        iq = $iq({type: 'set', to: this.account.get('jid')})\n            .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n            .c('conversation', conversation_options);\n        this.account.sendIQFast(iq);\n    },\n\n    getConversationType: function (chat) {\n        if (chat.get('encrypted'))\n            return Strophe.NS.SYNCHRONIZATION_OMEMO;\n        if (chat.contact && chat.contact.get('group_chat'))\n            return Strophe.NS.GROUP_CHAT;\n        return Strophe.NS.SYNCHRONIZATION_REGULAR_CHAT\n    },\n\n    deleteFromSynchronization: function (callback, errback) {\n        let conversation_options = {jid: this.get('jid'), status: 'deleted', type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this) };\n        this.account.cached_sync_conversations.removeFromCachedConversations(conversation_options.jid +  '/' + conversation_options.type);\n        let iq = $iq({type: 'set', to: this.account.get('jid')})\n            .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n            .c('conversation', conversation_options);\n        this.account.sendIQFast(iq, (success) => {\n            callback && callback(success);\n        }, (error) => {\n            errback && errback(error);\n        });\n    }\n});\n\nxabber.ChatItemView = xabber.BasicView.extend({\n    className: 'chat-item list-item',\n    template: templates.chat_item,\n    avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n    events: {\n        'click': 'openByClick'\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.message_counter = 0;\n        this.$el.attr('data-id', this.model.id);\n        if (!this.model.sync_created)\n            this.content = new xabber.ChatContentView({chat_item: this});\n        this.content_placeholder = new xabber.ChatContentPlaceholderView();\n        this.updateName();\n        this.updateStatus();\n        this.updateCounter();\n        this.updateAvatar();\n        this.updateMutedState();\n        this.updatePinned();\n        this.updateArchivedState();\n        this.updateColorScheme();\n        this.updateGroupChats();\n        this.updateIcon();\n        this.updateEncrypted();\n        this.updateChatError();\n        this.model.on(\"change:active\", this.updateActiveStatus, this);\n        this.model.on(\"change:unread\", this.updateCounter, this);\n        this.model.on(\"change:encrypted\", this.updateEncrypted, this);\n        this.model.on(\"change:const_unread\", this.updateCounter, this);\n        this.model.on(\"change:pinned\", this.updatePinned, this);\n        this.model.on(\"change:archived\", this.updateArchivedState, this);\n        this.model.on(\"change:muted\", this.updateMutedState, this);\n        this.model.on(\"open\", this.open, this);\n        this.model.on(\"remove_opened_chat\", this.onClosed, this);\n        this.model.messages.on(\"add\", this.updateChatCard, this);\n        this.model.messages.on(\"destroy\", this.onMessageRemoved, this);\n        this.model.messages.on(\"change:state\", this.onChangedMessageState, this);\n        if (this.contact) {\n            this.updateIncomingSubscription();\n            this.contact.on(\"change:name\", this.updateName, this);\n            this.contact.on(\"change:invitation\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription_request_in\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription_request_out\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:status\", this.updateStatus, this);\n            this.contact.on(\"change:private_chat\", this.updateIcon, this);\n            this.contact.on(\"change:invitation\", this.updateIcon, this);\n            this.contact.on(\"change:incognito_chat\", this.updateIcon, this);\n            this.contact.on(\"change:image\", this.updateAvatar, this);\n            this.contact.on(\"change:blocked\", this.onBlocked, this);\n            this.contact.on(\"change:group_chat\", this.updateGroupChats, this);\n            this.contact.on(\"change:in_roster\", this.updateAcceptedStatus, this);\n            this.contact.on(\"remove_invite\", this.removeInvite, this);\n            this.contact.on(\"update_trusted\", this.updateEncryptedColor, this);\n        }\n        this.$el.switchClass('saved-chat', this.model.get('saved'));\n        this.$el.find('.circle-avatar').switchClass('ground-color-700', this.model.get('saved'));\n        this.model.get('saved') && this.$el.find('.circle-avatar').html(env.templates.svg['saved-messages']());\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n    },\n\n    render: function () {\n        if (this.model.get('saved') && (this.$('.chat-title').text() !== xabber.getString(\"saved_messages__header\"))) {\n            this.$('.chat-title').text(xabber.getString(\"saved_messages__header\"));\n        }\n    },\n\n    updateChatCard: function (msg) {\n        if (this.content){\n            return;\n        }\n        if (this.message_counter == 0 && !(!msg.get('synced_from_server') && msg.get('encrypted') && this.model.get('encrypted'))){\n            this.message_counter++;\n            return\n        }\n        this.content = new xabber.ChatContentView({ chat_item: this, new_message: msg });\n        this.updateLastMessage(msg);\n        return;\n    },\n\n    onChangedMessageState: function (message) {\n        if (message.get('state') === constants.MSG_DISPLAYED && this.model.get('last_displayed_id') < message.get('stanza_id')) {\n            this.model.set('last_displayed_id', message.get('stanza_id'));\n            this.model.set('last_delivered_id', message.get('stanza_id'));\n        } else if (message.get('state') === constants.MSG_DELIVERED && this.model.get('last_delivered_id') < message.get('stanza_id')) {\n            this.model.set('last_delivered_id', message.get('stanza_id'));\n        }\n        if (this.content) {\n            let $message = this.content.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`),\n                $elem = $message.find('.msg-delivering-state');\n            $elem.attr({\n                'data-state': message.getState(),\n                'title': message.getVerboseState()\n            });\n            ($elem.attr('data-state') === constants.MSG_STATE[constants.MSG_ERROR]) && $elem.dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'left'\n            });\n        }\n        if (message === this.model.last_message) {\n            this.updateLastMessage();\n        }\n        this.updateChatError();\n    },\n\n    updateName: function () {\n        if (this.model.get('saved')) {\n            this.$('.chat-title').text(xabber.getString(\"saved_messages__header\"));\n            return;\n        }\n        this.$('.chat-title').text(this.contact.get('name'));\n    },\n\n    updateStatus: function () {\n        if (this.model.get('saved'))\n            return;\n        let status = this.contact.get('status');\n        this.$('.status').attr('data-status', status);\n        this.$('.chat-icon').attr('data-status', status);\n    },\n\n    updateActiveStatus: function () {\n        this.$el.switchClass('active', this.model.get('active'));\n        this.updateLastMessage();\n    },\n\n    updateAcceptedStatus: function () {\n        let in_roster = this.contact.get('in_roster');\n        if (in_roster)\n            this.model.set('is_accepted', true);\n    },\n\n    onBlocked: function () {\n        this.updateIcon();\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n\n    updateCounter: function () {\n        let unread = this.model.get('unread') + this.model.get('const_unread');\n        this.$('.msg-counter').showIf(unread).text(unread || '');\n        this.updateTextClipping();\n    },\n\n    updateIncomingSubscription: function () {\n        this.$('.msg-incoming-subscription').showIf(this.contact.get('invitation') || (this.contact.get('subscription_request_in') && this.contact.get('subscription') != 'both'));\n        this.updateTextClipping();\n    },\n\n    updateChatError: function () {\n        let error_msgs = this.model.messages.filter(m => m.get('state') === -1)\n        this.$('.msg-chat-error').showIf(error_msgs.length);\n        this.updateTextClipping();\n    },\n\n    updateTextClipping: function () {\n        let indicators_count = this.$('.chat-item-notifications-wrap').children(':not(.hidden)').length;\n        this.$('.last-msg').switchClass('triple-indicators', indicators_count === 3)\n        this.$('.last-msg').switchClass('quad-indicators', indicators_count === 4)\n    },\n\n    updateAvatar: function () {\n        if (this.model.get('saved'))\n            return;\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateEncrypted: function () {\n        this.$el.switchClass('encrypted', this.model.get('encrypted'));\n    },\n\n    updatePinned: function () {\n        let is_pinned = this.model.get('pinned');\n        this.$('.pinned-icon').showIf(is_pinned && is_pinned !== '0');\n        if (is_pinned)\n            xabber.chats_view.updateChatPosition(this.model);\n    },\n\n    updateEncryptedColor: function (encrypted) {\n        this.$el.attr('data-trust', encrypted);\n    },\n\n    updateIcon: function () {\n        if (!this.contact)\n            return;\n        this.$('.chat-icon').addClass('hidden');\n        let ic_name = this.contact.getIcon();\n        ic_name && this.$('.chat-icon').removeClass('hidden group-invite blocked').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n    },\n\n    updateMutedState: function () {\n        if (!this.contact)\n            return;\n        this.$('.msg-counter').switchClass('muted-chat-counter', this.model.isMuted());\n        this.$('.muted-icon').switchClass('mdi-bell-off', (this.model.isMuted() > 4800000000)).switchClass('mdi-bell-sleep', (this.model.isMuted() <= 4800000000));\n        this.$('.muted-icon').showIf(this.model.isMuted());\n    },\n\n    updateArchivedState: function () {\n        if (!this.contact)\n            return;\n        let archived = this.model.get('archived');\n        if (archived || (!archived && xabber.toolbar_view.$('.active').hasClass('archive-chats')))\n            this.$el.detach();\n        if (archived && xabber.toolbar_view.$('.active').hasClass('archive-chats') || !archived && !xabber.toolbar_view.$('.active').hasClass('archive-chats'))\n            xabber.chats_view.updateChatPosition(this.model);\n    },\n\n    updateGroupChats: function () {\n        if (!this.contact)\n            return;\n        let is_group_chat = this.contact.get('group_chat');\n        this.$('.status').hideIf(is_group_chat);\n        this.$('.chat-icon').showIf(is_group_chat);\n        this.updateIcon();\n        if (is_group_chat) {\n            this.$el.addClass('group-chat');\n            this.model.set('group_chat', true);\n        }\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    onMessageRemoved: function (msg) {\n        if (this.model.last_message === msg) {\n            let last_message;\n            for (let idx = this.model.messages.length-1; idx >= 0; idx--) {\n                last_message = this.model.messages.at(idx);\n                if (!last_message.get('silent'))\n                    break;\n            }\n            this.model.last_message = last_message;\n            this.updateLastMessage();\n        }\n        this.deletePlayersFromMessage(msg);\n    },\n\n    deletePlayersFromMessage: function (message) {\n        let players = []\n        message.get('msg_player_videos') && (players = players.concat(message.get('msg_player_videos')));\n        message.get('msg_player_audios') && (players = players.concat(message.get('msg_player_audios')));\n        if (players.length){\n            if (xabber.current_plyr_player){\n                let is_current_player = xabber.current_plyr_player.is_popup ?\n                    players.includes(xabber.current_plyr_player.chat_item.model.plyr_players[xabber.current_plyr_player.player_index])\n                    : players.includes(xabber.current_plyr_player);\n\n                if (is_current_player){\n                    xabber.plyr_players.forEach((item) => {\n                        if (item.$audio_elem){\n                            if (item.$audio_elem.voice_message)\n                                item.$audio_elem.voice_message.stopTime()\n                        }\n                        else\n                            item.stop();\n                    })\n                    if (xabber.current_plyr_player.is_popup && xabber.plyr_player_popup){\n                        xabber.plyr_player_popup.closePopup();\n                    } else {\n                        xabber.current_plyr_player = null;\n                        xabber.trigger('plyr_player_updated');\n                    }\n                }\n            }\n            this.model.plyr_players = this.model.plyr_players.filter((obj) => !players.includes(obj));\n            xabber.plyr_players = xabber.plyr_players.filter((obj) => !players.includes(obj));\n            xabber.trigger('plyr_player_updated');\n        }\n    },\n\n    updateEmptyChat: function () {\n        let msg_time = this.model.get('timestamp'),\n            is_empty = Number(this.model.get('last_delivered_id')) || Number(this.model.get('last_displayed_id')) || Number(this.model.get('last_read_msg')),\n            is_truly_empty = Boolean(is_empty) && !this.model.messages.length && !this.model.get('encrypted'),\n            own_domain = Strophe.getDomainFromJid(this.account.get('jid')),\n            contact_domain = Strophe.getDomainFromJid(this.model.get('jid'));\n\n        if (Boolean(is_truly_empty) && this.model.get('group_chat') && own_domain != contact_domain){\n            is_truly_empty = this.model.get('history_loaded');\n        }\n\n        this.$('.last-msg').html(xabber.getString(is_truly_empty ? \"recent_chat__history_cleared\" : is_empty ? \"recent_chat__last_message_retracted\" : \"recent_chat__start_conversation\").italics());\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateEncryptedChat: function () {\n        let msg_time = this.model.get('timestamp');\n        this.$('.last-msg').html(xabber.getString(\"recent_chat__decrypting_messages\").italics());\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateLastMessage: function (msg) {\n        msg || (msg = this.model.last_message);\n        if (!this.model.get('active') && this.model.item_view && this.model.item_view.content && this.model.item_view.content.bottom && this.model.item_view.content.bottom.$('.input-message .rich-textarea').getTextFromRichTextarea().trim()){\n            let draft_message = this.model.item_view.content.bottom.$('.input-message .rich-textarea').getTextFromRichTextarea();\n            this.$('.last-msg').html(draft_message).prepend($(`<span class=\"text-color-700\">${xabber.getString(\"draft\")}: </span>`));\n            this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n            msg && this.model.set({timestamp: msg.get('timestamp')});\n            return;\n        }\n        if (!msg) {\n            !this.model.messages.length && this.updateEmptyChat();\n            return;\n        }\n        let msg_time = msg.get('time'),\n            timestamp = msg.get('timestamp'), msg_from = \"\",\n            forwarded_message = msg.get('forwarded_message'),\n            msg_files = msg.get('files') || [],\n            msg_images = msg.get('images') || [],\n            msg_locations = msg.get('locations') || [],\n            msg_text = forwarded_message ? (msg.get('message') || xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText(),\n            msg_user_info = msg.get('user_info') || msg.isSenderMe() && this.contact && this.contact.my_info && this.contact.my_info.attributes || {};\n        msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n        this.model.set({timestamp: timestamp});\n        if (this.model.get('group_chat'))\n            msg_from = msg_user_info.nickname || msg_user_info.jid || (msg.isSenderMe() ? this.account.get('name') : msg.get('from_jid')) || \"\";\n        msg_from && (msg_from = $('<span class=\"text-color-700\"/>').text(msg_from + ': '));\n        if (msg_files.length || msg_images.length || msg_locations.length) {\n            let $colored_span = $('<span class=\"text-color-500\"/>');\n            if (msg.get('type') === 'file_upload') {\n                msg_images = msg_files.filter(f => f && f.type && utils.isImageType(f.type));\n                msg_files = msg_files.filter(f => f && !(f.type && utils.isImageType(f.type)));\n            }\n            if (msg_files.length && msg_images.length)\n                msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n            else {\n                if (msg_files.length == 1 && (msg_files[0].is_audio || msg_files[0].voice))\n                    msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(msg_files[0].duration));\n                else if (msg_files.length > 0) {\n                    let total_size = 0;\n                    msg_files.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_images.length > 0) {\n                    let total_size = 0;\n                    msg_images.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_locations.length > 0) {\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                }\n            }\n            this.$('.last-msg').html(\"\").append(msg_from).append(msg_text);\n        }\n        else {\n            if (msg.get('type') == 'system') {\n                msg_from = \"\";\n                if (msg.get('invite'))\n                    msg_text = xabber.getString(\"groupchat_invitation_to_group_chat\", [(this.contact && this.contact.get('incognito_chat')) ? 'incognito' : 'public']);\n                msg.get('private_invite') && (msg_text = xabber.getString(\"recent_chat__last_message__private_invitation\"));\n                if (this.model.get('group_chat'))\n                    msg_text = $('<i/>').text(msg_text);\n                else\n                    msg_text = $('<span class=text-color-500/>').text(msg_text);\n                this.$('.last-msg').html(msg_text);\n                if (msg.get('auth_request')){\n                    xabber.toolbar_view.recountAllMessageCounter();\n                }\n            }\n            else {\n                if (forwarded_message) {\n                    if (msg.get('message')) {\n                        msg_text = msg.get('message');\n                        this.$('.last-msg').text(msg_text);\n                    }\n                    else {\n                        let first_forwarded_msg = forwarded_message[0];\n                        if (first_forwarded_msg.get('message')) {\n                            let fwd_msg_files = first_forwarded_msg.get('files') || [],\n                                fwd_msg_images = first_forwarded_msg.get('images') || [],\n                                fwd_msg_locations = first_forwarded_msg.get('locations') || [];\n                            first_forwarded_msg.get('videos') && first_forwarded_msg.get('videos').length && (fwd_msg_files = fwd_msg_files.concat(first_forwarded_msg.get('videos')));\n                            if (fwd_msg_files.length || fwd_msg_images.length || fwd_msg_locations.length) {\n                                let $colored_span = $('<span class=\"text-color-500\"/>');\n                                if (msg.get('type') === 'file_upload') {\n                                    fwd_msg_images = fwd_msg_files.filter(f => f.type && utils.isImageType(f.type));\n                                    fwd_msg_files = fwd_msg_files.filter(f => !(f.type && utils.isImageType(f.type)));\n                                }\n                                if (fwd_msg_files.length && fwd_msg_images.length)\n                                    msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [fwd_msg_files.length + fwd_msg_images.length]));\n                                else {\n                                    if (fwd_msg_files.length == 1 && (fwd_msg_files[0].is_audio || fwd_msg_files[0].voice))\n                                        msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(fwd_msg_files[0].duration));\n                                    else if (fwd_msg_files.length > 0) {\n                                        let total_size = 0;\n                                        fwd_msg_files.forEach((f) => {total_size+=Number(f.size)});\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", fwd_msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                                    }\n                                    if (fwd_msg_images.length > 0) {\n                                        let total_size = 0;\n                                        fwd_msg_images.forEach((f) => {total_size+=Number(f.size)});\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", fwd_msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                                    }\n                                    if (fwd_msg_locations.length > 0) {\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", fwd_msg_locations.length));\n                                    }\n                                }\n                                if (this.model.get('group_chat')) {\n                                    this.$('.last-msg').html(\"\").append(msg_from).append('» ').append(msg_text);\n                                } else {\n                                    this.$('.last-msg').html(\"» \").append(msg_text);\n                                }\n                            } else if (this.model.get('group_chat')) {\n                                msg_text = first_forwarded_msg.get('message');\n                                msg_text = '» ' + msg_text;\n                                this.$('.last-msg').text(msg_text);\n                            } else {\n                                msg_text = first_forwarded_msg.get('message');\n                                this.$('.last-msg').text(msg_text);\n                                msg_from = '» ';\n                            }\n                        }\n                        else {\n                            if (forwarded_message.length === 1) {\n                                let fwd_msg_txt = xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).slice(2)\n                                fwd_msg_txt = fwd_msg_txt.charAt(0).toUpperCase() + fwd_msg_txt.slice(1)\n                                msg_text = $('<i/>').text(fwd_msg_txt);\n                                this.$('.last-msg').html('» ').append(msg_text);\n                            }\n                            else {\n                                msg_text = $('<i/>').text(xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length));\n                                this.$('.last-msg').html('» ').append(msg_text);\n                            }\n                        }\n                    }\n                }\n                else {\n                    msg_text = msg.getText();\n                    this.$('.last-msg').text(msg_text);\n                }\n            }\n            this.$('.last-msg').prepend(msg_from);\n        }\n        if (msg.get('not_encrypted'))\n            this.$('.last-msg').html(this.$('.last-msg').html().italics());\n        this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n        this.$('.msg-delivering-state').showIf(msg.get('type') !== 'system' && msg.isSenderMe() && (msg.get('state') !== constants.MSG_ARCHIVED))\n            .attr('data-state', msg.getState());\n    },\n\n    openByClick: function () {\n        this.open();\n    },\n\n    open: function (options) {\n        if (!this.content){\n            this.content = new xabber.ChatContentView({chat_item: this});\n        }\n        options || (options = {right_contact_save: true, clear_search: false});\n        xabber.chats_view.openChat(this, options);\n        this.content.bottom.click_counter = 0;\n        this.content.bottom.setDefaultPlaceholder();\n    },\n\n    removeInvite: function (options) {\n        if (!this.account.server_features.get(Strophe.NS.REWRITE))\n            return;\n        options || (options = {});\n        let msgs = _.clone(this.model.messages.models);\n        this.model.set({'last_archive_id': undefined, 'first_archive_id': undefined});\n        msgs.forEach((item) => {\n            if (item.get('invite')) {\n                let iq_retraction = $iq({type: 'set', to: this.account.get('jid')})\n                    .c('retract-message', {\n                        id: item.get('stanza_id'),\n                        xmlns: Strophe.NS.REWRITE,\n                        type: Strophe.NS.SYNCHRONIZATION_REGULAR_CHAT,\n                        symmetric: false,\n                    });\n                this.account.sendIQFast(iq_retraction);\n                item && this.content.removeMessage(item);\n            }\n        });\n        this.model.recountUnread();\n        delete this.contact.attributes.invitation;\n        this.updateIcon();\n    },\n\n    onClosed: function () {\n        this.parent.onChatRemoved(this.model, {soft: true});\n    }\n});\n\n  xabber.MessagesView = xabber.BasicView.extend({\n      template: templates.chat_content,\n      ps_selector: '.chat-content',\n      ps_settings: {\n          wheelPropagation: true\n      },\n      avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n\n      _initialize: function (options) {\n          this.model = options.model;\n          this.contact = options.contact;\n          this.account = this.model.account;\n          let color = this.account.settings.get('color');\n          this.$el.attr('data-color', color);\n          this.$search_form = this.$('.search-form-header');\n          this.loading_history = false;\n          this.history_loaded = false;\n          this.first_msg_id = 0;\n          this.last_msg_id = 0;\n          this._scrolltop = this.getScrollTop();\n          this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n          this.chat_content = options.chat_content || this.model.item_view.content;\n          let wheel_ev = this.defineMouseWheelEvent();\n          this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n          this.$('.back-to-bottom').click(this.backToBottom.bind(this));\n      },\n\n      defineMouseWheelEvent: function () {\n          if (!_.isUndefined(window.onwheel)) {\n              return \"wheel\";\n          } else if (!_.isUndefined(window.onmousewheel)) {\n              return \"mousewheel\";\n          } else {\n              return \"MozMousePixelScroll\";\n          }\n      },\n\n      keyupSearch: function (ev) {\n          if (ev.keyCode === constants.KEY_ENTER) {\n              let query = this.$search_form.find('input').val();\n              this.model.searchMessages(query, (messages) => {\n              });\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              this.chat_content.head.renderSearchPanel();\n          }\n      },\n\n      onMouseWheel: function (ev) {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onClickMessage:function (ev) {\n          this.chat_content.onClickMessage(ev);\n      },\n\n      onClickLink:function (ev) {\n          this.chat_content.onClickLink(ev);\n      },\n\n      onClickLocationLink:function (ev) {\n          this.chat_content.onClickLocationLink(ev);\n      },\n\n      onClickLocation:function (ev) {\n          this.chat_content.onClickLocation(ev);\n      },\n\n      onHoverLocation:function (ev) {\n          this.chat_content.onHoverLocation(ev);\n      },\n\n      onScroll: function () {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this._prev_scrolltop = this._scrolltop || this._prev_scrolltop || 0;\n          this._scrolltop = this.getScrollTop() || this._scrolltop || this._prev_scrolltop || 0;\n          if (!this.history_loaded && !this.loading_history && (this._scrolltop < this._prev_scrolltop) && (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n              this.loading_history = true;\n              this.messagesRequest({before: this.first_msg_id}, () => {\n                  this.loading_history = false;\n              });\n          }\n      },\n\n      backToBottom: function () {\n          this.openChat();\n          this.scrollToBottom();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      messagesRequest: function () {},\n\n      emptyChat: function () {\n          this.$('.chat-content').html($('<span class=\"error\"/>').text(xabber.getString(\"no_messages\")));\n      },\n\n      openChat: function () {\n          this.model.item_view.open({right_contact_save: true, clear_search: false});\n      },\n\n      addMessageHTML: function ($message, msg, index, last_index) {\n          let scrolled_from_top,\n              scrolled_from_bottom = this.getScrollBottom();\n          if (index === 0)\n              $message.prependTo(this.$('.chat-content'));\n          else\n              $message.insertAfter(this.$('.chat-message').eq(index - 1));\n          if (index === last_index)\n              scrolled_from_top = this.getScrollTop();\n          let $next_message = $message.nextAll('.chat-message').first();\n          this.chat_content.updateMessageInChat($message[0], msg);\n          if ($next_message.length) {\n              this.chat_content.updateMessageInChat($next_message[0]);\n          }\n          this.chat_content.initPopup($message);\n          if (scrolled_from_top)\n              this.scrollTo(scrolled_from_top);\n          else\n              this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - scrolled_from_bottom);\n          return $message;\n      }\n\n  });\n\n  xabber.MessageContextView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap messages-context-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          options = options || {};\n          this.stanza_id = options.stanza_id_context;\n          this.encrypted = options.encrypted;\n          this.mention_context = options.mention_context;\n          if (!this.model.item_view.content)\n              this.chat_content = new xabber.ChatContentView({chat_item: this.model.item_view});\n          this.$history_feedback = this.$('.load-history-feedback');\n          this.account.context_messages = new xabber.Messages(null, {account: this.account});\n          this.account.context_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.account.context_messages.on(\"add\", this.addMessage, this);\n          this.account.context_messages.on(\"change:is_unread\", this.onChangedReadState, this);\n          xabber.on('plyr_player_updated', this.onUpdatePlyr, this);\n      },\n\n      render: function () {\n          this.scrollToTop();\n          this.onUpdatePlyr();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this.encrypted && this.$el.attr('data-trust', true)\n      },\n\n      onMouseWheel: function (ev) {\n          if (!this.loading_history)\n              if (ev.originalEvent.deltaY < 0) {\n                  if (!this.first_history_loaded) {\n                      this.loading_history = true;\n                      this.messagesRequest({before: this.first_msg_id}, () => {\n                          this.loading_history = false;\n                      });\n                  }\n              }\n              else {\n                  if (!this.last_history_loaded) {\n                      this.loading_history = true;\n                      this.messagesRequest({after: this.last_msg_id}, () => {\n                          this.loading_history = false;\n                      });\n                  }\n              }\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onScroll: function () {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this._prev_scrolltop = this._scrolltop || this._prev_scrolltop || 0;\n          this._scrolltop = this.getScrollTop() || this._scrolltop || this._prev_scrolltop || 0;\n          this._scrollbottom = this.getScrollBottom();\n\n          if (!this.loading_history)\n              if (!this.first_history_loaded && (this._scrolltop < this._prev_scrolltop) && (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n                  this.loading_history = true;\n                  this.showHistoryFeedback();\n                  this.messagesRequest({before: this.first_msg_id}, () => {\n                      this.loading_history = false;\n                      this.hideHistoryFeedback();\n                  });\n              }\n              else {\n                  if (!this.last_history_loaded && (this._scrolltop > this._prev_scrolltop) && (this._scrollbottom < 100 || this.getPercentScrolled() > 0.9)) {\n                      this.loading_history = true;\n                      this.showHistoryFeedback();\n                      this.messagesRequest({after: this.last_msg_id}, () => {\n                          this.loading_history = false;\n                          this.hideHistoryFeedback();\n                      });\n                  }\n              }\n\n          clearTimeout(this._onscroll_read_messages_timeout);\n          this._onscroll_read_messages_timeout = setTimeout(() => {\n              this.chat_content.readVisibleMessages(true);\n          }, 100)\n      },\n\n      onChangedReadState: function (message) {\n          let is_unread = message.get('is_unread'),\n              $msg = this.$(`.chat-message[data-uniqueid=\"${message.get(\"unique_id\")}\"]`);\n          if (is_unread) {\n              if (message.get('was_readen'))\n                  return;\n              $msg.addClass('unread-message');\n              $msg.addClass('unread-message-background');\n          } else {\n              message.set('was_readen', true);\n              $msg.removeClass('unread-message');\n              setTimeout(() => {\n                  $msg.removeClass('unread-message-background');\n              }, 1000);\n          }\n      },\n\n      showHistoryFeedback: function () {\n          this.$history_feedback.text(xabber.getString(\"loading_history\")).removeClass('hidden');\n      },\n\n      hideHistoryFeedback: function () {\n          this.$history_feedback.addClass('hidden');\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              queryid = uuid();\n          !options.max && (options.max = xabber.settings.mam_messages_limit);\n          !options.after && !options.before && (options.before = '');\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first) && (this.last_msg_id = rsm.last);\n                  if (options.after && (messages.length < options.max))\n                      this.last_history_loaded = true;\n                  if (options.before && (messages.length < options.max))\n                      this.first_history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {context_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          if (this.mention_context && (message.get('stanza_id') === this.stanza_id)) {} else message.set('is_archived', true);\n\n          let msg_item = this.model.messages.find(msg => msg.get('stanza_id') == message.get('stanza_id') || msg.get('contact_stanza_id') == message.get('stanza_id'));\n          if (msg_item) {\n              msg_item.get('is_unread') && message.set('is_unread', msg_item.get('is_unread'));\n              msg_item.get('is_unread_archived') && message.set('is_unread_archived', msg_item.get('is_unread_archived'));\n          }\n\n          let $message = this.chat_content.buildMessageHtml(message).addClass('context-message'),\n              index = this.account.context_messages.indexOf(message);\n          if (message.get('stanza_id') === this.stanza_id) {\n              $message.addClass('message-from-context');\n              setTimeout(() => {\n                  $message.removeClass('message-from-context')\n              }, 3000);\n          }\n          this.addMessageHTML($message, message, index, this.account.context_messages.findLastIndex());\n      },\n\n      onUpdatePlyr: function (ev) {\n          this.$('.plyr-video-container').removeClass('active-plyr-container');\n          if (xabber.current_plyr_player && xabber.current_plyr_player.player_item) {\n              let $message = this.$(`.chat-message[data-uniqueid=\"${xabber.current_plyr_player.message_unique_id}\"]`);\n              if ($message.length) {\n                  $message.find(`.plyr-video-container[data-message-id=\"${xabber.current_plyr_player.player_item.message_id}\"]`).addClass('active-plyr-container');\n              }\n          }\n      },\n  });\n\n  xabber.SearchedMessagesView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap searched-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"click .btn-cancel-searching\": \"openChat\",\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          this.query_text = options.query_text;\n          this.account.searched_messages = new xabber.Messages(null, {account: this.account});\n          this.account.searched_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.account.searched_messages.on(\"add\", this.addMessage, this);\n          return this;\n      },\n\n      render: function () {\n          this.$search_form.find('input').val(this.query_text);\n          this.$search_form.slideToggle(10, () => {\n              if (this.$search_form.css('display') !== 'none')\n                  this.$search_form.find('input').focus();\n              this.scrollToBottom();\n          });\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              before: query.before || '',\n              var: [{var: 'withtext', value: this.query_text}]\n          });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.searched_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {searched_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('searched-message'),\n              index = this.account.searched_messages.indexOf(message);\n          this.addMessageHTML($message, message, index);\n      }\n  });\n\n  xabber.ContactSearchedMessagesView = xabber.MessagesView.extend({\n      template: templates.chat_content_contact,\n      ps_settings: {\n          wheelPropagation: true\n      },\n      avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n      className: 'chat-content-wrap searched-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"click .btn-cancel-searching\": \"openChat\",\n          \"keyup .messages-search-form\": \"keyupSearch\",\n          \"click .close-search-icon\": \"clearSearch\",\n          'click .btn-back': 'hideSearch'\n      },\n\n      _initialize: function (options) {\n          this.model = options.model;\n          this.contact = options.contact;\n          this.account = this.model.account;\n          this.$search_form = this.$('.search-form-header');\n          this.timer = null;\n          this.loading_history = false;\n          this.history_loaded = false;\n          this.first_msg_id = 0;\n          this.last_msg_id = 0;\n          this.chat_content = options.chat_content || this.model.item_view.content;\n          this.parent.model.set('search_hidden', true)\n          return this;\n      },\n\n      render: function () {\n          if (this.account.searched_messages)\n              this.searched_messages = this.account.searched_messages\n          this.account.searched_messages = new xabber.Messages(null, {account: this.account});\n          if (this.searched_messages)\n              this.account.searched_messages.add(this.searched_messages.toJSON(), {silent : true});\n          this.account.searched_messages.on(\"add\", this.addMessage, this);\n          if (this.parent.model.get('saved_search_panel')) {\n              this.$el.html(this.parent.model.get('saved_search_panel'));\n              this.model.set('saved_search_panel', undefined);\n          }\n          else {\n              this.emptyChat();\n              this.$el.html(this.template());\n              this.emptyChat();\n              if (this.parent.model.get('search_hidden'))\n                  this.hideSearch();\n          }\n          this.ps_container = this.$('.search-messages-content-wrap');\n          if (this.ps_container.length) {\n              this.ps_container.perfectScrollbar(\n                  _.extend(this.ps_settings || {}, xabber.ps_settings)\n              );\n          }\n          this.$search_form = this.$('.search-form-header');\n          if (this.parent.model.get('saved_search_panel')) {\n              this.$search_form.find('input').focus();\n              if (this.parent.model.get('saved_search_panel_scroll'))\n                  this.scrollTo(this.parent.model.get('saved_search_panel_scroll'));\n          }\n      },\n\n      clearSearch: function () {\n          this.$search_form.find('input').val('');\n          this.emptyChat();\n      },\n\n\n      keyupSearch: function (ev) {\n          this.$('.close-search-icon').hideIf(!this.$search_form.find('input').val());\n          if (ev.keyCode === constants.KEY_ENTER) {\n              this.emptyChat();\n              let query = this.$search_form.find('input').val();\n              this.$('.preloader-wrap').hideIf(false);\n              this.loading_timestamp = Number(moment.now());\n              this.messagesRequest(query, this.loading_timestamp, undefined, [], (messages, rsm) => {\n              });\n          }\n      },\n\n      emptyChat: function () {\n          if (this.account.searched_messages)\n              this.account.searched_messages.reset();\n          this.$('.chat-content').html('');\n          this.$('.messages-count').hideIf(true);\n          this.$('.preloader-wrap').hideIf(true);\n          this.$('.search-results').hideIf(true);\n          this.$('.close-search-icon').hideIf(true);\n      },\n\n      messagesRequest: function (query, timestamp, rsm, loaded_messages, callback) {\n          if(!query || this.loading_timestamp != timestamp) {\n              this.emptyChat();\n              return true;\n          }\n          let messages = [],\n              options = {},\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              var: [{var: 'withtext', value: query}]\n          });\n          if (rsm && rsm.last)\n              _.extend(options, {\n                  after: rsm.last,\n              });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.searched_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  loaded_messages = loaded_messages.concat(messages)\n                  if (messages.length == options.max){\n                      if (this.parent &&  this.parent.data && !this.parent.data.get('visible') || this.parent.model.get('search_hidden'))\n                          return;\n                      else\n                          this.messagesRequest(query, timestamp, rsm, loaded_messages, (messages, rsm) => {});\n                  }\n                  else if (loaded_messages.length == rsm.count) {\n                      if (rsm.count != 0) {\n                          let message_count = rsm.count;\n                          this.emptyChat()\n                          // list.sort((a, b) => (a.color > b.color) ? 1 : -1)\n                          $(loaded_messages).each((idx, message) => {\n                              let $message = $(message),\n                                  $jingle_msg_propose = $message.find(`propose[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`);\n                              if ($jingle_msg_propose.length)\n                                  message_count--;\n                              this.account.chats.receiveChatMessage($message, {\n                                  searched_message: true,\n                                  searched_in_contact_messages: true,\n                                  query: query\n                              });\n                          });\n                          this.$('.messages-count').hideIf(!message_count);\n                          this.$('.close-search-icon').hideIf(!message_count);\n                          this.$('.search-results').hideIf(message_count);\n                          this.$('.messages-count').text(xabber.getQuantityString(\"searched_messages_count\", message_count));\n                      }\n                      else {\n                          this.emptyChat();\n                          this.$('.close-search-icon').hideIf(false);\n                          this.$('.search-results').hideIf(false);\n                      }\n\n                  }\n                  callback && callback(messages, rsm);\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessageHTML: function ($message, msg, index, last_index) {\n          $message.prependTo(this.$('.chat-content'));\n          if (index === last_index)\n              scrolled_from_top = this.getScrollTop();\n          let $next_message = $message.nextAll('.chat-message').first();\n          // this.chat_content.updateMessageInChat($message[0]);\n          // if ($next_message.length) {\n          //     this.chat_content.updateMessageInChat($next_message[0]);\n          // }\n          // this.chat_content.initPopup($message);\n          return $message;\n      },\n\n      addMessage: function (message) {\n          if (!this.parent.model.get('search_hidden')) {\n              if (message.get('auth_request') || !message.get('searched_in_contact_messages'))\n                  return;\n              message.set('is_archived', true);\n              message.set('searched_message', true);\n              let $message = this.chat_content.buildMessageHtml(message).addClass('searched-message'),\n                  index = this.account.searched_messages.indexOf(message);\n              this.chat_content.showMessageAuthor($message);\n              this.addMessageHTML($message, message, index);\n          }\n      },\n\n      hideSearch: function (ev) {\n          this.parent.model.set('search_hidden', true);\n          this.$('.search-input').val('')\n          this.emptyChat();\n          if (this.parent.ps_container.length) {\n              this.parent.ps_container.perfectScrollbar(\n                  _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n              );\n          }\n          this.$('.search-wrap').hideIf(this.parent.model.get('search_hidden'))\n      },\n\n      onClickMessage: function (ev) {\n          let $elem = $(ev.target),\n              $msg = $elem.closest('.chat-message');\n          this.parent.model.set('saved_search_panel_scroll', this.ps_container[0].scrollTop);\n          this.ps_container.perfectScrollbar('destroy');\n          this.parent.model.set('saved_search_panel', this.$el.clone());\n          this.model.getMessageContext($msg.data('uniqueid'), {searched_messages: true});\n      }\n  });\n\n  xabber.ParticipantMessagesView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap participant-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          'click .btn-cancel-selection' : 'openChat',\n          'click .btn-retract-messages' : 'retractMessages',\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          this.participant = options.participant;\n          this.member_jid = this.participant.jid;\n          this.member_id = this.participant.id;\n          this.member_nickname = this.participant.nickname;\n          this.account.participant_messages = new xabber.Messages(null, {account: this.account});\n          this.account.participant_messages.on(\"add\", this.addMessage, this);\n          this.account.participant_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n          return this;\n      },\n\n      render: function () {\n          this.$('.chat-content').css('height', 'calc(100% - 32px)');\n          this.$('.participant-messages-header .messages-by-header .participant-nickname').text(this.member_nickname);\n          this.$('.participant-messages-header').removeClass('hidden');\n          this.scrollToBottom();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onScrollY: function () {\n\n      },\n\n      retractMessages: function () {\n          utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__confirm\", [(this.member_nickname || this.member_jid || this.member_id)]),\n              null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n              if (result) {\n                  if (this.member_id) {\n                      this.chat_content.model.retractMessagesByUser(this.member_id, () => {\n                          this.openChat();\n                      });\n                  }\n              }\n          });\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              member_id = this.member_id,\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              before: query.before || '',\n              var: [{var: 'with', value: member_id}]\n          });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid) {\n                  messages.push(message);\n              }\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options,\n              (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.participant_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {participant_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('participant-message'),\n              index = this.account.participant_messages.indexOf(message);\n          this.addMessageHTML($message, message, index);\n      }\n  });\n\n  xabber.SubscriptionButtonsView = xabber.BasicView.extend({\n      template: templates.subscription_buttons,\n\n      events: {\n          \"click .btn-decline\": \"declineSubscription\",\n          \"click .btn-allow\": \"allowSubscription\",\n          \"click .btn-add\": \"addContact\",\n          \"click .btn-subscribe\": \"addContact\",\n          \"click .btn-block\": \"blockContact\"\n      },\n\n      _initialize: function (options) {\n          this.$el.html(this.template());\n          this.contact = options.contact;\n          this.contact.on(\"change:subscription\", this.render, this);\n          this.contact.on(\"change:in_roster\", this.render, this);\n          this.contact.on(\"change:blocked\", this.render, this);\n          this.contact.on(\"change:subscription_request_in\", this.render, this);\n          this.contact.on(\"change:subscription_request_out\", this.render, this);\n      },\n\n      render: function () {\n          this.$el.closest('.chat-content-wrap').children('.chat-content').removeClass('with-before');\n          if (this.contact.get('group_chat')) {\n              this.$el.addClass('hidden');\n              return;\n          }\n          let subscription = this.contact.get('subscription'),\n              in_request = this.contact.get('subscription_request_in'),\n              in_roster = this.contact.get('in_roster'),\n              out_request = this.contact.get('subscription_request_out');\n          this.$('.button').removeClass('hidden');\n          this.$('.subscription-info').text(\"\");\n          this.$el.addClass('hidden');\n          if (subscription === 'both' || this.contact.get('blocked'))\n              return;\n          else if (subscription === 'to' && in_request || (subscription === 'none' && in_request && in_roster)) {\n              this.$('.subscription-info').text(xabber.getString(\"subscription_status_in_request_incoming\"));\n              this.$('.button:not(.btn-allow)').addClass('hidden');\n          } else if (!out_request && !in_roster && !in_request && (subscription === 'from' || subscription === 'none')) {\n              this.$('.subscription-info').text(xabber.getString(\"chat_subscribe_request_outgoing\"));\n              this.$('.button:not(.btn-subscribe)').addClass('hidden');\n          } else if (subscription === undefined || subscription === 'none' && in_request) {\n              this.$('.button:not(.btn-add):not(.btn-block)').addClass('hidden');\n          } else {\n              return;\n          }\n          this.$el.removeClass('hidden');\n          this.$el.closest('.chat-content-wrap').children('.chat-content').addClass('with-before');\n      },\n\n      hideElement: function () {\n          this.$el.addClass('hidden');\n          this.$el.closest('.chat-content-wrap').children('.chat-content').removeClass('with-before');\n      },\n\n      declineSubscription: function () {\n          this.contact.declineSubscribe();\n          this.contact.set('subscription_request_in', false);\n          this.hideElement();\n      },\n\n      allowSubscription: function () {\n          this.contact.acceptRequest();\n          this.hideElement();\n      },\n\n      addContact: function () {\n          if (this.contact.get('subscription') === undefined)\n              this.contact.pushInRoster(null, () => {\n                  this.sendAndAskSubscription();\n              });\n          else\n              this.sendAndAskSubscription();\n          this.hideElement();\n      },\n\n      sendAndAskSubscription: function () {\n          this.contact.askRequest();\n          this.contact.acceptRequest();\n      },\n\n      blockContact: function () {\n          this.contact.blockRequest();\n          this.hideElement();\n      }\n  });\n\nxabber.ChatContentView = xabber.BasicView.extend({\n    className: 'chat-content-wrap',\n    template: templates.chat_content,\n    ps_selector: '.chat-content',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n\n    events: {\n        'mousedown .chat-message': 'onTouchMessage',\n        'click .chat-message': 'onClickMessage',\n        'click .chat-msg-location-content': 'onClickLocation',\n        'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n        'click .mdi-link-variant' : 'onClickLink',\n        'click .msg-copy-location' : 'onClickLocationLink',\n        'click .pinned-message' : 'showPinnedMessage',\n        \"keyup .messages-search-form\": \"keyupSearch\",\n        \"click .btn-cancel-searching\": \"cancelSearch\",\n        \"click .back-to-bottom\": \"backToBottom\",\n        \"click .back-to-unread:not(.back-to-bottom)\": \"scrollToUnreadWithButton\",\n        \"click .btn-retry-send-message\": \"retrySendMessage\",\n        \"click .btn-delete-message\": \"removeFileErrorMessage\",\n        \"click .not-decrypted-tooltip .btn-manage-devices\": \"openDevicesWindow\",\n        \"click .encryption-warning\": \"openDevicesWindow\"\n    },\n\n    _initialize: function (options) {\n        this.chat_item = options.chat_item;\n        this.current_day_indicator = null;\n        this._pending_avatars = [];\n        this.account = this.chat_item.account;\n        this.model = this.chat_item.model;\n        this.contact = this.model.contact;\n        this.head = this.model.get('saved') ? new xabber.SavedChatHeadView({content: this}) : new xabber.ChatHeadView({content: this});\n        this.bottom = new xabber.ChatBottomView({content: this});\n        this.$history_feedback = this.$('.load-history-feedback');\n        this.$pinned_message = this.$('.pinned-message');\n        this.$search_form = this.$('.search-form-header');\n        this.$el.attr('data-id', this.model.id);\n        this.updateContentColorScheme();\n        if ((this.model.sync_created && this.model.last_message) || options.new_message && !options.new_message.get('synced_from_server') && options.new_message.get('encrypted') && this.model.get('encrypted')){\n            this.model.last_message && this.onMessage(this.model.last_message);\n            if (options.new_message){\n                this.onMessage(options.new_message);\n                this.onChangedReadState(options.new_message);\n            }\n        }\n        this._scrolltop = this.getScrollTop();\n        this._is_scrolled_bottom = true;\n        this._long_reading_timeout = false;\n        let wheel_ev = this.defineMouseWheelEvent();\n        this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.model.on(\"change:active change:idle\", this.onChangedActiveStatus, this);\n        xabber.on(\"change:idle change:focused\", this.onChangedIdleStatus, this);\n        this.model.on(\"load_last_history\", this.loadLastHistory, this);\n        this.model.on(\"get_missed_history\", this.requestMissedMessages, this);\n        this.model.messages.on(\"add\", this.onMessage, this);\n        this.model.messages.on(\"change:is_unread\", this.onChangedReadState, this);\n        this.model.messages.on(\"change:timestamp\", this.onChangedMessageTimestamp, this);\n        this.model.messages.on(\"change:trusted\", this.onTrustedChanged, this);\n        this.model.messages.on(\"change:last_replace_time\", this.updateMessage, this);\n        this.model.on(\"change:unread\", this.updateCounter, this);\n        this.model.on(\"change:const_unread\", this.updateCounter, this);\n        if (this.contact) {\n            this.subscription_buttons = new xabber.SubscriptionButtonsView({contact: this.contact, el: this.$('.subscription-buttons-wrap')[0]});\n            this.contact.on(\"change:blocked\", this.updateBlockedState, this);\n            this.contact.on(\"change:subscription\", this.onSubscriptionChange, this);\n            this.contact.on(\"change:group_chat\", this.updateGroupChat, this);\n            this.contact.on(\"remove_from_blocklist\", this.loadLastHistory, this);\n            this.contact.on(\"update_trusted\", this.updateMsgsMissingDevices, this);\n            this.account.contacts.on(\"change:name\", this.updateName, this);\n            this.account.contacts.on(\"change:image\", this.updateAvatar, this);\n        }\n        this.account.on(\"change\", this.updateMyInfo, this);\n        this.account.on(\"device_trusted\", this.updateMsgsDeviceTrusting, this);\n        this.account.settings.on(\"change:color\", this.updateContentColorScheme, this);\n        xabber.on('plyr_player_updated', this.onUpdatePlyr, this);\n        this.account.dfd_presence.done(() => {\n            !this.account.connection.do_synchronization && this.loadLastHistory();\n        });\n        return this;\n    },\n\n    render: function () {\n        this.cancelSearch();\n        if (this._prev_scrolltop)\n            this.scrollTo(this._prev_scrolltop);\n        else\n            this.scrollToBottom();\n        this.onScroll();\n        this.updateCounter();\n        this.updateContactStatus();\n        this.updateWaveforms();\n        this.onUpdatePlyr();\n        if (this.contact) {\n            this.contact.get('group_chat') && this.updatePinnedMessage();\n            this.subscription_buttons.render();\n        }\n    },\n\n    openDevicesWindow: function () {\n        if (!this.account.omemo)\n            return;\n        let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n        peer.fingerprints.open();\n    },\n\n    defineMouseWheelEvent: function () {\n        if (!_.isUndefined(window.onwheel)) {\n            return \"wheel\";\n        } else if (!_.isUndefined(window.onmousewheel)) {\n            return \"mousewheel\";\n        } else {\n            return \"MozMousePixelScroll\";\n        }\n    },\n\n    updateMyInfo: function () {\n        let changed = this.account.changed;\n        if (_.has(changed, 'name')) this.updateMyName();\n        if (_.has(changed, 'status')) this.updateMyStatus();\n        if (_.has(changed, 'image')) this.updateMyAvatar();\n    },\n\n    updateMsgsDeviceTrusting: function (device_id, jid) {\n        if (!this.model.get('encrypted') || !device_id || !this.contact || this.contact.get('jid') !== jid )\n            return;\n        this.$(`.not-decrypted-icon[data-device-id=\"${device_id}\"]`).each((idx, item) => {\n            let $msg = $(item).closest('.chat-message');\n            $msg.removeClass('not-verified');\n            $msg.addClass('not-verified-previously');\n        })\n    },\n\n    updateMsgsMissingDevices: function (trust, peer) {\n        if (!this.model.get('encrypted') || !peer || !this.contact)\n            return;\n\n        this.$(`.chat-message:not(.not-existing-device)`).each((idx, item) => {\n            let $item = $(item);\n            if ($item.attr('data-device-id') && !peer.devices[$item.attr('data-device-id')] && $item.attr('data-from') != this.account.get('jid')){\n                $item.hasClass('not-verified') && $item.addClass('not-verified-previously');\n                $item.removeClass('not-verified');\n                $item.addClass('not-existing-device');\n            }\n        })\n    },\n\n    updateContentColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n        this.head.$el.attr('data-color', color);\n        this.bottom.$el.attr('data-color', color);\n    },\n\n    onTrustedChanged: function (message) {\n        let trusted = message.get('trusted'),\n            $message = this.$('.chat-message[data-uniqueid=\"' + message.get('unique_id') + '\"]');\n        (trusted === null) && (trusted = 'none');\n        $message.attr('data-trust', trusted);\n    },\n\n    updateGroupChat: function () {\n        this._loading_history = false;\n        this.model.set('history_loaded', false);\n    },\n\n    onSubscriptionChange: function () {\n        let subscription = this.contact.get('subscription');\n        if (subscription === 'both' && this.contact.get('group_chat')){\n            this.updateGroupChat();\n            this.loadPreviousHistory();\n            this.model.get('active') && this.onChangedActiveStatus();\n        }\n    },\n\n    cancelSearch: function () {\n        this.$search_form.hide().find('input').val(\"\");\n    },\n\n    updateContactStatus: function () {\n        if (this.head.$('.contact-status').attr('data-status') == 'offline' && this.contact.get('last_seen')) {\n            let seconds = (moment.now() - this.contact.get('last_seen'))/1000,\n                new_status = xabber.pretty_last_seen(seconds);\n            this.contact.set({status_message: new_status });\n        }\n    },\n\n    updateWaveforms: function () {\n        this.model.plyr_players.forEach(function(item) {\n            if (item.$audio_elem && item.$audio_elem.voice_message && item.$audio_elem.voice_message.backend && item.$audio_elem.voice_message.backend.buffer)\n                item.$audio_elem.voice_message.drawBuffer();\n        });\n    },\n\n    updatePinnedMessage: function () {\n        let $pinned_message = this.contact.get('pinned_message');\n        this.contact.renderPinnedMessage($pinned_message, this.$pinned_message);\n    },\n\n    onChangedVisibility: function () {\n        if (this.isVisible()) {\n            this.model.set({display: true, active: true});\n        } else {\n            this.model.set({display: false});\n        }\n    },\n\n    onChangedIdleStatus: function (ev) {\n        if (!this.model.get('active'))\n            return;\n        this.model.set('idle', xabber.get('idle') || !xabber.get('focused'))\n    },\n\n    onChangedActiveStatus: function () {\n        let active = this.model.get('active');\n        if (this.model.get('active') && this.model.get('idle'))\n            active = false;\n        this.sendChatState(active ? 'active' : 'inactive');\n        if (this.model.get('group_chat') && !this.contact.get('invitation')) {\n            if (active){\n                this.contact.setActiveStateSendInterval();\n            }\n            else{\n                clearTimeout(this.contact._sending_active_chatstate_timeout);\n                clearInterval(this.contact._sending_active_chatstate_interval);\n            }\n        }\n    },\n\n    updateName: function (contact) {\n        let name = contact.get('name'),\n            jid = contact.get('jid');\n        if (contact === this.contact) {\n            this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.chat-msg-author').text(name);\n            });\n        } else {\n            this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.fwd-msg-author').text(name);\n            });\n        }\n    },\n\n    updateAvatar: function (contact) {\n        let image = contact.cached_image,\n            jid = contact.get('jid');\n        if (contact === this.contact) {\n            this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.left-side .circle-avatar').setAvatar(\n                    image, this.avatar_size);\n            });\n        } else {\n            this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.fwd-left-side .circle-avatar').setAvatar(\n                    image, this.avatar_size);\n            });\n        }\n    },\n\n    updateMyStatus: function () {\n        let text;\n        if (!this.account.isOnline()) {\n            text = xabber.getString(\"connection_status__you_are_offline\");\n        }\n        this.bottom.showChatNotification(text || '', true);\n    },\n\n    updateMyName: function () {\n        let name = this.account.get('name'),\n            jid = this.account.get('jid');\n        this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.chat-msg-author').text(name);\n        });\n        this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.fwd-msg-author').text(name);\n        });\n    },\n\n    updateMyAvatar: function () {\n        let image = this.account.cached_image,\n            jid = this.account.get('jid');\n        this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.left-side .circle-avatar').setAvatar(\n                image, this.avatar_size);\n        });\n        this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.fwd-left-side .circle-avatar').setAvatar(\n                image, this.avatar_size);\n        });\n    },\n\n    updateBlockedState: function () {\n        if (this.model.get('blocked'))\n            this.model.showBlockedRequestMessage();\n        if (this.isVisible()) {\n            xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'chat', chat_item: this.chat_item, blocked: this.model.get('blocked')});\n            this.updateScrollBar();\n        }\n    },\n\n    readVisibleMessages: function (is_context) {\n        let self = is_context ? this.model.messages_view : this;\n        if (!self.isVisible())\n            return;\n        if (self.$('.chat-message.unread-message').length && xabber.get('focused') && !xabber.get('idle')){\n            let last_visible_unread_msg;\n            self.$('.chat-message.unread-message').each((idx, msg) => {\n                if ($(msg).isVisibleInContainer(self.$('.chat-content'))) {\n                    last_visible_unread_msg = msg;\n                }\n            });\n            if (last_visible_unread_msg){\n                this.readMessage(this.model.messages.get($(last_visible_unread_msg).data('uniqueid')), $(last_visible_unread_msg), is_context);\n            }\n        }\n    },\n\n    hideMessagesAfterSkipping: function () {\n        if (this.model.get('last_sync_unread_id') && this.model.get('synced_msg')){\n            let synced_message = this.model.get('synced_msg'),\n                $synced_message = this.$(`.chat-message[data-uniqueid=\"${synced_message.get('unique_id')}\"]`);\n            $synced_message.addClass('after-skip-message');\n            $synced_message.prevAll('.chat-message.after-skip-message').removeClass('after-skip-message');\n            $synced_message.nextAll('.chat-message:not(.after-skip-message)').addClass('after-skip-message');\n        } else {\n            this.$('.chat-message.after-skip-message').removeClass('after-skip-message');\n        }\n    },\n\n    readMessage: function (last_visible_msg, $last_visible_msg, is_context) {\n        clearTimeout(this._read_last_message_timeout);\n        this._read_last_message_timeout = setTimeout(() => {\n            this.model.sendMarker(last_visible_msg.get('msgid'), 'displayed', last_visible_msg.get('stanza_id'), last_visible_msg.get('contact_stanza_id'), last_visible_msg.get('encrypted') && last_visible_msg.get('ephemeral_timer'));\n            this.model.set('last_read_msg', last_visible_msg.get('stanza_id'));\n            this.model.set('prev_last_read_msg', last_visible_msg.get('stanza_id'));\n\n            if (is_context){\n                let unread_context_messages = _.clone(this.account.context_messages.models).filter(item => Boolean(item.get('is_unread')) || Boolean(item.get('is_unread_archived')));\n                _.each(unread_context_messages, (msg) => {\n                    let msg_item = this.model.messages.find(message => message.get('stanza_id') == msg.get('stanza_id') || message.get('contact_stanza_id') == msg.get('stanza_id'));\n                    if (msg_item) {\n                        msg.set('is_unread', msg_item.get('is_unread'));\n                        msg.set('is_unread_archived', msg_item.get('is_unread_archived'));\n                    }\n                });\n                setTimeout(() => {\n                    $last_visible_msg.removeClass('unread-message-background');\n                }, 1000);\n            }\n\n            xabber.toolbar_view.recountAllMessageCounter();\n        }, 1000)\n\n        if (last_visible_msg.get('is_unread_archived') || this.model.last_message && (last_visible_msg.get('unique_id') === this.model.last_message.get('unique_id')) || this.model.get('const_unread')){\n            let unread_messages = _.clone(this.model.messages.models).filter(item => Boolean(item.get('is_unread'))),\n                read_count = 0;\n\n            _.each(unread_messages, (msg) => {\n                if (msg.get('timestamp') <= last_visible_msg.get('timestamp')) {\n                    msg.set('is_unread', false);\n                    read_count++;\n                }\n            });\n            read_count = this.model.get('const_unread') - read_count;\n            (read_count < 0) && (read_count = 0);\n            this.model.set('unread', 0);\n            this.model.set('const_unread', read_count);\n        } else {\n            let unread_messages = _.clone(this.model.messages_unread.models);\n            _.each(unread_messages, (msg) => {\n                if (msg.get('timestamp') <= last_visible_msg.get('timestamp')) {\n                    msg.set('is_unread', false);\n                }\n            });\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n\n        if (!is_context){\n            setTimeout(() => {\n                $last_visible_msg.removeClass('unread-message-background');\n            }, 1000);\n        }\n    },\n\n    readMessages: function (timestamp) {\n        let unread_messages = _.clone(this.model.messages_unread.models);\n        if (unread_messages.length) {\n            let msg = unread_messages[unread_messages.length - 1];\n            this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'), msg.get('encrypted') && msg.get('ephemeral_timer'));\n            this.model.set('last_read_msg', msg.get('stanza_id'));\n            this.model.set('prev_last_read_msg', msg.get('stanza_id'));\n        }\n        this.model.set('const_unread', 0);\n        this.model.set('show_new_unread', false);\n        _.each(unread_messages, (msg) => {\n            if (!timestamp || msg.get('timestamp') <= timestamp) {\n                msg.set('is_unread', false);\n            }\n        });\n        if (this.model.last_message && this.model.last_message.get('is_unread') && !unread_messages.length){\n            let msg = this.model.last_message;\n            this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'), msg.get('encrypted') && msg.get('ephemeral_timer'));\n            msg.set('is_unread', false);\n            msg.get('stanza_id') && this.model.set('last_read_msg', msg.get('stanza_id'));\n            msg.get('stanza_id') && this.model.set('prev_last_read_msg', msg.get('stanza_id'));\n        }\n        else if (this.model.last_message && this.model.last_message.get('auth_request') && this.model.messages.length){\n            let messages = _.clone(this.model.messages.models),\n                msg = messages[messages.length - 2];\n            if (msg && msg.get('is_unread')) {\n                this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'), msg.get('encrypted') && msg.get('ephemeral_timer'));\n                msg.set('is_unread', false);\n                msg.get('stanza_id') && this.model.set('last_read_msg', msg.get('stanza_id'));\n                msg.get('stanza_id') && this.model.set('prev_last_read_msg', msg.get('stanza_id'));\n            }\n        }\n        if (!unread_messages.length) {\n            let unread_messages = _.clone(this.model.messages.models).filter(item => Boolean(item.get('is_unread')));\n            _.each(unread_messages, (msg) => {\n                msg.set('is_unread', false);\n            });\n        }\n    },\n\n    showUnreadMarker: function () {\n        this.$('.unread-marker').remove();\n        if (this.$(`.chat-message.unread-message`).length){\n            let text = xabber.getQuantityString(\"new_chat_messages_no_number\", this.model.get('const_unread') + this.model.get('unread')),\n                $template = $(templates.unread_marker({text: text}));\n            $template.insertBefore(this.$(`.chat-message.unread-message:first`));\n        }\n    },\n\n    onMouseWheel: function (ev) {\n        if (ev.originalEvent.deltaY < 0)\n            this.loadPreviousHistory();\n        this.$('.back-to-bottom:not(.back-to-unread)').hideIf(this.isScrolledToBottom() || this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').removeClass('back-to-bottom');\n    },\n\n    keyupSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            let query = this.$search_form.find('input').val();\n            this.model.searchMessages(query, (messages) => {});\n        }\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.head.renderSearchPanel();\n        }\n    },\n\n    scrollToUnread: function () {\n        let $last_read_msg = this.$(`.chat-message.unread-message:first`);\n        $last_read_msg.length && (this.scrollTo(this.getScrollTop()\n            - (this.$el.height() * 0.2) + $last_read_msg.offset().top));\n        if (this.model.get('last_sync_unread_id')) {\n            let mam_query = {\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                after: this.model.get('last_sync_unread_id'),\n            };\n            if (this.model.get('synced_msg')) {\n                mam_query.var = [\n                    {var: 'after-id', value: this.model.get('last_sync_unread_id')},\n                    {var: 'before-id', value: this.model.get('synced_msg').get('stanza_id')},\n                ];\n            }\n            this.getMessageArchive(mam_query, {\n                unread_history: true,\n            });\n        }\n    },\n\n    scrollToUnreadWithButton: function () {\n        this.scrollToUnread();\n        this.$('.back-to-unread').addClass('back-to-bottom');\n    },\n\n    updateCounter: function () {\n        let unread = this.model.get('unread') + this.model.get('const_unread');\n        this.$('.back-to-unread-counter').text(unread || '');\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n    },\n\n    onScrollY: function () {\n        this._prev_scrolltop = this._scrolltop || this._prev_scrolltop || 0;\n        this._scrolltop = this.getScrollTop() || this._scrolltop || this._prev_scrolltop || 0;\n        this._is_scrolled_bottom = this.isScrolledToBottom();\n        if (this._scrolltop === 0 && this.$('.subscription-buttons-wrap').hasClass('hidden')) {\n            this.$('.fixed-day-indicator-wrap').css('opacity', 1);\n            this.current_day_indicator = pretty_date(parseInt(this.$('.chat-content').children().first().data('time')));\n            this.showDayIndicator(this.current_day_indicator);\n        }\n        this.$('.back-to-bottom:not(.back-to-unread)').hideIf(this.isScrolledToBottom() || this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').removeClass('back-to-bottom');\n    },\n\n    onScroll: function (ev, is_focused) {\n        if (!this.isVisible() || this._no_scrolling_event)\n            return;\n        this.$('.back-to-bottom:not(.back-to-unread)').hideIf(this.isScrolledToBottom() || this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').removeClass('back-to-bottom');\n        let $chatday_indicator = this.$('.chat-day-indicator'),\n            $messages = this.$('.chat-message'),\n            indicator_idx = undefined,\n            opacity_value;\n        if (this.$('.unread-marker').length) {\n            let marker = this.$('.unread-marker');\n            if (marker[0].offsetTop < this._scrolltop)\n                marker.remove();\n        }\n        $chatday_indicator.each((idx, indicator) => {\n            if (this.$('.subscription-buttons-wrap').hasClass('hidden')) {\n                if (this._scrolltop < this._prev_scrolltop) {\n                    if ((indicator.offsetTop <= this._scrolltop) && (indicator.offsetTop >= this._scrolltop - 30)) {\n                        indicator_idx = idx;\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop) && (indicator.offsetTop <= this._scrolltop - 30)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n                else {\n                    if ((indicator.offsetTop <= this._scrolltop + 30) && (indicator.offsetTop >= this._scrolltop)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop - 30) && (indicator.offsetTop <= this._scrolltop)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n            }\n            else if (!$(indicator).hasClass('fixed-day-indicator-wrap')) {\n                if (this._scrolltop < this._prev_scrolltop) {\n                    if ((indicator.offsetTop >= this._scrolltop + 30) && (indicator.offsetTop <= this._scrolltop + 62)) {\n                        indicator_idx = idx;\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop) && (indicator.offsetTop <= this._scrolltop + 62)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n                else {\n                    if ((indicator.offsetTop <= this._scrolltop + 62) && (indicator.offsetTop >= this._scrolltop + 30)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop - 62) && (indicator.offsetTop <= this._scrolltop + 30)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n            }\n        });\n        if (indicator_idx) {\n            this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n            this.current_day_indicator = pretty_date(parseInt($($chatday_indicator[indicator_idx]).attr('data-time')));\n        }\n        else {\n            $messages.each((idx, msg) => {\n                if ((msg.offsetTop + $(msg).height() > this._scrolltop) && (msg.offsetTop < this._scrolltop)) {\n                    indicator_idx = idx;\n                    opacity_value = 1;\n                    return false;\n                }\n            });\n            if (indicator_idx) {\n                this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n                this.current_day_indicator = pretty_date(parseInt($($messages[indicator_idx]).attr('data-time')));\n            }\n            else if (!this.$('.subscription-buttons-wrap').hasClass('hidden') && this._scrolltop == 0){\n                opacity_value = 0;\n                this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n            }\n        }\n        if (this.current_day_indicator !== null) {\n            this.showDayIndicator(this.current_day_indicator);\n        }\n        let scroll_read_timer = this._long_reading_timeout || is_focused ? 100 : 100;\n        clearTimeout(this._onscroll_read_messages_timeout);\n        this._onscroll_read_messages_timeout = setTimeout(() => {\n            this.readVisibleMessages();\n        }, scroll_read_timer)\n        this._long_reading_timeout = false;\n        if (this._scrolltop < this._prev_scrolltop &&\n            (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n            this.loadPreviousHistory();\n        }\n        this.hideMessagesAfterSkipping();\n        if (this._scrolltop > this._prev_scrolltop && this.model.get('last_sync_unread_id') && this.getPercentScrolled() > 0.2) {\n            let mam_query = {\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                after: this.model.get('last_sync_unread_id'),\n            };\n            if (this.model.get('synced_msg')) {\n                mam_query.var = [\n                    {var: 'after-id', value: this.model.get('last_sync_unread_id')},\n                    {var: 'before-id', value: this.model.get('synced_msg').get('stanza_id')},\n                ];\n            }\n            this.getMessageArchive(mam_query, {\n                unread_history: true,\n            });\n        }\n    },\n\n    backToBottom: function () {\n        this.model.set('last_sync_unread_id', undefined);\n        this.hideMessagesAfterSkipping();\n        this._no_scrolling_event = true;\n        this.removeAllMessagesExceptLast();\n        this.readMessages();\n        this.model.resetUnread();\n        this.model.set('history_loaded', false);\n        this.loadPreviousHistory();\n        this._long_reading_timeout = false;\n        this._no_scrolling_event = false;\n        this.scrollToBottom();\n    },\n\n    MAMRequest: function (options, callback, errback) {\n        let account = this.account,\n            contact = this.contact,\n            is_saved = this.model.get('saved'),\n            messages = [], queryid = uuid(),\n            is_groupchat = contact && contact.get('group_chat'), success = true, iq, _interval, handler;\n        delete options.fast;\n        if (is_groupchat)\n            iq = $iq({type: 'set', to: contact.get('full_jid') || contact.get('jid')});\n        else\n            iq = $iq({type: 'set'});\n        iq.c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n            .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n            .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n            .c('value').t(Strophe.NS.MAM).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE)) {\n            iq.c('field', {'var': `conversation-type`});\n            let sync_type = this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model);\n            iq.c('value').t(sync_type).up().up();\n        }\n        if (!is_groupchat)\n            iq.c('field', {'var': 'with'})\n                .c('value').t(this.model.get('jid')).up().up();\n        if (options.var)\n            options.var.forEach((opt_var) => {\n                iq.c('field', {'var': opt_var.var})\n                    .c('value').t(opt_var.value).up().up();\n            });\n        iq.up().cnode(new Strophe.RSM(options).toXML());\n        let deferred = new $.Deferred();\n        account.chats.onStartedMAMRequest(deferred);\n        deferred.done(function () {\n            let sendMAMRequest = function(func_conn) {\n                handler = func_conn.addHandler(function (message) {\n                    if ((contact && is_groupchat == contact.get('group_chat')) || is_saved) {\n                        let $msg = $(message);\n                        if ($msg.find('result').attr('queryid') === queryid) {\n                            messages.push(message);\n                        }\n                    }\n                    else {\n                        messages = [];\n                        success = false;\n                    }\n                    return true;\n                }, Strophe.NS.MAM);\n                let _delete_handler_timeout = setTimeout(() => {\n                    console.log('handler deleted');\n                    func_conn.deleteHandler(handler);\n                }, 14000);\n                let callb = function (res) {\n                        func_conn.deleteHandler(handler);\n                        clearTimeout(_delete_handler_timeout);\n                        clearInterval(_interval);\n                        handler = null;\n                        account.chats.onCompletedMAMRequest(deferred);\n                        let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                        if ($fin.length && $fin.attr('queryid') === queryid) {\n                            let rsm = new Strophe.RSM({xml: $fin.find('set')[0]});\n                            rsm.complete = ($fin.attr('complete') === 'true') ? true : false;\n                            callback && callback(success, messages, rsm);\n                        }\n                    },\n                    errb = function (err) {\n                        func_conn.deleteHandler(handler);\n                        clearTimeout(_delete_handler_timeout);\n                        clearInterval(_interval);\n                        handler = null;\n                        xabber.error(\"MAM error\");\n                        xabber.error(err);\n                        account.chats.onCompletedMAMRequest(deferred);\n                        errback && errback(err);\n                    };\n                console.log('trying to send')\n                if (is_fast)\n                    account.sendFast(iq, callb, errb);\n                else\n                    account.sendIQ(iq, callb, errb);\n\n            };\n            let is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting\n                && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n                conn = is_fast ? account.fast_connection : account.connection;\n\n            if (conn.connected){\n                sendMAMRequest(conn);\n            }\n            let send_counter = 0;\n            _interval = setInterval(() => {\n                is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting\n                    && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline';\n                conn = is_fast ? account.fast_connection : account.connection;\n                conn && console.log(conn.connected);\n                if (!conn || send_counter >= 1){\n                    clearInterval(_interval);\n                    errback && errback('No connection or too many attempts');\n                    return;\n                }\n                if (conn.connected && send_counter < 1){\n                    send_counter++;\n                    sendMAMRequest(conn);\n                }\n            }, 15000);\n        });\n    },\n\n    getMessageArchive: function (query, options) {\n        if (options.previous_history || options.unread_history) {\n            if (this._loading_history || this.model.get('history_loaded')) {\n                return;\n            }\n            this._loading_history = true;\n            clearTimeout(this._load_history_timeout);\n            this._load_history_timeout = setTimeout(() => {\n                this._loading_history = false;\n            }, 60000);\n            this.showHistoryFeedback();\n        }\n        let account = this.model.account, counter = 0;\n        this.MAMRequest(query, (success, messages, rsm) => {\n            clearTimeout(this._load_history_timeout);\n            this._loading_history = false;\n            this.hideHistoryFeedback();\n            if (options.missed_history && !rsm.complete && (rsm.count > messages.length))\n                this.getMessageArchive({after: rsm.last}, {missed_history: true});\n            if (options.unread_history){\n                if (messages.length)\n                    this.model.set('last_sync_unread_id', $(messages[messages.length - 1]).find(`result[xmlns=\"${Strophe.NS.MAM}\"]`).attr('id'));\n                else {\n                    this.model.set('last_sync_unread_id', undefined);\n                    this.hideMessagesAfterSkipping();\n                }\n            }\n            if (options.unread_history_first && messages.length){\n                let first_unread_msg_stanza_id = $(messages[0]).find(`result[xmlns=\"${Strophe.NS.MAM}\"]`).attr('id')\n                this.model.set('first_unread_msg_stanza_id', first_unread_msg_stanza_id);\n                if (messages.length < query.max){\n                    this.model.set('last_sync_unread_id', undefined);\n                    this.hideMessagesAfterSkipping();\n                }\n                this.getMessageArchive({\n                    fast: true,\n                    max: xabber.settings.mam_messages_limit,\n                    before : first_unread_msg_stanza_id\n                }, {unread_history_before: true});\n            }\n            if (this.model.get('group_chat')) {\n                if (this.contact && !this.contact.my_info)\n                    this.contact.getMyInfo();\n            }\n            else {\n                if (this.contact && !this.contact.get('last_seen') && !this.contact.get('server'))\n                    this.contact.getLastSeen();\n            }\n            if (options.previous_history && (messages.length < query.max) && success) {\n                this.model.set('history_loaded', true);\n            }\n            if (options.previous_history || options.unread_history_before || !this.model.get('first_archive_id')) {\n                rsm.first && this.model.set('first_archive_id', rsm.first);\n            }\n            if (options.last_history || !this.model.get('last_archive_id')) {\n                rsm.last && this.model.set('last_archive_id', rsm.last);\n            }\n            _.each(messages, function (message) {\n                let loaded_message = account.chats.receiveChatMessage(message,\n                    _.extend({\n                        is_archived: true,\n                        is_unread_archived: options.unread_history ? true : undefined,\n                    }, options)\n                );\n                if (loaded_message) counter++;\n            });\n            if (this.model.get('history_loaded') && !this.model.messages.length){\n                this.model.item_view.updateEmptyChat();\n            }\n            if ((counter === 0) && options.last_history && !this.model.get('history_loaded')) {\n                this.getMessageArchive(_.extend(query, {\n                    max: xabber.settings.mam_messages_limit,\n                    before: this.model.get('first_archive_id') || ''\n                }), {previous_history: true});\n            }\n            if (options.unread_history_before){\n                if (this.model.get('encrypted')){\n                    //TODO: make async func to start opening chat after all messages been handled in enc chat\n                    setTimeout(() => {\n                        this.model._wait_load_unread_history.resolve();\n                    }, 1000);\n                } else{\n                    this.model._wait_load_unread_history.resolve();\n                }\n            }\n            if (options.unread_history_first && !messages.length){\n                this.backToBottom();\n                this.model._wait_load_unread_history.resolve();\n            }\n        }, (err) => {\n            if (options.previous_history) {\n                this._loading_history = false;\n                this.showHistoryFeedback(true);\n            }\n            if (options.unread_history_before || options.unread_history_first){\n                this.model._wait_load_unread_history.resolve();\n            }\n        });\n    },\n\n    requestMissedMessages: function (timestamp) {\n        if (!timestamp)\n            return;\n        let query = {};\n        query.var = [{var: 'start', value: moment(timestamp).format()}];\n        this.getMessageArchive(query, {missed_history: true});\n    },\n\n    loadLastHistory: function () {\n        if (!xabber.settings.load_history) {\n            return;\n        }\n        let last_archive_id = this.model.get('last_archive_id'),\n            query = {};\n        if (last_archive_id) {\n            query.after = last_archive_id;\n        } else {\n            query.before = '';\n            query.max = xabber.settings.mam_messages_limit_start;\n        }\n        this.getMessageArchive(query, {last_history: true});\n    },\n\n    loadPreviousHistory: function (no_before) {\n        if (this.contact) {\n            if (!xabber.settings.load_history || (!this.contact.get('subscription') || this.contact.get('subscription') !== 'both') && this.contact.get('group_chat')) {\n                return;\n            }\n        }\n        let before = this.model.get('first_archive_id') || '';\n        if (no_before)\n            before = '';\n        this.getMessageArchive({\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                before: before\n            },\n            {\n                previous_history: true\n            });\n    },\n\n    loadUnreadHistory: function () {\n        if (this.contact) {\n            if (!xabber.settings.load_history || (!this.contact.get('subscription') || this.contact.get('subscription') !== 'both') && this.contact.get('group_chat')) {\n                return;\n            }\n        }\n        this.model.set('loading_unread_history', true)\n        this.getMessageArchive({\n            fast: true,\n            max: xabber.settings.mam_messages_limit,\n            after: this.model.get('last_read_msg'),\n        }, {\n            unread_history_first: true,\n            unread_history: true,\n        });\n    },\n\n    showHistoryFeedback: function (is_error) {\n        if (this._load_history_feedback_timeout) {\n            clearTimeout(this._load_history_feedback_timeout);\n            this._load_history_feedback_timeout = null;\n        }\n        let text = xabber.getString(is_error ? \"loading_archived_messages_error\" : \"loading_history\");\n        this.$history_feedback.text(text).removeClass('hidden');\n        if (is_error) {\n            this._load_history_feedback_timeout = setTimeout(\n                this.hideHistoryFeedback.bind(this), 5000);\n        }\n    },\n\n    showDayIndicator: function (text) {\n        this.$('.fixed-day-indicator').text(text);\n        this.$('.fixed-day-indicator-wrap').removeClass('hidden');\n    },\n\n    showPinnedMessage: function (ev) {\n        if ($(ev.target).hasClass('close'))\n            this.unpinMessage();\n        else {\n            let pinned_message = this.contact.get('pinned_message'),\n                participant_info = {};\n            pinned_message.get('user_info') && this.contact.participants && (participant_info = this.contact.participants.get(pinned_message.get('user_info').id));\n            participant_info && participant_info.attributes && pinned_message.set('user_info', participant_info.attributes);\n\n            let msg = this.buildMessageHtml(pinned_message),\n                pinned_msg_modal = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this, message: pinned_message, pinned: true});\n            pinned_msg_modal.$el.attr('data-color', this.account.settings.get('color'));\n            this.updateMessageInChat(msg, pinned_message);\n            this.initPopup(msg);\n            pinned_msg_modal.open(msg);\n        }\n    },\n\n    imageOnload: function ($message) {\n        let $image_container = $message.find('.img-content'),\n            $copy_link_icon = $message.find('.mdi-link-variant');\n        $image_container.css('background-image', 'none');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n    },\n\n    videoOnload: function ($message, message) {\n        let $copy_link_icon = $message.find('.mdi-link-variant');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n        this.initPlyrEmbedPlayer($message, message);\n    },\n\n    OGPLinkOnload: function ($message, message) {\n        let $copy_link_icon = $message.find('.mdi-link-variant');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n    },\n\n    locationOnload: function ($message) {\n        let $copy_location_div = $message.find('.msg-copy-location-content');\n        $copy_location_div.html(env.templates.svg['map-marker-outline']());\n        $copy_location_div.attr({\n            'data-location': 'true'\n        });\n    },\n\n    unpinMessage: function () {\n        let iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('update', {xmlns: Strophe.NS.GROUP_CHAT})\n            .c('pinned-message');\n        this.account.sendIQFast(iq, () => {}, (error) => {\n            if ($(error).find('error not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n        });\n    },\n\n    loadLocationInChat: function ($message, attrs) {\n        import('ol-local').then(ol => {\n            ol = ol.default ? ol.default : ol;\n            let $map_element = $message.find(`#${attrs.id}`);\n            if (!$map_element.length)\n                return;\n            let map = new ol.Map({\n                target: $map_element[0],\n                view: new ol.View\n                ({\tzoom: 15,\n                    center: ol.proj.transform([attrs.lon, attrs.lat], 'EPSG:4326', 'EPSG:3857')\n                }),\n                interactions: ol.interaction_defaults({\n                    altShiftDragRotate:false,\n                    doubleClickZoom:false,\n                    keyboard:false,\n                    mouseWheelZoom:false,\n                    shiftDragZoom:false,\n                    dragPan:false,\n                    pinchRotate:false,\n                    pinchZoom:false\n                }),\n                layers: [ new ol.layer.Tile({ source: new ol.source.OSM() }) ],\n            });\n\n            map.once('rendercomplete', function(event) {\n                let mapCanvas = document.createElement('canvas');\n                let size = map.getSize();\n                mapCanvas.width = size[0];\n                mapCanvas.height = size[1];\n                let mapContext = mapCanvas.getContext('2d');\n                Array.prototype.forEach.call(\n                    document.querySelectorAll(`#${attrs.id} .ol-layer canvas`),\n                    function (canvas) {\n                        if (canvas.width > 0) {\n                            let opacity = canvas.parentNode.style.opacity;\n                            mapContext.globalAlpha = opacity === '' ? 1 : Number(opacity);\n                            let transform = canvas.style.transform;\n                            // Get the transform parameters from the style's transform matrix\n                            let matrix = transform\n                                .match(/^matrix\\(([^\\(]*)\\)$/)[1]\n                                .split(',')\n                                .map(Number);\n                            // Apply the transform to the export map context\n                            CanvasRenderingContext2D.prototype.setTransform.apply(\n                                mapContext,\n                                matrix\n                            );\n                            let path = new Path2D('M 18 17.25 C 15.9289 17.25 14.25 15.5711 14.25 13.5 C 14.25 12.5054 14.6451 11.5516 15.3483 10.8483 C 16.0516 10.1451 17.0054 9.75 18 9.75 C 20.0711 9.75 21.75 11.4289 21.75 13.5 C 21.75 14.4946 21.3549 15.4484 20.6517 16.1517 C 19.9484 16.8549 18.9946 17.25 18 17.25 M 18 3 C 12.201 3 7.5 7.701 7.5 13.5 C 7.5 21.375 18 33 18 33 C 18 33 28.5 21.375 28.5 13.5 C 28.5 7.701 23.799 3 18 3 Z');\n                            mapContext.fillStyle = getComputedStyle(document.querySelector(`#${attrs.id}`)).color;\n                            mapContext.drawImage(canvas, 0, 0);\n                            mapContext.translate(157, 117);\n\n                            mapContext.fill(path);\n                        }\n                    }\n                );\n                if (navigator.msSaveBlob) {\n                    // link download attribute does not work on MS browsers\n                    navigator.msSaveBlob(mapCanvas.msToBlob(), 'map.png');\n                } else {\n                    let img = document.getElementById(`img_${attrs.id}`),\n                        dataURL = mapCanvas.toDataURL('image/png');\n                    map.setTarget(null)\n                    map = null;\n                    img.src= dataURL\n                }\n            });\n        });\n    },\n\n    hideHistoryFeedback: function () {\n        this.$history_feedback.addClass('hidden');\n    },\n\n    receiveNoTextMessage: function ($message, carbon_copied) {\n        let from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            to_jid = Strophe.getBareJidFromJid($message.attr('to')),\n            is_sender = from_jid === this.account.get('jid'),\n            $chat_state = $message.find(`[xmlns=\"${Strophe.NS.CHATSTATES}\"]`);\n        if ($chat_state.length) {\n            if (!is_sender) {\n                let $subtype = $chat_state.children('subtype');\n                if ($subtype.attr('type') == 'encrypted') {\n                    let view = xabber.chats_view.child(`${this.contact.hash_id}:encrypted`);\n                    if (view && view.content)\n                        view.content.showChatState($chat_state[0].tagName.toLowerCase());\n                } else\n                    this.showChatState($chat_state[0].tagName.toLowerCase(), $subtype.attr('type'), $subtype.attr('mime-type'));\n            }\n        }\n    },\n\n    showChatState: function (state, type, mime_type) {\n        clearTimeout(this._chatstate_show_timeout);\n        let message, name = this.contact.get('name');\n        if (state === 'composing') {\n            if (type) {\n                this._current_composing_msg = {type: type};\n                if (type === 'upload') {\n                    let file_type = mime_type ? utils.pretty_file_type_with_article(mime_type) : null;\n                    mime_type && (this._current_composing_msg.mime_type = mime_type);\n                    message = file_type ? xabber.getString(\"chat_state_composing_upload_filetype\", [file_type]) : xabber.getString(\"chat_state_composing_upload\");\n                    this._chatstate_show_timeout = setTimeout(() => {\n                        this.showChatState();\n                    }, constants.CHATSTATE_TIMEOUT_PAUSED_AUDIO);\n                } else {\n                    if (type === 'voice')\n                        message = xabber.getString(\"chat_state_composing_voice\");\n                    if (type === 'video')\n                        message = xabber.getString(\"chat_state_composing_video\");\n                    this._chatstate_show_timeout = setTimeout(() => {\n                        this.showChatState('paused', type);\n                    }, constants.CHATSTATE_TIMEOUT_PAUSED_AUDIO);\n                }\n            }\n            else {\n                this._current_composing_msg = undefined;\n                message = xabber.getString(\"chat_state_composing\");\n                this._chatstate_show_timeout = setTimeout(() => {\n                    this.showChatState();\n                }, constants.CHATSTATE_TIMEOUT_PAUSED);\n            }\n        } else if (state === 'paused') {\n            this.showChatState();\n            return;\n        } else {\n            this.bottom.showChatNotification('');\n            this.chat_item.updateLastMessage();\n            return;\n        }\n        if (message)\n            this.bottom.showChatNotification(`${this.contact.get('name')} ${message}`);\n        else\n            this.bottom.showChatNotification();\n        this.chat_item.$('.last-msg').text(message);\n        this.chat_item.$('.last-msg-date').text(utils.pretty_short_datetime())\n            .attr('title', pretty_datetime());\n        this.chat_item.$('.msg-delivering-state').addClass('hidden');\n    },\n\n    updateMentions: function (message) {\n        if (message.get('mentions')) {\n            message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\";\n                if (this.contact.get('group_chat') || message.get('groupchat_jid')) {\n                    let id = mention_target.match(/\\?id=\\w*/),\n                        jid = mention_target.match(/\\?jid=.*/);\n                    if (id && this.contact.my_info) {\n                        mention_target = id[0].slice(4);\n                        (mention_target === this.contact.my_info.get('id')) && (mention.me = true);\n                    }\n                    else if (jid) {\n                        mention_target = jid[0].slice(5);\n                        (mention_target === this.account.get('jid')) && (mention.me = true);\n                    }\n                }\n                else {\n                    mention_target = mention_target.slice(5);\n                    if (mention_target === this.account.get('jid'))\n                        mention.me = true;\n                }\n            });\n        }\n    },\n\n    onMessage: function (message) {\n        this.updateMentions(message);\n        this.account.messages.add(message);\n        let is_scrolled_to_bottom = this.isScrolledToBottom(),\n            scrolled_from_bottom = this.getScrollBottom();\n        if (!_.isUndefined(message.get('is_accepted'))) {\n            this.model.set('is_accepted', false);\n        }\n        this.model.set('opened', true);\n        if (!message.get('is_archived') && !message.get('is_unread_archived') && message.get('stanza_id'))\n            this.model.set('last_archive_id', message.get('stanza_id'));\n\n        if (message.get('participants_version')) {\n            if (this.contact.participants && this.contact.participants.version < message.get('participants_version'))\n                this.contact.trigger('update_participants');\n        }\n\n        let $message = this.addMessage(message);\n\n        if (message.get('type') === 'file_upload') {\n            if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                this.startGalleryUploadFile(message, $message);\n            else\n                this.startUploadFile(message, $message);\n        }\n\n        if (!(message.get('synced_from_server') || (message.get('is_archived') && !message.get('missed_msg')))) {\n            if (message.get('missed_msg')){\n                if (this.model.get('last_read_msg')){\n                    let last_read_msg = this.model.messages.find(m => this.model.get('last_read_msg') && (m.get('stanza_id') === this.model.get('last_read_msg') || m.get('contact_stanza_id') === this.model.get('last_read_msg'))),\n                        deferred = new $.Deferred();\n                    deferred.done(() => {\n                        if (last_read_msg && message.get('timestamp') > last_read_msg.get('timestamp')){\n                            message.set('is_unread', true);\n                            if (!xabber.get('focused')) {\n                                if (this.model.get('saved') || this.model.isMuted())\n                                    message.set('muted', true);\n                            }\n                            this.model.setMessagesDisplayed(message.get('timestamp'));\n                        }\n                    });\n                    if (!last_read_msg){\n                        this.contact.getMessageByStanzaId(this.model.get('last_read_msg'), ($message) => {\n                            last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                            deferred.resolve();\n                        });\n                    } else {\n                        deferred.resolve();\n                    }\n                }\n            } else {\n                if (!(message.isSenderMe() || message.get('silent') || ((message.get('type') === 'system') && !message.get('auth_request')))) {\n                    message.set('is_unread', true);\n                    if (message.get('is_unread') && xabber.get('focused') && !xabber.get('idle') && this.isVisible()){\n                        this.readVisibleMessages();\n                    }\n                    if (!xabber.get('focused')) {\n                        if (this.model.get('saved') || this.model.isMuted())\n                            message.set('muted', true);\n                        else if (!message.get('synced_invitation_from_server'))\n                            this.notifyMessage(message);\n                    }\n                    this.model.setMessagesDisplayed(message.get('timestamp'));\n                }\n            }\n            if (this.contact && this.model.get('archived')){\n                if (this.model.isMuted())\n                    message.set('archived', true);\n                else {\n                    this.head.archiveChat();\n                    this.model.set('archived', false);\n                }\n            }\n            if (this.model.get('saved')) {\n                message.set('muted', true);\n            }\n        }\n\n        if (this.isVisible() && (!message.get('is_unread') || is_scrolled_to_bottom) && !message.get('is_between_anchors')) {\n            let is_scrolling_needed;\n            if (is_scrolled_to_bottom){\n                if (this.$(`.chat-message.unread-message`).length){\n                    if (this.$(`.chat-message.unread-message`)[0].offsetTop > (this._scrolltop + 140)) {\n                        is_scrolling_needed = true;\n                    }\n                } else\n                    is_scrolling_needed = true;\n            }\n            if ((is_scrolled_to_bottom && is_scrolling_needed) || message.get('submitted_here')) {\n                this.scrollToBottom();\n            } else if (!is_scrolled_to_bottom) {\n                this.updateScrollBar();\n                this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - scrolled_from_bottom);\n            }\n        }\n\n        if (message.get('synced_from_server') && message.get('is_unread')) {\n            this.onChangedReadState(message);\n        }\n        if (message.get('attention')) {\n            this.attentionMessage(message);\n        }\n\n        if (message.isSenderMe()) {\n            if (!message.get('is_archived') && !message.get('missed_msg') && message.get('type') != 'system')\n                this.readMessages(message.get('timestamp'));\n            if (this.model.get('last_displayed_id') >= message.get('stanza_id') && message.get('stanza_id') !== message.get('origin_id'))\n                message.set('state', constants.MSG_DISPLAYED);\n            else if (message.get('stanza_id') !== message.get('origin_id') && (this.model.get('last_delivered_id') >= message.get('stanza_id') || message.get('is_archived')))\n                message.set('state', constants.MSG_DELIVERED);\n        }\n\n        if (message.get('private_invite') || message.get('invite')) {\n            if (!(this.contact.invitation && this.contact.invitation.message.get('timestamp') > message.get('timestamp')))\n                this.contact.invitation = new xabber.GroupchatInvitationView({model: this.contact, message: message});\n            this.model.contact.set('invitation', true);\n            this.model.get('active') && this.model.contact.trigger('open_chat', this.model.contact);\n            message.set('is_unread', false);\n        }\n\n        let last_message = this.model.last_message;\n        if (!last_message || message.get('timestamp') >= last_message.get('timestamp')) {\n            this.model.last_message = message;\n            this.chat_item.updateLastMessage();\n        }\n        if (message.get('mentions')) {\n            message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\",\n                    id = mention_target.match(/\\?id=\\w*/),\n                    jid = mention_target.match(/\\?jid=.*/);\n                if (id)\n                    mention_target = id[0].slice(4);\n                else if (jid)\n                    mention_target = jid[0].slice(5);\n                else\n                    mention_target = \"\";\n                if (this.contact.my_info)\n                    (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {message: message, contact: this.contact});\n                else if (this.contact.get('group_chat')) {\n                    if (this._pending_my_info) {\n                        this._pending_my_info.done(() => {\n                            (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {message: message, contact: this.contact});\n                            this._pending_my_info = null;\n                        });\n                    }\n                    else {\n                        this._pending_my_info = new $.Deferred();\n                        this.contact.getMyInfo(() => {\n                            (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {\n                                message: message,\n                                contact: this.contact\n                            });\n                            this._pending_my_info.resolve();\n                        });\n                    }\n                }\n                (mention_target === this.account.get('jid') || mention_target === \"\") && this.account.mentions.create(null, {message: message, contact: this.contact});\n            });\n        }\n\n        if (this.model.messages_view && xabber.body.screen.get('right') === 'message_context' && this.model.messages_view.last_history_loaded)\n            this.account.context_messages.add(message);\n\n    },\n\n\n    decryptImages: function (message, force) {\n        let scrolled_from_bottom = this.getScrollBottom();\n        if (this.model.get('encrypted') || message.get('encrypted') || force) {\n            let images = message.get('images') || [];\n            if (images.length) {\n                images.forEach((img) => {\n                    let source = img.sources[0];\n                    if (!img.key)\n                        return;\n                    this.model.messages.decryptFile(source, img.key).then((result) => {\n                        if (result === null)\n                            return;\n                        let $msg = [];\n                        if (this.model.messages_view && xabber.body.screen.get('right') === 'message_context')\n                            $msg = this.model.messages_view.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"] img[src=\"${source}\"]`);\n                        else\n                            $msg = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"] img[src=\"${source}\"]`);\n                        if ($msg.length) {\n                            $msg[0].src = result;\n                            $msg[0].onload = () => {\n                                if (!scrolled_from_bottom)\n                                    this.scrollToBottom();\n                                else\n                                    this.scrollTo(this.ps_container[0].scrollHeight - scrolled_from_bottom);\n                            };\n                            $msg.attr('data-mfp-src', result);\n                        }\n                    });\n                });\n            }\n            let fwd_msgs = message.get('forwarded_message') || [];\n            fwd_msgs.forEach((fwd_msg) => {\n                let fwd_images = fwd_msg.get('images') || [];\n                fwd_images.forEach((img) => {\n                    let source = img.sources[0];\n                    if (!img.key)\n                        return;\n                    this.model.messages.decryptFile(source, img.key).then((result) => {\n                        if (result === null)\n                            return;\n                        let $msg = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"] .fwd-message[data-uniqueid=\"${fwd_msg.get('unique_id')}\"] img[src=\"${source}\"]`);\n                        if ($msg.length) {\n                            $msg[0].src = result;\n                            $msg[0].onload = () => {\n                                if (!scrolled_from_bottom)\n                                    this.scrollToBottom();\n                                else\n                                    this.scrollTo(this.ps_container[0].scrollHeight - scrolled_from_bottom);\n                            };\n                            $msg.attr('data-mfp-src', result);\n                        }\n                    });\n                });\n            });\n        }\n    },\n\n    addMessage: function (message) {\n        let $message = this.buildMessageHtml(message),\n            index = this.model.messages.indexOf(message);\n        if (index === 0) {\n            $message.prependTo(this.$('.chat-content'));\n        } else if (this.model.messages.models.length && this.model.messages.models[index - 1]) {\n            let $prev_message = this.$(`.chat-message[data-uniqueid=\"${this.model.messages.models[index - 1].get('unique_id')}\"]`);\n            if (!$prev_message.length) {\n                $prev_message = this.addMessage(this.model.messages.models[index - 1]);\n            }\n            $message.insertAfter($prev_message);\n        }\n        let $next_message = $message.nextAll('.chat-message').first();\n        this.updateMessageInChat($message[0], message);\n        if ($next_message.length) {\n            this.updateMessageInChat($next_message[0]);\n        }\n        this.initPopup($message);\n        this.bottom.showChatNotification();\n        return $message;\n    },\n\n    initPopup: function ($message) {\n        let $one_image = $message.find('.uploaded-img'),\n            $collage_image = $message.find('.uploaded-img-for-collage');\n        if ($one_image.length) {\n            $one_image.each((idx, item) => {\n                this.initMagnificPopup($(item));\n            });\n        }\n        if ($collage_image.length) {\n            this.initZoomGallery($message);\n        }\n    },\n\n    getImagesInformation: function (msg) {\n        let images = msg.get('images'),\n            servers = [];\n        if (!images)\n            return;\n        images.forEach((img) => {\n            let server = new URL(img.sources[0]).hostname;\n            img.pretty_size = utils.pretty_size(img.size)\n            servers.push(server);\n        });\n        servers = [...new Set(servers)]\n\n        return {images, servers};\n    },\n\n    initMagnificPopup: function ($elem) {\n        let self = this;\n        $elem.length && $elem.magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + self.model.messages.getFilename(item.el.attr('src')) + '</a>' + ' ' + item.el.attr('title');\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    initZoomGallery: function ($message) {\n        let self = this;\n        $message.find('.zoom-gallery').length && $message.find('.zoom-gallery').magnificPopup({\n            delegate: 'img',\n            type: 'image',\n            closeOnContentClick: false,\n            closeBtnInside: false,\n            mainClass: 'mfp-with-zoom mfp-img-mobile',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + self.model.messages.getFilename(item.el.attr('src')) + '</a>' + ' ' + item.el.attr('title');\n                }\n            },\n            gallery: {\n                enabled: true\n            },\n            zoom: {\n                enabled: true,\n                duration: 300,\n                opener: function(element) {\n                    return element;\n                }\n            }\n        });\n    },\n\n    updateMessage: function (item) {\n        let $message, images = item.get('images'), emoji = item.get('only_emoji'), $new_message,\n            files =  item.get('files');\n        if (item instanceof xabber.Message) {\n            this.updateMentions(item);\n            $new_message = this.buildMessageHtml(item);\n            $message = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n        }\n        else\n            return;\n        $message.replaceWith($new_message)\n        $message = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n        this.updateMessageInChat($message[0], item);\n        this.initPopup($message);\n        this.bottom.showChatNotification();\n\n        if (item.get('data_form')) {\n            let data_form = utils.render_data_form(item.get('data_form'));\n            $message.find('.chat-msg-content').append(data_form);\n        }\n        let short_datetime = utils.pretty_short_datetime(item.get('last_replace_time')),\n            datetime = moment(item.get('last_replace_time')).format('D MMMM, YYYY HH:mm:ss'),\n            new_title = `${pretty_datetime(item.get('time'))} ${xabber.getString(\"edited\", [moment(item.get('timestamp')).startOf('day').isSame(moment(item.get('last_replace_time')).startOf('day')) ? short_datetime : datetime])}`;\n        $message.find('.msg-time').prop('title', new_title);\n        $message.find('.edited-info').removeClass('hidden').text(xabber.getString(\"chat_screen__message__label_edited\")).prop('title', new_title);\n    },\n\n    removeAllMessagesExceptLast: function () {\n        let messages_to_save = [];\n        if (!this.model.messages)\n            return;\n        this.model.messages.forEach((message, idx) => {\n            if (idx === (this.model.messages.length - 1)){\n                messages_to_save.push(message);\n                this.model.set('first_archive_id', message.get('stanza_id'));\n                this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`).removeClass('unread-message');\n                this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`).removeClass('unread-message-background');\n                return;\n            }\n            let $message, $message_in_chat;\n            $message_in_chat = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`);\n            (this.bottom.content_view) && ($message = this.bottom.content_view.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`));\n            $message.prev('.chat-day-indicator').remove();\n            $message.remove();\n        });\n        this.model.messages.reset(messages_to_save);\n        this.updateScrollBar();\n    },\n\n    removeMessage: function (item) {\n        let message, $message, $message_in_chat;\n        if (item instanceof xabber.Message) {\n            message = item;\n            $message_in_chat = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n            (this.bottom.content_view) && ($message = this.bottom.content_view.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`));\n        } else {\n            $message = item;\n            if (!$message.length) return;\n            message = this.model.messages.get($message.data('uniqueid'));\n        }\n        message && message.destroy();\n        if ($message_in_chat) {\n            this.removeMessageFromDOM($message_in_chat);\n        }\n        if ($message && ($message !== $message_in_chat))\n            this.removeMessageFromDOM($message);\n    },\n\n    removeMessageFromDOM: function ($message) {\n        if (($message.hasClass('with-author')) && (!$message.next().hasClass('with-author'))) {\n            let avatar = $message.find('.circle-avatar')[0];\n            $message.next().addClass('with-author');\n            $message.next().find('.circle-avatar').replaceWith(avatar);\n        }\n        $message.prev('.chat-day-indicator').remove();\n        $message.remove();\n        this.bottom.manageSelectedMessages();\n        if (!this._clearing_history) {\n            this.updateScrollBar();\n        }\n    },\n\n    clearHistory: function () {\n        let dialog_options = [],\n            dialog_message = this.contact.get('group_chat') ? xabber.getString(\"clear_group_chat_history_dialog_message\") : xabber.getString(\"clear_chat_history_dialog_message\"),\n            is_group_chat = this.contact.get('group_chat') ? true : false;\n        this._clearing_history = true;\n        if (this.account.server_features.get(Strophe.NS.REWRITE)) {\n            utils.dialogs.ask(xabber.getString(\"clear_history\"), dialog_message,\n                dialog_options, {ok_button_text: xabber.getString(\"clear_chat_history_dialog_button\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    return;\n                }\n                this.model.retractAllMessages(is_group_chat, () => {\n                    this._clearing_history = false;\n                    this.chat_item.updateLastMessage();\n                    this.updateScrollBar();\n                }, () => {\n                    this._clearing_history = false;\n                });\n            });\n        }\n        else {\n            utils.dialogs.ask(xabber.getString(\"clear_history\"), `${dialog_message}\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')})`,\n                dialog_options, {ok_button_text: xabber.getString(\"clear_chat_history_dialog_button\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    return;\n                }\n                let msgs = _.clone(this.model.messages.models);\n                msgs.forEach((item) => { this.removeMessage(item); });\n            });\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url, chat) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.link-file');\n        chat = chat || this.model;\n        $elem.addClass('voice-message-rendering').html($(templates.messages.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, $elem.find('#' + unique_id));\n\n        let hideShowCursor = () => {\n            let current_time = aud.getCurrentTime(),\n                duration = aud.getDuration();\n            if (current_time === 0 || current_time === duration)\n                $msg_element.addClass('wave-cursor-hidden');\n            else\n                $msg_element.removeClass('wave-cursor-hidden');\n        };\n\n        aud.on('ready', () => {\n            let duration = Math.round(aud.getDuration());\n            hideShowCursor();\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.addClass('playing');\n            $msg_element.removeClass('wave-cursor-hidden');\n            let is_popup;\n            xabber.current_plyr_player && (is_popup = xabber.current_plyr_player.is_popup);\n            xabber.current_plyr_player = chat.plyr_players.find(item => item.$audio_elem === $msg_element[0]);\n            xabber.current_plyr_player && (xabber.current_plyr_player.chat_item = chat.item_view);\n            xabber.current_plyr_player && (xabber.current_plyr_player.is_popup = is_popup);\n            let other_players = xabber.plyr_players.filter(other => other != xabber.current_plyr_player);\n            other_players.forEach(function(other) {\n                if (other.$audio_elem){\n                    if (other.$audio_elem.voice_message)\n                        other.$audio_elem.voice_message.stopTime();\n                }\n            });\n            (xabber.plyr_player_popup && xabber.plyr_player_popup.player) && xabber.plyr_player_popup.player.stop();\n            (!xabber.current_plyr_player && xabber.plyr_player_popup) && xabber.plyr_player_popup.closePopup();\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n            xabber.trigger('plyr_player_updated');\n        });\n\n        aud.on('finish', () => {\n            hideShowCursor();\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.removeClass('playing');\n            hideShowCursor();\n            xabber.trigger('plyr_player_updated');\n        });\n\n        aud.on('seek', () => {\n            hideShowCursor();\n        });\n\n        aud.stopTime = () => {\n            aud.stop()\n            $elem.find('.voice-msg-current-time').text(utils.pretty_duration(0));\n        };\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createImageGrid: function (attrs) {\n        let template_for_images;\n        if (attrs.images.length > 6) {\n            let tpl_name = 'template-for-6',\n                hidden_images = attrs.images.length - 5;\n            !xabber.settings.load_media && (tpl_name = 'hidden-template-for-6')\n            template_for_images = $(templates.messages[tpl_name](attrs));\n            template_for_images.find('.last-image').addClass('hidden-images');\n            template_for_images.find('.image-counter').text('+' + hidden_images);\n        }\n        else {\n            let tpl_name = 'template-for-' + attrs.images.length;\n            !xabber.settings.load_media && (tpl_name = 'hidden-template-for-' + attrs.images.length)\n            template_for_images = $(templates.messages[tpl_name](attrs));\n        }\n        if (!xabber.settings.load_media) {\n            template_for_images.find('img').removeClass('uploaded-img-for-collage popup-img').addClass('unloaded-img')\n        }\n        return template_for_images;\n    },\n\n    buildMessageHtml: function (message) {\n        let attrs = _.clone(message.attributes),\n            is_sender = (message instanceof xabber.Message) ? message.isSenderMe() : false,\n            user_info = attrs.user_info || {}, username,\n            images = attrs.images,\n            videos = attrs.videos,\n            emoji = message.get('only_emoji'),\n            files =  attrs.files,\n            locations =  attrs.locations,\n            link_references =  attrs.link_references,\n            is_video = Boolean(videos && videos.length),\n            is_image = Boolean(images && images.length),\n            is_location = locations ? true : false,\n            is_file = files ? true : false,\n            is_audio = false,\n            template_for_images,\n            avatar_id = user_info.avatar,\n            avatar_url = user_info.avatar_url,\n            role = user_info.role,\n            badge = user_info.badge,\n            from_id = user_info.id,\n            has_encrypted_files = attrs.has_encrypted_files,\n            audio_player_list = [];\n\n        username = user_info.nickname || this.model.get('saved') && this.account.get('name') || (attrs.from_jid === this.contact.get('jid') && this.contact.get('name'));\n        if (!username) {\n            if (is_sender) {\n                if (this.model.get(\"group_chat\")) {\n                    if (this.contact.my_info)\n                        username = this.contact.my_info.get('nickname');\n                    else if (this.contact)\n                        this.contact.getMyInfo(() => {\n                            username = this.contact.my_info.get('nickname');\n                            if ($message) {\n                                $message.children(\".msg-wrap\").find(\".chat-msg-author-wrap .chat-msg-author\").text(Strophe.xmlescape(username));\n                            }\n                        });\n                    else\n                        username = this.account.get('name');\n                } else\n                    username = this.account.get('name');\n            } else {\n                username = this.account.contacts.get(attrs.from_jid) ? this.account.contacts.get(attrs.from_jid).get('name') : attrs.from_jid;\n            }\n        }\n        username = Strophe.xmlescape(username || \"\");\n\n        if (is_sender && this.model.get('group_chat')) {\n            if (this.contact.my_info) {\n                role = this.contact.my_info.get('role');\n                badge = this.contact.my_info.get('badge');\n            }\n        }\n        _.extend(attrs, {\n            username: username,\n            state: (message instanceof xabber.Message) ? message.getState() : 'sent',\n            verbose_state: (message instanceof xabber.Message) ? message.getVerboseState() : 'sent',\n            time: pretty_datetime(attrs.time),\n            short_time: utils.pretty_time(attrs.time),\n            avatar_id: avatar_id,\n            avatar_url: avatar_url,\n            is_image: is_image,\n            is_video: is_video,\n            is_file: is_file,\n            is_location: is_location,\n            files: files,\n            locations: locations,\n            link_references: link_references,\n            role: utils.pretty_name(role),\n            badge: badge,\n            from_id: from_id\n        });\n        attrs.encrypted = attrs.encrypted || this.model.get('encrypted');\n        attrs.ephemeral_timer = attrs.ephemeral_timer || this.model.get('ephemeral_timer');\n        attrs.not_encrypted = attrs.not_encrypted || null;\n        attrs.not_verified_device = attrs.not_verified_device || null;\n        attrs.not_verified_device_no_device = attrs.not_verified_device_no_device || null;\n        attrs.device_id = attrs.device_id || null;\n\n        if (attrs.type === 'system') {\n            let tpl_name = attrs.invite ? 'group_request' : 'system';\n            return $(templates.messages[tpl_name](attrs));\n        }\n\n        if (is_image) {\n            if (images.length > 1) {\n                template_for_images = this.createImageGrid(attrs);\n            }\n        }\n\n        let classes = [\n            attrs.is_unread && 'unread-message',\n            attrs.is_unread && 'unread-message-background',\n            attrs.not_encrypted && 'not-decrypted',\n            attrs.not_verified_device && !attrs.not_verified_device_no_device && 'not-verified',\n            attrs.not_verified_device_no_device && 'not-existing-device',\n            attrs.forwarded_message && 'forwarding',\n            (attrs.encrypted || this.model.get('encrypted')) ? 'encrypted' : \"\"\n        ];\n\n        let markup_body = utils.markupBodyMessage(message), $message;\n        if (attrs.searched_message){\n            let myRegexp = new RegExp('(.{0,12})(' + attrs.query + ')(.{0,12})','gmius'),\n                matching_markup = myRegexp.exec(markup_body);\n            if (matching_markup) {\n                if (matching_markup[1].length == 12)\n                    matching_markup[1] = '...' + matching_markup[1].substring(1);\n                if (matching_markup[3].length == 12)\n                    matching_markup[3] = matching_markup[3].substring(0, matching_markup[3].length - 1) + '...';\n                markup_body = matching_markup[1] + '<span class=\"mention ground-color-100\">' + matching_markup[2] + '</span>' + matching_markup[3];\n                markup_body = markup_body.replace(/\\n/g, \" \");;\n            }\n        }\n\n        if (this.model.get('saved') && !markup_body.length && attrs.forwarded_message && attrs.forwarded_message.length == 1) {\n            $message = $(templates.messages.saved_main(_.extend(attrs, {\n                classlist: classes.join(' ')\n            })));\n        } else if (attrs.searched_message)\n            $message = $(templates.messages.searched(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                msg_time: utils.pretty_short_datetime_recent_chat(attrs.time),\n                classlist: classes.join(' ')\n            })));\n        else if (attrs.type === 'file_upload')\n            $message = $(templates.messages.file_upload(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                ephemeral_timer_text: utils.pretty_duration_ephemeral_timer(attrs.ephemeral_timer),\n                classlist: classes.join(' ')\n            })));\n        else\n            $message = $(templates.messages.main(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                ephemeral_timer_text: utils.pretty_duration_ephemeral_timer(attrs.ephemeral_timer),\n                classlist: classes.join(' ')\n            })));\n\n        if (attrs.hasOwnProperty('encrypted')){\n            if (attrs.hasOwnProperty('submitted_here')){\n                $message.attr('data-trust', true);\n                if (attrs.hasOwnProperty('is_contact_trusted')){\n                    $message.attr('data-trust', attrs.is_contact_trusted);\n                }\n            } else if (attrs.hasOwnProperty('is_trusted')){\n                $message.attr('data-trust', attrs.is_trusted);\n            } else {\n                $message.attr('data-trust', this.$el.attr('data-trust'));\n            }\n        }\n\n        if (is_image) {\n            if (images.length > 1) {\n                $message.find('.chat-msg-media-content').html(template_for_images);\n                !xabber.settings.load_media && $message.find('.img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n            if (images.length == 1) {\n                let $img_html = this.createImage(images[0]),\n                    img_content = this.createImageContainer(images[0]);\n                $img_html.onload = () => {\n                    this.imageOnload($message);\n                };\n                $message.find('.chat-msg-media-content').html($(img_content).html($img_html));\n                !xabber.settings.load_media && $message.find('.img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                this.updateScrollBar();\n            }\n        }\n        if (is_video) {\n            let video_content = this.createVideoContainer();\n            $message.find('.chat-msg-media-content').append(video_content);\n            videos.forEach((video, idx) => {\n                let video_el = this.createVideo(video, idx);\n                $message.find('.video-content').append(video_el);\n            });\n            this.videoOnload($message, message);\n            $message.removeClass('file-upload noselect');\n        }\n\n        if (is_file && attrs.type !== 'file_upload') {\n            if (files.length > 0) {\n                let file_attrs = _.clone(files),\n                    template_for_file_content;\n                $(file_attrs).each((idx, file) => {\n                    let copied_attrs = _.clone(file_attrs[idx]);\n                    if (file.type) {\n                        if (file.voice)\n                            is_audio = true;\n                        else\n                            is_audio = false;\n                    }\n                    ((file_attrs.length === 1) && is_audio) && (file.name = xabber.getString(\"voice_message\"));\n                    let mdi_icon_class = utils.file_type_icon(file.type);\n                    _.extend(copied_attrs, { is_audio: is_audio, duration: utils.pretty_duration(copied_attrs.duration), mdi_icon: mdi_icon_class, size: utils.pretty_size(copied_attrs.size) });\n                    template_for_file_content = is_audio ? $(templates.messages.audio_file(copied_attrs)) : $(templates.messages.file(copied_attrs));\n                    $message.find('.chat-msg-media-content').append(template_for_file_content);\n                    if (is_audio && $message.find('.link-file').length) {\n                        let audio_player = {$audio_elem : $message.find('.link-file')[0]};\n                        audio_player.msg_time = $message.attr('data-time');\n                        audio_player.author = username;\n                        audio_player.message_unique_id = $message.attr('data-uniqueid');\n                        if (attrs.from_jid === this.account.get('jid')) {\n                            if (this.model.get('group_chat')) {\n                                if (this.contact.my_info) {\n                                    audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                                    if (!audio_player.contact_avatar) {\n                                        if (this.account.cached_image)\n                                            audio_player.contact_avatar = this.account.cached_image;\n                                        !audio_player.contact_avatar && (audio_player.contact_avatar = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                                    } else\n                                        audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                                }\n                            }\n                            if (!audio_player.contact_avatar)\n                                audio_player.contact_avatar = this.account.cached_image;\n                        } else {\n                            if (this.model.get('group_chat')) {\n                                let author = $message.find('.msg-wrap .chat-msg-author').text();\n                                audio_player.contact_avatar = Images.getDefaultAvatar(author);\n                            }\n                            else {\n                                let author = this.account.contacts.get($message.data('from')) || $message.find('.msg-wrap .chat-msg-author').text() || $message.data('from');\n                                audio_player.contact_avatar = author.cached_image || Images.getDefaultAvatar(author);\n                            }\n                        }\n                        if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                            this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                            xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                            audio_player_list = audio_player_list.concat([audio_player]);\n                        } else {\n                            audio_player_list = message.get('msg_player_audios');\n                        }\n\n                        let f_url = $message.find('.link-file').find('.file-link-download').attr('href');\n                        $message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                        audio_player.$audio_elem.voice_message = this.renderVoiceMessage($message.find('.link-file').find('.file-container')[0], f_url);\n\n                        xabber.trigger('plyr_player_updated');\n                    }\n                });\n            }\n        }\n\n        if (is_file && attrs.type === 'file_upload') {\n            let images = [];\n            $(files).each((idx, file_) => {\n                file_.upload_id = idx;\n                if (utils.isImageType(file_.type)) {\n                    file_.sources = [file_.key ? file_.image_prev.src : window.URL.createObjectURL(new Blob([file_])),];\n                    images.push(file_);\n                }\n            });\n            if (images.length > 0) {\n                if (images.length > 1) {\n                    let template_for_images;\n                    if (images.length > 6) {\n                        let tpl_name = 'template-for-6',\n                            hidden_images = images.length - 5;\n                        template_for_images = $(templates.messages[tpl_name]({images}));\n                        template_for_images.find('.last-image').addClass('hidden-images');\n                        template_for_images.find('.image-counter').text('+' + hidden_images);\n                    }\n                    else {\n                        let tpl_name = 'template-for-' + images.length;\n                        template_for_images = $(templates.messages[tpl_name]({images}));\n                    }\n                    template_for_images.addClass('unuploaded-images');\n                    $(templates.messages.loading_circle()).insertAfter(template_for_images.find('img'));\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').prepend(template_for_images);\n                } else {\n                    let $img_html = this.createImage(images[0]),\n                        img_content = this.createImageContainer(images[0]),\n                        maxHeight = 400,\n                        maxWidth = (xabber.main_panel.$el.width() * 0.715 - 176) * 0.7,\n                        imgHeight = images[0].height,\n                        imgWidth = images[0].width;\n                    maxWidth = maxWidth > 400 ? 400 : maxWidth;\n                    if (imgHeight && imgWidth) {\n                        if (imgWidth > maxWidth) {\n                            imgHeight = imgHeight * (maxWidth/imgWidth);\n                            imgWidth = maxWidth;\n                        }\n                        if (imgHeight > maxHeight) {\n                            imgWidth = imgWidth * (maxHeight/imgHeight);\n                            imgHeight = maxHeight;\n                        }\n                    }\n                    imgWidth = imgWidth ? imgWidth : 200;\n                    imgHeight = imgHeight ? imgHeight : 200;\n                    $(img_content).addClass('unuploaded-images');\n                    $(img_content).attr('data-upload-file-id', images[0].upload_id);\n                    $(img_content).css({\n                        width: imgWidth,\n                        height: imgHeight,\n                        'max-height': maxHeight,\n                        'max-width': maxWidth,\n                    });\n                    $(img_content).html($img_html)\n                    $(img_content).append(templates.messages.loading_circle());\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').prepend(img_content);\n                }\n            }\n            if (files.length > 0) {\n                $(files).each((idx, item) => {\n                    if (images.includes(item))\n                        return;\n                    let file_attrs = {\n                            name: item.name,\n                            type: item.type,\n                            upload_id: item.upload_id,\n                        },\n                        template_for_file_content;\n                    _.extend(file_attrs, {size: utils.pretty_size(item.size)});\n                    template_for_file_content = $(templates.messages.file_loading(file_attrs));\n                    template_for_file_content.find('.file-loading-container').html(templates.messages.loading_circle());\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_file_content);\n                });\n            }\n        }\n        if (is_location) {\n            if (locations.length > 0) {\n                let location_attrs = _.clone(locations),\n                    template_for_location_content;\n                $(location_attrs).each((idx, location) => {\n                    let copied_attrs = _.clone(location_attrs[idx]);\n                    _.extend(copied_attrs, { id: '_' + Math.random().toString(36).substr(2, 9)});\n                    if (xabber.settings.mapping_service){\n                        template_for_location_content = $(templates.messages.location(copied_attrs));\n                        $message.find('.chat-msg-location-content').attr('lon', copied_attrs.lon);\n                        $message.find('.chat-msg-location-content').attr('lat', copied_attrs.lat);\n                        $message.find('.chat-msg-location-content').append(template_for_location_content);\n                        this.loadLocationInChat($message, copied_attrs);\n                        this.locationOnload($message);\n                    } else {\n                        $message.find('.chat-msg-content').append('<a class=\"location-link\" href=\"geo:' + copied_attrs.lat + ',' + copied_attrs.lon + '\">' + xabber.getString(\"recent_chat__last_message__locations_plural_0\") + '</a>');\n                    }\n                });\n            }\n        }\n\n        if (link_references && link_references.length > 0) {\n            let link_references_attrs = _.clone(link_references),\n                template_for_link_reference_content,\n                youtube_url_regexp = new RegExp('^((?:https?:)?\\\\/\\\\/)?((?:www|m)\\\\.)?((?:youtube(-nocookie)?\\\\.com|youtu.be))(\\\\/(?:[\\\\w\\\\-]+\\\\?v=|embed\\\\/|v\\\\/)?)([\\\\w\\\\-]+)(\\\\S+)?$', 'i'),\n                vimeo_url_regexp = /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i;\n            $(link_references_attrs).each((idx, link) => {\n                let copied_attrs = _.clone(link_references_attrs[idx]);\n                copied_attrs.domain = copied_attrs.url ? utils.getDomainFromUrl(copied_attrs.url) : copied_attrs.site_name;\n                if (copied_attrs.original_text && !/^https?:\\/\\//i.test(copied_attrs.original_text))\n                    copied_attrs.original_text = 'http://' + copied_attrs.original_text;\n                if (link_references_attrs[idx].type && link_references_attrs[idx].type.includes('video') && link_references_attrs[idx].video_url && (youtube_url_regexp.test(link_references_attrs[idx].video_url) || vimeo_url_regexp.test(link_references_attrs[idx].video_url))){\n                    copied_attrs.video_url = link_references_attrs[idx].video_url.replace(\"autoplay=1&\", \"\");\n                    copied_attrs.is_video = true;\n                    youtube_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'youtube');\n                    vimeo_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'vimeo');\n                } else\n                    copied_attrs.is_video = false;\n                template_for_link_reference_content = $(templates.messages.link_reference_chat(copied_attrs));\n                $message.find('.chat-msg-link-reference-content').append(template_for_link_reference_content);\n            });\n            this.OGPLinkOnload($message, message);\n        }\n\n        if (message.get('data_form')) {\n            let data_form = utils.render_data_form(message.get('data_form'));\n            $message.find('.chat-msg-content').append(data_form);\n        }\n\n        if (attrs.forwarded_message && !attrs.searched_message) {\n            $(attrs.forwarded_message).each((idx, fwd_msg) => {\n                is_sender = fwd_msg.isSenderMe();\n                attrs = _.clone(fwd_msg.attributes);\n                let is_image_forward = Boolean(attrs.images && attrs.images.length),\n                    images_forward = is_image_forward ? _.clone(attrs.images) : undefined,\n                    $img_html_forward,\n                    is_forward_video = Boolean(attrs.videos && attrs.videos.length),\n                    is_forward_file = Boolean(attrs.files && attrs.files.length),\n                    is_forward_location = Boolean(attrs.locations && attrs.locations.length),\n                    is_fwd_voice_message,\n                    user_info = attrs.user_info || {},\n                    avatar_id = user_info.avatar,\n                    avatar_url = user_info.avatar_url,\n                    role = utils.pretty_name(user_info.role),\n                    badge = user_info.badge,\n                    from_id = user_info.id,\n                    from_jid = attrs.from_jid;\n                !has_encrypted_files && (has_encrypted_files = attrs.has_encrypted_files);\n                if (is_sender) {\n                    username = Strophe.xmlescape(user_info.nickname || this.account.get('name'));\n                } else {\n                    username = Strophe.xmlescape(user_info.nickname || user_info.id || this.account.contacts.mergeContact({jid: from_jid}).get('name'));\n                }\n\n                let fwd_markup_body = utils.markupBodyMessage(fwd_msg);\n\n                let $f_message = $(templates.messages.forwarded(_.extend(attrs, {\n                    time: pretty_datetime(attrs.time),\n                    short_time: utils.pretty_short_month_date(attrs.time),\n                    username: username,\n                    avatar_id: avatar_id,\n                    avatar_url: avatar_url,\n                    message: fwd_markup_body,\n                    is_file: is_forward_file,\n                    is_location: is_forward_location,\n                    is_audio: is_fwd_voice_message,\n                    role: role,\n                    badge: badge,\n                    from_id: from_id\n                })));\n\n                if (this.model.get('saved') && $message.hasClass('saved-main')) {\n                    $f_message.append($message.children('.right-side').clone());\n                }\n\n                if (fwd_msg.get('forwarded_message')) {\n                    let fwd_messages_count = fwd_msg.get('forwarded_message').length,\n                        fwd_messages_link = xabber.getQuantityString(\"forwarded_messages_count\", fwd_messages_count);\n                    $f_message.children('.msg-wrap').children('.fwd-msgs-block').append($('<a/>', {class: 'collapsed-forwarded-message', 'data-uniqueid': attrs.unique_id}).text(fwd_messages_link));\n                }\n\n                if (is_image_forward) {\n                    if (images_forward.length > 1) {\n                        template_for_images = this.createImageGrid(attrs);\n                        $f_message.find('.chat-msg-media-content').html(template_for_images);\n                        !xabber.settings.load_media && $f_message.find('.img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                    }\n                    if (images_forward.length == 1) {\n                        $img_html_forward = this.createImage(images_forward[0]);\n                        $img_html_forward.onload = () => {\n                            this.imageOnload($message);\n                        };\n                        let img_content_forward = this.createImageContainer(images_forward[0]);\n                        $f_message.find('.chat-msg-media-content').html($(img_content_forward).html($img_html_forward));\n                        !xabber.settings.load_media && $f_message.find('.img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                    }\n                }\n                if (is_forward_video) {\n                    let video_content = this.createVideoContainer();\n                    $f_message.find('.chat-msg-media-content').append(video_content);\n                    attrs.videos.forEach((video, idx) => {\n                        let video_el = this.createVideo(video, idx);\n                        $f_message.find('.video-content').append(video_el);\n                    });\n                    this.videoOnload($message, message);\n                    $f_message.removeClass('file-upload noselect');\n                }\n\n                if (is_forward_file) {\n                    if (attrs.files.length > 0) {\n                        let file_attrs = _.clone(attrs.files),\n                            template_for_file_content;\n                        $(file_attrs).each((idx, file) => {\n                            let copied_attrs = _.clone(file_attrs[idx]);\n                            if (file.type) {\n                                if (file.voice)\n                                    is_audio = true;\n                                else\n                                    is_audio = false;\n                            }\n                            ((file_attrs.length === 1) && is_audio) && (file.name = xabber.getString(\"voice_message\"));\n                            let mdi_icon_class = utils.file_type_icon(file.type);\n                            _.extend(copied_attrs, { is_audio: is_audio, duration: utils.pretty_duration(copied_attrs.duration), mdi_icon: mdi_icon_class, size: utils.pretty_size(copied_attrs.size)});\n                            template_for_file_content = is_audio ? $(templates.messages.audio_file(copied_attrs)) : $(templates.messages.file(copied_attrs));\n                            $f_message.find('.chat-msg-media-content').append(template_for_file_content);\n                            if (is_audio && $f_message.find('.link-file').length) {\n                                let audio_player = {$audio_elem : $f_message.find('.link-file')[0]};\n                                audio_player.msg_time = $message.attr('data-time');\n                                audio_player.author = username;\n                                audio_player.message_unique_id = $message.attr('data-uniqueid') + '-' + $f_message.attr('data-uniqueid');\n                                if (is_sender) {\n                                    if (this.model.get('group_chat')) {\n                                        if (this.contact.my_info) {\n                                            audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                                            if (!audio_player.contact_avatar)\n                                                audio_player.contact_avatar = this.account.cached_image || Images.getDefaultAvatar(this.contact.my_info.get('nickname'));\n                                            else\n                                                audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                                        }\n                                    }\n                                    if (!audio_player.contact_avatar)\n                                        audio_player.contact_avatar = this.account.cached_image;\n                                } else if (this.account.contacts.mergeContact({jid: from_jid})) {\n                                    let contact = this.account.contacts.mergeContact({jid: from_jid})\n                                    audio_player.contact_avatar = contact.cached_image || (this.model.get('group_chat') ? Images.getDefaultAvatar($f_message.find('.msg-wrap .fwd-msg-author').text()) : Images.getDefaultAvatar(contact));\n                                }\n                                if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                                    this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                                    xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                                    audio_player_list = audio_player_list.concat([audio_player]);\n                                } else {\n                                    audio_player_list = message.get('msg_player_audios');\n                                }\n                                let f_url = $f_message.find('.link-file').find('.file-link-download').attr('href');\n                                $f_message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                                audio_player.$audio_elem.voice_message = this.renderVoiceMessage($f_message.find('.link-file').find('.file-container')[0], f_url);\n                                xabber.trigger('plyr_player_updated');\n                            }\n                        });\n                    }\n                }\n                if (is_forward_location) {\n                    if (attrs.locations.length > 0) {\n                        let location_attrs = _.clone(attrs.locations),\n                            template_for_location_content;\n                        $(location_attrs).each((idx, location) => {\n                            let copied_attrs = _.clone(location_attrs[idx]);\n                            _.extend(copied_attrs, { id: '_fwd' + Math.random().toString(36).substr(2, 9) });\n                            if (xabber.settings.mapping_service){\n                                template_for_location_content = $(templates.messages.location(copied_attrs));\n                                $f_message.find('.chat-msg-location-content').attr('lon', copied_attrs.lon);\n                                $f_message.find('.chat-msg-location-content').attr('lat', copied_attrs.lat);\n                                $f_message.find('.chat-msg-location-content').append(template_for_location_content);\n                                this.loadLocationInChat($message, copied_attrs);\n                            } else {\n                                $f_message.find('.chat-msg-content').append('<a class=\"location-link\" href=\"geo:' + copied_attrs.lat + ',' + copied_attrs.lon + '\">' + xabber.getString(\"recent_chat__last_message__locations_plural_0\") + '</a>');\n                            }\n                        });\n                    }\n                }\n                if (attrs.link_references && attrs.link_references.length > 0) {\n                    let link_references_attrs = _.clone(attrs.link_references),\n                        template_for_link_reference_content,\n                        youtube_url_regexp = new RegExp('^((?:https?:)?\\\\/\\\\/)?((?:www|m)\\\\.)?((?:youtube(-nocookie)?\\\\.com|youtu.be))(\\\\/(?:[\\\\w\\\\-]+\\\\?v=|embed\\\\/|v\\\\/)?)([\\\\w\\\\-]+)(\\\\S+)?$', 'i'),\n                        vimeo_url_regexp = /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i;\n                    $(link_references_attrs).each((idx, link) => {\n                        let copied_attrs = _.clone(link_references_attrs[idx]);\n                        copied_attrs.domain = copied_attrs.url ? utils.getDomainFromUrl(copied_attrs.url) : copied_attrs.site_name;\n                        if (copied_attrs.original_text && !/^https?:\\/\\//i.test(copied_attrs.original_text))\n                            copied_attrs.original_text = 'http://' + copied_attrs.original_text;\n                        if (link_references_attrs[idx].type && link_references_attrs[idx].type.includes('video') && link_references_attrs[idx].video_url && (youtube_url_regexp.test(link_references_attrs[idx].video_url) || vimeo_url_regexp.test(link_references_attrs[idx].video_url))){\n                            copied_attrs.video_url = link_references_attrs[idx].video_url.replace(\"autoplay=1&\", \"\");\n                            copied_attrs.is_video = true;\n                            youtube_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'youtube');\n                            vimeo_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'vimeo');\n                        } else\n                            copied_attrs.is_video = false;\n                        template_for_link_reference_content = $(templates.messages.link_reference_chat(copied_attrs));\n                        $f_message.find('.chat-msg-link-reference-content').append(template_for_link_reference_content);\n                    });\n                    this.OGPLinkOnload($message, message);\n                }\n                if (fwd_msg.get('data_form')) {\n                    let data_form = utils.render_data_form(fwd_msg.get('data_form'));\n                    $f_message.find('.chat-msg-content').append(data_form);\n                }\n                $message.children('.msg-wrap').length ? $message.children('.msg-wrap').children('.fwd-msgs-block').append($f_message) : $message.children('.fwd-msgs-block').append($f_message);\n            });\n            this.updateScrollBar();\n            if (this.model.get('saved') && $message.hasClass('saved-main')) {\n                $message.children('.right-side').remove();\n            }\n        }\n        else\n            $message.find('.fwd-msgs-block').remove();\n\n        if (attrs.encrypted || this.model.get('encrypted') || has_encrypted_files) {\n            this.decryptImages(message, has_encrypted_files);\n        }\n\n        if (attrs.searched_message) {\n            let msg_text = '';\n            msg_text = (attrs.forwarded_message) ? (xabber.getQuantityString(\"forwarded_messages_count\", attrs.forwarded_message.length)) : '';\n            if (is_file && is_image && files.length && images.length)\n                msg_text = xabber.getString(\"recent_chat__last_message__attachments\", [files.length + images.length]);\n            else {\n                if (is_file && files.length == 1 && (files[0].is_audio || files[0].voice))\n                    msg_text = `${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(files[0].duration);\n                else if (is_file && files.length > 0) {\n                    let total_size = 0;\n                    files.forEach((f) => {\n                        total_size += Number(f.size)\n                    });\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__files\", files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\");\n                }\n                if (is_image && images.length > 0) {\n                    let total_size = 0;\n                    images.forEach((f) => {\n                        total_size += Number(f.size)\n                    });\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__images\", images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\");\n                }\n                if (is_location && locations.length > 0) {\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__locations\", locations.length);\n                }\n            }\n            if (msg_text)\n                $message.find('.chat-msg-content').text(msg_text)\n        }\n        message.set('msg_player_audios', audio_player_list);\n        $message = $message.hyperlinkify({selector: '.chat-text-content', embed_video: true}).emojify('.chat-text-content', {tag_name: 'div', emoji_size: utils.emoji_size(emoji)}).emojify('.chat-msg-author-badge', {emoji_size: 16});\n        message.set('msg_el', $message);\n        return $message;\n    },\n\n    getDateIndicator: function (date) {\n        let day_date = moment(date).startOf('day');\n        return $('<div class=\"chat-day-indicator one-line noselect\"' + (this.model.get('encrypted') ? (' data-trust=\"' + (this.bottom.$el.attr('data-trust') || this.bottom.$el.attr('data-contact-trust')) + '\"') : \"\") + ' data-time=\"'+\n            day_date.format('x')+'\">'+pretty_date(day_date)+'</div>');\n    },\n\n    initPlyrEmbedPlayer: function ($msg, msg) {\n        let message = this.model.messages.get($msg.data('uniqueid')) || msg,\n            msg_players = [],\n            msg_videos = message && message.get('videos') && message.get('videos').length ? message.get('videos') : null;\n        $msg.find('.plyr-video-container:not(.no-load)').each((idx, item) => {\n            if ($(item).hasClass('no-load'))\n                return;\n            let existing_player = this.model.plyr_players.filter(obj => { return (obj.message_id === idx && obj.message_unique_id === $msg.attr('data-uniqueid'))}),\n                player;\n            if (existing_player.length){\n                player = existing_player[0]\n                msg_players = msg_players.concat([player]);\n            } else {\n                player = {video_src: $(item).attr('data-src')}\n                player.provider = $(item).attr('data-provider');\n                player.video_id = $(item).attr('data-msg-video-id');\n                player.msg_time = $msg.attr('data-time');\n                player.chat_item = this.model.item_view;\n                player.message_id = idx;\n                player.message_unique_id = $msg.attr('data-uniqueid');\n                if (msg_videos && msg_videos.length && player.video_id >= 0) {\n                    let video_file = msg_videos[player.video_id];\n                    video_file && (player.video_file = video_file);\n                }\n                this.model.plyr_players = this.model.plyr_players.concat([player]).sort((a, b) => a.msg_time - b.msg_time);\n                xabber.plyr_players = xabber.plyr_players.concat([player]);\n                msg_players = msg_players.concat([player]);\n            }\n            $(item).attr('data-message-id', player.message_id);\n            $(item).addClass('no-load');\n            if (xabber.current_plyr_player && xabber.current_plyr_player.player_item)\n                if (xabber.current_plyr_player.player_item.message_id === player.message_id && xabber.current_plyr_player.player_item.message_unique_id === player.message_unique_id)\n                    $(item).addClass('active-plyr-container');\n        });\n        msg_players.length && message && message.set('msg_player_videos', msg_players);\n        xabber.trigger('plyr_player_updated');\n    },\n\n    hideMessageAuthor: function ($msg) {\n        $msg.removeClass('with-author');\n    },\n\n    showMessageAuthor: function ($msg) {\n        if ($msg.hasClass('system'))\n            return;\n        $msg.addClass('with-author');\n        let image, $avatar = $msg.find('.left-side .circle-avatar'),\n            from_jid = $msg.data('from');\n        if (from_jid === this.account.get('jid')) {\n            if (this.model.get('group_chat')) {\n                if (this.contact.my_info) {\n                    image = this.contact.my_info.get('b64_avatar');\n                    if (!image) {\n                        if (this.account.cached_image)\n                            image = this.account.cached_image;\n                        !image && (image = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                    } else\n                        image = Images.getCachedImage(image);\n                }\n            }\n            if (!image)\n                image = this.account.cached_image;\n        } else {\n            if (this.model.get('group_chat')) {\n                let author = $msg.find('.msg-wrap .chat-msg-author').text();\n                image = Images.getDefaultAvatar(author);\n            }\n            else {\n                let author = this.account.contacts.get($msg.data('from')) || $msg.find('.msg-wrap .chat-msg-author').text() || $msg.data('from');\n                image = author.cached_image || Images.getDefaultAvatar(author);\n            }\n        }\n        $avatar.setAvatar(image, this.avatar_size);\n        if ($msg.data('avatar')) {\n            if ($msg.data('from-id')) {\n                if (this.account.chat_settings.getHashAvatar($msg.data('from-id')) == $msg.data('avatar') && (this.account.chat_settings.getB64Avatar($msg.data('from-id')))) {\n                    $avatar.setAvatar(this.account.chat_settings.getB64Avatar($msg.data('from-id')), this.avatar_size);\n                }\n                else {\n                    let pending_avatar = this._pending_avatars.find(a => a.hash == $msg.data('avatar'));\n                    if (pending_avatar) {\n                        pending_avatar.dfd.done((data_avatar) => {\n                            $avatar.setAvatar(data_avatar, this.avatar_size);\n                            let idx = this._pending_avatars.indexOf(pending_avatar);\n                            if (idx > -1)\n                                this._pending_avatars.splice(idx, 1);\n                        });\n                    } else {\n                        if($msg.data('avatar-url')){\n                            $avatar.setAvatar($msg.data('avatar-url'), this.avatar_size);\n                            this.account.chat_settings.updateCachedAvatars($msg.data('from-id'), $msg.data('avatar'), $msg.data('avatar-url'));\n                        }\n                        else\n                        {\n                            let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + $msg.data('from-id'), dfd = new $.Deferred();\n                            this._pending_avatars.push({hash: $msg.data('avatar'), dfd: dfd});\n                            this.contact.getAvatar($msg.data('avatar'), node, (data_avatar) => {\n                                $avatar.setAvatar(data_avatar, this.avatar_size);\n                                this.account.chat_settings.updateCachedAvatars($msg.data('from-id'), $msg.data('avatar'), data_avatar);\n                                dfd.resolve(data_avatar);\n                            });\n\n                        }\n                    }\n                }\n            }\n        }\n    },\n\n    hideFwdMessageAuthor: function ($msg) {\n        $msg.removeClass('with-author');\n    },\n\n    showFwdMessageAuthor: function ($fwd_message) {\n        if (!$fwd_message.length)\n            return;\n        $fwd_message.addClass('with-author');\n        let image,\n            $avatar = $fwd_message.find('.circle-avatar'),\n            from_jid = $fwd_message.data('from'),\n            is_sender = (from_jid === this.account.get('jid')),\n            contact = this.account.contacts.get(from_jid) || from_jid;\n        if (is_sender) {\n            if (this.model.get('group_chat')) {\n                if (this.contact.my_info) {\n                    image = this.contact.my_info.get('b64_avatar');\n                    if (!image)\n                        image = this.account.cached_image || Images.getDefaultAvatar(this.contact.my_info.get('nickname'));\n                    else\n                        image = Images.getCachedImage(image);\n                }\n            }\n            if (!image)\n                image = this.account.cached_image;\n        } else if (contact) {\n            image = contact.cached_image || (this.model.get('group_chat') ? Images.getDefaultAvatar($fwd_message.find('.msg-wrap .fwd-msg-author').text()) : Images.getDefaultAvatar(contact));\n        }\n        $avatar.setAvatar(image, this.avatar_size);\n        $avatar.removeClass('hidden');\n        if ($fwd_message.data('avatar')) {\n            if ($fwd_message.data('from-id')) {\n                if ((this.account.chat_settings.getHashAvatar($fwd_message.data('from-id')) == $fwd_message.data('avatar')) && (this.account.chat_settings.getB64Avatar($fwd_message.data('from-id')))) {\n                    $avatar.setAvatar(this.account.chat_settings.getB64Avatar($fwd_message.data('from-id')), this.avatar_size);\n                }\n                else {\n                    if($fwd_message.data('avatar-url')){\n                        $avatar.setAvatar($fwd_message.data('avatar-url'), this.avatar_size);\n                        this.account.chat_settings.updateCachedAvatars($fwd_message.data('from-id'), $fwd_message.data('avatar'), $fwd_message.data('avatar-url'));\n                    }\n                    else {\n                        let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + $fwd_message.data('from-id');\n                        this.contact && this.contact.getAvatar($fwd_message.data('avatar'), node, (data_avatar) => {\n                            $avatar.setAvatar(data_avatar, this.avatar_size);\n                            this.account.chat_settings.updateCachedAvatars($fwd_message.data('from-id'), $fwd_message.data('avatar'), data_avatar);\n                        });\n                    }\n                }\n            }\n        }\n    },\n\n    updateMessageInChat: function (msg_elem, msg) {\n        let $msg = $(msg_elem);\n        $msg.prev('.chat-day-indicator').remove();\n        if ($msg.find('.plyr-video-container').length) {\n            this.initPlyrEmbedPlayer($msg, msg);\n        }\n        ($msg.find('.not-decrypted-icon').length) && $msg.find('.not-decrypted-icon').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        });\n        let $prev_msg = $msg.prevAll('.chat-message').first();\n        if (!$prev_msg.length) {\n            this.getDateIndicator($msg.data('time')).insertBefore($msg);\n            this.showMessageAuthor($msg);\n            $msg.find('.fwd-message').each((idx, fwd_msg_item) => {\n                this.showFwdMessageAuthor($(fwd_msg_item));\n            });\n            return;\n        }\n        if ($msg.find('.data-form').length) {\n            this.showMessageAuthor($msg);\n            return;\n        }\n        let is_system = $prev_msg.hasClass('system'),\n            is_same_sender = ($msg.data('from') === $prev_msg.data('from')),\n            is_same_date = moment($msg.data('time')).startOf('day')\n                .isSame(moment($prev_msg.data('time')).startOf('day'));\n        if (!is_same_date) {\n            this.getDateIndicator($msg.data('time')).insertBefore($msg);\n            this.showMessageAuthor($msg);\n        } else if (is_system || !is_same_sender || $prev_msg.hasClass('saved-main')) {\n            this.showMessageAuthor($msg);\n        } else {\n            this.hideMessageAuthor($msg);\n        }\n        if ($msg.hasClass('forwarding')) {\n            let $fwd_message = $msg.find('.fwd-message');\n            $fwd_message.each((idx, fwd_msg_item) => {\n                let $fwd_msg_item = $(fwd_msg_item),\n                    $prev_fwd_message = (idx > 0) ? $fwd_msg_item.prev() : [];\n                $fwd_msg_item.switchClass('hide-date', is_same_date && $prev_fwd_message.length);\n                $fwd_msg_item.removeClass('hide-time');\n                if ($prev_fwd_message.length) {\n                    let is_same_fwded_sender = ($fwd_msg_item.data('from') === $prev_fwd_message.data('from'));\n                    if (is_same_fwded_sender) {\n                        this.hideFwdMessageAuthor($fwd_msg_item);\n                    } else {\n                        this.showFwdMessageAuthor($fwd_msg_item);\n                    }\n                } else {\n                    this.showMessageAuthor($msg);\n                    this.showFwdMessageAuthor($fwd_msg_item);\n                }\n            });\n        }\n    },\n\n    notifyMessage: function (message) {\n        if (xabber.settings.notifications && ((xabber.settings.notifications_private && !this.model.get('group_chat')) || (xabber.settings.notifications_group && this.model.get('group_chat')))) {\n            let notification_text;\n            if ((this.model.get('group_chat') && xabber.settings.message_preview_group) || (!this.model.get('group_chat') && xabber.settings.message_preview_private))\n                notification_text = message.getText();\n            else\n                notification_text = xabber.getString(\"notification__text_sent_a_message\");\n            let notification = xabber.popupNotification({\n                title: this.contact.get('name'),\n                text: notification_text,\n                icon: this.contact.cached_image.url\n            });\n            notification.onclick = () => {\n                window.focus();\n                this.model.trigger('open');\n            };\n        }\n        if (xabber.settings.group_sound && xabber.settings.notifications_group && this.model.get('group_chat')) {\n            let sound;\n            if (message.get('auth_request')) {\n                sound = xabber.settings.sound_on_auth_request;\n            } else {\n                sound = xabber.settings.sound_on_group_message;\n            }\n            xabber.playAudio(sound, false, !xabber.settings.notifications_volume_enabled ? 0 : xabber.settings.notifications_volume);\n        }\n        else if (xabber.settings.private_sound && xabber.settings.notifications_private && !this.model.get('group_chat')) {\n            let sound;\n            if (message.get('auth_request')) {\n                sound = xabber.settings.sound_on_auth_request;\n            } else {\n                sound = xabber.settings.sound_on_private_message;\n            }\n            xabber.playAudio(sound, false, !xabber.settings.notifications_volume_enabled ? 0 : xabber.settings.notifications_volume);\n        }\n        xabber.recountAllMessageCounter();\n    },\n\n    attentionMessage: function () {\n        let notification = xabber.popupNotification({\n            title: this.contact.get('name'),\n            text: xabber.getString(\"chats_attention\"),\n            icon: this.contact.cached_image.url\n        });\n        notification.onclick = () => {\n            window.focus();\n            this.model.trigger('open');\n        };\n        let sound = xabber.settings.sound_on_attention;\n        xabber.playAudio(sound);\n    },\n\n    sendMessage: function (message) {\n        let body = message.get('message'),\n            legacy_body = '',\n            mutable_content = [],\n            forwarded_message = message.get('forwarded_message'),\n            unique_id = message.get('unique_id'),\n            msg_id = message.get('msgid'),\n            link_references = message.get('link_references'),\n            stanza = $msg({\n                to: this.model.get('jid'),\n                type: 'chat',\n                id: msg_id\n            });\n\n        if (forwarded_message) {\n            legacy_body = [];\n            $(forwarded_message).each((idx, fwd_msg) => {\n                let legacy_fwd_msg = Array.from(_.escape(_.unescape(this.bottom.createTextMessage([fwd_msg], \">\"))) + ((idx === forwarded_message.length - 1 && !body.length) ? \"\" : '\\n')),\n                    idx_begin = legacy_body.length,\n                    fwd = $(fwd_msg.get('xml')).clone(),\n                    idx_end = legacy_body.concat(legacy_fwd_msg).length;\n                if (!fwd.attr('from'))\n                    fwd.attr('from', this.account.get('jid'));\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: idx_begin,\n                    end: idx_end\n                })\n                    .c('forwarded', {xmlns: 'urn:xmpp:forward:0'})\n                    .c('delay', {\n                        xmlns: 'urn:xmpp:delay',\n                        stamp: fwd_msg.get('time')\n                    }).up().cnode(fwd[0]).up().up().up();\n                legacy_body = legacy_body.concat(legacy_fwd_msg);\n                mutable_content.push({\n                    start: idx_begin,\n                    end: idx_end,\n                    type: 'forward'\n                });\n            });\n            body = _.unescape(legacy_body.join(\"\")) + body;\n        }\n\n        if (message.get('mentions') && message.get('mentions').length) {\n            message.get('mentions').forEach((mention) => {\n                let mention_attrs = {xmlns: Strophe.NS.MARKUP};\n                mention.is_gc && (mention_attrs.node = Strophe.NS.GROUP_CHAT);\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: mention.start + legacy_body.length,\n                    end: mention.end + legacy_body.length,\n                    type: 'decoration',\n                })\n                    .c('mention', mention_attrs).t(mention.target).up().up();\n            });\n        }\n\n        if (message.get('markups')) {\n            message.get('markups').forEach((markup) => {\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: markup.start + legacy_body.length,\n                    end: markup.end + legacy_body.length,\n                    type: 'decoration'\n                });\n                for (let idx in markup.markup) {\n                    stanza.c(markup.markup[idx], {xmlns: Strophe.NS.MARKUP}).up();\n                }\n                stanza.up();\n            });\n        }\n\n        if (message.get('blockquotes')) {\n            message.get('blockquotes').forEach((blockquote) => {\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: blockquote.start + legacy_body.length,\n                    end: blockquote.end + legacy_body.length,\n                    type: 'decoration'\n                })\n                    .c('quote', {xmlns: Strophe.NS.MARKUP}).up().up();\n            });\n        }\n\n        if (message.get('type') == 'file_upload') {\n            let files = message.get('files') || [],\n                images = message.get('images') || [],\n                videos = message.get('videos') || [],\n                all_files = files.concat(images);\n            all_files = all_files.concat(videos)\n            all_files.forEach((file, idx) => {\n                (idx === 0) && (body += '\\n');\n                legacy_body = file.sources[0] + ((idx != all_files.length - 1) ? '\\n' : \"\");\n                let start_idx = Array.from(_.escape(body)).length,\n                    end_idx = start_idx + legacy_body.length;\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: start_idx,\n                    end: end_idx\n                });\n                file.voice && stanza.c('voice-message', {xmlns: Strophe.NS.VOICE_MESSAGE});\n                stanza.c('file-sharing', {xmlns: Strophe.NS.FILES}).c('file');\n                file.type && stanza.c('media-type').t(file.type).up();\n                file.thumbnail && stanza.c('thumbnail', {\n                    xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA_THUMBNAIL,\n                    uri: file.thumbnail\n                }).up();\n                file.created && stanza.c('created').t(file.created).up();\n                file.name && stanza.c('name').t(file.name).up();\n                file.size && stanza.c('size').t(file.size).up();\n                file.height && stanza.c('height').t(file.height).up();\n                file.width && stanza.c('width').t(file.width).up();\n                file.duration && stanza.c('duration').t(file.duration).up();\n                file.description && stanza.c('desc').t(file.description).up();\n                stanza.up().c('sources');\n                file.sources.forEach((u) => {\n                    if (file.key)\n                        u = u.replace(/^(https|http)/, 'aescbc') + '#' + utils.ArrayBuffertoBase64(file.key);\n                    stanza.c('uri').t(u).up();\n                });\n                stanza.up().up().up();\n                file.voice && stanza.up();\n                body += legacy_body;\n                mutable_content.push({start: start_idx, end: end_idx});\n            });\n            message.set({type: 'main'});\n        }\n\n        if (link_references && link_references.length) {\n            link_references.forEach((link_reference, idx) => {\n                if (link_reference.start === -1) {\n                    link_reference.start = Array.from(_.escape(body)).length;\n                    body = body + '\\n' + link_reference.original_text;\n                    link_reference.end = link_reference.start + link_reference.original_text.length + 1;\n                }\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: link_reference.start,\n                    end: link_reference.end,\n                    type: 'mutable',\n                }).c('ogp', { xmlns: Strophe.NS.OGP, url: link_reference.original_text });\n                link_reference.site && stanza.c('meta', { property: 'og:site_name', content: link_reference.site}).up();\n                link_reference.type && stanza.c('meta', { property: 'og:type', content: link_reference.type}).up();\n                link_reference.title && stanza.c('meta', { property: 'og:title', content: link_reference.title}).up();\n                link_reference.url && stanza.c('meta', { property: 'og:url', content: link_reference.url}).up();\n                link_reference.description && stanza.c('meta', { property: 'og:description', content: link_reference.description}).up();\n                link_reference.image && stanza.c('meta', { property: 'og:image', content: link_reference.image}).up();\n                link_reference.image_width && stanza.c('meta', { property: 'og:image:width', content: link_reference.image_width}).up();\n                link_reference.image_height && stanza.c('meta', { property: 'og:image:height', content: link_reference.image_height}).up();\n                link_reference.video_url && stanza.c('meta', { property: 'og:video:url', content: link_reference.video_url}).up();\n                stanza.up().up();\n                mutable_content.push({start: link_reference.start, end: link_reference.end});\n            });\n        }\n\n        mutable_content.length && message.set({mutable_content: mutable_content});\n\n        this.account._pending_messages.push({chat_hash_id: this.model.id, unique_id: unique_id, timestamp: moment.now()});\n\n        message.set('original_message', body);\n        body && stanza.c('body').t(body).up();\n        if (this.model.get('group_chat')){\n            stanza.c('private', {xmlns: Strophe.NS.CARBONS}).up();\n        }\n        stanza.c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n            .c('origin-id', {id: msg_id, xmlns: 'urn:xmpp:sid:0'}).up();\n        message.set({xml: $(stanza.tree()).clone()[0]});\n        if (message.get('state') === constants.MSG_ERROR) {\n            if (this.model.get('group_chat')){\n                stanza.c('retry', {xmlns: Strophe.NS.DELIVERY, to: this.model.get('jid')}).up();\n            } else\n                stanza.c('retry', {xmlns: Strophe.NS.DELIVERY}).up();\n            message.set('state', constants.MSG_PENDING);\n        }\n        if (stanza.toString().length >= constants.STANZA_MAX_SIZE) {\n            utils.dialogs.error(xabber.getString(\"message__error_big_stanza\"));\n            this.removeMessage(message);\n            return;\n        }\n        if (message.get('encrypted') && this.account.omemo) {\n            this.model.get('chat_ephemeral_timer') && stanza.c('ephemeral', {xmlns: Strophe.NS.EPHEMERAL, timer: this.model.get('chat_ephemeral_timer')}).up();\n            stanza.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n            if ($(stanza.tree()).children('body').length) {\n                stanza.cnode($(stanza.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                $(stanza.tree()).children('body').detach()\n            }\n            if ($(stanza.tree()).children('reference').length) {\n                $(stanza.tree()).children('reference').each((idx, reference) => {\n                    stanza.cnode($(stanza.tree()).children('reference')[idx]).up()\n                });\n                $(stanza.tree()).children('reference').detach()\n            }\n            stanza.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n            stanza.c('from', {jid: this.account.get('jid')}).up().up()\n            this.account.omemo.encrypt(this.contact, stanza).then((msg) => {\n                if (msg) {\n                    stanza = msg.message;\n                    message.set('trusted', msg.is_trusted);\n                    message.set({xml: $(stanza.tree()).clone()[0]});\n                }\n                let msg_sending_timestamp = moment.now();\n                this.account.sendFast(stanza, this.msgCallback.bind(this, msg_sending_timestamp, message));\n            });\n            return;\n        } else {\n            let msg_sending_timestamp = moment.now();\n            this.account.sendFast(stanza, this.msgCallback.bind(this, msg_sending_timestamp, message));\n        }\n    },\n\n    msgCallback: function (msg_sending_timestamp, message) {\n        this.bottom.click_counter = 0;\n        this.bottom.setDefaultPlaceholder();\n        if (!this.model.get('group_chat') && !this.account.server_features.get(Strophe.NS.DELIVERY)) {\n            setTimeout(() => {\n                if ((this.account.last_stanza_timestamp > msg_sending_timestamp) && (message.get('state') === constants.MSG_PENDING)) {\n                    message.set('state', constants.MSG_SENT);\n                } else {\n                    this.account.connection.ping.ping(this.account.get('jid'), () => {\n                        (message.get('state') === constants.MSG_PENDING) && message.set('state', constants.MSG_SENT);\n                    });\n                    setTimeout(() => {\n                        if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (message.get('state') === constants.MSG_PENDING))\n                            message.set('state', constants.MSG_ERROR);\n                    }, 5000);\n                }\n            }, 1000);\n        }\n        else {\n            let _pending_time = 5, was_reconnecting, has_reconnected;\n            if (!(this.account.connection.authenticated && !this.account.connection.disconnecting && this.account.session.get('connected') && this.account.session.get('ready_to_send') && this.account.get('status') !== 'offline'))\n                was_reconnecting = true;\n            if (this.account.session.get('reconnecting'))\n                was_reconnecting = true;\n            this.account.session.once('change:reconnecting', () => {\n                console.log('change reconnecting');\n                console.log(this.account.session.get('reconnecting'));\n                was_reconnecting = true;\n                this.account.session.once('change:reconnected', () => {\n                    _pending_time = 5;\n                    console.log('change reconnected ');\n                    has_reconnected = true;\n                });\n            });\n            let _interval = setInterval(() => {\n                if (_pending_time >= 8 && message.get('state') === constants.MSG_PENDING && !was_reconnecting){\n                    console.log('ping on message pending');\n                    this.account.connection.ping.ping(this.account.get('jid'), () => {},  () => {\n                        let downtime = (moment.now() - this.account.last_stanza_timestamp) / 1000;\n                        if (downtime >= 2){\n                            console.log('message initiated reconnection');\n                            console.log(message);\n                            this.account.connection.disconnect();\n                        } else {\n                            console.log('ping was sent and got no result after 2 seconds, but didnt reconnect because last stanza time was: ' + downtime + ' sec')\n                        }\n                    }, 2000);\n                }\n                if (was_reconnecting && has_reconnected && (_pending_time > 10)){\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                if (((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 40) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 40)) && !was_reconnecting) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 3;\n            }, 3000);\n        }\n    },\n\n    initJingleMessage: function (media_type) {\n        xabber.current_voip_call && xabber.current_voip_call.destroy();\n        media_type = media_type || {};\n        media_type = media_type.video ? 'video' : 'audio';\n        let session_id = uuid();\n        xabber.current_voip_call = new xabber.JingleMessage({session_id: session_id, video_live: media_type === 'video'}, {contact: this.contact});\n        xabber.current_voip_call.startCall();\n        xabber.current_voip_call.modal_view.show({status: constants.JINGLE_MSG_PROPOSE});\n        xabber.trigger('update_jingle_button');\n    },\n\n    saveForwardedMessage: function (msg) {\n        let forwarded_message = null;\n        if ($(msg).get('forwarded_message')) {\n            forwarded_message = $(msg).get('forwarded_message');\n            if (this.account.forwarded_messages.indexOf(forwarded_message) < 0) {\n                forwarded_message = this.saveForwardedMessage(forwarded_message);\n            }\n        }\n        msg = this.account.forwarded_messages.create(_.extend({\n            is_forwarded: true,\n            forwarded_message: forwarded_message\n        }, msg.attributes));\n        return msg;\n    },\n\n    onSubmit: function (text, fwd_messages, options) {\n        // send forwarded messages before\n        options = options || {};\n        let attrs = {\n            from_jid: this.account.get('jid'),\n            message: text,\n            mentions: options.mentions,\n            blockquotes: options.blockquotes,\n            markups: options.markup_references,\n            files: options.attached_files,\n            link_references: options.link_references,\n            encrypted: this.model.get('encrypted'),\n            ephemeral_timer: this.model.get('encrypted') && this.model.get('chat_ephemeral_timer'),\n            submitted_here: true,\n            forwarded_message: null\n        }, _dfd_info = new $.Deferred();\n        _dfd_info.done(() => {\n            if (!fwd_messages.length && !(attrs.files && attrs.files.length) && !(attrs.link_references && attrs.link_references.length) && text.removeEmoji() === \"\")\n                attrs.only_emoji = Array.from(text).length;\n            if (fwd_messages.length) {\n                let new_fwd_messages = [];\n                _.each(fwd_messages, (msg) => {\n                    if (this.account.forwarded_messages.indexOf(msg) < 0) {\n                        msg = this.saveForwardedMessage(msg);\n                    }\n                    new_fwd_messages.push(msg);\n                });\n                attrs.forwarded_message = new_fwd_messages;\n                if (attrs.files && attrs.files.length) {\n                    attrs.type = 'file_upload';\n                    this.account.server_features.get(Strophe.NS.HTTP_UPLOAD) && (attrs.upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD).get('from'));\n                    this.model.messages.create(attrs);\n                } else {\n                    let message = this.model.messages.create(attrs);\n                    this.sendMessage(message);\n                }\n            } else if (attrs.files && attrs.files.length) {\n                attrs.type = 'file_upload';\n                this.account.server_features.get(Strophe.NS.HTTP_UPLOAD) && (attrs.upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD).get('from'));\n                this.model.messages.create(attrs);\n            } else if (text || (attrs.link_references && attrs.link_references.length)) {\n                let message = this.model.messages.create(attrs);\n                this.sendMessage(message);\n            }\n            if (this.contact && this.model.get('archived') && !this.model.isMuted()) {\n                message.set('muted', false);\n                this.head.archiveChat();\n                this.model.set('archived', false);\n                xabber.chats_view.updateScreenAllChats();\n            }\n            if (this.model.get('group_chat') && xabber.toolbar_view.$('.active').hasClass('chats'))\n                if (this.contact && !this.model.isMuted() && !this.model.get('archived'))\n                    xabber.chats_view.updateScreenAllChats();\n            xabber.chats_view.scrollToTop();\n            xabber.chats_view.clearSearch();\n        });\n\n        if (this.contact && this.contact.get(\"group_chat\") && !this.contact.my_info)\n            this.contact.getMyInfo(() => {\n                _dfd_info.resolve();\n            });\n        else if (this.model.get('encrypted')){\n            this.account.omemo.checkContactFingerprints(this.contact).then((obj) => {\n                attrs.is_contact_trusted = obj.trust;\n                _dfd_info.resolve();\n            });\n        } else\n            _dfd_info.resolve();\n    },\n\n    addFileMessage: function (files, is_voice) {\n        let new_files = [], file_counter = 0;\n        if (this.model.messages_view)\n            if (this.model.messages_view.data.get('visible'))\n                this.model.messages_view.openChat();\n        if (files.length > 10 && !(this.account.get('gallery_token') && this.account.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"too_many_files_at_once\"));\n            return;\n        }\n        let http_upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD);\n        if (!http_upload_service && !(this.account.get('gallery_token') && this.account.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"error_file_upload_not_support\", [this.account.domain]));\n            return;\n        }\n        let deferred_all = new $.Deferred();\n        deferred_all.done((data) => {\n            if (is_voice) {\n                this.model.messages.create({\n                    from_jid: this.account.get('jid'),\n                    type: 'file_upload',\n                    files: data,\n                    encrypted: this.model.get('encrypted'),\n                    upload_service: http_upload_service.get('from'),\n                    message: '',\n                    submitted_here: true\n                });\n            } else\n                this.bottom.addFileSnippets(data);\n        });\n        $(files).each((idx, file) => {\n            if (utils.isImageType(file.type)) {\n                let reader = new FileReader(), deferred = new $.Deferred();\n                Images.compressImage(file).done((image) => {\n                    reader.readAsDataURL(image);\n                    deferred.done((data) => {\n                        if (data) {\n                            image.height = data.height;\n                            image.width = data.width;\n                        }\n                        if (data.encrypted_file)\n                            new_files.push(data.encrypted_file);\n                        else\n                            new_files.push(image);\n                        file_counter++;\n                        if (file_counter === files.length)\n                            deferred_all.resolve(new_files);\n                    });\n                });\n                reader.onload = (e) => {\n                    if (this.model.get('encrypted')) {\n                        this.encryptFile(e.target.result).then((encrypted) => {\n                            let key = encrypted.keydata,\n                                new_file = new File([encrypted.payload], uuid().replace(/-/g, \"\"), {type: file.type});\n                            new_file.key = key;\n                            if (new_file.type === 'image/svg+xml') {\n                                deferred.resolve({encrypted_file: new_file,key: key});\n                            } else {\n                                let image_prev = new Image();\n                                image_prev.onload = function () {\n                                    let height = this.height,\n                                        width = this.width;\n                                    new_file.image_prev = image_prev;\n                                    deferred.resolve({height: height, width: width, encrypted_file: new_file, key: key});\n                                };\n                                image_prev.src = e.target.result;\n                            }\n                        });\n                    } else {\n                        if (file.type === 'image/svg+xml') {\n                            deferred.resolve({});\n                        } else {\n                            let image_prev = new Image();\n                            image_prev.onload = function () {\n                                let height = this.height,\n                                    width = this.width;\n                                deferred.resolve({height: height, width: width});\n                            };\n                            image_prev.src = e.target.result;\n                        }\n                    }\n                };\n            }\n            else {\n                if (this.model.get('encrypted')) {\n                    let reader = new FileReader();\n                    reader.onload = (e) => {\n                        this.encryptFile(e.target.result).then((encrypted) => {\n                            let key = encrypted.keydata,\n                                encrypted_file = new File([encrypted.payload], uuid().replace(/-/g, \"\"), {type: file.type});\n                            file.voice && (encrypted_file.voice = true);\n                            file.duration && (encrypted_file.duration = file.duration);\n                            encrypted_file.key = key;\n                            new_files.push(encrypted_file);\n                            file_counter++;\n                            if (file_counter === files.length)\n                                deferred_all.resolve(new_files);\n                        });\n                    };\n                    reader.readAsDataURL(file);\n                } else {\n                    new_files.push(file);\n                    file_counter++;\n                    if (file_counter === files.length)\n                        deferred_all.resolve(new_files);\n                }\n            }\n        });\n    },\n\n    startUploadFile: function (message, $message) {\n        $message.emojify('.chat-msg-author-badge', {emoji_size: 16});\n        $message.find('.repeat-upload').hide();\n        $message.find('.status').hide();\n        $message.find('.progress').show();\n        $message.find('.mdi-center-loading-indicator').removeClass('mdi-check').addClass('mdi-close');\n        $message.find('.mdi-center-loading-indicator').removeClass('hidden');\n        $message.find('.dropdown-content.retry-send-message').addClass('hidden');\n        $message.find('.msg-delivering-state').addClass('no-click');\n        let files_count = 0;\n        $(message.get('files')).each((idx, file) => {\n            let enc_file = new File([file], file.name);\n            enc_file.key && (delete enc_file.key);\n            let iq = $iq({type: 'get', to: message.get('upload_service')})\n                    .c('request', {xmlns: Strophe.NS.HTTP_UPLOAD})\n                    .c('filename').t(enc_file.name).up()\n                    .c('size').t(enc_file.size).up()\n                    .c('content-type').t(enc_file.type).up(),\n                deferred = new $.Deferred(), self = this;\n            this.account.sendIQFast(iq,\n                function (result) {\n                    let $slot = $(result).find(`slot[xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`);\n                    deferred.resolve({\n                        get_url: $slot.find('get').text(),\n                        put_url: $slot.find('put').text()\n                    });\n                },\n                function (err) {\n                    let error_text = $(err).find(`error text[xml\\\\:lang=\"${xabber._settings.get('language')}\"]`).text(),\n                        error_type = $(err).find('error').attr('type');\n                    !error_text && (error_text = $(err).find(`error text`).text());\n                    self.onFileNotUploaded(message, $message, error_text, 'xmpp');\n                }\n            );\n            let msg_sending_timestamp = moment.now(), _pending_time = 10, _interval = setInterval(() => {\n                if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 20) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 20)) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 10;\n            }, 10000);\n            deferred.done((data) => {\n                clearInterval(_interval);\n                let xhr = new XMLHttpRequest(),\n                    $bar = $message.find('.progress');\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap .mdi-close').click(() => {\n                    xhr.abort();\n                });\n                xhr.onabort = () => {\n                    this.removeMessage($message);\n                };\n                xhr.upload.onprogress = (event) => {\n                    let percentage = event.loaded / event.total;\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(parseInt((100 * percentage)) + '%');\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .preloader-path-new').css({ 'stroke-dasharray': '' + (150 * percentage) + ', 149.825'});\n                };\n                xhr.onload = xhr.onerror = function () {\n                    if (this.status === 201) {\n                        message.get('files')[idx].url = data.get_url;\n                        files_count++;\n                        if (files_count == message.get('files').length) {\n                            self.onFileUploaded(message, $message);\n                        }\n                    } else {\n                        self.onFileNotUploaded(message, $message, this.responseText, 'http');\n                    }\n                };\n                if ($message.data('cancel')) {\n                    xhr.abort();\n                } else {\n                    xhr.open(\"PUT\", data.put_url, true);\n                    xhr.send(enc_file);\n                }\n            });\n        });\n    },\n\n    startGalleryUploadFile: function (message, $message) {\n        $message.emojify('.chat-msg-author-badge', {emoji_size: 16});\n        message.set('files', message.get('files').filter((element) => { return element != null}) );\n        let files_count = 0,\n            cancelled_files_count = 0,\n            self = this,\n            is_error = false,\n            xhr_requests = [],\n            msg_files_count = message.get('files').length;\n        $message.find('.mdi-center-loading-indicator').removeClass('mdi-check').addClass('mdi-close');\n        $message.find('.uploaded-file').removeClass('uploaded-file');\n        $message.find('.mdi-center-loading-indicator').removeClass('hidden');\n        $message.find('.dropdown-content.retry-send-message').addClass('hidden');\n        $message.find('.msg-delivering-state').addClass('no-click');\n        $(message.get('files')).each((idx, file) => {\n            if (is_error)\n                return;\n            if (file.key) {\n                file = new File([file], file.name);\n                delete file.key\n            }\n            let msg_sending_timestamp = moment.now(), _pending_time = 10, _interval = setInterval(() => {\n                if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 20) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 20)) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 10;\n            }, 10000);\n\n            let formData = new FormData(),\n                metadata = {};\n            file.duration && (metadata.duration = file.duration);\n            file.width && (metadata.width = file.width);\n            file.height && (metadata.height = file.height);\n            formData.append('file', file, file.name);\n            formData.append('metadata', JSON.stringify(metadata));\n            if (file.size)\n                formData.append('size', file.size);\n            if (file.voice){\n                formData.append('media_type', file.type + '+voice');\n                formData.append('context', 'voice');\n            }\n            else\n                formData.append('media_type', file.type);\n            clearInterval(_interval);\n            message.get('files')[idx].is_errored = false;\n            let xhr = new XMLHttpRequest(),\n                $bar = $message.find('.progress');\n            xhr.formData = formData;\n            xhr_requests = xhr_requests.concat([xhr]);\n            xhr.arrayIndex = xhr_requests.indexOf(xhr);\n            $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap .mdi-close').one(\"click\",() => {\n                cancelled_files_count++;\n                if (xhr.is_uploading)\n                    xhr.abort();\n                else {\n                    if ((msg_files_count - cancelled_files_count) == 0) {\n                        message.set('files', []);\n                        if (self.model.get('encrypted')){\n                            self.bottom.setEditedMessageAttachments(message, true);\n                            self.bottom.setRedactedUploadMessage(message);\n                        }\n                        self.removeMessage($message);\n                    } else {\n                        xhr.is_cancelled = true;\n                        $message.find('.unuploaded-file[data-upload-file-id=\"' + file.upload_id + '\"]').remove();\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap').remove();\n                        message.get('files')[idx] = null;\n                    }\n                }\n            });\n            xhr.upload.onprogress = (event) => {\n                let percentage = event.loaded / event.total;\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(parseInt((100 * percentage)) + '%');\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .preloader-path-new').css({ 'stroke-dasharray': '' + (150 * percentage) + ', 149.825'});\n            };\n            xhr.oncancel = xhr.onload = xhr.onerror = xhr.onabort = function () {\n                let xhr_status = this.fakeStatus || this.status;\n                if (xhr_status >= 200 && xhr_status < 300) {\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('mdi-check').removeClass('mdi-close');\n                    let response = this.response ? JSON.parse(this.response) : this.fakeResponse;\n                    message.get('files')[idx].id = response.id;\n                    message.get('files')[idx].created_at = response.created_at;\n                    (response.thumbnail && response.thumbnail.url) && (message.get('files')[idx].thumbnail = response.thumbnail.url);\n                    message.get('files')[idx].url = response.file;\n                    files_count++;\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('uploaded-file');\n                    while (xhr_requests[files_count] && xhr_requests[files_count].is_cancelled){\n                        files_count++;\n                    }\n                    if (files_count == message.get('files').length) {\n                        self.onFileUploaded(message, $message);\n                    } else if (xhr_requests[files_count]){\n                        self.account.testGalleryTokenExpire(() => {\n                            self.account.testGalleryFileSlot(xhr_requests[files_count].formData.get('file'), (slot_response) => {\n                                if (!is_error) {\n                                    if (slot_response && slot_response.quota){\n                                        if (slot_response.file && slot_response.hash){\n                                            xhr_requests[files_count].fakeStatus = 200;\n                                            xhr_requests[files_count].fakeResponse = {\n                                                file: slot_response.file,\n                                                id: slot_response.id,\n                                                name: slot_response.name,\n                                                thumbnail: slot_response.thumbnail,\n                                                created_at: slot_response.created_at,\n                                            };\n                                            xhr_requests[files_count].oncancel();\n                                        } else {\n                                            xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                            xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'));\n                                            xhr_requests[files_count].is_uploading = true;\n                                            xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                        }\n                                    } else {\n                                        xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                        xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                        xhr_requests[files_count].oncancel();\n                                    }\n                                }\n                            });\n                        });\n                    }\n                } else {\n                    if (xhr_status === 0 && is_error)\n                        return;\n                    if ((msg_files_count - cancelled_files_count) == 0 && xhr_status === 0){\n                        message.set('files', []);\n                        if (self.model.get('encrypted')){\n                            self.bottom.setEditedMessageAttachments(message, true);\n                            self.bottom.setRedactedUploadMessage(message);\n                        }\n                        self.removeMessage($message);\n                    } else {\n                        let response_text, error_status;\n                        self.account.handleCommonGalleryErrors(this.response)\n                        if (xhr_status === 500)\n                            response_text = this.fakeResponse || this.statusText;\n                        else if (xhr_status === 400 || this.fakeStatus){\n                            response_text = this.fakeResponse || JSON.parse(this.response).error;\n                            error_status = this.fakeStatus || JSON.parse(this.response).status;\n                            if (error_status && error_status == 429){\n                                setTimeout(() => {\n                                    self.account.testGalleryTokenExpire(() => {\n                                        self.account.testGalleryFileSlot(xhr_requests[files_count].formData.get('file'), (slot_response) => {\n                                            if (!is_error) {\n                                                if (slot_response && slot_response.quota){\n                                                    if (slot_response.file && slot_response.hash){\n                                                        xhr_requests[files_count].fakeStatus = 200;\n                                                        xhr_requests[files_count].fakeResponse = {\n                                                            file: slot_response.file,\n                                                            id: slot_response.id,\n                                                            name: slot_response.name,\n                                                            thumbnail: slot_response.thumbnail,\n                                                            created_at: slot_response.created_at,\n                                                        };\n                                                        xhr_requests[files_count].oncancel();\n                                                    } else {\n                                                        xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                                        xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'));\n                                                        xhr_requests[files_count].is_uploading = true;\n                                                        xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                                    }\n                                                } else {\n                                                    xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                                    xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                                    xhr_requests[files_count].oncancel();\n                                                }\n                                            }\n                                        });\n                                    });\n                                }, 1000);\n                                return;\n                            }\n                        }\n                        else if (xhr_status === 0) {\n                            $message.find('.unuploaded-file[data-upload-file-id=\"' + file.upload_id + '\"]').remove();\n                            $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap').remove();\n                        };\n                        (xhr_status === 0) && (message.get('files')[idx] = null);\n                        if (!message.get('files').filter((element) => { return element != null}).length && !message.get('message')){\n                            if (self.model.get('encrypted')){\n                                self.bottom.setEditedMessageAttachments(message, true);\n                                self.bottom.setRedactedUploadMessage(message);\n                            }\n                            self.removeMessage($message);\n                            return;\n                        }\n                        files_count++;\n                        if (xhr_status != 0) {\n                            if (!$message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').closest('.img-content-template.hidden').length){\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(response_text);\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').removeClass('hidden');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').prop('title', response_text);\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('hidden');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('upload-error');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').css({ 'border-color': '#EF9A9A'});\n                            } else {\n                                $message.find('.hidden-images .circle-percent-text').text(response_text);\n                                $message.find('.hidden-images .mdi-alert-circle').removeClass('hidden');\n                                $message.find('.hidden-images .mdi-alert-circle').prop('title', response_text);\n                                $message.find('.hidden-images .mdi-center-loading-indicator').addClass('hidden');\n                                $message.find('.hidden-images').addClass('upload-error');\n                                $message.find('.hidden-images').css({ 'border-color': '#EF9A9A'});\n                            }\n                            message.get('files')[idx].is_errored = true;\n                            is_error = true;\n                            $(xhr_requests).each((idx, request) => {\n                                request.abort();\n                            })\n                            self.onFileNotUploaded(message, $message, response_text);\n                        }\n                        else if (files_count == msg_files_count) {\n                            self.onFileUploaded(message, $message);\n                        } else {\n                            while (xhr_requests[files_count] && xhr_requests[files_count].is_cancelled){\n                                files_count++;\n                            }\n                            if (files_count == msg_files_count) {\n                                self.onFileUploaded(message, $message);\n                            } else {\n                                self.account.testGalleryTokenExpire(() => {\n                                    self.account.testGalleryFileSlot(xhr_requests[files_count].formData.get('file'), (slot_response) => {\n                                        if (!is_error) {\n                                            if (slot_response && slot_response.quota){\n                                                if (slot_response.file && slot_response.hash){\n                                                    xhr_requests[files_count].fakeStatus = 200;\n                                                    xhr_requests[files_count].fakeResponse = {\n                                                        file: slot_response.file,\n                                                        id: slot_response.id,\n                                                        name: slot_response.name,\n                                                        thumbnail: slot_response.thumbnail,\n                                                        created_at: slot_response.created_at,\n                                                    };\n                                                    xhr_requests[files_count].oncancel();\n                                                } else {\n                                                    xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                                    xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'));\n                                                    xhr_requests[files_count].is_uploading = true;\n                                                    xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                                }\n                                            } else {\n                                                xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                                xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                                xhr_requests[files_count].oncancel();\n                                            }\n                                        }\n                                    });\n                                });\n                            }\n                        }\n                    }\n                }\n            };\n        });\n        if (xhr_requests.length){\n            if ($message.data('cancel')) {\n                xhr_requests[0].abort();\n            } else {\n                this.account.testGalleryTokenExpire(() => {\n                    this.account.testGalleryFileSlot(xhr_requests[0].formData.get('file'), (slot_response) => {\n                        if (!is_error) {\n                            if (slot_response && slot_response.quota){\n                                if (slot_response.file && slot_response.hash){\n                                    xhr_requests[0].fakeStatus = 200;\n                                    xhr_requests[0].fakeResponse = {\n                                        file: slot_response.file,\n                                        id: slot_response.id,\n                                        name: slot_response.name,\n                                        thumbnail: slot_response.thumbnail,\n                                        created_at: slot_response.created_at,\n                                    };\n                                    xhr_requests[0].oncancel();\n                                } else {\n                                    xhr_requests[0].open(\"POST\", this.account.get('gallery_url') + 'v1/files/upload/', true);\n                                    xhr_requests[0].setRequestHeader(\"Authorization\", 'Bearer ' + this.account.get('gallery_token'));\n                                    xhr_requests[0].is_uploading = true;\n                                    xhr_requests[0].send(xhr_requests[0].formData);\n                                }\n                            } else {\n                                xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                xhr_requests[0].oncancel();\n                            }\n                        }\n                    });\n                }, (err_status) => {\n                    let response_text = err_status,\n                        file;\n                    message.get('files').length && (file = message.get('files')[0])\n                    if (file && !_.isUndefined(file.upload_id)){\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(response_text);\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').removeClass('hidden');\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').prop('title', response_text);\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('hidden');\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('upload-error');\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').css({ 'border-color': '#EF9A9A'});\n                    }\n                    message.get('files').length && (message.get('files')[0].is_errored = true);\n                    is_error = true;\n                    $(xhr_requests).each((idx, request) => {\n                        request.abort();\n                    })\n                    self.onFileNotUploaded(message, $message, response_text);\n                });\n            }\n        }\n\n    },\n\n    encryptFile: async function (file) {\n        return await utils.AES.encrypt(file);\n    },\n\n    onFileUploaded: function (message, $message) {\n        $message.find('.dropdown-content.retry-send-message').removeClass('hidden');\n        $message.find('.msg-delivering-state').removeClass('no-click');\n        message.set('files', message.get('files').filter((element) => { return element != null}) );\n        let files = message.get('files'),\n            self = this, is_audio = false,\n            images = [], files_ = [], videos = [];\n        if (!files.length)\n            this.onFileNotUploaded(message, $message)\n        $(files).each((idx, file_) => {\n            let file_new_format = {\n                name: file_.name,\n                type: file_.type,\n                size: file_.size,\n                description: file_.description || '',\n                sources: [file_.url]\n            };\n            file_.key && (file_new_format.key = file_.key);\n            file_.voice && (file_new_format.voice = true);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')){\n                _.extend(file_new_format, { id: file_.id, created: file_.created_at, thumbnail: file_.thumbnail });\n            }\n            if (utils.isImageType(file_.type)) {\n                _.extend(file_new_format, { width: file_.width, height: file_.height });\n                images.push(file_new_format);\n            }\n            else if (utils.isVideoType(file_.type)) {\n                _.extend(file_new_format, { duration: file_.duration});\n                videos.push(file_new_format);\n            }\n            else {\n                _.extend(file_new_format, { duration: file_.duration});\n                files_.push(file_new_format);\n            }\n        });\n        $message.find('.unuploaded-images').remove();\n        $message.find('.unuploaded-file').remove();\n        //  loaded and send image\n        if (images.length > 0) {\n            if (images.length > 1) {\n                let template_for_images;\n                if (images.length > 6) {\n                    let tpl_name = 'template-for-6',\n                        hidden_images = images.length - 5;\n                    !xabber.settings.load_media && (tpl_name = 'hidden-template-for-6')\n                    template_for_images = $(templates.messages[tpl_name]({images}));\n                    template_for_images.find('.last-image').addClass('hidden-images');\n                    template_for_images.find('.image-counter').text('+' + hidden_images);\n                }\n                else {\n                    let tpl_name = 'template-for-' + images.length;\n                    !xabber.settings.load_media && (tpl_name = 'hidden-template-for-' + images.length)\n                    template_for_images = $(templates.messages[tpl_name]({images}));\n                }\n                if (!xabber.settings.load_media) {\n                    template_for_images.find('img').removeClass('uploaded-img-for-collage popup-img').addClass('unloaded-img')\n                }\n                $message.removeClass('file-upload noselect');\n                $message.find('.chat-msg-media-content .chat-file-info').remove();\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_images);\n                !xabber.settings.load_media && $message.find('.chat-msg-media-content.chat-main-upload-media .img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n            else {\n                let img = this.createImage(images[0]),\n                    img_content = self.createImageContainer(images[0]);\n                img.onload = () => {\n                    this.imageOnload($message);\n                };\n                $message.removeClass('file-upload noselect');\n                $message.find('.chat-msg-media-content .chat-file-info').remove();\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(img_content);\n                $message.find('.chat-msg-media-content.chat-main-upload-media .img-content').html(img);\n                !xabber.settings.load_media && $message.find('.chat-msg-media-content.chat-main-upload-media .img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n        }\n        message.set('videos', videos);\n        if (videos.length > 0) {\n            let video_content = this.createVideoContainer();\n            $message.find('.chat-msg-media-content.chat-main-upload-media').find('.chat-file-info').remove();\n            $message.find('.chat-msg-media-content.chat-main-upload-media').append(video_content);\n            videos.forEach((video, idx) => {\n                let video_el = this.createVideo(video, idx);\n                $message.find('.video-content').append(video_el);\n            });\n            this.videoOnload($message, message);\n            $message.removeClass('file-upload noselect');\n        }\n        if (files_.length > 0) {\n            $message.removeClass('file-upload noselect');\n            $(files_).each((idx, item) => {\n                if (!idx && !images.length){\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').find('.chat-file-info').remove();\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').removeClass('chat-file-content');\n                }\n                if (item.type) {\n                    if (item.voice)\n                        is_audio = true;\n                    else\n                        is_audio = false;\n                }\n                let file_attrs = {\n                        name: item.name,\n                        type: item.type,\n                        sources: item.sources\n                    },\n                    template_for_file_content,\n                    mdi_icon_class = utils.file_type_icon(item.type);\n                ((files_.length === 1) && is_audio) && (file_attrs.name = xabber.getString(\"voice_message\"));\n                _.extend(file_attrs, {size: utils.pretty_size(item.size), is_audio: is_audio, duration: utils.pretty_duration(item.duration), mdi_icon: mdi_icon_class});\n                template_for_file_content = is_audio ? $(templates.messages.audio_file(file_attrs)) : $(templates.messages.file(file_attrs));\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_file_content);\n                if (is_audio && $message.find('.link-file').length) {\n                    let audio_player = {$audio_elem : $message.find('.link-file')[0]};\n                    audio_player.msg_time = $message.attr('data-time');\n                    audio_player.author = $message.find('.chat-msg-author').text();\n                    audio_player.message_unique_id = $message.attr('data-uniqueid');\n                    if (this.model.get('group_chat')) {\n                        if (this.contact.my_info) {\n                            audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                            if (!audio_player.contact_avatar) {\n                                if (this.account.cached_image)\n                                    audio_player.contact_avatar = this.account.cached_image;\n                                !audio_player.contact_avatar && (audio_player.contact_avatar = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                            } else\n                                audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                        }\n                    }\n                    if (!audio_player.contact_avatar)\n                        audio_player.contact_avatar = this.account.cached_image;\n                    if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                        this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                        xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                    }\n\n                    let f_url = $message.find('.link-file').find('.file-link-download').attr('href');\n                    $message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                    audio_player.$audio_elem.voice_message = this.renderVoiceMessage($message.find('.link-file').find('.file-container')[0], f_url);\n\n                    message.set('msg_player_audios', [audio_player])\n                    xabber.trigger('plyr_player_updated');\n                }\n            });\n        }\n        this.initPopup($message);\n        message.set('images', images);\n        message.set('files', files_);\n        if ((message.get('encrypted') || this.model.get('encrypted')) && message.get('images').length) {\n            this.decryptImages(message);\n        }\n        this.sendMessage(message);\n        this.scrollToBottom();\n    },\n\n    createAudio: function(file_url, $elem) {\n        let audio = WaveSurfer.create({\n            container: $elem[0],\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n\n    createImage: function(image) {\n        let imgContent = new Image(),\n            maxHeight = 400,\n            maxWidth = (xabber.main_panel.$el.width() * 0.715 - 176) * 0.7;\n        if (image.height)\n            imgContent.height = image.height;\n        if (image.width)\n            imgContent.width = image.width;\n        maxWidth = maxWidth > 400 ? 400 : maxWidth;\n        if (xabber.settings.load_media) {\n            imgContent.src = image.sources[0];\n            $(imgContent).addClass('uploaded-img popup-img');\n        } else {\n            $(imgContent).addClass('unloaded-img');\n        }\n        $(imgContent).attr({'data-mfp-src': image.sources[0], title: (image.description || '')});\n        if (imgContent.height && imgContent.width) {\n            if (imgContent.width > maxWidth) {\n                imgContent.height = imgContent.height * (maxWidth/imgContent.width);\n                imgContent.width = maxWidth;\n            }\n            if (imgContent.height > maxHeight) {\n                imgContent.width = imgContent.width * (maxHeight/imgContent.height);\n                imgContent.height = maxHeight;\n            }\n        }\n        return imgContent;\n    },\n\n    createVideo: function(video, idx) {\n        video.pretty_size = utils.pretty_size(video.size)\n        let video_attrs = {video_src: video.sources[0], thumbnail: video.thumbnail, video_id: idx},\n            $video_wrap_template = $(templates.messages.video(video_attrs));\n        if (video.thumbnail){\n            setTimeout(() => {\n                $video_wrap_template.append($(`<img class=\"plyr-video-poster\" src=\"${video.thumbnail}\" onerror=\"this.style.display='none'\">`))\n            }, 1000);\n        }\n        return $video_wrap_template;\n    },\n\n    createImageContainer: function() {\n        return $('<div class=\"img-content\"/>')[0];\n    },\n\n    createVideoContainer: function() {\n        return $('<div class=\"video-content\"/>')[0];\n    },\n\n    onFileNotUploaded: function (message, $message, error_text, type, error_type) {\n        let error_message = error_text ? xabber.getString(\"file_upload__error\", [error_text]) : xabber.getString(\"file_upload__error_default\");\n        $message.find('.dropdown-content.retry-send-message').removeClass('hidden');\n        $message.find('.msg-delivering-state').removeClass('no-click');\n        $message.find('.circle-wrap .mdi-close').unbind( \"click\" );\n        message.set('state', constants.MSG_ERROR);\n        if (type == 'http' || error_type == 'wait'){\n            $message.find('.repeat-upload').one(\"click\",() => {\n                this.startUploadFile(message, $message);\n            });\n        }\n        else {\n            if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                this.bottom.deleteFilesFromMessages([message]);\n            $message.find('.edit-upload').one(\"click\",() => {\n                if (this.model.get('encrypted')){\n                    this.bottom.setEditedMessageAttachments(message, true);\n                    this.bottom.setRedactedUploadMessage(message);\n                }\n                this.removeMessage($message);\n            });\n            $message.find('.repeat-upload').one(\"click\",() => {\n                message.set('state', constants.MSG_PENDING);\n                $message.find('.upload-error .circle-percent-text').text('0%');\n                $message.find('.mdi-alert-circle').addClass('hidden');\n                $message.find('.mdi-close').removeClass('hidden');\n                $message.find('.upload-error').css({ 'border-color': ''});\n                $message.find('.upload-error').removeClass('upload-error');\n                $message.find('.preloader-path-new').css({ 'stroke-dasharray': '0, 149.825'});\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    this.startGalleryUploadFile(message, $message);\n                else\n                    this.startUploadFile(message, $message);\n            });\n        }\n    },\n\n    sendChatState: function (state, type) {\n        if (this.model.get('saved') || this.contact && this.contact.get('status') === 'offline')\n            return;\n        clearTimeout(this._chatstate_timeout);\n        clearTimeout(this._chatstate_send_timeout);\n        this.chat_state = false;\n        let stanza = $msg({to: this.model.get('jid'), type: 'chat'}).c(state, {xmlns: Strophe.NS.CHATSTATES});\n        if (this.model.get('encrypted')) {\n            if (this.account.settings.get('encrypted_chatstates'))\n                type = 'encrypted';\n            else\n                return;\n        }\n        type && stanza.c('subtype', {xmlns: Strophe.NS.EXTENDED_CHATSTATES, type: type});\n        (state === 'composing') && (this.chat_state = true);\n        this.account.sendMsg(stanza);\n        if (state === 'composing') {\n            this._chatstate_timeout = setTimeout(() => {\n                this.chat_state = false;\n            }, constants.CHATSTATE_TIMEOUT_PAUSED);\n            this._chatstate_send_timeout = setTimeout(() => {\n                (!this.chat_state && xabber.settings.typing_notifications) && this.sendChatState('paused');\n            }, constants.CHATSTATE_TIMEOUT_PAUSED*2);\n        }\n    },\n\n    onChangedMessageTimestamp: function (message) {\n        let $message = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`),\n            $next_msg = $message.next(),\n            $old_prev_msg = $message.prev();\n        $message.attr({\n            'data-time': message.get('timestamp')\n        });\n        $message.detach();\n        $message.children('.right-side').find('.msg-time').attr({title: pretty_datetime(message.get('time'))}).text(utils.pretty_time(message.get('time')));\n        message.get('user_info') && $message.attr('data-from-id', message.get('user_info').id);\n        this.model.messages.sort();\n        let index = this.model.messages.indexOf(message);\n        if (index === 0) {\n            if ($old_prev_msg.hasClass('chat-day-indicator'))\n                $old_prev_msg.after($message);\n            else\n                $message.prependTo(this.$('.chat-content'));\n        } else {\n            let $prev_msg = this.$('.chat-message').eq(index - 1),\n                is_same_sender = ($message.data('from') === $prev_msg.data('from')),\n                is_same_date = moment($message.data('time')).startOf('day')\n                    .isSame(moment($prev_msg.data('time')).startOf('day'));\n            if (($old_prev_msg.data('from') !== $message.data('from')) && ($next_msg.data('from') === $message.data('from')) && (($next_msg.children('.right-side').find('.msg-delivering-state').attr('data-state') === 'delivered') || ($next_msg.children('.right-side').find('.msg-delivering-state').attr('data-state') === 'displayed')))\n                this.showMessageAuthor($next_msg);\n            if ($prev_msg.next().hasClass('chat-day-indicator') && (moment($prev_msg.next().data('time')).format('DD.MM.YY') === moment(message.get('timestamp')).format('DD.MM.YY'))) {\n                $message.insertAfter($prev_msg.next());\n                this.showMessageAuthor($message);\n            }\n            else\n                $message.insertAfter($prev_msg);\n            if (message.get('data_form') || message.get('forwarded_message') || !is_same_date || !is_same_sender || $prev_msg.hasClass('system') || $prev_msg.hasClass('saved-main'))\n                this.showMessageAuthor($message);\n            else\n                this.hideMessageAuthor($message);\n        }\n        let last_message = this.model.last_message;\n        if (!last_message || message.get('timestamp') > last_message.get('timestamp')) {\n            this.model.last_message = message;\n            this.chat_item.updateLastMessage();\n        }\n    },\n\n    onChangedReadState: function (message) {\n        let is_unread = message.get('is_unread'),\n            is_synced = message.get('synced_from_server'),\n            is_unread_archived = message.get('is_unread_archived'),\n            is_missed_msg = message.get('missed_msg'),\n            $msg = this.$(`.chat-message[data-uniqueid=\"${message.get(\"unique_id\")}\"]`);\n        if (is_unread) {\n            if (!is_unread_archived && !is_synced && !is_missed_msg)\n                this.model.messages_unread.add(message);\n            if (!message.get('was_readen')){\n                $msg.addClass('unread-message');\n                $msg.addClass('unread-message-background');\n            }\n            this.model.recountUnread();\n        } else {\n            if ((!is_unread_archived && !is_synced && !is_missed_msg) || this.model.messages_unread.indexOf(message) > -1)\n                this.model.messages_unread.remove(message);\n            message.set('was_readen', true);\n            $msg.removeClass('unread-message');\n            setTimeout(() => {\n                $msg.removeClass('unread-message-background');\n            }, 1000);\n            this.model.recountUnread();\n            if (!message.get('muted')) {\n                xabber.recountAllMessageCounter();\n            }\n            if (message.get('ephemeral_timer')) {\n                message.set('displayed_time', new Date());\n                message.collection.checkEphemeralTimers();\n            }\n        }\n    },\n\n    onTouchMessage: function (ev) {\n        if (ev.which === 3)\n            return;\n        let $elem = $(ev.target), $msg;\n\n        if ($elem.hasClass('chat-message')) {\n            $msg = $elem;\n        } else {\n            $msg = $elem.parents('.chat-message');\n        }\n        if (window.getSelection() != 0) {\n            utils.clearSelection();\n            $msg.attr('data-no-select-on-mouseup', '1');\n        }\n    },\n\n    onClickLink: function (ev) {\n        let $elem = $(ev.target),\n            $message = $elem.closest('.chat-message'),\n            msg = this.model.messages.get($message.data('uniqueid'));\n        if (!msg) {\n            msg = this.account.participant_messages.get($message.data('uniqueid'));\n        }\n        let files = msg.get('files'),\n            videos = msg.get('videos'),\n            images = msg.get('images'),\n            link_references = msg.get('link_references'),\n            fwd_messages = [],\n            fwd_link_references = [],\n            files_links = '';\n        if (msg.get('forwarded_message')) {\n            msg.get('forwarded_message').forEach((message) => {\n                message.get('images') && fwd_messages.push(message.get('images'));\n                message.get('videos') && fwd_messages.push(message.get('videos'));\n                message.get('link_references') && fwd_link_references.push(message.get('link_references'));\n            });\n        }\n        $(files).each(function(idx, file) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += file.sources[0];\n        });\n        $(images).each(function(idx, image) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += image.sources[0];\n        });\n        $(videos).each(function(idx, image) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += image.sources[0];\n        });\n        $(link_references).each(function(idx, link_reference) {\n            if (files_links != \"\")\n                files_links += '\\n';\n            files_links += link_reference.url;\n        });\n        $(fwd_messages).each(function (idx, message) {\n            $(message).each(function (i, file) {\n                if (files_links != \"\")\n                    files_links += '\\n';\n                files_links += file.sources[0];\n            });\n        });\n        $(fwd_link_references).each(function (idx, message) {\n            $(message).each(function (i, link_reference) {\n                if (files_links != \"\")\n                    files_links += '\\n';\n                files_links += link_reference.url;\n            });\n        });\n        utils.copyTextToClipboard(files_links, xabber.getString(\"toast_link_copied\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n    },\n\n\n    onClickLocationLink: function (ev) {\n        ev.preventDefault()\n        let $elem = $(ev.target),\n            $message = $elem.closest('.chat-message'),\n            msg = this.model.messages.get($message.data('uniqueid'));\n        if (!msg) {\n            msg = this.account.participant_messages.get($message.data('uniqueid'));\n        }\n        let locations = msg.get('locations'),\n            fwd_messages = [],\n            location_links = '';\n        if (msg.get('forwarded_message')) {\n            msg.get('forwarded_message').forEach((message) => {\n                message.get('locations') && fwd_messages.push(message.get('locations'));\n            });\n        }\n        $(locations).each(function(idx, location) {\n            location_links += 'geo:' + location.lat + ',' + location.lon;\n        });\n        $(fwd_messages).each(function (idx, message) {\n            $(message).each(function (i, object) {\n                if (location_links != \"\")\n                    location_links += '\\n';\n                location_links += 'geo:' + object.lat + ',' + object.lon;\n            });\n        });\n\n        utils.copyTextToClipboard(location_links, xabber.getString(\"toast_location_copied\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n    },\n\n    showParticipantProperties: function (participant_id, options) {\n        options = options || {};\n        let participant = this.contact.participants.get(participant_id);\n        if (!participant) {\n            this.contact.getBlockedParticipants((response) => {\n                _.extend(options, {present: null, subscription: null});\n                if ($(response).find(`query user:contains(${participant_id})`).length)\n                    options.blocked = true;\n                else\n                    options.blocked = false;\n                participant = new xabber.Participant(options, {contact: this.contact});\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(participant, {});\n            }, (err) => {\n                _.extend(options, {present: null, subscription: null});\n                participant = new xabber.Participant(options, {contact: this.contact});\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(participant, {});\n            });\n            return;\n        }\n        (this.contact.my_info && this.contact.my_info.get('id') === participant_id) && (participant_id = '');\n        this.contact.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.contact.showDetailsRight('all-chats', {type: 'participant'});\n            this.contact.details_view_right.participants.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    onClickMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('not-decrypted-icon') || $elem.closest('.dropdown-content').length || $elem.closest('.not-decrypted-icon').length)\n            return;\n        if ($elem.hasClass('file-link-download')) {\n            ev.preventDefault();\n            let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')) || this.account.context_messages.get($elem.closest('.chat-message').data('uniqueid')),\n                uri = $elem.attr('href'),\n                file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n            if (file && file.key) {\n                this.model.messages.decryptFile(uri,file.key).then((result) => {\n                    if (result === null)\n                        return;\n                    let download = document.createElement(\"a\");\n                    download.href = result;\n                    download.download = file.name;\n                    download.click();\n                });\n                return;\n            } else\n                xabber.openWindow($elem.attr('href'));\n        }\n        if ($elem.hasClass('msg-delivering-state') ||  $elem.hasClass('not-decrypted-tooltip') || $elem.hasClass('audio-control-panel') || $elem.hasClass('voice-msg-current-time') || $elem.hasClass('voice-msg-total-time')) {\n            return;\n        }\n        if ($elem.closest(\".plyr-video-container\").length > 0) {\n            let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                $plyr = $elem.closest(\".plyr-video-container\");\n            !msg && (msg = this.account.context_messages.get($elem.closest('.chat-message').data('uniqueid')));\n            if (msg && msg.get('msg_player_videos')){\n                if (!xabber.plyr_player_popup){\n                    xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                    xabber.plyr_player_popup.show({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n                } else\n                    xabber.plyr_player_popup.showNewVideo({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n            }\n            return;\n        }\n        if (!$elem.hasClass('mdi-link-variant') && !$elem.hasClass('msg-copy-location-content') && !$elem.hasClass('btn-retry-send-message') && !$elem.hasClass('btn-delete-message') && !$elem.hasClass('file-link-download') && !$elem.is('canvas') && !$elem.hasClass('voice-message-volume')) {\n            let $msg = $elem.closest('.chat-message'), msg,\n                $fwd_message = $elem.parents('.fwd-message').first(),\n                is_forwarded = $fwd_message.length > 0,\n                no_select_message = $msg.attr('data-no-select-on-mouseup');\n            $msg.attr('data-no-select-on-mouseup', '');\n\n            if ($elem.hasClass('data-form-field')) {\n                msg = this.model.messages.get($msg.data('uniqueid'));\n                if (msg)\n                    this.model.sendDataForm(msg, $elem.attr('id'));\n                return;\n            }\n\n            if (window.getSelection() != 0) {\n                return;\n            }\n\n            if ($elem.hasClass('collapsed-forwarded-message')) {\n                let msg = this.buildMessageHtml(this.account.forwarded_messages.get($elem.data('uniqueid'))),\n                    expanded_fwd_message = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this});\n                expanded_fwd_message.$el.attr('data-color', this.account.settings.get('color'));\n                this.updateMessageInChat(msg, this.account.forwarded_messages.get($elem.data('uniqueid')));\n                this.initPopup(msg);\n                expanded_fwd_message.open(msg);\n                return;\n            }\n\n            if ($elem.hasClass('chat-msg-author') || $elem.hasClass('fwd-msg-author')) {\n                let from_jid = is_forwarded ? $fwd_message.data('from') : $msg.data('from'),\n                    from_id = is_forwarded ? $fwd_message.data('fromId') : $msg.data('fromId');\n                if (this.contact && this.contact.get('group_chat')) {\n                    this.bottom.quill.focus();\n                    let caret_position = this.bottom.quill.getSelection(),\n                        participant_attrs = {jid: from_jid, id: from_id, nickname: $elem.text()};\n                    caret_position && (caret_position = caret_position.index);\n                    participant_attrs.position = caret_position || 0;\n                    this.bottom.insertMention(participant_attrs);\n                }\n                else if (from_jid === this.account.get('jid')) {\n                    this.account.showSettings();\n                } else if (from_jid === this.model.get('jid')) {\n                    this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                } else {\n                    if (from_jid == from_id)\n                        return;\n                    let contact = this.account.contacts.mergeContact(from_jid);\n                    contact && contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                }\n                return;\n            }\n\n            if ($elem.hasClass('circle-avatar')) {\n                let from_jid = is_forwarded ? $fwd_message.data('from') : $msg.data('from');\n                if (this.model.get('group_chat')) {\n                    let member_id = (is_forwarded) ? $fwd_message.attr('data-from-id') : $msg.attr('data-from-id'),\n                        unique_id = (is_forwarded) ? $fwd_message.attr('data-uniqueid') : $msg.attr('data-uniqueid'),\n                        msg = this.model.messages.get(unique_id) || this.account.context_messages.get(unique_id) || this.account.searched_messages.get(unique_id),\n                        user_info = msg && msg.get('user_info');\n                    member_id && this.showParticipantProperties(member_id, user_info);\n                    return;\n                }\n                else if (from_jid === this.account.get('jid')) {\n                    this.account.showSettings();\n                } else if (from_jid === this.model.get('jid')) {\n                    this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                } else {\n                    let contact = this.account.contacts.mergeContact(from_jid);\n                    contact && contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                }\n                return;\n            }\n\n            if ($elem.hasClass('mention')) {\n                let member_id = $elem.data('target');\n                if (this.contact.get('group_chat')) {\n                    if (member_id && !this.contact.participants.get(member_id)) {\n                        let participant = this.contact.participants.find(p => p.get('jid') === member_id);\n                        participant && (member_id = participant.get('id'));\n                    }\n                    member_id && this.showParticipantProperties(member_id);\n                }\n                else {\n                    if (member_id === this.account.get('jid'))\n                        this.account.showSettings();\n                    else if (member_id === this.model.get('jid')) {\n                        this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                    } else {\n                        let contact = this.account.contacts.mergeContact(member_id);\n                        contact && contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                    }\n                }\n                return;\n            }\n\n            if ($elem.hasClass('voice-message-play') || $elem.hasClass('no-uploaded')) {\n                let $audio_elem = $elem.closest('.link-file'),\n                    f_url = $audio_elem.find('.file-link-download').attr('href');\n                $audio_elem.find('.mdi-play').removeClass('no-uploaded');\n                if ($elem.closest('.chat-message').hasClass('encrypted')) {\n                    let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                        uri = $elem.closest('.link-file').find('.file-link-download').attr('href'),\n                        file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n                    if (file && file.key) {\n                        this.model.messages.decryptFile(f_url, file.key).then((result) => {\n                            if (result === null)\n                                return;\n                            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.file-container')[0], result);\n                        });\n                    }\n                } else {\n                    $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.file-container')[0], f_url);\n                }\n                return;\n            }\n\n            if ($elem.hasClass('mdi-play') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n                let $audio_elem = $elem.closest('.link-file');\n                $audio_elem[0].voice_message.play();\n                return;\n            }\n\n            if ($elem.hasClass('mdi-pause') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n                let $audio_elem = $elem.closest('.link-file');\n                $audio_elem[0].voice_message.pause();\n                return;\n            }\n\n            if ($elem.hasClass('msg-hyperlink')) {\n                ev && ev.preventDefault();\n                $elem.blur();\n                let link = $elem.attr('href');\n                utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                    if (result)\n                        utils.openWindow(link);\n                });\n                return;\n            }\n\n            if ($elem.closest(\".msg-hyperlink\").length > 0) {\n                ev && ev.preventDefault();\n                $elem.blur();\n                let link = $elem.closest(\".msg-hyperlink\").attr('href');\n                utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                    if (result)\n                        utils.openWindow(link);\n                });\n                return;\n            }\n\n            if ($elem.hasClass('uploaded-img')||$elem.hasClass('img-content')||($elem.hasClass('uploaded-img-for-collage'))) {\n                $elem.hasClass('img-content') && $elem.children('img').click();\n                return;\n            }\n\n            if ($elem.hasClass('unloaded-img')) {\n                let img_information = this.getImagesInformation(this.model.messages.get($elem.closest('.chat-message').data('uniqueid')));\n                utils.dialogs.ask(xabber.getString(\"privacy_risk\"), xabber.getString(\"privacy_risk_text\"), {inverted_buttons: true, img_details: $(templates.messages.images_details({img_information: img_information}))}, { ok_button_text: xabber.getString(\"privacy_risk_btn_ok\")}).done((result) => {\n                    if (result) {\n                        $elem.attr('src',$elem.attr('data-mfp-src'));\n                        $elem.removeClass('unloaded-img');\n                        $elem.addClass('uploaded-img');\n                        this.initPopup($elem.closest('.chat-message'));\n                        $elem.closest('.chat-message').find('.img-privacy-warning').remove()\n                    }\n                });\n                return;\n            }\n\n            if ($elem.hasClass('img-content-template') && $elem.find('img').hasClass('unloaded-img')) {\n                let img_information = this.getImagesInformation(this.model.messages.get($elem.closest('.chat-message').data('uniqueid')));\n                utils.dialogs.ask(xabber.getString(\"privacy_risk\"), xabber.getString(\"privacy_risk_text\"), {inverted_buttons: true, img_details: $(templates.messages.images_details({img_information: img_information}))}, { ok_button_text: xabber.getString(\"privacy_risk_btn_ok\")}).done((result) => {\n                    if (result) {\n                        let $msg = $elem.closest('.chat-message'),\n                            $imgs = $msg.find('.img-content-template img');\n                        $imgs.each((idx, img) => {\n                            $(img).attr('src',$(img).attr('data-mfp-src'));\n                        });\n                        $imgs.removeClass('unloaded-img');\n                        $imgs.addClass('uploaded-img-for-collage');\n                        this.initPopup($msg);\n                        $elem.closest('.chat-message').find('.img-privacy-warning').remove()\n                    }\n                });\n                return;\n            }\n\n            if ($elem.hasClass('chat-msg-location-content') || $elem.hasClass('location-link') || $elem.closest(\".video-file-wrap\").length > 0 || $elem.closest(\".embed-video\").length > 0) {\n                return;\n            }\n\n            if ($elem.hasClass('last-image')) {\n                $elem.find('img').length && $elem.find('img')[0].click();\n                return;\n            }\n\n            if ($elem.hasClass('image-counter')) {\n                $elem.closest('.last-image').find('img')[0].click();\n                return;\n            }\n\n            if ($msg.hasClass('searched-message')) {\n                this.model.getMessageContext($msg.data('uniqueid'), {searched_messages: true});\n                return;\n            }\n\n            let processClick = () => {\n                let $prev_selected = $msg.hasClass('selected') ? $msg.prevAll('.chat-message.selected').last() : $msg.prevAll('.chat-message.selected').first();\n                !$prev_selected.length && ($prev_selected = $msg.hasClass('selected') ? $msg.nextAll('.chat-message.selected').last() : $msg.nextAll('.chat-message.selected').first());\n                !$prev_selected.length && ($prev_selected = $msg.hasClass('selected') ? $msg.prevAll('.chat-message.selected').first() : $msg.prevAll('.chat-message.selected').last());\n                if ((xabber.shiftctrl_pressed || xabber.shift_pressed) && $prev_selected.length) {\n                    let $all_msgs = [], is_selected = $msg.hasClass('selected');\n                    if ($prev_selected.attr('data-time') < $msg.attr('data-time'))\n                        $all_msgs = $prev_selected.nextUntil($msg, '.chat-message:not(.system)');\n                    else\n                        $all_msgs = $msg.nextUntil($prev_selected, '.chat-message:not(.system)');\n                    xabber.shift_pressed && this.$('.chat-message').removeClass('selected');\n                    $prev_selected.switchClass('selected', !is_selected);\n                    $all_msgs.switchClass('selected', !is_selected);\n                    $msg.switchClass('selected', !is_selected);\n                    ev.preventDefault();\n                    this.bottom.manageSelectedMessages();\n                    return false;\n                }\n                if (!no_select_message) {\n                    $msg.switchClass('selected', !$msg.hasClass('selected'));\n                    ev.preventDefault();\n                    this.bottom.manageSelectedMessages();\n                    return false;\n                }\n            };\n\n            if ($msg.hasClass('participant-message') || $msg.hasClass('context-message')) {\n                if ($msg.hasClass('system'))\n                    return;\n                processClick();\n                return;\n            }\n\n            msg = this.model.messages.get($msg.data('uniqueid'));\n            if (!msg) {\n                return;\n            }\n\n            let type = msg.get('type');\n            if (type === 'file_upload') {\n                return;\n            }\n\n            if (type === 'system') {\n                return;\n            } else if (is_forwarded) {\n                let fwd_message = this.account.forwarded_messages.get($fwd_message.data('uniqueid'));\n                if (!fwd_message) {\n                    return;\n                }\n                processClick();\n            } else {\n                processClick();\n            }\n        }\n    },\n\n    onClickLocation: function (ev) {\n        ev.preventDefault();\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat'),\n            location_name = $(ev.target).attr('title');\n        if (lon && lat){\n            xabber.popup_coordinates = [lon, lat];\n            xabber.location_name = location_name;\n            new xabber.ChatLocationView({content: this}).show(ev);\n        }\n    },\n\n    onHoverLocation: function (ev) {\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat');\n\n        fetch('https://nominatim.openstreetmap.org/reverse?format=json&lon=' + lon + '&lat=' + lat).then(function(response) {\n            return response.json();\n        }).then(function(json) {\n            if (!json.error) {\n                $(ev.target).attr('title', json.display_name);\n            }\n            else {\n                $(ev.target).attr('title', xabber.getString(\"location_fragment__address_error__title\"));\n            }\n            $(ev.target).removeClass('no-title')\n        })\n    },\n\n    retrySendMessage: function (ev) {\n        let $msg = $(ev.target).closest('.chat-message'),\n            msg = this.model.messages.get($msg.data('uniqueid'));\n        if (msg.get('type') === 'file_upload') {\n            msg.set('state', constants.MSG_PENDING);\n            this.startUploadFile(msg, $msg);\n        }\n        else\n            this.sendMessage(msg);\n        ev.preventDefault();\n    },\n\n    removeFileErrorMessage: function (ev) {\n        let $msg = $(ev.target).closest('.chat-message');\n        this.removeMessage($msg);\n        ev.preventDefault();\n        this.chat_item.updateChatError();\n    },\n\n    onUpdatePlyr: function (ev) {\n        this.$('.plyr-video-container').removeClass('active-plyr-container');\n        if (xabber.current_plyr_player && xabber.current_plyr_player.player_item) {\n            let $message = this.$(`.chat-message[data-uniqueid=\"${xabber.current_plyr_player.message_unique_id}\"]`);\n            if ($message.length) {\n                $message.find(`.plyr-video-container[data-message-id=\"${xabber.current_plyr_player.player_item.message_id}\"]`).addClass('active-plyr-container');\n            }\n        }\n    },\n});\n\n\nxabber.ChatContentPlaceholderView = xabber.BasicView.extend({\n    className: 'chat-body-content-placeholder-wrap',\n    template: templates.chat_content_placeholder,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        return this;\n    },\n\n    render: function () {\n    },\n});\n\nxabber.ExpandedMessagePanel = xabber.BasicView.extend({\n    className: 'modal expanded-message',\n    template: templates.group_chats.pinned_message_panel,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .collapsed-forwarded-message\": \"expandFwdMessage\",\n        \"click .chat-message\": \"onClickPinnedMessage\",\n        'click .chat-msg-location-content': 'onClickExpandedMessageLocation',\n        'click .mdi-link-variant' : 'onClickLink',\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.chat_content = options.chat_content;\n        this.message = options.message;\n    },\n\n    open: function ($message) {\n        this.$el.css('width', $message.find('.chat-text-content').text().length <= 60 ? 540 : xabber.main_panel.$el.width() * 0.715);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.modal-content').css('height', this.$el.height() - 12);\n                if ($message.find('.plyr-video-container').length) {\n                    this.chat_content.initPlyrEmbedPlayer($message, this.message);\n                }\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n        $message.find('.right-side .msg-delivering-state').remove();\n        this.$('.modal-content').html($message);\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    onClickLink:function (ev) {\n        this.chat_content.onClickLink(ev);\n    },\n\n    onClickPinnedMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('msg-hyperlink')) {\n            ev && ev.preventDefault();\n            let link = $elem.attr('href');\n            utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                if (result)\n                    utils.openWindow(link);\n            });\n            return;\n        }\n        if ($elem.closest(\".plyr-video-container\").length > 0) {\n            let msg = this.chat_content.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                $plyr = $elem.closest(\".plyr-video-container\");\n            !msg && (msg = this.account.forwarded_messages.get($elem.closest('.chat-message').data('uniqueid')));\n            if (msg && msg.get('msg_player_videos')){\n                if (!xabber.plyr_player_popup){\n                    xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                    xabber.plyr_player_popup.show({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n                } else\n                    xabber.plyr_player_popup.showNewVideo({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n            }\n            return;\n        }\n        if ($elem.hasClass('voice-message-play') || $elem.hasClass('no-uploaded')) {\n            let $audio_elem = $elem.closest('.link-file'),\n                f_url = $audio_elem.find('.file-link-download').attr('href');\n            $audio_elem.find('.mdi-play').removeClass('no-uploaded');\n            if ($elem.closest('.chat-message').hasClass('encrypted')) {\n                let msg = this.chat_content.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                    uri = $elem.closest('.link-file').find('.file-link-download').attr('href'),\n                    file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n                if (file && file.key) {\n                    this.chat_content.model.messages.decryptFile(f_url, file.key).then((result) => {\n                        if (result === null)\n                            return;\n                        $audio_elem[0].voice_message = this.chat_content.renderVoiceMessage($audio_elem.find('.file-container')[0], result);\n                    });\n                }\n            } else {\n                $audio_elem[0].voice_message = this.chat_content.renderVoiceMessage($audio_elem.find('.file-container')[0], f_url);\n            }\n            return;\n        }\n        if ($elem.hasClass('mdi-play') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n            let $audio_elem = $elem.closest('.link-file');\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n    },\n    onClickExpandedMessageLocation: function (ev) {\n        ev.preventDefault();\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat'),\n            location_name = $(ev.target).attr('title');\n        if (lon && lat){\n            xabber.popup_coordinates = [lon, lat];\n            xabber.location_name = location_name;\n            new xabber.ChatLocationView({content: this}).show(ev);\n        }\n    },\n\n    expandFwdMessage: function (ev) {\n        let $target = $(ev.target),\n            unique_id = $target.data('uniqueid'),\n            msg = this.chat_content.buildMessageHtml(this.account.forwarded_messages.get(unique_id)),\n            expanded_fwd_message = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this.chat_content});\n        expanded_fwd_message.$el.attr('data-color', this.account.settings.get('color'));\n        this.chat_content.updateMessageInChat(msg, this.account.forwarded_messages.get(unique_id));\n        this.chat_content.initPopup(msg);\n        expanded_fwd_message.open(msg);\n    }\n});\n\nxabber.ChatsBase = Backbone.Collection.extend({\n    model: xabber.Chat\n});\n\nxabber.Chats = xabber.ChatsBase.extend({\n    initialize: function (models, options) {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    },\n\n    registerQuillEmbeddedsTags: function () {\n        let Inline = Quill.import('blots/inline'),\n            Image = Quill.import('formats/image');\n\n        class Mention extends Inline {\n            static create(paramValue) {\n                let node = super.create(), data, target;\n                if (paramValue.on_format){\n                    data = paramValue.data;\n                    target = paramValue.target;\n                } else {\n                    data = JSON.parse(paramValue);\n                    target = data.jid ? ('?jid=' + data.jid) : (data.id ?  ('?id=' + data.id) : \"\");\n                    node.innerHTML = data.nickname;\n                }\n                data.is_me && node.classList.add('ground-color-100');\n                node.setAttribute('data-target', target);\n                return node;\n            }\n\n            static value(node) {\n                return node.innerHTML;\n            }\n\n            static formats(node) {\n                return {\n                    on_format: true,\n                    data: {\n                        nickname: node.innerHTML,\n                        is_me: node.classList.contains(\"ground-color-100\")\n                    },\n                    target: node.getAttribute('data-target')\n                };\n            }\n        }\n        Mention.blotName = 'mention';\n        Mention.tagName = 'mention';\n        Mention.prototype.optimize = function () {};\n\n        Quill.register(Mention);\n    }\n});\n\nxabber.OpenedChats = xabber.ChatsBase.extend({\n    comparator: function (item1, item2) {\n        let t1 = item1.get('timestamp'),\n            t2 = item2.get('timestamp');\n        return t1 > t2 ? -1 : (t1 < t2 ? 1 : 0);\n    },\n\n    initialize: function (models, options) {\n        this.on(\"change:timestamp\", this.sort, this);\n    },\n\n    update: function (chat, event) {\n        let contains = chat.get('opened');\n        if (contains) {\n            if (!this.get(chat)) {\n                this.add(chat);\n                chat.trigger(\"add_opened_chat\", chat);\n            }\n        } else if (this.get(chat)) {\n            this.remove(chat);\n            chat.trigger(\"remove_opened_chat\", chat);\n        }\n    }\n});\n\nxabber.ClosedChats = xabber.ChatsBase.extend({\n    update: function (chat, event) {\n        let contains = !chat.get('opened');\n        if (contains) {\n            if (!this.get(chat)) {\n                this.add(chat);\n                chat.trigger(\"add_closed_chat\", chat);\n            }\n        } else if (this.get(chat)) {\n            this.remove(chat);\n            chat.trigger(\"remove_closed_chat\", chat);\n        }\n    }\n});\n\nxabber.AccountChats = xabber.ChatsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.mam_requests = 0;\n        this.deferred_mam_requests = [];\n        this.account.contacts.on(\"open_chat\", this.openChat, this);\n        this.account.contacts.on(\"open_mention\", this.openMention, this);\n        this.account.contacts.on(\"presence\", this.onPresence, this);\n        this.account.contacts.on(\"roster_push\", this.onRosterPush, this);\n    },\n\n    getSavedChat: function () {\n        if (!this.account.server_features.get(Strophe.NS.XABBER_FAVORITES))\n            return;\n        let jid = this.account.server_features.get(Strophe.NS.XABBER_FAVORITES).get('from'),\n            attrs = {jid: jid, type: 'saved', name: xabber.getString(\"saved_messages__header\"), id: `${jid}:saved`},\n            chat = this.get(attrs.id);\n        if (!chat) {\n            chat = xabber.chats.create(attrs, {account: this.account});\n            this.add(chat);\n            chat.trigger(\"load_last_history\");\n        }\n        return chat;\n    },\n\n    getChat: function (contact, identifier, sync_created) {\n        let attrs = null,\n            id = identifier && `${contact.hash_id}:${identifier}`,\n            chat = id ? this.get(id) : this.get(contact.hash_id);\n        if (id)\n            attrs = {id};\n        if (identifier === 'encrypted')\n            attrs.type = identifier;\n        if (!chat) {\n            chat = xabber.chats.create(attrs, {contact: contact, sync_created: sync_created});\n            this.add(chat);\n            contact.set('known', true);\n        }\n        return chat;\n    },\n\n    openChat: function (contact, options) {\n        options = options || {};\n        _.isUndefined(options.clear_search) && (options.clear_search = true);\n        let chat = this.getChat(contact, options.encrypted && 'encrypted');\n        if (options && options.force_opened_state){\n            chat.set('opened', true);\n            chat.set('timestamp', Date.now());\n        }\n        chat.trigger('open', {clear_search: options.clear_search, right_force_close: options.right_force_close});\n    },\n\n    openMention: function (contact, unique_id) {\n        let chat = this.getChat(contact);\n        xabber.body.setScreen('mentions', {right: 'mentions', chat_item: chat.item_view});\n        unique_id && chat.getMessageContext(unique_id, {mention: true});\n    },\n\n    registerMessageHandler: function () {\n        this.account.connection.deleteHandler(this._msg_handler);\n        this._msg_handler = this.account.connection.addHandler((message) => {\n            this.receiveMessage(message);\n            return true;\n        }, null, 'message');\n    },\n\n    onStartedMAMRequest : function (deferred) {\n        this.deferred_mam_requests.push(deferred);\n        this.runMAMRequests();\n    },\n\n    onCompletedMAMRequest: function (deferred) {\n        this.mam_requests--;\n        this.runMAMRequests();\n    },\n\n    runMAMRequests: function () {\n        while (this.mam_requests < xabber.settings.mam_requests_limit) {\n            let deferred = this.deferred_mam_requests.shift();\n            if (!deferred) break;\n            this.mam_requests++;\n            deferred.resolve();\n        }\n    },\n\n    parsePubSubNode: function (node) {\n        if (!node)\n            return null;\n        let is_member_id = node.indexOf('#');\n        if (is_member_id !== -1)\n            return node.slice(is_member_id + 1, node.length);\n        else\n            return null;\n    },\n\n    receivePubsubMessage: function ($message) {\n        let photo_id =  $message.find('info').attr('id'),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            node = $message.find('items').attr('node');\n        if (node.indexOf(Strophe.NS.OMEMO) > -1)\n            return;\n        if (node.indexOf(Strophe.NS.PUBSUB_AVATAR_METADATA) > -1) {\n            let member_id = this.parsePubSubNode(node),\n                photo_url =  $message.find('info').attr('url'),\n                contact = this.account.contacts.get(from_jid);\n            if (contact) {\n                if (member_id) {\n                    if (contact.my_info) {\n                        if ((member_id == contact.my_info.get('id')) && (photo_id == contact.my_info.get('avatar'))) {\n                            contact.trigger('update_my_info');\n                            return;\n                        }\n                    }\n                    if (photo_id && (this.account.chat_settings.getHashAvatar(member_id) != photo_id)) {\n                        let member_node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + member_id;\n                        contact.getAvatar(photo_id, member_node, (new_avatar) => {\n                                this.account.chat_settings.updateCachedAvatars(member_id, photo_id, new_avatar);\n                                if (contact.my_info) {\n                                    if (member_id == contact.my_info.id) {\n                                        contact.my_info.set({avatar: photo_id, b64_avatar: new_avatar});\n                                        contact.trigger('update_my_info');\n                                    }\n                                }\n                                let participant = contact.participants && contact.participants.get(member_id);\n                                if (participant) {\n                                    let avatar_url = $message.find('info').attr('url');\n                                    participant.set({avatar: photo_id, b64_avatar: new_avatar});\n                                    avatar_url && participant.set('avatar_url', avatar_url);\n                                    this.account.groupchat_settings.updateParticipant(contact.get('jid'), participant.attributes);\n                                }\n                            }, () => {\n                                if (photo_url) {\n                                    this.account.chat_settings.updateCachedAvatars(member_id, photo_id, photo_url);\n                                    if (contact.my_info) {\n                                        if (member_id == contact.my_info.id) {\n                                            contact.my_info.set({avatar: photo_id, b64_avatar: photo_url});\n                                            contact.trigger('update_my_info');\n                                        }\n                                    }\n                                    let participant = contact.participants && contact.participants.get(member_id);\n                                    if (participant) {\n                                        participant.set({avatar: photo_id, b64_avatar: photo_url});\n                                        this.account.groupchat_settings.updateParticipant(contact.get('jid'), participant.attributes);\n                                    }\n                                    return;\n                                }\n                            });\n                    }\n                }\n                else if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.PUBSUB_AVATAR) {\n                    if (!photo_id) {\n                        let image = Images.getDefaultAvatar(contact.get('name'));\n                        contact.cached_image = Images.getCachedImage(image);\n                        contact.set('avatar_priority', constants.AVATAR_PRIORITIES.PUBSUB_AVATAR);\n                        contact.set('photo_hash', null);\n                        contact.set('image', image);\n                        contact.updateCachedInfo();\n                        return;\n                    }\n                    if ((photo_id !== \"\") && (contact.get('photo_hash') === photo_id)) {\n                        return;\n                    } else if (photo_url) {\n                        contact.cached_image = photo_url;\n                        contact.set({photo_hash: photo_id, image: photo_url, avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR});\n                    }\n                    contact.getAvatar(photo_id, Strophe.NS.PUBSUB_AVATAR_DATA, (data_avatar) => {\n                        contact.cached_image = Images.getCachedImage(data_avatar);\n                        contact.set('avatar_priority', constants.AVATAR_PRIORITIES.PUBSUB_AVATAR);\n                        contact.set('photo_hash', photo_id);\n                        contact.set('image', data_avatar);\n                        contact.updateCachedInfo();\n                    });\n                }\n            }\n            else if (from_jid === this.account.get('jid')) {\n                if (photo_url) {\n                    let avatar_attrs = {photo_hash: photo_id, image: photo_url, avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR};\n                    this.account.cached_image = photo_url;\n                    this.account.save(avatar_attrs);\n                    return;\n                }\n                if (!photo_id) {\n                    let image = Images.getDefaultAvatar(this.account.get('name'));\n                    this.account.cached_image = Images.getCachedImage(image);\n                    let avatar_attrs = {avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR, image: image};\n                    this.account.save(avatar_attrs);\n                    return;\n                }\n                this.account.getAvatar(photo_id, (data_avatar) => {\n                    this.account.cached_image = Images.getCachedImage(data_avatar);\n                    let avatar_attrs = {avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR, image: data_avatar};\n                    this.account.save(avatar_attrs);\n                });\n            }\n        }\n    },\n\n    receiveMessage: function (message) {\n        let $message = $(message),\n            type = $message.attr('type'),\n            $mam = $message.find(`result[xmlns=\"${Strophe.NS.MAM}\"]`);\n        if (this.account.connection.do_synchronization && Strophe.getBareJidFromJid($(message).attr('from')) !== this.account.get('jid')) {\n            let time = $message.children('time').attr('stamp') || $message.children('delay').attr('stamp'),\n                timestamp = Number(moment(time));\n            (timestamp > this.account.last_msg_timestamp) && (this.account.last_msg_timestamp = timestamp);\n        }\n        if (type === 'headline') {\n            return this.receiveHeadlineMessage(message);\n        }\n        if (type === 'chat' || (type === 'normal') || (!type && !$mam.length)) {\n            return this.receiveChatMessage(message);\n        }\n        if (type === 'error') {\n            return this.receiveErrorMessage(message);\n        }\n    },\n\n    receiveHeadlineMessage: function (message) {\n        let $message = $(message),\n            msg_from = Strophe.getBareJidFromJid($message.attr('from')),\n            $stanza_received = $message.find(`received[xmlns=\"${Strophe.NS.DELIVERY}\"]`),\n            $echo_msg = $message.children(`x[xmlns=\"${Strophe.NS.DELIVERY}\"]`).children('message');\n        if ($stanza_received.length) {\n            let stanza_id = $stanza_received.children('stanza-id').attr('id'),\n                origin_msg_id = $stanza_received.children('origin-id').first().attr('id');\n            if (origin_msg_id) {\n                let msg = this.account.messages.get(origin_msg_id || stanza_id),\n                    delivered_time = $stanza_received.children('time').attr('stamp') || moment(stanza_id/1000).format();\n                if (!msg)\n                    return;\n                let pending_message = this.account._pending_messages.find(msg => msg.unique_id == (origin_msg_id || stanza_id));\n                if (!pending_message)\n                    return;\n                let chat = this.account.chats.get(pending_message.chat_hash_id);\n                if (chat && chat.get('group_chat'))\n                    return;\n                if (!msg.get('stanza_id') && msg.get('locations'))\n                    msg.set({'stanza_id': stanza_id})\n                let msg_state = chat.get('saved') ? constants.MSG_DISPLAYED : constants.MSG_SENT;\n                msg.set({'state': msg_state, 'time': delivered_time, 'timestamp': Number(moment(delivered_time))}); // delivery receipt, changing on server time\n                chat.setStanzaId(pending_message.unique_id, stanza_id);\n                this.account._pending_messages.splice(this.account._pending_messages.indexOf(pending_message), 1);\n            }\n            return;\n        }\n\n        if ($echo_msg.length) {\n            console.log(this.account._pending_messages);\n            console.log(this.account._pending_messages.length);\n            let origin_msg_id = $echo_msg.children('origin-id').first().attr('id'),\n                pending_message = this.account._pending_messages.find(msg => msg.unique_id == origin_msg_id);\n            if (pending_message) {\n                this.account._pending_messages.splice(this.account._pending_messages.indexOf(pending_message), 1);\n            }\n            console.log(this.account._pending_messages.length);\n            return this.receiveChatMessage($echo_msg[0], {echo_msg: true, stanza_id: $echo_msg.children('stanza-id').attr('id')});\n        }\n\n        let $token_revoke = $message.children(`revoke[xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`);\n        if ($token_revoke.length) {\n            $token_revoke.children('device').each((idx, token) => {\n                let $token = $(token),\n                    token_uid = $token.attr('id');\n                if (!token_uid)\n                    return;\n                if (this.account.get('x_token') && this.account.get('x_token').token_uid === token_uid) {\n                    this.account.deleteAccount();\n                    return;\n                }\n                if (this.account.x_tokens_list) {\n                    let token = this.account.x_tokens_list.find(token => token.token_uid == token_uid),\n                        token_idx = token ? this.account.x_tokens_list.indexOf(token) : -1;\n                    (token_idx > -1) && this.account.x_tokens_list.splice(token_idx, 1);\n                }\n            });\n            this.account.settings_right && this.account.settings_right.updateXTokens();\n            return;\n        }\n\n        if ($message.find(`event[xmlns=\"${Strophe.NS.PUBSUB}#event\"]`).length) {\n            this.receivePubsubMessage($message);\n            return;\n        }\n\n        let contact = this.account.contacts.get(msg_from), chat;\n        if (contact) {\n            contact && (chat = this.account.chats.getChat(contact));\n            if (!chat.item_view.content)\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        }\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            if (!contact)\n                return;\n            let participant_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n            if (participant_version && contact.participants && contact.participants.version < participant_version)\n                contact.trigger('update_participants');\n        }\n\n        if ($message.children(`attention[xmlns=\"${Strophe.NS.ATTENTION}\"]`).length && xabber.settings.call_attention) {\n            if (!chat)\n                return;\n            return chat.messages.createSystemMessage({from_jid: msg_from, message: xabber.getString(\"action_attention_requested\"), attention: true});\n        }\n\n        if ($message.find(`replace[xmlns=\"${Strophe.NS.REWRITE}#notify\"]`).length) {\n            !contact && (contact = this.account.contacts.get($message.find('replace').attr('conversation'))) && (chat = this.account.chats.getChat(contact));\n            if (this.account.server_features.get(Strophe.NS.XABBER_FAVORITES) && $message.find('replace').attr('conversation') === this.account.server_features.get(Strophe.NS.XABBER_FAVORITES).get('from'))\n                chat = this.getSavedChat();\n            if (!chat)\n                return;\n            let stanza_id = $message.find('replace').attr('id'),\n                msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id),\n                active_right_screen = xabber.body.screen.get('right'),\n                participant_messages = active_right_screen === 'participant_messages' && this.account.participant_messages || active_right_screen === 'message_context' && this.account.context_messages || active_right_screen === 'searched_messages' && this.account.searched_messages || [],\n                participant_msg_item = participant_messages.find(msg => msg.get('stanza_id') == stanza_id);\n            this.receiveChatMessage($message, {replaced: true});\n            if (participant_msg_item) {\n                participant_msg_item.set('last_replace_time', $message.find('replaced').last().attr('stamp'));\n            }\n            if (msg_item) {\n                msg_item.set('last_replace_time', $message.find('replaced').last().attr('stamp'));\n                if (contact && contact.get('pinned_message'))\n                    if (contact.get('pinned_message').get('unique_id') === msg_item.get('unique_id')) {\n                        contact.get('pinned_message').set('message', msg_item.get('message'));\n                        if (!chat.item_view.content)\n                            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                        chat.item_view.content.updatePinnedMessage();\n                    }\n                chat && chat.item_view.updateLastMessage(chat.last_message);\n            }\n        }\n\n        if ($message.find(`invalidate[xmlns=\"${Strophe.NS.REWRITE}#notify\"]`).length) {\n            !contact && (contact = this.account.contacts.get($message.find('invalidate').attr('conversation'))) && (chat = this.account.chats.getChat(contact));\n            if (this.account.server_features.get(Strophe.NS.XABBER_FAVORITES) && $message.find('invalidate').attr('conversation') === this.account.server_features.get(Strophe.NS.XABBER_FAVORITES).get('from'))\n                chat = this.getSavedChat();\n            if (!chat)\n                return;\n            let retraction_version = $message.find('invalidate').attr('version');\n            chat.retraction_version = retraction_version;\n            if (chat.item_view && !chat.item_view.content)\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n            let all_messages = chat.messages.models;\n            $(all_messages).each((idx, msg) => {\n                chat.item_view.content.removeMessage(msg);\n            });\n            chat.set('first_archive_id', undefined);\n            chat.set('history_loaded', false);\n            chat.item_view.updateEmptyChat();\n            let timeout = 0;\n            let loadPreviousAfterInvalidate = setInterval(() => {\n                timeout++;\n                if (!chat.item_view.content._loading_history){\n                    clearInterval(loadPreviousAfterInvalidate);\n                    chat.item_view.content.loadPreviousHistory(true);\n                } else if (timeout > 30) {\n                    clearInterval(loadPreviousAfterInvalidate);\n                }\n            }, 1000)\n            if (!chat.item_view.content._loading_history){\n                clearInterval(loadPreviousAfterInvalidate);\n                chat.item_view.content.loadPreviousHistory(true);\n            }\n        }\n        if ($message.find('retract-message').length) {\n            let is_encrypted = $message.find('retract-message').attr('type') == Strophe.NS.OMEMO;\n            !contact && (contact = this.account.contacts.get($message.find('retract-message').attr('conversation'))) && (chat = this.account.chats.getChat(contact,  is_encrypted && 'encrypted'));\n            if (this.account.server_features.get(Strophe.NS.XABBER_FAVORITES) && $message.find('retract-message').attr('conversation') === this.account.server_features.get(Strophe.NS.XABBER_FAVORITES).get('from'))\n                chat = this.getSavedChat();\n            if (!chat)\n                return;\n            let $retracted_msg = $message.find('retract-message'),\n                retracted_msg_id = $retracted_msg.attr('id'),\n                retract_version = $retracted_msg.attr('version'),\n                msg_item = chat.messages.find(msg => msg.get('stanza_id') == retracted_msg_id || msg.get('contact_stanza_id') == retracted_msg_id);\n            chat.retracted_msg_id_list.push(retracted_msg_id);\n            if (msg_item) {\n                msg_item.set('is_unread', false);\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.removeMessage(msg_item);\n                chat.item_view.updateLastMessage(chat.last_message);\n            }\n            if (!chat.get('group_chat') && retract_version > this.account.retraction_version) {\n                this.account.retraction_version = retract_version;\n            }\n        }\n        if ($message.find('retract-user').length) {\n            let $retracted_user_msgs = $message.find('retract-user'),\n                retracted_user_id = $retracted_user_msgs.attr('id'),\n                msg_item = chat.messages.filter(msg => msg.get('user_info') && (msg.get('user_info').id == retracted_user_id));\n            if (msg_item)\n                $(msg_item).each((idx, item) => {\n                    item.set('is_unread', false);\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.removeMessage(item);\n                });\n            chat.item_view.updateLastMessage(chat.last_message);\n        }\n        if ($message.find('retract-all').length) {\n            !contact && (contact = this.account.contacts.get($message.find('retract-all').attr('conversation'))) && (chat = this.getChat(contact, $message.find('retract-all').attr('type') == 'encrypted' && 'encrypted'));\n            if (!chat)\n                return;\n            let all_messages = chat.messages.models;\n            $(all_messages).each((idx, item) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.removeMessage(item);\n            });\n            chat.item_view.updateLastMessage();\n        }\n        return;\n    },\n\n    receiveStanzaId: function ($message, options) {\n        options.replaced && ($message = $message.children('replace').children('message'));\n        let $stanza_id, $contact_stanza_id, attrs = {},\n            from_bare_jid = options.from_bare_jid;\n            $message.children('stanza-id').each((idx, stanza_id) => {\n            stanza_id = $(stanza_id);\n            if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length && !($message.find(`invite[xmlns=\"${Strophe.NS.GROUP_CHAT_INVITE_HTTP}\"]`).length || $message.find(`invite[xmlns=\"${Strophe.NS.GROUP_CHAT_INVITE}\"]`).length)) {\n                if (stanza_id.attr('by') === from_bare_jid) {\n                    $stanza_id = stanza_id;\n                    $contact_stanza_id = stanza_id;\n                }\n                else\n                    $stanza_id = stanza_id;\n            }\n            else {\n                if (stanza_id.attr('by') === this.account.get('jid'))\n                    $stanza_id = stanza_id;\n                else\n                    $contact_stanza_id = stanza_id;\n            }\n        });\n        $stanza_id && (attrs.stanza_id = $stanza_id.attr('id'));\n        $contact_stanza_id && (attrs.contact_stanza_id = $contact_stanza_id.attr('id'));\n        return attrs;\n    },\n\n    receiveChatMessage: function (message, options) {\n        options = options || {};\n        let $message = $(message),\n            $forwarded = $message.find('forwarded'),\n            $delay = options.delay,\n            to_jid = $message.attr('to'),\n            to_bare_jid = Strophe.getBareJidFromJid(to_jid),\n            to_resource = to_jid && Strophe.getResourceFromJid(to_jid),\n            from_jid = $message.attr('from') || options.from_jid;\n\n        if ($message.children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length && !options.forwarded) {\n            if (this.account.omemo)\n                this.account.omemo.receiveChatMessage(message, options);\n            return;\n        }\n\n        if ($message.find('invite').length) {\n            if (options.forwarded)\n                return;\n        }\n\n        if (!from_jid) {\n            from_jid = this.account.get('jid');\n        }\n        let from_bare_jid = Strophe.getBareJidFromJid(from_jid),\n            is_sender = from_bare_jid === this.account.get('jid');\n\n        if (options.forwarded && (!$forwarded.length || (options.xml))) {\n            return this.account.forwarded_messages.createFromStanza($message, {\n                is_forwarded: true,\n                forwarded_message: options.forwarded_message || null,\n                delay: $delay,\n                replaced: options.replaced,\n                from_jid: from_jid,\n                xml: options.xml\n            });\n        }\n\n        if ($forwarded.length && !options.xml) {\n            let $mam = $message.find(`result[xmlns=\"${Strophe.NS.MAM}\"]`);\n            if ($mam.length) {\n                if (!Object.keys(options).length)\n                    return;\n                $forwarded = $mam.children('forwarded');\n                if ($forwarded.length) {\n                    $message = $forwarded.children('message');\n                    $delay = $forwarded.children('delay');\n                }\n                let stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid});\n                return this.receiveChatMessage($message[0], _.extend(options, {\n                    is_mam: true,\n                    delay: $delay,\n                    stanza_id: stanza_ids.stanza_id || $mam.attr('id'),\n                    contact_stanza_id: stanza_ids.contact_stanza_id\n                }));\n            }\n            let $carbons = $message.find(`[xmlns=\"${Strophe.NS.CARBONS}\"]`);\n            if (!options.carbon_copied && $carbons.length && ['received', 'sent'].includes($carbons[0].tagName)) {\n                if ($message.find('invite').length) {\n                    if ($carbons[0].tagName === 'sent')\n                        return;\n                }\n                if (!is_sender)\n                    return;\n                $forwarded = $carbons.children('forwarded');\n                if ($forwarded.length)\n                    $message = $forwarded.children('message');\n                if ($carbons.find(`request[xmlns=\"${Strophe.NS.DELIVERY}\"][to=\"${to_bare_jid}\"]`).length)\n                    return;\n                if (this.account.fast_connection && ($message.attr('from') === this.account.fast_connection.jid))\n                    return;\n                return this.receiveChatMessage($message[0], _.extend(options, {\n                    carbon_copied: true, carbon_direction: $carbons[0].tagName\n                }));\n            }\n            let forwarded_msgs = [];\n            $forwarded = $message.children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n                $message.children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).children('forwarded[xmlns=\"' + Strophe.NS.FORWARD + '\"]') :\n                $message.children('envelope').children('content').children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).children('forwarded[xmlns=\"' + Strophe.NS.FORWARD + '\"]');\n            $forwarded.each((idx, forwarded_msg) => {\n                let $forwarded_msg = $(forwarded_msg),\n                    $forwarded_message = $forwarded_msg.children('message'),\n                    $forwarded_delay = $forwarded_msg.children('delay');\n                let forwarded_message = this.receiveChatMessage($forwarded_message[0], {\n                    forwarded: true,\n                    pinned_message: options.pinned_message,\n                    participant_message: options.participant_message,\n                    searched_message: options.searched_message,\n                    is_searched: options.is_searched,\n                    context_message: options.context_message,\n                    from_jid: from_jid,\n                    delay: $forwarded_delay\n                });\n                forwarded_msgs.push(forwarded_message);\n            });\n            if (!Object.keys(options).length && !forwarded_msgs.length)\n                return;\n            return this.receiveChatMessage($message[0], _.extend({\n                forwarded_message: forwarded_msgs.length ? forwarded_msgs : null,\n                xml: $message[0]\n            }, options));\n        }\n\n        if (!options.is_mam && to_resource && to_resource !== this.account.resource) {\n            xabber.warn('Message to another resource');\n            xabber.warn(message);\n        }\n\n        let contact_jid = is_sender ? to_bare_jid : from_bare_jid;\n        options.replaced && (contact_jid = $message.children('replace').attr('conversation'));\n\n        if (contact_jid === this.account.get('jid')) {\n            xabber.warn('Message from me to me');\n            xabber.warn(message);\n            return;\n        }\n\n        if (this.account.server_features.get(Strophe.NS.XABBER_FAVORITES) && this.account.server_features.get(Strophe.NS.XABBER_FAVORITES).get('from') && contact_jid === this.account.server_features.get(Strophe.NS.XABBER_FAVORITES).get('from')) {\n            if (options.carbon_copied && options.carbon_direction === 'sent' || !options.carbon_copied) {\n                let chat = this.getSavedChat(),\n                    stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid, carbon_copied: options.carbon_copied, replaced: options.replaced});\n                return chat.receiveMessage($message, _.extend(options, {is_sender: is_sender, stanza_id: stanza_ids.stanza_id, contact_stanza_id: stanza_ids.contact_stanza_id}));\n            }\n        }\n\n        let contact = this.account.contacts.mergeContact(contact_jid),\n            chat = this.account.chats.getChat(contact, (options.encrypted || options.not_encrypted) && 'encrypted'),\n            stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid, carbon_copied: options.carbon_copied, replaced: options.replaced});\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            if (!contact)\n                return;\n            let participant_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n            if (participant_version && contact.participants && contact.participants.version < participant_version){\n                if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length && chat.contact.get('pinned_message')){\n                    $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '#system-message\"]').each((idx, x_elem) => {\n                        let $user = $(x_elem).children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).first();\n                        if ($user.length) {\n                            let user_id = $user.attr('id'),\n                                user_jid = $user.children('jid').text();\n                            if (chat.contact.get('pinned_message').get('from_jid') === user_jid) {\n                                let pinned_message = chat.contact.get('pinned_message'),\n                                    user_info = {\n                                        id: user_id,\n                                        jid: user_jid,\n                                        nickname: $user.children('nickname').text() || user_jid || user_id,\n                                        role: $user.children('role').text(),\n                                        avatar: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('id'),\n                                        avatar_url: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('url'),\n                                        badge: $user.children('badge').text()\n                                    };\n                                pinned_message.set('user_info', user_info);\n                                chat.contact.set('pinned_message', pinned_message);\n                            }\n                        }\n                    });\n                }\n            }\n        }\n        if (chat.contact.get('group_chat') && options.carbon_direction === 'sent' && !$message.children(`[xmlns=\"${Strophe.NS.CHAT_MARKERS}\"]`).length)\n            return;\n\n\n        if (chat && chat.get('encrypted') && options.encrypted && !options.synced_msg && !options.is_archived){\n            if ($message.find('[xmlns=\"' + Strophe.NS.EPHEMERAL + '\"]').length){\n                chat.set('chat_ephemeral_timer', $message.find('[xmlns=\"' + Strophe.NS.EPHEMERAL + '\"]').attr('timer'));\n            } else {\n                chat.set('chat_ephemeral_timer', null);\n            }\n        }\n\n        return chat.receiveMessage($message, _.extend(options, {is_sender: is_sender, stanza_id: stanza_ids.stanza_id, contact_stanza_id: stanza_ids.contact_stanza_id}));\n    },\n\n    receiveErrorMessage: function (message) {\n        let msgid = message.getAttribute('id'),\n            origin_id = $(message).children('origin-id').attr('id');\n        if (msgid) {\n            let code = $(message).find('error').attr('code'),\n                msg = this.account.messages.get(origin_id || msgid);\n            if (msg) {\n                if (code === '405') {\n                    msg.set('state', constants.MSG_BLOCKED);\n                }\n                if (code === '406') {\n                    msg.set('state', constants.MSG_ERROR);\n                }\n            }\n        }\n    },\n\n    onPresence: function (contact, type) {\n        let chat = this.getChat(contact);\n        chat.onPresence(type);\n    },\n\n    onRosterPush: function (contact, type) {\n        let chat = this.getChat(contact);\n        chat.onRosterPush(type);\n    }\n});\n\nxabber.AddGroupChatView = xabber.SearchView.extend({\n    className: 'modal main-modal add-group-chat-modal add-contact-modal',\n    template: templates.group_chats.add_group_chat,\n    avatar_size: constants.AVATAR_SIZES.ACCOUNT_ITEM,\n    ps_selector: '.rich-textarea',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .dropdown-content#select-account-for-creating-groupchat\": \"selectAccount\",\n        \"click .btn-add\": \"addGroupChat\",\n        \"keyup .input-group-chat-name input\": \"updateGroupJid\",\n        \"keyup .rich-textarea\": \"showPlaceholder\",\n        \"keyup .input-group-chat-jid input\": \"fixJid\",\n        \"click .btn-cancel\": \"close\",\n        \"click .property-variant\": \"changePropertyValue\"\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        this.setDefaultSettings(options);\n        let accounts = options.account ? [options.account] : xabber.accounts.connected;\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.dropdown-content#select-account-for-creating-groupchat').empty();\n        _.each(accounts, (account) => {\n            this.$('.dropdown-content#select-account-for-creating-groupchat').append(\n                    this.renderAccountItem(account));\n        });\n        this.$('.account-dropdown-wrap').hideIf(accounts.length < 2)\n        this.bindAccount(accounts[0]);\n        this.$('.btn-cancel').text(this.is_login ? xabber.getString(\"skip\") : xabber.getString(\"cancel\"));\n        this.$el.openModal({\n            ready: () => {\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                };\n                Materialize.updateTextFields();\n                this.$('.account-dropdown-wrap').dropdown(dropdown_settings);\n                this.$('.property-field .dropdown-button').dropdown(dropdown_settings);\n                this.$('.property-field .select-xmpp-server .caret').dropdown(dropdown_settings);\n                this.$('.property-field .select-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n                this.$('input[name=\"chat_name\"]').focus();\n            },\n            complete: this.close.bind(this)\n        });\n\n    },\n\n    setDefaultSettings: function (options) {\n        this.$('.incognito-field .public-item-wrap').showIf(options.public);\n        this.$('.incognito-field .incognito-item-wrap').showIf(options.incognito);\n        if (options.public)\n            this.$('.modal-header span').text(xabber.getString(\"create_group\"));\n        if (options.incognito)\n            this.$('.modal-header span').text(xabber.getString(\"create_incognito_group\"));\n        this.$('input[name=chat_jid]').removeClass('fixed-jid').val(\"\");\n        this.$('#new_chat_domain').val(\"\");\n        this.$('input[name=chat_name]').val(\"\");\n        this.$('.description-field .rich-textarea').text(\"\");\n        this.$('.btn-add').addClass('non-active');\n        this.showPlaceholder();\n        this.$('span.errors').text('').addClass('hidden');\n        this.$('input').removeClass('invalid');\n        let $global_wrap = this.$('.global-dropdown-wrap'),\n            default_global_value = $global_wrap.find('.dropdown-content .default-value');\n        $global_wrap.find('.global-item-wrap .property-value').attr('data-value', default_global_value.attr('data-value')).text(default_global_value.text());\n        let $membership_wrap = this.$('.membership-dropdown-wrap'),\n            default_membership_value = $membership_wrap.find('.dropdown-content .default-value');\n        $membership_wrap.find('.membership-item-wrap .property-value').attr('data-value', default_membership_value.attr('data-value')).text(default_membership_value.text());\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.input-group-chat-domain').addClass('hidden');\n        this.$('.account-dropdown-wrap .dropdown-button .account-item-wrap')\n                .replaceWith(this.renderAccountItem(account));\n        let all_servers = this.account.get('groupchat_servers_list');\n        all_servers = all_servers.sort((x,y) => { return x == this.account.domain ? -1 : y == this.account.domain ? 1 : 0; })\n        if (all_servers.length){\n            this.$('.xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n            this.$('.select-xmpp-server .caret').removeClass('hidden')\n            this.$('.xmpp-server-item-wrap .property-value').removeClass('hidden')\n        }\n        else\n            this.setCustomDomain(this.$('.property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.modal-content .jid-field .set-default-domain').remove();\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'}).text(all_servers[i]).insertBefore(this.$('.modal-content .jid-field .set-custom-domain'));\n        }\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.add_chat_account_item({jid: account.get('jid'), name: account.get('name')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    setCustomDomain: function ($property_value) {\n        this.$('#new_chat_domain').val(\"\");\n        this.$('.select-xmpp-server .caret').addClass('hidden');\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.input-group-chat-domain').removeClass('hidden');\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomain($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.input-group-chat-domain').addClass('hidden');\n            this.$('#new_chat_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-xmpp-server .caret').removeClass('hidden')\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateGroupJid: function () {\n        let elem = this.$('input[name=chat_jid]');\n        if (!elem.hasClass('fixed-jid')) {\n            let text = slug(this.$('.input-group-chat-name input').get(0).value, {lower: true});\n            this.$(\"label[for=new_chat_jid]\").addClass('active');\n            this.$('.input-field #new_chat_jid').get(0).value = text;\n        }\n        this.$('.btn-add').switchClass('non-active', !this.$('.input-group-chat-name input').get(0).value);\n    },\n\n    showPlaceholder: function () {\n        let textarea_is_empty = (this.$('.rich-textarea ').text() !== \"\") ? false : true;\n        this.$('.rich-textarea-wrap .placeholder').hideIf(!textarea_is_empty);\n    },\n\n    fixJid: function () {\n        let elem = this.$('input[name=chat_jid]');\n        !elem.hasClass('fixed-jid') && elem.addClass('fixed-jid');\n        (elem.get(0).value == \"\") && elem.removeClass('fixed-jid');\n    },\n\n    createGroupChat: function () {\n        let name = this.$('input[name=chat_name]').val(),\n            chat_jid = this.$('input[name=chat_jid]').val() ? this.$('input[name=chat_jid]').val() : undefined,\n            privacy = this.$('.incognito-field .property-wrap:not(.hidden) .property-value').attr('data-value'),\n            domain = this.$('#new_chat_domain').val() || this.$('.xmpp-server-dropdown-wrap .property-value').text(),\n            searchable = this.$('input[name=\"group_index\"]:checked').attr('data-value'),\n            description = this.$('.description-field .rich-textarea').text() || \"\",\n            model = this.$('input[name=\"group_membership\"]:checked').attr('data-value'),\n            iq = $iq({type: 'set', to: domain}).c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#create'})\n                .c('name').t(name).up()\n                .c('privacy').t(privacy).up()\n                .c('index').t(searchable).up()\n                .c('description').t(description).up()\n                .c('membership').t(model).up();\n            if (chat_jid)\n                iq.c('localpart').t(chat_jid);\n        this.account.sendIQFast(iq, (iq) => {\n            let group_jid = $(iq).find('query localpart').text().trim() + '@' + $(iq).attr('from').trim(),\n                contact = this.account.contacts.mergeContact(group_jid);\n            contact.set('group_chat', true);\n            contact.set('subscription_preapproved', true);\n            contact.pres('subscribed');\n            contact.set('known', true);\n            contact.set('removed', false);\n            setTimeout(() => {\n                contact.pres('subscribe');\n            }, 500);\n            this.close();\n            xabber.chats_view.updateScreenAllChats();\n            contact.trigger(\"open_chat\", contact);\n            if (!(this.account.connection && this.account.connection.do_synchronization)) {\n                let iq_set_blocking = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n                    .c('item', {jid: group_jid + '/' + moment.now()});\n                this.account.sendIQFast(iq_set_blocking);\n            }\n\n        }, () => {\n            this.$('span.errors').removeClass('hidden').text(xabber.getString(\"groupchat_jid_already_exists\"));\n            this.$('input[name=\"chat_jid\"]').addClass('invalid');\n        });\n    },\n\n    addGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            $(ev.target).blur();\n            return;\n        }\n        let xmpp_server = this.$('#new_chat_domain').val() || this.$('.xmpp-server-dropdown-wrap .property-value').text(),\n            input_value = this.$('input[name=chat_jid]').val();\n        if (this.$('input[name=chat_name]').val() == \"\") {\n            this.$('span.errors').text(xabber.getString(\"group_is_empty\")).removeClass('hidden');\n            this.$('input[name=\"chat_name\"]').addClass('invalid');\n        } else {\n            if ((input_value == \"\")||((input_value.search(/[А-яЁё]/) == -1)&&(input_value.search(/\\s/) == -1)&&(input_value != \"\"))) {\n                this.$('span.errors').text('').addClass('hidden');\n                this.$('input').removeClass('invalid');\n                let iq = $iq({type: 'get', to: xmpp_server}).c('query', {xmlns: Strophe.NS.DISCO_INFO}),\n                    group_chats_support;\n                this.account.sendIQFast(iq, (iq) => {\n                    $(iq).children('query').children('feature').each((elem, item) => {\n                        if ($(item).attr('var') == Strophe.NS.GROUP_CHAT)\n                            group_chats_support = true;\n                    });\n                    if (group_chats_support)\n                        this.createGroupChat();\n                    else {\n                        this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_server_does_not_support\")}`);\n                        this.$('input[name=\"chat_domain\"]').addClass('invalid');\n                    }\n                }, (response) => {\n                    this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_invalid_domain\")}`); // !!!!!!!!!!!!!!!!!! :::::\n                    this.$('input[name=\"chat_domain\"]').addClass('invalid');\n                });\n            }\n            else {\n                this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_localpart_invalid\")}`);\n                this.$('input[name=\"chat_jid\"]').addClass('invalid');\n            }\n        }\n    }\n});\n\nxabber.ChatsView = xabber.SearchPanelView.extend({\n    className: 'recent-chats-container container',\n    ps_selector: '.chat-list-wrap',\n    ps_settings: {theme: 'item-list'},\n    main_container: '.chat-list',\n    template: templates.chats_panel,\n\n    _initialize: function () {\n        this.active_chat = null;\n        this.model.on(\"add\", this.onChatAdded, this);\n        this.model.on(\"destroy\", this.onChatRemoved, this);\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"add_opened_chat\", this.onChangedActiveStatus, this);\n        this.model.on(\"change:unread\", this.onChangedReadStatus, this);\n        this.model.on(\"change:const_unread\", this.onChangedReadStatus, this);\n        this.model.on(\"change:timestamp\", this.updateChatPosition, this);\n        xabber.accounts.on(\"list_changed\", this.updateLeftIndicator, this);\n        xabber.accounts.on(\"omemo_changed\", this.updateAccountEncryptedChats, this);\n        let wheel_ev = this.defineMouseWheelEvent();\n        this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.$('.read-all-button').click(this.readAllMessages.bind(this));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        xabber.on(\"update_layout\", this.onWindowResized, this);\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    render: function (options) {\n        if (options.right === undefined)\n            this.active_chat = null;\n        this.$('.chat-list-wrap').switchClass('with-padding', xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').length);\n        if (options.right !== 'chat' && !options.no_unread && options.right !== 'searched_messages' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search) {\n            this.clearSearch();\n            if (xabber.toolbar_view.$('.active').hasClass('all-chats') && !xabber.toolbar_view.data.get('account_filtering')) {\n                this.showAllChats();\n            }\n        }\n    },\n\n    readAllMessages: function () {\n        let chats = this.model,\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (active_toolbar.hasClass('chats')) {\n            let private_chats = chats.filter(chat => chat.get('saved') || !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            private_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        if (active_toolbar.hasClass('all-chats')) {\n            let all_chats = chats.filter(chat => chat.get('saved') || chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            all_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        if (active_toolbar.hasClass('group-chats')) {\n            let group_chats = chats.filter(chat => chat.get('saved') || chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            group_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    onUpdatedScreen: function (name) {\n        this.$('.read-all-button').switchClass('hidden', !xabber.toolbar_view.$('.toolbar-item:not(.account-item):not(.toolbar-logo).active.unread').length);\n    },\n\n    // onWindowResized: function (options) {\n    //     options.size_changed && this.onScroll();\n    // },\n\n    defineMouseWheelEvent: function () {\n        if (!_.isUndefined(window.onwheel)) {\n            return \"wheel\";\n        } else if (!_.isUndefined(window.onmousewheel)) {\n            return \"mousewheel\";\n        } else {\n            return \"MozMousePixelScroll\";\n        }\n    },\n\n    onMouseWheel: function (ev) {\n        // if (ev.originalEvent.deltaY > 0)\n        //     this.onScroll();\n    },\n\n    hideChatsFeedback: function () {\n        clearTimeout(this._load_chats_timeout);\n        this.$('.load-chats-feedback').addClass('hidden');\n        this.updateScrollBar();\n        this._load_chats_timeout = null;\n    },\n\n    // onScroll: function () {\n    //     if (this.getScrollBottom() < 12 && !this._load_chats_timeout && this.isVisible()) {\n    //         this._load_chats_timeout = setTimeout(() => {\n    //             this.hideChatsFeedback();\n    //         }, 5000);\n    //         let accounts = xabber.accounts.connected.filter(account => !account.roster.conversations_loaded && account.connection && account.connection.do_synchronization);\n    //         if (accounts.length) {\n    //             this.$('.load-chats-feedback').text(xabber.getString(\"placeholder_loading\")).removeClass('hidden');\n    //             this.updateScrollBar();\n    //         }\n    //         accounts.forEach((account) => {\n    //             let options = {max: xabber.settings.mam_messages_limit};\n    //             account.roster.last_chat_msg_id && (options.after = account.roster.last_chat_msg_id);\n    //             account.roster.syncFromServer(options);\n    //         });\n    //     }\n    // },\n\n    updateLeftIndicator: function (accounts) {\n        this.$el.attr('data-indicator', accounts.connected.length > 1);\n    },\n\n    onChatAdded: function (chat) {\n        this.addChild(chat.id, chat.item_view);\n        this.updateChatPosition(chat);\n    },\n\n    onChatRemoved: function (chat, options) {\n        if (this.active_chat === this.child(chat.id)) {\n            this.active_chat = null;\n            xabber.body.showChatPlaceholder();\n        }\n        this.removeChild(chat.id, options);\n        this.updateScrollBar();\n    },\n\n    onChangedActiveStatus: function (chat) {\n        if (chat.get('active')) {\n            let previous_chat = this.active_chat;\n            this.active_chat = this.child(chat.id);\n            previous_chat && previous_chat.model.set('active', false);\n        }\n    },\n\n    onChangedReadStatus: function (item) {\n        let view = this.child(item.id),\n            active_toolbar = xabber.toolbar_view.$('.active');\n        this.updateChatPosition(item);\n        if (!view)\n            return;\n        if (!active_toolbar.hasClass('unread') || (active_toolbar.hasClass('unread') && (item.get('unread') || item.get('const_unread'))))\n            return;\n    },\n\n    updateAccountEncryptedChats: function (account) {\n        let enc_chats = account.chats.filter(chat => chat.get('encrypted'))\n        enc_chats.forEach((item) => {\n            let view = this.child(item.id);\n            if (view){\n                view.$el.switchClass('hidden', !account.get('omemo_enabled'));\n                if (account.get('omemo_enabled'))\n                    account.omemo.checkContactFingerprints(item.contact);\n            }\n        });\n    },\n\n    replaceChatItem: function (item, chats, pinned_chats) {\n        let view = this.child(item.id);\n        if (item.get('encrypted') && item.account && !item.account.omemo)\n            view.$el.addClass('hidden');\n        else if (item.get('encrypted') && item.account && item.account.omemo)\n            view.$el.removeClass('hidden');\n        if (view && item.get('pinned') && item.get('pinned') !== '0' && pinned_chats ){\n            pinned_chats = pinned_chats.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            let index = pinned_chats.indexOf(item);\n            if (index === 0) {\n                this.$('.pinned-chat-list').prepend(view.$el);\n            } else {\n                let $chat_item = this.$('.pinned-chat-list .chat-item').eq(index - 1);\n                while (!$chat_item.length && index > 0) {\n                    index--;\n                    $chat_item = this.$('.pinned-chat-list .chat-item').eq(index - 1);\n                }\n                $chat_item.after(view.$el);\n            }\n        }\n        else if (view) {\n            view.$el.detach();\n            let index = chats.indexOf(item);\n            if (index === 0) {\n                this.$('.chat-list').prepend(view.$el);\n            } else {\n                this.$('.chat-list .chat-item').eq(index - 1).after(view.$el);\n            }\n        }\n    },\n\n    updateChatPosition: function (item) {\n        let view = this.child(item.id),\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (!view)\n            return;\n        if (active_toolbar.hasClass('unread') && !(item.get('unread') || item.get('const_unread')))\n            return;\n        if (active_toolbar.hasClass('account-item') && view.account.get('jid') !== active_toolbar.attr('data-jid')){\n            return;\n        }\n        active_toolbar.hasClass('group-chats') && (view.model.get('saved') || view.contact.get('group_chat')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || chat.contact.get('group_chat') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || chat.contact.get('group_chat') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        active_toolbar.hasClass('chats') && (view.model.get('saved') || !view.contact.get('group_chat')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || !chat.contact.get('group_chat') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || !chat.contact.get('group_chat') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        (active_toolbar.hasClass('all-chats') || active_toolbar.hasClass('settings-modal') || (xabber.accounts.enabled.length === 1 && active_toolbar.hasClass('saved-chats'))) && (view.model.get('saved') || !view.model.get('archived')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        active_toolbar.hasClass('archive-chats') && (view.model.get('saved') || view.model.get('archived')) && this.replaceChatItem(item, this.model.filter(chat => chat.get('saved') || chat.get('archived')));\n        active_toolbar.hasClass('saved-chats') && (xabber.accounts.enabled.length !== 1) && (view.model.get('saved') && this.replaceChatItem(item, this.model.filter(chat => chat.get('saved'))));\n        active_toolbar.hasClass('mentions') && (view.model.get('saved') && this.replaceChatItem(item, this.model.filter(chat => (chat.get('jid') === chat.account.domain))));\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = this.child(selection.data('id'));\n                view && view.open();\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.getChat(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')));\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            view = this.child(selection.data('id'));\n            view && view.open();\n        }\n    },\n\n    openChat: function (view, options) {\n        if (!view.content)\n            view.content = new xabber.ChatContentView({chat_item: view});\n        options = options || {};\n        this.$('.list-item.active').removeClass('active');\n        view.updateActiveStatus();\n        let scrolled_top = xabber.chats_view.getScrollTop();\n        options.clear_search && this.clearSearch();\n        if (view.contact && !view.contact.get('in_roster') && (view.model.get('is_accepted') == false || (view.model.get('is_accepted') == true && view.contact.invitation))) {\n            if (view.model.get('is_accepted') == false){\n                view.model.set('display', true);\n                view.model.set('active', true);\n                xabber.body.setScreen('all-chats', {right: 'group_invitation', contact: view.contact });\n            } else if (view.model.get('is_accepted') == true && view.contact.invitation){\n                view.contact.invitation.join();\n            }\n        }\n        else {\n            if (xabber.toolbar_view.$('.active').hasClass('contacts'))\n                this.updateScreenAllChats();\n            if (!view.model.get('history_loaded')) {\n                if (\n                    (view.model.get('const_unread'))\n                    && view.model.get('last_read_msg') &&\n                    (!view.content._prev_scrolltop || (view.content._prev_scrolltop && view.content._is_scrolled_bottom) || (view.model.get('show_new_unread') === true))\n                    && !view.model.get('loading_unread_history') && !options.force_bottom && xabber.body.screen.get('chat_item') !== view\n                ){\n                    view.model.set('show_new_unread', false);\n                    view.model._wait_load_unread_history = new $.Deferred();\n                    setTimeout(() => {\n                        view.model._wait_load_unread_history.resolve();\n                    }, 10000)\n                    view.content._no_scrolling_event = true;\n                    view.content.loadUnreadHistory();\n                } else if (view.model.messages.length < 20)\n                    view.content.loadPreviousHistory();\n            }\n            if (!options.right_force_close && (\n                xabber.body.screen.get('right_contact') && (xabber.body.screen.get('right') === 'chat' || xabber.body.screen.get('right') === 'message_context' )\n            )) {\n                if (view.model.get('saved'))\n                    xabber.body.setScreen((options.screen || 'all-chats'), {right_contact: ''});\n                else if(xabber.right_contact_panel_saveable)\n                    view.contact.showDetailsRight('all-chats', {right_saved: true, encrypted: view.model.get('encrypted')});\n                else\n                    view.contact.showDetailsRight('all-chats', {right_saved: false});\n            }\n            if (!view.model.get('loading_unread_history')){\n                let current_scrolling = view.content.getScrollTop() || view.content._scrolltop,\n                    scrolled_to_bottom = view.content.isScrolledToBottom(),\n                    unread_scroll = (!view.content._prev_scrolltop || (view.content._prev_scrolltop && view.content._is_scrolled_bottom));\n                xabber.body.setScreen((options.screen || 'all-chats'), {\n                    right: 'chat',\n                    clear_search: options.clear_search,\n                    chat_item: view,\n                    blocked: view.model.get('blocked')\n                },{right_contact_save: options.right_contact_save, right_force_close: options.right_force_close} );\n                if (view.model.get('unread') && unread_scroll) {\n                    view.content.scrollToUnread();\n                    view.content._long_reading_timeout = true;\n                    view.content._no_scrolling_event = false;\n                    view.content.onScroll();\n                }\n                (!scrolled_to_bottom || !unread_scroll) && current_scrolling && view.content.scrollTo(current_scrolling);\n            } else {\n                xabber.body.setScreen((options.screen || 'all-chats'), {\n                    right: 'chat',\n                    clear_search: options.clear_search,\n                    chat_item: view,\n                    show_placeholder: true,\n                    blocked: view.model.get('blocked')\n                },{right_contact_save: options.right_contact_save, right_force_close: options.right_force_close} );\n                view.model.set('active', true);\n                view.model._wait_load_unread_history.done(() => {\n                    if (xabber.body.screen.get('chat_item') === view) {\n                        view.model.set('loading_unread_history', false)\n                        xabber.body.setScreen((options.screen || 'all-chats'), {\n                            right: 'chat',\n                            clear_search: options.clear_search,\n                            chat_item: view,\n                            blocked: view.model.get('blocked')\n                        },{right_contact_save: options.right_contact_save, right_force_close: options.right_force_close} );\n                        view.content.scrollToUnread();\n                        view.content._long_reading_timeout = true;\n                        view.content._no_scrolling_event = false;\n                        view.content.onScroll();\n                        if (options.scroll_to_chat) {\n                            xabber.chats_view.scrollToChild(view.$el);\n                        } else {\n                            xabber.chats_view.scrollTo(scrolled_top);\n                        }\n                    }\n                });\n            }\n            if (view.contact && (!view.contact.get('vcard_updated') || (view.contact.get('group_chat') && !view.contact.get('group_info')) || (view.contact.get('vcard_updated') && !moment(view.contact.get('vcard_updated')).startOf('hour').isSame(moment().startOf('hour'))))) {\n                view.contact.getVCard();\n            }\n        }\n        if (options.scroll_to_chat) {\n            xabber.chats_view.scrollToChild(view.$el);\n        } else {\n            xabber.chats_view.scrollTo(scrolled_top);\n        }\n    },\n\n    showGroupChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = xabber.toolbar_view.$('.active.unread').length,\n            group_chats = [],\n            group_chats_pinned = [];\n        if (is_unread) {\n            group_chats = chats.filter(chat => chat.contact && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            group_chats_pinned = chats.filter(chat => chat.contact && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!group_chats.length && !group_chats_pinned.length) {\n            group_chats = chats.filter(chat => !chat.get('saved') && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            group_chats_pinned = chats.filter(chat => !chat.get('saved') && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        group_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (group_chats_pinned) {\n            group_chats_pinned = group_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            group_chats_pinned.forEach((chat) => {\n                let index = group_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = xabber.toolbar_view.$('.active.unread').length,\n            private_chats = [],\n            private_chats_pinned = [];\n        if (is_unread) {\n            private_chats = chats.filter(chat => chat.contact && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            private_chats_pinned = chats.filter(chat => chat.contact && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!private_chats.length && !private_chats_pinned.length) {\n            private_chats = chats.filter(chat => !chat.get('saved') && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            private_chats_pinned = chats.filter(chat => !chat.get('saved') && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        private_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (private_chats_pinned) {\n            private_chats_pinned = private_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            private_chats_pinned.forEach((chat) => {\n                let index = private_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showChatsByAccount: function (account) {\n        xabber.body.setScreen('all-chats');\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            account_chats = chats.filter(chat => ((chat.account.get('jid') === account.get('jid')) && (chat.get('saved') || chat.get('timestamp') && !chat.get('archived'))) && (chat.get('pinned') === '0' || !chat.get('pinned'))),\n            account_chats_pinned = chats.filter(chat => ((chat.account.get('jid') === account.get('jid')) && (chat.get('saved') || chat.get('timestamp') && !chat.get('archived'))) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        this.$(`.omemo-item:not([data-id=\"${account.get('jid')}\"])`).addClass('hidden');\n        account_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (account_chats_pinned) {\n            account_chats_pinned = account_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            account_chats_pinned.forEach((chat) => {\n                let index = account_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showArchiveChats: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            archive_chats = chats.filter(chat => !chat.get('saved') && chat.get('archived'));\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (xabber.toolbar_view.data.get('account_filtering'))\n            archive_chats = archive_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')));\n        archive_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n    },\n\n    showSavedChats: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            saved_chats = chats.filter(chat => chat.get('saved'));\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (xabber.toolbar_view.data.get('account_filtering'))\n            saved_chats = saved_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')));\n        saved_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n            this.$(`.chat-list .chat-item[data-id=\"${chat.id}\"] .chat-title`).text(chat.get('jid'));\n        });\n    },\n\n    showNotifications: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            notificatons_chats = chats.filter(chat => (chat.get('jid') === chat.account.domain || chat.contact && chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both' ));\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (xabber.toolbar_view.data.get('account_filtering'))\n            notificatons_chats = notificatons_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')));\n        notificatons_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n    },\n\n    showAllChats: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = no_unread || xabber.toolbar_view.data.get('account_filtering') ? false : xabber.toolbar_view.$('.active.unread').length,\n            all_chats = [],\n            all_chats_pinned = [];\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (is_unread) {\n            all_chats = chats.filter(chat => chat.contact && chat.get('timestamp') && !chat.get('archived') && chat.last_message && ((chat.get('unread') || chat.get('const_unread')) || (chat.contact.get('invitation') || (chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both'))) && (chat.get('pinned') === '0' || !chat.get('pinned')) );\n            all_chats_pinned = chats.filter(chat => chat.contact && chat.get('timestamp') && !chat.get('archived') && chat.last_message && ((chat.get('unread') || chat.get('const_unread')) || (chat.contact.get('invitation') || (chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both'))) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!all_chats.length && !all_chats_pinned.length) {\n            all_chats = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            all_chats_pinned = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        if (xabber.toolbar_view.data.get('account_filtering')){\n            all_chats = all_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')))\n            all_chats_pinned = all_chats_pinned.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')))\n        }\n        all_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (all_chats_pinned) {\n            all_chats_pinned = all_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            all_chats_pinned.forEach((chat) => {\n                let index = all_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    updateScreenAllChats: function () {\n        xabber.toolbar_view.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active')\n            .filter('.all-chats:not(.toolbar-logo)').addClass('active');\n        this.showAllChats();\n    }\n});\n\n  xabber.MessageItemView = xabber.BasicView.extend({\n      className: 'message-item list-item',\n      template: templates.message_item,\n      avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n      events: {\n          'click': 'openByClick'\n      },\n\n      _initialize: function () {\n          this.contact = this.model.contact;\n          this.account = this.contact ? this.contact.account : this.model.account;\n          this.$el.attr('data-id', this.model.id + '-' + this.cid);\n          this.$el.attr('data-contact-jid', this.contact.get('jid'));\n          this.updateName();\n          this.updateLastMessage();\n          this.updateAvatar();\n          this.updateColorScheme();\n          this.updateGroupChats();\n          this.updateIcon();\n          this.updateStatus();\n          this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n          this.contact.on(\"change:status\", this.updateStatus, this);\n          this.contact.on(\"change:name\", this.updateName, this);\n      },\n\n      updateName: function () {\n          this.$('.chat-title').text(this.contact.get('name'));\n      },\n\n      updateAvatar: function () {\n          let image = this.contact.cached_image;\n          this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n      },\n\n      updateStatus: function () {\n          let status = this.contact.get('status'),\n              status_message = this.contact.getStatusMessage();\n          this.$('.contact-status').attr('data-status', status);\n          this.$('.chat-icon').attr('data-status', status);\n          this.model.get('blocked') ? this.$('.contact-status-message').text(xabber.getString(\"action_contact_blocked\")) : this.$('.contact-status-message').text(status_message);\n      },\n\n      updateGroupChats: function () {\n          let is_group_chat = this.contact.get('group_chat');\n          this.$('.status').hideIf(is_group_chat);\n          this.updateIcon();\n          if (is_group_chat) {\n              this.$el.addClass('group-chat');\n              this.$('.chat-title').css('color', '#424242');\n              this.model.set('group_chat', true);\n          }\n      },\n\n      updateIcon: function () {\n          this.$('.chat-icon').addClass('hidden');\n          let ic_name = this.contact.getIcon();\n          ic_name && this.$('.chat-icon').removeClass('hidden').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n      },\n\n      updateColorScheme: function () {\n          let color = this.account.settings.get('color');\n          this.$el.attr('data-color', color);\n      },\n\n      updateLastMessage: function (msg) {\n          msg || (msg = this.model);\n          if (!msg)\n              return;\n          let msg_time = msg.get('time'),\n              timestamp = msg.get('timestamp'),\n              forwarded_message = msg.get('forwarded_message'),\n              msg_files = msg.get('files') || [],\n              msg_images = msg.get('images') || [],\n              msg_locations = msg.get('locations') || [],\n              msg_text = (forwarded_message) ? (msg.get('message') || xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText(),\n              msg_user_info = msg.get('user_info') || msg.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes || {}, msg_from = \"\";\n          msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n          this.model.set({timestamp: timestamp});\n          if (this.model.get('group_chat'))\n              msg_from = msg_user_info.nickname || msg_user_info.jid || (msg.isSenderMe() ? this.account.get('name') : msg.get('from_jid')) || \"\";\n          if (msg_files.length || msg_images.length || msg_locations.length) {\n              let $colored_span = $('<span class=\"text-color-500\"/>');\n              if (msg_files.length && msg_images.length)\n                  msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n              else {\n                  if (msg_files.length == 1 && (msg_files[0].is_audio || msg_files[0].voice))\n                      msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(msg_files[0].duration));\n                  else if (msg_files.length > 0) {\n                      let total_size = 0;\n                      msg_files.forEach((f) => {total_size+=Number(f.size)});\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                  }\n                  if (msg_images.length > 0) {\n                      let total_size = 0;\n                      msg_images.forEach((f) => {total_size+=Number(f.size)});\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                  }\n                  if (msg_locations.length > 0) {\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                  }\n              }\n              this.$('.last-msg').html(\"\").append(msg_from).append(msg_text);\n          }\n          else {\n              this.$('.last-msg').text(\"\").append(msg_text);\n              if (msg_from)\n                  this.$('.last-msg').prepend($('<span class=text-color-700>' + msg_from + ': ' + '</span>'));\n          }\n          this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n          this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n              .attr('title', pretty_datetime(msg_time));\n          this.$('.msg-delivering-state').showIf(msg.isSenderMe() && (msg.get('state') !== constants.MSG_ARCHIVED))\n              .attr('data-state', msg.getState());\n      },\n\n      openByClick: function () {\n          let chat = this.account.chats.getChat(this.contact);\n          this.$el.closest('.left-panel-list-wrap').find('.list-item').removeClass('active');\n          this.$el.addClass('active');\n          xabber.chats_view.openChat(chat.item_view, {right_contact_save: true, clear_search: false});\n          xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'message_context', model: chat });\n          if (xabber.right_contact_panel_saveable && xabber.body.screen.get('right_contact') && xabber.body.screen.get('right') === 'message_context') {\n              if (xabber.right_contact_panel_saveable)\n                  chat.contact.showDetailsRight('all-chats', {right_saved: true});\n              else\n                  chat.contact.showDetailsRight('all-chats', {right_saved: false});\n          }\n          this.model.get('unique_id') && chat.getMessageContext(this.model.get('unique_id'), {message: true});\n      }\n  });\n\n\n  xabber.ForwardPanelView = xabber.SearchView.extend({\n    className: 'modal dialog-modal forward-panel-modal',\n    template: templates.forward_panel,\n    ps_selector: '.chat-list-wrap',\n    ps_settings: {theme: 'item-list'},\n      events: {\n          \"keyup .search-input\": \"keyUpOnSearch\",\n          \"focusout .search-input\": \"clearSearchSelection\",\n          \"click .close-search-icon\": \"clearSearch\",\n          \"click .list-item\": \"onClickItem\"\n      },\n\n    open: function (messages, account) {\n        this.messages = messages;\n        this.account = account;\n        this.$('.chat-list-wrap .pinned-chat-list').html(\"\");\n        this.$('.chat-list-wrap .chat-list').html(\"\");\n        this.$('.chat-list-wrap .contact-list').html(\"\");\n        this.saved_chat = false;\n        let chats = xabber.chats_view.model,\n            all_chats = [],\n            all_chats_pinned = [];\n        if (!all_chats.length && !all_chats_pinned.length) {\n            all_chats = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            all_chats_pinned = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (all_chats_pinned) {\n            all_chats_pinned = all_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            all_chats_pinned.forEach((chat) => {\n                if (chat.account.get('jid') === this.account.get('jid')) {\n                    if (chat.id == `${this.account.get('jid')}:saved`) {\n                        let $cloned_item = chat.item_view.$el.clone().removeClass('hidden');\n                        $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n                        this.saved_chat = true;\n                        this.$('.chat-list-wrap .pinned-chat-list').prepend($cloned_item);\n                    } else\n                        this.$('.chat-list-wrap .pinned-chat-list').append(chat.item_view.$el.clone().removeClass('hidden'));\n                }\n            });\n        }\n        all_chats.forEach((chat) => {\n            if (chat.account.get('jid') === this.account.get('jid')) {\n                if (chat.id == `${this.account.get('jid')}:saved`) {\n                    let $cloned_item = chat.item_view.$el.clone().removeClass('hidden');\n                    $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n                    this.saved_chat = true;\n                    this.$('.chat-list-wrap .pinned-chat-list').prepend($cloned_item);\n                } else\n                    this.$('.chat-list-wrap .chat-list').append(chat.item_view.$el.clone().removeClass('hidden'));\n            }\n        });\n        if (!this.saved_chat && this.account.server_features.get(Strophe.NS.XABBER_FAVORITES)) {\n            let saved_chat = this.account.chats.getSavedChat(),\n                $cloned_item = saved_chat.item_view.$el.clone();\n            $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n            this.$('.chat-list-wrap .pinned-chat-list').prepend($cloned_item);\n        }\n        this.$('.chat-list-wrap .pinned-chat-list').prepend($('<div/>', { class: 'forward-panel-list-title recent-chats-title hidden'}).text(xabber.getString(\"category_recent_chats\")));\n        this.$('.chat-list-wrap .chat-list').append($('<div/>', { class: 'forward-panel-list-title contacts-title hidden'}).text(xabber.getString(\"category_title_contacts\")));\n        this.$('.chat-item').removeClass('active');\n        this.clearSearch();\n        this.data.set('visible', true);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.search-input').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n            this.$el.detach();\n            this.data.set('visible', false);\n            deferred.resolve();\n        }});\n        return deferred.promise();\n    },\n\n    onClickItem: function (ev) {\n        let $target = $(ev.target).closest('.list-item');\n        this.onEnterPressed($target);\n    },\n\n    search: function (query) {\n        let jid, name, is_match = false, has_matches_chats = false, has_matches_contacts = false;\n        query = query.toLowerCase();\n        this.$('.roster-contact.list-item').remove();\n        query && this.account.roster.forEach((contact) => {\n            let jid = contact.get('jid'),\n                chat_id = contact.hash_id,\n                name = contact.get('name').toLowerCase(),\n                is_match = (name.indexOf(query) < 0 && jid.indexOf(query) < 0) ? true : false;\n            if (!is_match) {\n                if (!this.$('.chat-list-wrap .chat-item[data-id=\"' + chat_id + '\"]').length) {\n                    let contact_list_item = xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${this.account.get('jid')}\"] .roster-contact[data-jid=\"${jid}\"]`).first().clone();\n                    contact_list_item.find('.muted-icon').hide();\n                    this.$('.chat-list-wrap .contact-list').append(contact_list_item);\n                }\n                else\n                    is_match = true;\n            }\n            !is_match && (has_matches_contacts = true);\n        });\n        this.$('.contacts-title').switchClass('hidden', !has_matches_contacts);\n        this.$('.chat-item').each((idx, item) => {\n            let chat = this.account.chats.get($(item).data('id'));\n            if (!chat) {\n                $(item).addClass('hidden');\n                return;\n            }\n            jid = chat.get('jid');\n            name = (chat.contact ? chat.contact.get('name') : chat.get('name'));\n            if (name)\n                name = name.toLowerCase();\n            is_match = (!name || name && (name.indexOf(query) < 0 && jid.indexOf(query) < 0)) ? false : true;\n            $(item).hideIf(!is_match);\n            is_match && (has_matches_chats = true);\n        });\n        this.$('.recent-chats-title').switchClass('hidden', !has_matches_chats);\n        this.$('.modal-content .error').showIf(!has_matches_contacts && !has_matches_chats);\n        this.scrollToTop();\n    },\n\n    onEmptyQuery: function () {\n        this.$('.roster-contact.list-item').remove();\n        this.$('.contacts-title').addClass('hidden');\n        this.$('.modal-content .error').addClass('hidden');\n        this.$('.recent-chats-title').addClass('hidden');\n    },\n\n    onEnterPressed: function (selection) {\n        let chat_item;\n        if (selection.hasClass('roster-contact'))\n            chat_item = this.account.chats.getChat(this.account.contacts.get(selection.data('jid'))).item_view;\n        if (selection.hasClass('chat-item'))\n            chat_item = xabber.chats_view.child(selection.data('id'));\n        chat_item && this.forwardTo(chat_item);\n    },\n\n    forwardTo: function (chat_item) {\n        if (chat_item.model.get('saved')) {\n            this.messages.forEach((message) => {\n                chat_item.content.onSubmit(\"\", [message]);\n            });\n        }\n        else {\n            if (!chat_item.content)\n                chat_item.content = new xabber.ChatContentView({chat_item: chat_item});\n            chat_item.content.bottom.setForwardedMessages(this.messages);\n        }\n        this.messages = [];\n        this.close().done(() => {\n            chat_item.open({clear_search: true});\n        });\n    }\n});\n\nxabber.InvitationPanelView = xabber.SearchView.extend({\n    className: 'modal dialog-modal add-user-group-chat',\n    template: templates.group_chats.invitation_panel_view,\n    ps_selector: '.contacts-list-wrap',\n    ps_settings: {theme: 'item-list'},\n\n    _initialize: function () {\n        this.registerClickEvents();\n    },\n\n    open: function (account, contact) {\n        this.selected_contacts = [];\n        this.account = account;\n        this.contact = contact;\n        this.clearPanel();\n        this.$(`textarea[name=\"invitation_text\"]`).val('');\n        this.$('.invitation-reason-wrap').addClass('hidden');\n        xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${this.account.get('jid')}\"] .roster-group`).each((idx, item) => {\n            let group_node = $(item).clone();\n            $(group_node).find('.list-item').each((i, list_item) => {\n                let contact_node = this.account.contacts.get($(list_item).attr('data-jid'));\n                if (contact_node.get('group_chat'))\n                        list_item.remove();\n            });\n            if (group_node.children('.list-item').length) {\n                this.$('.contacts-list-wrap').append(group_node);\n                group_node.find('.arrow').click((ev) => {\n                    this.toggleContacts(ev);\n                });\n                group_node.find('.group-head').click((ev) => {\n                    this.selectAllGroup(ev);\n                });\n            }\n        });\n        this.data.set('visible', true);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.search-input').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                this.selected_contacts = [];\n            }\n        });\n    },\n\n    addSelectedUsers: function () {\n        if (!this.selected_contacts.length) {\n            this.$('.modal-footer button').blur();\n            return;\n        }\n        let selected_users_count = this.selected_contacts.length,\n            _dfd_invitations = new $.Deferred(), invitations_count = 0;\n        _dfd_invitations.done((count) => {\n            let toast_text;\n            if (count == selected_users_count)\n                toast_text = xabber.getQuantityString(\"groupchat__toast__invitations_sent\", selected_users_count);\n            else\n                toast_text = xabber.getQuantityString(\"groupchat__toast_failed_to_sent_invitations\", selected_users_count);\n            utils.callback_popup_message(toast_text, 2000);\n            this.contact.trigger('invitations_send')\n        });\n        $(this.selected_contacts).each((idx, item) => {\n            this.sendInvite(item, () => {\n                invitations_count++;\n                if (idx == selected_users_count - 1)\n                    _dfd_invitations.resolve(invitations_count);\n            }, () => {\n                if (idx == selected_users_count - 1)\n                    _dfd_invitations.resolve(invitations_count);\n            });\n        });\n        this.close();\n    },\n\n    clearPanel: function () {\n        this.$('.modal-footer .errors').text('');\n        this.$('.counter').text('');\n        this.$('.contacts-list-wrap').empty();\n        this.clearSearch();\n    },\n\n    showReasonWrap: function () {\n        this.$('.invitation-reason-wrap').switchClass('hidden');\n        if (this.$('.invitation-reason-wrap').hasClass('hidden'))\n            this.$(`textarea[name=\"invitation_text\"]`).val('');\n    },\n\n    registerClickEvents: function () {\n        this.$('.btn-cancel').click(() => {\n            this.close();\n        });\n        this.$('.btn-add').click(() => {\n            this.addSelectedUsers();\n        });\n        this.$('.btn-invitation-reason').click(() => {\n            this.showReasonWrap();\n        });\n    },\n\n    addUser: function (ev) {\n        let $target = $(ev.target).closest('.list-item'),\n            contact_jid = $target.attr('data-jid');\n        let itemIdx = this.selected_contacts.indexOf(contact_jid);\n        if (!$target.hasClass('click-selected') && itemIdx > -1){\n            this.$(`.list-item[data-jid=\"${contact_jid}\"]`).removeClass('click-selected');\n            this.selected_contacts.splice(itemIdx, 1);\n            this.updateCounter();\n            return;\n        }\n        $target.toggleClass('click-selected');\n        if (itemIdx > -1)\n            this.selected_contacts.splice(itemIdx, 1);\n        else\n            this.selected_contacts.push(contact_jid);\n        this.updateCounter();\n    },\n\n    sendInvite: function (contact_jid, callback, errback) {\n        let reason_text = (this.contact.get('group_info').privacy === 'incognito') ? xabber.getString(\"groupchat__incognito_group__text_invitation\") : xabber.getString(\"groupchat__public_group__text_invitation\", [contact_jid]);\n        if (this.$(`textarea[name=\"invitation_text\"]`).val()){\n            reason_text = reason_text + '\\n\\n' + this.$(`textarea[name=\"invitation_text\"]`).val();\n        }\n        let iq = $iq({type: 'set', to: (this.contact.get('full_jid') || this.contact.get('jid'))})\n                .c('invite', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(contact_jid).up()\n                .c('send').t('false').up()\n                .c('reason').t(reason_text);\n        this.account.sendIQFast(iq, () => {\n            this.sendInviteMessage(contact_jid);\n            this.close();\n            callback && callback();\n        }, (iq) => {\n            this.onInviteError(iq);\n            errback && errback();\n        });\n    },\n\n    onInviteError: function (iq) {\n        let err_text;\n        if ($(iq).find('not-allowed').length > 0) {\n            err_text = $(iq).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n        }\n        if ($(iq).find('conflict').length > 0) {\n            err_text = $(iq).find('text').text() || xabber.getString(\"groupchat__invitation__error_already_invited\", [$(iq).find('invite').find('jid').text()]);\n        }\n        this.$('.modal-footer .errors').removeClass('hidden').text(err_text);\n    },\n\n    sendInviteMessage: function(jid_to) {\n        let reason_text = (this.contact.get('group_info').privacy === 'incognito') ? xabber.getString(\"groupchat__incognito_group__text_invitation\") : xabber.getString(\"groupchat__public_group__text_invitation\", [jid_to]);\n        if (this.$(`textarea[name=\"invitation_text\"]`).val()){\n            reason_text = reason_text + '\\n\\n' + this.$(`textarea[name=\"invitation_text\"]`).val();\n        }\n        let body = xabber.getString(\"groupchat_legacy_invitation_body\", [this.contact.get('jid')]),\n            stanza = $msg({\n                to: jid_to,\n                type: 'chat',\n                id: uuid()\n            }).c('invite', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`, jid: this.contact.get('jid')})\n                .c('reason').t(reason_text).up().up()\n                .c('x', {xmlns: Strophe.NS.GROUP_CHAT})\n                .c('privacy').t(this.contact.get('group_info').privacy).up().up()\n                .c('body').t(body).up();\n        this.account.sendMsg(stanza);\n    },\n\n    search: function (query) {\n        query = query.toLowerCase();\n        query && this.$('.list-item').each((idx, item) => {\n            let jid = $(item).attr('data-jid'),\n                name = this.account.contacts.get(jid).get('name').toLowerCase(),\n                hide_clone = (this.$(`.list-item[data-jid=\"${jid}\"]`).length > 1) && (!this.$(`.list-item[data-jid=\"${jid}\"]`).first().is($(item)));\n            $(item).hideIf((name.indexOf(query) < 0 && jid.indexOf(query) < 0) || hide_clone);\n        });\n        this.$('.group-head').addClass('hidden');\n        this.$('.modal-content .error').switchClass('hidden', !(this.$('.list-item').length === this.$('.list-item.hidden').length));\n        this.scrollToTop();\n    },\n\n    onEmptyQuery: function () {\n        this.$('.list-item').removeClass('hidden');\n        this.$('.group-head').removeClass('hidden');\n    },\n\n    onClickItem: function (ev) {\n        this.addUser(ev);\n    },\n\n    onEnterPressed: function (selection) {\n        let contact_jid = selection.attr('data-jid'),\n            itemIdx = this.selected_contacts.indexOf(contact_jid);\n        if (itemIdx > -1)\n            this.selected_contacts.splice(itemIdx, 1);\n        this.selected_contacts.push(contact_jid);\n        this.updateCounter();\n        this.addSelectedUsers();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    toggleContacts: function (ev) {\n        let is_visible = $(ev.target).hasClass('mdi-chevron-down');\n        if (is_visible) {\n            let group_roster = $(ev.target).closest('.roster-group');\n            group_roster.find('.list-item').each((idx, item) => {\n                $(item).addClass('hidden');\n            });\n        }\n        else\n        {\n            let group_roster = $(ev.target).closest('.roster-group');\n            group_roster.find('.list-item').each((idx, item) => {\n                $(item).removeClass('hidden');\n            });\n        }\n        $(ev.target).switchClass('mdi-chevron-right', is_visible);\n        $(ev.target).switchClass('mdi-chevron-down', !is_visible);\n        this.updateScrollBar();\n    },\n\n    selectAllGroup: function (ev) {\n        if ($(ev.target).hasClass('arrow'))\n            return;\n       let group_roster = $(ev.target).closest('.roster-group');\n       if (group_roster.hasClass('click-selected')) {\n           group_roster.removeClass('click-selected');\n           group_roster.find('.list-item').each((idx, item) => {\n               let contact_jid = $(item).attr('data-jid'),\n                   itemIdx = this.selected_contacts.indexOf(contact_jid);\n               if (itemIdx > -1) {\n                   this.selected_contacts.splice(itemIdx, 1);\n                   $(item).removeClass('click-selected');\n               }\n           });\n       }\n       else\n       {\n           group_roster.addClass('click-selected');\n           group_roster.find('.list-item').each((idx, item) => {\n               let contact_jid = $(item).attr('data-jid'),\n                   itemIdx = this.selected_contacts.indexOf(contact_jid);\n               if (itemIdx > -1)\n                   return;\n               else\n                   this.selected_contacts.push(contact_jid);\n               $(item).addClass('click-selected');\n           });\n       }\n        this.updateCounter();\n    },\n\n    updateCounter: function () {\n        let selected_counter = this.$('.list-item.click-selected').length;\n        (selected_counter) ? this.$('.counter').removeClass('hidden').text(selected_counter) : this.$('.counter').text('');\n    }\n\n});\n\n  xabber.SavedChatHeadView = xabber.BasicView.extend({\n      className: 'chat-head-wrap saved-chat',\n      template: templates.saved_chat_head,\n      events: {\n          \"click .contact-name\": \"showSettings\",\n          \"click .circle-avatar\": \"showSettings\",\n          \"click .btn-chat-pin\": \"pinSavedChat\",\n          \"click .btn-delete-chat\": \"deleteChat\",\n          \"click .btn-set-status\": \"setStatus\",\n          \"click .btn-play-pause-plyr\": \"playPausePlyr\",\n          \"click .btn-next-plyr\": \"nextPlyr\",\n          \"click .btn-previous-plyr\": \"previousPlyr\",\n          \"click .btn-stop-plyr\": \"stopPlyr\",\n          \"click .btn-popup-plyr\": \"popupPlyr\",\n          \"click .btn-jingle-message\": \"openJingleMessage\",\n          \"click .btn-search-messages\": \"renderSearchPanel\"\n      },\n\n      _initialize: function (options) {\n          this.content = options.content;\n          this.contact = this.content.contact;\n          this.model = this.content.model;\n          clearInterval(this._update_oneliner_interval);\n          this.updateOneLiner();\n          this._update_oneliner_interval = setInterval(() => {\n              this.updateOneLiner();\n          }, 1000*60*2);\n          this.account = this.model.account;\n          this.$el.find('.circle-avatar:not(.voice-message-player-avatar)').html(env.templates.svg['saved-messages']());\n          this.model.on(\"close_chat\", this.closeChat, this);\n          this.model.on(\"hide_chat\", this.hideChat, this);\n          xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n          xabber.on('update_layout', this.updatePlyrTitle, this);\n          xabber.on('plyr_player_time_updated', this.updatePlyrTime, this);\n          xabber.on(\"update_jingle_button\", this.updateJingleButton, this);\n      },\n\n      render: function () {\n          this.$('.tooltipped').tooltip({delay: 50});\n          this.$('.btn-more').dropdown({\n              inDuration: 100,\n              outDuration: 100,\n              hover: false\n          });\n          this.$('.chat-head-menu').hide();\n          this.updatePlyrControls();\n          this.updatePlyrTime();\n          this.updateJingleButton();\n          return this;\n      },\n\n      updateOneLiner: function () {\n          let rand_idx = _.random(0, xabber.getOneLiners().length - 1),\n              one_liner = xabber.getOneLiners()[rand_idx].replace(/\\\\n/, \"\");\n          if (!one_liner) {\n              this.updateOneLiner();\n              return;\n          }\n          this.$('.one-liner').text(one_liner);\n      },\n\n      closeChat: function () {\n          this.model.set({'opened': false, 'display': false, 'active': false});\n          xabber.chats_view.clearSearch();\n      },\n\n      hideChat: function () {\n          this.model.set({'active': false});\n          xabber.chats_view.clearSearch();\n      },\n\n      showSettings: function () {\n          this.account.showSettingsModal();\n      },\n\n      deleteChat: function () {\n          let rewrite_support = this.account.server_features.get(Strophe.NS.REWRITE);\n          utils.dialogs.ask(xabber.getString(\"dialog_delete_saved_messages__header\"), xabber.getString(\"dialog_delete_saved_messages__confirm\") +\n              (rewrite_support ? \"\" : (\"\\n\" + xabber.getString(\"dialog_delete_saved_messages__confirm\", [this.account.domain]).fontcolor('#E53935'))), null, { ok_button_text: rewrite_support? xabber.getString(\"delete\") : xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((result) => {\n              if (result) {\n                  if (this.account.connection && this.account.connection.do_synchronization) {\n                      this.model.deleteFromSynchronization();\n                  }\n                  if (rewrite_support) {\n                      this.model.retractAllMessages(false);\n                  }\n                  else {\n                      let all_messages = this.model.messages.models;\n                      $(all_messages).each((idx, item) => {\n                          this.content.removeMessage(item);\n                      });\n                  }\n                  this.closeChat();\n                  this.model.set('timestamp', 0);\n              }\n          });\n      },\n\n      pinSavedChat: function () {\n          let pinned = this.model.get('pinned'),\n              is_pinned = pinned && pinned !== '0' ? true : false,\n              pinned_value = is_pinned ? '0' : + new Date(),\n              conversation_options = {\n                  jid: this.account.get('jid'),\n                  pinned: pinned_value,\n                  type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n              },\n              iq = $iq({type: 'set', to: this.account.get('jid')})\n                  .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                  .c('conversation', conversation_options);\n          this.account.sendIQFast(iq);\n          this.model.set('pinned', pinned_value);\n      },\n\n      renderSearchPanel: function () {\n          let visible_view;\n          if (this.content.isVisible())\n              visible_view = this.content;\n          this.model.messages_view && this.model.messages_view.isVisible() && (visible_view = this.model.messages_view);\n          visible_view && visible_view.$search_form.slideToggle(200, () => {\n              if (visible_view.$search_form.css('display') !== 'none')\n                  visible_view.$search_form.find('input').focus();\n          });\n      },\n\n      playPausePlyr: function () {\n          if (!xabber.current_plyr_player)\n              return;\n          if (xabber.current_plyr_player.$audio_elem){\n              if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                  let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                  $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                  xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n              } else {\n                  xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n              }\n          } else\n              xabber.current_plyr_player.togglePlay();\n          xabber.trigger('plyr_player_updated');\n      },\n\n      stopPlyr: function () {\n          if (!xabber.current_plyr_player && xabber.plyr_player_popup)\n              return;\n          xabber.plyr_players.forEach((item) => {\n              if (item.$audio_elem){\n                  if (item.$audio_elem.voice_message)\n                      item.$audio_elem.voice_message.stopTime();\n              }\n          });\n          if (xabber.plyr_player_popup)\n              xabber.plyr_player_popup.closePopup();\n          else {\n              xabber.current_plyr_player = null;\n              xabber.trigger('plyr_player_updated');\n          }\n      },\n\n      popupPlyr: function () {\n          if (xabber.plyr_player_popup)\n              xabber.plyr_player_popup.minimizePopup();\n      },\n\n      nextPlyr: function () {\n          let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n          if (player_index === -1 && xabber.current_plyr_player.player_item)\n              player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n          if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n              return;\n          if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n              let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n              if (!next_item.$audio_elem.voice_message){\n                  let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                  $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                  next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n              } else {\n                  next_item.$audio_elem.voice_message.play()\n              }\n          } else{\n              if (!xabber.plyr_player_popup){\n                  xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                  xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n              } else\n                  xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n          }\n      },\n\n      previousPlyr: function () {\n          let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n          if (player_index === -1 && xabber.current_plyr_player.player_item)\n              player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n          if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n              return;\n          if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n              let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n              if (!prev_item.$audio_elem.voice_message){\n                  let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                  $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                  prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n              } else {\n                  prev_item.$audio_elem.voice_message.play()\n              }\n          } else{\n              if (!xabber.plyr_player_popup){\n                  xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                  xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n              } else\n                  xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n          }\n      },\n\n      updatePlyrControls: function () {\n          this.$('.chat-tool-player').showIf(xabber.current_plyr_player);\n          this.$el.switchClass('chat-head-player-enabled', xabber.current_plyr_player);\n          if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n              if (xabber.current_plyr_player.$audio_elem.voice_message){\n                  let voice_message = xabber.current_plyr_player.$audio_elem.voice_message;\n                  this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_voice\"))\n                  this.$('.btn-play-pause-plyr .mdi-play').hideIf(voice_message.isPlaying());\n                  this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!voice_message.isPlaying());\n                  this.$('.btn-play-pause-plyr').switchClass('active-plyr', voice_message.isPlaying());\n                  // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', voice_message.isPlaying());\n                  this.$('.btn-previous-plyr').switchClass('before-active-plyr', voice_message.isPlaying());\n                  let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n                  this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                  this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                  this.$('.mdi-player-type-icon').addClass('hidden');\n                  this.$('.player-poster').addClass('hidden');\n                  this.$('.voice-message-player-avatar').removeClass('hidden');\n                  this.$('.voice-message-player-avatar').setAvatar(xabber.current_plyr_player.contact_avatar, 32);\n                  this.updatePlyrTitle();\n                  let duration = Math.round(voice_message.getDuration());\n                  this.$('.chat-head-player-total-time').text(utils.pretty_duration(duration));\n                  let timerId = setInterval(function() {\n                      let cur_time = Math.round(voice_message.getCurrentTime());\n                      if (voice_message.isPlaying())\n                          this.$('.chat-head-player-current-time').text(utils.pretty_duration(cur_time));\n                      else\n                          clearInterval(timerId);\n                  }, 100);\n                  (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.addClass('hidden2');\n                  (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).addClass('hidden2');\n              }\n          }\n          else if (xabber.current_plyr_player) {\n              this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n              this.$('.chat-head-player-total-time').text(utils.pretty_duration(parseInt(xabber.current_plyr_player.duration)));\n              this.updatePlyrTitle();\n              let poster = xabber.current_plyr_player.poster;\n              if (poster){\n                  this.$('.mdi-player-type-icon').addClass('hidden');\n                  this.$('.player-poster').removeClass('hidden');\n                  this.$('.player-poster').attr(\"src\", poster);\n              } else {\n                  this.$('.mdi-player-type-icon').removeClass('hidden');\n                  this.$('.player-poster').addClass('hidden');\n              }\n              this.$('.voice-message-player-avatar').addClass('hidden');\n              if (xabber.current_plyr_player.provider != 'html5')\n                  this.$('.chat-head-player-type').text(xabber.current_plyr_player.provider)\n              else\n                  this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_video\"))\n              this.$('.btn-play-pause-plyr .mdi-play').hideIf(xabber.current_plyr_player.playing);\n              this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!xabber.current_plyr_player.playing);\n              this.$('.btn-play-pause-plyr').switchClass('active-plyr', xabber.current_plyr_player.playing);\n              // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', xabber.current_plyr_player.playing);\n              this.$('.btn-previous-plyr').switchClass('before-active-plyr', xabber.current_plyr_player.playing);\n              let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n              this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n              this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n              (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.removeClass('hidden2');\n              (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).removeClass('hidden2');\n          }\n      },\n\n      updatePlyrTime: function () {\n          if (xabber.current_plyr_player){\n              if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n              }\n              else if (!isNaN(xabber.current_plyr_player.currentTime))\n                  this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n          }\n      },\n\n      updatePlyrTitle: function () {\n          if (!xabber.current_plyr_player)\n              return\n          let $title_elem = this.$('.chat-head-player-title .chat-head-player-title-text'),\n              title;\n          if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n              title = xabber.current_plyr_player.author;\n          else if (xabber.current_plyr_player)\n              title = xabber.current_plyr_player.config.title ?\n                  xabber.current_plyr_player.config.title :\n                  xabber.current_plyr_player.provider === 'html5' ?\n                      xabber.current_plyr_player.source.substring(xabber.current_plyr_player.source.lastIndexOf('/')+1)\n                      : xabber.getString(\"chat_message_video\");\n          $title_elem.text(title);\n          if (this.$('.chat-head-player-title')[0] && utils.isOverflownWidth(this.$('.chat-head-player-title')[0])){\n              $title_elem.addClass('active-animation-player-title');\n              $title_elem.text(title + ' ⚫︎︎ ⚫︎︎ ⚫︎︎ ' + title);\n          } else\n              $title_elem.removeClass('active-animation-player-title');\n\n      },\n\n      updateJingleButton: function () {\n          this.$('.btn-jingle-message').switchClass('active-call', xabber.current_voip_call);\n          if (xabber.current_voip_call){\n              this.$('.btn-jingle-message').removeClass('hidden');\n              let voip_status = xabber.current_voip_call.get('status');\n              if (voip_status)\n                  this.$('.btn-jingle-message').attr('data-state', voip_status);\n              else\n                  this.$('.btn-jingle-message').attr('data-state', '');\n              if (voip_status === 'disconnected')\n                  this.$('.btn-jingle-message').removeClass('active-call');\n          } else\n              this.$('.btn-jingle-message').addClass('hidden');\n      },\n\n      openJingleMessage: function () {\n          if (xabber.current_voip_call) {\n              xabber.current_voip_call.modal_view.collapse();\n              return;\n          }\n      },\n  });\n\n  xabber.ChatHeadView = xabber.BasicView.extend({\n    className: 'chat-head-wrap',\n    template: templates.chat_head,\n    avatar_size: constants.AVATAR_SIZES.CHAT_HEAD,\n\n    events: {\n        \"click .chat-head-wrap\": \"showContactDetailsRight\",\n        \"click .chat-head-details\": \"showContactDetailsRight\",\n        \"click .contact-name\": \"showContactDetailsRight\",\n        \"click .circle-avatar\": \"showContactDetailsRight\",\n        \"click .contact-status-message.resource-hover\": \"showContactResources\",\n        \"click .contact-status-message.members-hover\": \"showMembersDetails\",\n        \"click .btn-clear-history\": \"clearHistory\",\n        \"click .btn-invite-users\": \"inviteUsers\",\n        \"click .btn-delete-chat\": \"deleteChat\",\n        \"click .btn-delete-contact\": \"deleteContact\",\n        \"click .btn-block-contact\": \"blockContact\",\n        \"click .btn-unblock-contact\": \"unblockContact\",\n        \"click .btn-export-history\": \"exportHistory\",\n        \"click .btn-show-fingerprints\": \"showFingerprints\",\n        \"click .btn-start-encryption\": \"startEncryptedChat\",\n        \"click .btn-open-encrypted-chat\": \"openEncryptedChat\",\n        \"click .btn-open-regular-chat\": \"openRegularChat\",\n        \"click .btn-chat-pin\": \"pinChat\",\n        \"click .btn-archive-chat\": \"archiveChat\",\n        \"click .btn-call-attention\": \"callAttention\",\n        \"click .btn-export-chat\": \"exportChat\",\n        \"click .btn-search-messages\": \"renderSearchPanel\",\n        \"click .btn-jingle-message\": \"sendJingleMessage\",\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-notifications.muted\": \"unmuteChat\",\n        \"click .btn-set-status\": \"setStatus\",\n        \"click .btn-play-pause-plyr\": \"playPausePlyr\",\n        \"click .btn-next-plyr\": \"nextPlyr\",\n        \"click .btn-previous-plyr\": \"previousPlyr\",\n        \"click .btn-stop-plyr\": \"stopPlyr\",\n        \"click .btn-popup-plyr\": \"popupPlyr\",\n        \"click .btn-set-ephemeral-timer\": \"setEphemeralTimer\",\n    },\n\n    _initialize: function (options) {\n        this.content = options.content;\n        this.contact = this.content.contact;\n        this.model = this.content.model;\n        this.account = this.model.account;\n        this.resources_view = new xabber.ContactResourcesRightView({model: this.contact.resources});\n        this.updateName();\n        this.updateStatus();\n        this.updateEncrypted();\n        this.updateAvatar();\n        this.updateNotifications();\n        this.updateArchived();\n        this.updatePinned();\n        this.model.on(\"change:encrypted\", this.updateEncrypted, this);\n        this.model.on(\"close_chat\", this.closeChat, this);\n        this.model.on(\"hide_chat\", this.hideChat, this);\n        this.model.on(\"pinned\", this.pinChat, this);\n        this.model.on(\"change:muted\", this.updateNotifications, this);\n        this.model.on(\"change:archived\", this.updateArchived, this);\n        this.model.on(\"change:pinned\", this.updatePinned, this);\n        this.contact.on(\"change\", this.onContactChanged, this);\n        this.contact.on(\"archive_chat\", this.archiveChat, this);\n        this.contact.on(\"change:name\", this.updateName, this);\n        this.contact.on(\"change:status\", this.updateStatus, this);\n        this.contact.on(\"change:status_updated\", this.updateStatus, this);\n        this.contact.on(\"change:image\", this.updateAvatar, this);\n        this.contact.on(\"change:blocked\", this.onChangedBlocked, this);\n        this.contact.on(\"change:group_chat\", this.updateGroupChatHead, this);\n        this.contact.on(\"change:subscription\", this.updateMenu, this);\n        this.contact.on(\"change:in_roster\", this.updateMenu, this);\n        this.contact.on(\"update_trusted\", this.updateEncryptedColor, this);\n        xabber._settings.on(\"change:jingle_calls\", this.updateGroupChatHead, this);\n        xabber.on('change:audio', this.updateGroupChatHead, this);\n        xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n        xabber.on('update_layout', this.updatePlyrTitle, this);\n        xabber.on('plyr_player_time_updated', this.updatePlyrTime, this);\n        xabber.on(\"update_jingle_button\", this.updateJingleButton, this);\n    },\n\n    render: function (options) {\n        this.$('.tooltipped').tooltip('remove');\n        this.$('.tooltipped').tooltip({delay: 50});\n        this.$('.btn-more').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.btn-notifications').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: true, // Activate on hover\n            belowOrigin: true, // Displays dropdown below the button\n        });\n        this.$('.ephemeral-timer-dropdown').switchClass('hidden', !this.model.get('encrypted'));\n        this.$('.ephemeral-timer-dropdown').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: true, // Activate on hover\n            belowOrigin: true, // Displays dropdown below the button\n        });\n        this.$('.chat-head-menu').hide();\n        this.updateStatusMsg();\n        this.updateGroupChatHead();\n        if (this.contact.get('group_chat'))\n            this.$('.contact-status-message').addClass('members-hover')\n        else\n            this.$('.contact-status-message').addClass('resource-hover')\n        this.updatePlyrControls();\n        this.updatePlyrTime();\n        this.updateJingleButton();\n        return this;\n    },\n\n    updateEncrypted: function () {\n        this.$el.switchClass('encrypted', this.model.get('encrypted'));\n    },\n\n    updateEncryptedColor: function (encrypted) {\n        this.$el.attr('data-trust', encrypted);\n    },\n\n    updateName: function () {\n        this.$('.contact-name').text(this.contact.get('name'));\n    },\n\n    updateStatus: function () {\n        let status = this.contact.get('status'),\n            status_message = this.contact.getStatusMessage();\n        this.$('.contact-status').attr('data-status', status);\n        this.$('.chat-icon').attr('data-status', status);\n        this.model.get('blocked') ? this.$('.contact-status-message').text('Contact blocked') : this.$('.contact-status-message').text(status_message);\n    },\n\n    updateStatusMsg: function () {\n        this.$('.contact-status-message').text(this.contact.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    onContactChanged: function () {\n        let changed = this.contact.changed;\n        if (_.has(changed, 'subscription_request_in') || _.has(changed, 'subscription_request_out') || _.has(changed, 'subscription') || _.has(changed, 'status_message'))\n            this.updateStatusMsg();\n        if (_.has(changed, 'private_chat') || _.has(changed, 'incognito_chat') || _.has(changed, 'invitation'))\n            this.updateIcon();\n    },\n\n    onChangedBlocked: function () {\n        this.updateMenu();\n        this.updateStatusMsg();\n        this.updateIcon();\n    },\n\n    updateMenu: function () {\n        let is_group_chat = this.contact.get('group_chat');\n        this.$('.btn-invite-users').showIf(is_group_chat && !this.contact.get('private_chat') && this.contact.get('subscription') == 'both');\n        this.$('.btn-call-attention').hideIf(is_group_chat || this.model.get('encrypted'));\n        this.$('.btn-clear-history').hideIf(is_group_chat);\n        this.$('.btn-start-encryption').showIf(!is_group_chat && this.account.omemo && !this.model.get('encrypted') && !this.account.chats.get(`${this.contact.hash_id}:encrypted`));\n        this.$('.btn-open-encrypted-chat').showIf(!is_group_chat && this.account.omemo && !this.model.get('encrypted') && this.account.chats.get(`${this.contact.hash_id}:encrypted`));\n        this.$('.btn-open-regular-chat').showIf(this.model.get('encrypted'));\n        this.$('.btn-show-fingerprints').showIf(!is_group_chat && this.account.omemo && this.model.get('encrypted'));\n        this.$('.btn-retract-own-messages').showIf(is_group_chat);\n        this.$('.btn-block-contact').hideIf(this.contact.get('blocked'));\n        this.$('.btn-unblock-contact').showIf(this.contact.get('blocked'));\n        this.$('.btn-delete-contact').showIf(this.contact.get('in_roster') && !is_group_chat);\n        this.$('.btn-notifications').hideIf(this.contact.get('blocked'));\n        this.$('.btn-jingle-message').hideIf((this.contact.get('blocked') || is_group_chat) && xabber.current_voip_call);\n        this.$('.btn-jingle-message').hideIf(!xabber.settings.jingle_calls);\n    },\n\n    renderSearchPanel: function () {\n        this.contact.showDetailsRight('all-chats', {type: 'search'});\n    },\n\n    showContactDetailsRight: function () {\n        this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n    },\n\n    showContactResources: function () {\n        this.resources_view.open();\n    },\n\n    showMembersDetails: function () {\n        this.contact.showDetailsRight('all-chats', {type: 'members'});\n    },\n\n    updatePinned: function () {\n        let pinned = this.model.get('pinned'),\n            is_pinned = pinned && pinned !== '0' ? true : false;\n        if (is_pinned)\n            this.$('.btn-chat-pin .one-line').text(xabber.getString(\"chat_action_unpin\"))\n        else\n            this.$('.btn-chat-pin .one-line').text(xabber.getString(\"chat_action_pin\"))\n    },\n\n    updateNotifications: function () {\n        if (this.model.isMuted()) {\n            this.$('.btn-notifications .one-line').text(xabber.getString(\"chat_action_unmute\"));\n            this.$('.btn-notifications').addClass('muted');\n        }\n        else {\n            this.$('.btn-notifications .one-line').text(xabber.getString(\"chat_action_mute\"));\n            this.$('.btn-notifications').removeClass('muted');\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.model.isMuted());\n        this.$('.btn-unmute-dropdown').hideIf(!this.model.isMuted());\n    },\n\n      muteChat: function (ev) {\n          if (this.contact.get('blocked'))\n              return;\n          let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n              muted_seconds;\n          if (mute_type === 'minutes15')\n              muted_seconds = 900\n          if (mute_type === 'hours1')\n              muted_seconds = 3600\n          if (mute_type === 'hours2')\n              muted_seconds = 7200\n          if (mute_type === 'day')\n              muted_seconds = 86400\n          if (mute_type === 'forever')\n              muted_seconds = 0\n          this.model.muteChat(muted_seconds);\n      },\n\n      unmuteChat: function (ev) {\n          if (this.contact.get('blocked'))\n              return;\n          this.model.muteChat('');\n      },\n\n    callAttention: function (ev) {\n        let msg = $msg({type: 'headline', to: this.contact.get('jid')})\n            .c('attention', {xmlns: Strophe.NS.ATTENTION});\n        this.account.sendMsg(msg);\n        this.model.messages.createSystemMessage({\n            from_jid: this.account.get('jid'),\n            message: xabber.getString(\"action_attention_called\")\n        });\n    },\n\n    exportChat: function (ev) {\n          xabber.trigger('show_export_messages', {model: this.model, account: this.account, content: this.content});\n    },\n\n\n    updateArchived: function () {\n        let archived = !this.model.get('archived'),\n            is_archived = archived ? true : false;\n        if (!is_archived)\n            this.$('.btn-archive-chat .one-line').text(xabber.getString(\"chat_action_unarchive\"))\n        else\n            this.$('.btn-archive-chat .one-line').text(xabber.getString(\"chat_action_archive\"))\n        this.$('.btn-archive-chat .mdi').switchClass('mdi-package-up', !is_archived);\n        this.$('.btn-archive-chat .mdi').switchClass('mdi-package-down', is_archived);\n        if (this.model.item_view && archived){\n            !this.model.messages.length && this.model.item_view.updateLastMessage();\n            this.account.chat_settings && this.account.chat_settings.updateArchiveChatsList(this.contact.get('jid'), archived);\n            if (this.model.get('active')) {\n                xabber.chats_view.updateScreenAllChats();\n            }\n        }\n    },\n\n    archiveChat: function (ev, no_iq) {\n        let archived = !this.model.get('archived'),\n            is_archived = archived ? true : false;\n        if (!no_iq) {\n            let is_archived_status = is_archived ? 'archived' : 'active',\n                conversation_options = {\n                    jid: this.contact.get('jid'),\n                    status: is_archived_status,\n                    type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n                },\n                iq = $iq({type: 'set', to: this.account.get('jid')})\n                    .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                    .c('conversation', conversation_options);\n            this.account.sendIQFast(iq);\n            this.model.set('archived', archived);\n        }\n    },\n\n    pinChat: function () {\n        let pinned = this.model.get('pinned'),\n            is_pinned = pinned && pinned !== '0' ? true : false,\n            pinned_value = is_pinned ? '0' : + new Date(),\n            conversation_options = {\n                jid: this.contact.get('jid'),\n                pinned: pinned_value,\n                type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n            },\n            iq = $iq({type: 'set', to: this.account.get('jid')})\n                .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                .c('conversation', conversation_options);\n            this.account.sendIQFast(iq);\n            this.model.set('pinned', pinned_value);\n    },\n\n    sendJingleMessage: function () {\n        if (!xabber.settings.jingle_calls){\n            return;\n        }\n        if (xabber.current_voip_call) {\n            xabber.current_voip_call.modal_view.collapse();\n            return;\n        }\n        xabber.chats_view.scrollToTop();\n        xabber.chats_view.clearSearch();\n        !this.contact.get('group_chat') && this.content.initJingleMessage();\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.contact);\n    },\n\n    playPausePlyr: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        if (xabber.current_plyr_player.$audio_elem){\n            if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n            } else {\n                xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n            }\n        } else\n            xabber.current_plyr_player.togglePlay();\n        xabber.trigger('plyr_player_updated');\n    },\n\n    stopPlyr: function () {\n        if (!xabber.current_plyr_player && xabber.plyr_player_popup)\n            return;\n        xabber.plyr_players.forEach((item) => {\n            if (item.$audio_elem){\n                if (item.$audio_elem.voice_message)\n                    item.$audio_elem.voice_message.stopTime();\n            }\n        });\n        if (xabber.plyr_player_popup)\n            xabber.plyr_player_popup.closePopup();\n        else {\n            xabber.current_plyr_player = null;\n            xabber.trigger('plyr_player_updated');\n        }\n    },\n\n    popupPlyr: function () {\n        if (xabber.plyr_player_popup)\n            xabber.plyr_player_popup.minimizePopup();\n    },\n\n    nextPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n            let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n            if (!next_item.$audio_elem.voice_message){\n                let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                next_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n        }\n    },\n\n    previousPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n            let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n            if (!prev_item.$audio_elem.voice_message){\n                let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                prev_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n        }\n    },\n\n    updatePlyrControls: function () {\n        this.$('.chat-tool-player').showIf(xabber.current_plyr_player);\n        this.$el.switchClass('chat-head-player-enabled', xabber.current_plyr_player);\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n            if (xabber.current_plyr_player.$audio_elem.voice_message){\n                let voice_message = xabber.current_plyr_player.$audio_elem.voice_message;\n                this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_voice\"))\n                this.$('.btn-play-pause-plyr .mdi-play').hideIf(voice_message.isPlaying());\n                this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!voice_message.isPlaying());\n                this.$('.btn-play-pause-plyr').switchClass('active-plyr', voice_message.isPlaying());\n                // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', voice_message.isPlaying());\n                this.$('.btn-previous-plyr').switchClass('before-active-plyr', voice_message.isPlaying());\n                let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n                this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                this.$('.mdi-player-type-icon').addClass('hidden');\n                this.$('.player-poster').addClass('hidden');\n                this.$('.voice-message-player-avatar').removeClass('hidden');\n                this.$('.voice-message-player-avatar').setAvatar(xabber.current_plyr_player.contact_avatar, 32);\n                this.updatePlyrTitle();\n                let duration = Math.round(voice_message.getDuration());\n                this.$('.chat-head-player-total-time').text(utils.pretty_duration(duration));\n                let timerId = setInterval(function() {\n                    let cur_time = Math.round(voice_message.getCurrentTime());\n                    if (voice_message.isPlaying())\n                        this.$('.chat-head-player-current-time').text(utils.pretty_duration(cur_time));\n                    else\n                        clearInterval(timerId);\n                }, 100);\n                (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.addClass('hidden2');\n                (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).addClass('hidden2');\n            }\n        }\n        else if (xabber.current_plyr_player) {\n            this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n            this.$('.chat-head-player-total-time').text(utils.pretty_duration(parseInt(xabber.current_plyr_player.duration)));\n            this.updatePlyrTitle();\n            let poster = xabber.current_plyr_player.poster;\n            if (poster){\n                this.$('.mdi-player-type-icon').addClass('hidden');\n                this.$('.player-poster').removeClass('hidden');\n                this.$('.player-poster').attr(\"src\", poster);\n            } else {\n                this.$('.mdi-player-type-icon').removeClass('hidden');\n                this.$('.player-poster').addClass('hidden');\n            }\n            this.$('.voice-message-player-avatar').addClass('hidden');\n            if (xabber.current_plyr_player.provider != 'html5')\n                this.$('.chat-head-player-type').text(xabber.current_plyr_player.provider)\n            else\n                this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_video\"))\n            this.$('.btn-play-pause-plyr .mdi-play').hideIf(xabber.current_plyr_player.playing);\n            this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!xabber.current_plyr_player.playing);\n            this.$('.btn-play-pause-plyr').switchClass('active-plyr', xabber.current_plyr_player.playing);\n            // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', xabber.current_plyr_player.playing);\n            this.$('.btn-previous-plyr').switchClass('before-active-plyr', xabber.current_plyr_player.playing);\n            let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n            this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n            this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n            (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.removeClass('hidden2');\n            (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).removeClass('hidden2');\n        }\n    },\n\n    updatePlyrTime: function () {\n        if (xabber.current_plyr_player){\n            if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n            }\n            else if (!isNaN(xabber.current_plyr_player.currentTime))\n                this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n        }\n    },\n\n    updatePlyrTitle: function () {\n        if (!xabber.current_plyr_player)\n            return\n        let $title_elem = this.$('.chat-head-player-title .chat-head-player-title-text'),\n            title;\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            title = xabber.current_plyr_player.author;\n        else if (xabber.current_plyr_player)\n            title = xabber.current_plyr_player.config.title ?\n                xabber.current_plyr_player.config.title :\n                xabber.current_plyr_player.provider === 'html5' ?\n                    xabber.current_plyr_player.source.substring(xabber.current_plyr_player.source.lastIndexOf('/')+1)\n                    : xabber.getString(\"chat_message_video\");\n        $title_elem.text(title);\n        if (this.$('.chat-head-player-title')[0] && utils.isOverflownWidth(this.$('.chat-head-player-title')[0])){\n            $title_elem.addClass('active-animation-player-title');\n            $title_elem.text(title + ' ⚫︎︎ ⚫︎︎ ⚫︎︎ ' + title);\n        } else\n            $title_elem.removeClass('active-animation-player-title');\n\n    },\n\n    setEphemeralTimer: function (ev) {\n        this.model.setEphemeralTimer(ev);\n    },\n\n\n    updateJingleButton: function () {\n        this.$('.btn-jingle-message').switchClass('active-call', xabber.current_voip_call);\n        if (xabber.current_voip_call){\n            this.contact.get('group_chat') && this.$('.btn-jingle-message').removeClass('hidden');\n            let voip_status = xabber.current_voip_call.get('status');\n            if (voip_status)\n                this.$('.btn-jingle-message').attr('data-state', voip_status);\n            else\n                this.$('.btn-jingle-message').attr('data-state', '');\n            if (voip_status === 'disconnected')\n                this.$('.btn-jingle-message').removeClass('active-call');\n        } else if (this.contact.get('group_chat'))\n            this.$('.btn-jingle-message').addClass('hidden');\n    },\n\n    getActiveScreen: function () {\n        let active_screen = xabber.toolbar_view.$('.active');\n        this.$('.omemo-item').removeClass('hidden');\n        if (active_screen.hasClass('archive-chats')) {\n            xabber.toolbar_view.showArchive();\n            return;\n        }\n        if (active_screen.hasClass('all-chats')) {\n            xabber.toolbar_view.showAllChats();\n            return;\n        }\n        if (active_screen.hasClass('chats')) {\n            xabber.toolbar_view.showChats();\n            return;\n        }\n        if (active_screen.hasClass('group-chats')) {\n            xabber.toolbar_view.showGroupChats();\n            return;\n        }\n        if (active_screen.hasClass('account-item')) {\n            xabber.toolbar_view.showChatsByAccount();\n            return;\n        }\n    },\n\n    updateGroupChatHead: function () {\n        let is_group_chat = this.contact.get('group_chat');\n        this.updateIcon();\n        this.$('.btn-jingle-message').showIf(!is_group_chat && xabber.get('audio') || xabber.current_voip_call);\n        this.$('.btn-jingle-message').hideIf(!xabber.settings.jingle_calls);\n        this.$('.contact-status').hideIf(is_group_chat);\n        this.updateMenu();\n    },\n\n    updateIcon: function () {\n        this.$('.chat-icon').addClass('hidden');\n        let ic_name = this.contact.getIcon();\n        ic_name && this.$('.chat-icon').removeClass('hidden group-invite blocked').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n    },\n\n    inviteUsers: function () {\n        if (!xabber.invite_panel)\n            xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n        xabber.invite_panel.open(this.account, this.contact);\n    },\n\n    clearHistory: function () {\n        this.content.clearHistory();\n        xabber.chats_view.clearSearch();\n    },\n\n    leaveGroupChat: function () {\n        this.contact.declineSubscription();\n        this.contact.removeFromRoster();\n        this.contact.set('in_roster', false);\n    },\n\n    closeChat: function () {\n        this.model.set({'opened': false, 'display': false, 'active': false});\n        xabber.chats_view.clearSearch();\n    },\n\n    hideChat: function () {\n        this.model.set({'active': false});\n        xabber.chats_view.clearSearch();\n    },\n\n    deleteChat: function () {\n        if (this.contact.get('group_chat')) {\n            utils.dialogs.ask(xabber.getString(\"delete_chat\"), xabber.getString(\"dialog_group_remove__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n                if (result) {\n                    let scrolled_top = xabber.chats_view.getScrollTop() || 0;\n                    (this.account.connection && this.account.connection.do_synchronization) && this.model.deleteFromSynchronization();\n                    this.leaveGroupChat();\n                    this.closeChat();\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                    xabber.chats_view.scrollTo(scrolled_top);\n                }\n            });\n        }\n        else {\n            let rewrite_support = this.account.server_features.get(Strophe.NS.REWRITE);\n            utils.dialogs.ask(xabber.getString(\"delete_chat\"), xabber.getString(\"delete_chat_dialog_message\") +\n            (rewrite_support ? \"\" : `\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')}`), null, { ok_button_text: rewrite_support? xabber.getString(\"delete\") : xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((result) => {\n                if (result) {\n                    let scrolled_top = xabber.chats_view.getScrollTop() || 0;\n                    if (rewrite_support) {\n                        this.model.retractAllMessages(false);\n                    }\n                    if (this.account.connection && this.account.connection.do_synchronization) {\n                        this.model.deleteFromSynchronization();\n                    }\n                    else {\n                        let all_messages = this.model.messages.models;\n                        $(all_messages).each((idx, item) => {\n                            this.content.removeMessage(item);\n                        });\n                    }\n                    this.closeChat();\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                    xabber.chats_view.scrollTo(scrolled_top);\n                }\n            });\n        }\n    },\n\n    deleteContact: function () {\n        this.contact.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.contact.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.contact.unblockWithDialog();\n    },\n\n    exportHistory: function () {\n\n    },\n\n    showFingerprints: function () {\n        if (!this.account.omemo)\n            return;\n        let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n        peer.fingerprints.open();\n    },\n\n    startEncryptedChat: function () {\n        this.account.chats.openChat(this.contact, {encrypted: true});\n        let chat = this.account.chats.get(this.contact.hash_id + ':encrypted');\n        chat.set('timestamp', moment.now());\n        chat.item_view.updateLastMessage();\n    },\n\n    openEncryptedChat: function () {\n        this.model.set('opened', true);\n        this.account.chats.openChat(this.contact, {encrypted: true});\n    },\n\n    openRegularChat: function () {\n        this.model.set('opened', true);\n        this.account.chats.openChat(this.contact);\n    }\n});\n\n\n  xabber.SendMediaView = xabber.BasicView.extend({\n      className: 'modal main-modal avatar-picker background-panel',\n      template: templates.send_media,\n      ps_selector: '.modal-content',\n      ps_settings: {theme: 'item-list'},\n\n      events: {\n          \"click .menu-btn\": \"updateActiveMenu\",\n          \"click .library-wrap .image-item\": \"setActiveImage\",\n          'change input[type=\"file\"]': \"onFileInputChanged\",\n          'keyup input.url': \"onInputChanged\",\n          \"click .btn-add\": \"addMedia\",\n          \"click .btn-cancel\": \"close\"\n      },\n\n      _initialize: function () {\n          this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n      },\n\n      render: function (options) {\n          this.model = options.model;\n          this.parent = options.parent;\n          this.createLibrary();\n          this.$('.menu-btn').removeClass('active');\n          this.$('.menu-btn[data-screen-name=\"upload\"]').addClass('active');\n          this.$('.modal-header span').text(xabber.getString(\"chat_bottom__tooltip_add_media\"));\n          this.$el.openModal({\n              ready: () => {\n                  this.$('.modal-content').perfectScrollbar({theme: 'item-list'});\n              },\n              complete: this.close.bind(this)\n          });\n          let draggable = this.$('.upload-wrap');\n          draggable[0].ondragenter = function (ev) {\n              ev.preventDefault();\n              draggable.addClass('file-drop');\n          };\n          draggable[0].ondragover = function (ev) {\n              ev.preventDefault();\n          };\n          draggable[0].ondragleave = function (ev) {\n              if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                  return;\n              ev.preventDefault();\n              draggable.removeClass('file-drop');\n          };\n          draggable[0].ondrop = (ev) => {\n              ev.preventDefault();\n              ev.stopPropagation();\n              draggable.removeClass('file-drop');\n              let files = ev.dataTransfer.files || [];\n              this.parent.view.addFileMessage(files);\n              this.close();\n          };\n      },\n\n      onPaste: function (ev) {\n          let url = ev.clipboardData.getData('text').trim();\n          this.$('.image-preview img')[0].onload = () => {\n              this.$('.image-preview img').removeClass('hidden');\n              this.updateActiveButton();\n          };\n          this.$('.image-preview img').addClass('hidden')[0].src = url;\n          this.updateActiveButton();\n      },\n\n      updateActiveMenu: function (ev) {\n          let screen_name = ev.target.getAttribute('data-screen-name');\n          this.$('.menu-btn').removeClass('active');\n          this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n          this.updateScreen(screen_name);\n      },\n\n      updateScreen: function (name) {\n          this.$('.screen-wrap').addClass('hidden');\n          this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n          this.scrollToTop();\n          this.updateActiveButton();\n      },\n\n      updateActiveButton: function () {\n          let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n              non_active = true;\n          if ($active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video') {\n              $active_screen.find('div.active').length && (non_active = false);\n          } else {\n              $active_screen.find('img:not(.hidden)').length && (non_active = false);\n          }\n          this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n      },\n\n      renderFiles: function (response) {\n          this.$(`.library-wrap[data-screen=\"${response.type}\"] .preloader-wrapper`).remove()\n          if (response.items.length){\n              response.items.forEach((item) => {\n                  let img = $(`<div class=\"image-item\"/>`);\n                  img.css('background-image', `url(\"${item.thumbnail.url}\")`);\n                  img.attr('data-src', item.file);\n                  img.attr('data-name', item.name);\n                  this.$(`.library-wrap[data-screen=\"${response.type}\"]`).append(img);\n              });\n          }\n      },\n\n      createLibrary: function () {\n          this.model.testGalleryTokenExpire(() => {\n              if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n                  this.$('.library-wrap').html(env.templates.contacts.preloader())\n                  $.ajax({\n                      type: 'GET',\n                      headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                      url: this.model.get('gallery_url') + 'v1/files/',\n                      dataType: 'json',\n                      contentType: \"application/json\",\n                      data: {obj_per_page: 50, order_by: '-id', type: 'image'},\n                      success: (response) => {\n                          console.log(response)\n                          response.type = 'image'\n                          this.renderFiles(response)\n                      },\n                      error: (response) => {\n                          this.model.handleCommonGalleryErrors(response)\n                          console.log(response)\n                          this.$('.library-wrap[data-screen=\"image\"] .preloader-wrapper').remove()\n                      }\n                  });\n                  $.ajax({\n                      type: 'GET',\n                      headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                      url: this.model.get('gallery_url') + 'v1/files/',\n                      dataType: 'json',\n                      contentType: \"application/json\",\n                      data: {obj_per_page: 50, order_by: '-id', type: 'video'},\n                      success: (response) => {\n                          console.log(response)\n                          response.type = 'video'\n                          this.renderFiles(response)\n                      },\n                      error: (response) => {\n                          this.model.handleCommonGalleryErrors(response)\n                          console.log(response)\n                          this.$('.library-wrap[data-screen=\"video\"] .preloader-wrapper').remove()\n                      }\n                  });\n              }\n          });\n      },\n\n      setActiveImage: function (ev) {\n          let $target = $(ev.target),\n              $active_screen = this.$('.screen-wrap:not(.hidden)');\n          if ($target.hasClass('active'))\n              $target.removeClass('active');\n          else {\n              this.$('.library-wrap>div').removeClass('active');\n              $target.addClass('active');\n          }\n          this.updateActiveButton();\n      },\n\n      onFileInputChanged: function (ev) {\n          let target = ev.target,\n              files = [];\n          for (let i = 0; i < target.files.length; i++) {\n              files.push(target.files[i]);\n          }\n\n          if (files && files.length) {\n              this.parent.view.addFileMessage(files);\n              $(target).val('');\n              this.close();\n          }\n      },\n\n      onInputChanged: function (ev) {\n          if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n              return;\n          if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n              let url = ev.target.value.trim();\n              this.$('.image-preview img')[0].onload = () => {\n                  this.$('.image-preview img').removeClass('hidden');\n                  this.updateActiveButton();\n              };\n              this.$('.image-preview img').addClass('hidden')[0].src = url;\n              this.updateActiveButton();\n          } else {\n              this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n              this.updateActiveButton();\n          }\n      },\n\n      addMedia: function () {\n          if (this.$('.btn-add').hasClass('non-active'))\n              return;\n          let file, filename, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n          dfd.done((resolved_file) => {\n              this.parent.view.addFileMessage([resolved_file])\n              this.close();\n          });\n          this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n          this.$('.btn-add').addClass('hidden-disabled');\n          if ($active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' || $active_screen.attr('data-screen') == 'web-address') {\n              file = $active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' ?\n                  $active_screen.find('div.active').attr('data-src') :\n                  $active_screen.find('img:not(.hidden)')[0].src;\n              filename = $active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' ?\n                  $active_screen.find('div.active').attr('data-name') : '';\n\n              this.createFileFromURL(file, filename).then((file) => {\n                  dfd.resolve(file);\n              })\n          } else\n              dfd.resolve(this.current_file);\n      },\n\n      createFileFromURL: async function (url, filename) {\n          let response = await fetch(url);\n          let data = await response.blob();\n          let metadata = {\n              type: data.type\n          };\n          let file = new File([data], filename || url.split('#').shift().split('?').shift().split('/').pop() || 'file', metadata);\n          return file\n      },\n\n      close: function () {\n          this.$el.closeModal({ complete: () => {\n                  this.$el.detach();\n                  this.data.set('visible', false);\n              }\n          });\n      }\n  });\n\nxabber.ChatLocationView = xabber.BasicView.extend({\n    className: 'modal main-modal chat-location ',\n    template: templates.location_popup,\n\n    events: {\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-apply\": \"sendLocation\",\n        \"click #map canvas\": \"closeLocationName\",\n        \"click .nominatim.ol-search input\": \"initializeScrollbar\",\n        \"focusout .nominatim.ol-search input\": \"destroyScrollbar\",\n    },\n\n    _initialize: function (options) {\n        this.view = options.content;\n        this.model = this.view.model;\n        this.account = this.view.account;\n\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                this.initMap();\n                Materialize.updateTextFields();\n            },\n            complete: this.hide.bind(this)\n        });\n    },\n\n    initMap: function () {\n        import('ol-local').then(ol => {\n            ol = ol.default ? ol.default : ol;\n            this.$el.find('.modal-content').switchClass('popup', xabber.popup_coordinates);\n\n            let layers = [ new ol.layer.Tile({ source: new ol.source.OSM() }) ],\n                coordinates = xabber.popup_coordinates ? ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857') : [-9639318.435625363, 1667475.03690917],\n                zoom = xabber.popup_coordinates ? 15 : 0,\n                placemark = new ol.Overlay.Placemark ({\n                    // backgroundColor : 'yellow',\n                    contentColor: '#000',\n                    autoPan: true,\n                    html: '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"48px\" height=\"48px\" viewBox=\"0 0 24 30\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/map-marker\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"36\" height=\"36\"></rect><path d=\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\" id=\"mdi:map-marker\" fill=\"#000000\" fill-rule=\"nonzero\"></path></g></svg>',\n                    anchor: false,\n                    autoPanAnimation: { duration: 250 }\n                }),\n                placemark_my_location = new ol.Overlay.Placemark ({\n                    // backgroundColor : 'yellow',\n                    contentColor: '#000',\n                    autoPan: true,\n                    html: '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"36px\" height=\"36px\"><circle class=\"outer\" cx=\"20\" cy=\"20\" r=\"16\" stroke=\"none\" stroke-width=\"1.5\" fill=\"none\" style=\"opacity: 0.6;\"></circle><circle class=\"inner\" cx=\"20\" cy=\"20\" r=\"8\" stroke=\"white\" stroke-width=\"1.5\" fill=\"none\"></circle></svg>',\n                    anchor: false,\n                    autoPanAnimation: { duration: 250 }\n                });\n\n            let map = new ol.Map\n            ({\ttarget: 'map',\n                view: new ol.View\n                ({\tzoom: zoom,\n                    center: coordinates\n                }),\n                interactions: ol.interaction_defaults({ altShiftDragRotate:false, pinchRotate:false }),\n                layers: layers,\n                overlays: [placemark, placemark_my_location]\n            });\n\n            let getCurrentPositionControl = function (e) {\n                navigator.geolocation.getCurrentPosition(success, error, options);\n            };\n\n            let options = {\n                enableHighAccuracy: true,\n                timeout: 5000,\n                maximumAge: 0\n            };\n\n            function success(pos) {\n                let crd = pos.coords;\n                map.getView().setCenter(ol.proj.transform([crd.longitude, crd.latitude], 'EPSG:4326', 'EPSG:3857'));\n                placemark_my_location.show(ol.proj.transform([crd.longitude, crd.latitude], 'EPSG:4326', 'EPSG:3857'));\n                map.getView().setZoom(17);\n                button_geoposition.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/crosshairs-gps\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"22\" height=\"22\"></rect><path d=\"M12,8 C14.209139,8 16,9.790861 16,12 C16,14.209139 14.209139,16 12,16 C9.790861,16 8,14.209139 8,12 C8,9.790861 9.790861,8 12,8 M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\" id=\"mdi:crosshairs-gps\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n            };\n\n            function error(err) {\n                console.warn(`ERROR(${err.code}): ${err.message}`);\n            };\n\n            let button_geoposition = document.createElement('button');\n            button_geoposition.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/crosshairs-question\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"22\" height=\"22\"></rect><path d=\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13,5 5,8.13 5,12 C5,15.87 8.13,19 12,19 C15.87,19 19,15.87 19,12 C19,8.13 15.87,5 12,5 M11.13,17.25 L12.88,17.25 L12.88,15.5 L11.13,15.5 L11.13,17.25 M12,6.75 C10.07,6.75 8.5,8.32 8.5,10.25 L10.25,10.25 C10.25,9.28 11.03,8.5 12,8.5 C12.97,8.5 13.75,9.28 13.75,10.25 C13.75,12 11.13,11.78 11.13,14.63 L12.88,14.63 C12.88,12.66 15.5,12.44 15.5,10.25 C15.5,8.32 13.93,6.75 12,6.75 Z\" id=\"mdi:crosshairs-question\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n\n\n            button_geoposition.addEventListener('click', getCurrentPositionControl, false);\n\n            let custom_element_position = document.createElement('div');\n\n            if (xabber.popup_coordinates) {\n                custom_element_position.className = 'geoposition placemark-exist ol-control ol-unselectable';\n            }\n            else {\n                custom_element_position.className = 'geoposition ol-control ol-unselectable';\n            }\n            custom_element_position.appendChild(button_geoposition);\n\n            let geoposition = new ol.control.Control({\n                className: 'myControl',\n                element: custom_element_position,\n                target: document.getElementById(\"myCustomControl\")\n            });\n\n            map.addControl(geoposition);\n\n            if (xabber.popup_coordinates) {\n                placemark.show(ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857'));\n                $('.ol-zoom.ol-unselectable.ol-control').addClass('placemark-exist');\n                let getPlacemarkPositionControl = function (e) {\n                    map.getView().setCenter(ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857'));\n                    map.getView().setZoom(15);\n                    $('.ol-location').show()\n\n                };\n\n                let button_placemark_position = document.createElement('button');\n                button_placemark_position.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/map-marker\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"36\" height=\"36\"></rect><path d=\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\" id=\"mdi:map-marker\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n\n\n                button_placemark_position.addEventListener('click', getPlacemarkPositionControl, false);\n\n                let custom_element_placemark_position = document.createElement('div');\n                custom_element_placemark_position.className = 'placemark-position ol-control ol-unselectable';\n                custom_element_placemark_position.appendChild(button_placemark_position);\n\n                let placemark_position = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_placemark_position,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(placemark_position);\n\n                let custom_element_show_location_name = document.createElement('div');\n                custom_element_show_location_name.innerHTML = xabber.location_name || '';\n\n\n                custom_element_show_location_name.className = 'ol-location ol-control ol-unselectable';\n\n                let show_location_name = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_show_location_name,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(show_location_name);\n\n            }\n\n            if (!xabber.popup_coordinates) {\n\n                let send_buttom = document.createElement('button');\n                send_buttom.className = 'btn-apply mdi mdi-28px mdi-send';\n\n                let send_address_div = document.createElement('div');\n                send_address_div.setAttribute(\"id\", \"send_address\");\n                send_address_div.className = 'ol-send-address';\n\n                let send_div = document.createElement('div');\n                send_div.setAttribute(\"id\", \"send_text\");\n                send_div.className = 'ol-send-text';\n\n                let custom_element_send = document.createElement('div');\n                custom_element_send.className = 'ol-send ol-control ol-unselectable';\n                custom_element_send.appendChild(send_address_div);\n                custom_element_send.appendChild(send_div);\n                custom_element_send.appendChild(send_buttom);\n\n                let send = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_send,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(send);\n\n                let sLayer = new ol.layer.Vector({\n                    source: new ol.source.Vector(),\n                    style: new ol.style.Style({\n                        image: new ol.style.Circle({\n                            radius: 5,\n                            stroke: new ol.style.Stroke ({\n                                color: 'rgb(255,165,0)',\n                                width: 3\n                            }),\n                            fill: new ol.style.Fill({\n                                color: 'rgba(255,165,0,.3)'\n                            })\n                        }),\n                        stroke: new ol.style.Stroke ({\n                            color: 'rgb(255,165,0)',\n                            width: 3\n                        }),\n                        fill: new ol.style.Fill({\n                            color: 'rgba(255,165,0,.3)'\n                        })\n                    })\n                });\n\n                map.addLayer(sLayer);\n\n                let search = new ol.control.SearchNominatim (\n                    {\t//target: $(\".options\").get(0),\n                        polygon: $(\"#polygon\").prop(\"checked\"),\n                        reverse: true,\n                        position: true\t// Search, with priority to geo position\n                    });\n\n                map.addControl (search);\n\n                search.on('select', function(e){\n                    sLayer.getSource().clear();\n                    // Check if we get a geojson to describe the search\n                    if (e.search.geojson) {\n                        let format = new ol.format.GeoJSON();\n                        let f = format.readFeature(e.search.geojson, { dataProjection: \"EPSG:4326\", featureProjection: map.getView().getProjection() });\n                        sLayer.getSource().addFeature(f);\n                        let view = map.getView();\n                        let resolution = view.getResolutionForExtent(f.getGeometry().getExtent(), map.getSize());\n                        let zoom = view.getZoomForResolution(resolution);\n                        let center = ol.extent.getCenter(f.getGeometry().getExtent());\n                        // redraw before zoom\n                        setTimeout(function(){\n                            view.animate({\n                                center: center,\n                                zoom: Math.min (zoom, 16)\n                            });\n                        }, 100);\n                    }\n                    else {\n                        map.getView().animate({\n                            center:e.coordinate,\n                            zoom: Math.max (map.getView().getZoom(),16)\n                        });\n                    }\n                });\n\n                function reverseGeocode(json) {\n                    if (!json[0].error) {\n                        let house_number = json[0].address.house_number ? ' ' + json[0].address.house_number : '',\n                            road = json[0].address.road ? json[0].address.road + house_number + ', ' : '',\n                            state = json[0].address.state ? json[0].address.state + ', ' : '',\n                            neighbourhood = json[0].address.neighbourhood ? json[0].address.neighbourhood + ', ' : '',\n                            allotments = json[0].address.allotments ? json[0].address.allotments + ', ' : '',\n                            village = json[0].address.village ? json[0].address.village + ', ' : '',\n                            city = json[0].address.city ? json[0].address.city + ', ' : '',\n                            country = json[0].address.country ? state + json[0].address.country : '',\n                            final_text = ''\n                        if ( !road ){\n                            final_text = neighbourhood + allotments + village + city + country\n                        }\n                        else {\n                            final_text = road + neighbourhood + allotments + village + city + state.replace(', ','')\n                        }\n                        $('#send_address').text(final_text);\n                    }\n                    else {\n                        $('#send_address').text(xabber.getString(\"location_fragment__address_error__title\"));\n                    }\n                }\n\n                map.on('click', function(e) {\n                    placemark.show(e.coordinate);\n                    search.reverseGeocode(e.coordinate, reverseGeocode);\n                    let coordinates = ol.proj.transform(e.coordinate, map.getView().getProjection(), 'EPSG:4326');\n                    $('.ol-control.ol-send').show();\n                    $('#send_text').text(coordinates[1].toFixed(6) + ':' + coordinates[0].toFixed(6));\n                    $('#output').text('geo:' + coordinates[1] + ',' + coordinates[0]);\n                    $('#lat').text(coordinates[1]);\n                    $('#lon').text(coordinates[0]);\n                });\n            }\n            window.setTimeout(function () { map.updateSize(); }, 200)\n        });\n    },\n\n    sendLocation: function (e) {\n        if (this.$('#output').val()) {\n            let body = this.$('#output').val(),\n                legacy_body = '',\n                start_idx = legacy_body.length,\n                end_idx = (body + legacy_body).length,\n                lat = this.$('#lat').val(),\n                lon = this.$('#lon').val(),\n                locations = [{\n                        lat: lat,\n                        lon: lon\n                    }],\n                mutable_content = [{\n                    start: start_idx,\n                    end: end_idx,\n                    type: 'geolocation'\n                    }],\n                attrs = {\n                    from_jid: this.account.get('jid'),\n                    locations: locations,\n                    mutable_content: mutable_content,\n                    message: this.$('#output').val(),\n                    begin: start_idx,\n                    end: end_idx\n                },\n                message = this.model.messages.create(attrs),\n                msg_id = message.get('msgid'),\n                stanza = $msg({\n                    to: this.model.get('jid'),\n                    type: 'chat',\n                    id: msg_id\n                });\n            stanza.c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up();\n            stanza.c('origin-id', {id: msg_id, xmlns: 'urn:xmpp:sid:0'}).up();\n            stanza.c('reference', {\n                xmlns: Strophe.NS.REFERENCE,\n                type: 'mutable',\n                begin: start_idx,\n                end: end_idx\n            }).c('geoloc', {\n                xmlns: Strophe.NS.GEOLOC,\n            }).c('lat').t(lat).up().c('lon').t(lon).up().up().up();\n            stanza.c('body').t(body).up();\n            if (this.model.get('encrypted') && this.account.omemo) {\n                stanza.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n                if ($(stanza.tree()).children('body').length) {\n                    stanza.cnode($(stanza.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                    $(stanza.tree()).children('body').detach()\n                }\n                if ($(stanza.tree()).children('reference').length) {\n                    $(stanza.tree()).children('reference').each((idx, reference) => {\n                        stanza.cnode($(stanza.tree()).children('reference')[idx]).up()\n                    });\n                    $(stanza.tree()).children('reference').detach()\n                }\n                stanza.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n                stanza.c('from', {jid: this.account.get('jid')}).up().up()\n                message.set({xml: $(stanza.tree()).clone()[0]});\n                this.account.omemo.encrypt(this.model.contact, stanza).then((msg) => {\n                    if (msg) {\n                        stanza = msg.message;\n                        message.set('trusted', msg.is_trusted);\n                    }\n                    this.account.sendMsg(stanza);\n                });\n            } else {\n                message.set({xml: $(stanza.tree()).clone()[0]});\n                this.account.sendMsg(stanza);\n            }\n        }\n        this.close();\n    },\n\n    closeLocationName: function (e) {\n        this.$el.find('.ol-location').hide()\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    initializeScrollbar: function () {\n        this.ps_container = this.$('.nominatim.ol-search');\n        this.ps_container.perfectScrollbar(\n            _.extend(this.ps_settings || {}, xabber.ps_settings)\n        );\n    },\n\n    destroyScrollbar: function () {\n        this.ps_container = this.$('.nominatim.ol-search');\n        this.ps_container.perfectScrollbar('destroy');\n    },\n});\n\nxabber.ChatBottomView = xabber.BasicView.extend({\n    className: 'chat-bottom-wrap',\n    ps_selector: '.message-reference-preview-container',\n    template: templates.chat_bottom,\n    avatar_size: constants.AVATAR_SIZES.CHAT_BOTTOM,\n    mention_avatar_size: constants.AVATAR_SIZES.MENTION_ITEM,\n\n    events: {\n        \"click\": \"onClickBottom\",\n        \"click .ql-editor\": \"focusOnInput\",\n        \"click .my-avatar\": \"showAccountSettings\",\n        \"keyup .input-message .rich-textarea\": \"keyUp\",\n        \"keydown .input-message .rich-textarea\": \"keyDown\",\n        \"change .attach-file input\": \"onFileInputChanged\",\n        \"click .attach-location\": \"showLocationPopup\",\n        \"click .attach-media\": \"showMediaPopup\",\n        \"mouseup .message-input-panel\": \"stopWritingVoiceMessage\",\n        \"mousedown .attach-voice-message\": \"writeVoiceMessage\",\n        \"click .chat-mention\": \"onMentionButtonClick\",\n        \"click .close-forward\": \"unsetForwardedMessages\",\n        \"click .close-attachments\": \"removeAttachments\",\n        \"click .send-message\": \"submit\",\n        \"click .markup-text\": \"onShowMarkupPanel\",\n        \"click .reply-message\": \"replyMessages\",\n        \"click .forward-message\": \"forwardMessages\",\n        \"click .pin-message\": \"pinMessage\",\n        \"click .copy-message\": \"copyMessages\",\n        \"click .edit-message\": \"showEditPanel\",\n        \"click .delete-message\": \"deleteMessages\",\n        \"click .close-message-panel\": \"resetSelectedMessages\",\n        \"click .mention-item\": \"inputMention\",\n        \"click .format-text\": \"updateMarkupPanel\",\n        \"click .link-message-reference .mdi-close\": \"removeLinkReference\",\n        \"click .preview-preloader-container .preview-cancel-preloader\": \"stopLoadingLinkReference\",\n        \"click .message-reference-preview-item-file .mdi-close\": \"removeFileSnippet\",\n        \"click .btn-manage-devices\": \"openDevicesWindow\",\n        \"click .ephemeral-timer-time\": \"showEphemeralTimerSelector\",\n    },\n\n    _initialize: function (options) {\n        this.view = options.content;\n        this.model = this.view.model;\n        this.click_counter = 0;\n        let rich_textarea_wrap = this.$('.rich-textarea-wrap');\n        let bindings = {\n            enter: {\n                key: 13,\n                handler: function(range) {\n                    if (xabber.settings.hotkeys !== \"enter\")\n                        this.quill.insertText(range.index, \"\\n\");\n                }\n            },\n            arrow_up: {\n                key: constants.KEY_ARROW_UP,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none') {\n                        let active_item = this.$('.mentions-list').children('.active.mention-item');\n                        if (active_item.length)  {\n                            let $prev_elem = active_item.prev('.mention-item');\n                            active_item.removeClass('active');\n                            if (!$prev_elem.length) {\n                                $prev_elem = this.$('.mentions-list').children('.mention-item').last().addClass('active');\n                                this.$('.mentions-list')[0].scrollTop = this.$('.mentions-list')[0].scrollHeight;\n                            }\n                            $prev_elem.addClass('active');\n                            if ($prev_elem.length && ($prev_elem[0].offsetTop <= this.$('.mentions-list')[0].scrollTop))\n                                this.$('.mentions-list')[0].scrollTop = $prev_elem[0].offsetTop;\n                        }\n                        else {\n                            this.$('.mentions-list')[0].scrollTop = this.$('.mentions-list')[0].scrollHeight;\n                            this.$('.mentions-list').children('.mention-item').last().addClass('active');\n                        }\n                        return false;\n                    }\n                    else\n                        return true;\n                }\n            },\n            arrow_down: {\n                key: constants.KEY_ARROW_DOWN,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none') {\n                        let active_item = this.$('.mentions-list').children('.active.mention-item');\n                        if (active_item.length) {\n                            let $next_elem = active_item.next('.mention-item');\n                            active_item.removeClass('active');\n                            if (!$next_elem.length) {\n                                $next_elem = this.$('.mentions-list').children('.mention-item').first();\n                                this.$('.mentions-list')[0].scrollTop = 0;\n                            }\n                            $next_elem.addClass('active');\n                            if ($next_elem.length && ($next_elem[0].offsetTop + $next_elem[0].clientHeight >= this.$('.mentions-list')[0].scrollTop + this.$('.mentions-list')[0].clientHeight))\n                                this.$('.mentions-list')[0].scrollTop = $next_elem[0].offsetTop - this.$('.mentions-list')[0].clientHeight + $next_elem[0].clientHeight;\n                        }\n                        else {\n                            this.$('.mentions-list')[0].scrollTop = 0;\n                            this.$('.mentions-list').children('.mention-item').first().addClass('active');\n                        }\n                        return false;\n                    }\n                    else\n                        return true;\n                }\n            },\n            arrow_left: {\n                key: constants.KEY_ARROW_LEFT,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none')\n                        return false;\n                    else\n                        return true;\n                }\n            },\n            arrow_right: {\n                key: constants.KEY_ARROW_RIGHT,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none')\n                        return false;\n                    else\n                        return true;\n                }\n            }\n        };\n        this.quill = new Quill(rich_textarea_wrap[0], {\n            modules: {\n                keyboard: {\n                    bindings: bindings\n                },\n                toolbar: [\n                    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n                    this.model.get('group_chat') ? ['mention'] : [],\n                    ['clean']\n                ]\n            },\n            formats: ['bold', 'italic', 'underline', 'strike', 'blockquote', 'clean', 'emoji', 'mention'],\n            placeholder: xabber.getString(this.model.get('encrypted') ? \"chat_bottom__hint_default_encrypted\" : \"chat_bottom__hint_default\"),\n            scrollingContainer: '.rich-textarea',\n            theme: 'snow'\n        });\n        this.quill.container.firstChild.classList.add('rich-textarea');\n        this.$('.ql-mention').prop('disabled', true);\n        this.$('.ql-mention').append('<div class=\"chat-mention\" =\"\">@</div>');\n        this.contact = this.view.contact;\n        this.account = this.view.account;\n        this.fwd_messages = [];\n        this.edit_message = null;\n        this.stopped_loading_link_reference = false;\n        this.link_references = [];\n        this.link_reference_exempted = [];\n        this.currently_loaded_link_references = [];\n        this.attached_files = [];\n        this.loading_link_reference = false;\n        this.$('.account-jid').text(this.account.get('jid'));\n        this.updateAvatar();\n        this.quill.on(\"text-change\", this.onChangedText, this);\n        this.account.on(\"change:image\", this.updateAvatar, this);\n        this.account.on('trusting_updated', this.updateEncrypted, this);\n        if (this.contact) {\n            this.contact.on(\"change:blocked\", this.onBlockedUpdate, this);\n            this.contact.on('update_my_info', this.updateInfoInBottom, this);\n        }\n        this.model.on(\"change:chat_ephemeral_timer\", this.updateEphemeralTimer, this);\n        this.model.on(\"reply_selected_messages\", this.replyMessages, this);\n        this.model.on(\"forward_selected_messages\", this.forwardMessages, this);\n        this.model.on(\"copy_selected_messages\", this.copyMessages, this);\n        this.model.on(\"delete_selected_messages\", this.deleteMessages, this);\n        this.model.on(\"edit_selected_message\", this.showEditPanel, this);\n        this.model.on(\"pin_selected_message\", this.pinMessage, this);\n        this.model.on(\"reset_selected_messages\", this.resetSelectedMessages, this);\n        this.content_view = (this.view.data.get('visible') ? this.view : this.model.messages_view) || this.view;\n        let $rich_textarea = this.$('.input-message .rich-textarea'),\n            rich_textarea = $rich_textarea[0],\n            $rich_textarea_wrap = $rich_textarea.parent('.rich-textarea-wrap'),\n            $placeholder = $rich_textarea.siblings('.placeholder');\n        rich_textarea.onpaste = this.onPaste.bind(this);\n        rich_textarea.oncut = this.onCut.bind(this);\n        rich_textarea.ondragenter = (ev) => {\n            ev.preventDefault();\n            $placeholder.text(xabber.getString(\"chat_bottom__drag_and_drop__text_drop_files_here\"));\n            $rich_textarea_wrap.addClass('file-drop');\n        };\n        rich_textarea.ondragover = (ev) => {\n            ev.preventDefault();\n        };\n        rich_textarea.ondragleave = (ev) => {\n            if ($(ev.relatedTarget).closest('.rich-textarea').length)\n                return;\n            ev.preventDefault();\n            $placeholder.text(xabber.getString(\"chat_bottom__hint_default\"));\n            $rich_textarea_wrap.removeClass('file-drop');\n        };\n        rich_textarea.ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            $placeholder.text(xabber.getString(\"chat_bottom__hint_default\"));\n            $rich_textarea_wrap.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [];\n            this.view.addFileMessage(files);\n        };\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        let onloaded_sprites = 0,\n            i = 0,\n            all_sprites = Object.keys(Emoji.all).length;\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`);\n            $(`<div id=${emoji_list} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: emoji_list})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: emoji_list, title: xabber.getString(constants.EMOJI_LIST_NAME(emoji_list)), tag_name: 'a', emoji_size: 20}));\n        }\n        let window_onclick = function (ev) {\n            if ($(ev.target).closest('.emoticons-panel-wrap').length || $(ev.target).closest('.insert-emoticon').length)\n                return;\n            $emoji_panel_wrap.removeClass('opened');\n            window.removeEventListener(\"click\" , window_onclick);\n        };\n        $emoji_panel.perfectScrollbar(\n                _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.click((ev) => {\n            if (_timeout)\n                clearTimeout(_timeout);\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if ($emoji_panel_wrap.hasClass('opened')) {\n                $emoji_panel_wrap.removeClass('opened');\n                window.removeEventListener( \"click\" , window_onclick);\n            }\n            else {\n                $emoji_panel_wrap.addClass('opened');\n                window.addEventListener( \"click\" , window_onclick);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(() => {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout)\n                clearTimeout(_timeout);\n            if (ev.button)\n                return;\n            let $target = $(ev.target),\n                $target_emoji = $target.closest('.emoji-wrap').find('.emoji');\n            if ($target.closest('.emoji-menu').length)\n                return;\n            $target_emoji.length && this.typeEmoticon($target_emoji.data('emoji'));\n        });\n        this.renderLastEmoticons();\n    },\n\n    render: function (options) {\n        this.$('.message-input-panel').hideIf(options.blocked);\n        this.$('.blocked-msg').showIf(options.blocked);\n        this.$el.switchClass('chat-bottom-blocked-wrap', options.blocked);\n        this.updateAvatar();\n        this.updateEncrypted();\n        this.updateEphemeralTimer();\n        this.$('.ephemeral-timer-time').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        let http_upload = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD);\n        this.content_view = (this.view.data.get('visible') ? this.view : this.model.messages_view) || this.view;\n        this.messages_arr = this.content_view.$el.hasClass('participant-messages-wrap') && this.account.participant_messages || this.content_view.$el.hasClass('messages-context-wrap') && this.account.context_messages || this.model.messages;\n        this.renderLastEmoticons();\n        this.$('.edit-message-wrap').hideIf(this.model.get('encrypted'));\n        this.$('.attach-file').showIf(http_upload);\n        this.$('.attach-location').showIf(xabber.settings.mapping_service);\n        this.$('.attach-media').showIf(this.account.get('gallery_token') && this.account.get('gallery_url'));\n        this.$('.ql-toolbar.ql-snow').switchClass('ql-moved-left', !xabber.settings.mapping_service || !(this.account.get('gallery_token') && this.account.get('gallery_url')));\n        this.$('.ql-toolbar.ql-snow').switchClass('ql-moved-left-extra', !xabber.settings.mapping_service && !(this.account.get('gallery_token') && this.account.get('gallery_url')));\n        if (this.model.get('group_chat')) {\n            this.updateInfoInBottom();\n        }\n        else {\n            this.$('.account-nickname').hide();\n            this.$('.account-badge').hide();\n            this.$('.account-role').hide();\n        }\n        this.focusOnInput();\n        this.manageSelectedMessages();\n        xabber.chat_body.updateHeight();\n        return this;\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.message-actions-panel .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        (Math.max.apply(null, widths) !== 0) && this.$('.message-actions-panel .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    showEphemeralTimerSelector: function () {\n        this.model.showEphemeralTimerSelector();\n    },\n\n    updateEncrypted: function () {\n        this.$el.children('.preloader-wrapper').detach();\n        this.$el.children('.omemo-disabled').detach();\n        this.view.$el.removeClass('encrypted');\n        this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').addClass('hidden').removeClass('encryption-warning').html(\"\");\n        this.$el.attr('data-trust', null);\n        this.$el.attr('data-contact-trust', null);\n        this.$el.find('.warning-wrap').detach();\n        if (!this.model.get('encrypted'))\n            return;\n        if (this.account.omemo) {\n            this.$el.addClass('loading');\n            this.$el.prepend(env.templates.contacts.preloader());\n            this.account.omemo.checkOwnFingerprints().then((is_trusted) => {\n                if (is_trusted == 'none' || is_trusted == 'error') {\n                    let is_scrolled_bottom = this.view.isScrolledToBottom();\n                    this.$el.attr('data-trust', is_trusted);\n                    this.view.$('.chat-message:not([data-trust=untrusted])').attr('data-trust', is_trusted);\n                    this.view.$('.chat-day-indicator:not(.fixed-day-indicator-wrap)').attr('data-trust', is_trusted);\n                    this.view.$el.attr('data-trust', is_trusted);\n                    this.$el.removeClass('loading');\n                    this.$el.children('.preloader-wrapper').detach();\n                    if (is_trusted == 'none')\n                        this.$el.prepend(templates.encryption_warning({color: 'amber', message: xabber.getString(\"omemo__alert_new_device_yours__text_new_device\")}));\n                    else\n                        this.$el.prepend(templates.encryption_warning({color: 'red', message: xabber.getString(\"omemo__alert_keys_changed_yours__text_keys_changed\")}));\n                    xabber.chat_body.updateHeight();\n                    is_scrolled_bottom && this.view.scrollToBottom();\n                    this.account.omemo.checkContactFingerprints(this.contact);\n                    (this.model.get('active') && this.model.get('display')) && this.focusOnInput();\n                } else {\n                    this.account.omemo.checkContactFingerprints(this.contact).then((obj) => {\n                        let is_contact_trusted = obj.trust,\n                            unverified_counter = obj.unverified_counter;\n                        let is_scrolled_bottom = this.view.isScrolledToBottom();\n                        this.$el.removeClass('loading');\n                        this.$el.children('.preloader-wrapper').detach();\n                        if (is_contact_trusted === 'nil') {\n                            this.$el.prepend($(`<div class=\"warning-wrap no-fingerprints\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                            return;\n                        }\n                        if (is_contact_trusted === 'error') {\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                            this.$el.prepend(templates.encryption_warning({color: 'red', message: xabber.getString(\"omemo__alert_keys_changed_partner__text_keys_changed\")}));\n                        } else {\n                            if (is_contact_trusted === 'none') {\n                                this.view.$el.addClass('encrypted');\n                                this.view.$('.chat-notification').removeClass('hidden').addClass('encryption-warning').attr('data-unverified-device-count', unverified_counter).html(templates.content_encryption_warning({message: xabber.getString(\"omemo__alert_new_device_partner__text_new_device\")}));\n                            }\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                        }\n                        this.view.$el.attr('data-trust', is_contact_trusted);\n                        this.view.$('.chat-message:not([data-trust=untrusted])').attr('data-trust', is_contact_trusted);\n                        this.view.$('.chat-day-indicator:not(.fixed-day-indicator-wrap)').attr('data-trust', is_contact_trusted);\n                        xabber.chat_body.updateHeight();\n                        is_scrolled_bottom && this.view.scrollToBottom();\n                        (this.model.get('active') && this.model.get('display')) && this.focusOnInput();\n                    });\n                }\n            });\n        } else {\n            this.$el.addClass('loading');\n            this.$el.prepend($('<div class=\"omemo-disabled warning-wrap\"/>').text(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\")));\n        }\n    },\n\n    openDevicesWindow: function () {\n        if (this.account.omemo) {\n            if (this.$el.attr('data-trust') !== undefined) {\n                this.account.showSettings(null, 'devices');\n            } else if (this.$el.attr('data-contact-trust') !== undefined) {\n                let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n                peer.fingerprints.open();\n            }\n        } else\n            utils.dialogs.error(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\"));\n    },\n\n    updateEphemeralTimer: function () {\n        this.$('.ephemeral-timer-time').addClass('hidden');\n        if (!this.model.get('encrypted'))\n            return;\n        this.$('.ephemeral-timer-time').text(utils.pretty_duration_ephemeral_timer(this.model.get('chat_ephemeral_timer')));\n        utils.pretty_duration_ephemeral_timer(this.model.get('chat_ephemeral_timer')) && this.$('.ephemeral-timer-time').removeClass('hidden');\n    },\n\n    onBlockedUpdate: function () {\n        if (!this.isVisible())\n            return;\n        let is_blocked = this.model.get('blocked');\n        this.$('.message-input-panel').hideIf(is_blocked);\n        this.$('.blocked-msg').showIf(is_blocked);\n        this.$el.switchClass('chat-bottom-blocked-wrap', is_blocked);\n    },\n\n    onClickBottom: function (ev) {\n        if ($(ev.target).closest('.ql-editor.rich-textarea').length) {\n            if (!this.quill.getText().trim().length) {\n                if (++this.click_counter === 3) {\n                    this.click_counter = 0;\n                    this.setOneLiner();\n                }\n            }\n        }\n    },\n\n    updateInfoInBottom: function () {\n        if (this.contact && this.contact.my_info) {\n            let nickname = this.contact.my_info.get('nickname'),\n                badge = this.contact.my_info.get('badge'),\n                avatar = this.contact.my_info.get('b64_avatar'),\n                role = this.contact.my_info.get('role');\n            if (nickname) {\n                this.$('.account-jid').hide();\n                this.$('.account-nickname').show().text(nickname);\n            }\n            else\n                this.$('.account-nickname').hide();\n            if (badge)\n                this.$('.account-badge').show().text(badge);\n            else\n                this.$('.account-badge').hide();\n            if (role && role != 'member')\n                this.$('.account-role').show().text(utils.pretty_name(role));\n            else\n                this.$('.account-role').hide();\n            this.$('.input-toolbar').emojify('.account-badge', {emoji_size: 16});\n            if (!avatar && this.contact.my_info.get('avatar_url'))\n                avatar = this.contact.my_info.get('avatar_url');\n            if (!avatar && this.account.cached_image)\n                avatar = this.account.cached_image;\n            !avatar && (avatar = Images.getDefaultAvatar(nickname));\n            this.$('.my-avatar.circle-avatar').setAvatar(avatar, this.avatar_size);\n        }\n        else {\n            this.$('.account-jid').show();\n            this.$('.account-nickname').hide();\n            this.$('.account-badge').hide();\n            this.$('.account-role').hide();\n        }\n    },\n\n    updateAvatar: function () {\n        let image;\n        if (this.contact && this.contact.get('group_chat')) {\n            if (this.contact.my_info){\n                if (this.contact.my_info.get('b64_avatar'))\n                    image = this.contact.my_info.get('b64_avatar');\n                if (!image && this.contact.my_info.get('avatar_url'))\n                    image = this.contact.my_info.get('avatar_url');\n                if (!image && this.account.cached_image)\n                    image = this.account.cached_image;\n            }\n            !image && (image = Images.getDefaultAvatar(this.contact.my_info && this.contact.my_info.nickname || this.account.get('jid')));\n        }\n        else\n            image = this.account.cached_image;\n        this.$('.my-avatar.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    focusOnInput: function () {\n        if (!xabber.body.$el.siblings('#modals').children('.open:not(.collapsed):not(.plyr-player-popup-view)').length){\n            this.quill.enable();\n            this.quill.focus();\n        } else {\n            this.quill.blur();\n            this.quill.disable();\n        }\n        return this;\n    },\n\n    moveCursorToEnd: function () {\n        this.quill.root.focus();\n        let range = document.createRange(),\n            sel = window.getSelection(),\n            target = this.quill.root.lastElementChild\n            && this.quill.root.lastElementChild.lastChild ? this.quill.root.lastElementChild.lastChild : this.quill.root.lastElementChild;\n        range.selectNodeContents(target);\n        range.collapse(false);\n        sel.removeAllRanges();\n        sel.addRange(range);\n        range.detach(); // optimization\n        this.quill.root.scrollTop = this.quill.root.scrollHeight;\n    },\n\n    keyDown: function (ev) {\n        let $rich_textarea = this.$('.input-message .rich-textarea');\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact') ||\n                ev.keyCode === constants.KEY_BACKSPACE ||\n                ev.keyCode === constants.KEY_DELETE) {\n            return;\n        }\n        if (ev.keyCode === constants.KEY_ENTER || ev.keyCode === 10) {\n            if (this.$('.mentions-list').css('display') !== 'none') {\n                let active_item = this.$('.mentions-list').children('.active.mention-item');\n                active_item.length && active_item.click();\n                ev.preventDefault();\n                return;\n            }\n            let send_on_enter = xabber.settings.hotkeys === \"enter\";\n            if ((send_on_enter && ev.keyCode === constants.KEY_ENTER && !ev.shiftKey) ||\n                    (!send_on_enter && ev.ctrlKey)) {\n                ev.preventDefault();\n                this.submit();\n                return;\n            }\n        }\n        if ($rich_textarea.getTextFromRichTextarea().trim() && !this.view.chat_state && !this.view.edit_message && xabber.settings.typing_notifications)\n            this.view.sendChatState('composing');\n    },\n\n    displayMicrophone: function () {\n        this.$('.mdi-send').addClass('hidden');\n        this.$('.attach-voice-message').removeClass('hidden');\n    },\n\n    displaySend: function () {\n        this.$('.mdi-send').removeClass('hidden');\n        this.$('.attach-voice-message').addClass('hidden');\n    },\n\n    updateMarkupPanel: function (ev) {\n        let $ic_markup = $(ev.target).closest('.format-text');\n        $ic_markup.toggleClass('active');\n        if ($ic_markup.hasClass('active')) {\n            this.$('.ql-toolbar.ql-snow').show();\n            this.$('.last-emoticons').hide();\n        }\n        else {\n            this.$('.ql-toolbar.ql-snow').hide();\n            this.$('.last-emoticons').show();\n        }\n    },\n\n    setOneLiner: function () {\n        let rand_idx = _.random(0, xabber.getOneLiners().length - 1),\n            placeholder = xabber.getOneLiners()[rand_idx].replace(/\\\\n/, \"\");\n        if (!placeholder) {\n            this.setOneLiner();\n            return;\n        }\n        this.updatePlaceholder(placeholder);\n    },\n\n    setDefaultPlaceholder: function () {\n        let placeholder = this.model.get('encrypted') ? xabber.getString(\"chat_bottom__hint_default_encrypted\") : xabber.getString(\"chat_bottom__hint_default\");\n        this.updatePlaceholder(placeholder);\n    },\n\n    updatePlaceholder: function (placeholder) {\n        this.quill.root.setAttribute('data-placeholder', placeholder);\n    },\n\n    changeEncryption: function () {\n        this.model.set('encrypted', !this.model.get('encrypted'));\n    },\n\n    getParticipantsList: function () {\n        let list = [];\n        this.contact.participants.each((participant) => {\n            list.push(participant.get('nickname') || participant.get('jid') || participant.get('id'));\n        });\n        return list.join(', ');\n    },\n\n    onChangedText: function () {\n        let current_height = this.$el.height(),\n            quill_textarea = $(this.quill.container).find('.rich-textarea'),\n            quill_current_height = quill_textarea.prop('scrollHeight');\n        if (quill_current_height !== this.text_input_height) {\n            if (this.text_input_height < quill_current_height){\n                quill_textarea.scrollTop(quill_current_height);\n            }\n            this.text_input_height = quill_current_height;\n        }\n        let quill_content = this.quill.getContents()\n        // if (quill_content && quill_content.ops && quill_content.ops.length){\n        //     let text = quill_content.ops[0].insert;\n        //     if (text && text.trimStart) {\n        //         let trimmed_text = text.trimStart();\n        //         if (text.length != trimmed_text.length){\n        //             quill_content.ops[0].insert = trimmed_text;\n        //             this.quill.setContents(quill_content, 'user');\n        //             this.quill.disable();\n        //             setTimeout(() => {\n        //                 this.focusOnInput();\n        //                 this.quill.root.focus();\n        //             },1)\n        //         }\n        //     }\n        // }\n\n        if (current_height !== this.bottom_height) {\n            this.bottom_height = current_height;\n            this.view.scrolled_to_bottom = this.view.isScrolledToBottom();\n        }\n        clearTimeout(this._timeout_textchange);\n        this._timeout_textchange = setTimeout(() => {\n            this.updateOpenGraphReference(this.quill.getText())\n        }, 500);\n    },\n\n    updateMentionsList: function (mention_text) {\n        mention_text = (mention_text || \"\").toLowerCase();\n        this.contact.searchByParticipants(mention_text, (participants) => {\n            if (participants.length || xabber.getString(\"chat_bottom__mentions_list__item_everyone\").toLowerCase().indexOf(mention_text) > -1 || mention_text === \"*\" || 'all'.indexOf(mention_text) > -1 || 'все'.indexOf(mention_text) > -1) {\n                this.$('.mentions-list').html(\"\").show().perfectScrollbar({theme: 'item-list'});\n                this.$('.mentions-list')[0].scrollTop = 0;\n                participants.forEach((participant) => {\n                    let attrs = _.clone(participant.attributes);\n                    if (!attrs.id)\n                        return;\n                    attrs.nickname = attrs.nickname ? Strophe.xmlescape(attrs.nickname) : attrs.id;\n                    let mention_item = $(templates.group_chats.mention_item(attrs));\n                    mention_item.find('.circle-avatar').setAvatar(participant.get('b64_avatar') || utils.images.getDefaultAvatar(participant.get('nickname') || participant.get('jid') || participant.get('id')), this.mention_avatar_size);\n                    mention_item.find('.nickname').text().replace(mention_text, mention_text.bold());\n                    this.$('.mentions-list').append(mention_item);\n                });\n                let mention_all = $(templates.group_chats.mention_item({jid: \"\", nickname: xabber.getString(\"chat_bottom__mentions_list__item_everyone\"), id: \"\"}));\n                mention_all.find('.circle-avatar').setAvatar(this.contact.cached_image, this.mention_avatar_size);\n                mention_all.find('.one-line.jid').text(this.getParticipantsList());\n                this.$('.mentions-list').append(mention_all);\n                this.$('.mentions-list').children('.mention-item').first().addClass('active');\n            } else\n                this.$('.mentions-list').html(\"\").hide();\n        });\n    },\n\n    onMentionButtonClick: function () {\n        if (this.$('.ql-mention').hasClass('ql-active')){\n            this.$('.ql-mention').prop('disabled', false);\n            this.$('.ql-mention').click();\n            this.$('.ql-mention').prop('disabled', true);\n\n            return;\n        }\n        let selection = this.quill.getSelection() ? this.quill.getSelection().index : (this.quill.getLength() - 1);\n        this.quill.insertText(selection, ' @ ', 'user')\n        this.quill.setSelection(selection + 2, 0)\n        let mention_text = \"\";\n        if (this.contact.participants.length && this.contact.participants.version > 0 && (this.contact.get('group_info') && this.contact.participants && this.contact.get('group_info').members_num == this.contact.participants.length)) {\n            this.updateMentionsList(mention_text);\n        } else {\n            this.contact.participants.participantsRequest({version: 0}, () => {\n                this.updateMentionsList(mention_text);\n            });\n        }\n\n    },\n\n    inputMention: function (ev) {\n        ev && ev.preventDefault();\n        let $rich_textarea = this.$('.rich-textarea'),\n            $participant_item = $(ev.target).closest('.mention-item'),\n            nickname = $participant_item.data('nickname'),\n            id = $participant_item.data('id') || \"\",\n            jid = !this.contact.get('incognito_chat') && $participant_item.data('jid') || \"\",\n            text = $rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\"),\n            caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n            mention_at_regexp = /(^|\\s)@(\\w+)?/g,\n            mention_plus_regexp = /(^|\\s)[+](\\w+)?/g,\n            to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replaceEmoji(),\n            mentions_at = to_caret_text && Array.from(to_caret_text.matchAll(mention_at_regexp)) || [],\n            mentions_plus = to_caret_text && Array.from(to_caret_text.matchAll(mention_plus_regexp)) || [],\n            at_position = mentions_at.length ? mentions_at.slice(-1)[0].index : -1,\n            plus_position = mentions_plus.length ? mentions_plus.slice(-1)[0].index : -1,\n            mention_position = Math.max(at_position, plus_position),\n            mention_text = Array.from(to_caret_text).slice(mention_position, caret_position).join(\"\");\n        (mention_text.length && mention_text[0].match(/\\s/)) && mention_position++;\n        mention_text = mention_text.replace(/\\s?(@|[+])/, \"\");\n        this.$('.mentions-list').hide();\n        this.quill.deleteText(mention_position, (mention_text.length + 1));\n        if (!nickname.length) {\n            if (id.length)\n                nickname = id;\n            else\n                return;\n        }\n        this.insertMention({jid: jid, id: id, nickname: nickname, position: mention_position});\n        this.focusOnInput();\n    },\n\n    insertMention: function (options) {\n        if (!options)\n            return;\n        let id = options.id, jid = options.jid, nickname = options.nickname,\n            is_me = !id && !jid || this.account.get('jid') === jid || this.contact.my_info && this.contact.my_info.get('id') === id,\n            attrs = {jid: jid, id: id, nickname: Strophe.xmlescape(nickname), is_me: is_me},\n            position = options.position;\n        this.quill.insertEmbed(position, 'mention', JSON.stringify(attrs));\n        this.quill.pasteHTML(position + nickname.length, '<text> </text>');\n        this.quill.setSelection(position + nickname.length + 1, 0);\n    },\n\n    showAccountSettings: function () {\n        if (this.contact.get('group_chat')) {\n            if (this.contact.my_info && this.contact.my_rights) {\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(this.contact.my_info, this.contact.my_rights);\n            } else\n                this.contact.getMyInfo(() => {\n                    this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                    this.contact.details_view_right.participants.participant_properties_panel.open(this.contact.my_info, this.contact.my_rights);\n                });\n        } else {\n            this.account.showSettings();\n        }\n    },\n\n    keyUp: function (ev) {\n        let $rich_textarea = $(ev.target).closest('.rich-textarea'),\n            text = $rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\");\n        if (text) {\n            this.click_counter = 0;\n            this.setDefaultPlaceholder();\n        }\n        if (ev.keyCode === constants.KEY_ARROW_UP) {\n            if (!text && !this.model.get('encrypted')) {\n                let $msg = this.view.$(`.chat-message[data-from=\"${this.account.get('jid')}\"]`).last();\n                (!$msg.length && this.contact.participants) && ($msg = this.view.$(`.chat-message[data-from=\"${this.contact.participants.find(m => m.get('jid') === this.account.get('jid')).get('id')}\"]`).last());\n                let edit_msg = this.messages_arr.get($msg.data('uniqueid'));\n                if (!edit_msg)\n                    return;\n                this.edit_message = edit_msg;\n                this.setEditedMessageAttachments(edit_msg);\n                this.setEditedMessage(edit_msg);\n            }\n        }\n        if ((!text || text == \"\\n\") && !this.edit_message && !(this.attached_files && this.attached_files.length) && !(this.link_references && this.link_references.length))\n            this.displayMicrophone();\n        else\n            this.displaySend();\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact') && !this.edit_message) {\n            ev.preventDefault();\n            if (this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0) {\n                let $elem = this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').last();\n                if ($elem.hasClass('link-message-reference')){\n                    let url = $elem.attr('data-original-url');\n                    if (url) {\n                        $elem.remove();\n                        this.removeLinkReferenceByUrl(url);\n                    }\n                } else {\n                    let id = $elem.attr('data-id');\n                    if (id) {\n                        $elem.remove();\n                        this.removeFileSnippetById(id);\n                    }\n                }\n            } else {\n                this.unsetForwardedMessages();\n            }\n        } else if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            ev.preventDefault();\n            this.unsetForwardedMessages();\n        } else {\n            if (ev.keyCode === constants.KEY_ARROW_UP || ev.keyCode === constants.KEY_ARROW_DOWN) {\n                return;\n            }\n            if ((ev.keyCode === constants.KEY_ARROW_LEFT || ev.keyCode === constants.KEY_ARROW_RIGHT) && this.$('.mentions-list').css('display') !== 'none') {\n                this.$('.mentions-list').hide();\n                return;\n            }\n            if ((ev.keyCode === constants.KEY_BACKSPACE || ev.keyCode === constants.KEY_DELETE) && !this.edit_message && !(this.attached_files && this.attached_files.length) && !(this.link_references && this.link_references.length)) {\n                if (!text || text == \"\\n\") {\n                    if (this.$('.fwd-messages-preview').hasClass('hidden'))\n                        this.displayMicrophone();\n                    else\n                        this.displaySend();\n                    $rich_textarea.flushRichTextarea();\n                }\n            }\n            if (ev.keyCode === constants.KEY_SPACE) {\n                let caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n                    to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replaceEmoji();\n                if (to_caret_text[caret_position - 2] && to_caret_text[caret_position - 2].match(/@|[+]/)) {\n                    this.$('.mentions-list').hide();\n                    return;\n                }\n            }\n            if (this.model.get('group_chat')) {\n                let caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n                    mention_at_regexp = /(^|\\s)@(\\w+)?/g,\n                    mention_plus_regexp = /(^|\\s)[+](\\w+)?/g,\n                    to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replace(/\\n$/, \"\").replaceEmoji(),\n                    mentions_at = Array.from(to_caret_text.matchAll(mention_at_regexp)),\n                    mentions_plus = Array.from(to_caret_text.matchAll(mention_plus_regexp)),\n                    at_position = mentions_at.length ? mentions_at.slice(-1)[0].index : -1,\n                    plus_position = mentions_plus.length ? mentions_plus.slice(-1)[0].index : -1,\n                    mention_position = Math.max(at_position, plus_position);\n                if (this.quill.selection.lastRange && this.quill.getLeaf(this.quill.selection.lastRange.index)[0].parent.domNode.tagName.toLowerCase() === 'mention') {\n                    this.$('.mentions-list').hide();\n                    return;\n                }\n                if (!(caret_position > -1) || mention_position === -1) {\n                    this.$('.mentions-list').hide();\n                }\n                if (mention_position > -1) {\n                    let mention_text = Array.from(to_caret_text).slice(mention_position, caret_position).join(\"\").replace(/\\s?(@|[+])/, \"\");\n                        if (this.contact.participants.length && this.contact.participants.version > 0 && (this.contact.get('group_info') && this.contact.participants && this.contact.get('group_info').members_num == this.contact.participants.length)) {\n                            this.updateMentionsList(mention_text);\n                        } else {\n                            this.contact.participants.participantsRequest({version: 0}, () => {\n                                this.updateMentionsList(mention_text);\n                            });\n                        }\n                }\n                else\n                    this.$('.mentions-list').hide();\n            }\n        }\n        $rich_textarea.updateRichTextarea();\n        this.focusOnInput();\n        xabber.chat_body.updateHeight();\n    },\n\n    onCut: function () {\n        if (this.$('.fwd-messages-preview').hasClass('hidden'))\n            this.displayMicrophone();\n        else {\n            this.displaySend();\n        }\n    },\n\n    onPaste: function (ev) {\n        let $rich_textarea = $(ev.target),\n            clipboard_data = ev.clipboardData;\n        // if (clipboard_data) {\n            if (clipboard_data && clipboard_data.files.length > 0) {\n                console.log('true');\n                ev.preventDefault();\n                let image_from_clipboard = clipboard_data.files[clipboard_data.files.length - 1],\n                    blob_image = window.URL.createObjectURL(new Blob([image_from_clipboard])),\n                    options = { blob_image_from_clipboard: blob_image};\n                this.view.addFileMessage([image_from_clipboard]);\n                this.focusOnInput();\n            }\n            else if (clipboard_data && clipboard_data.items.length > 0) {\n                let image_from_clipboard = clipboard_data.items[clipboard_data.items.length - 1];\n                if (image_from_clipboard.kind === 'file') {\n                    console.log('true');\n                    ev.preventDefault();\n                    let blob = image_from_clipboard.getAsFile(),\n                        reader = new FileReader(), deferred = new $.Deferred();\n                    reader.onload = function(event){\n                        let options = { blob_image_from_clipboard: event.target.result};\n                        deferred.resolve();\n                        this.focusOnInput();\n                    };\n                    deferred.done(() => {\n                        blob.name = 'clipboard.png';\n                        this.view.addFileMessage([blob]);\n                    });\n                    reader.readAsDataURL(blob);\n                }\n                // else {\n                //     let text = _.escape(clipboard_data.getData('text')),\n                //         arr_text = Array.from(text);\n                //     arr_text.forEach((item, idx) => {\n                //         if (item == '\\n')\n                //             arr_text.splice(idx, 1, '</p><p>');\n                //         if (item == ' ')\n                //             arr_text.splice(idx, 1, '&nbsp');\n                //     });\n                //     text = \"<p>\" + arr_text.join(\"\") + \"</p>\";\n                //     let range = window.getSelection().getRangeAt(0);\n                //     range.insertNode($('<div>' + text + '</div>')[0]);\n                // }\n            }\n            // else {\n            //     let text = _.escape(clipboard_data.getData('text')),\n            //         arr_text = Array.from(text);\n            //     arr_text.forEach((item, idx) => {\n            //         if (item == '\\n')\n            //             arr_text.splice(idx, 1, '</p><p>');\n            //         if (item == ' ')\n            //             arr_text.splice(idx, 1, '&nbsp');\n            //     });\n            //     text = \"<p>\" + arr_text.join(\"\") + \"</p>\";\n            //     let range = window.getSelection().getRangeAt(0);\n            //     range.insertNode($('<div>' + text + '</div>')[0]);\n            // }\n        // }\n        // if ($rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\") && !this.view.chat_state && !this.view.edit_message && xabber.settings.typing_notifications)\n        //     this.view.sendChatState('composing');\n        // this.focusOnInput();\n        // this.displaySend();\n        // xabber.chat_body.updateHeight();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target,\n            files = [];\n        for (let i = 0; i < target.files.length; i++) {\n            files.push(target.files[i]);\n        }\n\n        if (files && files.length) {\n            this.view.addFileMessage(files);\n            $(target).val('');\n        }\n    },\n\n    updateOpenGraphReference: function (text) {\n        if (!(this.account.get('gallery_token') && this.account.get('gallery_url')))\n            return;\n        let url_regexp = /(((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g,\n            list = text && text.match(url_regexp);\n        list = _.difference(list, this.link_reference_exempted);\n        list = _.difference(list, this.currently_loaded_link_references);\n        if (list && list.length){\n            this.stopped_loading_link_reference = false;\n            this.$('.preview-preloader-container').removeClass('hidden');\n            let request_count = 0;\n            this.link_reference_request_timestamp = Date.now();\n            let request_timestamp = this.link_reference_request_timestamp;\n            list.forEach((item, idx) => {\n                this.account.getOpenGraphData(item, (res) => {\n                    if (this.stopped_loading_link_reference || !(request_timestamp === this.link_reference_request_timestamp))\n                        return;\n                    if (this.currently_loaded_link_references.includes(item)){\n                        request_count++;\n                        if (request_count === list.length)\n                            this.$('.preview-preloader-container').addClass('hidden');\n                        return;\n                    } else {\n                        this.currently_loaded_link_references = this.currently_loaded_link_references.concat([item]);\n                    }\n                    let dfd = new $.Deferred();\n                    dfd.done(() => {\n                        request_count++;\n                        this.displaySend();\n                        this.$('.message-reference-preview').removeClass('hidden');\n                        if (request_count === list.length)\n                            this.$('.preview-preloader-container').addClass('hidden');\n                        res.original_text = item\n                        this.$('.message-reference-preview-container').append($(templates.messages.link_reference({\n                            item: res,\n                            domain: res.url ? utils.getDomainFromUrl(res.url) : res.site_name,\n                            url: null\n                        })));\n                        this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n                            type: 'image',\n                            closeOnContentClick: true,\n                            fixedContentPos: true,\n                            mainClass: 'mfp-no-margins mfp-with-zoom',\n                            image: {\n                                verticalFit: true,\n                                titleSrc: function(item) {\n                                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                                }\n                            },\n                            zoom: {\n                                enabled: true,\n                                duration: 300\n                            }\n                        });\n                        this.link_references = this.link_references.concat(res);\n                        xabber.chat_body.updateHeight();\n                        this.scrollToBottom();\n                    });\n                    if ((res.image_height && res.image_width) || !res.image){\n                        dfd.resolve()\n                    } else {\n                        let img = new Image();\n                        img.onload = (image) => {\n                            res.image_height = img.height;\n                            res.image_width = img.width;\n                            dfd.resolve()\n                        };\n                        img.onerror = img.onabort = (image) => {\n                            res.image = undefined;\n                            dfd.resolve()\n                        };\n                        img.src = res.image;\n                    }\n                }, (err) => {\n                    this.link_reference_exempted = this.link_reference_exempted.concat([item]);\n                    request_count++;\n                    if (request_count === list.length)\n                        this.$('.preview-preloader-container').addClass('hidden');\n                })\n\n            });\n        }\n    },\n\n    removeAttachments: function () {\n        this.removeAllFileSnippets();\n        this.removeAllLinkReferences();\n    },\n\n    stopLoadingLinkReference: function () {\n        this.$('.preview-preloader-container').addClass('hidden');\n        this.stopped_loading_link_reference = true;\n    },\n\n    removeLinkReference: function (ev) {\n        let $elem = $(ev.target).closest('.link-message-reference'),\n            url = $elem.attr('data-original-url');\n        $elem.remove();\n        this.removeLinkReferenceByUrl(url);\n    },\n\n    removeLinkReferenceByUrl: function (url) {\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.link_references = this.link_references.filter(item => item.original_text != url);\n        this.currently_loaded_link_references = this.currently_loaded_link_references.filter(item => item != url);\n        this.link_reference_exempted = this.link_reference_exempted.concat([url]);\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    removeAllLinkReferences: function () {\n        this.stopLoadingLinkReference();\n        this.$('.message-reference-preview-container .link-message-reference').remove();\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.link_references = [];//\n        this.currently_loaded_link_references = [];//\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    addFileSnippets: function (files) {\n        if (files && (this.attached_files.length + files.length) > 10){\n            utils.dialogs.error(xabber.getString(\"too_many_files_at_once\"));\n            return;\n        }\n        if (this.edit_message)\n            return;\n        files && files.length && this.$('.message-reference-preview').removeClass('hidden');\n        files && files.length && this.displaySend();\n        files.forEach((file) => {\n            let id = uuid();\n            file.uid = id;\n            this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                file: file,\n                uid: id,\n                blob: utils.isImageType(file.type) ? file.key ? file.image_prev.src : window.URL.createObjectURL(new Blob([file])) : null,\n                filesize: utils.pretty_size(file.size),\n                typeicon: utils.file_type_icon(file.type),\n                filetype: utils.pretty_file_type(file.type),\n            })));\n            this.attached_files = this.attached_files.concat([file]);\n            xabber.chat_body.updateHeight();\n            this.scrollToBottom();\n        });\n        files && files.length && this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    removeFileSnippet: function (ev) {\n        let $elem = $(ev.target).closest('.message-reference-preview-item-file'),\n            id = $elem.attr('data-id');\n        $elem.remove();\n        this.removeFileSnippetById(id);\n    },\n\n    removeFileSnippetById: function (id) {\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.attached_files = this.attached_files.filter(item => item.uid != id);\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    removeAllFileSnippets: function (ev) {\n        this.$('.message-reference-preview .message-reference-preview-item-file').remove();\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.attached_files = [];\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    setEditedMessageAttachments: function (edit_msg, is_upload) {\n        !is_upload && this.$('.attach-file input').attr('disabled', true);\n        this.removeAllFileSnippets();\n        this.removeAllLinkReferences();\n        let files = edit_msg.get('files') || [],\n            images = edit_msg.get('images') || [],\n            videos = edit_msg.get('videos') || [],\n            link_references = edit_msg.get('link_references') || [];\n        files = files.concat(images).concat(videos);\n        if ((link_references && link_references.length) || (files && files.length)) {\n            this.$('.message-reference-preview').removeClass('hidden');\n            this.displaySend();\n        }\n        link_references.forEach((item) => {\n            this.link_references = this.link_references.concat([item]);\n            this.currently_loaded_link_references = this.currently_loaded_link_references.concat(item.original_text);\n            this.$('.message-reference-preview-container').prepend($(templates.messages.link_reference({\n                item: item,\n                domain: item.url ? utils.getDomainFromUrl(item.url) : item.site_name,\n                url: null\n            })));\n            xabber.chat_body.updateHeight();\n        });\n        files.forEach((file) => {\n            if (!file)\n                return;\n            let id = uuid();\n            file.uid = id;\n            this.attached_files = this.attached_files.concat([file]);\n            if (is_upload){\n                this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                    file: file,\n                    uid: id,\n                    blob: utils.isImageType(file.type) ? file.key ? file.image_prev.src : window.URL.createObjectURL(new Blob([file])) : null,\n                    filesize: utils.pretty_size(file.size),\n                    typeicon: utils.file_type_icon(file.type),\n                    filetype: utils.pretty_file_type(file.type),\n                })));\n            } else{\n                this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                    file: file,\n                    uid: id,\n                    blob: file.sources.length && file.sources[0] && utils.isImageType(file.type) ? file.sources[0] : null,\n                    filesize: utils.pretty_size(file.size),\n                    typeicon: utils.file_type_icon(file.type),\n                    filetype: utils.pretty_file_type(file.type),\n                })));\n            }\n            xabber.chat_body.updateHeight();\n        });\n        ((link_references && link_references.length) || (files && files.length)) && this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    showLocationPopup: function (ev) {\n        if (!xabber.settings.mapping_service)\n            return;xabber\n        xabber.popup_coordinates = undefined;\n        xabber.location_name = undefined;\n        new xabber.ChatLocationView({content: this}).show(ev);\n    },\n\n    showMediaPopup: function (ev) {\n        if (this.edit_message)\n            return;\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let media_view = new xabber.SendMediaView();\n            media_view.render({parent: this, model: this.account});\n        }\n    },\n\n    stopWritingVoiceMessage: function (ev) {\n        let $bottom_panel = this.$('.message-input-panel');\n        if ($bottom_panel.find('.recording').length > 0) {\n            $bottom_panel.find('.recording').removeClass('recording');\n            return;\n        }\n    },\n\n    writeVoiceMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('recording'))\n            $elem.removeClass('recording');\n        else {\n            $elem.addClass('recording ground-color-50');\n            if (!this.model.get('recording_voice_message'))\n                this.initAudio();\n        }\n    },\n\n    initAudio: function() {\n        navigator.getUserMedia = (navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.webkitGetUserMedia || navigator.getUserMedia);\n        if (navigator.getUserMedia) {\n            this.model.set('recording_voice_message', true)\n            let constraints = { audio: true, channelCount: 1 },\n                chunks = [],\n                $mic = this.$('.send-area .attach-voice-message'),\n                onSuccess = (stream) => {\n                if (!$mic.is(\":hover\")) {\n                    $mic.removeClass('recording ground-color-50');\n                    this.model.set('recording_voice_message', false)\n                    return;\n                }\n                let mediaRecorder = new opusRecorder({\n                        encoderPath: opusRecorderEncoderPath,\n                        encoderSampleRate: 16000,\n                        numberOfChannels: 1\n                }),\n                    timer = 1, start_time, end_time,\n                    mic_hover = true;\n                    mediaRecorder.onstart = () => {\n                        if (xabber.settings.typing_notifications) {\n                            this.view.sendChatState('composing', 'voice');\n                            this._chatstate_send_timeout = setInterval(() => {\n                                this.view.sendChatState('composing', 'voice');\n                            }, constants.CHATSTATE_INTERVAL_COMPOSING_AUDIO);\n                        }\n                        start_time = moment.now();\n                        let $bottom_panel = this.$('.message-input-panel'),\n                            $timer_elem = this.$('.input-voice-message .timer'),\n                            $status_msg = this.$('.input-voice-message .voice-msg-status'),\n                            $voice_visualizer = this.$('.input-voice-message .voice-visualizer');\n                        $timer_elem.text('0:00');\n                        $status_msg.css('color', '#9E9E9E').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice\"));\n                        $bottom_panel.addClass('voice-message-recording');\n\n                        let timerId = setInterval(() => {\n                                if ($mic.hasClass('recording') && (timer < constants.VOICE_MSG_TIME)) {\n                                    if (timer%1 == 0)\n                                        $timer_elem.text(utils.pretty_duration(timer));\n                                    timer = (timer*10 + 2)/10;\n                                    mic_hover = $bottom_panel.is(\":hover\");\n                                    if (!mic_hover)\n                                        $status_msg.css('color', '#D32F2F').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice_short\"));\n                                    else\n                                        $status_msg.css('color', '#9E9E9E').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice\"));\n                                }\n                                else\n                                {\n                                    mic_hover = $bottom_panel.is(\":hover\");\n                                    mediaRecorder.stop();\n                                    $mic.removeClass('recording ground-color-50');\n                                    $bottom_panel.removeClass('voice-message-recording');\n                                    this.model.set('recording_voice_message', false)\n                                    clearInterval(timerId);\n                                }\n                            }, 200),\n                            flag = false,\n                            timerIdDot = setInterval(() => {\n                                if ($mic.hasClass('recording')) {\n                                    if (flag)\n                                        $voice_visualizer.css('background-color', '#FFF');\n                                    else\n                                        $voice_visualizer.css('background-color', '#D32F2F');\n                                    flag = !flag;\n                                }\n                                else\n                                    clearInterval(timerIdDot);\n                            }, 500);\n                    };\n\n                    mediaRecorder.start();\n\n                mediaRecorder.onstop = () => {\n                    clearInterval(this._chatstate_send_timeout);\n                    (xabber.settings.typing_notifications) && this.view.sendChatState('paused');\n                    end_time = moment.now();\n                    if (mic_hover && ((end_time - start_time)/1000 >= 1.5)) {\n                        let audio_name = (\"voice message \" + moment().format('YYYY-MM-DD HH:mm:ss') + '.ogg'), audio_type = 'audio/ogg; codecs=opus',\n                            blob = new Blob([chunks], { 'type' : audio_type}),\n                            file = new File([blob], audio_name, {\n                                type: audio_type,\n                            });\n                        file.voice = true;\n                        file.duration = Math.round((end_time - start_time)/1000);\n                        this.view.addFileMessage([file], true);\n                    }\n                    chunks = [];\n                };\n\n                mediaRecorder.ondataavailable = (e) => {\n                    chunks = e;\n                };\n            };\n\n            let onError = (error) => {\n                console.log(xabber.getString(\"file_upload__error\", [error]));\n                $mic.removeClass('recording ground-color-50');\n            };\n\n            window.navigator.getUserMedia(constraints, onSuccess, onError);\n        }\n    },\n\n    typeEmoticon: function (emoji) {\n        if (typeof emoji == 'number')\n            emoji = Number(emoji).toString();\n        let caret_idx = -1;\n        if (this.quill.selection.lastRange)\n            caret_idx = this.quill.selection.lastRange.index;\n        else if (this.quill.selection.savedRange)\n            caret_idx = this.quill.selection.savedRange.index;\n        this.quill.focus();\n        if (!this.edit_message)\n            this.displaySend();\n        (!this.view.chat_state && xabber.settings.typing_notifications) && this.view.sendChatState('composing');\n        this.quill.insertText(caret_idx++, emoji);\n        if (this.quill.getFormat(caret_idx, 1).mention) {\n            this.quill.formatText(caret_idx, 1, 'mention', false);\n        }\n        this.quill.setSelection(caret_idx + 1);\n        xabber.chat_body.updateHeight();\n    },\n\n    renderLastEmoticons: function () {\n        if (!this.account.chat_settings)\n            return;\n        let cached_last_emoji = this.account.chat_settings.getLastEmoji(),\n            $last_emoticons = this.$('.last-emoticons').empty(), emoji;\n        if (cached_last_emoji.length < 7) {\n            for (let idx = 0; idx < 7; idx++) {\n                emoji = Emoji.getByIndex(idx);\n                this.account.chat_settings.updateLastEmoji(emoji);\n            }\n        }\n        cached_last_emoji = this.account.chat_settings.getLastEmoji();\n        for (let idx = 0; idx < 7; idx++) {\n            $('<div class=\"emoji-wrap\"/>').html(\n                cached_last_emoji[idx] && cached_last_emoji[idx].emojify({tag_name: 'div', emoji_size: 20})\n            ).appendTo($last_emoticons);\n        }\n        $last_emoticons.find('.emoji-wrap').mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button) {\n                return;\n            }\n            let $target_text = $(ev.target).closest('.emoji-wrap').text();\n            this.typeEmoticon($target_text);\n        });\n    },\n\n    submit: function (ev, forced) {\n        let $rich_textarea = this.$('.input-message .rich-textarea'),\n            mentions = [],\n            markup_references = [],\n            blockquotes = [],\n            link_references = this.link_references,\n            attached_files = this.attached_files,\n            text = $rich_textarea.getTextFromRichTextarea(),\n            dfd = new $.Deferred();\n\n\n        if (this.model.get('encrypted') && this.view.$('.chat-notification').hasClass('encryption-warning') && !forced){\n            let unverified_counter = this.view.$('.encryption-warning').attr('data-unverified-device-count');\n            utils.dialogs.ask_extended(xabber.getQuantityString(\"dialog_unverified_devices__header\", unverified_counter || 1), xabber.getQuantityString(\"dialog_unverified_devices__text\", unverified_counter || 1),\n                {modal_class: 'modal-unverified-devices', no_dialog_options: true},\n                { ok_button_text: xabber.getString(\"omemo__alert_new_device__button_manage_devices\"), optional_button: 'send-anyway', optional_button_text: xabber.getString(\"dialog_unverified_devices__send\")})\n                .done((result) => {\n                if (result) {\n                    if (result === 'send-anyway'){\n                        this.submit(ev, true);\n                    }\n                    else{\n                        this.openDevicesWindow();\n                    }\n                }\n            });\n            return;\n        }\n\n        dfd.done(() => {\n            this.$('.mentions-list').html(\"\").hide();\n            $rich_textarea.find('.emoji').each((idx, emoji_item) => {\n                let emoji = emoji_item.innerText;\n                this.account.chat_settings.updateLastEmoji(emoji);\n            });\n            let content_concat = [];\n            if (text.length >= constants.STANZA_MAX_SIZE) {\n                utils.dialogs.error(xabber.getString(\"message__error_big_stanza\"));\n                $rich_textarea.flushRichTextarea();\n                return;\n            }\n            if (text.length) {\n                this.quill.getContents().forEach((content) => {\n                    if (content.attributes) {\n                        let content_attrs = [],\n                            start_idx = content_concat.length,\n                            end_idx = start_idx + ((content.insert && content.insert.emoji) ? 1 : _.escape(content.insert).length);\n                        for (let attr in content.attributes)\n                            (attr !== 'alt' && attr !== 'blockquote') && content_attrs.push(attr);\n                        if (content_attrs.indexOf('mention') > -1) {\n                            let mention_idx = content_attrs.indexOf('mention'),\n                                is_gc = this.contact.get('group_chat'),\n                                target = $($rich_textarea.find('mention')[mentions.length]).attr('data-target');\n                            content_attrs.splice(mention_idx, mention_idx + 1);\n                            target = is_gc ? ('xmpp:' + this.contact.get('jid') + target) : ('xmpp:' + target);\n                            mentions.push({\n                                start: start_idx,\n                                end: end_idx,\n                                target: target,\n                                is_gc: is_gc\n                            });\n                        }\n                        if (content.attributes.blockquote) {\n                            if (content_concat.length) {\n                                Array.from(content.insert).forEach((ins) => {\n                                    let quote_start_idx = (content_concat.lastIndexOf('\\n') < 0) ? 0 : (content_concat.lastIndexOf('\\n') + 1),\n                                        quote_end_idx = content_concat.length;\n                                    blockquotes.push({\n                                        marker: constants.QUOTE_MARKER,\n                                        start: quote_start_idx,\n                                        end: quote_end_idx + constants.QUOTE_MARKER.length\n                                    });\n                                    text = Array.from(_.escape(text));\n\n                                    if (quote_start_idx === quote_end_idx) {\n                                        text[quote_start_idx - 1] += constants.QUOTE_MARKER;\n                                        content_concat[quote_start_idx] = constants.QUOTE_MARKER;\n                                    }\n                                    else {\n                                        text[quote_start_idx] = constants.QUOTE_MARKER + text[quote_start_idx];\n                                        content_concat[quote_start_idx] = constants.QUOTE_MARKER + content_concat[quote_start_idx];\n                                    }\n                                    (quote_end_idx > text.length) && (quote_end_idx = text.length);\n                                    text[quote_end_idx - 1] += '\\n';\n\n                                    text = _.unescape(text.join(\"\"));\n                                    content_concat = Array.from(content_concat.join(\"\"));\n\n                                    markup_references.forEach((markup_ref) => {\n                                        if (markup_ref.start >= quote_start_idx) {\n                                            markup_ref.start += constants.QUOTE_MARKER.length;\n                                            markup_ref.end += constants.QUOTE_MARKER.length;\n                                        }\n                                    });\n\n                                    content_concat = content_concat.concat(Array.from(_.escape(ins)));\n                                })\n                            }\n                        }\n                        content_attrs.length && markup_references.push({\n                            start: start_idx,\n                            end: end_idx,\n                            markup: content_attrs\n                        });\n                    }\n                    if (content.insert && content.insert.emoji) {\n                        content_concat = content_concat.concat(Array.from($(content.insert.emoji).data('emoji')));\n                    }\n                    else if (content.attributes && content.attributes.blockquote) {\n                    }\n                    else\n                        content_concat = content_concat.concat(Array.from(_.escape(content.insert)));\n                });\n            }\n            let start_length = text.length;\n            text = text.trimStart();\n            if (start_length > text.length) {\n                let delta = start_length - text.length;\n                mentions.forEach((mention) => {\n                    mention.start -= delta;\n                    mention.end -= delta;\n                });\n                markup_references.forEach((markup_reference) => {\n                    markup_reference.start -= delta;\n                    markup_reference.end -= delta;\n                });\n                blockquotes.forEach((blockquote) => {\n                    blockquote.start -= delta;\n                    blockquote.end -= delta;\n                });\n            }\n            if (link_references && link_references.length) {\n                link_references = link_references.filter(item => item.original_text);\n                link_references.forEach((link_reference) => {\n                    if (link_reference && link_reference.original_text) {\n                        link_reference.start = text.indexOf(link_reference.original_text);\n                        if (link_reference.start != -1) {\n                            link_reference.start = 0;\n                            link_reference.end = 0;\n                        }\n                    }\n                });\n            }\n            this.removeAllLinkReferences();\n            this.link_reference_exempted = [];\n            this.removeAllFileSnippets();\n            text = text.trimEnd();\n            $rich_textarea.flushRichTextarea();\n            this.quill.focus();\n            this.displayMicrophone();\n            if (this.edit_message) {\n                this.editMessage(text, {mentions: mentions, markup_references: markup_references, link_references: link_references, attached_files: attached_files, blockquotes: blockquotes});\n                $rich_textarea.placeCaretAtEnd();\n                return;\n            }\n            if (text || this.fwd_messages.length || (attached_files && attached_files.length) || (link_references && link_references.length)) {\n                if (this.model.get('saved') && this.fwd_messages.length && !text)\n                    this.fwd_messages.forEach((message) => {\n                        this.view.onSubmit(\"\", [message]);\n                    });\n                else\n                    this.view.onSubmit(text, this.fwd_messages, {mentions: mentions, markup_references: markup_references, link_references: link_references, attached_files: attached_files, blockquotes: blockquotes});\n            }\n            this.unsetForwardedMessages();\n            xabber.chats_view.clearSearch();\n            if (this.model.messages_view)\n                if (this.model.messages_view.data.get('visible'))\n                    xabber.chats_view.openChat(this.model.item_view, {right_contact_save: true, clear_search: true, screen: xabber.body.screen.get('name')});\n            $rich_textarea.placeCaretAtEnd();\n        });\n        if (attached_files && attached_files.length) {\n            let failed_files = [],\n                files_count = 0,\n                file_check_dfd = new $.Deferred();\n            file_check_dfd.done(() => {\n                if (failed_files.length){\n                    failed_files.forEach((file) => {\n                        this.$(`.message-reference-preview-item-file[data-id=\"${file.uid}\"]`).remove();\n                        this.removeFileSnippetById(file.uid);\n                    });\n                    utils.dialogs.error(\n                        '' + _.pluck(failed_files, 'name').join(` — ${xabber.getString(\"message__file_was_deleted__file_label\")}. \\n`) + ` — ${xabber.getString(\"message__file_was_deleted__file_label\")}.`,\n                        {},\n                        xabber.getQuantityString(\"message__file_was_deleted\", failed_files.length)\n                    );\n                    dfd.reject();\n                } else {\n                    dfd.resolve();\n                }\n            });\n            if (!this.edit_message) {\n                attached_files.forEach((file) => {\n                    utils.tryReadingFile(file).then(()=> {\n                        files_count++;\n                        if (attached_files.length === files_count) {\n                            file_check_dfd.resolve();\n                        }\n                    }, ()=> {\n                        failed_files = failed_files.concat([file]);\n                        files_count++;\n                        if (attached_files.length === files_count) {\n                            file_check_dfd.resolve();\n                        }\n                    });\n                });\n            } else {\n                file_check_dfd.resolve();\n            }\n        } else {\n            dfd.resolve();\n        }\n    },\n\n    setEditedMessage: function (message) {\n        this.click_counter = 0;\n        this.setDefaultPlaceholder();\n        let msg_text = message.get('message') || \"\";\n        this.$('.fwd-messages-preview').showIf(this.edit_message);\n        this.$('.fwd-messages-preview .msg-author').text(xabber.getString(\"edit_message__header\"));\n        this.$('.fwd-messages-preview .msg-text').html(Strophe.xmlescape(msg_text));\n        this.$('.fwd-messages-preview').emojify('.msg-text', {emoji_size: 18});\n        this.displaySend();\n        xabber.chat_body.updateHeight();\n        let markup_body = utils.markupBodyMessage(message, 'mention'),\n            emoji_node = markup_body.emojify({tag_name: 'div'}),\n            arr_text = emoji_node.split('\\n');\n        arr_text.forEach((item, idx) => {\n            if (!item.includes('</blockquote>'))\n                arr_text[idx] = '<p>' + arr_text[idx] + '</p>';\n        });\n        emoji_node = arr_text.join(\"\");\n        this.quill.setText(\"\");\n        this.quill.root.innerHTML = emoji_node;\n        this.moveCursorToEnd();\n        this.focusOnInput();\n    },\n\n    setRedactedUploadMessage: function (message) {\n        this.click_counter = 0;\n        this.setDefaultPlaceholder();\n        let msg_text = message.get('message') || \"\";\n        this.displaySend();\n        xabber.chat_body.updateHeight();\n        let markup_body = utils.markupBodyMessage(message, 'mention'),\n            emoji_node = markup_body.emojify({tag_name: 'div'}),\n            arr_text = emoji_node.split('\\n');\n        arr_text.forEach((item, idx) => {\n            if (!item.includes('</blockquote>'))\n                arr_text[idx] = '<p>' + arr_text[idx] + '</p>';\n        });\n        emoji_node = arr_text.join(\"\");\n        this.quill.setText(\"\");\n        this.quill.root.innerHTML = emoji_node;\n        this.moveCursorToEnd();\n        this.focusOnInput();\n    },\n\n    setForwardedMessages: function (messages) {\n        this.fwd_messages = messages || [];\n        this.$('.fwd-messages-preview').showIf(messages.length);\n        if (messages.length) {\n            let msg = messages[0],\n                msg_author, msg_text, image_preview, $img_html_preview;\n            if (messages.length > 1) {\n                msg_text = xabber.getQuantityString(\"forwarded_messages_count\", messages.length);\n            } else {\n                if (msg.get('forwarded_message')) {\n                    msg_text = xabber.getQuantityString(\"forwarded_messages_count\", messages.length);\n                }\n                else {\n                    msg_text = (msg.get('message') || msg.get('original_message')).emojify();\n                    let fwd_images = msg.get('images') || [],\n                        fwd_files = msg.get('files') || [],\n                        fwd_locations = msg.get('locations');\n                    msg.get('videos') && msg.get('videos').length && (fwd_files = fwd_files.concat(msg.get('videos')));\n                    if ((fwd_images && fwd_images.length) && (fwd_files && fwd_files.length)) {\n                        msg_text = fwd_images.length + fwd_files.length + ' attachments';\n                    }\n                    else {\n                        if (fwd_images && fwd_images.length) {\n                            if (fwd_images.length > 1) {\n                                msg_text =xabber.getQuantityString(\"recent_chat__last_message__images\", fwd_images.length);\n                            }\n                            else {\n                                image_preview = _.clone(msg.get('images')[0]);\n                                $img_html_preview = this.createPreviewImage(image_preview);\n                            }\n                        }\n                        if (fwd_files && fwd_files.length) {\n                            if (fwd_files.length > 1) {\n                                msg_text = xabber.getQuantityString(\"recent_chat__last_message__files\", fwd_files.length);\n                            }\n                            else {\n                                let filesize = fwd_files[0].size;\n                                msg_text = filesize ? fwd_files[0].name + \",   \" + filesize : fwd_files[0].name;\n                            }\n                        }\n                        if (fwd_locations && fwd_locations.length) {\n                            if (fwd_locations.length > 1) {\n                                msg_text = xabber.getQuantityString(\"recent_chat__last_message__locations\", fwd_locations.length);\n                            }\n                            else {\n                                msg_text = xabber.getString(\"recent_chat__last_message__locations_plural_0\");\n                            }\n                        }\n                    }\n                }\n            }\n            let from_jid = msg.get('from_jid');\n            if (msg.isSenderMe()) {\n                msg_author = this.account.get('name');\n            } else {\n                msg_author = (msg.get('user_info') && msg.get('user_info').nickname) || (this.account.contacts.get(from_jid) ? this.account.contacts.get(from_jid).get('name') : from_jid);\n            }\n            this.$('.fwd-messages-preview .msg-author').text(msg_author);\n            if (_.isUndefined(image_preview)) {\n                this.$('.fwd-messages-preview .msg-text').html(msg_text);\n            }\n            else {\n                this.$('.fwd-messages-preview .msg-text').html($img_html_preview);\n            }\n        }\n        xabber.chat_body.updateHeight();\n        this.displaySend();\n    },\n\n    onShowMarkupPanel: function (ev) {\n        let $clicked_icon = $(ev.target),\n            is_panel_opened = $clicked_icon.hasClass('opened');\n        this.$('.last-emoticons').showIf(is_panel_opened);\n        this.$('.markup-panel').showIf(!is_panel_opened);\n        $clicked_icon.switchClass('opened', !is_panel_opened);\n    },\n\n    createPreviewImage: function(image) {\n        let imgContent = new Image();\n            imgContent.src = image.sources[0];\n        $(imgContent).addClass('fwd-img-preview');\n        return imgContent;\n    },\n\n    unsetForwardedMessages: function (ev) {\n        ev && ev.preventDefault && ev.preventDefault();\n        let $rich_textarea = this.$('.input-message .rich-textarea');\n        this.fwd_messages = [];\n        if (this.edit_message) {\n            this.removeAllFileSnippets();\n            this.removeAllLinkReferences();\n            this.$('.attach-file input').attr('disabled', false);\n            $rich_textarea.flushRichTextarea();\n        }\n        this.edit_message = null;\n        this.$('.fwd-messages-preview').addClass('hidden');\n        let text = $rich_textarea.getTextFromRichTextarea();\n        if (!text || text == \"\\n\")\n            this.displayMicrophone();\n        else\n            this.displaySend();\n        xabber.chat_body.updateHeight();\n        this.focusOnInput();\n    },\n\n    resetSelectedMessages: function () {\n        this.content_view.$('.chat-message.selected').removeClass('selected');\n        this.manageSelectedMessages();\n    },\n\n    manageSelectedMessages: function () {\n        let $selected_msgs = this.content_view.$('.chat-message.selected'),\n            $input_panel = this.$('.message-input-panel'),\n            $message_actions = this.$('.message-actions-panel');\n            length = $selected_msgs.length;\n        $input_panel.hideIf(this.model.get('blocked') || length);\n        $message_actions.showIf(length);\n        this.model.get('blocked') && this.$('.blocked-msg').hideIf(length);\n        if (length) {\n            this.setButtonsWidth();\n            let my_msg = false;\n            if (length === 1) {\n                if ($selected_msgs.first().data('from') === this.account.get('jid'))\n                    my_msg = true;\n                if (this.contact && this.contact.my_info)\n                    if ($selected_msgs.first().data('from') === this.contact.my_info.get('id'))\n                        my_msg = true;\n                if ($selected_msgs.first().find('.mdi-play').length)\n                    my_msg = false;\n            }\n            $message_actions.find('.pin-message-wrap').showIf(this.model.get('group_chat')).switchClass('non-active', ((length !== 1) && this.model.get('group_chat')));\n            $message_actions.find('.reply-message-wrap').switchClass('non-active', this.model.get('blocked'));\n            $message_actions.find('.forward-message-wrap').switchClass('non-active', this.model.get('encrypted'));\n            $message_actions.find('.edit-message-wrap').switchClass('non-active', !((length === 1) && my_msg) || this.content_view.$('.chat-message.saved-main.selected').length || this.model.get('blocked'));\n            !this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').removeClass('hidden').addClass('msgs-counter').text(xabber.getQuantityString(\"chat_screen__bottom_panel__selected_messages__text\", length));\n        } else {\n            !this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').addClass('hidden').removeClass('msgs-counter').text(\"\");\n            this.focusOnInput();\n        }\n    },\n\n    pinMessage: function () {\n        if (!this.model.get('active'))\n            return;\n        if (this.$('.pin-message-wrap').hasClass('non-active'))\n            return;\n        let $msg = this.content_view.$('.chat-message.selected').first(),\n            pinned_msg = this.messages_arr.get($msg.data('uniqueid')),\n            msg_id = pinned_msg.get('stanza_id');\n        this.resetSelectedMessages();\n        let iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('update', {xmlns: Strophe.NS.GROUP_CHAT})\n            .c('pinned-message').t(msg_id);\n        this.account.sendIQFast(iq, () => {},\n            (error) => {\n                if ($(error).find('not-allowed').length)\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            });\n    },\n\n    copyMessages: function () {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            msg && msgs.push(msg);\n        });\n        this.resetSelectedMessages();\n        this.pushMessagesToClipboard(msgs);\n    },\n\n    editMessage: function (text, text_markups) {\n        let original_body = Array.from(Strophe.xmlescape(this.edit_message.get('original_message') || \"\")),\n            forwarded_body = \"\",\n            mutable_refs = this.edit_message.get('mutable_content') || [],\n            groupchat_ref = mutable_refs && mutable_refs.find(item => item.type === 'groupchat'),\n            stanza_id = this.edit_message.get('stanza_id'),\n            forward_ref = mutable_refs && mutable_refs.filter(item => item.type === 'forward'),\n            markups = text_markups.markup_references || [],\n            files = text_markups.attached_files || [],\n            link_references = text_markups.link_references || [],\n            blockquotes = text_markups.blockquotes || [],\n            mentions = text_markups.mentions || [],\n            iq = $iq({type: 'set', to: (this.contact && this.contact.get('group_chat')) ? this.contact.get('full_jid') : this.account.get('jid')}).c('replace', {\n                xmlns: Strophe.NS.REWRITE,\n                type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model),\n                id: stanza_id\n            }),\n            $message = $build('message').attrs({xmlns: undefined});\n        $message.c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up();\n        forward_ref && forward_ref.forEach((fwd, idx) => {\n            let fwd_msg = this.edit_message.get('forwarded_message')[idx],\n                gc_length = groupchat_ref && (groupchat_ref.start + groupchat_ref.end);\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: (groupchat_ref ? (fwd.start - gc_length) : fwd.start), end: (groupchat_ref ? (fwd.end - gc_length) : fwd.end), type: 'mutable'})\n                .c('forwarded', {xmlns: Strophe.NS.FORWARD})\n                .c('delay', {\n                    xmlns: 'urn:xmpp:delay',\n                    stamp: fwd_msg.get('time')\n                }).up().cnode(fwd_msg.get('xml')).up().up().up();\n            forwarded_body += original_body.slice(fwd.start, fwd.end).join('');\n        });\n        markups.forEach((markup) => {\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: markup.start + Array.from(forwarded_body).length, end: markup.end + Array.from(forwarded_body).length, type: 'decoration'});\n            for (let idx in markup.markup)\n                $message.c(markup.markup[idx], {xmlns: Strophe.NS.MARKUP}).up();\n            $message.up();\n        });\n        blockquotes.forEach((blockquote) => {\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: blockquote.start + Array.from(forwarded_body).length, end: blockquote.end + Array.from(forwarded_body).length, type: 'decoration'})\n                .c('quote', {xmlns: Strophe.NS.MARKUP}).up().up();\n        });\n        mentions.forEach((mention) => {\n            let mention_attrs = {xmlns: Strophe.NS.MARKUP};\n            mention.is_gc && (mention_attrs.node = Strophe.NS.GROUP_CHAT);\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: mention.start + Array.from(forwarded_body).length, end: mention.end + Array.from(forwarded_body).length, type: 'decoration'})\n                .c('mention', mention_attrs).t(mention.target).up().up();\n        });\n\n        if (files && files.length) {\n            mutable_refs = mutable_refs.filter(item => item.type !== 'file')\n            files.forEach((file, idx) => {\n                (idx === 0) && (text += '\\n');\n                let legacy_body = file.sources[0] + ((idx != files.length - 1) ? '\\n' : \"\"),\n                    start_idx = Array.from(_.escape(text)).length + Array.from(forwarded_body).length,\n                    end_idx = start_idx + legacy_body.length;\n                $message.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: start_idx,\n                    end: end_idx\n                });\n                file.voice && $message.c('voice-message', {xmlns: Strophe.NS.VOICE_MESSAGE});\n                $message.c('file-sharing', {xmlns: Strophe.NS.FILES}).c('file');\n                file.type && $message.c('media-type').t(file.type).up();\n                file.thumbnail && stanza.c('thumbnail', {\n                    xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA_THUMBNAIL,\n                    uri: file.thumbnail\n                }).up();\n                file.created && $message.c('created').t(file.created).up();\n                file.name && $message.c('name').t(file.name).up();\n                file.size && $message.c('size').t(file.size).up();\n                file.height && $message.c('height').t(file.height).up();\n                file.width && $message.c('width').t(file.width).up();\n                file.duration && $message.c('duration').t(file.duration).up();\n                file.description && $message.c('desc').t(file.description).up();\n                $message.up().c('sources');\n                file.sources.forEach((u) => {\n                    if (file.key)\n                        u = u.replace(/^(https|http)/, 'aescbc') + '#' + utils.ArrayBuffertoBase64(file.key);\n                    $message.c('uri').t(u).up();\n                });\n                $message.up().up().up();\n                file.voice && $message.up();\n                text += legacy_body;\n                mutable_refs.push({start: start_idx, end: end_idx});\n            });\n        }\n\n        if (link_references && link_references.length) {\n            mutable_refs = mutable_refs.filter(item => item.type !== 'link_reference')\n            link_references.forEach((link_reference, idx) => {\n                if (link_reference.start === -1) {\n                    link_reference.start = Array.from(_.escape(text)).length + Array.from(forwarded_body).length;\n                    text = text + '\\n' + link_reference.original_text;\n                    link_reference.end = link_reference.start + link_reference.original_text.length + 1;\n                }\n                $message.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: link_reference.start,\n                    end: link_reference.end,\n                    type: 'mutable',\n                }).c('ogp', { xmlns: Strophe.NS.OGP, url: link_reference.original_text });\n                link_reference.site && $message.c('meta', { property: 'og:site_name', content: link_reference.site}).up();\n                link_reference.type && $message.c('meta', { property: 'og:type', content: link_reference.type}).up();\n                link_reference.title && $message.c('meta', { property: 'og:title', content: link_reference.title}).up();\n                link_reference.url && $message.c('meta', { property: 'og:url', content: link_reference.url}).up();\n                link_reference.description && $message.c('meta', { property: 'og:description', content: link_reference.description}).up();\n                link_reference.image && $message.c('meta', { property: 'og:image', content: link_reference.image}).up();\n                link_reference.image_width && $message.c('meta', { property: 'og:image:width', content: link_reference.image_width}).up();\n                link_reference.image_height && $message.c('meta', { property: 'og:image:height', content: link_reference.image_height}).up();\n                link_reference.video_url && $message.c('meta', { property: 'og:video:url', content: link_reference.video_url}).up();\n                $message.up().up();\n                mutable_refs.push({start: link_reference.start, end: link_reference.end});\n            });\n        }\n        mutable_refs && mutable_refs.length && this.edit_message.set({mutable_content: mutable_refs});\n        if (!(Strophe.xmlunescape(forwarded_body) + text)){\n            this.deleteMessages(null, [this.edit_message], true);\n            return;\n        }\n        $message.c('body').t(Strophe.xmlunescape(forwarded_body) + text).up();\n        this.unsetForwardedMessages();\n        if (this.model.get('encrypted')) {\n            let decrypted_msg = $message.tree().innerHTML;\n            $message.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n            if ($($message.tree()).children('body').length) {\n                $message.cnode($($message.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                $($message.tree()).children('body').detach()\n            }\n            if ($($message.tree()).children('reference').length) {\n                $($message.tree()).children('reference').each((idx, reference) => {\n                    $message.cnode($($message.tree()).children('reference')[idx]).up()\n                });\n                $($message.tree()).children('reference').detach()\n            }\n            $message.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n            $message.c('from', {jid: this.account.get('jid')}).up().up()\n            this.account.omemo.encrypt(this.contact, $message).then((msg) => {\n                iq.cnode(msg.message.tree());\n                this.account.omemo.cached_messages.putMessage(this.contact, stanza_id, {envelope: decrypted_msg});\n                this.account.sendIQFast(iq);\n            });\n        } else {\n            iq.cnode($message.tree());\n            this.account.sendIQFast(iq);\n        }\n    },\n\n    showEditPanel: function () {\n        if (!this.model.get('active') || this.model.get('encrypted'))\n            return;\n        if (this.$('.edit-message-wrap').hasClass('non-active'))\n            return;\n        let $msg = this.content_view.$('.chat-message.selected').first(),\n            edit_msg = this.messages_arr.get($msg.data('uniqueid'));\n        this.edit_message = edit_msg;\n        this.resetSelectedMessages();\n        this.setEditedMessageAttachments(edit_msg);\n        this.setEditedMessage(edit_msg);\n    },\n\n    deleteMessages: function (ev, messages, on_rewrite) {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [],\n            my_msgs = 0,\n            dialog_options = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            msg && msgs.push(msg);\n            msg.isSenderMe() && my_msgs++;\n        });\n        messages && messages.forEach((item, idx) => {\n            msgs.push(item);\n            item.isSenderMe() && my_msgs++;\n        });\n        if (this.account.server_features.get(Strophe.NS.REWRITE) || this.model.get('group_chat')) {\n            let dfd = new $.Deferred();\n            dfd.done(() => {\n                utils.dialogs.ask(xabber.getString(\"dialog_delete_messages__header\"), xabber.getQuantityString(\"delete_message_question\", msgs.length),\n                    dialog_options, {ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n                    if (!res) {\n                        this._clearing_history = false;\n                        messages && messages.length && this.focusOnInput();\n                        return;\n                    }\n                    let symmetric = (this.model.get('group_chat')) ? true : (res.symmetric_deletion ? true : false);\n                    this.resetSelectedMessages();\n                    if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                        this.deleteFilesFromMessages(msgs);\n                    this.model.retractMessages(msgs, this.model.get('group_chat'), symmetric);\n                    messages && messages.length && this.unsetForwardedMessages();\n                });\n            });\n            if (!this.model.get('group_chat') && !this.model.get('saved') && ((my_msgs == $msgs.length) || on_rewrite) && this.contact && this.contact.domain){\n                if (this.contact.get('server_has_rewrite')){\n                    dialog_options = [{\n                        name: 'symmetric_deletion',\n                        checked: false,\n                        text: xabber.getString(\"dialog_clear_chat_history__option_delete_for_all\")\n                    }];\n                    dfd.resolve();\n                } else {\n                    this.account.connection.disco.info(this.contact.domain, null, (iq) => {\n                        let $rewrite = $(iq).find('feature[var=\"' + Strophe.NS.REWRITE + '\"]');\n                        if ($rewrite.length) {\n                            dialog_options = [{\n                                name: 'symmetric_deletion',\n                                checked: false,\n                                text: xabber.getString(\"dialog_clear_chat_history__option_delete_for_all\")\n                            }];\n                            this.contact.set('server_has_rewrite', true);\n                            dfd.resolve();\n                        } else {\n                            dfd.resolve();\n                        }\n                    });\n                }\n            } else\n                dfd.resolve();\n        }\n        else {\n            utils.dialogs.ask(xabber.getString(\"dialog_delete_messages__header\"), `${xabber.getQuantityString(\"delete_message_question\", msgs.length)}\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')}`,\n                dialog_options, {ok_button_text: xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    messages && messages.length && this.focusOnInput();\n                    return;\n                }\n                this.resetSelectedMessages();\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    this.deleteFilesFromMessages(msgs);\n                msgs.forEach((item) => { this.view.removeMessage(item); })\n                messages && messages.length && this.unsetForwardedMessages();\n            });\n        }\n    },\n\n    deleteFilesFromMessages: function (messages) {\n        messages.forEach((item) => {\n            if (!item.isSenderMe())\n                return;\n            item.get('files') && _.isArray(item.get('files')) && item.get('files').forEach((item) => {\n                item && item.sources && item.sources.length && this.account.deleteFileByUrl(item.sources[0],(response) => {\n                    item.sources = null;\n                }, (err) => {\n                    item.sources = null;\n                });\n            });\n            item.get('images') && _.isArray(item.get('images')) && item.get('images').forEach((item) => {\n                item && item.sources && item.sources.length && this.account.deleteFileByUrl(item.sources[0],(response) => {\n                    item.sources = null;\n                }, (err) => {\n                    item.sources = null;\n                });\n            });\n            item.get('videos') && _.isArray(item.get('videos')) && item.get('videos').forEach((item) => {\n                item && item.sources && item.sources.length && this.account.deleteFileByUrl(item.sources[0],(response) => {\n                    item.sources = null;\n                }, (err) => {\n                    item.sources = null;\n                });\n            });\n        });\n    },\n\n    pushMessagesToClipboard: function (messages) {\n        let fwd_msg_indicator = \"\",\n            copied_messages = this.createTextMessage(messages, fwd_msg_indicator);\n        utils.copyTextToClipboard(_.unescape(copied_messages));\n    },\n\n    createTextMessage: function (messages, fwd_msg_indicator) {\n        let text_message = \"\";\n        for (let i = 0; i < messages.length; i++) {\n            let $msg = messages[i];\n            if (this.model.get('saved') && $msg.get('forwarded_message') && $msg.get('forwarded_message').length === 1 && !$msg.get('message'))\n                $msg = $msg.get('forwarded_message')[0];\n            let current_date = moment($msg.get('timestamp')).startOf('day'),\n                prev_date = (i) ? moment(messages[i - 1].get('timestamp')).startOf('day') : moment(0),\n                msg_sender = \"\";\n                if (prev_date.format('x') != current_date.format('x')) {\n                    text_message += (fwd_msg_indicator.length ? fwd_msg_indicator + ' ' : \"\") + pretty_date(current_date) + '\\n';\n                }\n                msg_sender = $msg.isSenderMe() ? this.account.get('name') : ($msg.get('user_info') && $msg.get('user_info').nickname || (this.account.contacts.get($msg.get('from_jid')) ? this.account.contacts.get($msg.get('from_jid')).get('name') : $msg.get('from_jid')));\n                text_message += (fwd_msg_indicator.length ? fwd_msg_indicator + ' ' : \"\") + \"[\" + utils.pretty_time($msg.get('timestamp')) + \"] \" + msg_sender + \":\\n\";\n                fwd_msg_indicator.length && (text_message += fwd_msg_indicator);\n                let original_message = _.unescape(($msg.get('mutable_content') && $msg.get('mutable_content').find(ref => ref.type === 'groupchat')) ? $msg.get('original_message').slice($msg.get('mutable_content').find(ref => ref.type === 'groupchat').end) : $msg.get('original_message'));\n                fwd_msg_indicator.length && (original_message = original_message.replace(/\\n/g, '\\n&gt; '));\n                (fwd_msg_indicator.length && original_message.indexOf('&gt;') !== 0) && (text_message += ' ');\n                (original_message = _.unescape(original_message.replace(/\\n&gt; &gt;/g, '\\n&gt;&gt;')));\n                text_message += _.escape(original_message) + '\\n';\n        }\n        return text_message.trim();\n    },\n\n    replyMessages: function () {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            if (msg) {\n                if (this.model.get('saved') && msg.get('forwarded_message') && msg.get('forwarded_message').length && !msg.get('message')) {\n                    msgs = msgs.concat(msg.get('forwarded_message'));\n                } else\n                    msgs.push(msg);\n            }\n        });\n        this.resetSelectedMessages();\n        this.setForwardedMessages(msgs);\n    },\n\n    forwardMessages: function () {\n        if (!this.model.get('active') || this.model.get('encrypted'))\n            return;\n        if (this.$('.forward-message-wrap').hasClass('non-active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            if (msg) {\n                if (this.model.get('saved') && msg.get('forwarded_message') && msg.get('forwarded_message').length && !msg.get('message')) {\n                    msgs = msgs.concat(msg.get('forwarded_message'));\n                } else\n                    msgs.push(msg);\n            }\n        });\n        this.resetSelectedMessages();\n        if (!xabber.forward_panel)\n            xabber.forward_panel = new xabber.ForwardPanelView({ model: xabber.opened_chats });\n        xabber.forward_panel.open(msgs, this.account);\n    },\n\n    showChatNotification: function (message, is_colored) {\n        if (!this.view.$('.chat-notification').hasClass('msgs-counter') && !this.view.$('.chat-notification').hasClass('encryption-warning')) {\n            this.view.$('.chat-notification').switchClass('hidden', !message).text(message)\n                .switchClass('text-color-300', is_colored);\n        }\n    }\n});\n\nxabber.ChatHeadContainer = xabber.Container.extend({\n    className: 'chat-head-container panel-head noselect'\n});\n\nxabber.ChatBodyContainer = xabber.Container.extend({\n    className: 'chat-body-container',\n\n    // TODO: refactor CSS and remove this\n    updateHeight: function () {\n        let bottom_height = xabber.chat_bottom.$el.height() + parseInt(xabber.chat_bottom.$el.css('bottom'));\n        if (bottom_height) {\n            let current_bottom = parseInt(this.$el.css('bottom'));\n            this.$el.css({bottom: bottom_height});\n            if (this.view) {\n                this.view.updateScrollBar();\n                (bottom_height != current_bottom) && !this.view.isScrolledToBottom() && this.view.scrollTo(this.view.ps_container[0].scrollTop + (bottom_height - current_bottom));\n            }\n        }\n    }\n});\n\nxabber.ChatBodyPlaceholderContainer = xabber.Container.extend({\n    className: 'chat-body-placeholder-container',\n});\n\nxabber.NotificationsPlaceholder = xabber.BasicView.extend({\n    className: 'notifications-placeholder',\n    events: {\n        \"click .btn-request-notifications\": \"requestNotifications\",\n        \"click .mdi-close\": \"close\"\n    },\n\n    _initialize: function (options) {\n        this.$el.html(`${xabber.getString(\"desktop_notifications__alert_enable__text\", [constants.CLIENT_NAME])} <span class=\"btn-request-notifications\">${xabber.getString(\"desktop_notifications__alert_enable__link_text\")}</span><button class=\"btn-request-notifications btn-flat btn-dark btn-main\">${xabber.getString(\"chat_allow\")}</button>`);\n        this.$el.append($('<i/>').addClass('mdi mdi-22px mdi-close'));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n    },\n\n    requestNotifications: function () {\n        window.Notification.requestPermission((permission) => {\n            xabber._cache.save({'notifications': (permission === 'granted'), 'ignore_notifications_warning': true});\n            this.close();\n        });\n    },\n\n    onUpdatedScreen: function () {\n        if (!xabber.notifications_placeholder)\n            return;\n        this.$el.detach();\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    },\n\n    close: function () {\n        xabber._cache.save('ignore_notifications_warning', true);\n        this.remove();\n        xabber.notifications_placeholder = undefined;\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    }\n});\n\nxabber.ChatBottomContainer = xabber.Container.extend({\n    className: 'chat-bottom-container'\n});\n\nxabber.ChatPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap chat-placeholder-wrap noselect',\n    template: templates.chat_placeholder,\n\n    _initialize: function (options) {\n        xabber.on('update_placeholder',this.onPlaceholderUpdate, this);\n    },\n\n    onPlaceholderUpdate: function () {\n        if (xabber.toolbar_view.$('.toolbar-item.jingle-calls.active').length || xabber.toolbar_view.$('.toolbar-item.geolocation-chats.active').length){\n            this.$('.text').text(xabber.getString(\"message_manager_error_not_implemented\"));\n        } else {\n            this.$('.text').text(xabber.getString(\"chat_list__placeholder\"));\n        }\n    },\n});\n\nxabber.ChatSettings = Backbone.ModelWithStorage.extend({\n    defaults: {\n        last_emoji: [],\n        muted: [],\n        archived: [],\n        group_chat: [],\n        cached_avatars: [],\n        group_chat_members_lists: []\n    },\n\n    getLastEmoji: function () {\n        return _.clone(this.get('last_emoji'));\n    },\n\n    updateLastEmoji: function (emoji) {\n        let last_emoji_icons = _.clone(this.get('last_emoji'));\n        if (last_emoji_icons.length > 0) {\n            let index = last_emoji_icons.indexOf(emoji);\n            if (index != -1)\n                last_emoji_icons.splice(index, 1);\n            last_emoji_icons.push(emoji);\n            while (last_emoji_icons.length > 7)\n                last_emoji_icons.shift();\n        }\n        else\n            last_emoji_icons.push(emoji);\n        this.save('last_emoji', last_emoji_icons);\n    },\n\n    updateMutedList: function (jid, muted) {\n        let muted_list = _.clone(this.get('muted')),\n            index = muted_list.indexOf(jid);\n        if (muted && index < 0) {\n            muted_list.push(jid);\n        }\n        if (!muted && index >= 0) {\n            muted_list.splice(index, 1);\n        }\n        this.save('muted', muted_list);\n    },\n\n    updateArchiveChatsList: function (jid, archived) {\n        let archived_list = _.clone(this.get('archived')),\n            index = archived_list.indexOf(jid);\n        if (archived && index < 0) {\n            archived_list.push(jid);\n        }\n        if (!archived && index >= 0) {\n            archived_list.splice(index, 1);\n        }\n        this.save('archived', archived_list);\n    },\n\n    updateGroupChatsList: function (jid, group_chat) {\n        let group_chat_list = _.clone(this.get('group_chat')),\n            index = group_chat_list.indexOf(jid);\n        if (group_chat && index < 0) {\n            group_chat_list.push(jid);\n        }\n        if (!group_chat && index >= 0) {\n            group_chat_list.splice(index, 1);\n        }\n        this.save('group_chat', group_chat_list);\n    },\n\n    updateCachedAvatars: function (id, hash, avatar) {\n        let avatar_list = _.clone(this.get('cached_avatars')),\n            member = avatar_list.indexOf(avatar_list.find(member => member.id === id));\n        if (member != -1) {\n            avatar_list.splice(member, 1);\n        }\n        avatar_list.push({id: id, avatar_hash: hash, avatar_b64: avatar});\n        this.save('cached_avatars', avatar_list);\n    },\n\n    getAvatarInfoById: function (id) {\n        let avatar_list = _.clone(this.get('cached_avatars')),\n            result = avatar_list.find(member => member.id === id);\n        return result;\n    },\n\n    getB64Avatar: function (id) {\n        let result = this.getAvatarInfoById(id);\n        if (result)\n            return result.avatar_b64;\n        else\n            return;\n    },\n\n    getHashAvatar: function (id) {\n        let result = this.getAvatarInfoById(id);\n        if (result)\n            return result.avatar_hash;\n    }\n});\n\n\nxabber.ExportChatHistoryView = xabber.BasicView.extend({\n    className: 'modal main-modal export-history-modal',\n    ps_selector: '.modal-content',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    template: templates.export_history,\n    events: {\n        \"click .btn-cancel\": \"close\",\n        \"click .export-history-progress-bar\": \"startLoad\",\n        \"click .btn-confirm\": \"exportFile\",\n    },\n\n    render: function (options) {\n        this.model = options.model;\n        this.contact = this.model.contact;\n        this.account = options.account;\n        this.content = options.content;\n        this.messages_list = [];\n        this.$('.btn-confirm').prop('disabled', true);\n        this.$('.export-history-progress-bar').removeClass('history-loading');\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function (options) {\n        this.updateScrollBar();\n        this.$('.export-history-progress-bar').css('background', `radial-gradient(closest-side,#fff 94%,#00000000 95% 100%),conic-gradient(#BDBDBD ${0}%,#F5F5F5 0)`)\n        this.$(`input[type=radio][name=file_format][value=\"txt\"]`)\n            .prop('checked', true);\n        this.$(`input[type=radio][name=date_format][value=\"iso\"]`)\n            .prop('checked', true);\n        this.$('.export-history-msg-count').text(xabber.getString(\"export_history_start_load\"))\n    },\n\n    startLoad: function (options) {\n        if (this.is_loading){\n            this.history_export_stoped = true;\n            this.is_loading = false;\n            this.$('.btn-confirm').prop('disabled', false);\n            this.$('.export-history-progress-bar').removeClass('history-loading');\n        } else {\n            this.$('.btn-confirm').prop('disabled', true);\n            this.$('.export-history-progress-bar').addClass('history-loading');\n            this.history_last_id = '';\n            this.history_export_loaded = false;\n            this.history_export_stoped = false;\n            this.loaded_messages = 0;\n            this.messages_list = [];\n            this.load_limit = 50;\n            this.is_loading = true;\n            let loading_id = uuid();\n            this.loading_id = loading_id;\n            this.$('.export-history-msg-count').text(xabber.getString(\"placeholder_loading\"))\n            this.getMessageArchive(loading_id);\n        }\n    },\n\n    getMessageArchive: function (loading_id) {\n        let query = {\n            fast: true,\n            max: this.load_limit || 50,\n            after: this.history_last_id\n        };\n        !this.history_last_id && delete(query.after);\n        let account = this.model.account, counter = 0;\n        this.content.MAMRequest(query, (success, messages, rsm) => {\n            this.all_messages_count = rsm.count\n            if (loading_id !== this.loading_id || this.history_export_stoped)\n                return;\n            if (rsm.count == 0){\n                this.is_loading = false;\n                this.$('.export-history-msg-count').text(xabber.getString(\"no_messages\"))\n            }\n            rsm.first && (this.history_last_id = rsm.last);\n\n            if ((messages.length < query.max) && success) {\n                this.history_export_loaded = true;\n            }\n            _.each(messages, (message) => {\n                this.handleMessage(message)\n                this.loaded_messages++;\n            });\n\n            this.$('.export-history-progress-bar').css('background', `radial-gradient(closest-side,#fff 94%,#00000000 95% 100%),conic-gradient(#BDBDBD ${(this.loaded_messages/rsm.count * 100)}%,#F5F5F5 0)`)\n            this.$('.export-history-msg-count').text(xabber.getString(\"export_history_msg_count\", [this.loaded_messages, this.all_messages_count]))\n\n            if (!this.history_export_loaded && !this.history_export_stoped) {\n                this.getMessageArchive(loading_id);\n            } else {\n                this.is_loading = false;\n                this.$('.btn-confirm').prop('disabled', false);\n                this.$('.export-history-progress-bar').removeClass('history-loading');\n            }\n        }, (err) => {\n        });\n    },\n\n    handleMessage: function (message) {\n        let $message = $(message),\n            $mam = $message.find(`result[xmlns=\"${Strophe.NS.MAM}\"]`);\n        if ($mam.length && $mam.children('forwarded').length) {\n            $message = $mam.children('forwarded').children('message');\n            let body = $message.children('body').text(),\n                timestamp = $message.children('time').attr('stamp'),\n                author;\n            if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length) {\n                let $group_chat = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`);\n                author = $group_chat.find('jid').text();\n            } else {\n                author = Strophe.getBareJidFromJid($message.attr('from'));\n            }\n\n            this.messages_list.push([timestamp, author, body])\n        } else\n            return;\n    },\n\n    exportFile: function () {\n        if (this.messages_list.length == this.all_messages_count){\n            this.exportFileChoosing()\n        } else {\n            utils.dialogs.ask(xabber.getString(\"warning\"), xabber.getString(\"export_history_not_loaded_text\")).done((result) => {\n                if (result) {\n                    this.exportFileChoosing()\n                }\n            });\n        }\n    },\n\n    exportFileChoosing: function () {\n        let dfd = $\n        let chosen_format = this.$('input[name=file_format]:checked').val();\n        if (chosen_format == 'txt'){\n            this.getFile();\n        } else if (chosen_format == 'csv') {\n            this.getFileCSV()\n        }\n    },\n\n    getFileCSV: function () {\n        let time_format = utils.getDateFormat(this.$('input[name=date_format]:checked').val()) + ' HH:mm:ss',\n            content = this.messages_list.map((e) => {return `[${utils.pretty_datetime(e[0], time_format)}], ${e[1]},\"${e[2].replaceAll('\"', '\"\"').replaceAll('#', '\\#')}\\n\\n\"`;}).join(\"\\n\");\n\n        content = \"Time, Author, Message\\n\" + content;\n\n        let link = document.createElement(\"a\");\n\n        let file = new Blob([content], { type: 'text/csv' });\n\n        link.href = URL.createObjectURL(file);\n        link.download = `${this.model.get('jid')}.csv`;\n\n        link.click();\n    },\n\n    getFile: function () {\n        let time_format = utils.getDateFormat(this.$('input[name=date_format]:checked').val()) + ' HH:mm:ss',\n            content = this.messages_list.map((e) => {return `[${utils.pretty_datetime(e[0], time_format)}] ${e[1]}:\\n ${e[2]}\\n\\n`;}).join(\"\");\n\n        let link = document.createElement(\"a\");\n\n        let file = new Blob([content], { type: 'text/plain' });\n\n        link.href = URL.createObjectURL(file);\n        link.download = `${this.model.get('jid')}.txt`;\n        link.click();\n        URL.revokeObjectURL(link.href);\n    },\n\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.closeModal();\n        this.history_export_stoped = true;\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.chat_settings = new xabber.ChatSettings({id: 'chat-settings'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + this.get('jid'),\n        fetch: 'after'\n    });\n    this.messages = new xabber.Messages(null, {account: this});\n    this.forwarded_messages = new xabber.Messages(null, {account: this});\n    this.pinned_messages = new xabber.Messages(null, {account: this});\n\n    this.chats = new xabber.AccountChats(null, {account: this});\n});\n\nxabber.Account.addConnPlugin(function () {\n    let timestamp = this.last_msg_timestamp || this.disconnected_timestamp;\n    this.chats.registerMessageHandler();\n    this.chats.each((chat) => {\n        if (!this.connection.do_synchronization) {\n            if (chat.messages.length)\n                chat.trigger('get_missed_history', timestamp);\n            else\n                chat.trigger('load_last_history');\n        }\n    });\n\n    this.connection.deleteTimedHandler(this._get_msg_handler);\n    this._get_msg_handler = this.connection.addTimedHandler(60000, () => {\n        //readds msg handler if it somehow dissapears\n        if (this.connection && !this.connection.handlers.find(h => !h.ns && !h.options.encrypted && h.name === 'message')) {\n            let last_msg_timestamp = this.last_msg_timestamp;\n            this.chats.registerMessageHandler();\n            let options = {};\n            this.cached_sync_conversations.getFromCachedConversations('last_sync_timestamp', (res) => {\n                let last_sync_timestamp = res && res.timestamp ? res.timestamp : null;\n                !this.roster.last_chat_msg_id && (options.max = constants.SYNCHRONIZATION_RSM_MAX);\n                last_sync_timestamp && (options.stamp = last_sync_timestamp);\n                this.roster && this.roster.syncFromServer(options, Boolean(last_sync_timestamp), true);\n                this.roster && this.roster.getRoster();\n            });\n        }\n        return true;\n    });\n    if (_.isUndefined(this.settings.get('omemo')) && !this.omemo_enable_placeholder) {\n        this.omemo_enable_placeholder = new xabber.OMEMOEnablePlaceholder({account: this});\n    }\n}, true, true);\n\nxabber.Account.addFastConnPlugin(function () {\n    this.getVCard();\n    if (!(this.auth_view && this.auth_view.data.get('authentication')))\n        this.trigger('ready_to_get_roster');\n}, true, true);\n\nxabber.once(\"start\", function () {\n    [\"keydown\"].forEach((event) => {\n        window.addEventListener(event, (e) => {\n            document.onselectstart = function() {\n                return !((e.ctrlKey || e.metaKey) && e.keyCode == constants.KEY_SHIFT || e.shiftKey && e.keyCode == constants.KEY_CTRL || e.keyCode == constants.KEY_SHIFT);\n            }\n        });\n    });\n    [\"keyup\"].forEach((event) => {\n        window.addEventListener(event, (e) => {\n            document.onselectstart = function() {\n                return true;\n            }\n        });\n    });\n    this.chats = new this.Chats;\n    this.chats.addCollection(this.opened_chats = new this.OpenedChats);\n    this.chats.addCollection(this.closed_chats = new this.ClosedChats);\n    this.chats.registerQuillEmbeddedsTags();\n\n    this.chats_view = this.left_panel.addChild('chats',\n            this.ChatsView, {model: this.opened_chats});\n    this.chat_head = this.right_panel.addChild('chat_head',\n            this.ChatHeadContainer);\n    this.chat_body = this.right_panel.addChild('chat_body',\n            this.ChatBodyContainer);\n    this.chat_body_placeholder = this.right_panel.addChild('chat_body_placeholder',\n            this.ChatBodyPlaceholderContainer);\n    this.chat_bottom = this.right_panel.addChild('chat_bottom',\n            this.ChatBottomContainer);\n    this.chat_placeholder = this.right_panel.addChild('chat_placeholder',\n            this.ChatPlaceholderView);\n\n    this.on(\"add_group_chat\", function (attrs) {\n        if (!this.add_group_chat_view)\n            this.add_group_chat_view = new this.AddGroupChatView();\n        this.add_group_chat_view.show(attrs);\n    }, this);\n\n    this.on(\"change:focused\", function () {\n        if (this.get('focused')) {\n            let view = this.chats_view.active_chat;\n            if (view && view.model.get('display')) {\n                view.content.onScroll(null, true);\n                if (view.model.get('is_accepted') !== false)\n                    view.content.bottom.focusOnInput();\n            }\n        }\n    }, this);\n\n    this.on(\"change:idle\", function () {\n        if (!this.get('idle')) {\n            let view = this.chats_view.active_chat;\n            if (view && view.model.get('display')) {\n                view.content.onScroll(null, true);\n                if (view.model.get('is_accepted') !== false)\n                    view.content.bottom.focusOnInput();\n            }\n        }\n    }, this);\n\n    this.on(\"show_group_chats\", function () {\n        this.chats_view.showGroupChats();\n    }, this);\n\n    this.on(\"show_chats\", function () {\n        this.chats_view.showChats();\n    }, this);\n\n    this.on(\"show_all_chats\", function (no_unread) {\n        this.chats_view.showAllChats(no_unread);\n    }, this);\n\n    this.on(\"show_archive_chats\", function (no_unread) {\n        this.chats_view.showArchiveChats(no_unread);\n    }, this);\n\n    this.on(\"show_saved_chats\", function (no_unread) {\n        this.chats_view.showSavedChats(no_unread);\n    }, this);\n\n    this.on(\"show_notification_chats\", function (no_unread) {\n        this.chats_view.showNotifications(no_unread);\n    }, this);\n\n    this.on(\"clear_search\", function () {\n        this.contacts_view.clearSearch();\n        this.chats_view.clearSearch();\n    }, this);\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.searching,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    Strophe = env.Strophe,\n    _ = env._,\n    Images = utils.images;\n\nxabber.DiscoveringView = xabber.BasicView.extend({\n    className: 'searching-main noselect',\n    template: templates.searching_wide,\n    ps_selector: '.chats-list-wrap',\n    ps_settings: {\n        wheelPropagation: true,\n        theme: 'existing-chats-list'\n    },\n\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .account-field .dropdown-content\": \"selectAccount\",\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-search\": \"search\",\n        \"click .existing-chat-wrap\": \"getChatProperties\",\n        \"keyup .search-input\": \"keyUp\"\n    },\n\n    _initialize: function () {\n        this.data.on(\"change:color\", this.colorUpdated, this);\n        this.$('.searching-properties-field .dropdown-button').on('click', () => {\n            this.toggleProperties();\n        });\n    },\n\n    render: function (options) {\n        this.endDiscovering();\n        this.data.set('color','#9E9E9E');\n        options || (options = {});\n        let accounts = xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.account-field .dropdown-content').empty();\n        _.each(accounts, (account) => {\n            this.$('.account-field .dropdown-content').append(\n                this.renderAccountItem(account));\n        });\n        if (accounts.length)\n            this.bindAccount(accounts[0]);\n        this.$('#select-searching-properties .account-field .dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        return this;\n    },\n\n    toggleProperties: function () {\n        let is_visible = this.isPropertiesVisible();\n        this.$('#select-searching-properties').slideToggle(\"fast\");\n        this.$('.arrow').switchClass('mdi-chevron-up', !is_visible);\n        this.$('.arrow').switchClass('mdi-chevron-down', is_visible);\n    },\n\n    isPropertiesVisible: function () {\n        if (this.$('#select-searching-properties').css('display') === 'none')\n            return false;\n        else\n            return true;\n    },\n\n    discover: function () {\n        let domain = _.escape(this.$('.search-input.simple-input-field').val());\n        if (domain) {\n            if (this.isPropertiesVisible())\n                this.toggleProperties();\n            this.$('.searching-more').html(\"\");\n            let searching_title = this.$('#searching_property_title').val(),\n                searching_sort_by = this.$('#searching_property_sort_by').val();\n            this.$('.searching-result-wrap .preloader-wrapper').show();\n            this.searchExistingGroupChats(domain);\n        }\n    },\n\n    setColor: function () {\n        if (this.account) {\n            let color = this.account.settings.get('color');\n            this.data.set('color', color);\n        }\n    },\n\n    colorUpdated: function () {\n        let color = this.data.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    keyUp: function (ev) {\n        if (this.$('.search-input').val() === \"\")\n            this.$('.btn-search').addClass('none-active');\n        else\n            this.$('.btn-search').removeClass('none-active');\n        if (ev.keyCode === constants.KEY_ENTER)\n            this.discover();\n    },\n\n    searchExistingGroupChats: function (domain) {\n        this.account.connection.disco.items((domain), null, this.getGroupchatService.bind(this), this.onDiscoveringError.bind(this));\n    },\n\n    onDiscoveringError: function (error) {\n        this.endDiscovering();\n        this.$('.chats-list').html(\"\");\n        this.$('.result-string').text(xabber.getString(\"discover__no_matches\", [$(error).attr('from')]));\n    },\n\n    endDiscovering: function () {\n        this.$('.searching-result-wrap .preloader-wrapper').hide();\n    },\n\n    getGroupchatService: function (stanza) {\n        $(stanza).find('query item').each((idx, item) => {\n            if ($(item).attr('node') === Strophe.NS.GROUP_CHAT) {\n                let jid = $(item).attr('jid');\n                this.getGroupchatFeatures(jid);\n            }\n        });\n        this.endDiscovering();\n    },\n\n    getGroupchatFeatures: function (jid) {\n        let iq = $iq({type: 'get', to: jid})\n            .c('query', {xmlns: Strophe.NS.DISCO_INFO, node: Strophe.NS.GROUP_CHAT});\n        this.account.sendIQFast(iq, this.getServerInfo.bind(this), this.onDiscoveringError.bind(this));\n    },\n\n    getServerInfo: function (stanza) {\n        $(stanza).find('query identity').each((idx, item) => {\n            let $item = $(item);\n            if (($item.attr('category') === 'conference') && ($item.attr('type') === 'server')) {\n                let jid = $(stanza).attr('from');\n                this.getChatsFromServer(jid);\n            }\n        });\n    },\n\n    getChatsFromServer: function (jid) {\n        let iq = $iq({type: 'get', to: jid}).c('query', {xmlns: Strophe.NS.DISCO_ITEMS, node: Strophe.NS.GROUP_CHAT});\n        this.account.sendIQFast(iq, (stanza) => {\n            this.$('.chats-list').html(\"\");\n            $(stanza).find('query item').each((idx, item) => {\n                let $item = $(item),\n                    name = $item.attr('name'),\n                    jid = $item.attr('jid'),\n                    $chat_item_html = $(templates.existing_groupchat_item({name: name, jid: jid, color: this.account.settings.get('color')})),\n                    avatar = Images.getDefaultAvatar(name);\n                $chat_item_html.find('.circle-avatar').setAvatar(avatar, 32);\n                $chat_item_html.appendTo(this.$('.searching-result-wrap .chats-list'));\n            });\n            this.$('.result-string').text(xabber.getString(\"discover__text_discovered_groups\", [$(stanza).find('query item').length, this.account.get('jid')]));\n        });\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.account-field .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n        this.setColor();\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.searching_account_item({jid: account.get('jid')}));\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    getChatProperties: function (ev) {\n        let $target = $(ev.target).closest('.existing-chat-wrap'),\n            jid = $target.data('jid'),\n            name = $target.data('name'),\n            request_iq = $iq({type: 'get', to: jid})\n                .c('query', {xmlns: Strophe.NS.DISCO_INFO});\n        this.account.sendIQFast(request_iq, (iq_response) => {\n            let $iq_response = $(iq_response),\n                description = $iq_response.find('field[var=\"description\"] value').text(),\n                privacy = $iq_response.find('field[var=\"anonymous\"] value').text(),\n                membership = $iq_response.find('field[var=\"model\"] value').text(),\n                chat_properties = {jid: jid, name: name, privacy: privacy, description: description, membership: membership};\n            this.more_info_view = this.addChild('groupchat_properties', xabber.MoreInfoView,\n                {model: this, chat_properties: chat_properties, el: this.$('.searching-more')[0]})\n        });\n    }\n});\n\nxabber.MoreInfoView = xabber.BasicView.extend({\n    className: 'searching-main noselect',\n    template: templates.existing_groupchat_details_view,\n\n    events: {\n        \"click .btn-join-chat\": \"joinChat\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.chat_properties = options.chat_properties;\n        this.$el.html(this.template(this.chat_properties));\n    },\n\n    render: function (options) {\n\n    },\n\n    joinChat: function () {\n        let contact = this.account.contacts.mergeContact(this.chat_properties.jid);\n        contact.set('group_chat', true);\n        contact.acceptRequest();\n        contact.pushInRoster(null, () => {\n            contact.askRequest();\n            contact.getMyInfo();\n        });\n        contact.trigger(\"open_chat\", contact);\n    }\n});\n\nxabber.Searching = Backbone.Model.extend({\n\n    initialize: function (options) {\n        this.account = options.account;\n    },\n\n    getSearchingFields: function () {\n        let this_domain = 'xabber.com',//this.account.connection && this.account.connection.domain,\n            iq_get = $iq({type: 'get', to: 'index.' + this_domain}).c('query', {xmlns: Strophe.NS.INDEX + '#groupchat'});\n        this.account.sendIQFast(iq_get, this.parseSearchingFields);\n    },\n\n    parseSearchingFields: function (iq_result) {\n        let $result = $(iq_result),\n            $fields = $result.find(`x[xmlns = \"${Strophe.NS.XDATA}\"] field`),\n            supported_fields = [];\n        $fields.each((idx, field) => {\n            let $field = $(field);\n            if ($field.attr('type') !== 'hidden')\n                supported_fields.push({var: $field.attr('var'), label: $field.attr('label')});\n        });\n    },\n});\n\nxabber.LocalSearchingView = xabber.BasicView.extend({\n    className: '',\n    // template:,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n    },\n\n    render: function () {\n\n    },\n\n    search: function (query) {\n    }\n});\n\nxabber.GlobalSearchingView = xabber.BasicView.extend({\n    className: '',\n    // template:,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.indexed_chats = [];\n    },\n\n    render: function () {\n\n    },\n\n    search: function (query) {\n        this.indexed_chats = [];\n        let iq_search = $iq({to:'index.xabber.com', type: 'set'})\n            .c('query', {xmlns: Strophe.NS.INDEX + '#groupchat'})\n            .c('x', {xmlns: Strophe.NS.XDATA, type: 'form'})\n            .c('field', {var: 'FORM_TYPE', type:'hidden'})\n            .c('value').t(Strophe.NS.INDEX + '#groupchat').up().up();\n        if (query.description)\n            iq_search.c('field', {var: 'description'})\n                .c('value').t(query.description).up().up();\n        if (query.name)\n            iq_search.c('field', {var: 'name'})\n                .c('value').t(query.name).up().up();\n        if (query.model)\n            iq_search.c('field', {var: 'model'})\n                .c('value').t(query.model).up().up();\n        if (query.anywhere)\n            iq_search.c('field', {var: 'anywhere'})\n                .c('value').t(query.anywhere).up().up();\n        this.account.sendIQFast(iq_search, this.onSearched.bind(this));\n    },\n\n    onSearched: function (result) {\n        let $result = $(result),\n            $chats = $($result.find('query item groupchat'));\n        $chats.each((idx, chat) => {\n            let $chat = $(chat),\n                chat_jid = $chat.attr('jid'),\n                attrs = {jid: chat_jid},\n                $properties = $chat.children();\n            $properties.each((idx, property) => {\n                let $property = $(property),\n                    property_name = $property[0].tagName.replace(/-/g, '_'),\n                    property_value = $property.text();\n                _.extend(attrs, {[property_name]: property_value});\n            });\n            this.indexed_chats.push(attrs);\n        });\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.discovering = this.wide_panel.addChild('discovering_main',\n        this.DiscoveringView);\n    /*this.local_searching = new xabber.LocalSearching;\n    this.global_searching = new xabber.GlobalSearching;*/\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.mentions,\n    utils = env.utils,\n    $ = env.$,\n    Strophe = env.Strophe,\n    _ = env._,\n    Images = utils.images,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\n\nxabber.Mention = Backbone.Model.extend({\n    defaults: {\n        active: false,\n        display: false,\n        timestamp: 0\n    },\n\n    initialize: function (attrs, options) {\n        this.contact = options.contact;\n        this.message = options.message;\n        this.id = this.message.get('unique_id');\n        this.set('timestamp', this.message.get('timestamp'));\n        this.account = this.contact.account;\n        this.item_view = new xabber.MentionItemView({model: this});\n        this.contact.on(\"destroy\", this.destroy, this);\n        this.message.on(\"change:last_replace_time\", this.onMessageUpdated, this);\n    },\n\n    onMessageUpdated: function () {\n        if (this.message.get('mentions') && this.message.get('mentions').length) {\n            this.message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\",\n                    id = mention_target.match(/\\?id=\\w*/),\n                    jid = mention_target.match(/\\?jid=.*/);\n                if (id)\n                    mention_target = id[0].slice(4);\n                else if (jid)\n                    mention_target = jid[0].slice(5);\n                else\n                    mention_target = \"\";\n                if (id) {\n                    if (this.contact.my_info) {\n                        if (mention_target === this.contact.my_info.get('id'))\n                            this.item_view.updateLastMessage();\n                        else\n                            this.destroy();\n                    }\n                    else if (this.contact.get('group_chat')) {\n                        if (this._pending_my_info) {\n                            this._pending_my_info.done(() => {\n                                if (mention_target === this.contact.my_info.get('id'))\n                                    this.item_view.updateLastMessage();\n                                else\n                                    this.destroy();\n                                this._pending_my_info = null;\n                            });\n                        }\n                        else {\n                            this._pending_my_info = new $.Deferred();\n                            this.contact.getMyInfo(() => {\n                                if (mention_target === this.contact.my_info.get('id'))\n                                    this.item_view.updateLastMessage();\n                                else\n                                    this.destroy();\n                                this._pending_my_info.resolve();\n                            });\n                        }\n                    }\n                } else if (jid && mention_target === this.account.get('jid')) {\n                    this.item_view.updateLastMessage();\n                }\n                else\n                    this.destroy();\n            });\n        } else\n            this.destroy();\n    }\n});\n\nxabber.MentionsBase = Backbone.Collection.extend({\n    model: xabber.Mention\n});\n\nxabber.AccountMentions = xabber.MentionsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.on(\"add\", this.onMentionAdded, this)\n    },\n\n    onMentionAdded: function (mention) {\n        xabber.mentions.add(mention);\n    }\n});\n\nxabber.Mentions = xabber.MentionsBase.extend({\n    comparator: 'timestamp',\n    initialize: function () {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    }\n});\n\nxabber.MentionsView = xabber.SearchPanelView.extend({\n    className: 'mentions-container container',\n    ps_selector: '.mentions-list-wrap',\n    main_container: '.mentions-list',\n    ps_settings: {theme: 'item-list'},\n    template: templates.mentions_panel,\n\n    _initialize: function () {\n        this.active_mention = null;\n        this.keyup_timeout = null;\n        this.model.on(\"add\", this.onMentionAdded, this);\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"destroy\", this.onMentionRemoved, this);\n        xabber.accounts.on(\"list_changed\", this.updateLeftIndicator, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    render: function (options) {\n        if (!options.right && this.active_mention) {\n            this.active_mention.model.set('active', false);\n            this.active_mention = null;\n        }\n        (options.right !== 'chat' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search && options.right === 'chat') && this.clearSearch();\n    },\n\n    onMentionAdded: function (mention) {\n        this.addChild(mention.id, mention.item_view);\n        this.updateMentionPosition(mention);\n    },\n\n    onMentionRemoved: function (mention, options) {\n        options = options || {};\n        if (this.active_mention === this.child(mention.id)) {\n            this.active_mention = null;\n        }\n        this.removeChild(mention.id, options);\n        this.updateScrollBar();\n    },\n\n    selectItem: function (id) {\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        $selection.find('.mention-info-wrap').addClass('selected');\n    },\n\n    clearSearchSelection: function (ev) {\n        this.selection_id = null;\n        this.$('.list-item.selected').removeClass('selected');\n        this.$('.list-item .selected').removeClass('selected');\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = xabber.chats_view.child(selection.data('id'));\n                view && view.open({screen: xabber.body.screen.get('name'), clear_search: false});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.get(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')).hash_id);\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            selection.find('.mention-info-wrap').click();\n        }\n    },\n\n    replaceMentionItem: function (item, mentions) {\n        let view = this.child(item.id);\n        if (view && item.get('timestamp')) {\n            view.$el.detach();\n            let index = mentions.indexOf(item);\n            if (index === 0) {\n                this.$('.mentions-list').append(view.$el);\n            } else {\n                this.$('.mention-item').eq(-index).before(view.$el);\n            }\n            let $prev_el = view.$el.prev('.mention-item'),\n                $next_el = view.$el.next('.mention-item'),\n                contact_jid = view.$el.data('contact-jid');\n                if ($prev_el.length) {\n                    let prev_contact_jid = $prev_el.data('contact-jid');\n                    if (prev_contact_jid !== contact_jid)\n                        view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n                }\n                else\n                    view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n                if ($next_el.length) {\n                    let next_contact_jid = $next_el.data('contact-jid');\n                    if (next_contact_jid === contact_jid) {\n                        $next_el.find('.group-chat-title-wrap').addClass('hidden');\n                    }\n                    else\n                        $next_el.find('.group-chat-title-wrap').removeClass('hidden');\n                }\n                else\n                    view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n        }\n    },\n\n    readAllMentions: function () {\n        xabber.accounts.connected.forEach((account) => {\n            let mentions = _.clone(account.unread_mentions.models);\n            _.each(mentions, ((mention) => {\n                let msgid = mention.message.get('msgid'),\n                    archive_id = mention.message.get('archive_id'),\n                    contact_archive_id = mention.message.get('contact_archive_id'),\n                    chat = account.chats.getChat(mention.contact);\n                mention.message.set('is_unread', false);\n                chat.sendMarker(msgid, 'displayed', archive_id, contact_archive_id);\n            }));\n        });\n    },\n\n    updateLeftIndicator: function (accounts) {\n        this.$el.attr('data-indicator', accounts.connected.length > 1);\n    },\n\n    updateMentionPosition: function (item) {\n        let view = this.child(item.id);\n        if (!view)\n            return;\n        this.replaceMentionItem(item, this.model);\n    },\n\n    onChangedActiveStatus: function (mention) {\n        if (mention.get('active')) {\n            let previous_mention = this.active_mention;\n            this.active_mention = this.child(mention.id);\n            previous_mention && previous_mention.model.set('active', false);\n        }\n    }\n});\n\nxabber.MentionItemView = xabber.BasicView.extend({\n    className: 'mention-item list-item',\n    template: templates.mention_item,\n    avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n    events: {\n        'click .mention-info-wrap': 'openByClick'\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.$el.attr('data-id', this.model.id);\n        this.$el.attr('data-contact-jid', this.contact.get('jid'));\n        this.updateContactName();\n        this.updateGroupChat();\n        this.updateName();\n        this.updateLastMessage();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.updateCounter();\n        this.updateIcon();\n        this.model.on(\"change:active\", this.updateActiveStatus, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.contact.on(\"change:name\", this.updateContactName, this);\n        this.contact.on(\"change:group_chat\", this.updateGroupChat, this);\n        this.model.message.on(\"change:is_unread\", this.updateCounter, this);\n    },\n\n    updateName: function () {\n        let message = this.model.message,\n            user_info = message.get('user_info') || message.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes,\n            contact_name = this.contact.get('name');\n        if (user_info)\n            contact_name = user_info.nickname || user_info.jid || user_info.id || this.model.message.get('from_jid');\n        this.$('.chat-title').text(contact_name);\n    },\n\n    updateIcon: function () {\n        this.$('.contact-icon .group-chat-icon').hideIf(!this.contact.get('group_chat') && this.contact.get('jid') === this.account.domain);\n        this.$('.contact-icon .server-icon').hideIf(this.contact.get('jid') !== this.account.domain);\n    },\n\n    updateContactName: function () {\n        let contact_name = this.contact.get('name');\n        this.$('.group-chat-name').text(contact_name);\n        if (!this.contact.get('group_chat')) {\n            this.updateName();\n            if (!this.contact.get('photo_hash')) {\n                let default_avatar = Images.getDefaultAvatar(contact_name);\n                this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n            }\n        }\n    },\n\n    updateGroupChat: function () {\n        this.updateIcon();\n    },\n\n    updateCounter:function () {\n        let unread = this.model.message.get('is_unread');\n        this.$('.msg-counter').switchClass('hidden', !unread);\n        if (unread)\n            this.account.unread_mentions.add(this.model);\n        else\n            this.account.unread_mentions.remove(this.model);\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    updateLastMessage: function () {\n        let msg = this.model.message;\n        if (!msg)\n            return;\n        let msg_time = msg.get('time'),\n            timestamp = msg.get('timestamp'),\n            forwarded_message = msg.get('forwarded_message'),\n            msg_files = msg.get('files') || [],\n            msg_images = msg.get('images') || [],\n            msg_locations = msg.get('locations') || [],\n            msg_text = (forwarded_message) ? (msg.get('message') || xabber.getString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText();\n        msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n        this.model.set({timestamp: timestamp});\n        if (msg_files.length || msg_images.length || msg_locations.length) {\n            let $colored_span = $('<span class=\"text-color-500\"/>');\n            if (msg_files.length && msg_images.length)\n                msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n            else {\n                if (msg_files.length > 0) {\n                    let total_size = 0;\n                    msg_files.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_images.length > 0) {\n                    let total_size = 0;\n                    msg_images.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_locations.length > 0) {\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                }\n            }\n            this.$('.last-msg').text(\"\").append(msg_text);\n        }\n        else {\n            this.$('.last-msg').text(msg_text);\n        }\n        this.$el.emojify('.last-msg', {emoji_size: 16});\n        this.$('.last-msg-date').text(utils.pretty_short_datetime(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateActiveStatus: function () {\n        this.$el.find('.mention-info-wrap').switchClass('active', this.model.get('active'));\n    },\n\n    updateAvatar: function () {\n        let message = this.model.message,\n            user_info = message.get('user_info') || message.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes,\n            image;\n        if (user_info) {\n            if (user_info.avatar) {\n                image = user_info.b64_avatar || this.account.chat_settings.getB64Avatar(user_info.id);\n                if (image) {\n                    this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + user_info.id;\n                    this.contact.getAvatar(user_info.avatar, node, (data_avatar) => {\n                        image = data_avatar;\n                        this.account.chat_settings.updateCachedAvatars(user_info.id, user_info.avatar, data_avatar);\n                        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                    }, () => {\n                        let default_avatar = Images.getDefaultAvatar(user_info.nickname || user_info.jid || user_info.id);\n                        this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n                    });\n                }\n            }\n            else {\n                let default_avatar = Images.getDefaultAvatar(user_info.nickname || user_info.jid || user_info.id);\n                this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n            }\n        }\n        else {\n            image = this.contact.cached_image;\n            this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n        }\n    },\n\n    openByClick: function () {\n        let message = this.model.message,\n            chat = this.account.chats.getChat(this.contact);\n        this.model.message.set('is_unread', false);\n        chat.sendMarker(message.get('origin_id'), 'displayed', message.get('stanza_id'), message.get('contact_stanza_id'));\n        this.model.set('active', true);\n        this.contact.trigger(\"open_mention\", this.contact, message.get('unique_id'));\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    }\n\n});\n\nxabber.MentionsPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap mentions-placeholder-wrap noselect',\n    template: templates.mentions_placeholder,\n\n    _initialize: function (options) {\n        xabber.on('update_placeholder',this.onPlaceholderUpdate, this);\n    },\n\n    onPlaceholderUpdate: function () {\n        if (xabber.toolbar_view.$('.toolbar-item.jingle-calls.active').length || xabber.toolbar_view.$('.toolbar-item.geolocation-chats.active').length){\n            this.$('.text').text(xabber.getString(\"message_manager_error_not_implemented\"));\n        } else {\n            this.$('.text').text(xabber.getString(\"mentions_list__placeholder\"));\n        }\n    },\n});\n\nxabber.Account.addInitPlugin(function () {\n   this.mentions = new xabber.AccountMentions(null, {account: this});\n   this.unread_mentions = new xabber.Mentions(null, {account: this});\n});\n\nxabber.once(\"start\", function () {\n    this.mentions = new this.Mentions;\n    this.mentions_view = this.left_panel.addChild('mentions',\n        this.MentionsView, {model: this.mentions});\n    this.mentions_placeholder = this.right_panel.addChild('mentions_placeholder',\n        this.MentionsPlaceholderView);\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    $ = env.$;\n\nxabber.once(\"start\", function () {\n    $(window).on(\"keydown\", (ev) => {\n        if ((ev.ctrlKey || ev.metaKey) && ev.keyCode == constants.KEY_SHIFT || ev.shiftKey && ev.keyCode == constants.KEY_CTRL) {\n            this.shift_pressed = null;\n            this.shiftctrl_pressed = true;\n            ev.preventDefault();\n        } else if (ev.keyCode == constants.KEY_SHIFT) {\n            this.shift_pressed = true;\n            ev.preventDefault();\n        }\n        let attrs = xabber.body.screen.attributes;\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            if (xabber.body.$el.siblings('#modals').children('.open').length)\n                return;\n        }\n        if (attrs.chat_item && (attrs.name === 'mentions' || attrs.name === 'contacts' || attrs.name === 'all-chats') && (attrs.right === 'chat' || attrs.right === 'participant_messages' || attrs.right === 'message_context' || attrs.right === 'searched_messages')) {\n            if (window.$('.message-actions-panel').length && !window.$('.message-actions-panel').hasClass('hidden')) {\n                if (!ev.ctrlKey && !ev.metaKey) {\n                    switch (ev.keyCode) {\n                        case 67:\n                            attrs.chat_item.model.trigger('copy_selected_messages');\n                            break;\n                        case 68:\n                            attrs.chat_item.model.trigger('delete_selected_messages');\n                            break;\n                        case 69:\n                            attrs.chat_item.model.trigger('edit_selected_message');\n                            break;\n                        case 70:\n                            attrs.chat_item.model.trigger('forward_selected_messages');\n                            break;\n                        case 80:\n                            attrs.chat_item.model.trigger('pin_selected_message');\n                            break;\n                        case 82:\n                            attrs.chat_item.model.trigger('reply_selected_messages');\n                            break;\n                        case constants.KEY_ESCAPE:\n                            if (!xabber.body.screen.get('right_contact'))\n                                attrs.chat_item.model.trigger('reset_selected_messages');\n                            break;\n                    }\n                    ev.preventDefault();\n                }\n            }\n        }\n        });\n    $(window).on(\"keyup\", (ev) => {\n        if (!(ev.shiftKey && ev.ctrlKey))\n            this.shiftctrl_pressed = null;\n        if (ev.shiftKey && !ev.ctrlKey)\n            this.shift_pressed = true;\n        if (!ev.shiftKey)\n            this.shift_pressed = null;\n    });\n\n    this.updateLayout = function (options) {\n        options || (options = {});\n        this.updateContainersLayout();\n        xabber.trigger('update_css', options);\n        this.body.$('.ps-container').perfectScrollbar('update');\n    };\n\n    this.updateContainersLayout = function () {\n        let width = this.body.$el.width(),\n            height = this.body.$el.height(),\n            is_wide = width >= constants.WIDTH_MEDIUM,\n            is_narrow = width < constants.WIDTH_MEDIUM;\n        let panel_width,\n            left_panel_width,\n            right_panel_width,\n            right_contact_panel_width,\n            chat_bottom_panel_width,\n            toolbar_width = 64,\n            toolbar_accounts_heigth = height - 506,\n            right_contact_panel_styles = {};\n        if (is_wide || !(is_narrow)) {\n            panel_width = 1536;\n        } else if (is_narrow) {\n            panel_width = width - toolbar_width - 20 - 44;\n        } else {\n            panel_width = (width - toolbar_width - 20) * 7 / 9;\n        }\n        left_panel_width = right_contact_panel_width = 384;\n        right_panel_width = panel_width - (left_panel_width + right_contact_panel_width);\n        chat_bottom_panel_width = '100%';\n        if (is_narrow){\n            right_contact_panel_width = left_panel_width = (panel_width * 0.264) < 288 ? 288 : panel_width * 0.264;\n\n        }\n        if (right_panel_width < 512 ){\n            right_panel_width = panel_width - left_panel_width;\n            this.right_contact_panel_saveable = false;\n            right_contact_panel_styles = {\n                position : 'absolute',\n                right : 0,\n                'z-index' : 499,\n            };\n            if ((right_panel_width - 384) < 128) {\n                right_contact_panel_width = right_panel_width;\n                this.right_contact_panel.$el.removeClass('background-click')\n            }\n            else {\n                right_contact_panel_width = 384\n                this.right_contact_panel.$el.addClass('background-click')\n            }\n        }\n        else {\n            this.right_contact_panel_saveable = true;\n            right_contact_panel_styles = {\n                position : 'static',\n                'z-index' : 0,\n            };\n            this.right_contact_panel.$el.removeClass('background-click')\n\n        }\n        this.right_contact_panel_width = right_contact_panel_width;\n\n        if (!this.body.screen.get('right_contact')) {\n            right_contact_panel_width = 0;\n            right_panel_width = panel_width - left_panel_width;\n        }\n        if (right_panel_width < 768) {\n            chat_bottom_panel_width = right_panel_width;\n        }\n\n        right_contact_panel_styles.width = right_contact_panel_width;\n        this.chat_head.$el.switchClass('chat-head-ultra-narrow', right_panel_width <= 650);\n        this.chat_head.$el.switchClass('chat-head-narrow', right_panel_width < 750);\n        this.chat_head.$el.switchClass('chat-head-normal', (right_panel_width < 850 && right_panel_width >= 750));\n        this.chat_head.$el.switchClass('chat-head-normal-wide', (right_panel_width < 1000 && right_panel_width >= 850));\n        this.chat_head.$el.switchClass('chat-head-wide', right_panel_width > 1000);\n        this.main_panel.setCustomCss({\n            width: panel_width,\n        });\n        this.left_panel.setCustomCss({\n            width: left_panel_width,\n        });\n        this.right_panel.setCustomCss({\n            width: right_panel_width,\n        });\n        this.right_contact_panel.setCustomCss(right_contact_panel_styles);\n        this.chat_bottom.setCustomCss({\n            width: chat_bottom_panel_width,\n        });\n        this.toolbar_view.$el.find('.toolbar-bottom .accounts-wrap .accounts').css({\n            'max-height': toolbar_accounts_heigth,\n        });\n    };\n\n    this.on(\"update_layout\", this.updateLayout, this);\n\n    this.body.addScreen('blank', {});\n\n    this.body.addScreen('login', {\n        login: { xmpp_login: null }\n    });\n\n    this.body.addScreen('settings-modal', {\n        main_overlay: {\n            settings_modal: null,\n        },\n    });\n\n    this.body.addScreen('add_account', {\n        blur_overlay: null,\n        toolbar: null,\n        login: null\n    });\n\n    this.body.addScreen('about', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { about: null },\n            placeholders: null\n        },\n        roster: null\n    });\n\n    let path_acc_settings_modal = new this.ViewPath('account.settings_account_modal');\n\n    this.body.addScreen('account_settings_modal', {\n        main_overlay: {\n            account_settings_modal: path_acc_settings_modal\n        },\n    });\n\n\n    let path_chat_head = new this.ViewPath('chat_item.content.head'),\n        path_chat_body = new this.ViewPath('chat_item.content'),\n        path_chat_body_placeholder = new this.ViewPath('chat_item.content_placeholder'),\n        path_chat_bottom = new this.ViewPath('chat_item.content.bottom'),\n        path_group_invitation = new this.ViewPath('contact.invitation'),\n        path_enable_view = new this.ViewPath('omemo_item.account.omemo_enable_view'),\n        path_contact_details_right = new this.ViewPath('contact.details_view_right'),\n        path_contact_details_right_encrypted = new this.ViewPath('contact.details_view_right_encrypted'),\n        path_participant_messages = new this.ViewPath('model.messages_view'),\n        path_details_participants = new this.ViewPath('contact.details_view.participants');\n\n    this.body.addScreen('contacts', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { contacts: null },\n            right: { contact_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('search', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { discovering_main: null},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('mentions', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { mentions: null },\n            right: { mentions_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('all-chats', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { chats: null },\n            right: { chat_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n\n    this.right_panel.patchTree = function (tree, options) {\n        if (options.right === undefined)\n            return;\n        if (options.show_placeholder) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: null,\n                chat_body_placeholder: path_chat_body_placeholder,\n                chat_bottom: null\n            };\n        }\n        if ((options.right === 'message_context') || (options.right === 'participant_messages') || (options.right === 'searched_messages')) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: path_participant_messages,\n                chat_body_placeholder: null,\n                chat_bottom: path_chat_bottom\n            };\n        }\n        if (options.right === 'group_invitation') {\n            return { details: path_group_invitation };\n        }\n        if (options.details_content === 'participants')\n            return { details_content: path_details_participants };\n        if (options.chat_item) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: path_chat_body,\n                chat_body_placeholder: null,\n                chat_bottom: path_chat_bottom\n            };\n        }\n        if (options.right === 'enable_encryption' || options.omemo_item) {\n            return { details: path_enable_view };\n        }\n    };\n\n\n    this.right_contact_panel.patchTree = function (tree, options) {\n        if (options.right_contact === undefined)\n            return;\n        if (options.right_contact === 'contact_details') {\n            return { details: path_contact_details_right };\n        }\n        if (options.right_contact === 'contact_details_encrypted') {\n            return { details: path_contact_details_right_encrypted };\n        }\n        if (options.details_content === 'participants')\n            return { details_content: path_details_participants };\n    };\n\n    this.body.setScreen('blank');\n\n    // initial synchronization\n    if (!this.accounts.length)\n        this.body.setScreen('login');\n    else if (this.body.isScreen('blank'))\n        this.body.setScreen('all-chats');\n    xabber.trigger(\"start_accounts\");\n\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    utils = env.utils,\n    $ = env.$,\n    templates = env.templates.base,\n    Strophe = env.Strophe,\n    _ = env._,\n    KeyHelper = env.libsignal.KeyHelper,\n    SignalProtocolAddress = env.libsignal.SignalProtocolAddress,\n    SessionBuilder = env.libsignal.SessionBuilder,\n    SessionCipher = env.libsignal.SessionCipher;\n\nxabber.Peer = Backbone.Model.extend({\n    idAttribute: 'jid',\n\n    initialize: function (attrs, options) {\n        attrs = attrs || {};\n        this.account = options.account;\n        this.devices = {};\n        this.store = this.account.omemo.store;\n        this.fingerprints = new xabber.Fingerprints({model: this});\n        this.updateDevices(attrs.devices);\n        this.set({\n            jid: attrs.jid\n        });\n    },\n\n    updateDevices: function (devices) {\n        if (!devices)\n            return;\n        for (let d in this.devices) {\n            if (!devices[d]) {\n                this.account.omemo.removeSession('session' + this.devices[d].address.toString());\n                delete this.devices[d];\n            }\n        }\n        for (let d in devices) {\n            let device = this.getDevice(d),\n                label = devices[d].label;\n            label && device.set('label', label);\n        }\n    },\n\n    getDevicesNode: async function () {\n        if (!this._pending_devices) {\n            this._pending_devices = true;\n            this._dfd_devices = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                this.account.getConnectionForIQ().omemo.getDevicesNode(this.get('jid'), (cb) => {\n                    this.updateDevices(this.account.getConnectionForIQ().omemo.parseUserDevices($(cb)));\n                    this._pending_devices = false;\n                    this._dfd_devices.resolve();\n                    resolve();\n                }, () => {\n                    this._pending_devices = false;\n                    this._dfd_devices.resolve();\n                    resolve();\n                });\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_devices.done(() => {\n                    resolve();\n                });\n            });\n        }\n    },\n\n    encrypt: async function (message) {\n        let enc_promises = [],\n            aes = await utils.AES.encrypt(message),\n            is_trusted = true;\n\n        if (!_.keys(this.devices).length)\n            await this.getDevicesNode();\n        for (let device in this.devices) {\n            enc_promises.push(this.devices[device].encrypt(aes.keydata));\n        }\n\n        for (let device in this.account.omemo.own_devices) {\n            enc_promises.push(this.account.omemo.own_devices[device].encrypt(aes.keydata));\n        }\n\n        let keys = await Promise.all(enc_promises);\n\n        keys = keys.filter(key => key !== null);\n\n        for (let device_id in this.devices) {\n            let device = this.devices[device_id];\n            if (device.get('ik') === null)\n                continue;\n            if (device.get('trusted') === null)\n                is_trusted = 'error';\n            if (is_trusted && device.get('trusted') === undefined)\n                is_trusted = 'none';\n        }\n\n        return {\n            keys: keys,\n            payload: aes.payload,\n            is_trusted: is_trusted\n        };\n    },\n\n    decrypt: async function (deviceId, ciphertext, preKey) {\n        let device = this.getDevice(deviceId);\n\n        return device.decrypt(ciphertext, preKey);\n    },\n\n    getDevice: function (id) {\n        if (!this.devices[id]) {\n            this.devices[id] = new xabber.Device({jid: this.get('jid'), id: id }, { account: this.account, store: this.store});\n        }\n\n        return this.devices[id];\n    }\n});\n\nxabber.Peers = Backbone.Collection.extend({\n    model: xabber.Peer,\n\n    initialize: function (models, options) {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    }\n});\n\nxabber.Fingerprints = xabber.BasicView.extend({\n    className: 'modal main-modal fingerprints-wrap',\n    template: templates.fingerprints,\n    ps_selector: '.fingerprints-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        'click .btn-trust': \"trustDevice\",\n        'click .btn-ignore': \"ignoreDevice\",\n        'click .btn-delete': \"deleteDevice\",\n        \"click .set-label + div\": \"editLabel\",\n        'click .btn-cancel': \"close\"\n    },\n\n    _initialize: function () {\n        if (this.model.own_devices) {\n            this.account = this.model.account;\n            this.omemo = this.model;\n            this.jid = this.account.get('jid');\n            this.is_own_devices = true;\n        } else {\n            this.account = this.model.account;\n            this.omemo = this.account.omemo;\n            this.jid = this.model.get('jid');\n        }\n    },\n\n    open: function () {\n        this.omemo = this.account.omemo;\n        let name = \"\";\n        if (this.is_own_devices)\n            name = this.account.get('name');\n        else {\n            let contact = this.account.contacts.get(this.jid);\n            name = contact ? contact.get('name') : this.jid;\n        }\n        this.$('.header').text(xabber.getString('omemo__dialog_fingerprints__header', [name]));\n        this.data.set('visible', true);\n        this.show();\n        this.$('div.fingerprints-content').html(env.templates.contacts.preloader());\n        if (this.is_own_devices)\n            this.renderOwnDevices();\n        else\n            this.renderDevices();\n    },\n\n    renderDevices: function () {\n        this.model.getDevicesNode().then(() => {\n            let devices_count = _.keys(this.model.devices).length;\n            this.updateFingerprints(this.model.devices);\n        });\n        this.updateOwnFingerprint();\n    },\n\n    renderOwnDevices: function () {\n        this.omemo.getMyDevices().then(() => {\n            let devices_count = _.keys(this.model.own_devices).length;\n            this.updateFingerprints(this.model.own_devices);\n            this.updateOwnFingerprint();\n        });\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    editLabel: function () {\n        this.$('.set-label').removeClass('hidden');\n        this.$('.set-label').focus();\n        let saveLabel = (ev) => {\n            let label = ev.target.value.trim();\n            this.saveLabel(label);\n        };\n        this.$('.set-label')[0].onblur = saveLabel;\n        this.$('input.set-label')[0].onkeydown = (ev) => {\n            if (ev.keyCode == constants.KEY_ENTER)\n                saveLabel(ev);\n        };\n    },\n\n    saveLabel: function (label) {\n        this.$('.set-label').addClass('hidden');\n        if (label == this.account.settings.get('device_label_text'))\n            return;\n        this.account.settings.save('device_label_text', label);\n        this.account.getConnectionForIQ().omemo.publishDevice(this.omemo.get('device_id'), label, () => {\n            this.updateOwnFingerprint();\n        });\n    },\n\n    updateFingerprints: async function (devices) {\n        let counter = 0,\n            devices_count = _.keys(devices).length,\n            dfd = new $.Deferred(),\n            $container = this.$('div.fingerprints-content');\n        dfd.done((f_count) => {\n            if (!f_count)\n                $container.html($(`<div class=\"empty-table\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n            else\n                this.$('.dropdown-button').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    container: this.$('.fingerprints-content')[0],\n                    alignment: 'left'\n                });\n            this.jid == this.account.get('jid') && f_count++;\n            this.$('.additional-info').text(xabber.getQuantityString(\"omemo__dialog_fingerprints__text_devices_count\", f_count, [this.jid, f_count]));\n            $container.find('.preloader-wrapper').detach();\n        });\n        for (let device_id in devices) {\n            if (device_id == this.omemo.get('device_id')) {\n                counter++;\n                if (devices_count == counter)\n                    dfd.resolve($container.find('div.row').length);\n                continue;\n            }\n            let device = devices[device_id];\n            if (device.get('ik')) {\n                let options = {},\n                    f = device.generateFingerprint(),\n                    fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                    is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                counter++;\n                if (devices_count == counter)\n                    dfd.resolve($container.find('div.row').length);\n            }\n            else {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        ik = $bundle.find(`ik`).text();\n                    if (ik) {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let options = {},\n                            f = device.generateFingerprint(),\n                            fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                            is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                        is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                        $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                    }\n                    counter++;\n                    if (devices_count == counter)\n                        dfd.resolve($container.find('div.row').length);\n                }, () => {\n                    counter++;\n                    if (devices_count == counter)\n                        dfd.resolve($container.find('div.row').length);\n                });\n            }\n        }\n    },\n\n    updateOwnFingerprint: async function () {\n        this.$('.this-device-content').html(\"\");\n        let omemo = this.account.omemo;\n        if (omemo) {\n            let device = omemo.own_devices[omemo.get('device_id')];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else if (device.get('ik')) {\n                    device.set('fingerprint', device.generateFingerprint());\n                    this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else {\n                    device.getBundle().then(({pk, spk, ik}) => {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let fingerprint = device.generateFingerprint();\n                        if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                            device.set('fingerprint', fingerprint);\n                        this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                    });\n                }\n            } else {\n                omemo.store.getIdentityKeyPair().then((ik) => {\n                    let pubKey = ik.pubKey;\n                    if (pubKey.byteLength == 33)\n                        pubKey = pubKey.slice(1);\n                    let fingerprint = Array.from(new Uint8Array(pubKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n                    this.$('.this-device-content').append(this.addRow(omemo.get('device_id'), this.account.settings.get('device_label_text'), null, fingerprint));\n                });\n            }\n\n        }\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                deferred.resolve();\n            }});\n        return deferred.promise();\n    },\n\n    trustDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            fingerprint = $target.find('.fingerprint').text().replace(/ /g, \"\"),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n            device_id = Number($target.find('div.device-id').text());\n        $target.children('.buttons[data-trust]').attr('data-trust', 'trust');\n        $target.find('.trust-item-wrap').children().attr('data-value', 'trust').text(xabber.getString('omemo__dialog_fingerprints__button_trust'));\n        this.omemo.updateFingerprints(this.jid, device_id, fingerprint, true);\n        let device = this.is_own_devices ? this.account.omemo.own_devices[device_id] : this.model.devices[device_id];\n        if (device && is_trusted != 'trusted') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', true);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n            this.account.trigger('device_trusted', device.id, this.jid);\n        }\n    },\n\n    ignoreDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            fingerprint = $target.find('.fingerprint').text().replace(/ /g, \"\"),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n            device_id = Number($target.find('div.device-id').text());\n        $target.children('.buttons[data-trust]').attr('data-trust', 'ignore');\n        $target.find('.trust-item-wrap').children().attr('data-value', 'ignore').text(xabber.getString('omemo__dialog_fingerprints__button_ignore'));\n        this.omemo.updateFingerprints(this.jid, device_id, fingerprint, false);\n        let device = this.is_own_devices ? this.account.omemo.own_devices[device_id] : this.model.devices[device_id];\n        if (device && is_trusted != 'ignore') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', false);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    addRow: function (id, label, trust, fingerprint, options) {\n        options = options || {};\n        let delete_button = this.is_own_devices ? true : false,\n            edit_setting = id == this.omemo.get('device_id'),\n            old_fingerprint = options.old_fingerprint,\n            error;\n        if (fingerprint.match(/.{1,8}/g))\n            fingerprint = fingerprint.match(/.{1,8}/g).join(\" \");\n        else {\n            fingerprint = '';\n            error = xabber.getString(\"omemo__dialog_fingerprints__invalid_fingerprint\");\n            let device = this.is_own_devices ? this.account.omemo.own_devices[id] : this.model.devices[id];\n            if (device && trust != 'ignore') {\n                trust = 'ignore';\n                this.omemo.updateFingerprints(this.jid, id, fingerprint, false);\n                device.set('trusted', false);\n                device.is_session_initiated = false;\n                device.preKeys = null;\n                this.account.trigger('trusting_updated');\n            }\n        }\n        old_fingerprint && (old_fingerprint = old_fingerprint.match(/.{1,8}/g).join(\" \"));\n        let $row = templates.fingerprint_item({id,label,trust,fingerprint, delete_button, edit_setting, old_fingerprint, error});\n        return $row;\n    },\n\n    deleteDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            device_id = Number($target.find('div.device-id').text());\n        utils.dialogs.ask(xabber.getString(\"omemo__dialog_delete_device__header\"), xabber.getString(\"omemo__dialog_delete_device__text\", [device_id]), null, { ok_button_text: xabber.getString(\"omemo__dialog_delete_device__button_delete\")}).done((result) => {\n            if (result) {\n                $target.detach();\n                let f_count = this.$('div.fingerprints-content').find('div.row').length;\n                if (!f_count)\n                    this.$('div.fingerprints-content').html($(`<div class=\"empty-table\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n                this.jid == this.account.get('jid') && f_count++;\n                this.$('.additional-info').text(xabber.getQuantityString(\"omemo__dialog_fingerprints__text_devices_count\", f_count, [this.jid, f_count]));\n                delete this.model.own_devices[device_id];\n                let conn = this.account.getConnectionForIQ();\n                if (conn && conn.omemo) {\n                    delete conn.omemo.devices[device_id];\n                    conn.omemo.publishDevice(null, null, () => {\n                        $target.detach();\n                    });\n                    conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                }\n            }\n        });\n    },\n});\n\nxabber.FingerprintsOwnDevices = xabber.BasicView.extend({\n    className: 'modal main-modal fingerprints-devices-wrap',\n    template: templates.fingerprints_devices,\n\n    events: {\n        'click .btn-trust': \"trustDevice\",\n        'click .btn-ignore': \"ignoreDevice\",\n        'click .btn-cancel': \"close\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.omemo = this.model;\n        this.jid = this.account.get('jid');\n        this.is_own_devices = true;\n    },\n\n    open: function (device_id, is_own) {\n        this.omemo = this.account.omemo;\n        this.data.set('visible', true);\n        this.updateColorScheme();\n        this.show();\n        this.renderOwnDevices(device_id, is_own);\n    },\n\n    updateTrustDevice: function (device_id, $container, context, callback, no_omemo_callback) {\n        this.omemo.getMyDevices().then(() => {\n            let device = this.model.own_devices[device_id];\n            if (!device){\n                no_omemo_callback && no_omemo_callback()\n                return;\n            }\n            if (device.get('ik')) {\n                let f = device.generateFingerprint(),\n                    fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                    is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                this.renderTrustOnFingerprint(is_trusted, $container, context, callback);\n            }\n            else {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        ik = $bundle.find(`ik`).text();\n                    if (ik) {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let f = device.generateFingerprint(),\n                            fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                            is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                        this.renderTrustOnFingerprint(is_trusted, $container, context, callback);\n                    }\n                }, () => {\n                });\n            }\n        });\n    },\n\n    renderTrustOnFingerprint: function (is_trusted, $container, context, callback) {\n        $container.find('.device-encryption').attr('data-trust', is_trusted).addClass('active');\n        $container.attr('data-trust', is_trusted);\n        if (is_trusted === 'unknown'){\n            $container.find('.device-encryption span').text(xabber.getString(\"settings_account__unverified_device\"));\n            $container.attr('data-trust-text', xabber.getString(\"settings_account__unverified_device\"));\n        } else if (is_trusted === 'trust') {\n            $container.find('.device-encryption span').text(xabber.getString(\"settings_account__trusted_device\"));\n            $container.attr('data-trust-text', xabber.getString(\"settings_account__trusted_device\"));\n        } else if (is_trusted === 'ignore') {\n            $container.find('.device-encryption span').text(xabber.getString(\"settings_account__ignored_device\"));\n            $container.attr('data-trust-text', xabber.getString(\"settings_account__ignored_device\"));\n        }\n        if (is_trusted !== 'trust' && is_trusted !== 'ignore'){\n            let $warning_container = $container.closest('.devices-wrap').find('.device-encryption-warning'),\n                untrusted_count = parseInt($warning_container.attr('data-not-trusted-count')) + 1;\n            $warning_container.removeClass('hidden').attr('data-not-trusted-count', untrusted_count);\n            $warning_container.find('.device-encryption-warning-label').html(xabber.getString(\"settings_account__encryption_warning_text\", [untrusted_count]));\n        }\n        $container.find('.device-encryption .mdi-lock').removeClass('hidden');\n        context && context.updateHeight && context.updateHeight();\n        callback && callback();\n    },\n\n    renderOwnDevices: function (device_id, is_own) {\n        this.omemo.getMyDevices().then(() => {\n            this.device_id = device_id;\n            this.fingerprint = null;\n            if (is_own)\n                this.updateOwnFingerprint(device_id);\n            else{\n                this.updateOwnFingerprint(device_id);\n                this.updateFingerprints(device_id);\n            }\n        });\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateFingerprints: async function (device_id) {\n        let counter = 0,\n            dfd = new $.Deferred(),\n            $container = this.$('div.fingerprints-content .other-device-content'),\n            device = this.model.own_devices[device_id];\n        $container.html('');\n        dfd.done((is_error) => {\n            console.log(is_error);\n            this.$('.dropdown-button').dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                container: this.$('.fingerprints-content .other-device-content')[0],\n                alignment: 'left'\n            });\n        });\n        if (device.get('ik')) {\n            let options = {},\n                f = device.generateFingerprint(),\n                fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n            is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n            this.fingerprint = f;\n            $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n            dfd.resolve();\n        }\n        else {\n            this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                let $iq = $(iq),\n                    $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                    ik = $bundle.find(`ik`).text();\n                if (ik) {\n                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                    let options = {},\n                        f = device.generateFingerprint(),\n                        fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                        is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                    is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                    this.fingerprint = f;\n                    $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                }\n                dfd.resolve();\n            }, () => {\n                dfd.resolve(true);\n            });\n        }\n    },\n\n    updateOwnFingerprint: async function () {\n        this.$('.this-device-content').html(\"\");\n        let omemo = this.account.omemo;\n        if (omemo) {\n            let device = omemo.own_devices[omemo.get('device_id')];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    this.$('.this-device-content').html(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else if (device.get('ik')) {\n                    device.set('fingerprint', device.generateFingerprint());\n                    this.$('.this-device-content').html(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else {\n                    device.getBundle().then(({pk, spk, ik}) => {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let fingerprint = device.generateFingerprint();\n                        if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                            device.set('fingerprint', fingerprint);\n                        this.$('.this-device-content').html(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                    });\n                }\n            } else {\n                omemo.store.getIdentityKeyPair().then((ik) => {\n                    let pubKey = ik.pubKey;\n                    if (pubKey.byteLength == 33)\n                        pubKey = pubKey.slice(1);\n                    let fingerprint = Array.from(new Uint8Array(pubKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n                    this.$('.this-device-content').html(this.addRow(omemo.get('device_id'), this.account.settings.get('device_label_text'), null, fingerprint));\n                });\n            }\n\n        }\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                deferred.resolve();\n            }});\n        return deferred.promise();\n    },\n\n    trustDevice: function (ev) {\n        let $target = $(ev.target).closest('div.fingerprints-content'),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust');\n        $target.children('.buttons[data-trust]').attr('data-trust', 'trust');\n        this.omemo.updateFingerprints(this.jid, this.device_id, this.fingerprint, true);\n        let device = this.account.omemo.own_devices[this.device_id];\n        if (device && is_trusted != 'trusted') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', true);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    ignoreDevice: function (ev) {\n        let $target = $(ev.target).closest('div.fingerprints-content'),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust');\n        $target.children('.buttons[data-trust]').attr('data-trust', 'ignore');\n        this.omemo.updateFingerprints(this.jid, this.device_id, this.fingerprint, false);\n        let device = this.account.omemo.own_devices[this.device_id];\n        if (device && is_trusted != 'ignore') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', false);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    addRow: function (id, label, trust, fingerprint, options) {\n        options = options || {};\n        let edit_setting = id == this.omemo.get('device_id'),\n            old_fingerprint = options.old_fingerprint,\n            device_icons = [\n                'device-cellphone',\n                'device-console',\n                'device-desktop',\n                'device-tablet',\n                'device-web',\n            ],\n            error, svg_icon;\n        if (fingerprint.match(/.{1,4}/g))\n            fingerprint = fingerprint.match(/.{1,4}/g).join(\" \");\n        else {\n            fingerprint = '';\n            error = xabber.getString(\"omemo__dialog_fingerprints__invalid_fingerprint\");\n            let device = this.account.omemo.own_devices[id];\n            if (device && trust != 'ignore') {\n                trust = 'ignore';\n                this.omemo.updateFingerprints(this.jid, id, fingerprint, false);\n                device.set('trusted', false);\n                device.is_session_initiated = false;\n                device.preKeys = null;\n                this.account.trigger('trusting_updated');\n            }\n        }\n        old_fingerprint && (old_fingerprint = old_fingerprint.match(/.{1,4}/g).join(\" \"));\n        svg_icon = edit_setting ? 'device-web' : device_icons[Math.floor(Math.random()*device_icons.length)]\n        let $row = templates.fingerprint_devices_item({id,label,trust, svg_icon, fingerprint, edit_setting, old_fingerprint, error});\n        return $row;\n    },\n\n    deleteDevice: function (ev) {\n        let $target = $(ev.target).closest('div.fingerprints-content');\n        utils.dialogs.ask(xabber.getString(\"omemo__dialog_delete_device__header\"), xabber.getString(\"omemo__dialog_delete_device__text\", [this.device_id]), null, { ok_button_text: xabber.getString(\"omemo__dialog_delete_device__button_delete\")}).done((result) => {\n            if (result) {\n                delete this.model.own_devices[this.device_id];\n                let conn = this.account.getConnectionForIQ();\n                if (conn && conn.omemo) {\n                    delete conn.omemo.devices[this.device_id];\n                    conn.omemo.publishDevice(null, null, () => {\n                        this.account.trigger('trusting_updated');\n                        this.close();\n                    });\n                    conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, this.device_id);\n                }\n            }\n        });\n    },\n\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n        this.account.settings.once(\"change:color\", this.updateColorScheme, this);\n    },\n});\n\nxabber.Bundle = Backbone.Model.extend({\n    initialize: async function (attrs, options) {\n        this.preKeys = [];\n        this.model = options.model;\n        this.store = options.store;\n        if (this.model.get('identityKey'))\n            this.getIdentity();\n        else\n            await this.generateIdentity();\n       await this.getPreKeys();\n       if (this.model.get('resend_bundle')) {\n           this.model.publishBundle(this.model.get('device_attrs'));\n           this.model.set('resend_bundle', false);\n           this.model.set('device_attrs', null);\n       }\n    },\n\n    generateIdentity: function () {\n        return Promise.all([\n            KeyHelper.generateIdentityKeyPair(),\n            KeyHelper.generateRegistrationId(),\n        ]).then((result) => {\n            let identityKey = result[0],\n                registrationId = result[1];\n            this.store.put('identityKey', identityKey);\n            this.store.put('registrationId', registrationId);\n            this.model.account.trigger('update_omemo_devices');\n            this.cacheIdentity(identityKey, registrationId);\n        });\n    },\n\n    getIdentity: function () {\n        let identityKey = JSON.parse(this.model.get('identityKey')),\n            registrationId = this.model.get('registrationId'),\n            pubKey = utils.fromBase64toArrayBuffer(identityKey.pubKey),\n            privKey = utils.fromBase64toArrayBuffer(identityKey.privKey);\n        this.store.put('identityKey', {pubKey: pubKey, privKey: privKey});\n        this.store.put('registrationId', registrationId);\n    },\n\n    cacheIdentity: function (identityKey, registrationId) {\n        let pubKey = utils.ArrayBuffertoBase64(identityKey.pubKey),\n            privKey = utils.ArrayBuffertoBase64(identityKey.privKey);\n        this.model.save('identityKey', JSON.stringify({pubKey: pubKey, privKey: privKey}));\n        this.model.save('registrationId', registrationId);\n    },\n\n    generatePreKeys: async function () {\n        let preKeysPromises = [];\n        for (let i = 1; i <= constants.PREKEYS_COUNT; i++) {\n            preKeysPromises.push(this.generatePreKey(i));\n        }\n\n        preKeysPromises.push(this.generateSignedPreKey(1));\n\n        return await Promise.all(preKeysPromises);\n    },\n\n    getSignedPreKey: async function () {\n        let spk = this.model.get('signedPreKey');\n        if (spk) {\n            let pubKey = utils.fromBase64toArrayBuffer(spk.keyPair.pubKey),\n                privKey = utils.fromBase64toArrayBuffer(spk.keyPair.privKey),\n                signature = utils.fromBase64toArrayBuffer(spk.signature),\n                keyPair = {pubKey, privKey},\n                keyId = spk.keyId;\n            return {keyPair, keyId, signature};\n        }\n        else {\n            return await this.generateSignedPreKey(this.preKeys[0].keyId || 1);\n        }\n    },\n\n    getPreKeys: async function () {\n        let prekeys = this.model.prekeys.getAll();\n        if (Object.keys(prekeys).length >= constants.MIN_PREKEYS_COUNT) {\n            for (let p in prekeys) {\n                let pk = prekeys[p],\n                    id = pk.id,\n                    prekey = JSON.parse(pk.key),\n                    priv_pk = utils.fromBase64toArrayBuffer(prekey.privKey),\n                    pub_pk = utils.fromBase64toArrayBuffer(prekey.pubKey),\n                    key_pair = {pubKey: pub_pk, privKey: priv_pk};\n                this.preKeys.push({keyId: id, keyPair: key_pair});\n                this.store.storePreKey(id, key_pair);\n            }\n            this.getUsedPreKeys();\n            let spk = await this.getSignedPreKey();\n            this.preKeys.push(spk);\n            this.store.storeSignedPreKey(spk.keyId, spk.keyPair);\n        }\n        else {\n            await this.generatePreKeys().then((prekeys) => {\n                this.preKeys = prekeys;\n                this.getUsedPreKeys();\n            });\n        }\n    },\n\n    getUsedPreKeys: function () {\n        let prekeys = this.model.own_used_prekeys.getAll();\n        if (Object.keys(prekeys).length) {\n            for (let p in prekeys) {\n                let pk = prekeys[p],\n                    id = pk.id,\n                    prekey = JSON.parse(pk.key),\n                    privKey = utils.fromBase64toArrayBuffer(prekey.privKey),\n                    pubKey = utils.fromBase64toArrayBuffer(prekey.pubKey);\n                this.store.storePreKey(id, {pubKey, privKey});\n            }\n        }\n    },\n\n    generatePreKey: async function (id) {\n        let preKey = await KeyHelper.generatePreKey(id);\n        this.store.storePreKey(id, preKey.keyPair);\n\n        return preKey;\n    },\n\n    generateSignedPreKey: async function (id) {\n        let identity = await this.store.getIdentityKeyPair();\n        let signedPreKey = await KeyHelper.generateSignedPreKey(identity, id);\n\n        this.store.storeSignedPreKey(id, signedPreKey.keyPair);\n        this.cacheSignedPreKey(signedPreKey);\n\n        return signedPreKey;\n    },\n\n    cacheSignedPreKey: function (spk) {\n        let pubKey = utils.ArrayBuffertoBase64(spk.keyPair.pubKey),\n            privKey = utils.ArrayBuffertoBase64(spk.keyPair.privKey),\n            signature = utils.ArrayBuffertoBase64(spk.signature),\n            keyPair = {pubKey, privKey},\n            keyId = spk.keyId,\n            converted_spk = {keyPair, keyId, signature};\n        this.model.save('signedPreKey', converted_spk);\n    }\n\n});\n\nxabber.Prekeys = Backbone.Model.extend({\n    initialize: function (options) {\n        this.name = options.name;\n        this.model = options.model;\n    },\n\n    get: function (id) {\n        let prekeys = _.clone(this.model.get(this.name));\n        return prekeys[id];\n    },\n\n    put: function (prekey) {\n        if (!prekey.id)\n            return;\n        let prekeys = _.clone(this.model.get(this.name));\n        prekeys[prekey.id] = prekey;\n        this.model.save(this.name, prekeys);\n    },\n\n    getAll: function () {\n        let prekeys = _.clone(this.model.get(this.name));\n        return prekeys;\n    },\n\n    remove: function (id) {\n        if (!id)\n            return;\n        let prekeys = _.clone(this.model.get(this.name));\n        delete prekeys[id];\n        this.model.save(this.name, prekeys);\n    }\n});\n\nxabber.Device = Backbone.Model.extend({\n    initialize: function (attrs, options) {\n        this.account = options.account;\n        this.id = attrs.id;\n        this.jid = attrs.jid;\n        this.store = options.store;\n        this.preKeys = null;\n        this.address = new SignalProtocolAddress(attrs.jid, attrs.id);\n    },\n\n    generateFingerprint: function () {\n        let identityKey = this.get('ik');\n        if (!identityKey)\n            return;\n        if (identityKey.byteLength == 33)\n            identityKey = identityKey.slice(1);\n        return Array.from(new Uint8Array(identityKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n    },\n\n    closeSession: function (reason) {\n        this.account.getConnectionForIQ().omemo.sendOptOut({\n            to: this.jid,\n            reason: reason\n        }, () => {});\n    },\n\n    getBundle: async function () {\n        if (!this._pending_bundle) {\n            this._pending_bundle = true;\n            this._dfd_bundle = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: this.jid, id: this.id}, (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${this.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        $spk = $bundle.find('spk'),\n                        spk = {id: $spk.attr('id'), key: $spk.text(), signature: $bundle.find('spks').text()},\n                        ik = $bundle.find(`ik`).text();\n                    this.preKeys = [];\n                    if (!ik)\n                        this.set('ik', null);\n                    $bundle.find('prekeys pk').each((i, pk) => {\n                        let $pk = $(pk);\n                        this.preKeys.push({id: $pk.attr('id'), key: $pk.text()});\n                    });\n                    this._pending_bundle = false;\n                    let pk = this.getRandomPreKey();\n                    if (!pk) {\n                        this._dfd_bundle.reject();\n                        reject();\n                    }\n                    else {\n                        this._dfd_bundle.resolve({pk, spk, ik});\n                        resolve({pk, spk, ik});\n                    }\n                }, () => {\n                    this.set('ik', null);\n                    this.preKeys = [];\n                    this._dfd_bundle.reject();\n                    this._pending_bundle = false;\n                    reject();\n                });\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_bundle.done(({pk, spk, ik}) => {\n                    resolve({pk, spk, ik});\n                });\n                this._dfd_bundle.fail(() => {\n                    reject();\n                });\n            });\n        }\n    },\n\n    getRandomPreKey: function () {\n        let min = 0,\n            max = this.preKeys.length - 1,\n            i = Math.floor(min + Math.random() * (max + 1 - min));\n        return this.preKeys[i];\n    },\n\n    decrypt: async function (cipherText, preKey) {\n        try {\n            let sessionCipher = new SessionCipher(this.store, this.address), plainText;\n\n            if (preKey){\n                plainText = await sessionCipher.decryptPreKeyWhisperMessage(cipherText, 'binary');\n            }\n            else {\n                if (!this.store.hasSession(this.address.toString())) {\n                    let session = this.getCachedSession();\n                    if (session)\n                        await this.store.storeSession(this.address.toString(), session);\n                }\n                plainText = await sessionCipher.decryptWhisperMessage(cipherText, 'binary');\n            }\n\n            return plainText;\n        }\n        catch (e) {\n            throw e;\n        }\n    },\n\n    getPreKey: function () {\n        let pk = this.account.omemo.used_prekeys.get(String(this.id));\n        return pk;\n    },\n\n    getCachedSession: function () {\n        return this.account.omemo.getSession('session' + this.address.toString());\n    },\n\n    encrypt: async function (plainText) {\n        try {\n            if (this.get('trusted') === false && (this.id != this.account.omemo.get('device_id')))\n                return null;\n            if (!this.store.hasSession(this.address.toString()) || !this.is_session_initiated) { // this.preKeys ??\n                if (this.preKeys && !this.preKeys.length)\n                    return null;\n                this.is_session_initiated = true;\n                let s = await this.initSession();\n                if (!s)\n                    return null;\n            }\n\n            let session = this.getSession(),\n                ciphertext = await session.encrypt(plainText);\n\n            return {\n                preKey: ciphertext.type === 3,\n                ciphertext: ciphertext,\n                deviceId: this.address.getDeviceId()\n            };\n        } catch (e) {\n            console.log('Error:', e);\n            console.warn('Could not encrypt data for device with id ' + this.address.getDeviceId());\n\n            return null;\n        }\n    },\n\n    initSession: async function () {\n        let {pk, spk, ik} = await this.getBundle(),\n            cached_pk = this.getPreKey(),\n            id = this.id;\n        if (cached_pk) {\n            if (!spk || spk && JSON.stringify(spk) == JSON.stringify(cached_pk.spk) && JSON.stringify(ik) == JSON.stringify(cached_pk.ik))\n                pk = cached_pk.pk;\n            else\n                this.account.omemo.used_prekeys.put({id, pk, spk, ik});\n        }\n        else\n            this.account.omemo.used_prekeys.put({id, pk, spk, ik});\n        this.set({'pk': utils.fromBase64toArrayBuffer(pk.key), 'ik': utils.fromBase64toArrayBuffer(ik)});\n        this.fingerprint = this.generateFingerprint();\n        let trusted = this.account.omemo.isTrusted(this.jid, id, this.fingerprint);\n        this.set('trusted', trusted);\n        if ((this.id != this.account.omemo.get('device_id')) && trusted === false)\n            return false;\n        this.processPreKey({\n            registrationId: Number(id),\n            identityKey: utils.fromBase64toArrayBuffer(ik),\n            signedPreKey: {\n                keyId: Number(spk.id),\n                publicKey: utils.fromBase64toArrayBuffer(spk.key),\n                signature: utils.fromBase64toArrayBuffer(spk.signature)\n            },\n            preKey: {\n                keyId: Number(pk.id),\n                publicKey: utils.fromBase64toArrayBuffer(pk.key)\n            }\n        });\n        return true;\n    },\n\n    processPreKey: function (preKeyBundle) {\n        this.session = new SessionBuilder(this.store, this.address);\n        return this.session.processPreKey(preKeyBundle);\n    },\n\n    removeSession: function () {\n        this.store.removeSession(this.address.toString());\n        this.sessionCipher = null;\n    },\n\n    getSession: function () {\n        if (!this.sessionCipher) {\n            this.sessionCipher = new SessionCipher(this.store, this.address);\n        }\n        return this.sessionCipher;\n    }\n});\n\nxabber.Omemo = Backbone.ModelWithStorage.extend({\n    defaults: {\n        sessions: {},\n        fingerprints: {},\n        prekeys: {},\n        retract_version: 0,\n        used_prekeys: {},\n        own_used_prekeys: {},\n        device_id: \"\"\n    },\n\n    _initialize: function (attrs, options) {\n        this.on(\"change:device_id\", this.onDeviceIdUpdated, this);\n        this.on(\"destroy\", this.onOmemoDestroyed, this);\n        this.own_devices = {};\n        this.account = options.account;\n        this.peers = new xabber.Peers();\n        if (!this.get('device_id'))\n            this.set('device_id', this.generateDeviceId());\n        this.store = new xabber.SignalProtocolStore();\n        this.account.on(\"devices_updated\", this.onOwnDevicesUpdated, this);\n        this.store.on('prekey_removed', this.removePreKey, this);\n        this.store.on('session_stored', this.cacheSession, this);\n    },\n\n    storeSessions: function () {\n        let sessions = this.get('sessions');\n        for (let session_id in sessions) {\n            let session = sessions[session_id];\n            session && this.store.put(session_id, session);\n        }\n    },\n\n    onOmemoDestroyed: function () {\n        if (this.own_devices && Object.keys(this.own_devices).length != 0)\n            this.deleteOwnDevice();\n        this.cached_messages && this.cached_messages.destroy();\n        this.account.connection.deleteHandler(this._msg_handler);\n    },\n\n    deleteOwnDevice: function () {\n        let device_id = this.get('device_id');\n        delete this.own_devices[device_id];\n        let conn = this.account.getConnectionForIQ();\n        if (conn && conn.omemo) {\n            delete conn.omemo.devices[device_id];\n            conn.omemo.publishDevice(null, null, () => {});\n            conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n        }\n    },\n\n    onConnected: function () {\n        this.prekeys = new xabber.Prekeys({name: 'prekeys', model: this});\n        this.used_prekeys = new xabber.Prekeys({name: 'used_prekeys', model: this});\n        this.own_used_prekeys = new xabber.Prekeys({name: 'own_used_prekeys', model: this});\n        this.cached_messages = new xabber.DecryptedMessages({id: 'decrypted-messages'}, {\n            account: this.account,\n            storage_name: xabber.getStorageName() + '-decrypted-messages-' + this.account.get('jid'),\n            fetch: 'before'\n        });\n        this.bundle = new xabber.Bundle(null, {store: this.store, model: this});\n        this.connection = this.account.connection;\n        this.registerMessageHandler();\n        this.addDevice();\n        this.account.set(\"omemo_enabled\", true);\n    },\n\n    getMyDevices: async function () {\n        if (!this._pending_own_devices) {\n            this._pending_own_devices = true;\n            this._dfd_own_devices = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                let conn = this.account.getConnectionForIQ();\n                if (conn) {\n                    if (conn.omemo) {\n                        conn.omemo.getDevicesNode(null, (cb) => {\n                            conn.omemo.devices = conn.omemo.parseUserDevices($(cb));\n                            this._pending_own_devices = false;\n                            this._dfd_own_devices.resolve();\n                            resolve();\n                        }, function () {\n                            this._pending_own_devices = false;\n                            this._dfd_own_devices.resolve();\n                            resolve();\n                        });\n                    } else\n                        this._pending_own_devices = false;\n                } else\n                    this._pending_own_devices = false;\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_own_devices.done(() => {\n                    resolve();\n                });\n            });\n        }\n    },\n\n    updateFingerprints: function (contact, device_id, fingerprint, trusted) {\n        let fingerprints = _.clone(this.get('fingerprints'));\n        if (!fingerprints[contact])\n            fingerprints[contact] = {};\n        let contact_fingerprints = fingerprints[contact];\n        if (_.isArray(contact_fingerprints))\n            contact_fingerprints = {};\n        contact_fingerprints[device_id] = {fingerprint, trusted};\n        fingerprints[contact] = contact_fingerprints;\n        this.save('fingerprints', fingerprints);\n    },\n\n    isTrusted: function (jid, device_id, fingerprint) {\n        let fingerprints = _.clone(this.get('fingerprints'));\n        if (!fingerprints[jid])\n            return;\n        if (!fingerprints[jid][device_id])\n            return;\n        let fing = fingerprints[jid][device_id];\n        if (fing) {\n            if (fing.fingerprint == fingerprint) {\n                if (fing.trusted === undefined)\n                    return;\n                else\n                    return fing.trusted;\n            }\n            else\n                return null;\n        }\n    },\n\n    cacheRetractVersion: function (version) {\n        console.log('version ' + version)\n        this.save('retract_version', version);\n    },\n\n    getRetractVersion: function () {\n        return this.get('retract_version');\n    },\n\n    addDevice: function () {\n        let device_id = this.get('device_id');\n        if (this.connection) {\n            let omemo = this.account.getConnectionForIQ().omemo;\n            if (Object.keys(omemo.devices).length) {\n                let device = omemo.devices[device_id];\n                if (!device) {\n                    let label = this.account.settings.get('device_label_text') || `PC, ${utils.getOS()}, ${env.utils.getBrowser()}`;\n                    this.publishBundle({device_id: device_id, label: label, omemo: omemo});\n                }\n                else {\n                    this.publishBundle();\n                }\n            }\n            else\n                omemo.getDevicesNode(null, (cb) => {\n                    this.account.getConnectionForIQ().omemo.devices = omemo.parseUserDevices($(cb));\n                    for (let dev_id in this.account.getConnectionForIQ().omemo.devices) {\n                        if (!this.own_devices[dev_id])\n                            this.own_devices[dev_id] = new xabber.Device({jid: this.account.get('jid'), id: dev_id}, { account: this.account, store: this.store});\n                    }\n                    let device = omemo.devices[device_id];\n                    if (!device) {\n                        let label = this.account.settings.get('device_label_text') || `PC, ${utils.getOS()}, ${env.utils.getBrowser()}`;\n                        this.publishBundle({device_id: device_id, label: label, omemo: omemo});\n                    }\n                    else {\n                        this.publishBundle();\n                    }\n                });\n        }\n    },\n\n    onDeviceIdUpdated: function () {\n        this.save('device_id', this.get('device_id'));\n    },\n\n    generateDeviceId: function () {\n        if (this.account.get('x_token') && this.account.get('x_token').token_uid && this.account.get('x_token').token_uid.length >= 8 && Number(this.account.get('x_token').token_uid.slice(0,8)))\n            return Number(this.account.get('x_token').token_uid.slice(0,8));\n        let min = 1,\n            max = Math.pow(2, 31) - 1,\n            rand = min + Math.random() * (max + 1 - min);\n        return Math.floor(rand);\n    },\n\n    updateMessage: function (attrs, contact) {\n        if (!this.cached_messages)\n            return;\n        this.cached_messages.updateMessage(attrs, contact);\n    },\n\n    registerMessageHandler: function () {\n        this.account.connection.deleteHandler(this._msg_handler);\n        this._msg_handler = this.account.connection.addHandler((message) => {\n            this.receiveMessage(message);\n            return true;\n        }, null, 'message', null, null, null, {'encrypted': true});\n    },\n\n    encrypt: function (contact, message) {\n        let peer = this.getPeer(contact.get('jid')),\n            $msg = $(message.tree()),\n            origin_id = $msg.children('origin-id').attr('id'),\n            plaintext = Strophe.serialize($msg.children('envelope')[0]) || \"\";\n\n        origin_id && this.cached_messages.putMessage(contact, origin_id, {envelope: plaintext});\n\n        return peer.encrypt(plaintext).then((encryptedMessage) => {\n\n            let encryptedElement = $build('encrypted', {xmlns: Strophe.NS.OMEMO})\n                .c('header', {\n                    sid: this.get('device_id'),\n                    label: this.account.settings.get('device_label_text')\n                }),\n                myKeys = $build('keys', {jid: this.account.get('jid')});\n\n            encryptedElement.c('keys', { jid: contact.get('jid')});\n\n            for (let key of encryptedMessage.keys) {\n                let attrs = {\n                    rid: key.deviceId,\n                    kex: undefined\n                };\n                if (key.preKey) {\n                    attrs.kex = true;\n                }\n\n                if (peer.devices[key.deviceId])\n                    encryptedElement.c('key', attrs).t(btoa(key.ciphertext.body)).up();\n                else\n                    myKeys.c('key', attrs).t(btoa(key.ciphertext.body)).up();\n\n            }\n            encryptedElement.up().cnode(myKeys.tree());\n\n            encryptedElement.up().up()\n                .c('payload').t(utils.ArrayBuffertoBase64(encryptedMessage.payload));\n\n            $(message.tree()).find('envelope').remove();\n\n            message.cnode(encryptedElement.tree());\n            message.up().c('encryption', {\n                xmlns: Strophe.NS.EXPLICIT_MESSAGE_ENCRYPTION,\n                namespace: Strophe.NS.OMEMO\n            });\n            message.up().c('store', {\n                xmlns: 'urn:xmpp:hints'\n            }).up()\n                .c('body').t('This message is encrypted using OMEMO end-to-end encryption.').up();\n\n            return {message: message, is_trusted: encryptedMessage.is_trusted};\n        }).catch((msg) => {\n        });\n    },\n\n    hasChanges: function (o1, o2) {\n        let obj1 = _.clone(o1), obj2 = _.clone(o2);\n        for (let d in obj1) {\n            delete obj2[d];\n        }\n        for (let d in obj2) {\n            delete obj1[d];\n        }\n        return Object.keys(obj1).length || Object.keys(obj2).length;\n    },\n\n    receiveHeadlineMessage: function (message) {\n        if (!this.account.omemo || (this.account.omemo && this.cid != this.account.omemo.cid))\n            return;\n        let $message = $(message),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            node = $message.find('items').attr('node');\n        if ($message.find('event[xmlns=\"' + Strophe.NS.PUBSUB + '#event\"]').length) {\n            if (node == `${Strophe.NS.OMEMO}:devices`) {\n                let devices = this.account.getConnectionForIQ().omemo.parseUserDevices($message);\n                if (from_jid === this.account.get('jid')) {\n                    let has_devices = this.own_devices && Object.keys(this.own_devices).length,\n                        has_changes = this.hasChanges(this.own_devices, devices);\n                    this.account.getConnectionForIQ().omemo.devices = devices;\n                    let device_id = this.get('device_id'),\n                        device = this.account.getConnectionForIQ().omemo.devices[device_id];\n                    if (has_changes) {\n                        this.account.trigger(\"devices_updated\");\n                    }\n                    if (has_devices && has_changes) {\n                        this.account.trigger('trusting_updated');\n                    }\n                }\n                else {\n                    let peer = this.getPeer(from_jid),\n                        has_devices = peer.devices && Object.keys(peer.devices).length,\n                        has_changes = this.hasChanges(peer.devices, devices);\n                    peer.updateDevices(devices);\n                    if (has_changes) {\n                        this.account.trigger('trusting_updated');\n                    }\n                }\n                return;\n            }\n            if (node == `${Strophe.NS.OMEMO}:bundles`) {\n                let $item = $message.find('items item').first(),\n                    device_id = $item.attr('id'),\n                    $bundle = $item.children(`bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`), device;\n                if (from_jid === this.account.get('jid')) {\n                    let devices = this.account.getConnectionForIQ().omemo.devices\n                    if (devices && devices[device_id]) {\n                        if (!this.own_devices[device_id])\n                            this.own_devices[device_id] = new xabber.Device({jid: this.account.get('jid'), id: device_id}, { account: this.account, store: this.store});\n                        device = this.own_devices[device_id];\n                    }\n                } else {\n                    let peer = this.peers.get(from_jid);\n                    if (peer) {\n                        device = peer.devices[device_id];\n                    }\n                }\n                if (device) {\n                    let ik = $bundle.find(`ik`).text(),\n                        device_ik = device.get(`ik`), preKeys = [];\n                    if (!ik) {\n                        device.set('ik', null);\n                        return;\n                    }\n                    $bundle.find('prekeys pk').each((i, pk) => {\n                        let $pk = $(pk);\n                        preKeys.push({id: $pk.attr('id'), key: $pk.text()});\n                    });\n                    device.preKeys = preKeys;\n                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                    device.set('fingerprint', device.generateFingerprint());\n                    device_ik && (device_ik = utils.ArrayBuffertoBase64(device_ik));\n                    if (!_.isUndefined(device_ik) && device_ik != ik)\n                        this.account.trigger('trusting_updated');\n                }\n            }\n        }\n    },\n\n    receiveChatMessage: function (message, options, deferred) {\n        options = options || {};\n        let $message = $(message);\n        if ($message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length) {\n            if ($message.find('result[xmlns=\"' + Strophe.NS.MAM + '\"]').length)\n                _.extend(options, {\n                    is_mam: true,\n                    is_archived: true\n                });\n            if ($message.find('[xmlns=\"' + Strophe.NS.CARBONS + '\"]').length)\n                options.carbon_copied = true;\n\n            let $msg = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).parent(),\n                jid = (Strophe.getBareJidFromJid($msg.attr('from')) === this.account.get('jid') ? Strophe.getBareJidFromJid($msg.attr('to')) : Strophe.getBareJidFromJid($msg.attr('from'))) || options.from_jid,\n                contact = this.account.contacts.get(options.conversation ? options.conversation : jid),\n                stanza_id = $msg.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n                cached_msg = stanza_id && this.cached_messages && this.cached_messages.getMessage(contact, stanza_id);\n\n            if (Strophe.getBareJidFromJid($msg.attr('from')) != this.account.get('jid') && options.carbon_copied && options.carbon_direction && options.carbon_direction === 'sent')\n                return;\n\n            let device_id = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"] header`).attr('sid');\n            options.device_id = device_id;\n            if (cached_msg && cached_msg.ephemeral_removed)\n                return;\n\n            if (cached_msg && cached_msg.envelope) {\n                if (!options.replaced) {\n                    options.encrypted = true;\n                    this.getTrusted($message).then((is_trusted) => {\n                        options.is_trusted = is_trusted;\n                        $message.find('body').remove();\n                        $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(cached_msg.envelope);\n                        if ($message.find('displayed-time').length){\n                            options.displayed_time = $message.find('displayed-time').attr('stamp');\n                        }\n                        if (options.gallery && deferred)\n                            deferred.resolve($message, options);\n\n                        if (!options.not_verified_device){\n                            let peer = this.getPeer(contact.get('jid')),\n                                device = peer.devices[device_id];\n                            if (device && device.get('fingerprint')) {\n                                let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                                if (_.isUndefined(trusted)){\n                                    options.not_verified_device = device_id;\n                                    options.not_verified_device_no_device = false;\n                                }\n                            } else if (Strophe.getBareJidFromJid($msg.attr('from')) != this.account.get('jid')){\n                                options.not_verified_device = device_id;\n                                options.not_verified_device_no_device = true;\n                            }\n                        }\n                        this.account.chats.receiveChatMessage($message[0], options);\n                    });\n                    return;\n                }\n                else if (options.replaced && $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"] header`).attr('sid') == this.get('device_id')) {\n                    options.encrypted = true;\n                    $message.find('body').remove();\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(cached_msg);\n                    let chat = this.account.chats.getChat(contact, 'encrypted');\n                    chat && chat.messages.createFromStanza($message, options);\n                    let msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id);\n                    if (msg_item) {\n                        msg_item.set('last_replace_time', $message.find('replaced').attr('stamp'));\n                        chat && chat.item_view.updateLastMessage(chat.last_message);\n                    }\n                    return;\n                }\n            }\n\n            if (options.replaced) {\n                this.decrypt(message.children('replace').children('message'), options).then((decrypted_msg) => {\n                    if (decrypted_msg) {\n                        options.encrypted = true;\n                        stanza_id && this.cached_messages.putMessage(contact, stanza_id, {envelope: decrypted_msg});\n                        $message.find('body').remove();\n                        $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(decrypted_msg);\n                        let chat = this.account.chats.getChat(contact, 'encrypted');\n                        chat && chat.messages.createFromStanza($message, options);\n                        let msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id);\n                        if (msg_item) {\n                            msg_item.set('last_replace_time', $message.find('replaced').attr('stamp'));\n                            chat && chat.item_view.updateLastMessage(chat.last_message);\n                        }\n                    }\n                });\n            } else {\n                this.getTrusted($message).then((is_trusted) => {\n                    options.is_trusted = is_trusted;\n                    return this.decrypt(message);\n                }).then((decrypted_msg) => {\n                    if (decrypted_msg) {\n                        options.encrypted = true;\n                        stanza_id && this.cached_messages.putMessage(contact, stanza_id, {envelope: decrypted_msg});\n                        $message.find('body').remove();\n                    }\n                    else {\n                        if (decrypted_msg === null) {\n                            this.account.chats.getChat(contact, 'encrypted').item_view.updateLastMessage();\n                            return;\n                        }\n                        options.not_encrypted = true;\n                        delete options.is_trusted;\n                    }\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(decrypted_msg);\n                    if (options.gallery && decrypted_msg && deferred)\n                        deferred.resolve($message, options);\n                    else if (options.gallery && deferred)\n                        deferred.reject();\n\n                    if (!options.not_verified_device){\n                        let peer = this.getPeer(contact.get('jid')),\n                            device = peer.devices[device_id];\n                        if (device && device.get('fingerprint')) {\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (_.isUndefined(trusted)){\n                                options.not_verified_device = device_id;\n                                options.not_verified_device_no_device = false;\n                            }\n                        } else if (Strophe.getBareJidFromJid($msg.attr('from')) != this.account.get('jid')){\n                            options.not_verified_device = device_id;\n                            options.not_verified_device_no_device = true;\n                        }\n                    }\n                    this.account.chats.receiveChatMessage($message[0], options);\n                }).catch((e) => {\n                    if (e.name === 'MessageCounterError')//for capturing double decryption of same message\n                        return;\n                    if (options.synced_msg && !options.decryption_retry) {\n                        this.receiveChatMessage($message[0], _.extend(options, {decryption_retry: true}));\n                        return;\n                    }\n                    options.not_encrypted = true;\n                    delete options.is_trusted;\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).remove();\n                    if (options.gallery && deferred)\n                        deferred.reject();\n                    this.account.chats.receiveChatMessage($message[0], options);\n                });\n            }\n            if (options.gallery && deferred)\n                deferred.reject();\n        }\n        if (options.gallery && deferred)\n            deferred.reject();\n    },\n\n    checkOwnFingerprints: async function () {\n        return new Promise((resolve, reject) => {\n            let is_trusted = true,\n                dfd = new $.Deferred(), counter = 0;\n            dfd.done((t) => {\n                let trust = t === null ? 'error' : (t === undefined ? 'none' : t);\n                resolve(trust);\n            });\n            if (Object.keys(this.own_devices).length) {\n                counter = Object.keys(this.own_devices).length;\n                for (let device_id in this.own_devices) {\n                    let device = this.own_devices[device_id];\n                    if (device_id == this.get('device_id')) {\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                        continue;\n                    }\n                    if (device.get('fingerprint')) {\n                        let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else if (device.get('ik')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null)\n                                is_trusted = undefined;\n                            if (trusted === null)\n                                is_trusted = null;\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        });\n                    }\n                }\n            }\n            else {\n                this.getMyDevices().then(() => {\n                    this.onOwnDevicesUpdated().then(() => {\n                        counter = Object.keys(this.own_devices).length;\n                        for (let device_id in this.own_devices) {\n                            if (device_id == this.get('device_id')) {\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                                continue;\n                            }\n                            let device = this.own_devices[device_id];\n                            if (device.get('fingerprint')) {\n                                let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                                if (trusted === undefined && is_trusted !== null)\n                                    is_trusted = undefined;\n                                if (trusted === null)\n                                    is_trusted = null;\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                            } else {\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                            }\n                        }\n                    });\n                });\n            }\n        });\n    },\n\n    checkContactFingerprints: function (contact) {\n        return new Promise((resolve, reject) => {\n            let is_trusted = true,\n                peer = this.getPeer(contact.get('jid')),\n                dfd = new $.Deferred(), counter = 0, unverified_counter = 0;\n            dfd.done((t) => {\n                let trust = t === null ? 'error' : (t === undefined ? 'none' : t);\n                contact.trigger('update_trusted', trust, peer);\n                resolve({trust: trust, unverified_counter: unverified_counter});\n            });\n            if (Object.keys(peer.devices).length) {\n                counter = Object.keys(peer.devices).length;\n                for (let device_id in peer.devices) {\n                    let device = peer.devices[device_id];\n                    if (device.get('fingerprint')) {\n                        let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null){\n                            is_trusted = undefined;\n                            unverified_counter++;\n                        }\n                        if (trusted === null){\n                            is_trusted = null;\n                            unverified_counter++;\n                        }\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else if (device.get('ik')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null){\n                            is_trusted = undefined;\n                            unverified_counter++;\n                        }\n                        if (trusted === null){\n                            is_trusted = null;\n                            unverified_counter++;\n                        }\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                dfd.resolve(is_trusted);\n                            }\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null){\n                                is_trusted = undefined;\n                                unverified_counter++;\n                            }\n                            if (trusted === null){\n                                is_trusted = null;\n                                unverified_counter++;\n                            }\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                dfd.resolve(is_trusted);\n                            }\n                        });\n                    }\n                }\n            } else {\n                peer.getDevicesNode().then(() => {\n                    counter = Object.keys(peer.devices).length;\n                    !counter && dfd.resolve('nil');\n                    for (let device_id in peer.devices) {\n                        let device = peer.devices[device_id];\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null){\n                                is_trusted = undefined;\n                                unverified_counter++;\n                            }\n                            if (trusted === null) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                else{\n                                    is_trusted = null;\n                                    unverified_counter++;\n                                }\n                            }\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                dfd.resolve(is_trusted);\n                            }\n                        });\n                    }\n                });\n\n            }\n        });\n    },\n\n    getTrusted: async function ($message) {\n        let $msg = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).parent(),\n            from_jid = Strophe.getBareJidFromJid($msg.attr('from')),\n            to_jid = Strophe.getBareJidFromJid($msg.attr('to')),\n            contact = this.account.contacts.mergeContact(from_jid === this.account.get('jid') ? to_jid : from_jid);\n\n        let own_trusted = await this.checkOwnFingerprints(),\n            contact_trusted = await this.checkContactFingerprints(contact);\n        contact_trusted = contact_trusted.trust;\n        if (own_trusted === 'error' || (own_trusted === 'none' && contact_trusted !== 'error')) {\n            return own_trusted;\n        } else if (contact_trusted === 'error' || contact_trusted === 'none') {\n            return contact_trusted;\n        } else {\n            let device_id = $message.find('encrypted header').attr('sid'),\n                peer = this.getPeer(contact.get('jid')),\n                device = peer.devices[device_id];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                    if (trusted === false) {\n                        return 'untrusted';\n                    }\n                }\n            }\n            return true;\n        }\n    },\n\n    receiveMessage: function (message) {\n        let $message = $(message),\n            type = $message.attr('type');\n        if (type === 'headline') {\n            return this.receiveHeadlineMessage(message);\n        }\n    },\n\n    parseEncrypted: function ($encrypted) {\n        let $payload = $encrypted.children(`payload`),\n            $header = $encrypted.children('header'),\n            payload = utils.fromBase64toArrayBuffer($payload.text()),\n            sid = Number($header.attr('sid'));\n\n        let keys = $header.find(`key`).get().map(function(keyElement) {\n            return {\n                preKey: $(keyElement).attr('kex') === 'true' || $(keyElement).attr('kex') === '1',\n                ciphertext: utils.fromBase64toArrayBuffer($(keyElement).text()),\n                deviceId: parseInt($(keyElement).attr('rid'))\n            };\n        });\n\n        return {sid, keys, payload};\n    },\n\n    getPeer: function (jid) {\n        if (!this.peers.get(jid))\n            this.peers.create({jid}, {account:this.account});\n        return this.peers.get(jid);\n    },\n\n    decrypt: async function (message, options) {\n        let $message = $(message),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')) || options.from_jid,\n            $encrypted;\n\n        if ($message.find('result[xmlns=\"'+Strophe.NS.MAM+'\"]').length) {\n            let $m = $message.find('message').first();\n            from_jid = Strophe.getBareJidFromJid($m.attr('from'));\n            $encrypted = $message.children(`result`).children(`forwarded`).children(`message`).children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n        }\n        else if ($message.find('[xmlns=\"'+Strophe.NS.CARBONS+'\"]').length){\n            $encrypted = $message.children(`[xmlns=\"${Strophe.NS.CARBONS}\"]`).children(`forwarded`).children(`message`).children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n        }\n        else\n            $encrypted = $message.children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n\n        let encryptedData = this.parseEncrypted($encrypted),\n            deviceId = this.get('device_id'),\n            ownPreKeysArr =  encryptedData.keys.filter(preKey => preKey.deviceId == deviceId),\n            ownPreKey = ownPreKeysArr[0];\n        if (!ownPreKey)\n            return null;\n        let peer = this.getPeer(from_jid),\n            exportedKey;\n        try {\n            exportedKey = await peer.decrypt(encryptedData.sid, ownPreKey.ciphertext, ownPreKey.preKey);\n        }\n        catch (e) {\n            throw e;\n        }\n        if (!exportedKey)\n            return;\n        let exportedMasterKey = exportedKey.slice(0, 32),\n            HMACData = exportedKey.slice(32);\n\n        return utils.AES.decrypt(exportedMasterKey, HMACData, encryptedData.payload);\n    },\n\n    toBase64: function (arrayBuffer) {\n        return btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n    },\n\n    publish: function (spk, ik, pks, callback) {\n        if (!this.account.connection)\n            return;\n        let conn_omemo = this.account.getConnectionForIQ().omemo,\n            prekeys = [];\n        pks.forEach((pk) => {\n            let id = pk.keyId,\n                pubKey = utils.ArrayBuffertoBase64(pk.keyPair.pubKey),\n                privKey = utils.ArrayBuffertoBase64(pk.keyPair.privKey),\n                key = JSON.stringify({pubKey, privKey});\n            if (!pk.signature) {\n                prekeys.push({id: id, key: pubKey});\n                this.prekeys.put({id, key});\n            }\n        });\n        conn_omemo.configNode(() => {\n            conn_omemo.publishBundle({\n                spk: {id: spk.keyId, key: utils.ArrayBuffertoBase64(spk.keyPair.pubKey)},\n                spks: utils.ArrayBuffertoBase64(spk.signature),\n                ik:  utils.ArrayBuffertoBase64(ik),\n                pks: prekeys,\n                device_id: this.get('device_id')\n            }, callback);\n        });\n    },\n\n    removePreKey: async function (id) {\n        if (!this.account)\n            return;\n        let bundle = this.bundle,\n            removed_pk = this.bundle.preKeys.find(p => p && p.keyId === id && !p.signature);\n        if (!removed_pk)\n            return;\n        let pubKey = utils.ArrayBuffertoBase64(removed_pk.keyPair.pubKey),\n            privKey = utils.ArrayBuffertoBase64(removed_pk.keyPair.privKey),\n            key = JSON.stringify({pubKey, privKey}),\n            idx = this.bundle.preKeys.indexOf(removed_pk);\n        bundle.preKeys.splice(idx, 1);\n        this.own_used_prekeys.put({id, key});\n        this.prekeys.remove(id);\n\n        let prekeys_id_list = Object.keys(this.prekeys.getAll()),\n            prekeys_length = prekeys_id_list.length;\n\n        if (prekeys_length && prekeys_length < constants.MIN_PREKEYS_COUNT) {\n            let missing_keys = constants.PREKEYS_COUNT - prekeys_length,\n                last_id,\n                counter = 0,\n                used_last_id = 0;\n\n            last_id = Number(prekeys_id_list[prekeys_length - 1]);\n            if (last_id === NaN)\n                xabber.error('last_id is NaN!')\n\n            if (!_.isEmpty(this.own_used_prekeys.getAll())){\n                let used_prekeys_id_list = Object.keys(this.own_used_prekeys.getAll());\n\n                used_last_id = used_prekeys_id_list[used_prekeys_id_list.length - 1];\n                used_last_id = Number(used_last_id);\n\n                if (used_last_id && (used_last_id > last_id)){\n                    last_id = used_last_id;\n                }\n            }\n            for (let i = ++last_id; i < (last_id + missing_keys); i++){\n                xabber.error(i);\n                await this.bundle.generatePreKey(i).then((prekey) => {\n                    bundle.preKeys.push(prekey);\n                    counter++;\n                    if (counter === missing_keys)\n                        this.account.omemo.publishBundle();\n                });\n            }\n            if (missing_keys === 0)\n                this.account.omemo.publishBundle();\n        }\n        else\n            this.account.omemo.publishBundle();\n    },\n\n    cacheSession: function (attrs) {\n        let id = attrs.id,\n            session = attrs.rec,\n            sessions = _.clone(this.get('sessions'));\n        _.isArray(sessions) && (sessions = {});\n        sessions[id] = session;\n        this.save('sessions', sessions);\n    },\n\n    removeSession: function (id) {\n        let sessions = _.clone(this.get('sessions'));\n        _.isArray(sessions) && (sessions = {});\n        delete sessions[id];\n        this.save('sessions', sessions);\n    },\n\n    getSession: function (id) {\n        let sessions = _.clone(this.get('sessions'));\n        return sessions[id];\n    },\n\n    publishBundle: async function (device_attrs) {\n        if (!this.bundle)\n            return;\n        let spk = this.bundle.preKeys.find(pk => pk.signature),\n            ik = await this.store.getIdentityKeyPair(),\n            pks = this.bundle.preKeys;\n        xabber.error(pks);\n        if (!spk || !ik) {\n            this.set('resend_bundle', true);\n            this.set('device_attrs', device_attrs);\n            return;\n        }\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            if (device_attrs){\n                device_attrs.omemo.publishDevice(device_attrs.device_id, device_attrs.label);\n            }\n        });\n        this.account.getConnectionForIQ().omemo.getBundleInfo({jid: this.account.get('jid'), id: this.get('device_id')}, (res) => {\n            this.publish(spk, ik.pubKey, pks, () => {\n                dfd.resolve();\n            });\n        }, (err) => {\n            if (($(err).find('error').attr('code') == 404)){\n                this.account.getConnectionForIQ().omemo.createBundleNode(() => {\n                    this.publish(spk, ik.pubKey, pks, () => {\n                        dfd.resolve();\n                    });\n                });\n            }\n        });\n    },\n\n    onOwnDevicesUpdated: async function () {\n        return new Promise((resolve, reject) => {\n            let conn = this.account.getConnectionForIQ();\n            if (conn && conn.omemo && conn.omemo.devices) {\n                for (let d in this.own_devices) {\n                    if (!conn.omemo.devices[d]) {\n                        this.account.omemo.removeSession('session' + this.own_devices[d].address.toString());\n                        delete this.own_devices[d];\n                    }\n                }\n                let counter = Object.keys(conn.omemo.devices).length;\n                for (let device_id in conn.omemo.devices) {\n                    if (!this.own_devices[device_id])\n                        this.own_devices[device_id] = new xabber.Device({\n                            jid: this.account.get('jid'),\n                            id: device_id\n                        }, {account: this.account, store: this.store});\n                    let device = this.own_devices[device_id],\n                        label = conn.omemo.devices[device_id].label;\n                    if (!device.get('ik')) {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            !counter && resolve();\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            let fingerprint = device.generateFingerprint();\n                            if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                                device.set('fingerprint', fingerprint);\n                            counter--;\n                            !counter && resolve();\n                        }).catch(() => {\n                            counter--;\n                            !counter && resolve();\n                        });\n                    } else if (!device.get('fingerprint')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        counter--;\n                        !counter && resolve();\n                    } else {\n                        counter--;\n                        !counter && resolve();\n                    }\n                    label && device.set('label', label);\n                }\n            }\n        });\n    }\n});\n\nxabber.DecryptedMessages = Backbone.ModelWithStorage.extend({\n    defaults: {\n        messages: {}\n    },\n\n    getMessage: function (contact, stanza_id) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        return contact_messages[stanza_id];\n    },\n\n    getMessages: function (contact) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        return contact_messages;\n    },\n\n    putMessage: function (contact, stanza_id, message) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        contact_messages[stanza_id] = message;\n        messages[contact.get('jid')] = contact_messages;\n        this.save('messages', messages);\n    },\n\n    removeMessage: function (attrs, contact) {\n        let origin_id = attrs.origin_id;\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        delete contact_messages[origin_id];\n        messages[contact.get('jid')] = contact_messages;\n        this.save('messages', messages);\n    },\n\n    updateMessage: function (attrs, contact) {\n        let stanza_id = attrs.stanza_id,\n            origin_id = attrs.origin_id,\n            messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {},\n            message = contact_messages[origin_id];\n        if (origin_id)\n            this.removeMessage({origin_id}, contact);\n        if (stanza_id)\n            this.putMessage(contact, stanza_id, message);\n    }\n});\n\nxabber.SignalProtocolStore = Backbone.Model.extend({\n    initialize: function () {\n        this.Direction = {\n            SENDING: 1,\n            RECEIVING: 2\n        };\n        this.store = {};\n    },\n\n    getIdentityKeyPair: function () {\n        return Promise.resolve(this.get('identityKey'));\n    },\n\n    getLocalRegistrationId: function () {\n        return Promise.resolve(this.get('registrationId'));\n    },\n\n    put: function (key, value) {\n        if (key === undefined || value === undefined || key === null || value === null)\n            throw new Error(\"Tried to store undefined/null\");\n        this.store[key] = value;\n    },\n\n    get: function (key, defaultValue) {\n        if (key === null || key === undefined)\n            throw new Error(\"Tried to get value for undefined/null key\");\n        if (key in this.store) {\n            return this.store[key];\n        } else {\n            return defaultValue;\n        }\n    },\n\n    remove: function (key) {\n        if (key === null || key === undefined)\n            throw new Error(\"Tried to remove value for undefined/null key\");\n        delete this.store[key];\n    },\n\n    isTrustedIdentity: function (identifier, identityKey, direction) {\n        if (identifier === null || identifier === undefined) {\n            throw new Error(\"tried to check identity key for undefined/null key\");\n        }\n        if (!(identityKey instanceof ArrayBuffer)) {\n            throw new Error(\"Expected identityKey to be an ArrayBuffer\");\n        }\n        let trusted = this.get('identityKey' + identifier);\n        if (trusted === undefined) {\n            return Promise.resolve(true);\n        }\n        return Promise.resolve(util.toString(identityKey) === util.toString(trusted));\n    },\n\n    loadIdentityKey: function (identifier) {\n        if (identifier === null || identifier === undefined)\n            throw new Error(\"Tried to get identity key for undefined/null key\");\n        return Promise.resolve(this.get('identityKey' + identifier));\n    },\n\n    saveIdentity: function (identifier, identityKey) {\n        if (identifier === null || identifier === undefined)\n            throw new Error(\"Tried to put identity key for undefined/null key\");\n\n        let address = new SignalProtocolAddress.fromString(identifier);\n\n        let existing = this.get('identityKey' + address.getName());\n        this.put('identityKey' + address.getName(), identityKey);\n\n        if (existing && libsignal.toString(identityKey) !== libsignal.toString(existing)) {\n            return Promise.resolve(true);\n        } else {\n            return Promise.resolve(false);\n        }\n\n    },\n\n    /* Returns a prekeypair object or undefined */\n    loadPreKey: function (keyId) {\n        let res = this.get('25519KeypreKey' + keyId);\n        if (res !== undefined) {\n            res = {pubKey: res.pubKey, privKey: res.privKey};\n        }\n        return Promise.resolve(res);\n    },\n\n    storePreKey: function (keyId, keyPair) {\n        return Promise.resolve(this.put('25519KeypreKey' + keyId, keyPair));\n    },\n\n    removePreKey: function (keyId) {\n        this.trigger('prekey_removed', keyId);\n        // return Promise.resolve(this.remove('25519KeypreKey' + keyId));\n    },\n\n    /* Returns a signed keypair object or undefined */\n    loadSignedPreKey: function (keyId) {\n        let res = this.get('25519KeysignedKey' + keyId);\n        if (res !== undefined) {\n            res = {pubKey: res.pubKey, privKey: res.privKey};\n        }\n        return Promise.resolve(res);\n    },\n\n    storeSignedPreKey: function (keyId, keyPair) {\n        return Promise.resolve(this.put('25519KeysignedKey' + keyId, keyPair));\n    },\n\n    removeSignedPreKey: function (keyId) {\n        return Promise.resolve(this.remove('25519KeysignedKey' + keyId));\n    },\n\n    loadSession: function (identifier) {\n        return Promise.resolve(this.get('session' + identifier));\n    },\n\n    hasSession: function (identifier) {\n        return !!this.get('session' + identifier)\n    },\n\n    storeSession: function (identifier, record) {\n        this.trigger('session_stored', {id: 'session' + identifier, rec: record});\n        return Promise.resolve(this.put('session' + identifier, record));\n    },\n\n    removeSession: function (identifier) {\n        return Promise.resolve(this.remove('session' + identifier));\n    },\n\n    getAllSessions: function (identifier) {\n        let sessions = [];\n        for (let id in this.store) {\n            if (id.startsWith('session' + identifier)) {\n                sessions.push({id: id, session: this.store[id]});\n            }\n        }\n        return Promise.resolve(sessions);\n    },\n\n    removeAllSessions: function (identifier) {\n        for (let id in this.store) {\n            if (id.startsWith('session' + identifier)) {\n                delete this.store[id];\n            }\n        }\n        return Promise.resolve();\n    }\n});\n\nxabber.OMEMOEnablePlaceholder = xabber.BasicView.extend({\n    className: 'omemo-enable-placeholder',\n\n    events: {\n        'click .btn-enable': 'enableOmemo',\n        'click .btn-escape': 'closeOmemoPlaceholder'\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.updateColorScheme();\n        this.$el.html(templates.omemo_enable({jid: this.account.get('jid')}));\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        this.account.session.on(\"change:connected\", this.updateConnected, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.account.settings.on(\"change:omemo\", this.onOmemoChange, this);\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    onUpdatedScreen: function () {\n        if (!this.account.omemo_enable_placeholder || this.account.omemo_enable_placeholder.cid !== this.cid)\n            return;\n        this.$el.detach();\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    },\n\n    updateConnected: function () {\n        if (!this.account.isConnected())\n            this.close();\n    },\n\n    enableOmemo: function () {\n        this.account.settings.save('omemo', true);\n        this.close();\n        this.account.omemo = new xabber.Omemo({id: 'omemo'}, {\n            account: this.account,\n            storage_name: xabber.getStorageName() + '-omemo-settings-' + this.account.get('jid'),\n            fetch: 'before'\n        });\n        setTimeout(() => {\n            this.account.omemo.onConnected();\n        }, 2000);\n    },\n\n    closeOmemoPlaceholder: function () {\n        this.account.settings.save('omemo', false);\n        this.close();\n    },\n\n    onOmemoChange: function () {\n        if (this.account.settings.get('omemo'))\n            this.close();\n    },\n\n    close: function () {\n        this.trigger('remove') && this.remove();\n        this.account.omemo_enable_placeholder = undefined;\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    if (!this.settings.get('omemo'))\n        return;\n    this.omemo = new xabber.Omemo({id: 'omemo'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-omemo-settings-' + this.get('jid'),\n        fetch: 'before'\n    });\n});\n\nxabber.Account.addConnPlugin(function () {\n    if (!this.settings.get('omemo'))\n        return;\n    this.omemo.onConnected();\n}, true, true);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\nimport views from \"xabber-views\";\nimport api_service from \"xabber-api-service\";\nimport strophe from \"xabber-strophe\";\nimport vcard from \"xabber-vcard\";\nimport accounts from \"xabber-accounts\";\nimport discovery from \"xabber-discovery\";\nimport contacts from \"xabber-contacts\";\nimport chats from \"xabber-chats\";\nimport searching from \"xabber-searching\";\nimport mentions from \"xabber-mentions\";\nimport ui from \"xabber-ui\";\nimport omemo from \"xabber-omemo\";\n\nxabber.extendWith(views, api_service, strophe, vcard,\n    accounts, discovery, contacts, chats, searching, mentions, ui, omemo);\nglobal.xabber = xabber;\n\nexport default xabber;\n","var map = {\n\t\"./accounts/emojis.json\": 85304\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 92444;","var map = {\n\t\"./accounts/account_settings_modal.html\": 59166,\n\t\"./accounts/add_account.html\": 24109,\n\t\"./accounts/audio_file_waveform.html\": 56949,\n\t\"./accounts/avatars_gallery.html\": 47837,\n\t\"./accounts/change_account_password.html\": 15415,\n\t\"./accounts/change_password.html\": 34999,\n\t\"./accounts/change_status.html\": 33999,\n\t\"./accounts/current_token_item_modal.html\": 5766,\n\t\"./accounts/delete_files_media_gallery.html\": 72971,\n\t\"./accounts/emoji_panel.html\": 90231,\n\t\"./accounts/emoji_picker.html\": 25482,\n\t\"./accounts/emoji_picker_tabs.html\": 20458,\n\t\"./accounts/existing_groupchat_item.html\": 4870,\n\t\"./accounts/global_settings_item_modal.html\": 56001,\n\t\"./accounts/media_gallery_account.html\": 57872,\n\t\"./accounts/media_gallery_account_file.html\": 39440,\n\t\"./accounts/resource.html\": 75216,\n\t\"./accounts/resource_right.html\": 255,\n\t\"./accounts/single_account_settings_modal.html\": 86572,\n\t\"./accounts/status_message_input_widget.html\": 71326,\n\t\"./accounts/token_item_modal.html\": 84377,\n\t\"./accounts/toolbar_item.html\": 54810,\n\t\"./accounts/unregister_account.html\": 49485,\n\t\"./accounts/webcam_panel.html\": 92797,\n\t\"./accounts/xmpp_login.html\": 64630,\n\t\"./base/about.html\": 99288,\n\t\"./base/backgrounds_gallery.html\": 77428,\n\t\"./base/color_picker.html\": 51462,\n\t\"./base/color_scheme.html\": 83430,\n\t\"./base/dialog.html\": 62985,\n\t\"./base/fingerprint_devices_item.html\": 16969,\n\t\"./base/fingerprint_item.html\": 75551,\n\t\"./base/fingerprints.html\": 5822,\n\t\"./base/fingerprints_devices.html\": 26376,\n\t\"./base/input_widget.html\": 10596,\n\t\"./base/jingle_message_calling.html\": 62077,\n\t\"./base/omemo_enable.html\": 17661,\n\t\"./base/plyr_player_popup.html\": 14197,\n\t\"./base/setting_emoji_font_radio_input.html\": 73122,\n\t\"./base/setting_language_radio_input.html\": 49707,\n\t\"./base/setting_radio_input.html\": 94944,\n\t\"./base/settings.html\": 15887,\n\t\"./base/settings_modal.html\": 81012,\n\t\"./base/toolbar.html\": 45459,\n\t\"./chats/add_chat_account_item.html\": 56468,\n\t\"./chats/chat_bottom.html\": 74335,\n\t\"./chats/chat_content.html\": 10224,\n\t\"./chats/chat_content_contact.html\": 9031,\n\t\"./chats/chat_content_placeholder.html\": 36209,\n\t\"./chats/chat_head.html\": 29317,\n\t\"./chats/chat_item.html\": 95370,\n\t\"./chats/chat_placeholder.html\": 5696,\n\t\"./chats/chats_panel.html\": 80026,\n\t\"./chats/checkbox.html\": 40433,\n\t\"./chats/content_encryption_warning.html\": 96249,\n\t\"./chats/encryption_warning.html\": 53318,\n\t\"./chats/ephemeral_timer_selector.html\": 70275,\n\t\"./chats/export_history.html\": 88831,\n\t\"./chats/forward_panel.html\": 83176,\n\t\"./chats/group_chats/add_group_chat.html\": 23118,\n\t\"./chats/group_chats/invitation_panel_view.html\": 1015,\n\t\"./chats/group_chats/mention_item.html\": 79011,\n\t\"./chats/group_chats/pinned_message_panel.html\": 68096,\n\t\"./chats/location_popup.html\": 21732,\n\t\"./chats/message_item.html\": 59170,\n\t\"./chats/messages/attached_file.html\": 97042,\n\t\"./chats/messages/audio_file.html\": 94382,\n\t\"./chats/messages/audio_file_waveform.html\": 74211,\n\t\"./chats/messages/auth_request.html\": 63576,\n\t\"./chats/messages/file.html\": 89256,\n\t\"./chats/messages/file_loading.html\": 83034,\n\t\"./chats/messages/file_upload.html\": 46311,\n\t\"./chats/messages/forwarded.html\": 19038,\n\t\"./chats/messages/group_request.html\": 29794,\n\t\"./chats/messages/hidden-template-for-2.html\": 15867,\n\t\"./chats/messages/hidden-template-for-3.html\": 87486,\n\t\"./chats/messages/hidden-template-for-4.html\": 19761,\n\t\"./chats/messages/hidden-template-for-5.html\": 20365,\n\t\"./chats/messages/hidden-template-for-6.html\": 57344,\n\t\"./chats/messages/images_details.html\": 13786,\n\t\"./chats/messages/link_reference.html\": 59840,\n\t\"./chats/messages/link_reference_chat.html\": 39475,\n\t\"./chats/messages/loading_circle.html\": 54301,\n\t\"./chats/messages/location.html\": 55127,\n\t\"./chats/messages/main.html\": 76510,\n\t\"./chats/messages/saved_main.html\": 18479,\n\t\"./chats/messages/searched.html\": 83228,\n\t\"./chats/messages/system.html\": 85046,\n\t\"./chats/messages/template-for-2.html\": 2861,\n\t\"./chats/messages/template-for-3.html\": 70423,\n\t\"./chats/messages/template-for-4.html\": 90719,\n\t\"./chats/messages/template-for-5.html\": 39125,\n\t\"./chats/messages/template-for-6.html\": 20129,\n\t\"./chats/messages/video.html\": 87795,\n\t\"./chats/messages/voice_message.html\": 43795,\n\t\"./chats/saved_chat_head.html\": 21385,\n\t\"./chats/send_media.html\": 34054,\n\t\"./chats/subscription_buttons.html\": 47725,\n\t\"./chats/unread_marker.html\": 98875,\n\t\"./contacts/account_roster_left.html\": 69006,\n\t\"./contacts/account_roster_right.html\": 23643,\n\t\"./contacts/add_contact.html\": 24718,\n\t\"./contacts/add_contact_account_item.html\": 31238,\n\t\"./contacts/audio_file_waveform.html\": 49820,\n\t\"./contacts/contact_blocked_item.html\": 73253,\n\t\"./contacts/contact_details_right.html\": 38624,\n\t\"./contacts/contact_left_item.html\": 24958,\n\t\"./contacts/contact_placeholder.html\": 19768,\n\t\"./contacts/contact_right_item.html\": 72055,\n\t\"./contacts/edit_contact.html\": 45078,\n\t\"./contacts/edit_group.html\": 4679,\n\t\"./contacts/group_chats/add_blocked_participant_form.html\": 37639,\n\t\"./contacts/group_chats/badge_edit_view.html\": 11868,\n\t\"./contacts/group_chats/default_restrictions.html\": 87004,\n\t\"./contacts/group_chats/default_restrictions_right.html\": 59115,\n\t\"./contacts/group_chats/description_input_widget.html\": 49080,\n\t\"./contacts/group_chats/file_item.html\": 79481,\n\t\"./contacts/group_chats/group_chat_details.html\": 69426,\n\t\"./contacts/group_chats/group_chat_details_right.html\": 18939,\n\t\"./contacts/group_chats/group_chat_properties.html\": 15159,\n\t\"./contacts/group_chats/group_chat_properties_edit.html\": 20904,\n\t\"./contacts/group_chats/group_chat_properties_right.html\": 69849,\n\t\"./contacts/group_chats/group_member_item.html\": 38114,\n\t\"./contacts/group_chats/group_member_item_right.html\": 53119,\n\t\"./contacts/group_chats/group_name_input_widget.html\": 82703,\n\t\"./contacts/group_chats/group_status.html\": 70569,\n\t\"./contacts/group_chats/group_status_right.html\": 27157,\n\t\"./contacts/group_chats/invitation.html\": 53464,\n\t\"./contacts/group_chats/invited_member_item.html\": 87824,\n\t\"./contacts/group_chats/participant_badge_input_widget.html\": 84939,\n\t\"./contacts/group_chats/participant_details_item.html\": 66493,\n\t\"./contacts/group_chats/participant_details_item_right.html\": 83326,\n\t\"./contacts/group_chats/participant_details_right.html\": 1593,\n\t\"./contacts/group_chats/participant_rights.html\": 76252,\n\t\"./contacts/group_chats/participants.html\": 93172,\n\t\"./contacts/group_chats/participants_right_panel.html\": 19295,\n\t\"./contacts/group_chats/pinned_message.html\": 54630,\n\t\"./contacts/group_chats/private_participant_details.html\": 15369,\n\t\"./contacts/group_chats/private_participant_details_item_right.html\": 79983,\n\t\"./contacts/group_chats/restriction_item.html\": 87050,\n\t\"./contacts/group_chats/right_expire_variants.html\": 54338,\n\t\"./contacts/group_chats/set_status.html\": 67065,\n\t\"./contacts/group_chats/status_item.html\": 27893,\n\t\"./contacts/group_left.html\": 57973,\n\t\"./contacts/group_right.html\": 95561,\n\t\"./contacts/group_settings.html\": 21612,\n\t\"./contacts/groups.html\": 62605,\n\t\"./contacts/groups_checkbox_list.html\": 54515,\n\t\"./contacts/groups_checkbox_list_contact.html\": 52661,\n\t\"./contacts/groups_list.html\": 58114,\n\t\"./contacts/groups_new_group.html\": 57713,\n\t\"./contacts/media_item.html\": 17905,\n\t\"./contacts/media_items_empty.html\": 23546,\n\t\"./contacts/preloader.html\": 4142,\n\t\"./contacts/roster_left.html\": 50869,\n\t\"./contacts/roster_right.html\": 22136,\n\t\"./contacts/roster_settings.html\": 54186,\n\t\"./mentions/mention_item.html\": 19253,\n\t\"./mentions/mentions_panel.html\": 50291,\n\t\"./mentions/mentions_placeholder.html\": 20103,\n\t\"./searching/existing_groupchat_details_view.html\": 31897,\n\t\"./searching/existing_groupchat_item.html\": 71655,\n\t\"./searching/searching_account_item.html\": 3103,\n\t\"./searching/searching_wide.html\": 43143,\n\t\"./svg/account-cancel.html\": 53283,\n\t\"./svg/account-outline.html\": 20865,\n\t\"./svg/account.html\": 32721,\n\t\"./svg/address-outline.html\": 66656,\n\t\"./svg/address.html\": 94429,\n\t\"./svg/alarm-bell.html\": 47158,\n\t\"./svg/alert-circle.html\": 55133,\n\t\"./svg/bell-off.html\": 14759,\n\t\"./svg/bell-sleep.html\": 11713,\n\t\"./svg/bell.html\": 55155,\n\t\"./svg/birthday-outline.html\": 23977,\n\t\"./svg/birthday.html\": 74741,\n\t\"./svg/blocked-add.html\": 89768,\n\t\"./svg/blocked.html\": 33574,\n\t\"./svg/bot-variant.html\": 94862,\n\t\"./svg/bot.html\": 29568,\n\t\"./svg/bug.html\": 89965,\n\t\"./svg/call-outline.html\": 16938,\n\t\"./svg/call.html\": 9530,\n\t\"./svg/camera-retake.html\": 25430,\n\t\"./svg/camera.html\": 26716,\n\t\"./svg/cancel.html\": 80595,\n\t\"./svg/channel.html\": 40203,\n\t\"./svg/chat.html\": 71714,\n\t\"./svg/check-circle.html\": 62633,\n\t\"./svg/check.html\": 26446,\n\t\"./svg/chevron-down.html\": 79353,\n\t\"./svg/chevron-left-variant.html\": 32011,\n\t\"./svg/chevron-right-variant.html\": 19297,\n\t\"./svg/circle-slice-1.html\": 45013,\n\t\"./svg/circle-slice-2.html\": 15460,\n\t\"./svg/circle-slice-3.html\": 56377,\n\t\"./svg/circle-slice-4.html\": 63363,\n\t\"./svg/circle-slice-5.html\": 53161,\n\t\"./svg/circle-slice-6.html\": 90100,\n\t\"./svg/circle-slice-7.html\": 47263,\n\t\"./svg/circle-slice-8.html\": 16472,\n\t\"./svg/circles-outline.html\": 47033,\n\t\"./svg/circles.html\": 61265,\n\t\"./svg/client-outline.html\": 52773,\n\t\"./svg/client.html\": 6625,\n\t\"./svg/clock-outline.html\": 93813,\n\t\"./svg/close.html\": 70874,\n\t\"./svg/cloud.html\": 55696,\n\t\"./svg/contact-add.html\": 63272,\n\t\"./svg/crosshairs-gps.html\": 57197,\n\t\"./svg/crosshairs-question.html\": 40765,\n\t\"./svg/crosshairs.html\": 82823,\n\t\"./svg/database-lock.html\": 17338,\n\t\"./svg/database.html\": 41473,\n\t\"./svg/description-outline.html\": 23373,\n\t\"./svg/description.html\": 63993,\n\t\"./svg/device-cellphone.html\": 79824,\n\t\"./svg/device-console.html\": 32111,\n\t\"./svg/device-desktop.html\": 5772,\n\t\"./svg/device-tablet.html\": 18955,\n\t\"./svg/device-web.html\": 16919,\n\t\"./svg/devices.html\": 50832,\n\t\"./svg/download.html\": 58712,\n\t\"./svg/edit-outline.html\": 96840,\n\t\"./svg/edit.html\": 22845,\n\t\"./svg/email-outline.html\": 66206,\n\t\"./svg/email.html\": 22505,\n\t\"./svg/expires.html\": 21321,\n\t\"./svg/file-audio.html\": 3643,\n\t\"./svg/file-document.html\": 88700,\n\t\"./svg/file-pdf.html\": 3468,\n\t\"./svg/file-presentation.html\": 34417,\n\t\"./svg/file-video.html\": 98587,\n\t\"./svg/file-zip.html\": 89193,\n\t\"./svg/file.html\": 34058,\n\t\"./svg/fullname-outline.html\": 16109,\n\t\"./svg/fullname.html\": 12784,\n\t\"./svg/group-incognito.html\": 49703,\n\t\"./svg/group-invite.html\": 89411,\n\t\"./svg/group-private.html\": 81044,\n\t\"./svg/group-public.html\": 56403,\n\t\"./svg/history.html\": 35726,\n\t\"./svg/ic-at.html\": 81363,\n\t\"./svg/ic-jabber.html\": 9140,\n\t\"./svg/ic-searching.html\": 46476,\n\t\"./svg/id-outline.html\": 19324,\n\t\"./svg/id.html\": 50807,\n\t\"./svg/image.html\": 90226,\n\t\"./svg/index.html\": 2612,\n\t\"./svg/information-outline.html\": 52973,\n\t\"./svg/information.html\": 66035,\n\t\"./svg/invite-outline.html\": 34289,\n\t\"./svg/invite.html\": 75917,\n\t\"./svg/job-outline.html\": 31802,\n\t\"./svg/job.html\": 97579,\n\t\"./svg/key-variant.html\": 76499,\n\t\"./svg/key.html\": 46753,\n\t\"./svg/link.html\": 16205,\n\t\"./svg/lock-alert.html\": 63234,\n\t\"./svg/lock-check.html\": 14833,\n\t\"./svg/lock-cross.html\": 8513,\n\t\"./svg/lock-open.html\": 1652,\n\t\"./svg/lock-question.html\": 67160,\n\t\"./svg/lock.html\": 6258,\n\t\"./svg/map-marker-outline.html\": 83740,\n\t\"./svg/map-marker.html\": 70776,\n\t\"./svg/membership-outline.html\": 8872,\n\t\"./svg/message-bookmark-outline.html\": 6278,\n\t\"./svg/message-group.html\": 35529,\n\t\"./svg/minus.html\": 79092,\n\t\"./svg/mobile.html\": 33767,\n\t\"./svg/palette.html\": 43710,\n\t\"./svg/pause.html\": 58080,\n\t\"./svg/picture-in-picture-bottom-right.html\": 91421,\n\t\"./svg/picture-in-picture-minimize.html\": 42173,\n\t\"./svg/picture-in-picture-top-right.html\": 74578,\n\t\"./svg/pinned-circle-small.html\": 54052,\n\t\"./svg/pinned.html\": 9443,\n\t\"./svg/play.html\": 43069,\n\t\"./svg/player-float.html\": 30030,\n\t\"./svg/player-full.html\": 60259,\n\t\"./svg/player-mini-variant.html\": 70099,\n\t\"./svg/player-mini.html\": 77531,\n\t\"./svg/plus.html\": 85123,\n\t\"./svg/plyr.html\": 10410,\n\t\"./svg/qrcode.html\": 17943,\n\t\"./svg/restrictions-outline.html\": 89701,\n\t\"./svg/rss-variant.html\": 89657,\n\t\"./svg/rss.html\": 15645,\n\t\"./svg/saved-messages.html\": 11797,\n\t\"./svg/search.html\": 11146,\n\t\"./svg/security.html\": 91467,\n\t\"./svg/server.html\": 71188,\n\t\"./svg/star-face.html\": 1866,\n\t\"./svg/status-outline.html\": 52555,\n\t\"./svg/status.html\": 5000,\n\t\"./svg/subscription-from.html\": 5414,\n\t\"./svg/subscription-to.html\": 8020,\n\t\"./svg/task.html\": 41835,\n\t\"./svg/translate.html\": 98431,\n\t\"./svg/trash.html\": 61686,\n\t\"./svg/video.html\": 98070,\n\t\"./svg/volume-high.html\": 87658,\n\t\"./svg/volume-off-variant.html\": 7962,\n\t\"./svg/volume-off.html\": 14032,\n\t\"./svg/web-cancel.html\": 26330,\n\t\"./svg/web.html\": 7094,\n\t\"./svg/xabber-offline.html\": 50033,\n\t\"./svg/xabber-online.html\": 74922,\n\t\"./svg/xmpp.html\": 92052,\n\t\"./vcard/vcard.html\": 73889,\n\t\"./vcard/vcard_edit_modal.html\": 43918,\n\t\"./vcard/vcard_modal.html\": 59265,\n\t\"./vcard/vcard_right.html\": 93047\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 89293;","let client_translation_progress = {\"en\":100,\"ar\":25,\"az\":2,\"be\":12,\"bg\":57,\"bs\":0,\"ca\":23,\"cs\":98,\"cy\":0,\"da\":0,\"de\":44,\"el\":26,\"es-ES\":31,\"es-latin\":60,\"et\":0,\"fa\":4,\"fi\":8,\"fil\":13,\"fr\":32,\"ga-IE\":0,\"he\":19,\"hi\":0,\"hr\":0,\"hu\":13,\"hy-AM\":8,\"id\":98,\"is\":0,\"it\":63,\"ja\":18,\"ka\":0,\"kmr\":0,\"ko\":1,\"ku\":2,\"ky\":5,\"la-LA\":0,\"lb\":0,\"lt\":3,\"me\":0,\"mk\":0,\"mn\":0,\"mr\":0,\"ms\":5,\"nb\":19,\"ne-NP\":0,\"nl\":18,\"no\":0,\"oc\":11,\"pa-IN\":0,\"pl\":58,\"pt-BR\":62,\"pt-PT\":13,\"qya-AA\":0,\"ro\":15,\"ru\":61,\"sat\":1,\"sco\":0,\"si-LK\":32,\"sk\":18,\"sl\":25,\"sq\":3,\"sr\":12,\"sr-Cyrl-ME\":0,\"sv-SE\":34,\"sw\":1,\"ta\":1,\"te\":0,\"tg\":0,\"tk\":0,\"tlh-AA\":0,\"tr\":60,\"uk\":25,\"uz\":0,\"vi\":11,\"yo\":0,\"zh-CN\":98,\"zh-TW\":10,\"zu\":0}; typeof define === \"function\" && define(() => { return client_translation_progress;});","var map = {\n\t\"./ar-rSA.js\": [\n\t\t53591,\n\t\t5629\n\t],\n\t\"./az-rAZ.js\": [\n\t\t81101,\n\t\t1101\n\t],\n\t\"./be-rBY.js\": [\n\t\t86953,\n\t\t6953\n\t],\n\t\"./bg-rBG.js\": [\n\t\t41428,\n\t\t1428\n\t],\n\t\"./bs-rBA.js\": [\n\t\t76101,\n\t\t6101\n\t],\n\t\"./ca-rES.js\": [\n\t\t80049,\n\t\t49\n\t],\n\t\"./cs-rCZ.js\": [\n\t\t30011,\n\t\t11\n\t],\n\t\"./cy-rGB.js\": [\n\t\t98146,\n\t\t8146\n\t],\n\t\"./da-rDK.js\": [\n\t\t22348,\n\t\t2348\n\t],\n\t\"./de-rDE.js\": [\n\t\t78961,\n\t\t8961\n\t],\n\t\"./el-rGR.js\": [\n\t\t292,\n\t\t292\n\t],\n\t\"./en.js\": [\n\t\t53832,\n\t\t3832\n\t],\n\t\"./es-rES.js\": [\n\t\t85895,\n\t\t5895\n\t],\n\t\"./es419.js\": [\n\t\t93575,\n\t\t3575\n\t],\n\t\"./et-rEE.js\": [\n\t\t14103,\n\t\t4103\n\t],\n\t\"./fa-rIR.js\": [\n\t\t15729,\n\t\t5729\n\t],\n\t\"./fi-rFI.js\": [\n\t\t35069,\n\t\t5069\n\t],\n\t\"./fil-rPH.js\": [\n\t\t43250,\n\t\t3250\n\t],\n\t\"./fr-rFR.js\": [\n\t\t52716,\n\t\t2716\n\t],\n\t\"./ga-rIE.js\": [\n\t\t17872,\n\t\t7872\n\t],\n\t\"./hi-rIN.js\": [\n\t\t11361,\n\t\t1361\n\t],\n\t\"./hr-rHR.js\": [\n\t\t42324,\n\t\t2324\n\t],\n\t\"./hu-rHU.js\": [\n\t\t70833,\n\t\t833\n\t],\n\t\"./hy-rAM.js\": [\n\t\t63000,\n\t\t3000\n\t],\n\t\"./in-rID.js\": [\n\t\t31879,\n\t\t1879\n\t],\n\t\"./is-rIS.js\": [\n\t\t55298,\n\t\t5298\n\t],\n\t\"./it-rIT.js\": [\n\t\t8182,\n\t\t8182\n\t],\n\t\"./iw-rIL.js\": [\n\t\t5945,\n\t\t5945\n\t],\n\t\"./ja-rJP.js\": [\n\t\t91587,\n\t\t1587\n\t],\n\t\"./ka-rGE.js\": [\n\t\t21337,\n\t\t1337\n\t],\n\t\"./kmr-rTR.js\": [\n\t\t57057,\n\t\t7057\n\t],\n\t\"./ko-rKR.js\": [\n\t\t88756,\n\t\t8756\n\t],\n\t\"./ku-rTR.js\": [\n\t\t33678,\n\t\t3678\n\t],\n\t\"./ky-rKG.js\": [\n\t\t28404,\n\t\t8404\n\t],\n\t\"./la-rLA.js\": [\n\t\t27089,\n\t\t7089\n\t],\n\t\"./lb-rLU.js\": [\n\t\t85752,\n\t\t5752\n\t],\n\t\"./lt-rLT.js\": [\n\t\t23097,\n\t\t3097\n\t],\n\t\"./me-rME.js\": [\n\t\t59023,\n\t\t9023\n\t],\n\t\"./mk-rMK.js\": [\n\t\t52499,\n\t\t2499\n\t],\n\t\"./mn-rMN.js\": [\n\t\t68721,\n\t\t8721\n\t],\n\t\"./mr-rIN.js\": [\n\t\t33591,\n\t\t3591\n\t],\n\t\"./ms-rMY.js\": [\n\t\t10922,\n\t\t922\n\t],\n\t\"./nb-rNO.js\": [\n\t\t54778,\n\t\t4778\n\t],\n\t\"./ne-rNP.js\": [\n\t\t4463,\n\t\t4463\n\t],\n\t\"./nl-rNL.js\": [\n\t\t36447,\n\t\t6447\n\t],\n\t\"./no-rNO.js\": [\n\t\t16813,\n\t\t6813\n\t],\n\t\"./oc-rFR.js\": [\n\t\t76102,\n\t\t6102\n\t],\n\t\"./pa-rIN.js\": [\n\t\t49081,\n\t\t9081\n\t],\n\t\"./pl-rPL.js\": [\n\t\t60419,\n\t\t419\n\t],\n\t\"./pt-rBR.js\": [\n\t\t9226,\n\t\t9226\n\t],\n\t\"./pt-rPT.js\": [\n\t\t10201,\n\t\t201\n\t],\n\t\"./qya-rAA.js\": [\n\t\t39460,\n\t\t9460\n\t],\n\t\"./ro-rRO.js\": [\n\t\t16292,\n\t\t6292\n\t],\n\t\"./ru-rRU.js\": [\n\t\t74391,\n\t\t4391\n\t],\n\t\"./sat-rIN.js\": [\n\t\t1905,\n\t\t1905\n\t],\n\t\"./sco-rGB.js\": [\n\t\t52323,\n\t\t2323\n\t],\n\t\"./si-rLK.js\": [\n\t\t79773,\n\t\t9773\n\t],\n\t\"./sk-rSK.js\": [\n\t\t51874,\n\t\t1874\n\t],\n\t\"./sl-rSI.js\": [\n\t\t97658,\n\t\t7658\n\t],\n\t\"./sq-rAL.js\": [\n\t\t80596,\n\t\t596\n\t],\n\t\"./sr-rCyrl-rME.js\": [\n\t\t33343,\n\t\t3343\n\t],\n\t\"./sr-rSP.js\": [\n\t\t75384,\n\t\t5384\n\t],\n\t\"./sv-rSE.js\": [\n\t\t50608,\n\t\t608\n\t],\n\t\"./sw-rKE.js\": [\n\t\t6802,\n\t\t6802\n\t],\n\t\"./ta-rIN.js\": [\n\t\t51796,\n\t\t1796\n\t],\n\t\"./te-rIN.js\": [\n\t\t49782,\n\t\t9782\n\t],\n\t\"./tg-rTJ.js\": [\n\t\t33689,\n\t\t3689\n\t],\n\t\"./tk-rTM.js\": [\n\t\t60130,\n\t\t130\n\t],\n\t\"./tlh-rAA.js\": [\n\t\t73739,\n\t\t3739\n\t],\n\t\"./tr-rTR.js\": [\n\t\t4961,\n\t\t4961\n\t],\n\t\"./translation_progress.js\": [\n\t\t23297\n\t],\n\t\"./uk-rUA.js\": [\n\t\t88109,\n\t\t8109\n\t],\n\t\"./uz-rUZ.js\": [\n\t\t96886,\n\t\t6886\n\t],\n\t\"./vi-rVN.js\": [\n\t\t37216,\n\t\t7216\n\t],\n\t\"./yo-rNG.js\": [\n\t\t97045,\n\t\t7045\n\t],\n\t\"./zh-rCN.js\": [\n\t\t16806,\n\t\t6806\n\t],\n\t\"./zh-rTW.js\": [\n\t\t58545,\n\t\t8545\n\t],\n\t\"./zu-rZA.js\": [\n\t\t58810,\n\t\t8810\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 8946;\nmodule.exports = webpackAsyncContext;","define(function () { return JSON.parse(\n'{\"version_number\":\"2.3.4.150\",\"version_description\":\"changed saved message chat to xep-favorites, fixed get conversation type, changed conversation-type attr sending in archive requests, fixed saved messages delivery state setting, removed group leave button inactive setting, fixed blocked elements list appending, added retrying for getting devices node and logging of that, changed font weight for bold font in message text input \"}'\n)});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"xabber.\" + chunkId + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkxabber_web\"] = self[\"webpackChunkxabber_web\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [1216], () => (__webpack_require__(51008)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","inProgress","dataWebpackPrefix","module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","constants","ASSETS_URL_PREFIX","STORAGE_NAME","STORAGE_VERSION","CONTAINER_ELEMENT","FAVICON_DEFAULT","FAVICON_DEFAULT_GREY","FAVICON_MESSAGE","BACKGROUND_IMAGE","WIDTH_MEDIUM","WIDTH_NARROW","WIDTH_TINY","LOG_LEVEL_NONE","LOG_LEVEL_ERROR","LOG_LEVEL_WARN","LOG_LEVEL_INFO","LOG_LEVEL_DEBUG","LOG_LEVEL","KEY_BACKSPACE","KEY_TAB","KEY_ENTER","KEY_SHIFT","KEY_CTRL","KEY_ESCAPE","KEY_SPACE","KEY_ARROW_LEFT","KEY_ARROW_UP","KEY_ARROW_RIGHT","KEY_ARROW_DOWN","KEY_DELETE","KEY_FORWARD_SLASH","KEY_AT","VOICE_MSG_TIME","PASSWORD_DOT","String","fromCharCode","CONNECTION_URL","CONN_STATUSES","PREKEYS_COUNT","MIN_PREKEYS_COUNT","AES_KEY_LENGTH","AES_TAG_LENGTH","AES_EXTRACTABLE","BAD_CONN_STATUSES","RECONNECTION_TIMEOUTS","DOWNTIME_RECONNECTION_TIMEOUT","PING_SENDING_INTERVAL","IDLING_MINIMAL_TIMEOUT","IDLING_MAXIMUM_TIMEOUT","IDLING_DEFAULT_TIMEOUT","STATUS_WEIGHTS","chat","online","away","xa","dnd","offline","unavailable","PRESENT_INTERVAL","CHATSTATE_INTERVAL_COMPOSING_AUDIO","CHATSTATE_TIMEOUT_PAUSED","CHATSTATE_TIMEOUT_STOPPED","CHATSTATE_TIMEOUT_PAUSED_AUDIO","JINGLE_WAITING_TIME","SYNCHRONIZATION_RSM_MAX","REGISTRATION_DOMAINS","LOGIN_DOMAINS","TRUSTED_DOMAINS","RECOMMENDED_DOMAIN","REGISTRATION_BUTTON","REGISTRATION_CUSTOM_DOMAIN","LOGIN_CUSTOM_DOMAIN","TURN_SERVERS_LIST","urls","credential","username","JINGLE_MSG_PROPOSE","JINGLE_MSG_REJECT","JINGLE_MSG_ACCEPT","MSG_BLOCKED","MSG_ERROR","MSG_PENDING","MSG_SENT","MSG_DELIVERED","MSG_DISPLAYED","MSG_ARCHIVED","MSG_SAVED","RSM_ATTRIBUTES","MAM_ATTRIBUTES","GENERAL_GROUP_ID","NON_ROSTER_GROUP_ID","MATERIAL_COLORS","MAX_AVATAR_FILE_SIZE","AVATAR_PRIORITIES","VCARD_AVATAR","PUBSUB_AVATAR","EMAIL_FOR_JOIN_TRANSLATION","AVATAR_SIZES","TOOLBAR_ACCOUNT_ITEM","SETTINGS_ACCOUNT_ITEM","XABBER_ACCOUNT","SYNCHRONIZE_ACCOUNT_ITEM","MENTION_ITEM","ACCOUNT_SETTINGS_LEFT","ACCOUNT_VCARD_EDIT","ROSTER_RIGHT_ACCOUNT_ITEM","ROSTER_LEFT_ACCOUNT_ITEM","PARTICIPANT_DETAILS_ITEM","CONTACT_RIGHT_ITEM","GROUPCHAT_MEMBER_ITEM","CONTACT_LEFT_ITEM","CONTACT_BLOCKED_ITEM","CONTACT_DETAILS","GROUP_SETTINGS","CHAT_ITEM","CHAT_HEAD","CHAT_MESSAGE","CHAT_BOTTOM","XABBER_VOICE_CALL_VIEW","OMEMO_ENABLE_SETTING","SYNC_WAY_DATA","no","tip","icon","from_server","to_server","delete","off_local","off_remote","SYNCED_STATUS_DATA","off","yes","EMOJI_LIST_NAME","emoji_list","QUOTE_MARKER","MARKUP_TAGS","BLANK_VIDEO","OGG","MP4","WEBM","MIME_TYPES","image","audio","video","document","pdf","table","archive","presentation","languages","languages_another_locales","PERSONAL_AREA_URL","XABBER_ACCOUNT_URL","USE_SOCIAL_AUTH","USE_TAB_SIGNALS","REGISTER_XMPP_ACCOUNT","REGISTER_XMPP_ACCOUNT_URL","CHECK_VERSION","DESKTOP_AUTOSTART_OPTION","DEFAULT_LOGIN_SCREEN","GCM_SENDER_ID","GCM_API_KEY","MESSAGE_ARCHIVE_DB_NAME","STANZA_MAX_SIZE","Math","pow","BLUR_VALUE","VIGNETTING_VALUE","TRANSPARENCY_VALUE","MAIN_COLOR","CLIENT_NAME","CLIENT_RESOURCE","SHORT_CLIENT_NAME","SHORT_CLIENT_DESCRIPTION","CLIENT_LOGO","TOOLBAR_LOGO","ENABLE_XABBER_ACCOUNT","SCREEN_ABOUT","BACKGROUND_IMAGES_XML_URL","BACKGROUND_PATTERNS_XML_URL","DEVELOPER_URL","CLIENT_GITHUB_URL","PROJECT_CROWDIN_URL","CLIENT_LICENSE_GITHUB_URL","DEFAULT_EMOJI_FONT","JINGLE_MSG_STATE","MSG_STATE","MSG_VERBOSE_STATE","EMOJI_FONTS_LIST","notoColor","name","value","url","hint","window","location","hostname","attribution_text","order","$","_","moment","WaveSurfer","Plyr","plyr","Quill","libsignal","slug","sha1","idleJs","opusRecorder","opusRecorderEncoderPath","xabber_i18next","xabber_i18next_sprintf","sha256","VanillaQR","magnificPopup","backgroundImagesXml","backgroundPatternsXml","Strophe","evaluate","interpolate","templates","_addTemplate","options","path","split","tpl","join","default","tpl_name","pop","res","attr","is_svg","data","html","$html","find","each","$el","this","svg_name","removeClass","addClass","svg","insertSvg","addTemplate","addSvgTemplate","addJSONTemplate","attention_json","attention","forEach","item","attention_sound","file_name","not_selectable","push","ringtones_json","ringtones","ringtone","dialtones_json","dialtones","dialtone","notifications_json","notifications","notification","system_json","system_sound_list","system_item","system","all_sounds","concat","raw_data","x","y","getEmoji","offset","lead","trail","emoji_data","emoji","emoji_regexp","prototype","emojify","emoji_size","title","replace","removeEmoji","replaceEmoji","selector","text","length","all","get","getByIndex","idx","hasher","_image_cache","COLORS","MAX_IMG_SIZE","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","Blob","type","CachedImage","URL","createObjectURL","getCachedImage","isString","indexOf","isObject","getAccountColor","_name","trim","color_index","floor","getImageSize","size","max_size","width","height","fn","setAvatar","image_el","cached_image","img_size","$image_el","css","backgroundImage","backgroundSize","backgroundColor","setCss","getBlobImage","getDefaultAvatar","color","font","first_name","last_name","first_letter","second_letter","canvas","createElement","ctx","getContext","splitted_name","rect","fillStyle","fill","textAlign","textBaseline","fillText","toUpperCase","toDataURL","getAvatarFromFile","file","image_obj","Image","src","Deferred","onload","b64_image","hash","naturalWidth","naturalHeight","new_size","drawImage","revokeObjectURL","toBlob","blob","reader","FileReader","result","binary_file","bytes","bind","readAsDataURL","onerror","promise","getDefaultColor","getCachedBackground","base64","compressImage","file_type","includes","File","lastModified","Date","now","modal_queue","appendTo","Modal","modal_constructor","$modal","Function","closed","getString","params","postProcess","sprintf","extend","open","use_queue","throw","setTimeout","addEventListener","clickHandler","prop","modal_options","omit","is_default_complete","complete_data","one","ev","detach","shift","_openModal","close","complete","isUndefined","_closeModal","removeEventListener","trigger","keyCode","click","preventDefault","openModal","closeModal","modal","clear_queue","dialogs","common","header","buttons","dialog_options","flag","modal_class","dialog","isArray","ok_button","cancel_button","optional_buttons","reverse","no_dialog_options","quoted_text","append","cancel_button_main","inverted_buttons","img_details","xabber","switchClass","hasClass","blob_image_from_clipboard","appendChild","bottom_text","escape_button","input_placeholder_value","input_value","val","option","target","$options","user_value_input","$item","user_value","warning","error","ask","ok_text","cancel_text","ok_button_text","cancel_button_text","ask_extended","optional_button","optional_button_text","ask_enter_value","resend_button","resend_to","resend_button_text","notify","placeCaretAtEnd","el","focus","getSelection","createRange","body","createTextRange","textRange","moveToElementText","collapse","select","range","selectNodeContents","sel","removeAllRanges","addRange","updateRichTextarea","getTextFromRichTextarea","flushRichTextarea","pasteHtmlAtCaret","getRangeAt","rangeCount","deleteContents","innerHTML","node","lastNode","frag","createDocumentFragment","firstChild","insertNode","cloneRange","setStartAfter","selection","pasteHTML","$div","replaceWith","$this","remove","klass","condition","arguments","showIf","hideIf","isVisibleInViewport","elementTop","top","elementBottom","outerHeight","viewportTop","scrollTop","viewportBottom","isVisibleInContainer","container","eleTop","offsetTop","eleBottom","clientHeight","containerTop","containerBottom","isFullyVisibleInContainer","isBottomVisibleInContainer","getHyperLink","prot","escaped_url","encodeURI","decodeURI","escape","hyperlinkify","obj","$obj","html_concat","url_regexp","childNodes","$node","outerHTML","tagName","nodeName","list","match","from","Set","decode_uri","console","log","replaceAll","RegExp","uuid","c","r","random","toString","utoa","str","btoa","unescape","encodeURIComponent","atou","decodeURIComponent","getDateFormat","date_format","final_format","pretty_time","timestamp","format","pretty_date","pretty_datetime","pretty_short_datetime_recent_chat","Number","startOf","isSame","subtract","pretty_short_datetime","datetime","day","year","pretty_short_month_date","isImageType","tryReadingFile","Promise","reject","getDomainFromUrl","a","test","href","isVideoType","file_type_icon","mime_type","filetype","pretty_file_type","file_type_icon_svg","pretty_file_type_with_article","pretty_size","isNaN","toFixed","pretty_duration","duration","trunc","pretty_duration_ephemeral_timer","timer","pretty_name","substr","toLowerCase","getKeyByValue","object","key","slice_string","to","isNumber","slice_pretty_body","mutable_refs","filter","m","pretty_body","ref","start","end","markupBodyMessage","message","mention_tag","attrs","clone","attributes","mentions","markups","mutable_content","blockquotes","markup_body","original_message","muted","mention","start_idx","end_idx","is_gc","jid","me","markup","start_tags","end_tags","mark_up_style","uri","quote","child_idx","getOS","platform","navigator","os","isOverflownWidth","element","scrollWidth","clientWidth","isOverflownHeight","scrollHeight","render_data_form","data_form","$data_form","fields","field","$fixed_field","label","values","$input","var","copyTextToClipboard","callback_msg","errback_msg","clipboard","writeText","then","info_msg","callback_popup_message","time","$body","$popup_msg","count","openWindow","errback","win","clearSelection","empty","getCookie","matches","cookie","undefined","isMobile","Android","userAgent","BlackBerry","iOS","Opera","Windows","any","fromBase64toArrayBuffer","b64_string","buffer","ArrayBuffertoBase64","arrayBuffer","generateHOTPKey","async","secret","counter","Crypto","crypto","subtle","counterArray","padCounter","importKey","sign","ArrayBuffer","bView","DataView","bCounter","repeat","byte","byteValue","parseInt","setUint8","DT","HS","truncate","uKey","Sbits","generateHOTP","hmacSha256","stringToArrayBuffer","string","AES","ALGO_NAME","decoder","TextDecoder","encoder","TextEncoder","decrypt","masterKey","HMACData","payload","masterObj","hkdfCtrParams","salt","info","deriveBits","encryptionKey","authenticationKey","iv","generatedHMAC","byteLength","decryptedBuffer","decode","encrypt","plaintext","getRandomValues","encrypted","generateAESencryptedMessage","keydata","encryptOptions","encodedPlaintext","encode","arrayBufferConcat","joined","set","generateAESKey","algo","generateKey","getBrowser","userAgentString","chromeAgent","IExplorerAgent","firefoxAgent","safariAgent","operaAgent","images","modals","sounds","client_translation_progress","utils","Backbone","Model","defaults","version_number","actual_version_number","client_id","substring","initialize","env","fetchURLParams","cleanUpStorage","initDefaultLanguage","detectMediaDevices","mediaDevices","ondevicechange","check_config","_settings","Settings","storage_name","getStorageName","fetch","settings","host","pathname","_cache","ModelWithStorage","cache","save","extendFunction","plyr_players","current_plyr_player","on","throwNewVersion","onQuit","_version_interval","setInterval","readActualVersion","msg","line","col","ononline","disconnectWhenConnecting","lang","language","loadTranslations","default_translation","translation","setLocale","translations","default_lang","_translations","use","init","lng","debug","pluralSeparator","resources","changeLanguage","locale","getFixedT","getOneLiners","exists","t","getQuantityString","services","pluralResolver","getRule","_count","compatibilityJSON","suffix","getSuffix","warn","pretty_last_seen","seconds","calendar","rawFile","XMLHttpRequest","onreadystatechange","readyState","status","json","responseText","JSON","parse","version_description","send","trimStart","trimEnd","indexedDB","databases","db","deleteDatabase","accounts","acc","cached_roster","database","cached_sync_conversations","cached_server_features","full_storage_name","localStorage","startsWith","removeItem","cacheFavicons","getMediaDevices","media_devices","callback","enumerateDevices","devices","device","kind","catch","err","done","reload","max_connection_retries","idling","idling_time","notifications_private","notifications_group","jingle_calls","notifications_volume_enabled","notifications_volume","message_preview_private","message_preview_group","private_sound","group_sound","background","side_panel","theme","blur","transparency","appearance","vignetting","main_color","emoji_font","sound_on_private_message","sound_on_group_message","call_attention","load_media","typing_notifications","mapping_service","desktop_autostart","reconnection_logs","sound_on_call","sound_on_dialtone","sound_on_connection","sound_on_attention","sound_on_auth_request","sound_on_call_busy","hotkeys","avatar_shape","device_metadata","load_history","mam_requests_limit","mam_messages_limit_start","mam_messages_limit","configure","config","pick","bc","log_level","PRIVACY_LOAD_MEDIA","PRIVACY_TYPING_NOTIFICATIONS","PRIVACY_DEVICE_METADATA_DEFAULT","PRIVACY_MAPPING_SERVICE","item_key","is_outside_url","BroadcastChannel","onmessage","event","disabled_client","postMessage","self","useLocalStorage","ignore_localstorage_warning","ignore","requestNotifications","granted","emoji_dfd","emoji_url","emoji_obj","loadEmojiFont","splitted_url","splitted_url_anchor","url_params","param","history","pushState","STORAGE_NAME_ENDING","Notification","permission","ignore_notifications_warning","notifications_placeholder","NotificationsPlaceholder","updateFaviconConnected","is_disconnected","account","isConnected","session","updateAllMessageCounterOnDisconnect","is_fast","connection","activate","extendWith","reduce","instance","base","applyTo","View","template","parent","vname","children","classlist","view","ps_selector","ps_container","perfectScrollbar","ps_settings","visible","onChangedVisibility","updateCSS","size_changed","windowResized","_initialize","__initialize","isVisible","show","onShow","apply","updateScrollBar","hide","onHide","render","child","addChild","constructor","removeChild","soft","removeChildren","view_id","setCustomCss","styles","removeCustomCss","removeAttr","saveScrollBarOffset","getScrollTop","scroll_top","scrollTo","scrollToTop","scrollToBottom","offsetHeight","scrollToChild","$child","prevAll","sum","scrollToChildPlus","plus_scroll","getScrollBottom","getPercentScrolled","isScrolledToTop","isScrolledToBottom","destroyView","undelegateEvents","removeData","unbind","call","tree","close_settings","main_overlay","patchTree","has","className","isNull","new_view","events","keyUpOnSearch","stopPropagation","ids","toArray","$selection","getSelectedItem","selectNextItem","selectPreviousItem","onEnterPressed","clearSearch","updateSearch","selection_id","selectItem","arrow","clearSearchSelection","first","_update_search_timeout","query","search","onEmptyQuery","searchAll","keyUpOnSearchWithQuery","onClickItem","updateSearchWithMessages","search_messages","onScrollY","queryid","_loading_messages","_messages_loaded","query_id","first_message","searched_msgs_loaded","before","MAMRequest","query_text","messages","$message_item_view","message_from_stanza","chats","receiveChatMessage","is_searched","msg_idx","model","insertBefore","eq","onScroll","getSelectedItemWithQuery","selectNextItemWithQuery","selectPreviousItemWithQuery","selectItemWithQuery","main_container","clearTimeout","keyup_timeout","query_transliterated","server_features","NS","XABBER_FAVORITES","saved_chat","getSavedChat","item_view","updateLastMessage","query_chats","comparator","sort","contact","searched_by","chat_item","prepend","screen","contacts","hash_id","chat_id","item_list","getChat","clear_search","searchMessages","preloader","max","iq","$iq","xmlns","MAM","DATAFORM","up","cnode","RSM","toXML","handler","addHandler","sendIQFast","deleteHandler","$fin","field_type","input_widget","field_name","placeholder","$value","$btn","updateValue","input_mode","onChangedInputMode","bindModelEvents","model_field","showInput","keyDown","getValue","changeValue","keyUp","setValue","new_value","screen_map","update","onScreenMapChanged","updateBackground","updateMainColor","updateAvatarShape","insertAfter","addScreen","siblings","shape","background_settings","updateBoxShadow","updateBlur","setScreen","chat_item_view","new_attrs","stamp","uniqueId","isScreen","show_placeholder","right","right_force_close","right_contact","content","_prev_scrolltop","_scrolltop","previous_screen","changed","showChatPlaceholder","screen_changed","toolbar","state","setAttribute","getAttribute","removeAttribute","onUpdatedScreen","onChangedAllMessageCounter","onChangedGroupMessageCounter","onChangedMentionsCounter","onChangedMessageCounter","msg_counter","group_msg_counter","all_msg_counter","mentions_counter","dropdown","inDuration","outDuration","constrainWidth","hover","alignment","updateColor","contains","clickAllChats","showAllChats","no_unread","closest","is_active","showArchive","showSavedChats","right_contact_save","scroll_to_chat","once","showNotifications","showChatsByAccount","showContacts","showMentions","showSettings","account_block_name","showSettingsModal","showPlaceholder","screen_name","showAddContactView","showAddAccountView","showAddIncognitoGroupChatView","incognito","showAddPublicGroupChatView","public","setAllMessageCounter","count_msg","count_all_msg","count_group_msg","isMuted","incoming_subscriptions","unread_mentions","msgs","all_msgs","group_msgs","recountAllMessageCounter","unread_messages","jingle_message_calling","avatar_size","onDestroy","updateCallingStatus","updateButtons","updateCollapsedWindow","updateName","updateStatusText","updateAccountJid","dismissible","ready","updateAvatar","pos1","pos2","pos3","pos4","mousedown","clientX","clientY","didDrag","onmouseup","onmousemove","left","setFullScreen","fullscreenElement","exitFullscreen","requestFullscreen","cancelFullScreen","mozCancelFullScreen","mozFullScreenElement","webkitExitFullscreen","webkitCurrentFullScreenElement","msExitFullscreen","msFullscreenElement","shareScreen","isFullScreen","webkitFullscreenElement","accept","initSession","clickOnWindow","toggle","toggleClass","toggleMicrophone","status_text","videoCall","toggleVolume","cancel","plyr_player_popup","onVisibilityChange","updatePlyrControls","player","controls","youtube","disablekb","iv_load_policy","modestbranding","rel","showinfo","other","$audio_elem","voice_message","stopTime","detail","minimizePopup","showNewVideo","xPercent","innerWidth","yPercent","innerHeight","dfd","provider","updateColorScheme","player_item","message_unique_id","video_sources","video_src","source","sources","$minimize_element_float","$minimize_element_full","$show_message_element_full","play","video_file","video_decrypted","decryptFile","closePopup","visibility_state","hidePopup","floatPopup","fullPopup","nextPlyr","player_index","next_item","f_url","previousPlyr","prev_item","openMessage","showDetailsRight","right_saved","getMessageContext","togglePlay","renderVoiceMessage","toggleMute","settings_modal","updateLanguage","updateEmojiFontLabel","updateAvatarLabel","updateSoundsLabel","closeSettings","updateAccounts","updateSounds","updateLanguages","updateEmojiFonts","checked","sound_private_value","sound_group_value","updateDescription","updateBackgroundSetting","belowOrigin","updateHeight","updateSliders","block_name","$elem","jumpToBlock","settings_single_account_modal","first_account","single_account_has_rendered","forced_ps_container","single_account_modal","blur_switched","vignetting_switched","material_color","variations","v","hex","tone","weight","$tab","range_min","range_max","range_value","setting_radio_input","input_name","input_id","cid","group_element","element_no_sound","group_element_no_sound","default_element","setting_language_radio_input","progress","second_prog","second_prog_text","second_lang","second_locale","second_element","progress_text","emoji_fonts_list","system_element","setting_emoji_font_radio_input","b","item_name","current_sound","pause","backToMenu","backToSubMenu","elem_parent","goToWebNotifications","setIdling","setIdlingTimeout","$target","setNotificationsVolumeEnabled","setNotifications","requestPermission","setPrivateNotifications","setGroupNotifications","setJingleCalls","setPrivateMessagePreview","setGroupMessagePreview","setCallAttention","setLoadMedia","setTypingNotifications","setMappingService","setDesktopAutostart","setReconnectionLogs","setPrivateSound","setGroupSound","setCallSound","setDialtoneSound","setAttentionSound","setBackground","changeBackgroundImage","openColorPicker","colorPicker","chooseMainColor","changeBlur","changeNotificationsVolume","volume","sound","changeVignetting","switchVignetting","is_switched","switchBlur","setHotkeys","setAvatarShape","setDeviceMetadata","deleteAllAccounts","platform_text","modal_classes","changeEmojiFont","current_time","load_emoji_external_dfd","font_load_dfd","currently_loaded_font_value","response","emoji_load_date","loadExternalEmojiFont","label_text","sound_private_text","sound_group_text","sound_on_attention_text","color_scheme","min","setColor","materialColors","color_picker","$color_hex","updateInputField","keyUpInput","focusoutInputField","selectColor","color_name","backgrounds_gallery","onpaste","onPaste","createLibrary","draggable","ondragenter","ondragover","ondragleave","relatedTarget","ondrop","files","dataTransfer","addFile","loadMoreImages","getImagesFromXML","patterns_library","img_library","onGetPatternsCallback","onGetImagesCallback","thumbnail","fs_img","clipboardData","getData","updateActiveButton","updateActiveMenu","updateScreen","$active_screen","non_active","current_count","img","img_sources","setActiveImage","onFileInputChanged","image_prev","onInputChanged","addBackground","request","headers","dataType","success","ajax","about","onmousedown","onMouseDown","onMouseMove","onMouseUp","which","draghandle_elem","elem","resetElem","downX","pageX","downY","pageY","avatar","abs","createAvatar","coords","getCoords","shiftX","shiftY","startDrag","style","drop_elem","findDropElem","updateDropElem","querySelector","finishDrag","box","getBoundingClientRect","pageYOffset","pageXOffset","$avatar","old","parentNode","nextSibling","position","zIndex","avatar_cursor","cursor","draghandle_elem_cursor","rollback","hidden","elementFromPoint","old_drop_elem","modal_settings","in_duration","out_duration","opacity","minScrollbarLength","suppressScrollX","wheelSpeed","startBlinkingFavicon","_blink_interval","clearInterval","$icon","favicon","favicon_gray","favicon_message","stopBlinkingFavicon","font_loaded","FontFace","load_check_interval","fonts","add","load","resetMessageCounter","onChangedFocusState","popupNotification","playAudio","loop","filename","Audio","stopAudio","registerDOMEvents","initIdleJS","stop","idle","onIdle","onActive","keepTracking","startAtIdle","autostartHandler","electronAPI","Boolean","focused","hasFocus","Materialize","modalSettings","drag_manager","DragManager","Body","login_page","NodeView","toolbar_view","ToolbarView","blur_overlay","main_panel","main_overlay_panel","left_panel","right_panel","right_contact_panel","wide_panel","placeholders_wrap","settings_modal_view","SettingsModalView","idAttribute","to_sync","synced","deleted","update_timestamp","update_settings","request_data","CollectionWithStorage","account_settings_list","AccountSettingsList","order_timestamp","AccountsOrderTimestamp","LogLevel","WARN","ERROR","addConnectionPlugin","_connection","conn","Status","addNamespace","REGIFAIL","REGISTER","REGISTERED","CONFLICT","NOTACCEPTABLE","disco","addFeature","addNode","items","reset","instructions","registered","connect_cb","_connect_cb","raw","_registering","_check_user","_register_cb_check_user","processed_features","_connect_cb_data","_register_cb","xmlInput","Connection","rawInput","auth_old","authenticate","matched","domain","password","authzid","getBareJidFromJid","authcid","getNodeFromJid","pass","connect_callback","connect","wait","hold","route","getDomainFromJid","connect_check_user","connect_change_password","registerSASLMechanisms","SASLAnonymous","SASLExternal","SASLMD5","SASLPlain","SASLSHA1","_callback","connected","bodyWrap","_proto","_reqToData","strip","serialize","CONNFAIL","register","getElementsByTagName","mechanisms","_no_auth_received","_changeConnectStatus","_addSysHandler","_get_register_cb","stanza","getText","submit","_submit_cb","error_text","submit_unregister","_submit_unregister_cb","SASLHOTP","SASLMechanism","onChallenge","out","len","charAt","utf16to8","hotp_pass","ConnectionManager","auth_type","registerSASLMechanism","_sasl_data","SASLXOAuth2","reconnect","_attemptSASLAuth","sortMechanismsByPriority","mechanism_found","_sasl_success_handler","_sasl_success_cb","_sasl_failure_handler","_sasl_failure_cb","_sasl_challenge_handler","_sasl_challenge_cb","_sasl_mechanism","onStart","request_auth_exchange","$build","SASL","mechanism","isClientFirst","hotp_counter","_sasl_auth1_cb","features","do_bind","do_session","namespaceURI","AUTH_DEVICES","x_token_auth","SYNCHRONIZATION","create","do_synchronization","SUBSCRIPTION_PREAPPROVAL","x_token","expire","getXToken","token","expires_at","token_uid","_send_auth_bind","AUTHFAIL","_sasl_bind_cb","resource","getResourceFromJid","BIND","old_token","uniq_id","client_name","iqtype","Websocket","_onIdle","_conn","_data","paused","rawStanza","_buildStream","xmlOutput","rawOutput","socket","_pending_stanzas","_onOpen","startString","openCheckTimeout","open_received","disconnect","_handleStreamStart","ns","FRAMING","ver","_doDisconnect","xmlunescape","reg_exp","testRegexp","replaceRegexp","vcard","xmlToObject","$vcard","nickname","fullname","middle_name","birthday","job_title","role","description","jabber_id","org","photo","phone","address","email","group_info","anonymous","searchable","status_msg","members_num","$org","unit","$photo","number","work","home","mobile","pobox","extadd","street","locality","region","pcode","country","VCARD","sendIQ","objectToXml","getBlank","updateRefreshButton","getVCard","$info","$addr_info","show_addr_block","addr","onClickIcon","$target_value","copied_text","value_text","refresh","vcard_right","vcard_edit_modal","pickadate","selectMonths","selectYears","autoOk","allowKeyboardControl","today","onClose","activeElement","weekday_display","date_display","navPrev","navNext","selected","buttonClear","buttonClose","evt","updateSaveButton","setData","updateTextFields","changePlaceholder","nickname_placeholder","setVCard","$pres","Images","enabled","status_message","priority","auto_login_xa","account_unique_id","groupchat_servers_list","_attrs","retraction_version","is_new","auth_view","is_invalid","last_msg_timestamp","collection","getLastOrder","deleteAccount","photo_hash","reconnected","ready_to_send","conn_retries","conn_feedback","_waiting_code","code_requests","gallery_code_requests","xabber_auth","onChangedConnected","websocket_connection_url","conn_manager","_added_pres_handlers","_pending_messages","dfd_presence","password_view","_init_plugins","plugin","xml","isOnline","getPassword","isReconnecting","sendMsg","authenticated","disconnecting","sendMsgPending","sendMsgFast","getConnectionForIQ","fast_connection","sendFast","nodeTree","is","pubAvatar","removeAvatar","http_avatar","avatar_hash","iq_pub_metadata","PUBSUB","PUBSUB_AVATAR_METADATA","thumbnails","PUBSUB_AVATAR_METADATA_THUMBNAIL","data_error","iq_pub_data","PUBSUB_AVATAR_DATA","uploaded","generated","uploadAvatar","getAvatar","iq_request_avatar","pubsub_avatar","is_iq","parseDataForm","$dataform","$field","field_var","field_label","field_value","field_options","$option","lbl","addDataFormToStanza","$stanza","field_attrs","sendPres","createFastConnection","login","token_invalidated","fast_conn_manager","onFastConnected","reconnecting","auth_failed","restoreStatus","connectionCallback","timeout","connFeedback","reconnectionCallback","loginCallback","conn_status","conn_condition","onAuthFailed","CONNECTED","_revoke_on_connect","onTokenRevoked","DISCONNECTED","flush","_main_interval_worker","terminate","onConnectionConflict","max_retries","registerCallback","$nickname_input","errorRegistrationFeedback","changePasswordCallback","change_password_view","successFeedback","errorFeedback","old_password","change_password_connection","$password_input","change_password_connection_manager","unregisterAccountCallback","unregister_account_view","unregister_account_connection","unregister_account_connection_manager","CONNECTING","stepped_auth","resetAuthStepper","authStepperStart","endAuth","stepper_auth_error","CONNTIMEOUT","authStepperError","destroy","no_reconnect","deactivate","old_device_token","getAllXTokens","tokens_list","tokens","$token","client","omemo_id","last_auth","ip_address","ip","x_tokens_list","on_token_revoked","onReconnected","onConnected","onDisconnected","afterConnected","_after_connected_plugins","_after_fast_connected_plugins","_fast_interval_worker","_after_reconnected_plugins","sendPendingStanzas","sendPendingMessages","registerPresenceHandler","enableCarbons","getAllMessageRetractions","query_options","REWRITE","version","retractions_query","Builder","is_msg","msg_iq","unique_id","DELIVERY","disconnected_timestamp","last_stanza_timestamp","CARBONS","is_callback","isFunction","vcard_updated","avatar_priority","vcardPhotoUpdated","getStatusMessage","setStatus","status_updated","status_prev","sendPresence","getAvatarHash","from_avatar","decoded_raw","bin","VCARD_UPDATE","caps","createCapsNode","has_modal_settings","settings_account_modal","revokeXToken","token_num","revokeAllXTokens","show_settings","dont_change_screen","show_settings_after_delete","dont_change_screen_after_delete","omemo","groups_settings","clearStorage","groupchat_settings","chat_settings","deleteDataBase","registerIQHandler","_stanza_handler","onGetIQ","registerSyncedIQHandler","_synced_stanza_handler","onSyncedIQ","_pres_handler","presence","onPresence","onSetIQResult","roster","syncConversations","request_code","$incoming_iq","$confirm","HTTP_AUTH","$session_availability","JINGLE_MSG","from_jid","onAuthCode","$session_availability_response","session_id","testGalleryTokenExpire","currentTime","tokenExpireTime","initGalleryAuth","testGalleryFileSlot","onloadend","b64","responseJSON","gallery_feature","gallery_iq_answered","stringify","request_id","gallery_auth_errback","verifying_code","verifying_mess","handleCommonGalleryErrors","confirm_code","expires","prepareFiles","testFile","err_text","getStorageStats","uploadFile","formData","FormData","metadata","voice","processData","deleteFile","file_id","contexts","deleteFileByUrl","file_url","getOpenGraphData","site","ogp","image_height","image_width","video_url","createMessageFromIQ","mergeContact","$presence","bare_jid","$vcard_update","VCAD_UPDATE","resource_obj","$device","addInitPlugin","func","addConnPlugin","reconn","addFastConnPlugin","acc1","acc2","models","settings_list","getEnabledList","getConnectedList","onAdd","onOmemoChanged","onUpdatedOrder","onListChanged","onAccountDisconnected","onQuitAccounts","onSettingsAdded","last","used_colors","colors","moveBefore","index2","prev_order","at","_updateOrder","moveToBottom","index","toolbar_item","updateConnected","updateAuthState","updateStatus","setActive","filterChats","updateList","updateOneInList","onAccountRemoved","after","resource_right","Collection","r1","r2","p1","p2","requestInfo","$identity","attention_supported","isFeatureSupported","ATTENTION","is_supported","renderByInit","onResourceAdded","onResourceRemoved","onReset","onPriorityChanged","updatePosition","vcard_modal","showEditView","media_gallery_account","onUpdateAvatars","updateStorage","loading_files","current_page","total_pages","current_options","page","getAvatars","getFiles","after_deletion","after_avatar_update","used_storage","total","used","quota","videos","voices","avatars","filterType","sorting","order_by","onTabClick","tab_header","backToMain","showDeleteFilesView","gallery_view","sortFiles","sort_type","onClickFile","prev_audio_message","not_expanded_msg","$msg_element","audio_file_waveform","waveform_id","aud","createAudio","round","getDuration","unAll","timerId","cur_time","getCurrentTime","isPlaying","onchange","setVolume","scrollParent","barWidth","barHeight","cursorColor","autoCenter","normalize","hideScrollBar","progressColor","assign","obj_per_page","current_rendered_type","renderFiles","$gallery_file","media_gallery_account_file","svg_icon","media_type","filesize","created_at","download_only","closeOnContentClick","fixedContentPos","mainClass","verticalFit","titleSrc","zoom","deleteAvatar","enableFilesSelect","onSelectFile","disableFilesSelect","selectFile","$target_input","selected_header","selected_count","deleteSelectedFiles","openStoragePanel","wheelPropagation","delete_files_media_gallery","delete_percent","onRender","onChangeCheckbox","delete_avatars","has_files","deletePercent","percent","current_page_preview","getFilesForDeletion","traditional","renderForDeletion","is_avatar","context","dropdown_settings","deleteFilesFiltered","account_settings_modal","status_field","updateBlocks","updateGallery","vcard_view","updateView","showConnectionStatus","updateSynchronizationBlock","updateXTokens","groups","updateGroupsLabel","updateReconnectButton","updateSyncOption","updateDelSettingsButton","updateSyncState","updateEnabled","updateOmemoDevices","updateEnabledOmemo","updateEncryptedChatstates","updateBlockedLabel","blocklist","blocked_count","jumpToBlockHandler","tabs","updateDeviceInformation","backToMenuHandler","backToSubMenuHandler","deselectBlocked","updateNameCSS","$name","wrap_width","font_size","chooseAvatar","openEmojiPanel","openWebcamPanel","changeAvatar","openChangeStatus","unregisterAccount","store","showResources","resource_id","hideResources","renderAllXTokens","devices_count","handled_devices","sortBy","pretty_token","findWhere","toJSON","is_omemo","$cur_token_html","current_token_item_modal","$token_html","token_item_modal","omemo_own_devices","omemo_device_id","updateTrustDevice","_single_account","own_devices","fing","$this_device","generateFingerprint","getBundle","pk","spk","ik","fingerprint","openFingerprint","is_own","openFingerprintDevice","groups_count","mdiclass","$sync_icon","omemo_enable_view","setEnabled","setEnabledOmemo","initOmemo","destroyOmemo","setTypingNotification","openDevicesWindow","omemo_devices","purgeKeys","device_id","bundle","preKeys","removeItemFromNode","OMEMO","showPasswordView","changeSyncSetting","deleteSettings","delete_account","changeColor","showQRCode","qrcode","noBorder","domElement","openBlockWindow","block","blockContact","selectUnblock","unblockSelected","single_account_settings_modal","args","status_message_input_widget","global_settings_item_modal","updateNickname","onDragTo","onMoveAccount","revoke_timeout","onMoveAccountToBottom","updateHtml","change_status","highlightStatus","restoreStatusMessageInput","changeStatus","do_change","clearStatusMessageInput","verbose_status","apply_to_all","changeApplyToAll","avatars_gallery","participant","current_items","current_file","addAvatarSelecter","addNotOwnAvatar","addAvatar","img_from_gallery","createFileFromURL","participant_node","updateMemberAvatar","webcam_panel","registration","registration_view","streaming","startbutton","startupStream","srcObject","getTracks","track","getUserMedia","stream","takePicture","clearPhoto","fillRect","globalCompositeOperation","beginPath","arc","PI","closePath","saveNotOwnAvatar","saveAvatar","member_details_avatar_size","emoji_panel","emoji_panel_view","openEmojiPicker","b64Image","emoji_picker","readEmojisJSON","emojis","emoji_picker_tabs","pickEmojiTab","tab","pickEmoji","change_password","is_login","authFeedback","getActionName","setPassword","authentication","change_account_password","$old_password_input","$password_confirm_input","password_confirm","password_not_error","$jid_input","updateOptions","at_idx","registerFeedback","registration_success","authStepperShow","getWebsocketURL","DISABLE_LOOKUP_WS","protocol","socket_url","socialAuth","origin","xmpp_login","$domain_input","handleRegistrationStep","stepped_auth_complete","updateDomains","updateAuthDomains","openButtonsMenu","keyUpNickname","openNextStep","keyUpJid","_check_user_timeout","setCustomDomainRegistration","regexp_local_part","regexp_domain","_registration_username","_registration_domain","auth_connection","handleRegisterStanza","auth_conn_manager","checkUserCallback","keyUpPassword","keyUpDomain","keyUpLogin","focusoutDomain","username_taken","_supports_check_user","class","user_success","_check_user_connection_timeout","_no_response","openPreviousStep","step","checkFeaturesStepper","successRegistrationFeedback","registerWithoutAvatar","logoutAndRegister","openRegisterForm","openLoginForm","all_servers","splice","setCustomDomainAuth","$property_value","changePropertyValueRegistration","$property_item","changePropertyValueAuth","openLoginSettings","timeout_timer","HTTP_UPLOAD","first_features_received","auth_error","add_account","logout","unregister_account","checked_count","submitUnregister","xmpp_login_panel","XmppLoginPanel","Container","Accounts","ToolbarAccountsBlockView","SettingsAccountsModalBlockView","add_account_view","AddAccountView","UnregisterAccountView","change_account_password_view","ChangeAccountPasswordView","delete_files_view","DeleteFilesFromGalleryView","export_history_view","ExportChatHistoryView","onbeforeunload","login_screen","xabber_login","single_account","supports","renderSingleAccount","addIdentity","LAST","CHATSTATES","BLOCKING","PING","CHAT_MARKERS","ARCHIVE","GROUP_CHAT","namespace","verbose_name","feature","onFeatureAdded","getAllFromCachedFeatures","is_cached","onInfo","onItems","addItem","form_type_val","URLDISCO","media_gallery_url","MEDIAGALLERY","_var","client_feature","client_features","putInCachedFeatures","_last_stanza_handler","_pong_handler","ping","addPingHandler","pong","Worker","downtime","onLine","last_fast_stanza_timestamp","_last_fast_stanza_handler","_fast_pong_handler","_onDiscoInfo","DISCO_INFO","_onDiscoItems","DISCO_ITEMS","Emoji","subscription","subscription_request_in","subscription_request_out","group_chat","onChangedGroupchat","full_jid","server","roster_name","isBlocked","blocked","b64_sha1","updateCachedInfo","is_deleted","out_request","online_members_num","getSubscriptionStatuses","subscription_preapproved","in_request","status_description","status_out_color","status_in_color","status_out_text","status_in_text","status_out","status_in","getIcon","getFromRoster","cached_info","roster_info","in_roster","putInRoster","updateCounters","participants","resetParticipantsList","getBlockedParticipants","getLastSeen","last_seen","getLastSeenStatus","getMyInfo","participantsRequest","properties","cached_avatar","getAvatarInfoById","createFromStanza","my_info","avatar_b64","my_rights","message_time","pres","pushInRoster","ROSTER","group","removeFromRoster","acceptRequest","askRequest","blockRequest","declineRequest","declineSubscription","declineSubscribe","deleteWithDialog","is_group","msg_text","bold","localpart","delete_history","retractAllMessages","deleteFromSynchronization","blockWithDialog","unblockWithDialog","unblock","setActiveStateSendInterval","$msg","_sending_active_chatstate_timeout","_sending_active_chatstate_interval","handlePresence","$group_chat_info","updateGroupChatsList","group_chat_info","parseGroupInfo","prev_group_info","sync_deleted","$status_message","_reset_status_timeout","$group_chat","$model","privacy","$index","$description","pinned_message","prev_pinned_message","private_chat","$online_members_num","pinned_msg_elem","$pinned_message","getMessageByStanzaId","$message","parsePinnedMessage","getAllRights","iq_get_rights","iq_all_rights","all_permissions","all_restrictions","all_rights","permissions","restrictions","stanza_id","receiver","sync_type","getConversationType","fast","is_groupchat","filter_image","filter_video","filter_voice","filter_files","opt_var","onStartedMAMRequest","callb","onCompletedMAMRequest","rsm","errb","getFilesFromStanza","cached_stanza_id","references","cached_message","REFERENCE","reference","$reference","$file_sharing","FILES","VOICE_MESSAGE","$file","file_attrs","HASH","uniqueid","has_encrypted_files","renderPinnedMessage","locations","fwd_message","fwd_msg_author","user_info","participant_info","participant_nickname","pinned_msg","author","fwd_author","pinned_msg_html","group_chats","chat_content","height_pinned_msg","resetStatus","searchByParticipants","participants_list","showDetails","details_view","scrolled_top_chats_view","scrolled_top_chat","details_view_right","details_view_right_encrypted","contact_searched_messages_view","hideSearch","showSearchMessages","set_status","getStatuses","updateIcons","ic_name","iq_get_properties","renderStatuses","f","$status_item","status_item","iq_set_status","interval_last","selectView","updateGroupChat","updateIcon","onBlocked","updateStatusMsg","lastSeenUpdated","new_status","is_group_chat","contact_right_item","showJid","hideJid","clickOnItem","contact_left_item","updateDisplayStatus","updateBlockedState","updateMutedState","onResourceUpdated","showVCard","hideVCard","contact_details_right","name_field","contact_edit_view","edit_groups_view","updateNotifications","updateJingleButtons","updateChilds","updateSubscriptions","setButtonsWidth","updateIndicator","keydownHandler","hideEdit","isOpen","openChat","scrollToTopSmooth","animate","widths","button","bottom_block_scroll","is_blocked","is_server","$label_outcoming","$label_incoming","prev","showEdit","voiceCall","initCall","initJingleMessage","deleteContact","unblockContact","muteChat","muted_seconds","mute_type","unmuteChat","$search_form","addContact","changeList","list_name","scrollLeft","addList","_render","constructor_func","requestAuthorization","group_chat_details_right","member_avatar_size","group_chat_properties","group_chat_status","group_chat_properties_edit","default_restrictions_edit_right","hideRestrictions","showRestrictions","is_owner","change_group","clearHistory","head","editProperties","leaveGroupChat","inviteUser","edit_view","getInvitations","deleteGroup","makeSelfie","makeEmojiAvatar","group_status","group_status_right","$target_info","label_name","group_chat_properties_right","hideMoreDescription","all_fixed","saveChanges","has_changes","checked_inp","text_inp","textarea","field_idx","$result","$error","updateInvitations","user","$item_view","invited_member_item","showInviteButton","revokeInvitation","$member_item","member_jid","updateRemoveParticipantButton","revokeInvitationByElement","temporary_items","all_messages_loaded","getMediaFromDecryptedMessages","messagesFileRequest","updateMedia","active","last_rsm_message","loading_messages","loadMoreFiles","block_height","updateForParticipant","delegateEvents","filter_type","fail","cached_messages","getMessages","entries","msg_items","envelope","filtered_items","items_count","filterEncryptedFiles","encryptedFilesHandler","files_count","updateEncryptedMedia","is_loaded","true_voice","media_item","is_encrypted","media_items_empty","messages_count","searched_message","gallery","parents","searched_messages","updateBlockedParticipants","showBlockButton","unblockUser","tag","unblockUserByElement","blockId","onParticipantsUpdated","updateParticipantsList","participant_properties_panel","updateParticipants","setParticipantsListVersion","updateVersion","renderParticipants","renderMemberItem","blockParticipant","kickParticipant","kick","removeParticipantFromList","badge","is_me","pretty_present","present","isValid","fromNow","group_member_item","prependTo","member","getB64Avatar","getHashAvatar","avatar_url","updateCachedAvatars","showParticipantProperties","participant_item","participant_id","keyUpSearch","searchParticipant","participants_right_panel","onParticipantsChanged","kickParticipantDialog","group_member_item_right","showParticipantPropertiesEdit","showNamePanel","changeBackButton","participant_rights","onBadgeUpdated","new_avatar","$member_info_view","is_myself","is_blocked_contact","incognito_chat","private_participant_details","participant_details_item","participant_messages","actual_rights","setActualRights","new_nickname","updateRightsView","messages_view","messagesRequest","changeTimerValue","$input_item","updateBadge","$member_item_nickname","xmlescape","editNickname","editBadge","edit_badge_panel","checkKeydown","checkKeyup","retractUserMessages","retractMessagesByUser","restriction_expire","restriction_item","right_expire_variants","right_name","expire_options","getPrivateChat","participant_jid","participant_in_roster","iq_response","group_jid","createSystemMessage","private_chat_jid","changeRights","$right_item","saveRights","member_id","$participant_avatar","nickname_value","changed_avatar","rights_changed","iq_changes","right_item","right_expire","iq_rights_changes","participant_details_right","private_participant_details_item_right","participant_details_item_right","participant_name_field","participant_badge_field","hidePanel","resetPanel","changeName","changeBadge","clickAvatarInput","url_forced","setVisibility","$current_restriction","new_badge","badge_edit_view","typeEmoticon","_timeout","$insert_emoticon","$emoji_panel_wrap","$emoji_panel","$emoji_list_wrap","sprite","tag_name","saveNewBadge","emoji_node","checkKey","default_restrictions","actual_default_restrictions","showDefaultRestrictions","restriction_name","restriction_expires","restriction","changeRestriction","changePropertyValue","iq_change_default_rights","has_new_default_restrictions","changeExpiresTime","expire_time_item","new_expire_time","$restriction_item","default_restrictions_right","getBase64Avatar","getParticipantsListVersion","getCachedParticipants","getParticipantsList","mergeParticipant","resetParticipants","getRights","rights","pretty_rights","issued_time","expires_time","updatePinnedMessage","$response","photo_url","updateParticipant","participants_lists","all_participants_lists","participants_list_idx","chat_participants","participant_idx","setParticipantsList","updated_participants_list","invitation","closeChat","readMessages","blockInvitation","contact_jid","iq_get_blocking","iq_unblocking","iq_set_blocking","iq_blocking_items","item_jid","getDefaultName","group_name_input_widget","force_reset","description_input_widget","changeDescription","onUpdate","all_groups","notSpecial","groups_checkbox_list","groups_list","groups_new_group","on_add","_update_template","removeGroup","group_name","removeLastGroup","editGroup","_hide_timeout","checkNewGroup","keyupAddNewGroup","addNewGroup","keydownAddNewGroup","focusinAddNewGroup","focusoutAddNewGroup","edit_contact","updateStatuses","statuses","status_out_class","status_in_class","requestSubscription","allowSubscription","cancelSubscriptionRequest","handleSubscriptionRequest","cancelSubscriptionOut","cancelSubscriptionIn","edit_group","group_name_field","group_description_field","restrictions_count","showMembershipProperty","showIndexProperty","showDescriptionProperty","hideProperty","invitations","actionSelectedParticipants","deselectParticipants","selectParticipant","is_selected","inv_count","showPanel","original_data_form_values","data_form_index","findIndex","changeMembership","membership_text","membership","changeIndex","index_text","onContactChanged","contact1","contact2","s1","s2","sw1","sw2","sw1_offline","name1","name2","settings_view","updateCounter","onContactRemoved","onChangedRosterSettings","isSpecial","where","renameGroup","new_name","removeContact","updateGroupIcon","updateMembersCounter","onContactAdded","updateContactItem","onChangedOfflineSetting","onChangedSortingSetting","updateExpanded","expanded","mdi_icon","show_offline","roster_settings","group_settings","is_default_show_offline","is_offline","showSettingsIcon","showGroupSettings","group_right","group_left","setOffline","validateName","applySettings","name_error","onGroupAdded","acc_view","onGroupAddedSingleAccount","rendered_once","removeAllContacts","collections","updateInCollections","addCollection","hasOwnProperty","registerHandler","onBlockingIQ","getFromServer","roster_version","addContactToGroup","known_changed","in_roster_changed","groups_changed","groups_to_remove","getGroup","onRosterIQ","syncFromServer","synchronization_with_stamp","is_first_sync","request_attrs","cached_conversations_exclude","onSyncIQ","last_version_sync","syncCachedConversations","request_with_stamp","cached_conversations","syncConversation","conversation","parseXML","saved","conv","account_conversation_type","removeFromCachedConversations","SYNCHRONIZATION_OLD_OMEMO","$sync_metadata","$group_metadata","is_incognito","is_private","SYNCHRONIZATION_OMEMO","current_call","$unread_messages","chat_timestamp","last_read_msg","last_delivered_msg","last_displayed_msg","unread_msgs_count","is_invite","msg_retraction_version","synced_msg","current_chat_timestamp","retracted_msg_id_list","putInCachedConversations","last_message","updateEncryptedChat","updateMutedList","$jingle_message","getCallingAvailability","reason","sendReject","initIncomingCall","sync_update","updateEmptyChat","is_unread","delay","sync_timestamp","isSenderMe","last_read_msg_item","readen_unread_msgs","last_readen_unread_msg","sendMarker","messages_unread","is_last_sync","sync_rsm_after","last_chat_msg_id","conversations_loaded","last_sync_timestamp","getAllFromCachedConversations","retract_version","sync_options","getRoster","request_ver","getAllFromRoster","roster_items","new_roster_version","iq_type","onRosterItem","is_version","to_send_available","known","onGroupRenamed","onGroupRemoved","updateGroupPosition","group_view","old_name","account_roster_right","updateGlobalCounter","account_roster_left","hashes","updateTabsLabel","updateUnblockButton","unblockContactByJid","hideEmptyContainers","rendered","tmp","contact_blocked_item","domains","contact_label_text","domains_label_text","invitations_label_text","updateOneRosterView","updateRosterViews","removeRosterView","account_roster_view","roster_left","updateLeftIndicator","getContactForItem","account_jid","roster_view","setOfflineSetting","setSortingSetting","$parent_el","contact_placeholder","onPlaceholderUpdate","add_contact","group_data","updateGroups","renderAccountItem","bindAccount","renderGroupsForAccount","stepForward","add_contact_account_item","silent","groups_checkbox_list_contact","selectAccount","checkJid","force_opened_state","custom_notifications","message_preview","pinned","general_group_name","non_roster_group_name","ModelWithDataBase","put","response_value","get_all","clearDataBase","clear_database","delete_database","getFromCachedConversations","getFromCachedFeatures","removeFromCachedFeatures","objStoreName","primKey","roster_item","_roster_settings","RosterSettings","contacts_view","RosterLeftView","contact_container","details_container","ContactPlaceholderView","add_contact_view","AddContactView","msgid","updateUniqueId","destroyOnEcho","removeMessage","forwarded_message","getState","getVerboseState","handleEphemeralMessage","putMessage","ephemeral_removed","checkEphemeralTimer","date","msgDate","getTime","time_difference","ephemeral_timeout","checkEphemeralTimers","displayed_time","createInvitationFromStanza","is_private_invitation","$delay","markable","archive_id","origin_id","$group_info","group_info_attributes","carbon_copied","is_archived","is_forwarded","contact_stanza_id","synced_invitation_from_server","parent_chat","auth_request","invite","private_invite","is_accepted","replaced","forwarded","sid","context_message","is_unread_archived","participant_message","echo_msg","EPHEMERAL","cached_msg","getMessage","is_between_anchors","not_encrypted","not_verified_device","not_verified_device_no_device","link_references","is_trusted","begin","MARKUP","$mention","child_ref","$geolocation","GEOLOC","loc_attrs","lat","lon","OGP","$ogp","link_reference_attrs","original_text","getFileType","x_elem","$user","user_id","user_jid","groupchat_jid","is_sender","participants_version","WEBCHAT","addresses","ADDRESS","$address","only_emoji","synced_from_server","missed_history","missed_msg","pinned_messages","searched_in_contact_messages","context_messages","msg_contact","ephemeral_timer","filereader","exportedMasterKey","enc_file","readAsArrayBuffer","getFilename","url_media","lastIndexOf","full_type","ephemeral_timer_selector","updateSelectedTimer","changeTimer","contact_full_jid","volume_on","video_in","video_screen","video_live","registerIqHandler","audio_notifiation","call_initiator","modal_view","RTCPeerConnection","iceServers","sdpSemantics","$remote_video_el","$remote_audio_el","$local_video","current_timer","onconnectionstatechange","onChangeConnectionState","onChangedMediaType","ontrack","remote_stream","streams","_waiting_timeout","onicecandidate","onIceCandidate","oniceconnectionstatechange","onChangeIceConnectionState","setEnabledAudioTrack","onChangedVideoValue","setEnabledVideoTrack","setEnabledScreenShareVideoTrack","onChangedRemoteVideo","onChangedVolume","iq_handler","onIQ","updateTimer","startTimer","call_timer","peer_conn","conn_state","connectionState","_timeout_failed","restartIce","ice","candidate","sendCandidate","iceConnectionState","incoming_video","local_stream","getAudioTracks","default_video","getSenders","sender","createVideoStream","getVideoTracks","stopTracks","createScreenShareVideoStream","video_state","sendVideoStreamState","getDisplayMedia","media_stream","addTrack","replaceTrack","$iq_video","$jingle_initiate","$jingle_accept","$jingle_info","$jingle_video","$result_iq","offer_sdp","JINGLE_RTP","setRemoteDescription","RTCSessionDescription","sdp","acceptSession","answer_sdp","addIceCandidate","RTCIceCandidate","sdpMLineIndex","sdpMid","startCall","createAudioStream","propose","video_track","initVideoTrack","removeTrack","$propose_msg","media","HINTS","$accept_msg","$reject_msg","call_attrs","initiator","p","getImageData","requestAnimationFrame","draw","putImageData","captureStream","createOffer","offerToReceiveAudio","offerToReceiveVideo","offer","setLocalDescription","$iq_offer_sdp","JINGLE","action","creator","JINGLE_SECURITY_STUB","$iq_candidate","JINGLE_TRANSPORTS_ICE","createAnswer","answer","$iq_answer_sdp","opened","display","displayed_sent","last_displayed_id","last_delivered_id","unread","const_unread","sync_created","onContactDestroyed","onChangedContact","onChangedTimestamp","onChangedLastReadMsg","_no_scrolling_event","is_first","requestHistoryBetweenAnchors","read_count","message_item","_long_reading_timeout","scrollToUnread","recountUnread","setEphemeralTimer","resetUnread","sendDataForm","variable","setStanzaId","updateMessage","msg_to","showEphemeralTimerSelector","endCall","receiveMessage","from_bare_jid","$marker","$receipt_request","RECEIPTS","$receipt_response","$jingle_msg_propose","$jingle_msg_accept","$jingle_msg_reject","receiveNoTextMessage","iq_to","jingle_start","reject_contact_stanza_id","busy_audio","$stanza_id","$contact_stanza_id","marker_tag","is_mam","receiveMarker","receiveCarbonsMarker","sendDeliveryReceipt","receiveDeliveryReceipt","last_blocking_timestamp","current_timestamp","has_blocking","blocking_timestamp","mention_context","stanza_id_context","omemo_dfd","msg_options","$delivery_msg","msg_id","is_ephemeral","send_pending","by","EXPLICIT_MESSAGE_ENCRYPTION","$displayed","$received","marked_msg_id","marked_stanza_id","msg_state","delivered_time","setMessagesDisplayed","setMessagesDelivered","enc_chat","enc_msg","undelivered_messages","last_read_msg_id","second_deferred","new_last_read_msg","unread_msg","delivered_origin_id","delivered_stanza_id","onRosterPush","retractMessages","symmetric","msgs_responses","num","iq_retraction","user_msgs","retract_attrs","all_messages","showBlockedRequestMessage","muted_value","conversation_options","mute","SYNCHRONIZATION_REGULAR_CHAT","message_counter","content_placeholder","updatePinned","updateArchivedState","updateGroupChats","updateEncrypted","updateChatError","updateActiveStatus","onClosed","updateChatCard","onMessageRemoved","onChangedMessageState","updateIncomingSubscription","updateAcceptedStatus","removeInvite","updateEncryptedColor","new_message","updateTextClipping","error_msgs","indicators_count","is_pinned","archived","deletePlayersFromMessage","players","msg_time","is_empty","is_truly_empty","own_domain","contact_domain","italics","bottom","draft_message","msg_from","msg_files","msg_images","msg_locations","msg_user_info","$colored_span","is_audio","total_size","first_forwarded_msg","fwd_msg_files","fwd_msg_images","fwd_msg_locations","fwd_msg_txt","openByClick","click_counter","setDefaultPlaceholder","onChatRemoved","loading_history","history_loaded","first_msg_id","last_msg_id","wheel_ev","defineMouseWheelEvent","onMouseWheel","backToBottom","onwheel","onmousewheel","keyupSearch","renderSearchPanel","onClickMessage","onClickLink","onClickLocationLink","onClickLocation","onHoverLocation","emptyChat","addMessageHTML","last_index","scrolled_from_top","scrolled_from_bottom","$next_message","nextAll","updateMessageInChat","initPopup","$history_feedback","addMessage","onChangedReadState","onUpdatePlyr","originalEvent","deltaY","first_history_loaded","last_history_loaded","_scrollbottom","showHistoryFeedback","hideHistoryFeedback","_onscroll_read_messages_timeout","readVisibleMessages","msg_item","buildMessageHtml","findLastIndex","slideToggle","chat_content_contact","loading_timestamp","loaded_messages","message_count","showMessageAuthor","member_nickname","subscription_buttons","hideElement","sendAndAskSubscription","current_day_indicator","_pending_avatars","updateContentColorScheme","onMessage","_is_scrolled_bottom","onChangedActiveStatus","onChangedIdleStatus","loadLastHistory","requestMissedMessages","onChangedMessageTimestamp","onTrustedChanged","onSubscriptionChange","updateMsgsMissingDevices","updateMyInfo","updateMsgsDeviceTrusting","cancelSearch","updateContactStatus","updateWaveforms","getPeer","fingerprints","updateMyName","updateMyStatus","updateMyAvatar","trust","peer","trusted","_loading_history","loadPreviousHistory","backend","drawBuffer","sendChatState","showChatNotification","is_context","last_visible_unread_msg","readMessage","hideMessagesAfterSkipping","synced_message","$synced_message","last_visible_msg","$last_visible_msg","_read_last_message_timeout","unread_context_messages","showUnreadMarker","unread_marker","$last_read_msg","mam_query","getMessageArchive","unread_history","scrollToUnreadWithButton","showDayIndicator","is_focused","indicator_idx","opacity_value","$chatday_indicator","$messages","marker","indicator","scroll_read_timer","removeAllMessagesExceptLast","_interval","is_saved","sendMAMRequest","func_conn","_delete_handler_timeout","send_counter","previous_history","_load_history_timeout","unread_history_first","first_unread_msg_stanza_id","unread_history_before","last_history","_wait_load_unread_history","last_archive_id","no_before","loadUnreadHistory","is_error","_load_history_feedback_timeout","showPinnedMessage","unpinMessage","pinned_msg_modal","imageOnload","$image_container","$copy_link_icon","videoOnload","initPlyrEmbedPlayer","OGPLinkOnload","locationOnload","$copy_location_div","loadLocationInChat","ol","$map_element","Map","center","proj","transform","interactions","interaction_defaults","altShiftDragRotate","doubleClickZoom","keyboard","mouseWheelZoom","shiftDragZoom","dragPan","pinchRotate","pinchZoom","layers","layer","Tile","OSM","mapCanvas","getSize","mapContext","querySelectorAll","globalAlpha","matrix","CanvasRenderingContext2D","setTransform","Path2D","getComputedStyle","translate","msSaveBlob","msToBlob","getElementById","dataURL","setTarget","$chat_state","$subtype","showChatState","_chatstate_show_timeout","_current_composing_msg","updateMentions","mention_target","is_scrolled_to_bottom","startGalleryUploadFile","startUploadFile","notifyMessage","archiveChat","is_scrolling_needed","attentionMessage","_pending_my_info","decryptImages","force","fwd_msg","$prev_message","$one_image","$collage_image","initMagnificPopup","initZoomGallery","getImagesInformation","servers","delegate","closeBtnInside","opener","$new_message","short_datetime","new_title","messages_to_save","$message_in_chat","content_view","removeMessageFromDOM","next","manageSelectedMessages","_clearing_history","dialog_message","fontcolor","hideShowCursor","is_popup","createImageGrid","template_for_images","hidden_images","is_video","is_image","is_location","is_file","avatar_id","from_id","audio_player_list","verbose_state","short_time","classes","matching_markup","exec","saved_main","searched","file_upload","ephemeral_timer_text","main","is_contact_trusted","$img_html","createImage","img_content","createImageContainer","video_content","createVideoContainer","video_el","createVideo","template_for_file_content","copied_attrs","mdi_icon_class","audio_file","audio_player","contact_avatar","file_","upload_id","loading_circle","maxHeight","maxWidth","imgHeight","imgWidth","file_loading","template_for_location_content","location_attrs","template_for_link_reference_content","link_references_attrs","youtube_url_regexp","vimeo_url_regexp","link","site_name","link_reference_chat","$img_html_forward","is_image_forward","images_forward","is_forward_video","is_forward_file","is_forward_location","fwd_markup_body","$f_message","is_fwd_voice_message","fwd_messages_count","fwd_messages_link","img_content_forward","embed_video","getDateIndicator","day_date","msg_players","msg_videos","existing_player","message_id","video_id","hideMessageAuthor","pending_avatar","data_avatar","hideFwdMessageAuthor","showFwdMessageAuthor","$fwd_message","msg_elem","$prev_msg","fwd_msg_item","is_system","is_same_sender","is_same_date","$fwd_msg_item","$prev_fwd_message","notification_text","onclick","sendMessage","legacy_body","legacy_fwd_msg","createTextMessage","idx_begin","fwd","idx_end","mention_attrs","blockquote","all_files","created","u","link_reference","property","chat_hash_id","SCE","CLIENT","msg_sending_timestamp","msgCallback","was_reconnecting","has_reconnected","_pending_time","saveForwardedMessage","forwarded_messages","onSubmit","fwd_messages","markup_references","attached_files","submitted_here","_dfd_info","new_fwd_messages","upload_service","checkContactFingerprints","addFileMessage","is_voice","new_files","file_counter","http_upload_service","deferred_all","addFileSnippets","encrypted_file","encryptFile","new_file","$slot","get_url","put_url","onFileNotUploaded","xhr","abort","onabort","upload","onprogress","percentage","loaded","onFileUploaded","cancelled_files_count","xhr_requests","msg_files_count","is_errored","arrayIndex","is_uploading","setEditedMessageAttachments","setRedactedUploadMessage","is_cancelled","oncancel","xhr_status","fakeStatus","fakeResponse","slot_response","setRequestHeader","response_text","error_status","statusText","err_status","files_","file_new_format","imgContent","video_attrs","$video_wrap_template","error_type","deleteFilesFromMessages","_chatstate_timeout","_chatstate_send_timeout","chat_state","EXTENDED_CHATSTATES","$next_msg","$old_prev_msg","is_synced","is_missed_msg","onTouchMessage","fwd_link_references","files_links","location_links","download","$plyr","no_select_message","expanded_fwd_message","quill","caret_position","participant_attrs","insertMention","img_information","images_details","$imgs","processClick","$prev_selected","$all_msgs","nextUntil","location_name","display_name","retrySendMessage","removeFileErrorMessage","chat_content_placeholder","pinned_message_panel","onClickPinnedMessage","onClickExpandedMessageLocation","expandFwdMessage","registerQuillEmbeddedsTags","Inline","import","Mention","static","paramValue","super","on_format","classList","blotName","optimize","item1","item2","t1","t2","mam_requests","deferred_mam_requests","openMention","identifier","registerMessageHandler","_msg_handler","runMAMRequests","parsePubSubNode","is_member_id","receivePubsubMessage","photo_id","member_node","b64_avatar","avatar_attrs","$mam","receiveHeadlineMessage","receiveErrorMessage","$stanza_received","$echo_msg","origin_msg_id","pending_message","$token_revoke","token_idx","settings_right","participant_version","active_right_screen","participant_msg_item","loadPreviousAfterInvalidate","$retracted_msg","retracted_msg_id","retracted_user_id","receiveStanzaId","GROUP_CHAT_INVITE_HTTP","GROUP_CHAT_INVITE","$forwarded","to_jid","to_bare_jid","to_resource","stanza_ids","$carbons","carbon_direction","forwarded_msgs","FORWARD","forwarded_msg","$forwarded_msg","$forwarded_message","$forwarded_delay","add_group_chat","ACCOUNT_ITEM","setDefaultSettings","$global_wrap","default_global_value","$membership_wrap","default_membership_value","setCustomDomain","add_chat_account_item","updateGroupJid","lower","textarea_is_empty","fixJid","createGroupChat","chat_jid","addGroupChat","xmpp_server","group_chats_support","chats_panel","active_chat","onChatAdded","onChangedReadStatus","updateChatPosition","updateAccountEncryptedChats","readAllMessages","onWindowResized","active_toolbar","hideChatsFeedback","_load_chats_timeout","previous_chat","replaceChatItem","pinned_chats","$chat_item","scrolled_top","updateScreenAllChats","force_bottom","current_scrolling","scrolled_to_bottom","unread_scroll","showGroupChats","group_chats_pinned","showChats","private_chats","private_chats_pinned","account_chats","account_chats_pinned","showArchiveChats","archive_chats","saved_chats","notificatons_chats","all_chats","all_chats_pinned","forward_panel","$cloned_item","is_match","has_matches_chats","has_matches_contacts","contact_list_item","forwardTo","setForwardedMessages","invitation_panel_view","registerClickEvents","selected_contacts","clearPanel","group_node","list_item","toggleContacts","selectAllGroup","addSelectedUsers","selected_users_count","_dfd_invitations","invitations_count","toast_text","sendInvite","showReasonWrap","addUser","itemIdx","reason_text","sendInviteMessage","onInviteError","jid_to","hide_clone","is_visible","group_roster","selected_counter","saved_chat_head","_update_oneliner_interval","updateOneLiner","hideChat","updatePlyrTitle","updatePlyrTime","updateJingleButton","tooltip","rand_idx","one_liner","deleteChat","rewrite_support","pinSavedChat","pinned_value","visible_view","playPausePlyr","stopPlyr","popupPlyr","poster","$title_elem","voip_status","openJingleMessage","chat_head","resources_view","updateArchived","pinChat","onChangedBlocked","updateGroupChatHead","updateMenu","showContactDetailsRight","showContactResources","showMembersDetails","callAttention","exportChat","updateArchiveChatsList","no_iq","is_archived_status","sendJingleMessage","getActiveScreen","active_screen","inviteUsers","exportHistory","showFingerprints","startEncryptedChat","openEncryptedChat","openRegularChat","send_media","addMedia","resolved_file","location_popup","initMap","coordinates","placemark","Overlay","Placemark","contentColor","autoPan","anchor","autoPanAnimation","placemark_my_location","overlays","enableHighAccuracy","maximumAge","pos","crd","getView","setCenter","longitude","latitude","setZoom","button_geoposition","geolocation","getCurrentPosition","custom_element_position","geoposition","control","Control","addControl","getPlacemarkPositionControl","button_placemark_position","custom_element_placemark_position","placemark_position","custom_element_show_location_name","show_location_name","send_buttom","send_address_div","send_div","custom_element_send","sLayer","Vector","Style","Circle","radius","stroke","Stroke","Fill","addLayer","SearchNominatim","polygon","reverseGeocode","house_number","road","neighbourhood","allotments","village","city","final_text","getSource","clear","geojson","GeoJSON","readFeature","dataProjection","featureProjection","getProjection","resolution","getResolutionForExtent","getGeometry","getExtent","getZoomForResolution","extent","getCenter","coordinate","getZoom","updateSize","sendLocation","closeLocationName","initializeScrollbar","destroyScrollbar","chat_bottom","mention_avatar_size","rich_textarea_wrap","bindings","enter","insertText","arrow_up","active_item","$prev_elem","arrow_down","$next_elem","arrow_left","arrow_right","modules","formats","scrollingContainer","edit_message","stopped_loading_link_reference","link_reference_exempted","currently_loaded_link_references","loading_link_reference","onChangedText","onBlockedUpdate","updateInfoInBottom","updateEphemeralTimer","replyMessages","forwardMessages","copyMessages","deleteMessages","showEditPanel","pinMessage","resetSelectedMessages","$rich_textarea","rich_textarea","$rich_textarea_wrap","$placeholder","oncut","onCut","window_onclick","$target_emoji","renderLastEmoticons","http_upload","messages_arr","focusOnInput","checkOwnFingerprints","is_scrolled_bottom","encryption_warning","unverified_counter","content_encryption_warning","onClickBottom","setOneLiner","disable","enable","moveCursorToEnd","root","lastElementChild","lastChild","send_on_enter","shiftKey","ctrlKey","displayMicrophone","displaySend","updateMarkupPanel","$ic_markup","updatePlaceholder","changeEncryption","current_height","quill_textarea","quill_current_height","text_input_height","getContents","bottom_height","_timeout_textchange","updateOpenGraphReference","updateMentionsList","mention_text","mention_item","mention_all","onMentionButtonClick","getLength","setSelection","inputMention","$participant_item","lastRange","to_caret_text","mentions_at","matchAll","mentions_plus","at_position","plus_position","mention_position","deleteText","insertEmbed","showAccountSettings","edit_msg","setEditedMessage","mention_at_regexp","mention_plus_regexp","getLeaf","domNode","unsetForwardedMessages","removeLinkReferenceByUrl","removeFileSnippetById","clipboard_data","image_from_clipboard","getAsFile","difference","request_count","link_reference_request_timestamp","request_timestamp","removeAttachments","removeAllFileSnippets","removeAllLinkReferences","stopLoadingLinkReference","removeLinkReference","uid","attached_file","typeicon","removeFileSnippet","is_upload","showLocationPopup","showMediaPopup","stopWritingVoiceMessage","$bottom_panel","writeVoiceMessage","initAudio","mozGetUserMedia","msGetUserMedia","webkitGetUserMedia","constraints","channelCount","chunks","$mic","onSuccess","start_time","end_time","mediaRecorder","encoderPath","encoderSampleRate","numberOfChannels","mic_hover","onstart","$timer_elem","$status_msg","$voice_visualizer","timerIdDot","onstop","audio_name","audio_type","ondataavailable","onError","caret_idx","savedRange","getFormat","formatText","cached_last_emoji","getLastEmoji","$last_emoticons","updateLastEmoji","$target_text","forced","emoji_item","innerText","content_concat","content_attrs","insert","mention_idx","ins","quote_start_idx","quote_end_idx","markup_ref","start_length","delta","markup_reference","editMessage","failed_files","file_check_dfd","pluck","arr_text","setText","msg_author","image_preview","$img_html_preview","fwd_images","fwd_files","fwd_locations","createPreviewImage","onShowMarkupPanel","$clicked_icon","is_panel_opened","$selected_msgs","$input_panel","$message_actions","my_msg","$msgs","dataset","pushMessagesToClipboard","text_markups","original_body","forwarded_body","groupchat_ref","forward_ref","gc_length","decrypted_msg","on_rewrite","my_msgs","symmetric_deletion","copied_messages","fwd_msg_indicator","text_message","current_date","msg_sender","is_colored","current_bottom","chat_placeholder","last_emoji","cached_avatars","group_chat_members_lists","last_emoji_icons","muted_list","archived_list","group_chat_list","avatar_list","export_history","messages_list","startLoad","is_loading","history_export_stoped","history_last_id","history_export_loaded","load_limit","loading_id","all_messages_count","handleMessage","exportFile","exportFileChoosing","chosen_format","getFile","getFileCSV","time_format","deleteTimedHandler","_get_msg_handler","addTimedHandler","handlers","h","omemo_enable_placeholder","onselectstart","metaKey","Chats","opened_chats","OpenedChats","closed_chats","ClosedChats","chats_view","ChatsView","ChatHeadContainer","chat_body","ChatBodyContainer","chat_body_placeholder","ChatBodyPlaceholderContainer","ChatBottomContainer","ChatPlaceholderView","add_group_chat_view","AddGroupChatView","searching","searching_wide","colorUpdated","toggleProperties","endDiscovering","isPropertiesVisible","discover","searchExistingGroupChats","getGroupchatService","onDiscoveringError","getGroupchatFeatures","getServerInfo","getChatsFromServer","$chat_item_html","existing_groupchat_item","searching_account_item","getChatProperties","request_iq","$iq_response","chat_properties","more_info_view","existing_groupchat_details_view","joinChat","getSearchingFields","iq_get","INDEX","parseSearchingFields","iq_result","$fields","XDATA","supported_fields","indexed_chats","iq_search","anywhere","onSearched","$chat","$property","property_name","property_value","discovering","DiscoveringView","onMessageUpdated","onMentionAdded","mentions_panel","active_mention","onMentionRemoved","updateMentionPosition","replaceMentionItem","$prev_el","$next_el","readAllMentions","contact_archive_id","previous_mention","updateContactName","contact_name","default_avatar","mentions_placeholder","Mentions","mentions_view","MentionsView","MentionsPlaceholderView","shift_pressed","shiftctrl_pressed","updateLayout","updateContainersLayout","panel_width","left_panel_width","right_panel_width","right_contact_panel_width","chat_bottom_panel_width","is_wide","is_narrow","toolbar_accounts_heigth","right_contact_panel_styles","right_contact_panel_saveable","wide","placeholders","path_acc_settings_modal","ViewPath","path_chat_head","path_chat_body","path_chat_body_placeholder","path_chat_bottom","path_group_invitation","path_enable_view","path_contact_details_right","path_contact_details_right_encrypted","path_participant_messages","path_details_participants","discovering_main","details","details_content","omemo_item","KeyHelper","SignalProtocolAddress","SessionBuilder","SessionCipher","updateDevices","d","removeSession","getDevice","getDevicesNode","_pending_devices","_dfd_devices","cb","parseUserDevices","enc_promises","aes","deviceId","ciphertext","preKey","is_own_devices","renderOwnDevices","renderDevices","updateFingerprints","updateOwnFingerprint","getMyDevices","editLabel","saveLabel","onblur","onkeydown","publishDevice","$container","f_count","old_fingerprint","addRow","getBundleInfo","getIdentityKeyPair","pubKey","padStart","trustDevice","is_session_initiated","ignoreDevice","delete_button","edit_setting","fingerprint_item","deleteDevice","fingerprints_devices","no_omemo_callback","renderTrustOnFingerprint","$warning_container","untrusted_count","device_icons","fingerprint_devices_item","getIdentity","generateIdentity","getPreKeys","publishBundle","generateIdentityKeyPair","generateRegistrationId","identityKey","registrationId","cacheIdentity","privKey","generatePreKeys","preKeysPromises","generatePreKey","generateSignedPreKey","getSignedPreKey","keyPair","signature","keyId","prekeys","getAll","prekey","priv_pk","key_pair","storePreKey","getUsedPreKeys","storeSignedPreKey","own_used_prekeys","identity","signedPreKey","cacheSignedPreKey","converted_spk","closeSession","sendOptOut","_pending_bundle","_dfd_bundle","$bundle","$spk","$pk","getRandomPreKey","cipherText","plainText","sessionCipher","decryptPreKeyWhisperMessage","hasSession","getCachedSession","storeSession","decryptWhisperMessage","getPreKey","used_prekeys","getSession","getDeviceId","cached_pk","isTrusted","processPreKey","publicKey","preKeyBundle","sessions","onDeviceIdUpdated","onOmemoDestroyed","peers","generateDeviceId","onOwnDevicesUpdated","removePreKey","cacheSession","storeSessions","deleteOwnDevice","addDevice","_pending_own_devices","_dfd_own_devices","contact_fingerprints","cacheRetractVersion","getRetractVersion","dev_id","rand","encryptedMessage","encryptedElement","myKeys","rid","kex","hasChanges","o1","o2","obj1","obj2","has_devices","device_ik","getTrusted","decryption_retry","own_trusted","contact_trusted","parseEncrypted","$encrypted","$payload","$header","keyElement","$m","encryptedData","ownPreKey","exportedKey","toBase64","publish","pks","conn_omemo","configNode","spks","removed_pk","prekeys_id_list","prekeys_length","last_id","missing_keys","used_last_id","NaN","isEmpty","used_prekeys_id_list","rec","device_attrs","createBundleNode","contact_messages","Direction","SENDING","RECEIVING","getLocalRegistrationId","defaultValue","isTrustedIdentity","direction","util","loadIdentityKey","saveIdentity","fromString","existing","getName","loadPreKey","loadSignedPreKey","removeSignedPreKey","loadSession","record","getAllSessions","removeAllSessions","omemo_enable","onOmemoChange","enableOmemo","closeOmemoPlaceholder","views","api_service","discovery","ui","g","webpackAsyncContext","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","amdO","O","chunkIds","notFulfilled","Infinity","fulfilled","j","every","n","getter","__esModule","getPrototypeOf","mode","def","current","getOwnPropertyNames","definition","defineProperty","enumerable","chunkId","promises","miniCssF","globalThis","hmd","l","script","needAttach","scripts","s","charset","nc","onScriptComplete","doneFns","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","currentScript","baseURI","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}